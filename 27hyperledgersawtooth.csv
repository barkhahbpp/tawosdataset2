Name,Title,Description,Type,Priority,Status,Creation_Date,Estimation_Date,Story_Point
"Hyperledger Sawtooth","Compilation warnings in validator","    * Steps to reproduce the issue    Run sawtooth (I'm doing docker-compose up but any invocation will do it) and observe the output.  When the validator starts it builds the rust and shows errors (below).         * Actual results        {{sawtooth-validator |    Compiling sawtooth_validator v1.3.0 (/project/sawtooth-core/sawtooth-core/validator)}}    {{sawtooth-validator | warning: variable does not need to be mutable}}    {{sawtooth-validator |    --> src/journal/block_manager.rs:818:17}}    {{sawtooth-validator |     |}}    {{sawtooth-validator | 818 |             let mut blockstore = blockstore_by_name}}    {{sawtooth-validator |     |                 ----^^^^^^^^^^}}    {{sawtooth-validator |     |                 |}}    {{sawtooth-validator |     |                 help: remove this `mut`}}    {{sawtooth-validator |     |}}    {{sawtooth-validator |     = note: #[warn(unused_mut)] on by default}}    {{sawtooth-validator | }}    {{sawtooth-validator | warning: variable does not need to be mutable}}    {{sawtooth-validator |    --> src/state/merkle.rs:311:21}}    {{sawtooth-validator |     |}}    {{sawtooth-validator | 311 |                 let mut parent = path_map}}    {{sawtooth-validator |     |                     ----^^^^^^}}    {{sawtooth-validator |     |                     |}}    {{sawtooth-validator |     |                     help: remove this `mut`}}    {{sawtooth-validator | }}    {{sawtooth-validator | warning: variable does not need to be mutable}}    {{sawtooth-validator |    --> src/state/merkle.rs:361:17}}    {{sawtooth-validator |     |}}    {{sawtooth-validator | 361 |             let mut successors = change_log.mut_successors();}}    {{sawtooth-validator |     |                 ----^^^^^^^^^^}}    {{sawtooth-validator |     |                 |}}    {{sawtooth-validator |     |                 help: remove this `mut`}}    {{sawtooth-validator | }}    {{sawtooth-validator | warning: variable does not need to be mutable}}    {{sawtooth-validator |    --> src/state/merkle.rs:742:29}}    {{sawtooth-validator |     |}}    {{sawtooth-validator | 742 |             Some(Value::Map(mut child_map)) => {}}    {{sawtooth-validator |     |                             ----^^^^^^^^^}}    {{sawtooth-validator |     |                             |}}    {{sawtooth-validator |     |                             help: remove this `mut`}}    {{sawtooth-validator | }}    {{sawtooth-validator |     Finished release [optimized] target(s) in 2m 23s}}         * Expected results    A clean build        It's trivial to fix (the clues are above :) ) but I want a bug number to lodge the PR against.    Note I'm calling this 'ow' rather than 'lowest' because I actually think we should be building with warnings-as-errors",Bug,Low,Backlog,"2019-07-16 17:00:29","2019-07-16 17:00:29",0
"Hyperledger Sawtooth","Change Ubuntu procs to use user key instead of validator key","In the App Dev and Sys Admin Guides, the Ubuntu single-node and multi-node procedures create the genesis block with the validator's key. The preferred method is to use the user's key.",Improvement,Medium,Complete,"2019-07-16 16:40:46","2019-07-16 16:40:46",2
"Hyperledger Sawtooth","Docs: Fix genesis block key info & notes","Correct info on key needed to change settings - it's not necessarily the validator key.",Improvement,Medium,Complete,"2019-07-12 15:38:05","2019-07-12 15:38:05",1
"Hyperledger Sawtooth","Delete App Dev AWS procedure from Chime & master docs","The AWS Sawtooth version is currently 1.1.4.  There are no (known) plans to update it to Chime/1.2. Remove Using AWS for a Single Sawtooth Node  from the 1.2 and master docs.   * [https://sawtooth.hyperledger.org/docs/core/nightly/1-2/app_developers_guide/aws.html]   * [https://sawtooth.hyperledger.org/docs/core/nightly/master/app_developers_guide/aws.html]         Note: The Bumper/1.1 docs will continue to include the 1.1 version of the AWS procedure Using AWS with Sawtooth.   * Release 1.1.5: [https://sawtooth.hyperledger.org/docs/core/releases/1.1.5/app_developers_guide/aws.html]   * Nightly 1.1 doc build: [https://sawtooth.hyperledger.org/docs/core/nightly/1-1/app_developers_guide/aws.html]",Improvement,High,Complete,"2019-07-03 18:59:18","2019-07-03 18:59:18",1
"Hyperledger Sawtooth","Make doc corrections for post-chime doc update",,Improvement,Medium,Backlog,"2019-06-19 19:13:30","2019-06-19 19:13:30",2
"Hyperledger Sawtooth","Improve Sawtooth docs web page","Reorganize and reformat the Sawtooth Docs web page to improve usability and appearance.  [https://sawtooth.hyperledger.org/docs/]  [https://coreos.com/tectonic/docs/latest/]    Clarify the doc links with respect to releases and make information easier to find (fewer old STL releases on the top page, more products above the fold, clarify what nightly master means, etc.). Consider putting very old releases on a subpage to reduce clutter and confusion.    Determine a best-practices design by evaluating other doc pages, such as these examples:  [https://docs.geoserver.org|https://docs.geoserver.org/]   [https://coreos.com/tectonic/releases/  https://coreos.com/docs/   |https://coreos.com/tectonic/releases/] [http://docs.h2o.ai |http://docs.h2o.ai/](see Sparkling Water)  [https://gradle.org/releases/]   [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/]   [https://developer.openstack.org|https://developer.openstack.org/]              See also STL-1644.     ",Improvement,Medium,"In Progress","2019-06-19 19:08:52","2019-06-19 19:08:52",2
"Hyperledger Sawtooth","Fix 'latest' version label in Sawtooth doc TOC","Fix the confusion between latest release (link on sawtooth.hyperledger.org/docs) and Latest version label in the doc TOC.   * When you click on Latest Release from the Docs web page, the TOC shows the release number. This is a good thing.   * When you click on Nightly master from the Docs web page, the TOC shows latest. This is confusing.    Consider a terminology change for the nightly master link and version label, along with including the word Draft in the label.    For an example, see the Sawtooth doc links at https://sawtooth.hyperledger.org/docs/",Improvement,Medium,"In Progress","2019-06-19 18:55:35","2019-06-19 18:55:35",1
"Hyperledger Sawtooth","Edit Chime release announcement (blog post)",,Improvement,Medium,Backlog,"2019-06-19 18:28:28","2019-06-19 18:28:28",1
"Hyperledger Sawtooth","Edit Chime release notes",,Improvement,Medium,Backlog,"2019-06-19 18:27:30","2019-06-19 18:27:30",1
"Hyperledger Sawtooth","Rename PoET simulator to PoET CFT","Change PoET-sim and PoET simulator to PoET CFT (with explanation of what CFT means). This change should be made throughout the Sawtooth core docs, Sawtooth website, FAQ, and Hyperledger Sawtooth pages (wiki, etc.).     Note that the glossary must continue to include an entry for PoET simulator/PoET-sim, because it's used in blog posts, announcements, on chat.hyperledger.org, and elsewhere.    Also consider whether PoET-SGX should be renamed or also called PoET BFT.  In any case, the docs need a better description of the CFT/BFT differences in PoET 1.0.               ",Improvement,Low,Backlog,"2019-06-19 18:25:48","2019-06-19 18:25:48",3
"Hyperledger Sawtooth","Update CXX SDK to bionic",,"New Feature",Medium,Backlog,"2019-06-18 16:34:19","2019-06-18 16:34:19",2
"Hyperledger Sawtooth","INVALID: Add Identity TP info/steps to App Dev Guide network procs","The Identity transaction processor is needed in the example network procedures in the App Dev Guide. Clarify info in all network procedures (Docker, Kubernetes, and Ubuntu). In the Ubuntu proc, add the steps to start, stop, and configure the Identity TP.    Note: The problem was discovered during Chime testing.     ",Bug,High,Complete,"2019-06-18 00:48:41","2019-06-18 00:48:41",1
"Hyperledger Sawtooth","Doc: Double-quote each key in sawtooth.consensus.pbft.members","Add new info to the App Dev and Sys Admin Guides: Each key in sawtooth.consensus.pbft.members must be surrounded with double quotes. If the setting is changed on the command line (with sawset proposal create), you must use single quotes around the entire string to protect the double quotes from the shell.    Note: This issue was discovered during Chime testing.",Bug,Medium,Complete,"2019-06-17 23:49:11","2019-06-17 23:49:11",1
"Hyperledger Sawtooth","SysAdmin Guide: Add ownership + permission info to config file topics","The topics that describe how to copy or download the example config file templates should provide the required/recommended ownership and perm info: Owner root, group sawtooth, and permissions 640.    Note: The need for this info was discovered during Chime testing.          ",Improvement,Medium,Complete,"2019-06-17 23:10:30","2019-06-17 23:10:30",1
"Hyperledger Sawtooth","Write initial Which Consensus? topic","Create a single topic that consolidates and summarizes consensus information (requirements, settings, tips, etc.) for devmode, PoET, PBFT, and Raft. Ideally, this topic should explain the pros/cons and best-practice tips for when to use each type of consensus.    This high-level topic may require several rounds of reviews and rewrites to fine-tune the information. This story covers the initial version and first round of reviews.",Improvement,Medium,Complete,"2019-06-04 21:55:35","2019-06-04 21:55:35",2
"Hyperledger Sawtooth","Add consensus endpoint to Ubuntu NW proc in App Dev Guide","The Prerequisites section in Using Ubuntu for a Sawtooth Test Network needs to include the ``consensus`` bind setting and mention the default (5050).    [https://sawtooth.hyperledger.org/docs/core/nightly/master/app_developers_guide/ubuntu_test_network.html#prerequisites]",Improvement,Medium,Complete,"2019-06-04 18:40:07","2019-06-04 18:40:07",1
"Hyperledger Sawtooth","Rewrite sawtooth-sdk-go master Jenkinsfile in declarative syntax and enable nightly scheduled builds","This requires resolution of the current issue blocking the Go SDK",Improvement,Medium,Complete,"2019-06-03 14:29:19","2019-06-03 14:29:19",0
"Hyperledger Sawtooth","Describe consensus interface in Architecture guide","Provide an overview of the Sawtooth consensus interface, with a concise summary of the necessary architecture-level details.    The App Dev Guide should  have an a link to this information, plus (if appropriate) appdev-level information (see STL-1551 and STL-1553).",Improvement,Medium,Backlog,"2019-05-23 20:45:47","2019-05-23 20:45:47",1
"Hyperledger Sawtooth","Document new PBFT steps for Kubernetes",,Improvement,High,Complete,"2019-05-21 20:45:32","2019-05-21 20:45:32",1
"Hyperledger Sawtooth","Add consensus engine info to Sysadmin + App Dev Guides","Provide admin-specific information about the consensus interface for the System Administrator's Guide, with links to the dynamic consensus overview in the Introduction (and other consensus-related information as appropriate).  This info should summarize how to choose and configure a consensus engine.    For the App Dev Guide, add links to this information.    ------------------------    PREVIOUS CONTENT    Provide appdev-specific information about the consensus interface for the Application Developer's Guide, with links to the consensus interface topic in the Architecture Guide.  For the App Dev Guide, this info should summarize how to choose and configure a consensus engine.    ------------------------    ORIGINAL CONTENT    Describe new consensus interface (API, consensus engines-, SDKs-) based on the RFC, presentations, and other info sources.    This information is needed for the PBFT documentation: must briefly define/explain the Sawtooth consensus interface in once place, so that the consensus engine steps in the procedures can link to this information.    Consider using the current Dynamic Consensus Algorithm section in the Sawtooth introduction, and replacing the intro's section with a shorter summary.    Also document consensus fallback mechanism for existing chains on networks upgraded from 1.0. Implementing PR: [https://github.com/hyperledger/sawtooth-core/pull/2056]",Improvement,Medium,Complete,"2019-05-21 15:57:29","2019-05-21 15:57:29",2
"Hyperledger Sawtooth","Fix egregious terminology inconsistencies in Sawtooth docs","Update key terminology that has shifted since the epoch:   * Sawtooth node (not validator, because that's a component, not the whole node)   * -PoET CFT (vs PoET simulator)-   * PoET Validator Registry (not Validator Registry).   * Devmode (not Dev mode, dev mode, or devmode).",Improvement,Medium,Complete,"2019-05-21 15:49:38","2019-05-21 15:49:38",2
"Hyperledger Sawtooth","update run_docker_tests script to take multiple arguments","This is required for more complex tests with compose files from multiple repos.","New Feature",Medium,Complete,"2019-05-20 21:15:08","2019-05-20 21:15:08",1
"Hyperledger Sawtooth","Set up osx build server for sdk-swift","We can build the documentation on linux, but full builds require an OSX machine for now.",Task,Medium,Backlog,"2019-05-20 20:17:52","2019-05-20 20:17:52",3
"Hyperledger Sawtooth","Test story for Multi-project board","See if this stories is properly put into the multi-project backlong",Improvement,Medium,Complete,"2019-05-15 18:42:08","2019-05-15 18:42:08",3
"Hyperledger Sawtooth","poet-sgx use the version 2 of remote attestation protocol which is not supported anymore by Intel","In the poet-sgx consensus, during the remote attestation protocol, the requests for get_signature_revocation_lists and post_verify_attestation are made for the v2 of the attestation protocol, which is not supported anymore. A simple fix is to change the path by v3 in order to use the correct version.",Bug,Medium,Complete,"2019-04-29 10:33:14","2019-04-29 10:33:14",1
"Hyperledger Sawtooth","Update config steps for SGX proc in Sys Admin Guide","Make changes discovered in STL-1434.",Improvement,Medium,Complete,"2018-09-27 09:09:27","2018-09-27 09:09:27",1
"Hyperledger Sawtooth","Write crash fault tolerance test for Raft","Write a shell script that starts up a Raft network with workload, crashes a node, starts it back up, and checks that it comes back into consensus","New Feature",Medium,Complete,"2018-09-21 16:00:30","2018-09-21 16:00:30",1
"Hyperledger Sawtooth","Implement applied state handling for Raft","Extend the storage trait and implementations to save the index of the raft entry that corresponds to the last block that was committed, and set the applied attribute of the Raft config ([https://docs.rs/raft/0.3.1/raft/struct.Config.html#structfield.applied)] to this value when restarting.","New Feature",Medium,Complete,"2018-09-19 20:37:12","2018-09-19 20:37:12",1
"Hyperledger Sawtooth","Create Outline for Documenting Configuration and Deployment of Raft","Create an initial outline indicating the organization and items needed for documenting the configuration and deployment for Raft",Improvement,Medium,Complete,"2018-09-17 18:55:08","2018-09-17 18:55:08",1
"Hyperledger Sawtooth","Update Configuring Permissions in Sys Admin Guide",,Improvement,Medium,Complete,"2018-09-14 21:43:29","2018-09-14 21:43:29",3
"Hyperledger Sawtooth","Correct + reorg non-SGX install/config proc in Sys Admin Guide","Collect the existing (separate) sections into one procedure.    Reorganize into the correct order.    Add missing steps: Generating keys, configuring services, etc. (Other JIRAs cover the missing steps for Sawtooth config and new consensus engine info.)",Improvement,Medium,Complete,"2018-09-14 00:33:02","2018-09-14 00:33:02",5
"Hyperledger Sawtooth","Optimize the Duplicates & Dependency Check Using Memoization","Store the txns that have already been looked up in a fork as an optimization ",Improvement,Medium,Backlog,"2018-09-13 21:05:33","2018-09-13 21:05:33",2
"Hyperledger Sawtooth","Optimize Duplicates & Dependency Check Using TXNs in Block","The naive algorithim determines for one txns whether it satisfies the duplicates & dependency check. The optimizations in this task would do all of this at once.",Improvement,Medium,Complete,"2018-09-13 21:04:14","2018-09-13 21:04:14",2
"Hyperledger Sawtooth","Integrate dynamic membership tests with Docker",,"New Feature",Medium,Complete,"2018-09-13 19:37:11","2018-09-13 19:37:11",2
"Hyperledger Sawtooth","Implement support for removing nodes",,"New Feature",Medium,Complete,"2018-09-13 19:36:37","2018-09-13 19:36:37",1
"Hyperledger Sawtooth","Implement support for membership changes after blocks are published",,"New Feature",Medium,Complete,"2018-09-13 19:35:35","2018-09-13 19:35:35",2
"Hyperledger Sawtooth","Determine how to handle SGX procedure in Sys Admin Guide","Research the existence (or lack) of a consensus engine for PoET SGX and update or remove the SGX procedure accordingly.",Improvement,Medium,Complete,"2018-09-13 18:30:47","2018-09-13 18:30:47",1
"Hyperledger Sawtooth","Add new consensus steps to SGX + non-SGX procedures","* Download and install consensus engine(s)   * Configure consensus in validator config file (new bind options)   * Start consensus engine with other Sawtooth components     ",Improvement,Medium,Complete,"2018-09-13 17:05:27","2018-09-13 17:05:27",1
"Hyperledger Sawtooth","Update config steps for non-SGX proc in Sys Admin Guide","Determine the necessary config steps (based on the ref info config section) and add them to the SGX and non-SGX procedures.    Rework the existing Configuring Sawtooth section to clarify that it's reference information; move it to the end of the chapter.",Improvement,Medium,Complete,"2018-09-13 16:59:20","2018-09-13 16:59:20",3
"Hyperledger Sawtooth","Clarify Apache setup proc in 'Using a Proxy Server [for] REST API'","Edit content to clarify information.         Note: The technical updates are covered in STL-1447:   * Change paths from `/tmp` to a less temporary location.   * For password-file-creation step, explain how the password is hashed.   * For `openssl` step, add a link to `letsencrypt.org`.   * Change Apache and Sawtooth component startup steps to use `systemctl`.     ",Improvement,Medium,Complete,"2018-09-13 16:44:13","2018-09-13 16:44:13",1
"Hyperledger Sawtooth","Create outline for SGX & non-SGX sys admin procedures","Reorganize the sysadmin procedures to clarify which sections and steps belong together. Include the same basics steps for the generic (non-SGX) procedure as in the current SGX procedure. Add new steps to both procedures for missing information. ",Improvement,Medium,Complete,"2018-09-11 23:08:37","2018-09-11 23:08:37",2
"Hyperledger Sawtooth","Create tooling to publish sawtooth-raft docker image",,Improvement,Medium,Complete,"2018-09-10 19:10:09","2018-09-10 19:10:09",2
"Hyperledger Sawtooth","Prepare to publish sawtooth-raft debs",,Improvement,Medium,Complete,"2018-09-10 19:06:41","2018-09-10 19:06:41",2
"Hyperledger Sawtooth","Optimize duplicate/dependency checking algorithm based on runtime characteristics",,Improvement,Medium,Complete,"2018-09-07 18:27:30","2018-09-07 18:27:30",0
"Hyperledger Sawtooth","Measure runtime characteristics of duplicate/dependency algorithm and determine best path for optimization",,Improvement,Medium,Complete,"2018-09-07 18:26:31","2018-09-07 18:26:31",2
"Hyperledger Sawtooth","Implement naive algorithm for checking duplicates/dependencies without depending on the block store remaining constant",,Improvement,Medium,Complete,"2018-09-07 18:24:24","2018-09-07 18:24:24",3
"Hyperledger Sawtooth","Implement tooling for easier deployment of raft nodes",,Improvement,Medium,Complete,"2018-09-06 20:32:55","2018-09-06 20:32:55",3
"Hyperledger Sawtooth","Shut down raft engine when its membership is removed",,Improvement,Medium,Complete,"2018-09-06 20:31:21","2018-09-06 20:31:21",1
"Hyperledger Sawtooth","Suspend block publishing while membership is being changed",,Improvement,Medium,Complete,"2018-09-06 20:29:33","2018-09-06 20:29:33",1
"Hyperledger Sawtooth","Implement membership changes",,Improvement,Medium,Complete,"2018-09-06 20:29:01","2018-09-06 20:29:01",3
"Hyperledger Sawtooth","Update sysadmin guide",,Task,Medium,Complete,"2018-09-05 15:24:47","2018-09-05 15:24:47",5
"Hyperledger Sawtooth","Read through sysadmin guide and identify inaccuracies ",,Task,Medium,Complete,"2018-09-05 15:23:39","2018-09-05 15:23:39",1
"Hyperledger Sawtooth","Prioritize and schedule doc changes for Sys Admin update",,Improvement,Medium,Complete,"2018-09-04 22:44:09","2018-09-04 22:44:09",1
"Hyperledger Sawtooth","Compare SGX and non-SGX procedures in Sys Admin Guide","Work with sysadmin and Sawtooth experts to determine which steps in the SGX procedure are valid for a non-SGX Sawtooth node.",Improvement,Medium,Complete,"2018-09-04 22:28:13","2018-09-04 22:28:13",1
"Hyperledger Sawtooth","Gather changes for Sys Admin Guide update","Work with sysadmin experts to identify errors, out-of-date information, and areas of confusion in the current System Administrator's Guide.",Improvement,Medium,Complete,"2018-09-04 22:21:00","2018-09-04 22:21:00",5
"Hyperledger Sawtooth","Write configuration and deployment section ","Describe how to use settings txns",Improvement,Medium,Complete,"2018-09-04 20:36:20","2018-09-04 20:36:20",3
"Hyperledger Sawtooth","Add doc-builds to Raft-CI",,Improvement,Medium,Complete,"2018-09-04 20:35:57","2018-09-04 20:35:57",1
"Hyperledger Sawtooth","Publish documentation to Sawtooth docs page",,Improvement,Medium,Complete,"2018-09-04 20:35:49","2018-09-04 20:35:49",1
"Hyperledger Sawtooth","Write Initial Intro Section for Raft Documentation",,Improvement,Medium,Complete,"2018-09-04 20:35:19","2018-09-04 20:35:19",1
"Hyperledger Sawtooth","Prepare Raft demo","This will result in a demo of Raft that will be given to the HL Sawtooth community (likely as a HL Sawtooth Tech Forum).",Improvement,Medium,Complete,"2018-09-04 20:33:07","2018-09-04 20:33:07",3
"Hyperledger Sawtooth","Research how configurations changes work in existing library and produce plan to integrate with Sawtooth","This will result in implementation stories from the plan.",Improvement,Medium,Complete,"2018-09-04 20:32:19","2018-09-04 20:32:19",2
"Hyperledger Sawtooth","Determine how large the critical section can be when checking for batch/transaction dependencies/duplicates","# Checking all batches in a block (biggest)   # Checking a single batch in a block   # Checking a single transaction in a block   # No critical section (smallest)    Upon the completion of this task, further stories will be made.",Improvement,Medium,Complete,"2018-09-04 20:06:04","2018-09-04 20:06:04",1
"Hyperledger Sawtooth","Decide where and how to store persisted extended batch and transaction indices","* Can we continue to use the block store's index?    * Or do we need a new index, possibly CoW or containing only data up to the common ancestor of all forks?",Improvement,Medium,Complete,"2018-09-04 20:05:34","2018-09-04 20:05:34",1
"Hyperledger Sawtooth","Decide where to store in-memory extended batch and transaction indices","Research activity to determine if this should be in the block manager, or some separate data structure that gets updated with the block manager.    The decisions will be documented at the completion of this story that will result subsequent stories for this epic.",Improvement,Medium,Complete,"2018-09-04 20:04:29","2018-09-04 20:04:29",1
"Hyperledger Sawtooth","Draw picture of multi-node Kubernetes environment",,"New Feature",Medium,Complete,"2018-08-13 17:25:13","2018-08-13 17:25:13",2
"Hyperledger Sawtooth","Write new Kubernetes procedure for multi-node install",,"New Feature",High,Complete,"2018-08-13 17:20:45","2018-08-13 17:20:45",5
"Hyperledger Sawtooth","Write new Kubernetes procedure for single-node install",,"New Feature",High,Complete,"2018-08-13 17:19:27","2018-08-13 17:19:27",5
"Hyperledger Sawtooth","Integrate Chain Controller/Block Scheduler into Block Validator",,Improvement,Medium,Complete,"2018-08-07 15:27:06","2018-08-07 15:27:06",2
"Hyperledger Sawtooth","Port Block Validator Non-TXN Checks to Rust",,Improvement,Medium,Complete,"2018-08-06 20:41:23","2018-08-06 20:41:23",2
"Hyperledger Sawtooth","Port Block Validator TXN Checks to Rust",,Improvement,Medium,Complete,"2018-08-06 20:41:08","2018-08-06 20:41:08",2
"Hyperledger Sawtooth","Research ThreadPool","The outcome of this activity is to present options and recommendation for using an external library to use with the block validator for decision ",Improvement,Medium,Complete,"2018-08-06 20:40:38","2018-08-06 20:40:38",1
"Hyperledger Sawtooth","Complete Settings View Factory Implementation",,Improvement,Medium,Complete,"2018-08-06 20:40:17","2018-08-06 20:40:17",2
"Hyperledger Sawtooth","Port Chain Commit State to Rust","This is needed for Non-TXN Checks ",Improvement,Medium,Complete,"2018-08-06 20:39:57","2018-08-06 20:39:57",2
"Hyperledger Sawtooth","Port Block Scheduler to Rust","This is needed for Non-TXN Checks to Rust",Improvement,Medium,Complete,"2018-08-06 20:39:39","2018-08-06 20:39:39",3
"Hyperledger Sawtooth","Testing Elections & Leadership",,Improvement,Medium,Complete,"2018-08-06 17:30:52","2018-08-06 17:30:52",3
"Hyperledger Sawtooth","Create Raft LR Performance & Limitation Report",,Improvement,Medium,Complete,"2018-08-06 17:28:26","2018-08-06 17:28:26",3
"Hyperledger Sawtooth","Documenting Performance Results and Limitations",,Improvement,Medium,Complete,"2018-08-06 17:27:39","2018-08-06 17:27:39",5
"Hyperledger Sawtooth","Execute Initial LR Network",,Improvement,Medium,Complete,"2018-08-06 17:25:59","2018-08-06 17:25:59",3
"Hyperledger Sawtooth","Research Kubernetes Set-up ",,Improvement,Medium,Complete,"2018-08-06 17:17:36","2018-08-06 17:17:36",5
"Hyperledger Sawtooth","Draw picture of single-node Kubernetes environment",,"New Feature",Medium,Complete,"2018-08-06 03:54:00","2018-08-06 03:54:00",2
"Hyperledger Sawtooth","Research Kubernetes doc requirements and tasks for new procedures",,"New Feature",High,Complete,"2018-08-02 21:03:39","2018-08-02 21:03:39",5
"Hyperledger Sawtooth","Update Injecting Batches ... in Architecture guide",,Improvement,Medium,Complete,"2018-07-26 06:43:36","2018-07-26 06:43:36",1
"Hyperledger Sawtooth","Update Validator Network in Architecture doc",,Improvement,Medium,Complete,"2018-07-24 17:01:39","2018-07-24 17:01:39",1
"Hyperledger Sawtooth","Remove low-level details from Transactions and Batches","Rewrite chapter to minimize low-level information: Replace the proto code with links to the appropriate files in the repo.  Remove other low-level details and/or replace with architecture-level info.",Improvement,Low,Backlog,"2018-07-23 23:14:57","2018-07-23 23:14:57",1
"Hyperledger Sawtooth","Fix title of Genesis Operation","Change to The Genesis Process (the word operation is confusing).",Improvement,Medium,Complete,"2018-07-23 23:09:20","2018-07-23 23:09:20",1
"Hyperledger Sawtooth","Update Sawtooth Architecture picture with consensus changes","The consensus changes (consensus engine and proxy) affect this Sawtooth architecture picture: https://sawtooth.hyperledger.org/docs/core/nightly/master/_images/arch-sawtooth-overview.svg",Improvement,Medium,Complete,"2018-07-18 23:46:24","2018-07-18 23:46:24",1
"Hyperledger Sawtooth","Update Architecture overview picture",,Improvement,Medium,Complete,"2018-07-18 23:05:19","2018-07-18 23:05:19",1
"Hyperledger Sawtooth","Update Genesis Operation in Architecture doc",,Improvement,Medium,Complete,"2018-07-18 22:50:49","2018-07-18 22:50:49",2
"Hyperledger Sawtooth","Avoid broken links for file renames/deletes in Sawtooth doc","Research, scope, and implement a way to avoid broken links when changing file names and internal links (section title) in updated/reorganized doc content.  For example, if a doc file is renamed (when the title changes) or deleted, anyone who bookmarked that topic should not get a broken link. Instead, they should be redirected to the replacement file or next best option in the doc (which could be the intro/contents page).    This task requires technical help from someone who understands how sawtooth.hyperledger.org/docs is set up.",Improvement,Medium,Backlog,"2018-07-16 23:47:16","2018-07-16 23:47:16",2
"Hyperledger Sawtooth","Deploy LR Network",,Improvement,Medium,Complete,"2018-07-16 14:44:09","2018-07-16 14:44:09",1
"Hyperledger Sawtooth","LR Integration Testing",,Improvement,Medium,Complete,"2018-07-16 14:43:03","2018-07-16 14:43:03",2
"Hyperledger Sawtooth","Retitle and move Architecture chapter",,Improvement,Medium,Complete,"2018-07-12 23:06:49","2018-07-12 23:06:49",1
"Hyperledger Sawtooth","Update REST API in the Architecture chapter",,Improvement,Medium,Complete,"2018-07-12 23:05:47","2018-07-12 23:05:47",1
"Hyperledger Sawtooth","Remove DD content from Permissioning Requirements",,Improvement,Medium,Complete,"2018-07-12 23:04:42","2018-07-12 23:04:42",1
"Hyperledger Sawtooth","Fix Journal section: Redo intro, delete obsolete content","This includes deleting the Journal chapter itself.  The remaining (valid) sections will be reorganized and possibly retitled (covered in a separate story).",Improvement,Medium,Complete,"2018-07-12 23:02:41","2018-07-12 23:02:41",3
"Hyperledger Sawtooth","SUPERSEDED: Document consensus API - new arch doc & engine steps","Describe the new consensus API and consensus engines.   * Write a new Consensus Interface section for the Architecture Guide   * Update the consensus-related steps in the Application Developer's Guide and System Administrator's Guide.     Source information:   * Hyperledger blog post: [https://www.hyperledger.org/blog/2018/05/24/one-year-later-interoperability-standardization-shine-at-consensus]    * <USER>s presentation, Sawtooth Consensus engines (for AMS hackathon 2018)   * Consensus RFC: [https://github.com/hyperledger/sawtooth-rfcs/pull/4] ",Improvement,Medium,Complete,"2018-07-12 21:05:29","2018-07-12 21:05:29",5
"Hyperledger Sawtooth","Correct Transactions and Batches diagram","Update with the current contents of protos/batch.proto and protos/transaction.proto.",Improvement,Medium,Complete,"2018-07-12 20:34:15","2018-07-12 20:34:15",1
"Hyperledger Sawtooth","Add reference counting increments and decrements to BlockManager Iterators","When a block is returned by next in the Iterator, the next block should have its reference count increased so that it cannot be unreffed. This guarantees that the Iterator has all the blocks that are going to be iterated through without having to access all of them at once.","New Feature",Medium,Complete,"2018-07-11 18:24:30","2018-07-11 18:24:30",2
"Hyperledger Sawtooth","Have single store of reference counts in BlockManager","Instead of the BlockManager having Anchors and RefBlock and that blocks in the main cache or Pool are RefBlocks, there should be a single container of references and references and blocks are stored separately.","New Feature",Medium,Complete,"2018-07-11 17:26:34","2018-07-11 17:26:34",2
"Hyperledger Sawtooth","Implement sawadm compact command","Implement a new command in sawadm called:    {{sawadm database compact}}    This command will call the lmdb-zero [copy|https://docs.rs/lmdb-zero/0.4.4/lmdb_zero/struct.Environment.html#method.copy] function on the merkle database with the COMPACT flag to free up space in the database after pruning","New Feature",Medium,Backlog,"2018-07-10 22:16:18","2018-07-10 22:16:18",2
"Hyperledger Sawtooth","Integrate BlockManager into Completer",,Improvement,Medium,Complete,"2018-07-06 16:51:52","2018-07-06 16:51:52",3
"Hyperledger Sawtooth","Integrate BlockManger into BlockPublisher/BatchInjector",,Improvement,Medium,Complete,"2018-07-06 16:49:20","2018-07-06 16:49:20",2
"Hyperledger Sawtooth","Integrate BlockManager into ChainController/BlockValidator",,Improvement,Medium,Complete,"2018-07-06 16:48:57","2018-07-06 16:48:57",3
"Hyperledger Sawtooth","Implement Rust/Python FFI for Block Manager",,Improvement,Medium,Complete,"2018-07-06 16:48:09","2018-07-06 16:48:09",2
"Hyperledger Sawtooth","Implement BlockStore trait for existing block_store/commit store",,Improvement,Medium,Complete,"2018-07-06 16:42:32","2018-07-06 16:42:32",2
"Hyperledger Sawtooth","Discuss identified client code requirements","Additional stories will be created in resolution of the items identified by STL-1334",Improvement,Medium,Complete,"2018-07-06 16:40:01","2018-07-06 16:40:01",1
"Hyperledger Sawtooth","Identify client code requirements not met by block manager",,Improvement,Medium,Complete,"2018-07-06 16:39:27","2018-07-06 16:39:27",1
"Hyperledger Sawtooth","Verify existing implementation meets design spec and socialize deviations","Update implementation based on discussion",Improvement,Medium,Complete,"2018-07-06 16:38:24","2018-07-06 16:38:24",1
"Hyperledger Sawtooth","Persistent Storage-Implement SawtoothStorage trait with persistent storage",,Improvement,Medium,Complete,"2018-07-03 15:50:42","2018-07-03 15:50:42",3
"Hyperledger Sawtooth","Persistent Storage-Replace hard-coded MemStorage in ST Raft with new SawtoothStorage trait",,Improvement,Medium,Complete,"2018-07-03 15:48:43","2018-07-03 15:48:43",2
"Hyperledger Sawtooth","Syslog-Implement logging configuration","TOML preferred, but be consistent with existing decisions.",Improvement,Medium,Complete,"2018-07-03 15:40:46","2018-07-03 15:40:46",3
"Hyperledger Sawtooth","Syslog-Identify Library to use","Research the existing, then drive a decision.",Improvement,Medium,Complete,"2018-07-03 15:39:48","2018-07-03 15:39:48",2
"Hyperledger Sawtooth","Packaging-Integrate with LR tools",,Improvement,Medium,Complete,"2018-07-03 15:39:33","2018-07-03 15:39:33",2
"Hyperledger Sawtooth","Packaging-systemd service",,Improvement,Medium,Complete,"2018-07-03 15:39:18","2018-07-03 15:39:18",3
"Hyperledger Sawtooth",Packaging-Deb,,Improvement,Medium,Complete,"2018-07-03 15:38:56","2018-07-03 15:38:56",3
"Hyperledger Sawtooth","Persistent Storage-implement raft-rs storage interface",,Improvement,Medium,Complete,"2018-07-03 15:38:36","2018-07-03 15:38:36",3
"Hyperledger Sawtooth","Persistent Storage-Decision on Approach","Decide on how to persist (using a database (LMDB) or a consensus API (attach_block())?)",Improvement,Medium,Complete,"2018-07-03 15:35:09","2018-07-03 15:35:09",2
"Hyperledger Sawtooth","Organize and schedule work for Architecture doc update",,Improvement,Medium,Complete,"2018-07-02 21:42:11","2018-07-02 21:42:11",1
"Hyperledger Sawtooth","Prioritize changes for Architecture doc update","Includes time to research any questions or issues from the gather changes task.",Improvement,Medium,Complete,"2018-07-02 21:41:01","2018-07-02 21:41:01",3
"Hyperledger Sawtooth","Gather changes for Architecture doc update",,Improvement,High,Complete,"2018-07-02 21:39:21","2018-07-02 21:39:21",5
"Hyperledger Sawtooth","LR Testing & BugFix",,Improvement,Medium,Complete,"2018-06-26 16:13:09","2018-06-26 16:13:09",5
"Hyperledger Sawtooth","LR Testing & BugFix",,"New Feature",Medium,Complete,"2018-06-26 16:12:08","2018-06-26 16:12:08",5
"Hyperledger Sawtooth","Write troubleshooting content",,Improvement,Medium,Complete,"2018-06-24 01:57:47","2018-06-24 01:57:47",1
"Hyperledger Sawtooth","Do finishing touches for 201 course content","Complete the last 10% of the project, including:    - Finish all TO DO items    - Handle review comments and changes    - Provide final screen snaps and example output    - Check links and fix formatting problems    - Gather image source and open source right to use information for delivery with the course content          ","New Feature",Medium,Complete,"2018-06-22 17:50:24","2018-06-22 17:50:24",3
"Hyperledger Sawtooth","Document the process for generating the Curve ZMQ key pair","Add details on how to generate a new key pair for the Curve ZMQ to ensure network encryption.",Improvement,Medium,Complete,"2018-06-14 21:19:49","2018-06-14 21:19:49",2
"Hyperledger Sawtooth","Missing information: Setting on-chain permissions for a transaction family","Restore the 1.0.4 information in Configuring the List of Transaction Families:   [https://sawtooth.hyperledger.org/docs/core/releases/latest/app_developers_guide/docker.html#configuring-the-list-of-transaction-families]    The SysAdmin guide probably needs an expanded version of this information.     ",Bug,Medium,Complete,"2018-06-13 21:13:24","2018-06-13 21:13:24",3
"Hyperledger Sawtooth","LR Testing & BugFix ",,"New Feature",Medium,Complete,"2018-06-04 15:08:36","2018-06-04 15:08:36",5
"Hyperledger Sawtooth","Integrate consensus proxy with queries ",,"New Feature",Medium,Complete,"2018-06-04 15:08:20","2018-06-04 15:08:20",2
"Hyperledger Sawtooth","Integrate consensus proxy with block publisher ",,"New Feature",Medium,Complete,"2018-06-04 15:08:08","2018-06-04 15:08:08",3
"Hyperledger Sawtooth","Decouple consensus modules from the block publisher ",,"New Feature",Medium,Complete,"2018-06-04 15:07:51","2018-06-04 15:07:51",2
"Hyperledger Sawtooth","Integrate consensus proxy with chain controller (block commit services) ",,"New Feature",Medium,Complete,"2018-06-04 15:07:39","2018-06-04 15:07:39",3
"Hyperledger Sawtooth","Decouple consensus modules from the chain controller ",,"New Feature",Medium,Complete,"2018-06-04 15:07:02","2018-06-04 15:07:02",3
"Hyperledger Sawtooth","Migrate Proxy Handlers & Notifier From Prototype to Master ",,"New Feature",Medium,Complete,"2018-06-04 15:06:27","2018-06-04 15:06:27",2
"Hyperledger Sawtooth","Decide on Use of Library Code",,"New Feature",Medium,Complete,"2018-06-01 17:50:45","2018-06-01 17:50:45",3
"Hyperledger Sawtooth","Write Summary course content",,Improvement,Medium,Complete,"2018-06-01 17:02:55","2018-06-01 17:02:55",1
"Hyperledger Sawtooth","Facilitate internal review of 201 course content",,Improvement,Medium,Complete,"2018-05-31 22:23:09","2018-05-31 22:23:09",1
"Hyperledger Sawtooth","Align on delivery of 201 course",,Improvement,Medium,Complete,"2018-05-31 22:22:43","2018-05-31 22:22:43",1
"Hyperledger Sawtooth","Write Glossary and References course content",,Improvement,Medium,Complete,"2018-05-31 22:22:20","2018-05-31 22:22:20",1
"Hyperledger Sawtooth","Write Testing and Deployment course content",,Improvement,Medium,Complete,"2018-05-31 22:22:13","2018-05-31 22:22:13",3
"Hyperledger Sawtooth","Create course content: Creating the webapp",,Improvement,Medium,Complete,"2018-05-31 22:22:00","2018-05-31 22:22:00",1
"Hyperledger Sawtooth","Create course content: Building the event subscriber",,Improvement,Medium,Complete,"2018-05-31 22:21:51","2018-05-31 22:21:51",2
"Hyperledger Sawtooth","Create course content: Building the Simple Supply Transaction Processor",,Improvement,Medium,Complete,"2018-05-31 22:21:35","2018-05-31 22:21:35",1
"Hyperledger Sawtooth","Create course content: Building the Simple Supply REST API",,Improvement,Medium,Complete,"2018-05-31 22:21:23","2018-05-31 22:21:23",1
"Hyperledger Sawtooth","Facilitate internal review",,"New Feature",Medium,Complete,"2018-05-31 22:21:21","2018-05-31 22:21:21",1
"Hyperledger Sawtooth","Align on delivery",,"New Feature",Medium,Complete,"2018-05-31 22:21:10","2018-05-31 22:21:10",1
"Hyperledger Sawtooth","Create course content: Application Design Considerations",,Improvement,Medium,Complete,"2018-05-31 22:21:08","2018-05-31 22:21:08",2
"Hyperledger Sawtooth","Write Testing and Deployment course content",,"New Feature",Medium,Complete,"2018-05-31 22:21:00","2018-05-31 22:21:00",2
"Hyperledger Sawtooth","Create course content: The Simple Supply Application",,Improvement,Medium,Complete,"2018-05-31 22:20:59","2018-05-31 22:20:59",1
"Hyperledger Sawtooth","Create course content: Creating the webapp","Module 3","New Feature",Medium,Complete,"2018-05-31 22:20:49","2018-05-31 22:20:49",1
"Hyperledger Sawtooth","Create course content: Overview of Application Development",,Improvement,Medium,Complete,"2018-05-31 22:20:48","2018-05-31 22:20:48",2
"Hyperledger Sawtooth","Create course content: About Sawtooth Applications",,Improvement,Medium,Complete,"2018-05-31 22:20:39","2018-05-31 22:20:39",2
"Hyperledger Sawtooth","Create course content: Building the event subscriber","Module 3","New Feature",Medium,Complete,"2018-05-31 22:20:38","2018-05-31 22:20:38",3
"Hyperledger Sawtooth","Create course content: Sawtooth Overview",,Improvement,Medium,Complete,"2018-05-31 22:20:30","2018-05-31 22:20:30",2
"Hyperledger Sawtooth","Create course content: Building the Simple Supply Transaction Processor","Module 3","New Feature",Medium,Complete,"2018-05-31 22:20:27","2018-05-31 22:20:27",2
"Hyperledger Sawtooth","Create course content: Blockchain Basics",,Improvement,Medium,Complete,"2018-05-31 22:20:20","2018-05-31 22:20:20",2
"Hyperledger Sawtooth","Create course content: Building the Simple Supply REST API","Module 3","New Feature",Medium,Complete,"2018-05-31 22:20:17","2018-05-31 22:20:17",3
"Hyperledger Sawtooth","Create course content: About This Course",,Improvement,Medium,Complete,"2018-05-31 22:20:01","2018-05-31 22:20:01",1
"Hyperledger Sawtooth","Create course content: Application Design Considerations",,"New Feature",Medium,Complete,"2018-05-31 22:19:56","2018-05-31 22:19:56",1
"Hyperledger Sawtooth","Create course content: The Simple Supply Application","Module 3","New Feature",Medium,Complete,"2018-05-31 22:19:37","2018-05-31 22:19:37",1
"Hyperledger Sawtooth","Create and Submit Repo for Ansible Roles",,Improvement,Medium,Complete,"2018-05-31 19:20:14","2018-05-31 19:20:14",5
"Hyperledger Sawtooth","Build transition plan with Linux Foundation",,Improvement,Medium,Complete,"2018-05-31 19:15:17","2018-05-31 19:15:17",5
"Hyperledger Sawtooth","Outline PoET engine",,Task,Medium,Complete,"2018-05-25 16:55:28","2018-05-25 16:55:28",2
"Hyperledger Sawtooth","Create Simple Supply REST API Spec",,"New Feature",Medium,Complete,"2018-05-24 17:32:30","2018-05-24 17:32:30",2
"Hyperledger Sawtooth","Implement Record functionality",,"New Feature",Medium,Complete,"2018-05-24 17:29:36","2018-05-24 17:29:36",2
"Hyperledger Sawtooth","Implement Simple Supply Auth functionality",,"New Feature",Medium,Complete,"2018-05-24 17:28:58","2018-05-24 17:28:58",1
"Hyperledger Sawtooth","Implement Simple Supply Agent functionality",,"New Feature",Medium,Complete,"2018-05-24 17:28:32","2018-05-24 17:28:32",2
"Hyperledger Sawtooth","Return chain head and peers in engine registration response",,Improvement,Medium,Complete,"2018-05-24 17:04:17","2018-05-24 17:04:17",1
"Hyperledger Sawtooth","Create Google Doc training template + style guide",,"New Feature",Medium,Complete,"2018-05-24 03:44:23","2018-05-24 03:44:23",2
"Hyperledger Sawtooth","Add chain consensus services","This is blocked on the reorganization of the chain controller",Improvement,Medium,Complete,"2018-05-17 16:59:10","2018-05-17 16:59:10",1
"Hyperledger Sawtooth","Add state consensus services",,Improvement,Medium,Complete,"2018-05-17 16:57:59","2018-05-17 16:57:59",1
"Hyperledger Sawtooth","Implement peer consensus services",,Improvement,Medium,Complete,"2018-05-17 16:57:30","2018-05-17 16:57:30",3
"Hyperledger Sawtooth","Improve consistency of SDK Documentation cover page","On the SDK API cover page (link below) the python sections are labeled processor package and sawtooth_signing package, and each has lots of sub-bullets, while the other SDK sections are labeled Transaction Processor and Signing and have no sub-bullets.    Recommendation is to name sections consistently - it is difficult to tell what the different formats mean, e.g. whether the Python SDK is different from the other two in some important way.    [https://sawtooth.hyperledger.org/docs/core/releases/1.0/sdks.html]     ",Improvement,Medium,Complete,"2018-05-16 22:24:03","2018-05-16 22:24:03",1
"Hyperledger Sawtooth","Integrate and test on LR network",,Improvement,Medium,Complete,"2018-05-11 16:53:48","2018-05-11 16:53:48",5
"Hyperledger Sawtooth","add poet block publisher",,Improvement,Medium,Complete,"2018-05-10 18:57:27","2018-05-10 18:57:27",5
"Hyperledger Sawtooth","make basic poet engine run",,Improvement,Medium,Complete,"2018-05-10 18:57:10","2018-05-10 18:57:10",2
"Hyperledger Sawtooth","add poet block verifier","Use the shim approach.",Improvement,Medium,Complete,"2018-05-09 22:32:11","2018-05-09 22:32:11",2
"Hyperledger Sawtooth","Add get_chain_head consensus service","Also change the consensus registration validator response to include the current chain head.",Improvement,Medium,Complete,"2018-05-09 22:30:28","2018-05-09 22:30:28",1
"Hyperledger Sawtooth","add poet fork resolve","PoET objects (block publisher, fork resolver, and block verifier) start up with a block cache, a batch publisher, and a state view factory. In the consensus engine, these objects will have to be substituted with proxies, which will return the necessary information using consensus service calls (except for the batch publisher, which will communicate using a client endpoint).         Note that implementing the block cache proxy entails implementing a block store proxy as well, since that is exposed as a block cache interface. The proxy state view factory should produce proxy state views.",Improvement,Medium,Complete,"2018-05-09 22:28:29","2018-05-09 22:28:29",2
"Hyperledger Sawtooth","Research Sawtooth FAQs and existing Hyperledger training",,"New Feature",Medium,Complete,"2018-05-04 17:05:30","2018-05-04 17:05:30",3
"Hyperledger Sawtooth","Make Rust Consensus SDK get_{blocks,settings,state} return hashmaps",,Improvement,Medium,Complete,"2018-05-02 21:46:13","2018-05-02 21:46:13",1
"Hyperledger Sawtooth","Design PoET 2.0","Write a simple design doc (separate from the PoET spec) to describe the architecture/design of the PoET 2.0 component","New Feature",Medium,Complete,"2018-05-01 17:37:56","2018-05-01 17:37:56",5
"Hyperledger Sawtooth","Optimize PoET 2.0 sim based on feedback and tests","AC:   * Evaluate results from simulator testing   * Incorporate improvements to the simulator based on test results.   * Rerun the simulator and verify","New Feature",Medium,Complete,"2018-05-01 17:21:36","2018-05-01 17:21:36",5
"Hyperledger Sawtooth","Testing PoET 2.0 sim behavior in different scenarios on hardware","Similar to STL-1224, but on hardware.     ","New Feature",Medium,Complete,"2018-05-01 17:12:49","2018-05-01 17:12:49",5
"Hyperledger Sawtooth","Testing PoET 2.0 sim behavior in different scenarios on docker","This story is intended to be followup to STL-1223. Once the base simulator is implemented, test the PoET 2.0 algorithm under different scenarios.    AC:   * Create a docker version of the simulator   * Test different network topologies, clock skew, network latencies etc   * Test up to 25 nodes on a network - chain should be in sync, no forking.","New Feature",Medium,Complete,"2018-05-01 17:11:31","2018-05-01 17:11:31",5
"Hyperledger Sawtooth","Implement PoET 2.0 network simulator","The simulator is intended to be a platform to test the various aspects of PoET 2.0 under different configurations.    AC:   * Basic Simulator design done.   * Simulator components implemented   * Simulator basic functionality tested up to 5 nodes.","New Feature",Medium,Complete,"2018-05-01 17:09:03","2018-05-01 17:09:03",5
"Hyperledger Sawtooth","Document PoET 2.0 spec","Publish the PoET 2.0 spec as an RFC","New Feature",Medium,"In Progress","2018-05-01 17:00:14","2018-05-01 17:00:14",2
"Hyperledger Sawtooth","Implement Pruning Queue",,Improvement,Medium,Complete,"2018-04-30 20:10:20","2018-04-30 20:10:20",3
"Hyperledger Sawtooth","Implement Pruning",,Improvement,Medium,Complete,"2018-04-30 20:10:07","2018-04-30 20:10:07",5
"Hyperledger Sawtooth","Implement Change Log",,Improvement,Medium,Complete,"2018-04-30 20:09:46","2018-04-30 20:09:46",3
"Hyperledger Sawtooth","Investigate Shim for existing Python Consensus Modules","Based on complexity during development, other options could be considered.",Improvement,Medium,Complete,"2018-04-30 19:31:16","2018-04-30 19:31:16",3
"Hyperledger Sawtooth","Implement Generic Ansible Roles for Sawtooth Components",,Improvement,Medium,Complete,"2018-04-30 19:14:54","2018-04-30 19:14:54",5
"Hyperledger Sawtooth","Test Generic Ansible Roles for Sawtooth Components",,Improvement,Medium,Complete,"2018-04-30 19:14:46","2018-04-30 19:14:46",3
"Hyperledger Sawtooth","Research Generic Ansible Roles for Sawtooth Components",,Improvement,Medium,Complete,"2018-04-30 19:13:47","2018-04-30 19:13:47",2
"Hyperledger Sawtooth","Create and Coordinate JJB Transition to Hyperledger Sawtooth Technical Support",,Improvement,Medium,Complete,"2018-04-30 19:04:18","2018-04-30 19:04:18",5
"Hyperledger Sawtooth","Access Rust Merkle Trie via Python",,Improvement,Medium,Complete,"2018-04-27 23:22:52","2018-04-27 23:22:52",5
"Hyperledger Sawtooth","Implement devmode consensus engine in Rust",,Improvement,Medium,Complete,"2018-04-27 16:32:06","2018-04-27 16:32:06",5
"Hyperledger Sawtooth","Prototype consensus engine support",,Improvement,Medium,Complete,"2018-04-27 16:31:50","2018-04-27 16:31:50",3
"Hyperledger Sawtooth","Refactor block publisher to support consensus engine prototyping",,Improvement,Medium,Complete,"2018-04-27 16:31:19","2018-04-27 16:31:19",2
"Hyperledger Sawtooth","Draw new pictures for Sawtooth 201 course","Will continue into Sprint 52.","New Feature",Medium,Complete,"2018-04-26 22:51:02","2018-04-26 22:51:02",5
"Hyperledger Sawtooth","Research overview to application development for EDX 201 course","Will continue into Sprint 52.","New Feature",Medium,Complete,"2018-04-26 22:41:24","2018-04-26 22:41:24",2
"Hyperledger Sawtooth","Storyboard Sawtooth 201 course",,"New Feature",Medium,Complete,"2018-04-26 22:27:19","2018-04-26 22:27:19",5
"Hyperledger Sawtooth","Create Sawtooth 201 course outline",,"New Feature",Medium,Complete,"2018-04-26 22:24:10","2018-04-26 22:24:10",5
"Hyperledger Sawtooth","Create Simple Supply ledger sync",,"New Feature",Medium,Complete,"2018-04-26 16:41:29","2018-04-26 16:41:29",3
"Hyperledger Sawtooth","Create Simple Supply client",,"New Feature",Medium,Complete,"2018-04-26 16:40:33","2018-04-26 16:40:33",5
"Hyperledger Sawtooth","Create Simple Supply REST API Structure",,"New Feature",Medium,Complete,"2018-04-26 16:39:32","2018-04-26 16:39:32",3
"Hyperledger Sawtooth","Create Simple Supply TP Structure",,"New Feature",Medium,Complete,"2018-04-26 16:38:52","2018-04-26 16:38:52",3
"Hyperledger Sawtooth","Write example transaction family specification",,"New Feature",Medium,Complete,"2018-04-26 16:11:10","2018-04-26 16:11:10",3
"Hyperledger Sawtooth","Implement Rust ChainController",,Improvement,Medium,Complete,"2018-04-25 21:08:13","2018-04-25 21:08:13",5
"Hyperledger Sawtooth","Implement Rust BlockManager",,Improvement,Medium,Complete,"2018-04-25 21:07:19","2018-04-25 21:07:19",5
"Hyperledger Sawtooth","Implement Rust BlockPublisher",,Improvement,Medium,Complete,"2018-04-25 21:06:25","2018-04-25 21:06:25",5
"Hyperledger Sawtooth","Research Sawtooth 201 course content",,Improvement,Medium,Complete,"2018-04-25 16:56:34","2018-04-25 16:56:34",5
"Hyperledger Sawtooth","Collaborate on training survey for community feedback",,Improvement,Medium,Complete,"2018-04-25 16:54:53","2018-04-25 16:54:53",1
"Hyperledger Sawtooth","Implement Rust IdentityView and SettingsView","This would use the Rust stateview and allow a readonly view into the Identity and Settings namespaces.","New Feature",Medium,Complete,"2018-04-24 14:38:01","2018-04-24 14:38:01",2
"Hyperledger Sawtooth","Implement Rust state view","The state view should follow the Python statevew and stateview factory pattern, and use the Rust merkle database. A stretch goal would be to allow for values to be pushed to the stateview on block commit.","New Feature",Medium,Complete,"2018-04-24 14:36:40","2018-04-24 14:36:40",2
"Hyperledger Sawtooth","Implement Rust BlockValidator","The BlockValidator validates that a block is valid beyond those checks that happen at other levels (such as signature verification in the Gossip layer). This includes all batches are valid and the resulting state hash matches the one in the block header, the block contains a predecessor in the current chain, there are no duplicate transactions or batches, all transaction dependencies are satisfied, settings stored in state are satisfied, and identity state is satisfied by signatures of batches and transactions.    The BlockValidator maintains the correctness that all of a block's predecessors must be validated before it is validated.    The BlockValidator is an active component.          ","New Feature",Medium,Complete,"2018-04-23 21:34:45","2018-04-23 21:34:45",5
"Hyperledger Sawtooth","Create Sawtooth 201 course outline ","* Elicit requirements from stakeholders   * Create outline document   * Get signoff from stakeholders","New Feature",Medium,Complete,"2018-04-23 17:37:55","2018-04-23 17:37:55",5
"Hyperledger Sawtooth","Implement Python Consensus SDK",,"New Feature",Medium,Complete,"2018-04-23 16:35:14","2018-04-23 16:35:14",3
"Hyperledger Sawtooth","Edit new Sawtooth Grafana/InfluxDB set-up procedure in sysadmin guide","h2.  ",Improvement,Medium,Complete,"2018-04-20 19:22:44","2018-04-20 19:22:44",1
"Hyperledger Sawtooth","Remove low-level architecture content (journal, etc.)",,Improvement,Medium,Complete,"2018-04-20 19:09:55","2018-04-20 19:09:55",1
"Hyperledger Sawtooth","Move fork resolution from block validator to chain controller","This will allow an easier conversion to Rust for the BlockValidator.","New Feature",Medium,Complete,"2018-04-17 20:17:31","2018-04-17 20:17:31",3
"Hyperledger Sawtooth","Create Execution Platform FFI between Rust and Python","This Execution Platform will allow for batches to be checked for validity, and return the ExecutionResults (Events, StateChanges, etc.). This will be in Rust and allow for Rust components such as BlockPublisher and BlockValidator to execute batches.    When this story is completed there will be tests that 10 schedules of 10 batches complete with state hashes.","New Feature",Medium,Complete,"2018-04-17 20:14:46","2018-04-17 20:14:46",3
"Hyperledger Sawtooth","Implement sawtooth_validator.server.cli in Rust",,Improvement,Medium,Backlog,"2018-04-16 16:50:27","2018-04-16 16:50:27",3
"Hyperledger Sawtooth","App Dev Docs for Transaction Processors is out of date","The Transaction Processor tutorials for both Python and Javascript (unsure about Java), use the 0.8 API for instantiating the TransactionHandler. They erroneously include encoding, which is no longer used, and for JS, list family versions as a string. It should be an array.    [https://sawtooth.hyperledger.org/docs/core/releases/latest/_autogen/sdk_TP_tutorial_js.html#the-xohandler-class]  [https://sawtooth.hyperledger.org/docs/core/releases/latest/_autogen/sdk_TP_tutorial_python.html#the-xotransactionhandler-class]    Might be worth give the rest of the document a once over for other 0.8 syntax as well.",Bug,Medium,Complete,"2018-04-12 18:20:19","2018-04-12 18:20:19",3
"Hyperledger Sawtooth","Add Rust Linter to CI",,Improvement,Medium,Complete,"2018-04-10 21:32:48","2018-04-10 21:32:48",1
"Hyperledger Sawtooth","Edit text to clarify, make consistent, and fix errors",,Improvement,Medium,Complete,"2018-04-06 23:41:29","2018-04-06 23:41:29",3
"Hyperledger Sawtooth","Update links",,Improvement,Medium,Complete,"2018-04-06 23:39:54","2018-04-06 23:39:54",1
"Hyperledger Sawtooth","Reorganize code snippets and add intro content",,Improvement,Medium,Complete,"2018-04-06 23:39:29","2018-04-06 23:39:29",2
"Hyperledger Sawtooth","Rewrite transaction family/processor content","Clarify terminology; make consistent with current app dev guide.",Improvement,Medium,Complete,"2018-04-06 23:37:23","2018-04-06 23:37:23",3
"Hyperledger Sawtooth","Improve consensus information (reduce amount of PoET content)",,Improvement,Medium,Complete,"2018-04-06 23:36:21","2018-04-06 23:36:21",2
"Hyperledger Sawtooth","Correct source-available pictures in v.101","Fix pictures for which source is available; identify typos and  terminology issues in other pictures for edX to fix.",Improvement,Medium,Complete,"2018-04-06 23:34:39","2018-04-06 23:34:39",1
"Hyperledger Sawtooth","Rearrange pictures (move pictures to relevant topic)",,Improvement,Medium,Complete,"2018-04-06 22:42:22","2018-04-06 22:42:22",1
"Hyperledger Sawtooth","Change Application Flow topic to a chapter summary",,Improvement,Medium,Complete,"2018-04-06 22:40:43","2018-04-06 22:40:43",1
"Hyperledger Sawtooth","Lay out example code in course",,Improvement,Medium,Complete,"2018-04-06 22:39:24","2018-04-06 22:39:24",3
"Hyperledger Sawtooth","Update example Docker Compose file",,Improvement,Medium,Complete,"2018-04-06 22:37:10","2018-04-06 22:37:10",1
"Hyperledger Sawtooth","Update TunaChain TP for Sawtooth 1.0",,Improvement,Medium,Complete,"2018-04-06 22:36:14","2018-04-06 22:36:14",5
"Hyperledger Sawtooth","Update TunaChain Client for Sawtooth 1.0",,Improvement,Medium,Complete,"2018-04-06 22:35:19","2018-04-06 22:35:19",3
"Hyperledger Sawtooth","Ubuntu multi-node proc: Missing PoET consensus steps","In the Application Developer Guide, Creating a Sawtooth Network, the Ubuntu procedure does not have steps to create keys, create the genesis block, and specify PoET consensus on the first validator node.  Should these steps be added to the Ubuntu procedure?  See:   [https://sawtooth.hyperledger.org/docs/core/nightly/master/app_developers_guide/creating_sawtooth_network.html#step-1-configure-the-network-on-the-first-node]    FYI: The Docker Compose file for Creating a Sawtooth Network contains the following commands.       {{sawadm keygen --force}}    {{sawset genesis -k /etc/sawtooth/keys/validator.priv -o config-genesis.batch}}    sawset proposal create -k /etc/sawtooth/keys/validator.priv sawtooth.consensus.algorithm=poet sawtooth.poet.report_public_key_pem= \\\$$(cat /etc/sawtooth/config/simulator_rk_pub.pem)\\\ sawtooth.poet.valid_enclave_measurements=$$(poet enclave measurement)  sawtooth.poet.valid_enclave_basenames=$$(poet enclave basename) \ -o config.batch    {{poet registration create -k /etc/sawtooth/keys/validator.priv -o poet.batch }}    {{sawset proposal create -k /etc/sawtooth/keys/validator.priv $$(/etc/sawtooth/config/poet-settings.sh) -o poet-settings.batch }}    {{sawadm genesis config-genesis.batch config.batch poet.batch poet-settings.batch}}    {{sawtooth-validator -v --bind network:tcp://eth0:8800 --bind component:tcp://eth0:4004 --peering dynamic --endpoint tcp://validator-0:8800 --scheduler serial --network trust}}    Note: Please check the file for the actual commands (in case I introduced a typo when copy-pasting them here. [https://sawtooth.hyperledger.org/docs/core/nightly/master/app_developers_guide/sawtooth-default-poet.yaml|http://example.com/]     ",Bug,Medium,Complete,"2018-04-04 23:53:52","2018-04-04 23:53:52",3
"Hyperledger Sawtooth","Port Merkle Tree to Rust",,Improvement,Medium,Complete,"2018-04-02 15:26:13","2018-04-02 15:26:13",5
"Hyperledger Sawtooth","Finalize State Pruning Design",,Improvement,Medium,Complete,"2018-03-30 21:16:18","2018-03-30 21:16:18",3
"Hyperledger Sawtooth","Assess current 101 training course for next steps planning","Starting from chapter 6. Assess gaps and create a plan to update the material for 1.0.",Improvement,Medium,Complete,"2018-03-30 20:04:56","2018-03-30 20:04:56",3
"Hyperledger Sawtooth","Assess current 101 training course for next steps planning","Starting from chapter 6. Assess gaps and create a plan to update the material for 1.0.",Improvement,Medium,Complete,"2018-03-30 20:04:25","2018-03-30 20:04:25",3
"Hyperledger Sawtooth","Define Block Publisher API for Rust",,Improvement,Medium,Complete,"2018-03-30 19:43:26","2018-03-30 19:43:26",5
"Hyperledger Sawtooth","Define Chain Controller API for Rust","Includes all API, doc strings for review",Improvement,Medium,Complete,"2018-03-30 19:41:32","2018-03-30 19:41:32",5
"Hyperledger Sawtooth","Train on Jenkins JJB",,Bug,Medium,Complete,"2018-03-30 16:29:29","2018-03-30 16:29:29",3
"Hyperledger Sawtooth","Jenkins JJB Testing",,Improvement,Medium,Complete,"2018-03-30 16:29:11","2018-03-30 16:29:11",5
"Hyperledger Sawtooth","Document setup of Grafana/Influx",,Improvement,Medium,Complete,"2018-03-30 16:24:53","2018-03-30 16:24:53",5
"Hyperledger Sawtooth","Research initial set-up of Grafana/Influx",,Improvement,Medium,Complete,"2018-03-30 16:24:05","2018-03-30 16:24:05",2
"Hyperledger Sawtooth","Seth tagged release","Do a tagged release of Seth.         Once tags are available, add a Create git archive step to Jenkins:          ","New Feature",Medium,Backlog,"2018-03-27 16:53:44","2018-03-27 16:53:44",2
"Hyperledger Sawtooth","Wrong default URL (8800) in example validator config file","The file sawtooth-core/validator/packaging/validator.toml.example has the wrong default URL. Currently:     {{     bind = [}}  {{     network:tcp://127.0.0.1:8800,}}  {{     component:tcp://127.0.0.1:4004}}  {{     ]}}    Should be:     {{     bind = [}}  {{     network:tcp://127.0.0.1:8008,}}  {{     component:tcp://127.0.0.1:4004}}  {{     ]}}",Bug,Medium,Complete,"2018-03-20 15:56:05","2018-03-20 15:56:05",1
"Hyperledger Sawtooth","Doc has wrong path to two example config files","The Configuring Sawtooth section in the System Administrator's guide has two incorrect paths to the example TOML config files.    Validator Configuration File   [https://sawtooth.hyperledger.org/docs/core/nightly/master/sysadmin_guide/configuring_sawtooth/validator_configuration_file.html]     Currently:   {{/sawtooth-core/packaging/validator.toml.example}}    The correct path is:  {{/sawtooth-core/validator/packaging/validator.toml.example}}         XO Transaction Processor Configuration File   [https://sawtooth.hyperledger.org/docs/core/nightly/master/sysadmin_guide/configuring_sawtooth/xo_tp_configuration.html]    Currently:   {{/sawtooth-core/families/xo/packaging/xo.toml.example}}    The correct path is:   {{/sawtooth-core/sdk/examples/xo_python/packaging/xo.toml.example}}          ",Bug,Medium,Complete,"2018-03-19 21:21:28","2018-03-19 21:21:28",1
"Hyperledger Sawtooth","sawtooth-rest-api CLI has old URL in --help text ","{{}}Wrong:         -B BIND, --bind BIND identify host and port for API to run on default: http://localhost:8080)    Should be:         ... (default: http://localhost:8008)",Bug,Medium,Complete,"2018-03-13 16:18:28","2018-03-13 16:18:28",1
"Hyperledger Sawtooth","Missing step to allow XO transactions","This step is needed for the tutorial in Introduction to the XO Transaction Family.",Bug,Medium,Complete,"2018-03-13 15:58:28","2018-03-13 15:58:28",1
"Hyperledger Sawtooth","Rewrite smallbank transaction processor in rust","Smallbank is currently written in go. To allow go to be moved to an external repo, smallbank should be rewritten in rust.",Improvement,Highest,Complete,"2018-03-06 15:27:05","2018-03-06 15:27:05",3
"Hyperledger Sawtooth","Rewrite the Ubuntu tutorial","- Make procedures consistent (based on AWS version) - see STL-1001   - Remove reference content and unnecessary steps",Improvement,Medium,Complete,"2018-03-05 16:57:46","2018-03-05 16:57:46",3
"Hyperledger Sawtooth","Rewrite the Docker tutorial","- Make procedures consistent (based on AWS version) - see STL-1001   - Remove reference content and unnecessary steps",Improvement,Medium,Complete,"2018-03-05 16:56:30","2018-03-05 16:56:30",3
"Hyperledger Sawtooth","Implement QUEUE_FULL message backoff and retry logic properly ",,Improvement,Medium,Backlog,"2018-03-01 16:10:42","2018-03-01 16:10:42",3
"Hyperledger Sawtooth","Configure Jenkins CI for Seth builds",,Improvement,Medium,Complete,"2018-03-01 14:19:36","2018-03-01 14:19:36",2
"Hyperledger Sawtooth","Use smaller Docker images for Seth components",,Improvement,Medium,Backlog,"2018-03-01 14:18:22","2018-03-01 14:18:22",2
"Hyperledger Sawtooth","Improve Seth documentation and getting started guide",,Improvement,Medium,Backlog,"2018-03-01 14:17:29","2018-03-01 14:17:29",3
"Hyperledger Sawtooth","Improve Seth compatibility with existing Ethereum tooling like Truffle/Remix",,Improvement,Medium,Backlog,"2018-03-01 14:11:33","2018-03-01 14:11:33",3
"Hyperledger Sawtooth","Cache deserialized message content between handlers","Individual handlers are responsible for deserializing message content, which results in inefficiency when multiple message handlers are used. Before a message is passed to a series of handlers, it should be optionally deserialized and cached and the cached value is passed to the handlers",Improvement,Medium,Complete,"2018-02-28 22:30:17","2018-02-28 22:30:17",5
"Hyperledger Sawtooth","Add Nodes to Validator Network",,Improvement,Medium,Complete,"2018-02-28 20:16:06","2018-02-28 20:16:06",5
"Hyperledger Sawtooth","Subscribing to Events ","* Add ZeroMQ info.   * Add state delta info.",Improvement,Medium,Complete,"2018-02-28 20:15:49","2018-02-28 20:15:49",5
"Hyperledger Sawtooth","Refactor Seth Repo","The sawtooth-seth repo was separated from master by deleting out all non-Seth related documents and files. This has led to a disorganized and confusing directory structure. In order to give Seth a good user story and development workflow, this repo should be reorganized.",Improvement,Medium,Complete,"2018-02-28 19:34:47","2018-02-28 19:34:47",3
"Hyperledger Sawtooth","Create Demo of Hello World Application for Seth","Update documentation and intkey example to show a walkthrough of the Seth CLI",Improvement,Medium,Complete,"2018-02-28 19:34:24","2018-02-28 19:34:24",5
"Hyperledger Sawtooth","Align on Deployment Artifacts for Seth Repo","Published Docker images    Debs",Improvement,Medium,Complete,"2018-02-28 19:33:04","2018-02-28 19:33:04",3
"Hyperledger Sawtooth","Improve the build workflow for Seth","Simplify the seth build workflow with docker to match the other POCs. Should be able to get a dev environment up and running in a fresh repo with `docker-compose up --build`. ",Improvement,Medium,Complete,"2018-02-28 19:32:16","2018-02-28 19:32:16",3
"Hyperledger Sawtooth","Update Seth to use Sawtooth 1.0 Rust Artifacts",,Improvement,Medium,Complete,"2018-02-28 19:31:17","2018-02-28 19:31:17",3
"Hyperledger Sawtooth","Update Seth to use Sawtooth 1.0 GO Artifacts",,Improvement,Medium,Complete,"2018-02-28 19:31:05","2018-02-28 19:31:05",3
"Hyperledger Sawtooth","Allow intkey workload generator to be usable in LR environments",,Improvement,Medium,Complete,"2018-02-27 20:13:39","2018-02-27 20:13:39",3
"Hyperledger Sawtooth","Implement intkey iterator ",,Improvement,Medium,Complete,"2018-02-27 20:11:54","2018-02-27 20:11:54",2
"Hyperledger Sawtooth","XO Family specification missing delete operation; clarify name fields; fix range","Defect in version 1.0.1    The XO Transaction family specification should include the transaction action `delete`    The `name` field of the transactions and the state element should indicate that is the name of the game and that is how the record is keyed. The implication being that all game names must be unique     The range of values for a `space` should be [1,9] inclusive.",Bug,Medium,Complete,"2018-02-23 18:12:20","2018-02-23 18:12:20",2
"Hyperledger Sawtooth","Convert peering messages to metrics","Some peering messages get logged over and over and over, for instance No public key found, %s is not permitted. Close connection. and Peers are: %s. Unpeered candidates are: %s    It might be better to replace these message or at least supplement them with metrics. This should be done in coordination with https://jira.hyperledger.org/browse/STL-1024.",Improvement,Medium,Backlog,"2018-02-23 15:15:14","2018-02-23 15:15:14",1
"Hyperledger Sawtooth","Convert publisher debug messages to metrics","The publisher has debug messages that would be better represented as metrics, for instance Batch %s invalid, not added to block. This message tends to get dumped into the logs in big batches, making it hard to tell how often it is or should be occurring.",Improvement,Medium,Backlog,"2018-02-23 14:57:35","2018-02-23 14:57:35",1
"Hyperledger Sawtooth","Reorganize and rewrite XO gameplay info in SDK Tutorials","Reorganize, rewrite, and retitle XO gameplay content in the SDK tutorials. This information should be after the SDK tutorial introduction and overview sections.    Proposed organization:    - About the XO transaction family   - Summary of XO gameplay (business logic for the XO TP)   - Starting the xo transaction processor (add xo-tp to the development environment)   - Procedure: Playing XO with the xo CLI    If possible, the procedure should have new How it works content to explain TP functionality.     ",Improvement,Medium,Complete,"2018-02-19 22:11:19","2018-02-19 22:11:19",5
"Hyperledger Sawtooth","Create sawtooth-block-info-tp docker image and publish to docker hub",,Bug,High,Complete,"2018-02-15 21:00:00","2018-02-15 21:00:00",1
"Hyperledger Sawtooth","Update metrics API",,Improvement,Medium,Complete,"2018-02-15 16:42:58","2018-02-15 16:42:58",2
"Hyperledger Sawtooth","Convert intkey create_batch and load commands to intkey set, inc, dec","In the Docker/Ubuntu/AWS tutorials, convert the intkey create_batch and load commands into intkey set, inc, dec.  Add examples of intkey show/list and explain --wait.",Improvement,Medium,Backlog,"2018-02-13 17:02:08","2018-02-13 17:02:08",3
"Hyperledger Sawtooth","Convert predecessor tree's data structure to prefix tree","Currently the predecessor tree allocates a separate node for each token in the addresses it receives, and most of these nodes are not used. Make the tree compact by changing the nodes to represent the common prefix of their children.",Improvement,Medium,Complete,"2018-02-12 16:52:35","2018-02-12 16:52:35",3
"Hyperledger Sawtooth","Split off predecessor tree's tree","Currently the parallel scheduler's predecessor tree is implemented in such a way that its tree logic is mixed in with its predecessor logic.    Split off the tree data structure into a separate class with the following interface:   * walk(address)   * prune(address)   * update(address, update_function)",Improvement,Medium,Complete,"2018-02-12 16:49:12","2018-02-12 16:49:12",2
"Hyperledger Sawtooth","Update sawtooth_perf to handle waiting for transaction dependencies","This task involves modifying both the long-running submitter to resubmit batch_statuses requests until it can verify that the transaction has been committed, and then signalling back to the payload iterator that the transaction with a particular payload has been committed.",Improvement,Medium,Complete,"2018-02-05 18:36:12","2018-02-05 18:36:12",3
"Hyperledger Sawtooth","Implement P2P Batch Backpressure",,Improvement,Medium,Backlog,"2018-02-01 17:21:11","2018-02-01 17:21:11",5
"Hyperledger Sawtooth","Provide information on XO code organization for Documentation",,Improvement,Medium,Complete,"2018-02-01 17:10:32","2018-02-01 17:10:32",3
"Hyperledger Sawtooth","Refactor Go XO to be more modular",,Improvement,Medium,Complete,"2018-02-01 17:09:17","2018-02-01 17:09:17",3
"Hyperledger Sawtooth","Refactor Javascript XO to be more modular",,Improvement,Medium,Complete,"2018-02-01 17:08:37","2018-02-01 17:08:37",3
"Hyperledger Sawtooth","Refactor Python XO to be more modular",,Improvement,Medium,Complete,"2018-02-01 17:07:20","2018-02-01 17:07:20",3
"Hyperledger Sawtooth","Provide validator parallelism hint from TPs","Transaction processors should provide the validator with a level of parallelism hint which the validator then uses to determine how many transactions it can have in-flight to a given transaction processor.",Improvement,High,Complete,"2018-02-01 16:32:40","2018-02-01 16:32:40",5
"Hyperledger Sawtooth","Log at error level when an INTERNAL_ERROR is returned from a transaction processor ","The executor should log whenever a transaction processor sends a TpProcessResponse with status INTERNAL_ERROR. This should be logged at the ERROR level. Additional information about the transaction should also be logged for diagnosis.",Improvement,High,Complete,"2018-01-31 22:17:27","2018-01-31 22:17:27",1
"Hyperledger Sawtooth","Add in-process transactions metric","Add a metric to the executor to track the number of transactions that have been sent to a transaction processor and are awaiting a transaction response. This should be incremented whenever a new transaction process request is submitted and decremented whenever a response is received.",Improvement,Highest,Complete,"2018-01-31 22:14:00","2018-01-31 22:14:00",1
"Hyperledger Sawtooth","Add Logging Guidelines to Community Section",,Improvement,Medium,Backlog,"2018-01-29 20:52:39","2018-01-29 20:52:39",3
"Hyperledger Sawtooth","Move Reference Content out of Procedures","* XO tutorial(s)   * Docker/Ubuntu/AWS Sawtooth set-up procedures",Improvement,Medium,Complete,"2018-01-29 20:49:43","2018-01-29 20:49:43",5
"Hyperledger Sawtooth","Convert Dispatcher Queue Size to Logging Metric",,Improvement,Medium,Complete,"2018-01-29 19:59:47","2018-01-29 19:59:47",1
"Hyperledger Sawtooth","Wildcarded addresses cause stacktrace and the validator to hang",,Bug,Medium,Complete,"2018-01-26 17:38:23","2018-01-26 17:38:23",1
"Hyperledger Sawtooth","Improve logging around peering and unpeering","Add more information to logs about a node's peers and why a node has unpeered. Logs such as the following are not sufficient:    {{Jan 10 10:56:20 ec2-54-175-28-85.compute-1.amazonaws.com [psimlr7-node0] DEBUG ConnectionManager gossip removing peer tcp://34.229.10.5:8800 because connection went away}}",Improvement,Medium,Complete,"2018-01-26 15:39:14","2018-01-26 15:39:14",3
"Hyperledger Sawtooth","Fix network connections iteration bug","This error message was recently logged:     This may be related to a more serious peering bug where a node repeatedly attempts and fails to re-peer.",Bug,Medium,Complete,"2018-01-25 17:20:53","2018-01-25 17:20:53",1
"Hyperledger Sawtooth","Add intkey workload option to randomly set a transaction dependency",,Improvement,Medium,Complete,"2018-01-23 20:50:37","2018-01-23 20:50:37",2
"Hyperledger Sawtooth","Add intkey workload option to randomly send a wildcarded address.",,Improvement,Medium,Complete,"2018-01-23 20:48:58","2018-01-23 20:48:58",1
"Hyperledger Sawtooth","Write unit tests for new sawadm blockstore commands",,Improvement,Highest,Complete,"2018-01-22 16:28:18","2018-01-22 16:28:18",1
"Hyperledger Sawtooth","Refactor closures in batch_submit.rs to be more readable","The function that currently submits batches in a long-running fashion is a Stream with combinators and closures (about 9 of them). These should be refactored to a struct with the closures as functions in the impl.",Improvement,Medium,Complete,"2018-01-18 17:49:36","2018-01-18 17:49:36",2
"Hyperledger Sawtooth","Add QUEUE_FULL response type to transaction processor messages","This should add a new message protos and add support to the validator for handling this type of message.","New Feature",High,Complete,"2018-01-18 02:08:23","2018-01-18 02:08:23",2
"Hyperledger Sawtooth","Add syslog support to Go SDKs",https://golang.org/pkg/log/syslog/,"New Feature",Low,Backlog,"2018-01-17 23:01:36","2018-01-17 23:01:36",0
"Hyperledger Sawtooth","Implement command to validate block store and global state database consistency","At a minimum, this command should validate that all blocks in the chain from head to genesis are in the blockstore and that all state roots in these blocks can be found in global state.","New Feature",Low,Backlog,"2018-01-17 20:54:04","2018-01-17 20:54:04",2
"Hyperledger Sawtooth","Implement command to sync blocks from other validators directly to the blockstore","This should operate over ZMQ and write directly to the block store database without requiring running the validator","New Feature",Medium,Backlog,"2018-01-16 19:55:34","2018-01-16 19:55:34",3
"Hyperledger Sawtooth","Implement command to backup and restore a validator's data files",,"New Feature",High,Complete,"2018-01-16 19:54:25","2018-01-16 19:54:25",2
"Hyperledger Sawtooth","Implement command to prune the merkle database from state not related to any block in the block store",,"New Feature",Low,Backlog,"2018-01-16 19:53:31","2018-01-16 19:53:31",2
"Hyperledger Sawtooth","Fix consistency issues and one error in the CLI reference ","- Add missing subcommand lists  - Fix description of intkey --wait option",Improvement,Medium,Backlog,"2018-01-16 19:43:57","2018-01-16 19:43:57",1
"Hyperledger Sawtooth","Rewrite and retitle the XO {{language}} SDK Tutorials","- Change title to Using the \{\{ language }} SDK   - Write an introduction to describe transaction processor functionality (what it needs to do), state, and namespace/addressing   - STL-1070: Reorganize and rewrite XO gameplay info in Introduction to the XO Transaction Family   - -Add procedure: Setting up your development environment for \{\{ language }}- (not required)   - Swap the order of The Transaction Processor (apply, metadata) and Building and Submitting Transactions   - Add relevant content from the spec for the XO transaction family   - Update text related to the code examples with changes from the XO refactoring work     ",Improvement,Medium,Complete,"2018-01-16 19:43:21","2018-01-16 19:43:21",5
"Hyperledger Sawtooth","Edit CLI reference text for new commands","  - sawtooth peer    - sawnet compare-chains",Improvement,Medium,Backlog,"2018-01-16 19:42:28","2018-01-16 19:42:28",2
"Hyperledger Sawtooth","Create a glossary and make terminology consistent",,Improvement,Medium,Complete,"2018-01-16 19:41:42","2018-01-16 19:41:42",3
"Hyperledger Sawtooth","Add high-level Sawtooth picture and redraw tutorial pictures in App Dev Guide","Moved from STL-1001:    - Redraw picture in Docker/Ubuntu/AWS tutorial to show example system",Improvement,Medium,Complete,"2018-01-16 19:41:08","2018-01-16 19:41:08",3
"Hyperledger Sawtooth","Rewrite the AWS tutorial","- Make procedures consistent (Docker, Ubuntu, & AWS)   - Remove reference content and unnecessary steps    Moved this item to -STL-1002-:   * Redraw picture to show example system    Moved this item to STL-1060:    - Convert intkey create_batch and load commands into intkey set, inc, dec, show, list and explain —wait",Improvement,Medium,Complete,"2018-01-16 19:40:36","2018-01-16 19:40:36",5
"Hyperledger Sawtooth","Reorganize Sawtooth documents to improve flow","- Collect SDK and API information in one chapter, “SDK and API Reference”   - Retitle Architecture",Improvement,Medium,Complete,"2018-01-16 19:39:20","2018-01-16 19:39:20",2
"Hyperledger Sawtooth","Log reason for failed block validation","Currently the block validator logs that a block failed, but it doesn't say why.",Bug,Medium,Complete,"2018-01-15 16:58:25","2018-01-15 16:58:25",1
"Hyperledger Sawtooth","Log full batch and transaction ids instead of truncating","Example of a bad message that truncates the batch id:    Jan  9 11:11:13 ec2-184-72-66-148.compute-1.amazonaws.com [psimlr7-node7]    DEBUG                     Thread-54                        chain Invalid batch f6fae4cf encountered during verification of block 52bdda9387194b6e71e25a07bfe1a8f59154a07ef959dc1531ce7ecef4d81f031799d610b227c4c0b610e952a379b4ee2f37acd5a436be1b61abf0562b53a2f9 (block_num:55, state:5aee65406b9ac2f442fb710bbd58f9148489359f8378b90c6d670768828e5beb, previous_block_id:83de41121c8801ec4bfd5228ece9c9cb2ed0c63fb871aae721ad7554fe747121615f09a9ce2344701945bb47b4f541453d9fc38c9475b4194b43ffc89e708925)",Improvement,Medium,Complete,"2018-01-13 23:54:06","2018-01-13 23:54:06",1
"Hyperledger Sawtooth","Develop outline for Application Developer Guide rewrite",,Improvement,Medium,Complete,"2018-01-11 19:38:43","2018-01-11 19:38:43",5
"Hyperledger Sawtooth","Create Debian Packages for Performance Tools",,Improvement,Medium,Complete,"2018-01-05 17:14:03","2018-01-05 17:14:03",3
"Hyperledger Sawtooth","Develop Approach for Application Developer Rewrite",,Improvement,Medium,Complete,"2018-01-05 14:57:32","2018-01-05 14:57:32",5
"Hyperledger Sawtooth","Create support for Basic Auth",,Improvement,Medium,Complete,"2018-01-05 14:56:32","2018-01-05 14:56:32",3
"Hyperledger Sawtooth","Create option to specify the number of Smallbank accounts to be created",,Improvement,Medium,Complete,"2018-01-05 14:56:03","2018-01-05 14:56:03",2
"Hyperledger Sawtooth","Create rate option to control the batches submitted per second",,Improvement,Medium,Complete,"2018-01-05 14:54:19","2018-01-05 14:54:19",2
"Hyperledger Sawtooth","Create URL option allowing multiple REST API URLs to be specified for batch submission",,Improvement,Medium,Complete,"2018-01-05 14:53:37","2018-01-05 14:53:37",5
"Hyperledger Sawtooth","Create seed option to specify the random seed, with the goal of creating predictable workloads",,Improvement,Medium,Complete,"2018-01-05 14:53:05","2018-01-05 14:53:05",2
"Hyperledger Sawtooth","Convert Smallbanlk Workload Gereration tool to a continously running tool ",,Improvement,Medium,Complete,"2018-01-05 14:51:05","2018-01-05 14:51:05",8
"Hyperledger Sawtooth","Publish Go SDK artifacts","Recommendation here is to keep the go-sdk in sawtooth-core, but as part of the release process, publish to hyperledger/sawtooth-go-sdk. Additional requirements for this will be including the protogen files as well as updating the paths to be friendly to 'go get'.","New Feature",Highest,Complete,"2018-01-04 22:15:22","2018-01-04 22:15:22",3
"Hyperledger Sawtooth","Implement command to generate peering graph","Possibly generate a text file from the CLI that can be read by a visualizer such as http://graphviz.org/,",Improvement,Medium,Complete,"2018-01-03 21:47:21","2018-01-03 21:47:21",3
"Hyperledger Sawtooth","Reduce memory consumption on block catchup","When a validator is way behind on a long chain, the size of the chain it can catchup on is bounded by the available memory. See Validator Catch-Up.","New Feature",High,Backlog,"2018-01-03 21:46:15","2018-01-03 21:46:15",3
"Hyperledger Sawtooth","Check consensus before and after block building","Check consensus at the beginning and the end of building a block, to prevent wasted effort.","New Feature",Medium,Backlog,"2018-01-03 21:45:32","2018-01-03 21:45:32",2
"Hyperledger Sawtooth","Implement command to prune the block store from a given block.","Example: {{sawadm prune <block-id>}}","New Feature",Medium,Complete,"2018-01-03 21:39:28","2018-01-03 21:39:28",3
"Hyperledger Sawtooth","Add metric for rate of rejected batches due to back pressure","* batches rejected per node (count)   * batches rejected per node (gauge)","New Feature",Medium,Complete,"2018-01-03 21:25:54","2018-01-03 21:25:54",1
"Hyperledger Sawtooth","Remove batches from block before broadcast after publishing","Remove batches from block (excluding injected batches) before broadcast after publishing","New Feature",Medium,Complete,"2018-01-03 21:25:00","2018-01-03 21:25:00",3
"Hyperledger Sawtooth","Add logging guidelines to Contributor's Guide","Should also include reaching consensus on these guidelines",Improvement,Lowest,Complete,"2018-01-03 21:23:00","2018-01-03 21:23:00",2
"Hyperledger Sawtooth","Add pyformance metrics around forking behavior","* blocks published per node   * blocks considered per node   * fork changes per node",Improvement,Medium,Complete,"2017-12-20 15:56:08","2017-12-20 15:56:08",2
"Hyperledger Sawtooth","API Implement Rules",,Improvement,Medium,Complete,"2017-12-12 20:53:27","2017-12-12 20:53:27",2
"Hyperledger Sawtooth","API Update Accounts",,Improvement,Medium,Complete,"2017-12-12 16:19:51","2017-12-12 16:19:51",1
"Hyperledger Sawtooth","JOURNAL: Implement block validation pipeline with backpressure ","This story was closed so that it could be decomposed into better stories.",Improvement,Medium,Complete,"2017-12-11 19:23:48","2017-12-11 19:23:48",3
"Hyperledger Sawtooth","Update PoET Specification","Update PoET Specification   * Reconcile PoeT specification published in Sawtooth docs with current PoET SGX implementation   * Review updated specification with PoET spec author.",Improvement,Medium,Backlog,"2017-12-08 23:05:24","2017-12-08 23:05:24",3
"Hyperledger Sawtooth","Create Offer Create Modal","Add modals for creating Offers, which should be linked from the Asset pages.         Should match the attached design:",Improvement,Medium,Complete,"2017-12-07 20:52:08","2017-12-07 20:52:08",2
"Hyperledger Sawtooth","Create Offer Detail Page","Create a page detailing the information for a particular Offer.    Should match the attached design:    !offer_detail.jpg!  ",Improvement,Medium,Complete,"2017-12-07 20:50:10","2017-12-07 20:50:10",2
"Hyperledger Sawtooth","NETWORKING:Implement fire-and-forget messaging pattern","Be able to send a message and not wait for a future result",Improvement,Medium,Complete,"2017-12-06 16:35:47","2017-12-06 16:35:47",2
"Hyperledger Sawtooth","JOURNAL: Add a method to the block_cache that accepts a chain and correctly orders it for dependencies. ","Improve block cache model, reference counting has been added but depends on ordering. Add a method to the block_cache that accepts a chain and correctly orders it for dependencies. ",Improvement,Medium,Complete,"2017-12-06 16:34:37","2017-12-06 16:34:37",1
"Hyperledger Sawtooth","NETWORKING: Ensure messages forwarded via broadcast are forwarded only once.","Add a Time-to-Live (TTL) to the messages, where (similar to UDP) this is the number of hops the message can make through the network",Improvement,Medium,Complete,"2017-12-06 16:32:56","2017-12-06 16:32:56",3
"Hyperledger Sawtooth","NETWORK-WIDE COMMANDS: Implement command to find the last common block between validators","coined divergence awhile ago. See code here for example algorithm: https://github.com/IntelLedger/sawtooth-ci/blob/c1e63ede50b85c42a7adca7b8e44cf2960c05ba2/longrun/lrmgr/monitor/divergence.py Example: sawadm compare-chain http://rest-api-a:8008/ http://rest-api-b:8008/",Improvement,Medium,Complete,"2017-12-06 16:30:50","2017-12-06 16:30:50",1
"Hyperledger Sawtooth","TP Offer Rules","Includes handling the following Rules which affect Offer behavior, and may be set on Assets or Offers (if set on Assets, they are automatically added to Offers involving that Asset):    EXCHANGE_ONCE  EXCHANGE_ONCE_PER_ACCOUNT  EXCHANGE_LIMITED_TO_ACCOUNTS",Improvement,Medium,Complete,"2017-12-05 19:48:43","2017-12-05 19:48:43",2
"Hyperledger Sawtooth","TP Asset Rules","Includes handling the following Rules which may be set on Assets:        OWNER_HOLDINGS_INFINITE  ALL_HOLDINGS_INFINITE  REQUIRE_TARGET_TYPES  REQUIRE_TARGET_QUANTITIES  REQUIRE_SOURCE_QUANTITIES",Improvement,Medium,Complete,"2017-12-05 19:46:05","2017-12-05 19:46:05",2
"Hyperledger Sawtooth","Create Admin Scripts for Sawbuck App",,Improvement,Medium,Complete,"2017-12-05 19:44:56","2017-12-05 19:44:56",2
"Hyperledger Sawtooth","Create Holding Creation Page",,Improvement,Medium,Complete,"2017-12-04 20:42:45","2017-12-04 20:42:45",0
"Hyperledger Sawtooth","Create Sign-up/Login Page",,Improvement,Medium,Complete,"2017-12-04 16:32:12","2017-12-04 16:32:12",2
"Hyperledger Sawtooth","API Accept/Close Offers","* PATCH /offers/\{id}/accept   ** Request for authorized Account to accept Offer   * PATCH /offers/\{id}/close   **   Request by owner of Offer to close it   ",Improvement,Medium,Complete,"2017-12-04 16:29:18","2017-12-04 16:29:18",2
"Hyperledger Sawtooth","API Fetch Offers","* GET /offers   ** Fetches complete details of all Offers in state   * GET /offers/\{id}   ** Fetches the details of particular Offer in state",Improvement,Medium,Complete,"2017-12-04 16:29:07","2017-12-04 16:29:07",1
"Hyperledger Sawtooth","API Create Offers","* POST /offers   **   Creates a new Offer in state   ",Improvement,Medium,Complete,"2017-12-04 16:28:55","2017-12-04 16:28:55",1
"Hyperledger Sawtooth","API Create Holdings","* POST /holdings   ** Creates a new Holding for the authorized Account",Improvement,Medium,Complete,"2017-12-04 16:28:45","2017-12-04 16:28:45",1
"Hyperledger Sawtooth","API Fetch Assets","* GET /assets   ** Fetches complete details of all Assets in state   * GET /assets/\{name}   **   Fetches the details of particular Asset in state   ",Improvement,Medium,Complete,"2017-12-04 16:28:29","2017-12-04 16:28:29",1
"Hyperledger Sawtooth","API Create Assets","* POST /assets   ** Creates a new Asset in state",Improvement,Medium,Complete,"2017-12-04 16:28:19","2017-12-04 16:28:19",1
"Hyperledger Sawtooth","API Fetch Accounts","* GET /accounts   ** Fetches complete details of all Accounts in state  * GET /accounts/{key}  ** Fetches the details of particular Account in state",Improvement,Medium,Complete,"2017-12-04 16:28:03","2017-12-04 16:28:03",2
"Hyperledger Sawtooth","API Create/Authorize Accounts","* POST /authorization   ** Allows a user to obtain an auth token with a valid email and password   * POST /accounts   ** Allows a user to create a new account in state   * authorization() header   ** Enforces a valid auth token for protected routes",Improvement,Medium,Complete,"2017-12-04 16:27:50","2017-12-04 16:27:50",3
"Hyperledger Sawtooth","TP Close Offer",,Improvement,Medium,Complete,"2017-12-04 16:22:19","2017-12-04 16:22:19",2
"Hyperledger Sawtooth","TP Accept Offer","After this story the TP will be tested to be able to handle the AcceptOffer txn   * Set an Offer to Accepted   * Follow the validation rules   ** The Acceptance follows the Offer and Asset rules.",Improvement,Medium,Complete,"2017-12-04 16:22:09","2017-12-04 16:22:09",2
"Hyperledger Sawtooth","TP Create Asset","After this story the marketplace-tp TransactionProcessor will be able to:   * Create an Asset in State   * Follow Validation rules for the creation of Assets   ** There must not be an Asset with the same Name   ** The Asset owner has an Account",Improvement,Medium,Complete,"2017-12-04 16:21:46","2017-12-04 16:21:46",2
"Hyperledger Sawtooth","TP Create Offer",,Improvement,Medium,Complete,"2017-12-04 16:21:34","2017-12-04 16:21:34",2
"Hyperledger Sawtooth","TP Create Holding","After this story the marketplace-tp will be tested to be able to handle a CreateHolding txn   * Set a Holding in State   * Follow validation rules   ** The Holding id must not already belong to a holding.   ** The account must exist.   ** The account must be owned by the txn signer.   ** The holding/Asset must exist.   ** If the quantity is greater than 0, the txn signer must be an owner of the asset.",Improvement,Medium,Complete,"2017-12-04 16:21:22","2017-12-04 16:21:22",2
"Hyperledger Sawtooth","TP Create Account","After this story the marketplace-tp will be tested to be able to handle a CreateAccount txn:   * Be able to set an Account in state   * Follow validation rules   ** The public key of the txn signer does not already have an account.",Improvement,Medium,Complete,"2017-12-04 16:21:04","2017-12-04 16:21:04",2
"Hyperledger Sawtooth","QA Ledger Sync",,Improvement,Medium,Complete,"2017-12-04 16:14:33","2017-12-04 16:14:33",1
"Hyperledger Sawtooth","Create Account Detail Page",,Improvement,Medium,Complete,"2017-12-04 16:12:04","2017-12-04 16:12:04",2
"Hyperledger Sawtooth","Create Offer Accept Modal","Add modals for accepting Offers, which should be linked from the Offer pages.         Should match the attached design:",Improvement,Medium,Complete,"2017-12-04 16:11:27","2017-12-04 16:11:27",2
"Hyperledger Sawtooth","Create Offer List Page","Build a page that lists Offers available, filtered to the user if logged in.         Should match the attached design:    !offer_list.jpg!",Improvement,Medium,Complete,"2017-12-04 16:11:10","2017-12-04 16:11:10",2
"Hyperledger Sawtooth","Create Asset Detail Page","Create a page with detailed information for a particular Asset.         Should match the attached design:",Improvement,Medium,Complete,"2017-12-04 16:10:57","2017-12-04 16:10:57",2
"Hyperledger Sawtooth","Create Asset List Page","Build a page listing Assets with their info.         Should match the attached design:    !asset_list.jpg!",Improvement,Medium,Complete,"2017-12-04 16:10:42","2017-12-04 16:10:42",2
"Hyperledger Sawtooth","Complete and Review UI Design",,Improvement,Medium,Complete,"2017-12-04 16:09:06","2017-12-04 16:09:06",1
"Hyperledger Sawtooth","Marketplace REST API Structure","* Server setup   * Database setup   * Error handling   * Signing   * Validator connection   * Routes   * Auth","New Feature",Medium,Complete,"2017-11-30 17:24:52","2017-11-30 17:24:52",3
"Hyperledger Sawtooth","Relax PoET registration freshness requirement","Validator registration requires a nonce referencing the latest block.    That is overly restrictive. The freshness goal is to make it unlikely that a validator was revoked from the EPID group at the time of registration.    Something on the order of 10 blocks should still be more than sufficient.    The current harm from the 1 block requirement is that it's very likely that a validator's signup will fail in proportion to the load on the network. i.e. the signup transaction can't be guaranteed to commit within 1 block of the validator creating the registration transaction.         Update code and Spec.",Improvement,Medium,Complete,"2017-11-29 19:08:48","2017-11-29 19:08:48",2
"Hyperledger Sawtooth","File permissions for sawtooth private key","Reported by Graham at Nettitude:    As part of the Nettitude assessment of Sawtooth, I’ve found that a default installation does not restrict access to the validator private key, located at “/etc/sawtooth/keys/validator.priv”.    This was found to be an issue with both the current stable Ubuntu packages and the most recent nightly build of the same. The installation and configuration procedure was as follows:    apt-get install sawtooth    sawadm keygen         The following file and directory modes were found:    drwxr-xr-x /etc/sawtooth    drwxr-xr-x /etc/sawtooth/keys    -rw-r--r-- /etc/sawtooth/keys/validator.priv    -rw-r--r-- /etc/sawtooth/keys/validator.pub         It was then confirmed that the private key could be accessed from an unprivileged account.    Running the validator in a separate docker container (as will often be the case) strongly mitigates this issue, however it would be imprudent to assume that configuration.    At a minimum, Nettitude would recommend changing the default file mode for the private key file from 644 to 600. Traditional UNIX philosophy would be to leave the public key as 644, but for a security-critical application like this there may be a case for restricting the entire hierarchy from /etc/sawtooth downwards (depending on what adverse impact, if any, this would have).    There are a number of other files and directories with public read access, and I’m currently in the process of looking to see if there is any security impact, but it is likely that the above private key is the most serious.",Improvement,Medium,Complete,"2017-11-27 17:30:47","2017-11-27 17:30:47",1
"Hyperledger Sawtooth","CORS configuration in Sawtooth REST API","Reported by Graham at Nettitude:    As part of the Nettitude assessment of Sawtooth, I’ve been looking at how the REST API handles CORS.    This is configured to be fully permissive: whenever a pre-flight request containing an ‘Origin’ field is received, the value of that field is reflected back as ‘Access-Control-Allow-Origin’.    For most web services this would be a clear-cut security weakness, however I would not go that far in this case because:   * It is clearly not an oversight (the code goes out of its way to allow the requests).   * So far as I’ve been able to determine, the Sawtooth REST API does not itself make any use of cookies, HTTP authentication, or any other tokens that could be targeted by an XSRF attack.    However, I have identified two residual concerns:   * I found some instructions at [https://sawtooth.hyperledger.org/docs/core/releases/latest/sysadmin_guide/rest_auth_proxy.html] for putting the REST API behind an authenticating proxy. My understanding is that proxy servers vary somewhat in terms of which headers they preserve, but there seems to be at least a possibility that XSRF could be an issue.   * It does give attackers a useful extra option if attacks can be launched via the web browsers of unwitting third parties.    For these reasons I would recommend that the CORS behaviour should at least be configurable, and preferably set to non-permissive by default. I’d also recommend using a wildcard (‘*’) in preference to reflecting the origin field, unless there is a good reason not to, as this is less susceptible to XSRF.",Improvement,Medium,Complete,"2017-11-27 17:28:33","2017-11-27 17:28:33",1
"Hyperledger Sawtooth","Replay attack protection in Sawtooth challenge authentication","Reported by Graham at Nettitude:    As part of the Nettitude assessment of Sawtooth, I’ve been looking at whether the Challenge authentication method provides adequate protection against replay attacks.    It appears to go some way towards this: when an AuthorizationChallengeRequest is received, the validator replies with an AuthorizationChallengeResponse containing a 64-byte random payload. The client must reply AuthorizationChallengeSubmit containing a signed copy of the random payload. Since the payload changes for each exchange, the signature should too.    The only problem is that the validator does not appear to keep a copy of the random payload that was sent. Instead it trusts the copy of the payload sent back by the client, without checking that it is the same as the challenge issued.    I haven’t currently developed this as far as a practical exploit, and it is possible there is something I’ve missed. For example, even without recording the challenge, you could conceivably make the exchange secure by recording previously-used payloads. However I have looked, and have not found anything of that nature.    Grateful for a view as to whether there are any mitigations that I’ve overlooked, or if this is a potential vulnerability",Improvement,Medium,Complete,"2017-11-27 17:25:17","2017-11-27 17:25:17",2
"Hyperledger Sawtooth","QA Tasks",,Improvement,Medium,Complete,"2017-11-21 15:33:30","2017-11-21 15:33:30",2
"Hyperledger Sawtooth","QA Tasks",,Improvement,Medium,Complete,"2017-11-21 15:33:23","2017-11-21 15:33:23",2
"Hyperledger Sawtooth","QA Tasks","Any bug fixes that come up during development",Improvement,Medium,Complete,"2017-11-21 15:33:16","2017-11-21 15:33:16",2
"Hyperledger Sawtooth","Design API",,Improvement,Medium,Complete,"2017-11-21 15:32:17","2017-11-21 15:32:17",2
"Hyperledger Sawtooth","Design Loyalty Point Client ",,Improvement,Medium,Complete,"2017-11-21 15:31:38","2017-11-21 15:31:38",2
"Hyperledger Sawtooth","LedgerSync Build ",,Improvement,Medium,Complete,"2017-11-21 15:31:12","2017-11-21 15:31:12",2
"Hyperledger Sawtooth","Build TXN Encoder",,Improvement,Medium,Complete,"2017-11-21 15:30:39","2017-11-21 15:30:39",2
"Hyperledger Sawtooth","TP Create Repo-Enable Protobuffs",,Improvement,Medium,Complete,"2017-11-21 15:29:29","2017-11-21 15:29:29",1
"Hyperledger Sawtooth","TP Addressing Packages",,Improvement,Medium,Complete,"2017-11-21 15:28:19","2017-11-21 15:28:19",2
"Hyperledger Sawtooth","Rewrite transaction submission doc to remove Encoder references",,"New Feature",Medium,Complete,"2017-11-20 21:57:00","2017-11-20 21:57:00",0
"Hyperledger Sawtooth","Test Raft consensus engine","See design doc for details","New Feature",Medium,Complete,"2017-11-20 18:30:33","2017-11-20 18:30:33",2
"Hyperledger Sawtooth","Implement Raft with Consensus Engine SDK","See design doc for details","New Feature",Medium,Complete,"2017-11-20 18:30:33","2017-11-20 18:30:33",5
"Hyperledger Sawtooth","Verify Engine and Validator communicate correctly","See design doc for details","New Feature",Medium,Backlog,"2017-11-20 18:30:32","2017-11-20 18:30:32",1
"Hyperledger Sawtooth","Unconsensus Engine for testing","See design doc for details","New Feature",Medium,Backlog,"2017-11-20 18:30:32","2017-11-20 18:30:32",3
"Hyperledger Sawtooth","Verify handlers, proxy, and SDK interact correctly (Integration tests)","See design doc for details","New Feature",Medium,Backlog,"2017-11-20 18:30:32","2017-11-20 18:30:32",1
"Hyperledger Sawtooth","Implement Engine methods","See design doc for details","New Feature",Medium,Complete,"2017-11-20 18:30:32","2017-11-20 18:30:32",2
"Hyperledger Sawtooth","Implement Query methods","See design doc for details","New Feature",Medium,Complete,"2017-11-20 18:30:32","2017-11-20 18:30:32",2
"Hyperledger Sawtooth","Implement Block management","See design doc for details","New Feature",Medium,Complete,"2017-11-20 18:30:31","2017-11-20 18:30:31",2
"Hyperledger Sawtooth","Implement Block creation","See design doc for details","New Feature",Medium,Backlog,"2017-11-20 18:30:31","2017-11-20 18:30:31",2
"Hyperledger Sawtooth","Implement Event handlers","See design doc for details","New Feature",Medium,Complete,"2017-11-20 18:30:31","2017-11-20 18:30:31",3
"Hyperledger Sawtooth","Unit test consensus message handlers","See design doc for details","New Feature",Medium,Complete,"2017-11-20 18:30:31","2017-11-20 18:30:31",2
"Hyperledger Sawtooth","Implement consensus proxy interface","See design doc for details","New Feature",Medium,Backlog,"2017-11-20 18:30:31","2017-11-20 18:30:31",5
"Hyperledger Sawtooth","Create new message handlers (Pass through to proxy)","See design doc for details","New Feature",Medium,Complete,"2017-11-20 18:30:30","2017-11-20 18:30:30",2
"Hyperledger Sawtooth","Verify Publisher, Controller, and Proxy interact correctly (Integration tests)","See design doc for details","New Feature",Medium,Backlog,"2017-11-20 18:30:30","2017-11-20 18:30:30",3
"Hyperledger Sawtooth","Give Consensus Proxy control of Block Publisher, Chain Controller","See design doc for details","New Feature",Medium,Backlog,"2017-11-20 18:30:30","2017-11-20 18:30:30",3
"Hyperledger Sawtooth","Define how dynamic, pluggable consensus works","See design doc for details","New Feature",Medium,Backlog,"2017-11-20 18:30:30","2017-11-20 18:30:30",2
"Hyperledger Sawtooth","Implement observer pattern for block validation","See design doc for details","New Feature",Medium,Backlog,"2017-11-20 18:30:29","2017-11-20 18:30:29",2
"Hyperledger Sawtooth","Create block validation pipeline","See design doc for details","New Feature",Medium,Complete,"2017-11-20 18:30:29","2017-11-20 18:30:29",2
"Hyperledger Sawtooth","Make peer threshold configurable ",,"New Feature",Medium,Complete,"2017-11-20 16:18:03","2017-11-20 16:18:03",1
"Hyperledger Sawtooth","Wait option on sawtooth batch submit CLI fails","batch submit works fine for this batch but adding the --wait option throws a stack trace.         sawtooth batch submit -f poet-settings.batch --url http://rest-api:8080 --wait    batches: 1,  batch/sec: 53.31448691385644    Traceback (most recent call last):(      File /project/sawtooth-core/cli/sawtooth_cli/main.py, line 160, in main_wrapper        main()      File /project/sawtooth-core/cli/sawtooth_cli/main.py, line 144, in main        do_batch(args)      File /project/sawtooth-core/cli/sawtooth_cli/batch.py, line 152, in do_batch        do_batch_submit(args)      File /project/sawtooth-core/cli/sawtooth_cli/batch.py, line 275, in do_batch_submit        if all(s.status == 'COMMITTED' for s in statuses):      File /project/sawtooth-core/cli/sawtooth_cli/batch.py, line 275, in <genexpr>        if all(s.status == 'COMMITTED' for s in statuses):    AttributeError: 'dict' object has no attribute 'status'",Bug,Medium,Complete,"2017-11-16 21:54:52","2017-11-16 21:54:52",1
"Hyperledger Sawtooth","Validate validator protobuf message input in message handlers","* Ensure that all input meets specifications.   * Validate all input to ensure that it is in the expected form, does not contain unwanted garbage or executable characters to ensure that an overflow, improper access or other unexpected behavior cannot occur as a result of consuming the input.   * Proper handling of invalid input: Use exception handling or other programmatic methods to ensure overflow or unexpected behavior is handled properly.   * Verify that unit tests exercise positive and negative input validation, document if coming up short",Improvement,Medium,Backlog,"2017-11-16 19:29:40","2017-11-16 19:29:40",3
"Hyperledger Sawtooth","Implement Client Signer for Javascript SDK",,"New Feature",Medium,Complete,"2017-11-14 20:39:20","2017-11-14 20:39:20",2
"Hyperledger Sawtooth","Publish 1.0 Release Artifacts","Task for Release sawtooth-core v1.0.0  ",Improvement,Medium,Complete,"2017-11-09 20:32:09","2017-11-09 20:32:09",1
"Hyperledger Sawtooth","Set-up 1.0 Debian Repositries","Task for Release sawtooth-core v1.0.0",Improvement,Medium,Complete,"2017-11-09 20:31:12","2017-11-09 20:31:12",1
"Hyperledger Sawtooth","Add cli configuration file",,"New Feature",Medium,Complete,"2017-11-09 20:01:05","2017-11-09 20:01:05",2
"Hyperledger Sawtooth","Add identity.toml configuration file",,"New Feature",Medium,Complete,"2017-11-09 20:00:45","2017-11-09 20:00:45",1
"Hyperledger Sawtooth","Make the BlockValidator and ChainController less tightly coupled","Even though the BlockValidator will be separate from the ChainController, they are still tightly coupled because:  1. The ChainController manages blocks in process and blocks pending  2. The ChainController acts as an intermediary between the completer and BlockValidator  3. The ChainController creates the consensus module used by the BlockValidator for validation when the BlockValidator could do this  4. The BlockValidator keeps track of the chain head and validation results contain the chain head instead of the previous block.",Improvement,Medium,Complete,"2017-11-09 15:37:00","2017-11-09 15:37:00",3
"Hyperledger Sawtooth","Remove knowledge of chains and forks from Block Validator","Current, the block validator does some work that ought to be handle by the chain controller, such as determining which chain to accept. This should be moved to the chain controller.",Improvement,Medium,Complete,"2017-11-09 15:30:41","2017-11-09 15:30:41",2
"Hyperledger Sawtooth","Add events and receipts to JS SDK",,Improvement,Medium,Complete,"2017-11-08 21:44:40","2017-11-08 21:44:40",3
"Hyperledger Sawtooth","Document configuration files","Document config files for validator, REST API, and SGX. These will be added to the sys admin guide (and may resemble [https://sawtooth.hyperledger.org/docs/core/releases/latest/sysadmin_guide/log_configuration.html|https://sawtooth.hyperledger.org/docs/core/releases/latest/sysadmin_guide/log_configuration.html).]). There are several example config files in the repo:   * sawtooth-core/validator/packaging/validator.toml.example   * /sawtooth-core/consensus/poet/sgx/packaging/poet_enclave_sgx.toml.example   * /sawtooth-core/rest_api/packaging/rest_api.toml.example",Improvement,Medium,Complete,"2017-11-03 22:02:54","2017-11-03 22:02:54",3
"Hyperledger Sawtooth","Update SDK TP docstrings","Update the docstrings for all public functions used for making transaction processors (e.g. context.set_state) and make them consistent across Python, Go, and Javascript.",Improvement,Medium,Complete,"2017-11-03 21:52:02","2017-11-03 21:52:02",1
"Hyperledger Sawtooth","Improve usage text for sawtooth CLIs","Improve the usage text for these CLIs:   * identity-tp   * intkey TPs   * poet-validator-registry-tp   * settings-tp   * xo TPs     * poet   * xo     * sawtooth admin   * sawtooth \{block,batch,transaction,state}   * sawtooth config   * sawtooth identity   * sawtooth keygen   * sawtooth-rest-api   * sawtooth-validator     ",Improvement,High,Complete,"2017-10-30 19:26:43","2017-10-30 19:26:43",3
"Hyperledger Sawtooth","Ensure comprehensive doc updates for 1.0 Release","      ",Improvement,Medium,Complete,"2017-10-30 19:04:28","2017-10-30 19:04:28",5
"Hyperledger Sawtooth","Document the event subsystem for the 1.0 Release","Source information:    * Sawtooth documentation: Events and Transaction Receipts (Architecture guide)   [https://sawtooth.hyperledger.org/docs/core/nightly/master/architecture/events_and_transactions_receipts.html]   (Based on the design doc at [https://docs.google.com/document/d/1RyCo-T912_bfcDVz7Eg9ZX6HG2rtOL_IvLidh0VvOZs/] )        * Demo: [https://github.com/aludvik/sawtooth-core/tree/events_demo/events_demo]      ",Task,High,Complete,"2017-10-30 18:53:27","2017-10-30 18:53:27",3
"Hyperledger Sawtooth","Implement Signer for Go SDK",,Improvement,Medium,Complete,"2017-10-30 14:22:23","2017-10-30 14:22:23",3
"Hyperledger Sawtooth","Implement Client Builder for Go SDK",,Improvement,Medium,Complete,"2017-10-30 14:21:33","2017-10-30 14:21:33",3
"Hyperledger Sawtooth","Add Raft library to BoM and runtime deps","Once the ELA decision is final, add the library to Sawtooth.",Improvement,Medium,Complete,"2017-10-27 21:56:51","2017-10-27 21:56:51",2
"Hyperledger Sawtooth","Implement P2P messaging","See design doc. This should be similar to the Transaction Processor SDK in that it handles (un)marshaling messages and listening/sending messages.",Improvement,Medium,Complete,"2017-10-27 21:55:49","2017-10-27 21:55:49",2
"Hyperledger Sawtooth","Consensus Proxy unit tests","Create unit tests for the consensus proxy",Improvement,Medium,Backlog,"2017-10-27 21:54:44","2017-10-27 21:54:44",2
"Hyperledger Sawtooth","Define consensus proxy interface","Meet with Adam, Peter to discuss     ",Improvement,Medium,Backlog,"2017-10-27 21:54:07","2017-10-27 21:54:07",1
"Hyperledger Sawtooth","Create consensus.proto protobuf messages","New protobuf messages need to be created for the consensus engine interface. See the final design document. Block and ConsensusMessages are roughly defined. A pair of request, response messages needs to be created for every method.",Improvement,Medium,Complete,"2017-10-27 21:53:43","2017-10-27 21:53:43",2
"Hyperledger Sawtooth","Create long-lived consensus branch",,Improvement,Medium,Complete,"2017-10-27 21:52:00","2017-10-27 21:52:00",1
"Hyperledger Sawtooth","Research additional architecture change stories","Need to do more work on the architecture changes for the prototype before more stories can be created.",Improvement,Medium,Complete,"2017-10-27 21:51:38","2017-10-27 21:51:38",1
"Hyperledger Sawtooth","Separate BlockValidator from Journal","The goal is to create a block pipeline.",Improvement,Medium,Complete,"2017-10-27 21:50:54","2017-10-27 21:50:54",3
"Hyperledger Sawtooth","Separate out journal components","Break the ChainController and BlockPublisher out of Journal",Improvement,Medium,Complete,"2017-10-27 21:49:50","2017-10-27 21:49:50",2
"Hyperledger Sawtooth","Split out ClientBlockGetRequest into ClientBlockGetByIdRequest and  ClientBlockGetByNumRequest",,Improvement,Medium,Complete,"2017-10-27 20:15:47","2017-10-27 20:15:47",1
"Hyperledger Sawtooth","Rename Entry in state_context.proto to TpStateEntry",,Improvement,Medium,Complete,"2017-10-27 20:13:47","2017-10-27 20:13:47",1
"Hyperledger Sawtooth","Add ClientGetBlockByTransaction and -Batch","Both these new requests replace the GetTransaction and GetBatch response returning the block_id, which should be removed from both responses.",Improvement,Medium,Complete,"2017-10-27 20:12:45","2017-10-27 20:12:45",2
"Hyperledger Sawtooth","Rename TpAddEvent  to TpEventAdd and TpAddRecieptData to TpReceiptAddData",,Improvement,Medium,Complete,"2017-10-27 20:11:33","2017-10-27 20:11:33",1
"Hyperledger Sawtooth","Update TpProcessRequest to take a TransactionHeader object instead of bytes (update sdk and transaction handlers)",,Improvement,Medium,Complete,"2017-10-27 20:10:31","2017-10-27 20:10:31",1
"Hyperledger Sawtooth","Remove head_id from ClientStateListRequest",,Improvement,Medium,Complete,"2017-10-27 20:09:39","2017-10-27 20:09:39",2
"Hyperledger Sawtooth","Change any sorts that cannot be optimized to InvalidSorts for 1.0",,Improvement,Medium,Complete,"2017-10-27 20:08:54","2017-10-27 20:08:54",1
"Hyperledger Sawtooth","Update TP_STATE_DELs TO BE TP_STATE_DELETEs",,"New Feature",Medium,Complete,"2017-10-26 21:36:18","2017-10-26 21:36:18",1
"Hyperledger Sawtooth","Make content_type an enum in Gossip Message",,"New Feature",Medium,Complete,"2017-10-26 21:33:30","2017-10-26 21:33:30",1
"Hyperledger Sawtooth","Add default UNSET option to all protobuf enums",,"New Feature",Medium,Complete,"2017-10-26 21:32:41","2017-10-26 21:32:41",2
"Hyperledger Sawtooth","Create PoET liveness test","The current PoET tests (test_poet_smoke, test_dynamic_network) are insufficient for gating PRs. They only test that the nodes are in consensus after a period of time. This means that the test will succeed even if no blocks are published after the genesis block.    In the interest of getting LR networks to pass, an additional integration test will be created to test that PoET is behaving correctly. The test should be an abbreviate version of the LR network tests. At a minimum, it should test that:  1. Blocks are being published at approximately the correct rate. (liveness)    2. Batches are being consumed at approximately the correct rate. (liveness)    3. Blocks contain batches. (liveness)    4. The nodes stay in consensus. (correctness)",Bug,Highest,Complete,"2017-10-26 20:41:58","2017-10-26 20:41:58",1
"Hyperledger Sawtooth","Add unschedule_incomplete_batches() to Scheduler","In order to create blocks when the consensus module deems a node to have won the block, the scheduler needs to discard any unprocessed batches.  Otherwise, the remaining batches' processing time may extend past the window of opportunity for claiming the block.    Add a {{scheduler.unschedule_incomplete_batches()}} function, which takes any uncompleted transactions and removes them from the schedule.    The flow should be:     ","New Feature",Medium,Complete,"2017-10-25 20:08:30","2017-10-25 20:08:30",3
"Hyperledger Sawtooth","Implement ability to pass in an error handler function with a TransactionHandler",,Improvement,Medium,Backlog,"2017-10-24 22:10:09","2017-10-24 22:10:09",3
"Hyperledger Sawtooth","Change Go & JS transaction handler FamilyVersion -> FamilyVersions","Go and JS transaction handlers should return a list of strings for FamilyVersions, not a single string.",Improvement,Medium,Complete,"2017-10-24 19:30:06","2017-10-24 19:30:06",1
"Hyperledger Sawtooth","Add AMI-Compatible Server Config","The JWT secret, batcher private key, and Google Maps API key all need to be configurable in a manner compatible with an AMI deployment. In particular, deploying users will need to be able use the web client to input the API key.",Improvement,Medium,Complete,"2017-10-24 16:30:02","2017-10-24 16:30:02",2
"Hyperledger Sawtooth","Add Client Get Peer List","Provide a way for a client to query a validator's current peer list.  This list should include only authorized peers in the gossip network only.",Improvement,Medium,Complete,"2017-10-23 20:27:57","2017-10-23 20:27:57",2
"Hyperledger Sawtooth","Move SupplyChain and Private UTXO examples to other chapters","Work with Shawn to find a home for the SupplyChain Examples and Private UTXO Example sections, then delete the separate Examples chapter.  See:     https://sawtooth.hyperledger.org/docs/core/nightly/master/examples.html     ",Task,Medium,Complete,"2017-10-20 16:35:14","2017-10-20 16:35:14",1
"Hyperledger Sawtooth","Get Cian's corrections for the Arch doc's Journal section","In Andi's review of the ST doc (STL-708): Ask <USER>to review the Journal section (in the Architecture chapter) and supply corrections as necessary.     See  [http://intelledger.github.io/0.9/architecture/journal.html]     Or  [https://sawtooth.hyperledger.org/docs/core/nightly/master/architecture/journal.html] ",Task,High,Complete,"2017-10-20 15:47:27","2017-10-20 15:47:27",1
"Hyperledger Sawtooth","Rename State in Javascript SDK to context and update the methods to match Python SDK","This may already be done. ",Improvement,Medium,Complete,"2017-10-16 20:07:28","2017-10-16 20:07:28",1
"Hyperledger Sawtooth","Implement Signer for Python SDK",,Improvement,Medium,Complete,"2017-10-16 20:00:17","2017-10-16 20:00:17",3
"Hyperledger Sawtooth","Implement Client Builders for Python SDK ",,Improvement,Medium,Backlog,"2017-10-16 19:59:56","2017-10-16 19:59:56",2
"Hyperledger Sawtooth","Remove Log and Config from Python Client SDK",,Improvement,Medium,Complete,"2017-10-16 19:57:07","2017-10-16 19:57:07",2
"Hyperledger Sawtooth","Update state -> context, get_state, set_state in SDK examples",,Improvement,Medium,Complete,"2017-10-16 19:56:59","2017-10-16 19:56:59",1
"Hyperledger Sawtooth","Remove Workload from Python SDK","workload should be moved into intkey_cli",Improvement,Medium,Complete,"2017-10-16 19:56:15","2017-10-16 19:56:15",1
"Hyperledger Sawtooth","Update add_receipt_data and add_event to return InternalError instead of InvalidTransaction",,Improvement,Medium,Complete,"2017-10-16 19:53:02","2017-10-16 19:53:02",1
"Hyperledger Sawtooth","Add delete to XO Transaction Handler",,Improvement,Medium,Complete,"2017-10-16 19:50:32","2017-10-16 19:50:32",1
"Hyperledger Sawtooth","Return AuthorizationException from Context in Python SDK",,Improvement,Medium,Complete,"2017-10-16 19:49:29","2017-10-16 19:49:29",1
"Hyperledger Sawtooth","Remove StateEntry from Context in Python SDK","The other SDKs only pass a dict/map \{address: data} to set_state. To be consistent with them, StateEntry will be removed and a dict will be passed instead. ",Improvement,Medium,Complete,"2017-10-16 19:48:56","2017-10-16 19:48:56",1
"Hyperledger Sawtooth","Add Abstract TransactionHandler to Python SDK","The other SDKs have some sort of interface for TransactionHandlers. Python SDK, however,  does not. An Abstract Base class will be added for TransactionHandlers. All current Transaction Handlers should inherit from this base class. ",Improvement,Medium,Complete,"2017-10-16 19:48:28","2017-10-16 19:48:28",1
"Hyperledger Sawtooth","Revisit Block Catch-up Mechanism",,Improvement,Medium,Complete,"2017-10-16 15:05:08","2017-10-16 15:05:08",3
"Hyperledger Sawtooth","Replace SettingsViewFactory with ObserverCache",,Improvement,Medium,Complete,"2017-10-16 15:04:57","2017-10-16 15:04:57",3
"Hyperledger Sawtooth","Reduce Batch Size Sensitivity",,Improvement,Medium,Backlog,"2017-10-16 15:04:45","2017-10-16 15:04:45",3
"Hyperledger Sawtooth","Implement Stochastic Gossip Messaging",,Improvement,Medium,Backlog,"2017-10-16 15:04:31","2017-10-16 15:04:31",2
"Hyperledger Sawtooth","Improve Network Message Handling",,Improvement,Medium,Backlog,"2017-10-16 15:04:19","2017-10-16 15:04:19",3
"Hyperledger Sawtooth","Evaluate Log Messages for Performance Impact","Evaluate the logging level of the messages in validator  Investigate expensive operations in logging statements and how to avoid expending the effort when the logging statement is not used  Investigate where additional logging messages would improve debugging   Investigate removing no value logging messages  Determine the value of utilizing trace-level logging messaging (low-level messages should not be turned on)",Improvement,Medium,Complete,"2017-10-16 15:04:05","2017-10-16 15:04:05",3
"Hyperledger Sawtooth","Improve Scheduler Performace",,Improvement,Medium,Backlog,"2017-10-16 15:03:50","2017-10-16 15:03:50",3
"Hyperledger Sawtooth","Improve ClientGetStateList performance",,Improvement,Medium,Backlog,"2017-10-16 15:03:39","2017-10-16 15:03:39",3
"Hyperledger Sawtooth","Improve ClientGetBlockList performance",,Improvement,Medium,Complete,"2017-10-16 15:03:28","2017-10-16 15:03:28",2
"Hyperledger Sawtooth","update metapackage to install specific versions",,Improvement,Medium,Complete,"2017-10-16 14:21:47","2017-10-16 14:21:47",1
"Hyperledger Sawtooth","investigate renaming dockerhub repos",,Improvement,Medium,Complete,"2017-10-16 14:21:08","2017-10-16 14:21:08",1
"Hyperledger Sawtooth","investigate javascript packaging",,Improvement,Medium,Complete,"2017-10-16 14:20:20","2017-10-16 14:20:20",2
"Hyperledger Sawtooth","investigate rust packaging",,Improvement,Medium,Complete,"2017-10-16 14:19:01","2017-10-16 14:19:01",2
"Hyperledger Sawtooth","investigate go packaging",,Improvement,Medium,Complete,"2017-10-16 14:17:50","2017-10-16 14:17:50",2
"Hyperledger Sawtooth","Determine doc impact for SDK/API changes","Will work with team; monitor JIRAs and source information, including this helpful Google Doc:    [https://docs.google.com/document/d/1OvJklvai14PGgJBj159-nNgiYjrJyNeSBh3k0udvRFs/edit]     ",Improvement,Medium,Complete,"2017-10-13 21:13:30","2017-10-13 21:13:30",2
"Hyperledger Sawtooth","Create language for AWS Marketplace AMI submission",,Improvement,Medium,Complete,"2017-10-13 16:50:29","2017-10-13 16:50:29",1
"Hyperledger Sawtooth","Improve usage text for `identity-tp`","Work with the assignee of STL-749 to improve usage text.",Improvement,Medium,Complete,"2017-10-13 16:02:54","2017-10-13 16:02:54",1
"Hyperledger Sawtooth","Improve usage text for `poet-validator-registry-tp`","Work with the assignee of STL-748 to improve usage text.",Improvement,Medium,Complete,"2017-10-13 16:01:56","2017-10-13 16:01:56",1
"Hyperledger Sawtooth","Improve usage text for `settings-tp`","Work with the assignee of STL-747 to improve usage text.",Improvement,Medium,Complete,"2017-10-13 16:01:06","2017-10-13 16:01:06",1
"Hyperledger Sawtooth","Improve usage text for intkey TPs","Work with the assignee of STL-746 to improve usage text.",Improvement,Medium,Complete,"2017-10-13 16:00:16","2017-10-13 16:00:16",1
"Hyperledger Sawtooth","Improve usage text for xo TPs","Work with the assignee of STL-745 to improve usage text.",Improvement,Medium,Complete,"2017-10-13 15:59:22","2017-10-13 15:59:22",1
"Hyperledger Sawtooth","Improve usage text for `poet`","Work with the assignee of STL-743 to improve usage text.",Improvement,Medium,Complete,"2017-10-13 15:58:22","2017-10-13 15:58:22",1
"Hyperledger Sawtooth","Improve usage text for `xo`","Work with the assignee of STL-742 to improve usage text.",Improvement,Medium,Complete,"2017-10-13 15:55:15","2017-10-13 15:55:15",1
"Hyperledger Sawtooth","Improve usage text for `sawtooth identity`","Work with the assignee of STL-740 to improve usage text.",Improvement,Medium,Complete,"2017-10-13 15:53:24","2017-10-13 15:53:24",1
"Hyperledger Sawtooth","Improve usage text for `sawtooth {block,batch,transaction,state}`","Work with the assignee of STL-738 to improve usage text.",Improvement,Medium,Complete,"2017-10-13 15:51:24","2017-10-13 15:51:24",1
"Hyperledger Sawtooth","Improve usage text for `sawtooth config`","Work with the assignee of STL-737 to improve usage text.",Improvement,Medium,Complete,"2017-10-13 15:50:26","2017-10-13 15:50:26",1
"Hyperledger Sawtooth","Improve usage text for `sawtooth admin`","Work with the assignee of STL-736 to improve usage text.",Improvement,Medium,Complete,"2017-10-13 15:49:08","2017-10-13 15:49:08",1
"Hyperledger Sawtooth","Improve usage text for `sawtooth keygen`","Work with the assignee of STL-734 to improve usage text.",Improvement,Medium,Complete,"2017-10-13 15:48:02","2017-10-13 15:48:02",1
"Hyperledger Sawtooth","Improve usage text for `sawtooth-validator`","Work with the assignee of STL-732 to improve usage text.",Improvement,Medium,Complete,"2017-10-13 15:46:44","2017-10-13 15:46:44",1
"Hyperledger Sawtooth","Improve usage text for `sawtooth-rest-api`","Work with the assignee of STL-732 to edit the usage text.",Improvement,Medium,Complete,"2017-10-13 15:43:10","2017-10-13 15:43:10",1
"Hyperledger Sawtooth","Improve Introduction section of Sawtooth doc","Rewrite and expand the Introduction section of the Sawtooth doc.  ",Improvement,Low,Complete,"2017-10-13 15:29:58","2017-10-13 15:29:58",3
"Hyperledger Sawtooth","Edit Sawtooth doc for 1.0 release (consistency, clarity, and style)","Based on the edit plan for the Sawtooth doc, edit and rewrite the top-priority content to  fix inconsistencies, unclear content, format, wording, etc. for the 1.0 release.",Improvement,Medium,Complete,"2017-10-13 15:19:57","2017-10-13 15:19:57",3
"Hyperledger Sawtooth","Develop edit approach for Sawtooth doc (consistency, clarity, and style)","Triage the Sawtooth doc to determine what text needs to be improved (inconsistencies, unclear content, format, wording, etc.) and prioritize changes for the 1.0 release.",Improvement,Medium,Complete,"2017-10-13 15:18:52","2017-10-13 15:18:52",3
"Hyperledger Sawtooth","Get rid of `xo init`","`xo init` is stateful, unintuitive, and out of step with the rest of the CLI commands. `–url` and `–username` flags should be added to the other `xo` commands, giving for example `xo take game 3 --url rest-api:8080 --username ubuntu`. This is extra typing, but probably nobody is going to be using `xo` enough for the reduction in typing to be worth the complexity of the `init` command.",Improvement,Medium,Complete,"2017-10-13 14:03:33","2017-10-13 14:03:33",1
"Hyperledger Sawtooth","Improve usage text for `identity-tp`",,Improvement,Medium,Complete,"2017-10-13 00:11:05","2017-10-13 00:11:05",1
"Hyperledger Sawtooth","Improve usage text for `poet-validator-registry-tp`",,Improvement,Medium,Backlog,"2017-10-13 00:09:47","2017-10-13 00:09:47",1
"Hyperledger Sawtooth","Improve usage text for `settings-tp`",,Improvement,Medium,Complete,"2017-10-13 00:09:15","2017-10-13 00:09:15",1
"Hyperledger Sawtooth","Improve usage text for intkey TPs",,Improvement,Medium,Complete,"2017-10-13 00:08:47","2017-10-13 00:08:47",1
"Hyperledger Sawtooth","Improve usage text for xo TPs",,Improvement,Medium,Complete,"2017-10-13 00:08:14","2017-10-13 00:08:14",1
"Hyperledger Sawtooth","Rewrite CLI usage text for clarity and consistency","Rewrite the CLI usage statements to use the same terminology, level of detail, and clarity/usefulness.  Currently, this info varies across the CLIs.  This is a major edit that will need help from the various CLI experts to clarify some sentences and to review the results.    This task should wait until after the 1.0 CLI usage changes have been done.",Improvement,Medium,Complete,"2017-10-13 00:08:00","2017-10-13 00:08:00",5
"Hyperledger Sawtooth","Improve usage text for `poet`",,Improvement,Medium,Backlog,"2017-10-13 00:07:37","2017-10-13 00:07:37",1
"Hyperledger Sawtooth","Improve usage text for `xo`",,Improvement,Medium,Complete,"2017-10-13 00:06:49","2017-10-13 00:06:49",1
"Hyperledger Sawtooth","Improve usage text for `intkey`",,Improvement,Medium,Complete,"2017-10-13 00:06:14","2017-10-13 00:06:14",1
"Hyperledger Sawtooth","Improve usage text for `sawtooth identity`",,Improvement,Medium,Complete,"2017-10-13 00:05:37","2017-10-13 00:05:37",1
"Hyperledger Sawtooth","Edit all CLI usage text for format, grammar, punctuation, etc.","Do a light edit on all CLI usage text to correct easy-to-fix issues and make the format/style consistent (for example, punctuation and capitalization).    This task should wait until the 1.0 CLI usage changes are done.",Improvement,Low,Complete,"2017-10-12 23:58:59","2017-10-12 23:58:59",3
"Hyperledger Sawtooth","Improve usage text for `sawtooth {block,batch,transaction,state}`",,Improvement,Medium,Complete,"2017-10-12 23:52:42","2017-10-12 23:52:42",1
"Hyperledger Sawtooth","Improve usage text for `sawtooth config`",,Improvement,Medium,Complete,"2017-10-12 23:51:35","2017-10-12 23:51:35",1
"Hyperledger Sawtooth","Improve usage text for `sawtooth admin`",,Improvement,Medium,Complete,"2017-10-12 23:51:23","2017-10-12 23:51:23",1
"Hyperledger Sawtooth","Add sawtooth keygen to CLI Reference doc","The sawtooth keygen usage text is missing from the CLI Reference chapter of the Sawtooth doc. Assuming that the usage file is being generated, it simply needs to be included in the CLI contents file.    If the usage file isn't being generated, or if there's no usage text in the code, I'll need to pull in someone else to help with the fix.",Bug,Medium,Complete,"2017-10-12 23:51:22","2017-10-12 23:51:22",1
"Hyperledger Sawtooth","Improve usage text for `sawtooth keygen`",,Improvement,Medium,Complete,"2017-10-12 23:50:56","2017-10-12 23:50:56",1
"Hyperledger Sawtooth","Improve usage text for `sawtooth-validator`",,Improvement,Medium,Complete,"2017-10-12 23:49:08","2017-10-12 23:49:08",1
"Hyperledger Sawtooth","Improve usage text for `sawtooth-rest-api`",,Improvement,Medium,Complete,"2017-10-12 23:48:04","2017-10-12 23:48:04",1
"Hyperledger Sawtooth","Consider removing -vv from sawtooth sawtooth-validator in Ubuntu procedure","In Installing and Running Sawtooth/Using Sawtooth on Ubuntu 16.04, the command to start the validator includes the -vv option.  The problem: The extra-verbose output produces so many DEBUG messages that it's difficult to see the interesting log messages - that is, the messages that later steps say to look for.    If there's a reason to have the extra-verbose output, the doc should include a better way to find the relevant log messages (which might mean explaining where the log files are).                ",Improvement,Low,Backlog,"2017-10-12 20:58:39","2017-10-12 20:58:39",1
"Hyperledger Sawtooth","Make doc changes from STL-708","Incorporate changes from --------STL-708-------- - Review Current Docs for Outdated and Inaccurate information.     Summary of changes from Andi:    * Change IntKey to IntegerKey throughout, unless it's the actual intkey command   * In SysAdmin Guide/Log Configuration/Default and elsewhere: Update validator log files names (no numeric string in validator-debug.log and validator-error.log)   * In ApDev Guide/Address & Namespace Design: Change configuration transaction family to settings transaction family   * In CLI References/IntegerKey: Mark intkey generate and intkey populate as deprecated (use intkey create_batch instead)   * Correct Settings transaction family info: The transaction header family_name is sawtooth_settings (not sawtooth_config)    * In Validator Registry Transaction Family Specification/Execution: The validator_registry transaction is broadcast (not injected); remove at this time and is needed sentences.   * In Community/Join the Discussion/Chat: Update hashtags   * In Community/Contributing/Commit Process: Remove info about ENABLE_INTEGRATION_TESTS and update the passing lint output.   * Other minor technical and wording/spelling/formatting fixes as marked in the printed review draft    Remaining questions and follow-up work:    * *Shawn*: Should I remove the PoET section from the Introduction?  (Andi commented that PoET isn't actually part of Sawtooth.) Or merge it into the Consensus section?  Or ... ?    See:  [http://intelledger.github.io/0.9/introduction.html#proof-of-elapsed-time-poet]        * *Cian*: Please review the Journal section (in the Architecture chapter) and supply corrections as necessary.   See: [http://intelledger.github.io/0.9/architecture/journal.html]        * *Andi* and *Dan*: Signing Transactions (in the Core Developer's Guide) still has 0.7 information. Please identify the changes needed to bring this content into our current era.   See: [http://intelledger.github.io/0.9/core_developers_guide/signing_transactions.html|http://intelledger.github.io/0.9/core_developers_guide/signing_transactions.html?highlight=signing]        * *Adam*: The Seth CLI overview needs a link to the Etherium Contract ABI.  Should it be the same as the link to the wiki in the ABI Formatting section?    See: [http://intelledger.github.io/0.9/cli/seth.html]    and: [http://intelledger.github.io/0.9/cli/seth.html#abi-formatting]        * *Andi*: Please supply info for the Validator Registry Transaction Family Specification section:    + State: The new proto for ValidatorInfo  and the nonce to add to SignUpInfo     + Transaction Header: New settings addresses for the transaction header inputs & outputs (sawtooth.poet. ...) and clarification on how to change the last sentence about anti_sybil_id.   See: [http://intelledger.github.io/0.9/transaction_family_specifications/validator_registry_transaction_family.html]        * *Shawn*: Should I remove the Examples chapter?   See: [http://intelledger.github.io/0.9/examples.html] ",Improvement,High,Complete,"2017-10-12 16:55:46","2017-10-12 16:55:46",5
"Hyperledger Sawtooth","Research Consensus Interface Design",,Improvement,Medium,Complete,"2017-10-12 16:53:20","2017-10-12 16:53:20",3
"Hyperledger Sawtooth","Research Tendermint","What are its APIs? How can it be integrated into Sawtooth? Why is it the right algorithm to use?",Improvement,Medium,Complete,"2017-10-12 16:52:50","2017-10-12 16:52:50",3
"Hyperledger Sawtooth","Create an initial, high-level 6-month plan for complete integration of tendermint",,Improvement,Medium,Complete,"2017-10-12 16:51:12","2017-10-12 16:51:12",1
"Hyperledger Sawtooth","List of changes necessary for existing Sawtooth consensus modules, including PoET/SGX and PoET/Simulator to support the new Consensus API",,Improvement,Medium,Complete,"2017-10-12 16:50:50","2017-10-12 16:50:50",1
"Hyperledger Sawtooth","Design necessary and desired changes to sawtooth-core's Journal, Consensus APIs, and overall architecture to support Tendermint consensus",,Improvement,Medium,Complete,"2017-10-12 16:50:32","2017-10-12 16:50:32",3
"Hyperledger Sawtooth","Create high-level architecture overview diagram depicting the relationships between Sawtooth and Tendermint components",,Improvement,Medium,Complete,"2017-10-12 16:50:02","2017-10-12 16:50:02",1
"Hyperledger Sawtooth","Refactor Miscellaneous  Protos","This includes small identity policy changes and and transaction receipt change.           Data will be removed from TransactionReceipt and repeated Data data will be replaced by repeated bytes data.",Improvement,Medium,Complete,"2017-10-12 16:17:53","2017-10-12 16:17:53",2
"Hyperledger Sawtooth","Update Client Protos",,Improvement,Medium,Complete,"2017-10-12 16:17:04","2017-10-12 16:17:04",3
"Hyperledger Sawtooth","Remove encoding filed from TpRegister and Transactions protos",,Improvement,Medium,Complete,"2017-10-12 16:16:49","2017-10-12 16:16:49",2
"Hyperledger Sawtooth","Separate out client messages from proto files","Split up the client files into the following:    client_receipt.proto    client_event.proto    client_block.proto    client_batch.proto    client_batch_submit.proto    client_transaction.proto    client_list_control.proto    client_state.proto",Improvement,Medium,Complete,"2017-10-12 16:15:06","2017-10-12 16:15:06",2
"Hyperledger Sawtooth","Standardize use of public_key and private_key (instead of pubkey and privkey)",,Improvement,Medium,Complete,"2017-10-12 16:10:35","2017-10-12 16:10:35",1
"Hyperledger Sawtooth","Replace TpPing and TpResponse with generic PingRequest and PingResponse",,Improvement,Medium,Complete,"2017-10-12 16:09:53","2017-10-12 16:09:53",1
"Hyperledger Sawtooth","Remove Unused Network Messages and Fields from Network Protos",,Improvement,Medium,Complete,"2017-10-12 16:09:14","2017-10-12 16:09:14",1
"Hyperledger Sawtooth","Draft REST API Plan",,Improvement,Medium,Complete,"2017-10-11 15:41:22","2017-10-11 15:41:22",2
"Hyperledger Sawtooth","Draft Signing Module API Plan",,Improvement,Medium,Complete,"2017-10-11 15:40:37","2017-10-11 15:40:37",2
"Hyperledger Sawtooth","Draft JS SDK API Plan",,Improvement,Medium,Complete,"2017-10-11 15:40:03","2017-10-11 15:40:03",2
"Hyperledger Sawtooth","Draft Client Protobuf API Plan",,Improvement,Medium,Complete,"2017-10-11 15:37:02","2017-10-11 15:37:02",2
"Hyperledger Sawtooth","Review Current Docs for Outdated and Inaccurate information","Provide information to Anne about what needs to be updated or removed from the current documentation. ",Improvement,Medium,Complete,"2017-10-04 17:05:13","2017-10-04 17:05:13",2
"Hyperledger Sawtooth","Review Protobuf Files for 1.0 Stability ","The current protobuf files used for validator to validator, clients to validator, and transaction processor to validators.     This story will be considered complete when there is a meeting to discuss approach and next steps are planned.",Improvement,Medium,Complete,"2017-10-04 17:03:25","2017-10-04 17:03:25",3
"Hyperledger Sawtooth","Review CLI for 1.0 Stability",,Improvement,Medium,Complete,"2017-10-04 17:00:47","2017-10-04 17:00:47",2
"Hyperledger Sawtooth","Review Config Files for 1.0 Stability ",,Improvement,Medium,Complete,"2017-10-04 16:59:40","2017-10-04 16:59:40",2
"Hyperledger Sawtooth","Review Core Rest API for 1.0 Stability",,Improvement,Medium,Complete,"2017-10-04 16:58:38","2017-10-04 16:58:38",2
"Hyperledger Sawtooth","Review Javascript SDK for 1.0 Stability","Review SDK for what is currently there and document any glaring issues and omissions.     The document should also include a list of existing API commands and how they are used     This story is considered complete once there has been a meeting discussing the finding and next steps have been planned. ",Improvement,Medium,Complete,"2017-10-04 16:55:13","2017-10-04 16:55:13",2
"Hyperledger Sawtooth","Review GO SDK for 1.0 Stability","Review SDK for what is currently there and document any glaring issues and omissions.     The document should also include a list of existing API commands and how they are used     This story is considered complete once there has been a meeting discussing the finding and next steps have been planned. ",Improvement,Medium,Complete,"2017-10-04 16:54:29","2017-10-04 16:54:29",2
"Hyperledger Sawtooth","Review  Python SDK for 1.0 Stability","Review SDK for what is currently there and document any glaring issues and omissions.     The document should also include a list of existing API commands and how they are used     This story is considered complete once there has been a meeting discussing the finding and next steps have been planned. ",Improvement,Medium,Complete,"2017-10-04 16:45:56","2017-10-04 16:45:56",3
"Hyperledger Sawtooth","Plan 0.8 Stable Branch Release Activities",,Improvement,Medium,Complete,"2017-09-29 16:10:47","2017-09-29 16:10:47",2
"Hyperledger Sawtooth","Build AMI for Track & Trade Basic Asset",,Improvement,Medium,Complete,"2017-09-29 15:15:08","2017-09-29 15:15:08",3
"Hyperledger Sawtooth","Build Track & Trade Basic Asset UI",,Improvement,Medium,Complete,"2017-09-29 15:14:37","2017-09-29 15:14:37",5
"Hyperledger Sawtooth","Plan 1.0 Release Documentation Refresh Approach","* Get changes from --------STL-708-------- - Review Current Docs for Outdated and Inaccurate information.    STL-726 summarizes the doc changes to make.   * Create stories for non-technical doc changes (detailed plans in next sprint, execute in following sprints):    ** STL-753   ** STL-751   ** STL-744   ** STL-739               ",Improvement,Medium,Complete,"2017-09-28 16:39:00","2017-09-28 16:39:00",2
"Hyperledger Sawtooth","Plan 1.0 Release API Documentation Approach",,Improvement,Medium,Complete,"2017-09-28 16:37:24","2017-09-28 16:37:24",2
"Hyperledger Sawtooth","Plan 1.0 Release API Documentation Approach","For CLI doc impact: The planning task is done; have opened stories for specific tasks.  See the CLI-related doc stories in STL-689.    For SDK/API doc changes, work continues into the next sprint.  See STL-769.",Improvement,Medium,Complete,"2017-09-28 16:37:20","2017-09-28 16:37:20",2
"Hyperledger Sawtooth","Plan 1.0 Release API Stability Approach",,Improvement,Medium,Complete,"2017-09-28 16:35:32","2017-09-28 16:35:32",2
"Hyperledger Sawtooth","Plan 1.0 Release API Stability Approach",,Improvement,Medium,Complete,"2017-09-28 16:35:27","2017-09-28 16:35:27",2
"Hyperledger Sawtooth","Plan 1.0 Release API Stability Approach",,Improvement,Medium,Complete,"2017-09-28 16:35:21","2017-09-28 16:35:21",2
"Hyperledger Sawtooth","Plan 1.0 Release Build and Packaging Approach",,Improvement,Medium,Complete,"2017-09-28 16:33:53","2017-09-28 16:33:53",2
"Hyperledger Sawtooth","Plan Tendermint Consensus Approach",,Improvement,Medium,Complete,"2017-09-28 16:30:18","2017-09-28 16:30:18",2
"Hyperledger Sawtooth","Plan Tendermint Consensus Approach","Create design stories for remainder of the month",Improvement,Medium,Complete,"2017-09-28 16:30:03","2017-09-28 16:30:03",2
"Hyperledger Sawtooth","Add Network Consensus Role + Documentation",,Improvement,Medium,Complete,"2017-09-21 15:40:47","2017-09-21 15:40:47",2
"Hyperledger Sawtooth","Implement Ethereum JSON-RPC State Block Calls",,"New Feature",Medium,Complete,"2017-09-11 17:04:50","2017-09-11 17:04:50",2
"Hyperledger Sawtooth","Implement Ethereum JSON-RPC State Account Calls",,"New Feature",Medium,Complete,"2017-09-11 17:04:35","2017-09-11 17:04:35",3
"Hyperledger Sawtooth","Implement Ethereum JSON-RPC State Transaction Calls",,"New Feature",Medium,Complete,"2017-09-11 17:04:09","2017-09-11 17:04:09",3
"Hyperledger Sawtooth","Improve exception PoET attestation exception handling","Improve exception handling to   # distinguish between types of errors: 'retry', warn, and fatal.   # do not log stack traces for expected error conditions, instead give meaningful messages.    Add unit tests accordingly.",Improvement,Medium,Complete,"2017-09-11 16:40:48","2017-09-11 16:40:48",3
"Hyperledger Sawtooth","Add final assert to state delete test, and get working","[https://github.com/hyperledger/sawtooth-core/blob/master/validator/tests/test_context_manager/tests.py#L1435] There should be an assertion that sh2 is equal to sh2_assertion.",Bug,Medium,Complete,"2017-09-11 16:37:07","2017-09-11 16:37:07",2
"Hyperledger Sawtooth","Change default REST API port to 8008","Currently the Sawtooth REST API defaults to `localhost:8080`, which is common enough that it is likely to conflict with many web services developers may be running. This default should be changed to `localhost:8008`, which is less likely to cause collisions, is still a common HTTP port, and happens to be exactly twice the validator's default port.    This task includes changing _every_ default in sawtooth-core which expects to find the REST API at `localhost:8080`. This will include many CLIs and possible some other components as well.",Improvement,Lowest,Complete,"2017-09-08 16:42:30","2017-09-08 16:42:30",0
"Hyperledger Sawtooth","Implement remaining BatchInjector methods","Only the BatchInjector.block_start() method is currently supported, but 3 more methods were defined in the design doc: before_batch, after_batch, and block_end. These were not added because they were not needed for Solidity Developer Compatibility, but should be added in order to complete the original design.","New Feature",Medium,Backlog,"2017-09-05 19:47:54","2017-09-05 19:47:54",3
"Hyperledger Sawtooth","Fix addressing for transactions involving contract chaining","When calling a contract that has contract chaining enabled, the state address of the called contract is not calculated correctly, which results in an error.",Bug,Medium,Complete,"2017-09-05 15:23:33","2017-09-05 15:23:33",2
"Hyperledger Sawtooth","Research Sawtooth Performance Analysis",,"New Feature",Medium,Complete,"2017-08-28 14:13:48","2017-08-28 14:13:48",5
"Hyperledger Sawtooth","Research Sawtooth Performance Analysis",,"New Feature",Medium,Complete,"2017-08-28 14:12:56","2017-08-28 14:12:56",5
"Hyperledger Sawtooth","Research Sawtooth Performance Analysis",,"New Feature",Medium,Complete,"2017-08-28 14:12:51","2017-08-28 14:12:51",8
"Hyperledger Sawtooth","Track & Trade QA","Fix bugs and polish content as necessary for entire Track and Trade ecosystem.",Improvement,Medium,Complete,"2017-08-25 16:34:26","2017-08-25 16:34:26",3
"Hyperledger Sawtooth","Add Track & Trade TXN Family Spec",,Improvement,Medium,Complete,"2017-08-24 20:21:56","2017-08-24 20:21:56",2
"Hyperledger Sawtooth","Create Data Detail Page",,Improvement,Medium,Complete,"2017-08-24 19:54:14","2017-08-24 19:54:14",2
"Hyperledger Sawtooth","Create Agent Detail Pages",,Improvement,Medium,Complete,"2017-08-24 19:54:01","2017-08-24 19:54:01",1
"Hyperledger Sawtooth","Create Fish Detail Page",,Improvement,Medium,Complete,"2017-08-24 19:53:48","2017-08-24 19:53:48",3
"Hyperledger Sawtooth","Create List Pages for Fish and Agents",,Improvement,Medium,Complete,"2017-08-24 19:53:33","2017-08-24 19:53:33",3
"Hyperledger Sawtooth","Create Add Fish Page",,Improvement,Medium,Complete,"2017-08-24 19:52:23","2017-08-24 19:52:23",2
"Hyperledger Sawtooth","Create Login/Signin Page",,Improvement,Medium,Complete,"2017-08-24 19:52:13","2017-08-24 19:52:13",2
"Hyperledger Sawtooth","Create Menubar and Dashboard page",,Improvement,Medium,Complete,"2017-08-24 19:51:56","2017-08-24 19:51:56",1
"Hyperledger Sawtooth","API: Implement query parameters","Implement the fields and omit query parameters as specified in the design doc.",Improvement,Medium,Complete,"2017-08-24 19:49:21","2017-08-24 19:49:21",2
"Hyperledger Sawtooth","API: Implement /records Endpoints","Implement the following endpoints as specified in the design document:   * GET /records   * GET /records/<record key>   * GET /records/<record key>/property/<property name>   * GET /records/<record key>/<property name>    Should fetch the relevant data from the state database and send it back as a JSON string.",Improvement,Medium,Complete,"2017-08-24 19:48:57","2017-08-24 19:48:57",5
"Hyperledger Sawtooth","API: Implement /agents Endpoints","Implement the following endpoints as specified in the design document:   * GET /agents   * GET /agents/<agent key>    Should fetch the relevant data from the state database and send it back as a JSON string.",Improvement,Medium,Complete,"2017-08-24 19:48:42","2017-08-24 19:48:42",3
"Hyperledger Sawtooth","Update Identity Transaction Processor to enforce sawtooth.identity.allowed_keys",,Improvement,Medium,Complete,"2017-08-21 21:21:10","2017-08-21 21:21:10",2
"Hyperledger Sawtooth","Implement Burrow JSON-RPC Calls","[https://monax.io/docs/documentation/db/latest/specifications/api/]    [https://github.com/hyperledger/burrow/blob/master/rpc/v0/methods.go]    The Burrow project defines an alternative JSON-RPC interface which would be nice to implement.","New Feature",Medium,Backlog,"2017-08-18 14:52:17","2017-08-18 14:52:17",3
"Hyperledger Sawtooth","Implement on-chain block validation rules",,"New Feature",Medium,Complete,"2017-08-18 14:42:42","2017-08-18 14:42:42",3
"Hyperledger Sawtooth","Write Identity Family Specification ",,Improvement,Medium,Complete,"2017-08-17 15:20:56","2017-08-17 15:20:56",3
"Hyperledger Sawtooth","Implement IdentityObserver",,Improvement,Medium,Complete,"2017-08-17 15:18:09","2017-08-17 15:18:09",5
"Hyperledger Sawtooth","Implement off-chain Transactor Permissioning",,Improvement,Medium,Complete,"2017-08-17 15:12:14","2017-08-17 15:12:14",5
"Hyperledger Sawtooth","Implement On-chain Transactor Permissioning (on block validation)",,Improvement,Medium,Complete,"2017-08-17 15:07:20","2017-08-17 15:07:20",3
"Hyperledger Sawtooth","Write Private Ledger Transaction Family Specification",,"New Feature",Medium,Complete,"2017-08-07 16:08:12","2017-08-07 16:08:12",5
"Hyperledger Sawtooth","Create Track and Trade tests",,Improvement,Medium,Complete,"2017-08-07 16:04:18","2017-08-07 16:04:18",3
"Hyperledger Sawtooth","Implement Track and Trade TP",,Improvement,Medium,Complete,"2017-08-07 16:02:47","2017-08-07 16:02:47",5
"Hyperledger Sawtooth","Update clients to use EventBroadcaster instead of StateDeltaProcessor",,"New Feature",Medium,Complete,"2017-08-07 15:32:06","2017-08-07 15:32:06",3
"Hyperledger Sawtooth","Implement ReceiptEventExtractor & TF Events","See design doc","New Feature",Medium,Complete,"2017-08-07 15:31:26","2017-08-07 15:31:26",2
"Hyperledger Sawtooth","Add state_delta events to ReceiptEventExtractor",,"New Feature",Medium,Complete,"2017-08-07 15:31:08","2017-08-07 15:31:08",1
"Hyperledger Sawtooth","Implement BlockEventExtractor & block_commit events","See design doc.","New Feature",Medium,Complete,"2017-08-07 15:30:50","2017-08-07 15:30:50",2
"Hyperledger Sawtooth","Implement EventBroadcaster and ChainObserver interface",,"New Feature",Medium,Complete,"2017-08-07 15:30:09","2017-08-07 15:30:09",5
"Hyperledger Sawtooth","Add execution result TP_* messages to Go SDK and supporting message handlers","See Transaction Execution Results - Transaction Processor SDK in the design doc.","New Feature",Medium,Complete,"2017-08-07 15:28:44","2017-08-07 15:28:44",3
"Hyperledger Sawtooth","Add TransactionExecutionResults to validator","See Transaction Execution Results in design doc. The context manager, executor, scheduler, and chain controller should be modified per design. The SDK and Message handlers are captured in another story.","New Feature",Medium,Complete,"2017-08-07 15:27:38","2017-08-07 15:27:38",3
"Hyperledger Sawtooth","Create transaction receipt store and add message handlers","See Transaction Receipt Store in design doc.","New Feature",Medium,Complete,"2017-08-07 15:26:03","2017-08-07 15:26:03",2
"Hyperledger Sawtooth","Migrate docs to hyperledger.org from legacy URL","[~<USER> has new URL and process in mind.",Improvement,Medium,Complete,"2017-08-07 15:18:01","2017-08-07 15:18:01",2
"Hyperledger Sawtooth","Implement Client-Side Transaction Submission ","Implement the POST /transactions route.    Should allow a client to submit an encoded TransactionList, which the server will batch and submit to the validator.    Add to the existing user/private-key creation system to include submitting a CreateAgent transaction to the blockchain.",Improvement,Medium,Complete,"2017-08-07 15:15:43","2017-08-07 15:15:43",2
"Hyperledger Sawtooth","Implement Full-Stack Key Escrow and Authorization","Implement browser-side account creation and private key generation, with server-side storage of account information, including encrypted private key.          Because they are so closely tied, this will necessarily include the implementation of user authorization as well.         This task includes implementing both POST /authorization and PATCH /user as defined in the design document.         This task does not include any transaction submission to the validator, nor a fully fleshed out login page.",Improvement,Medium,Complete,"2017-08-07 15:08:56","2017-08-07 15:08:56",5
"Hyperledger Sawtooth","Implement State Delta Export in Client App","Should use State Delta Export to create a local copy of blockchain state in the database, and be able to serve that data to the front-end through the server's API (need not fully implement API spec).",Improvement,Medium,Complete,"2017-08-07 15:05:09","2017-08-07 15:05:09",2
"Hyperledger Sawtooth","Build Full-Stack Hello World for Client App","Build a Hello World for the client app with the full stack of the tools being used. Should demonstrate the use of all components including:   * The database   * The server (prob. Node/Express)   * The front-end MVC (prob. Mithril)   * Any styling library (prob. Bootstrap)   * Any build tools",Improvement,Medium,Complete,"2017-08-07 15:00:06","2017-08-07 15:00:06",3
"Hyperledger Sawtooth","Implement IdentityView ","This stories relies on work done in","New Feature",Medium,Complete,"2017-08-04 21:25:09","2017-08-04 21:25:09",3
"Hyperledger Sawtooth","Implement On-chain Transactor Permissioning (from client) ","On-chain transactor permissioning should be implemented that uses roles and policies set by the identity transaction processor.","New Feature",Medium,Complete,"2017-08-04 21:20:05","2017-08-04 21:20:05",3
"Hyperledger Sawtooth","Implement initial Identity Transaction Processor","Should be able to store roles and policies.     Unit test are  included in this story.     ","New Feature",Medium,Complete,"2017-08-04 21:14:16","2017-08-04 21:14:16",3
"Hyperledger Sawtooth","Implement Batch Submission Client for Performance Workload",,Improvement,Medium,Complete,"2017-08-03 21:09:58","2017-08-03 21:09:58",8
"Hyperledger Sawtooth","Implement Batch Generation Tool for Performance Workload",,Improvement,Medium,Complete,"2017-08-03 21:09:21","2017-08-03 21:09:21",5
"Hyperledger Sawtooth","Implement Domain-specific Transaction Generation for performance Workload",,Improvement,Medium,Complete,"2017-08-03 21:07:47","2017-08-03 21:07:47",5
"Hyperledger Sawtooth","Consolidate Solidity Developer Compatibility Design",,Improvement,Medium,Complete,"2017-07-31 19:08:19","2017-07-31 19:08:19",3
"Hyperledger Sawtooth","Create a PyFormance reporter for InfluxDB","The InfluxDB reporter that exists in PyFormance is bad. Create one that works properly so we can report stats to InfluxDB.","New Feature",Medium,Complete,"2017-07-24 21:15:59","2017-07-24 21:15:59",2
"Hyperledger Sawtooth","Configure docker compose file for stat collection","Include InfluxDB and Grafana docker containers.","New Feature",Medium,Complete,"2017-07-24 21:13:59","2017-07-24 21:13:59",1
"Hyperledger Sawtooth","Update HL overview deck","Update/Finalize Hyperledger's Slide deck on Sawtooth","New Feature",Medium,Complete,"2017-07-24 18:55:55","2017-07-24 18:55:55",3
"Hyperledger Sawtooth","compulsory counter cleanup code","Need to release monotonic counters used by poet sgx enclave when they are no longer needed.         PoET validator code should call the release signup data method in the enclave to release the monotonic counter.    Proposed policy:    1. whenever k-test expires release signup data.     2. on uninstall    Other times may create issues with forks. We keep signup info in a little database to cover the case that a validator is registered differently on different forks. Releasing the counter prematurely will effectively unregister the validator.",Bug,Low,"In Progress","2017-07-20 16:49:33","2017-07-20 16:49:33",3
"Hyperledger Sawtooth","Update validator registry handler to use state delete method","[https://github.com/hyperledger/sawtooth-core/blob/master/consensus/poet/families/sawtooth_validator_registry/validator_registry/processor/handler.py#L133]    Clears state at specified address.     Instead, make use of new state delete feature. Anticipated in     [https://github.com/hyperledger/sawtooth-core/pull/718]     ",Improvement,Medium,Complete,"2017-07-18 22:27:22","2017-07-18 22:27:22",1
"Hyperledger Sawtooth","Write User Stories around Permissioning","Having an exhaustive set of user stories around permissioning will help answer the question What problem are we trying to solve? and thus point us in towards the correct implementation. ","New Feature",Medium,Complete,"2017-07-12 14:25:44","2017-07-12 14:25:44",3
"Hyperledger Sawtooth","Limit how often a Block/Batch can be Requested","Currently, If a validator becomes overwhelmed with too many request/response messages, the validator is unable to do anything else. The completer should store the timestamp for when a block/batch is requested, and should not re-request it until after a configurable amount of time has past. ",Bug,Medium,Complete,"2017-07-11 18:59:07","2017-07-11 18:59:07",1
"Hyperledger Sawtooth","Update sdks' State classes to have a delete method","Each sdk needs to support deletes from state. The form, similar to gets and sets, should be .delete([add1, add2, add3]).         Needs to be added to Go and Javascript at the least. ",Improvement,High,Complete,"2017-07-11 18:26:01","2017-07-11 18:26:01",3
"Hyperledger Sawtooth","Investigate Fabric CA ","Investigate Fabric CA for possible use/ use cases for validator network authorization. ",Improvement,Medium,Complete,"2017-07-11 15:06:17","2017-07-11 15:06:17",2
"Hyperledger Sawtooth","Integrate PoET Primer into PoET spec","Integrate this document, which gives a much higher-level explanation of PoET, into the spec: [https://docs.google.com/document/d/1se5sye23o8muot-TrYSK4Yl_Ue92Uh4yf5dHLSBt4_Y/edit#|https://docs.google.com/document/d/1se5sye23o8muot-TrYSK4Yl_Ue92Uh4yf5dHLSBt4_Y/edit]     ",Improvement,Medium,Backlog,"2017-07-11 14:49:27","2017-07-11 14:49:27",2
"Hyperledger Sawtooth","Write Tests for Validator Network Permissioning",,Improvement,Medium,Complete,"2017-07-07 21:16:36","2017-07-07 21:16:36",5
"Hyperledger Sawtooth","Write Integration Tests for Transactor key Permissioning",,Improvement,Medium,Complete,"2017-07-07 21:14:33","2017-07-07 21:14:33",5
"Hyperledger Sawtooth","Document PoET SGX Enclave Installation",,Bug,Medium,Complete,"2017-07-07 21:13:18","2017-07-07 21:13:18",3
"Hyperledger Sawtooth","Document Transactor Permissioning ",,Improvement,Medium,Complete,"2017-07-07 21:11:30","2017-07-07 21:11:30",3
"Hyperledger Sawtooth","Integrate PoET SGX Enclave Docker Container into Build Process",,Improvement,Medium,Complete,"2017-07-07 21:11:16","2017-07-07 21:11:16",3
"Hyperledger Sawtooth","Produce findings report based on captured statistics from the performance workload tests ",,Improvement,Medium,Complete,"2017-07-07 21:10:09","2017-07-07 21:10:09",5
"Hyperledger Sawtooth","Execute performance workload tests on the performance testing environment",,Improvement,Medium,Complete,"2017-07-07 21:08:59","2017-07-07 21:08:59",5
"Hyperledger Sawtooth","Update on-chain transactor signer permissioning to use “IdentityObserver”",,Improvement,Medium,Complete,"2017-07-07 21:08:27","2017-07-07 21:08:27",5
"Hyperledger Sawtooth","Set-up performance testing environment",,Improvement,Medium,Complete,"2017-07-07 21:07:43","2017-07-07 21:07:43",3
"Hyperledger Sawtooth","Ensure required system statistics are collectable",,Improvement,Medium,Complete,"2017-07-07 21:06:13","2017-07-07 21:06:13",3
"Hyperledger Sawtooth","Ensure required application statistics are collectable ",,Improvement,Medium,Complete,"2017-07-07 21:04:50","2017-07-07 21:04:50",3
"Hyperledger Sawtooth","Design off-chain file-based per-validator signing-key permissioning ",,Improvement,Medium,Complete,"2017-07-07 21:04:02","2017-07-07 21:04:02",3
"Hyperledger Sawtooth","Document architecture/design of schedulers",,Improvement,Medium,Complete,"2017-07-07 21:02:02","2017-07-07 21:02:02",5
"Hyperledger Sawtooth","Consolidate signing-key permissioning design documents",,Improvement,Medium,Complete,"2017-07-07 21:01:52","2017-07-07 21:01:52",5
"Hyperledger Sawtooth","Add documentation on using the schedulers",,Improvement,Medium,Complete,"2017-07-07 20:59:17","2017-07-07 20:59:17",3
"Hyperledger Sawtooth","Design integration pattern for state change notification of permissioning subsystems ",,Improvement,Medium,Complete,"2017-07-07 20:57:46","2017-07-07 20:57:46",5
"Hyperledger Sawtooth","Update the SerialScheduler to handle explicit dependencies","After an explicit dependency fails, the scheduler should mark transactions that listed this txn as a dependency as failed, also.",Improvement,Medium,Complete,"2017-07-07 20:57:14","2017-07-07 20:57:14",3
"Hyperledger Sawtooth","Merge parallel-scheduler branch into master branch","Deal with merge conflicts during the process of getting the parallel-scheduler branch merged into master.",Improvement,Medium,Complete,"2017-07-07 20:53:20","2017-07-07 20:53:20",3
"Hyperledger Sawtooth","Update the SerialScheduler to fail-fast on a batch","No transactions after the first failed txn in a batch need to be run, so the subsequent txns should be marked as neither valid or invalid, but should not be run.",Improvement,Medium,Complete,"2017-07-07 20:50:23","2017-07-07 20:50:23",3
"Hyperledger Sawtooth","remove wif transcoding ","# transparently change the internal representation so it loads wif but thereafter remains native.  or   # remove wif entirely and store raw hex to disk.   or   # Change the import/export to default to pem.",Improvement,Medium,Complete,"2017-07-07 20:23:14","2017-07-07 20:23:14",2
"Hyperledger Sawtooth","Write JSON-RPC unit tests",,Improvement,Medium,Complete,"2017-07-07 20:06:16","2017-07-07 20:06:16",3
"Hyperledger Sawtooth","Write test smart contracts and tests to verify Solidity features work as advertised",,Improvement,Medium,Complete,"2017-07-07 20:05:50","2017-07-07 20:05:50",5
"Hyperledger Sawtooth","Write Sawtooth transaction receipts and events tests",,Improvement,Medium,Complete,"2017-07-07 20:05:22","2017-07-07 20:05:22",3
"Hyperledger Sawtooth","Update seth to use JSON-RPC or REST-API","The seth client currently interacts with the REST API. With the creation of the seth-rpc server, it would be nice to add support to the seth client for interacting with the seth-rpc server.",Improvement,Medium,Complete,"2017-07-07 20:04:57","2017-07-07 20:04:57",3
"Hyperledger Sawtooth","Implement JSON-RPC router design (without handlers) and private key store",,Improvement,Medium,Complete,"2017-07-07 20:04:20","2017-07-07 20:04:20",3
"Hyperledger Sawtooth","Implement Sawtooth generic transaction receipts and events per design",Decomposed,Improvement,Medium,Complete,"2017-07-07 20:03:29","2017-07-07 20:03:29",0
"Hyperledger Sawtooth","Write documentation for existing Solidity developers to transition to Sawtooth",,Improvement,Medium,Complete,"2017-07-07 20:00:50","2017-07-07 20:00:50",3
"Hyperledger Sawtooth","Integrate Burrow-EVM design docs into sphinx documentation",,Improvement,Medium,Complete,"2017-07-07 20:00:12","2017-07-07 20:00:12",2
"Hyperledger Sawtooth","Update Burrow-EVM transaction family spec",,Improvement,Medium,Complete,"2017-07-07 19:59:32","2017-07-07 19:59:32",3
"Hyperledger Sawtooth","Implement BatchInjectorInterface and BlockInfoInjector",,Improvement,Medium,Complete,"2017-07-07 19:58:23","2017-07-07 19:58:23",3
"Hyperledger Sawtooth","Implement key storage security for seth","The extent of the design described in milestone 2 is probably too broad for the time allowed to complete this task in Q3 plan. A simpler version should be implemented here, or the task should be moved to Q4 and given an appropriate amount of time to complete it.",Improvement,Medium,Complete,"2017-07-07 19:56:54","2017-07-07 19:56:54",3
"Hyperledger Sawtooth","Design private key storage security for seth/RPC accounts","Both seth and the JSON-RPC depend on storing private keys to sign transactions. These keys are stored as plaintext. Encryption should be used to store these keys more securely.    Output is a design doc that describes how keys will be secured.",Improvement,Medium,Complete,"2017-07-07 19:56:03","2017-07-07 19:56:03",3
"Hyperledger Sawtooth","Research and document non-standard RPC calls to support","Output is a list of additional RPC calls added to the JSON-RPC design doc",Improvement,Medium,Complete,"2017-07-07 19:50:38","2017-07-07 19:50:38",3
"Hyperledger Sawtooth","Design Burrow-EVM event subscriptions for Solidity events","Output is a professional design doc describing how to use Sawtooth events to support Solidity events.",Improvement,Medium,Complete,"2017-07-07 19:48:35","2017-07-07 19:48:35",3
"Hyperledger Sawtooth","Design general purpose transaction receipts and events","Includes defining where receipts and events will be stored, how they can be accessed/queried, and how to subscribe to events.    Output will be a professional design doc and a implementation stories.",Improvement,Medium,Complete,"2017-07-07 19:45:09","2017-07-07 19:45:09",5
"Hyperledger Sawtooth","Design blockhash and timestamp access for transaction processors",,Improvement,Medium,Complete,"2017-07-07 19:42:27","2017-07-07 19:42:27",3
"Hyperledger Sawtooth","Implement User Interface for the Track and Trade functionality","Implement the design described by the output of STL-550",Improvement,Medium,Complete,"2017-07-07 17:05:24","2017-07-07 17:05:24",0
"Hyperledger Sawtooth","Create domain specific transaction submission endpoint with server side signing","Implement the changes described by the output of STL-554.",Improvement,Medium,Complete,"2017-07-07 17:03:25","2017-07-07 17:03:25",0
"Hyperledger Sawtooth","Enhance existing Supplychain REST API with reporting endpoints","Implement the changes/additions specified by the output of STL-553.",Improvement,Medium,Complete,"2017-07-07 17:02:45","2017-07-07 17:02:45",0
"Hyperledger Sawtooth","Create Telemetry data","Implement the changes based on the design produced by STL-552.",Improvement,Medium,Complete,"2017-07-07 17:01:58","2017-07-07 17:01:58",0
"Hyperledger Sawtooth","Create custom metadata","Implement the design described by the output of STL-551.",Improvement,Medium,Complete,"2017-07-07 17:01:30","2017-07-07 17:01:30",0
"Hyperledger Sawtooth","Consolidate summary design document","Create a consolidated design document based on the output of the blocking tasks.",Improvement,Medium,Complete,"2017-07-07 16:59:14","2017-07-07 16:59:14",3
"Hyperledger Sawtooth","Design domain specific transaction submission endpoint with server side signing","Provide the design for an endpoint which can:    * Accept domain-specific transaction content.  For example, this could be submitted in JSON.  * Create a transaction body and batch for submission  * Sign the transaction using server-side stored keys.    The design is open to method on how these keys are associated with the submitter.  Most likely, this will also require one or more authentication endpoints.",Improvement,Medium,Complete,"2017-07-07 16:58:54","2017-07-07 16:58:54",5
"Hyperledger Sawtooth","Design enhanced Supplychain REST API Design with reporting endpoints","The current supplychain REST endpoints only supply basic queries of data.  Provide a design for a broader set of REST endpoint which can perform queries against the data filtering on the domain-specific fields, as well as those that can answer queries based on the relationships between the domain-specific structures.",Improvement,Medium,Complete,"2017-07-07 16:58:24","2017-07-07 16:58:24",3
"Hyperledger Sawtooth","Produce Telemetry data design","See STL-315 for detail.  This story may effectively replace that one.    Include the necessary changes to the supply chain database schema and state delta subscriber output.",Improvement,Medium,Complete,"2017-07-07 16:55:21","2017-07-07 16:55:21",3
"Hyperledger Sawtooth","Produce custom metadata design","Provide a design for custom metadata on the Record and Agent state structures.  This must support at least key-value pairs of strings.      Updating this data should be only allowed by the owner of the structures (either the Agent or the current owner of the Record).      Include the necessary changes to the supply chain database schema and state delta subscriber output.    Related to, and possibly supersedes STL-314 ",Improvement,Medium,Complete,"2017-07-07 16:54:45","2017-07-07 16:54:45",2
"Hyperledger Sawtooth","Create User Interface Wireframes for the existing Supplychain functionality and Track And Trade enchancement",,Improvement,Medium,Complete,"2017-07-07 16:54:22","2017-07-07 16:54:22",5
"Hyperledger Sawtooth","Design Repeatable Performance Workload Execution",,Improvement,Medium,Complete,"2017-07-07 16:42:22","2017-07-07 16:42:22",3
"Hyperledger Sawtooth","Implement benchmark Transaction Processor & Workload client ","Based on the transaction family specification, implement benchmark transaction processor. Also implement a command-line client workload generator capable of generating and submitting workload consistent with the design intent of the benchmark.",Improvement,Medium,Complete,"2017-07-07 16:41:16","2017-07-07 16:41:16",5
"Hyperledger Sawtooth","Write Transaction Family Specification for Benchmark","Write the transaction family specification for the benchmark workload selected for benchmarking activity. ",Improvement,Medium,Complete,"2017-07-07 16:40:59","2017-07-07 16:40:59",2
"Hyperledger Sawtooth","Remove redundant encoding/decoding needed for keys and addresses in the Burrow-EVM transaction family","The path an address takes from when it is passed as an argument to  seth to when it is used to update state should be traced and the type and number  of transformations should be simplified. This may mean storing EVM addresses as  strings in state to reduce the amount of encoding/decoding in which case it  should only be needed in transaction handlers prior to interacting with  SawtoothAppState.",Improvement,Medium,Backlog,"2017-07-07 14:57:01","2017-07-07 14:57:01",5
"Hyperledger Sawtooth","Add --wait flag to seth commands","Add a --wait flag to seth commands that submit transactions which sets the wait option for the client.",Improvement,Medium,Complete,"2017-07-07 14:55:20","2017-07-07 14:55:20",2
"Hyperledger Sawtooth","Add option to wait for transactions to commit in Burrow-EVM client","The Burrow-EVM client only checks that transactions were accepted by the REST API. It does not check to see if the transaction was committed or what the error was. An argument should be added to client methods which, if set, will cause the client to block until:   1. A timeout has been reached, at which point it should return and error   2. The transaction has been committed, at which point it should return normally   3. There was a problem committing the transaction, at which point it should return a useful error    Update the integration tests to use this feature once implemented.",Improvement,Medium,Complete,"2017-07-07 14:53:07","2017-07-07 14:53:07",2
"Hyperledger Sawtooth","Remove MustEncode() and MustDecode() from Go SDK","Remove the MustEncode() and MustDecode() methods from the Go SDK and replace all calls with hex.EncodeToString() and hex.DecodeString() from the encoding/hex Go library. These methods cause panics instead of handling errors gracefully, which is no longer desired. Handle the error returned from DecodeString().     ",Improvement,Medium,Complete,"2017-07-07 14:47:09","2017-07-07 14:47:09",2
"Hyperledger Sawtooth","Rename cli commands","Various commands for 0.8 were added with the assumption that we  would at some point rename them for consistency across the project.  Now seems an appropriate time to pick the final names and do the  renaming.    Commands will use a '-' separator instead of '_', since this is  more consistent with Linux commands in general.    The clients commands remain largely unchanged, with intkey_jvm being  renamed to jvmsc (since it is an example of JVM smart contracts).    The client commands:  sawtooth  poet  intkey  jvmsc  xo  noop    The validator components will be prefixed with 'sawtooth-':    sawtooth-validator  sawtooth-rest-api    Transaction processors will be renamed to conform to the general  format of <family>-tp[-<lang>]. This organization is intended to  sort the CLI commands by family instead of function. The commands  become:    intkey-tp-go  intkey-tp-java  intkey-tp-javascript  intkey-tp-python  jvmsc-tp  xo-tp-go  xo-tp-javascript  xo-tp-python  noop-tp-go  supplychain-tp  poet-validator-registry-tp",Improvement,Medium,Complete,"2017-07-05 22:33:52","2017-07-05 22:33:52",2
"Hyperledger Sawtooth","Implement Rate Limiting for low level network messages while in Authorization checks","Network Pings will be allowed while the requester is going through the authorization procedure, however we want to limit how often theses can be sent. If to many Pings are received from the requester, assume the requester is compromised, refuse the request and close the connection. ",Improvement,Medium,Complete,"2017-07-05 16:45:19","2017-07-05 16:45:19",2
"Hyperledger Sawtooth","Convert On-Chain Connection Authorization document to Sphinx doc","This should be placed in the architecture section of the documentation. ",Improvement,Medium,Complete,"2017-07-05 16:18:40","2017-07-05 16:18:40",2
"Hyperledger Sawtooth","Implement Shared Secret Authorization","Shared Secret Authorization should be used when enforcing connection that connected to a local validator. This should include:    Proto files for SharedSecrectAuthorization messages    Finally, requesting Validators will respond with AuthorizationSharedSecretRequest.    The  validator will respond with a AuthorizationSharedSecretResponse  and if the shared secret matches it will include the roles allowed.    The network will then function as normal after this point. ",Improvement,Medium,Backlog,"2017-07-05 16:01:16","2017-07-05 16:01:16",3
"Hyperledger Sawtooth","Implement sawtooth.authorization.client permissioning","Add the permission check when receiving client messages, return AuthorizationViolation if a messaged is received from a non authorized client and close the connection.",Improvement,Medium,Backlog,"2017-07-05 15:53:22","2017-07-05 15:53:22",2
"Hyperledger Sawtooth","Implement network permissioning ","Add the permission check when receiving gossip messages, return AuthorizationViolation if a messaged is received from a non authorized node and close the connection. ",Improvement,Medium,Complete,"2017-07-05 15:48:57","2017-07-05 15:48:57",3
"Hyperledger Sawtooth","Update Network permissioning to IdentityObserver",,Improvement,Medium,Complete,"2017-07-05 15:41:13","2017-07-05 15:41:13",3
"Hyperledger Sawtooth","Implement Challenge Authorization","Challenge Authorization should be used when enforcing connection against public keys. This should include:    Proto files for ChallengeAuthorization messages    Finally, requesting Validators will respond with AuthorizationChallengeRequest.    The validator will send a AuthorizationChallengeResponse, which include a payload that must be signed.     The requesting validator will respond with a AuthorizationChallengeSubmit that includes the signature, public key, and requested roles    The validator will respond with AuthorizationChallengeResult and if accepted with roles allowed.    The network will then function as normal after this point. ",Improvement,Medium,Complete,"2017-07-05 15:18:58","2017-07-05 15:18:58",5
"Hyperledger Sawtooth","Implement Trust Authorization","The first step to enforcing on-chain connection authorization is to implement Trust Authorization. This should include the following:    Proto files for TrustAuthorization messages    Validator should expect a ConnectRequest and respond with a ConnectionResponse which includes roles available on that endpoint.     Finally, 0ther Validators, TP for all sdk, and the Rest_api should respond with AuthorizationTrustRequest with its expected roles. The validator will respond with AuthorizationTrustResponse  and if accepted with roles allowed.    The network will then function as normal after this point. ",Improvement,Medium,Complete,"2017-07-05 15:05:56","2017-07-05 15:05:56",5
"Hyperledger Sawtooth","Write a section of the Docs that describe the usage of the settings used by the validator. ","With the future addition of the authorization settings, the number of settings that could/should be set when using the validator are greatly increased.  It would be helpful to have one place where theses settings can be listed and their usage described. ",Improvement,Medium,Backlog,"2017-07-05 14:57:49","2017-07-05 14:57:49",2
"Hyperledger Sawtooth","Modify App Dev Guide ubuntu section to not require root user","The App Dev guide should not assume all commands need to be run w/root.  Instead, it should provide sudo when appropriate and run services as sawtooth and user commands as the regular user.  ","New Feature",Medium,Complete,"2017-06-27 15:55:46","2017-06-27 15:55:46",2
"Hyperledger Sawtooth","intkey and xo commands produce bad output without arguments","{{docker exec -it sawtooth-client-default bash}}  {{root@bdd0cd71cfd1:/# xo}}  {{Error: invalid command: None}}  {{root@bdd0cd71cfd1:/# intkey}}  {{<_io.TextIOWrapper name='<stderr>' mode='w' encoding='ANSI_X3.4-1968'> Error: invalid command: None}}    {{It would be nice if intkey and xo would give usage messages if a required positional argument is missing.}}",Bug,Medium,Complete,"2017-06-27 00:05:19","2017-06-27 00:05:19",1
"Hyperledger Sawtooth","Debug scheduler never becoming complete","On AWS often, and in test_poet_smoke.yaml sometimes, block validation within the validator fails to get a complete schedule; scheduler.complete(block=True) is called and never returns.",Bug,Medium,Complete,"2017-06-22 15:07:21","2017-06-22 15:07:21",3
"Hyperledger Sawtooth","Update ParallelScheduler to handle explicit dependencies","If a txn has explicit dependencies, it should first look to see if that txn is before it* in the scheduler, and then only if it is use that explicitly dependent txn as a gate on it being next transaction.    Because 'intkey workload' uses dependencies, the parallel scheduler won't work with intkey workload until this is done.    * We are relying on the completer to never allow the dependency to be after that batch with the transaction that lists the dependency.",Improvement,Medium,Complete,"2017-06-19 23:11:44","2017-06-19 23:11:44",3
"Hyperledger Sawtooth","Create State Delta Subscriber","Create a delta state subscriber that will consume state values for the SupplyChain transaction family and store them in a database.     This task involves creating the subscriber, processing the events to insert values.  This client should handle disconnects and reconnects of the validator, delta catch-up, as well as fork resolution.",Improvement,Medium,Complete,"2017-06-19 21:05:22","2017-06-19 21:05:22",5
"Hyperledger Sawtooth","Define Database Schema","Define the database schema to support State Delta Subscription for the supply chain family.  Minimally, there needs to be a table {{block}} which tracks the history of blocks:        The remaining tables should support [slowly changing dimensions type 2|https://en.wikipedia.org/wiki/Slowly_changing_dimension#Type_2:_add_new_row].  This means that the tables should include, in addition to the domain-specific fields, the following:        where id is a generated primary key, and indexes should be created on the natural key of the rows.  ",Improvement,Medium,Complete,"2017-06-19 20:28:33","2017-06-19 20:28:33",3
"Hyperledger Sawtooth","Update the Parallel Scheduler to work with the new validator config file","Choosing which scheduler should be run on a validator was done before the Validator config ability was implement. This option should be updated to match that implementation. ",Improvement,Medium,Complete,"2017-06-19 18:21:48","2017-06-19 18:21:48",1
"Hyperledger Sawtooth","Implement BLOCKHASH, TIMESTAMP, and NUMBER EVM opcodes","These opcodes currently do not work correctly. The information needed to implement them can be obtained by querying the special addresses defined by the BlockInfo transaction family.",Improvement,Medium,Complete,"2017-06-19 18:17:13","2017-06-19 18:17:13",2
"Hyperledger Sawtooth","Coordinate DNS changes for sawtooth.hyperledger.org",,"New Feature",Medium,Complete,"2017-06-19 15:20:04","2017-06-19 15:20:04",1
"Hyperledger Sawtooth","Setup AWS server for running sawtooth.hyperledger.org","Setup a new AWS host running Apache httpd and update Jenkins to publish docs do that AWS host (sawtooth.hyperledger.org/docs/).    Related to STL-490.","New Feature",Medium,Complete,"2017-06-19 15:19:44","2017-06-19 15:19:44",1
"Hyperledger Sawtooth","Write more yaml scheduler tests","These tests should include namespace inputs and outputs, mixed sizes of batches, batches that have predecessor transactions that are valid, with subsequent transactions in a batch that fail.",Improvement,Medium,Complete,"2017-06-19 13:59:30","2017-06-19 13:59:30",3
"Hyperledger Sawtooth","Add another run_scheduler method to yaml scheduler tester","The order of next_transaction, set_transaction_result, finalize, and complete can vary widely, with only some being possible.  The run_scheduler method currently is greedy on next_transaction getting the possible next_transaction after each subsequent set of set_transaction_result. Another method should be written that is greedy on set_transaction_result.",Improvement,Medium,Complete,"2017-06-19 13:57:13","2017-06-19 13:57:13",5
"Hyperledger Sawtooth","Update the ParallelScheduler to fail-fast on a batch","Since batches are atomic, it would be preferable to not run any txns that don't need to be run. So after a txn fails, provide an INVALID_BATCH status to the TransactionExecutionResult. Provide unit-tests.",Improvement,Medium,Complete,"2017-06-19 13:48:36","2017-06-19 13:48:36",3
"Hyperledger Sawtooth","Update yaml scheduler tester to test gets from state","To find errors, and provide more of a guarantee that the state seen by the txn processor is correct in the parallel case it would be preferable to while running the scheduler using the run_scheduler method on the tester, to 'get' values that were inputs for the txn and assert that they are correct. When processing the yaml, collect the valid 'set' values to be asserted when run_scheduler is called.",Improvement,Medium,Complete,"2017-06-19 13:44:04","2017-06-19 13:44:04",2
"Hyperledger Sawtooth","Investigate SGX SDK Simulator","Determine and document the design of what would be needed to remove the standalone PoET simulator and instead use the SGX SDK simulator.","New Feature",Medium,Complete,"2017-06-19 05:00:33","2017-06-19 05:00:33",2
"Hyperledger Sawtooth","Create PoET Presentation for Technical Forum",,"New Feature",Medium,Complete,"2017-06-19 04:58:35","2017-06-19 04:58:35",3
"Hyperledger Sawtooth","Create Unit Tests for PoET SGX Enclave","The current unit tests for the PoET SGX enclave are more like integration tests.  Proper unit tests need to be created, especially when it comes to interaction with the IAS client.  The PoET SGX enclave needs to be able to properly handle errors from the IAS client (for example, network timeouts, HTTP error return codes, etc.)","New Feature",Medium,Backlog,"2017-06-19 04:54:29","2017-06-19 04:54:29",3
"Hyperledger Sawtooth","Create Proper Unit Tests for the IAS Proxy","The IAS proxy currently has unit tests that communicate with the real IAS server.  Unit tests need to be created to ensure that the proxy properly deals with errors.","New Feature",Medium,Backlog,"2017-06-19 04:51:29","2017-06-19 04:51:29",3
"Hyperledger Sawtooth","Create Package for IAS Proxy","Once the PoET SGX code has been committed to the repository, the IAS proxy needs its own separate package.","New Feature",Medium,Complete,"2017-06-19 04:50:05","2017-06-19 04:50:05",2
"Hyperledger Sawtooth","Create Unit Tests for IAS Client","The IAS client, once moved to its own package, needs its own unit tests to verify that it behaves properly in the face of network errors (timeouts, HTTP error return codes, etc.).","New Feature",Medium,Complete,"2017-06-19 04:48:14","2017-06-19 04:48:14",3
"Hyperledger Sawtooth","Create Package for IAS Client","The IAS client, because it is used by both the SGX enclave and the IAS proxy, needs to be put into its own package.","New Feature",Medium,Complete,"2017-06-19 04:46:40","2017-06-19 04:46:40",2
"Hyperledger Sawtooth","Handle txn in a predecessor's batch failing by replay of subsequent txns","For the parallel-scheduler, If [a, b, c] are a batch and [d, e, f] are a batch and d implicitly depends on a, if a is valid, but c is invalid, d and any subsequent txns should be re-run as if 'a' hadn't been run. This will cause more txns than are in the scheduler to be run, but there should be only 1 final txn_result per txn. After this task there should be unittests and yaml based scheduler tests for this functionality and the parallel scheduler should be passing them.",Improvement,Medium,Complete,"2017-06-19 02:32:54","2017-06-19 02:32:54",3
"Hyperledger Sawtooth","Implement BlockStore replay tool","Implement a tool which will replay the blocks contained in a block store through the scheduler/executor/context manager/TPs.    Initially, this tool is primarily for testing scheduler implementations and debugging.    This tool should make aggressive use of the schedulers, by default, spanning multiple blocks across a single scheduler.  It should also have options to make it behave closer to the journal (currently single block at a time).    This tools should print performance statistics as it operates.","New Feature",Medium,Backlog,"2017-06-19 02:29:24","2017-06-19 02:29:24",5
"Hyperledger Sawtooth","Implement MultiScheduler for scheduler testing",,"New Feature",Medium,Backlog,"2017-06-19 02:28:18","2017-06-19 02:28:18",5
"Hyperledger Sawtooth","Debug post to batches&wait=<X> not returning promptly for the SupplyChain client","When the supplychain client posts with a wait parameter to the REST API batches it does not return untill the time out expires even though the batch commits.          Details from the Slack chat about the issue:         ```Creating latest_validator_1 ... done  Creating latest_restapi_1 ... done  Creating latest_supplychain_unit_test_1 ... done  Attaching to latest_validator_1, sawtooth-tp_settings-default, latest_tp_supplychain_python_1, latest_restapi_1, latest_supplychain_unit_test_1  validator_1 | writing file: /etc/sawtooth/keys/validator.priv  validator_1 | writing file: /etc/sawtooth/keys/validator.pub  validator_1 | creating key directory: /root/.sawtooth/keys  validator_1 | writing file: /root/.sawtooth/keys/my_key.priv  validator_1 | writing file: /root/.sawtooth/keys/my_key.pub  validator_1 | Generated config-genesis.batch  validator_1 | Processing config-genesis.batch...  validator_1 | Generating /var/lib/sawtooth/genesis.batch  validator_1 | [00:19:01.534 INFO path] Skipping path loading from non-existent config file: /etc/sawtooth/path.toml  validator_1 | [00:19:01.535 INFO validator] Skipping validator config loading from non-existent config file: /etc/sawtooth/validator.toml  validator_1 | [00:19:01.535 INFO keys] Loading signing key: /etc/sawtooth/keys/validator.priv  validator_1 | [00:19:01.537 INFO cli] config [path]: config_dir = /etc/sawtooth  validator_1 | [00:19:01.538 INFO cli] config [path]: key_dir = /etc/sawtooth/keys  validator_1 | [00:19:01.538 INFO cli] config [path]: data_dir = /var/lib/sawtooth  validator_1 | [00:19:01.538 INFO cli] config [path]: log_dir = /var/log/sawtooth  validator_1 | [00:19:01.538 WARNING cli] Network key pair is not configured, Network communications between validators will not be authenticated or encrypted.  validator_1 | [00:19:01.538 DEBUG core] database file is /var/lib/sawtooth/merkle-00.lmdb  validator_1 | [00:19:01.539 DEBUG core] state delta store file is /var/lib/sawtooth/state-deltas-00.lmdb  validator_1 | [00:19:01.541 DEBUG core] block store file is /var/lib/sawtooth/block-00.lmdb  validator_1 | [00:19:01.548 DEBUG selector_events] Using selector: ZMQSelector  validator_1 | [00:19:01.549 INFO interconnect] Listening on tcp://eth0:4004  validator_1 | [00:19:01.549 DEBUG dispatch] Added send_message function for connection ServerThread  validator_1 | [00:19:01.551 DEBUG genesis] genesis_batch_file: /var/lib/sawtooth/genesis.batch  validator_1 | [00:19:01.551 DEBUG genesis] block_chain_id: not yet specified  validator_1 | [00:19:01.551 INFO genesis] Producing genesis block from /var/lib/sawtooth/genesis.batch  validator_1 | [00:19:01.552 DEBUG genesis] Adding 1 batches  validator_1 | [00:19:01.567 DEBUG executor] no transaction processors registered for processor type sawtooth_settings: 1.0: application/protobuf  validator_1 | [00:19:01.574 INFO executor] Waiting for transaction processor (sawtooth_settings, 1.0, application/protobuf)  validator_1 | [00:19:01.611 DEBUG interconnect] ServerThread receiving TP_REGISTER_REQUEST message: 125 bytes  validator_1 | [00:19:01.617 INFO processor_handlers] registered transaction processor: connection_id=f099cda6b11521e5d8669f59dc2d227a3066ef682512d8d738e0006c91ae7aaf19b017664f2cd1ab78ffeafdb99754a5b4321cec78203a81c73b2ddf749f5679, family=sawtooth_settings, version=1.0, encoding=application/protobuf, namespaces=['000000']  validator_1 | [00:19:01.621 DEBUG interconnect] ServerThread sending TP_PROCESS_REQUEST to b'2bd9fdded71b4ba1'  validator_1 | [00:19:01.630 DEBUG interconnect] ServerThread sending TP_REGISTER_RESPONSE to b'2bd9fdded71b4ba1'  validator_1 | [00:19:01.647 DEBUG interconnect] ServerThread receiving TP_STATE_GET_REQUEST message: 177 bytes  validator_1 | [00:19:01.655 DEBUG tp_state_handlers] GET: [('000000a87cb5eafdcca6a8cde0fb0dec1400c5ab274474a6aa82c12840f169a04216b7', None)]  validator_1 | [00:19:01.660 DEBUG interconnect] ServerThread sending TP_STATE_GET_RESPONSE to b'2bd9fdded71b4ba1'  validator_1 | [00:19:01.676 DEBUG interconnect] ServerThread receiving TP_STATE_GET_REQUEST message: 177 bytes  validator_1 | [00:19:01.677 DEBUG tp_state_handlers] GET: [('000000a87cb5eafdcca6a8cde0fb0dec1400c5ab274474a6aa82c1918142591ba4e8a7', None)]  validator_1 | [00:19:01.680 DEBUG interconnect] ServerThread sending TP_STATE_GET_RESPONSE to b'2bd9fdded71b4ba1'  validator_1 | [00:19:01.683 DEBUG interconnect] ServerThread receiving TP_STATE_GET_REQUEST message: 177 bytes  validator_1 | [00:19:01.699 DEBUG tp_state_handlers] GET: [('000000a87cb5eafdcca6a8cde0fb0dec1400c5ab274474a6aa82c12840f169a04216b7', None)]  validator_1 | [00:19:01.704 DEBUG interconnect] ServerThread sending TP_STATE_GET_RESPONSE to b'2bd9fdded71b4ba1'  validator_1 | [00:19:01.706 DEBUG interconnect] ServerThread receiving TP_STATE_SET_REQUEST message: 293 bytes  validator_1 | [00:19:01.707 DEBUG tp_state_handlers] SET: ['000000a87cb5eafdcca6a8cde0fb0dec1400c5ab274474a6aa82c12840f169a04216b7']  validator_1 | [00:19:01.713 DEBUG interconnect] ServerThread sending TP_STATE_SET_RESPONSE to b'2bd9fdded71b4ba1'  validator_1 | [00:19:01.715 DEBUG interconnect] ServerThread receiving TP_PROCESS_RESPONSE message: 69 bytes  validator_1 | [00:19:01.720 DEBUG interconnect] message round trip: TP_PROCESS_RESPONSE 0.0964360237121582  validator_1 | [00:19:01.722 DEBUG genesis] Produced state hash 63250521e8448d4aabe007198b2be3cdf2a498c30a745514e8fc81d5a63b0d3c for genesis block.  validator_1 | [00:19:01.726 INFO genesis] Genesis block created: f57d5892(0, S:63250521, P:00000000)  validator_1 | [00:19:01.726 DEBUG chain_id_manager] writing block chain id  validator_1 | [00:19:01.727 DEBUG genesis] Deleting genesis data.  validator_1 | [00:19:01.727 DEBUG selector_events] Using selector: ZMQSelector  validator_1 | [00:19:01.728 INFO interconnect] Listening on tcp://eth0:8800  validator_1 | [00:19:01.728 DEBUG dispatch] Added send_message function for connection ServerThread  validator_1 | [00:19:01.732 INFO chain] Chain controller initialized with chain head: f57d5892(0, S:63250521, P:00000000)  validator_1 | [00:19:01.734 INFO publisher] Now building on top of block: f57d5892(0, S:63250521, P:00000000)  validator_1 | [00:19:01.891 DEBUG interconnect] ServerThread receiving TP_REGISTER_REQUEST message: 144 bytes  validator_1 | [00:19:01.893 INFO processor_handlers] registered transaction processor: connection_id=cb5834ba71895c24d3883423cc71365b2b55ef2c2ab01cda03cc3ca51d3efc1fb4d40ff658c3557628e4b4d065e6422c4547ebe030dee300cf1d58c0dd7e9d5e, family=sawtooth_supplychain, version=0.5, encoding=application/protobuf, namespaces=['160343', '466f14', '8728e8']  validator_1 | [00:19:01.893 DEBUG interconnect] ServerThread sending TP_REGISTER_RESPONSE to b'763b0695f1394257'  tp_supplychain_python_1 | [00:19:01.882 DEBUG selector_events] Using selector: ZMQSelector  tp_supplychain_python_1 | [00:19:01.895 INFO core] register attempt: OK  sawtooth-tp_settings-default | [00:19:00 DEBUG selector_events] Using selector: ZMQSelector  restapi_1 | [00:19:01.984 DEBUG selector_events] Using selector: EpollSelector  sawtooth-tp_settings-default | [00:19:01 INFO core] register attempt: OK  sawtooth-tp_settings-default | [00:19:01 DEBUG core] received message of type: TP_PROCESS_REQUEST  restapi_1 | [00:19:01.985 INFO rest_api] Creating handlers for validator at tcp://validator:4004  restapi_1 | [00:19:01.987 INFO rest_api] Starting REST API on restapi:8080  sawtooth-tp_settings-default | [00:19:01 INFO handler] Setting setting sawtooth.settings.vote.authorized_keys changed from None to 02845303a294114701414a14dd9f3ca54be691523c94ca1074417241daa3a5ad66  supplychain_unit_test_1 | INFO:test_supplychain_integration:_agent_create: 0256f9f2891a05594b932353b4e56a20bec120a7bffed83eb37dd7705587070332  supplychain_unit_test_1 | INFO:root:agent_create 0256f9f2891a05594b932353b4e56a20bec120a7bffed83eb37dd7705587070332 16034371e3ee7dcce5b5ad8fc29fa478bb337a26cc8665744a0443f6ae19e75d020158  supplychain_unit_test_1 | INFO:sawtooth_supplychain.client:http://restapi:8080/batches?wait=10  supplychain_unit_test_1 | INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): restapi  restapi_1 | [00:19:02.447 INFO rest_api] Request abfade: POST /batches?wait=10 from 172.18.0.6  restapi_1 | [00:19:02.448 DEBUG route_handlers] Sending CLIENT_BATCH_SUBMIT_REQUEST request to validator  validator_1 | [00:19:02.450 DEBUG interconnect] ServerThread receiving CLIENT_BATCH_SUBMIT_REQUEST message: 1042 bytes  validator_1 | [00:19:02.454 DEBUG interconnect] ServerThread sending TP_PROCESS_REQUEST to b'763b0695f1394257'  tp_supplychain_python_1 | [00:19:02.455 DEBUG core] received message of type: TP_PROCESS_REQUEST  tp_supplychain_python_1 | [00:19:02.455 DEBUG handler] SupplyChainHandler.apply action: AGENT_CREATE  tp_supplychain_python_1 | [00:19:02.456 DEBUG handler] _agent_create: 0256f9f2891a05594b932353b4e56a20bec120a7bffed83eb37dd7705587070332 16034371e3ee7dcce5b5ad8fc29fa478bb337a26cc8665744a0443f6ae19e75d020158  validator_1 | [00:19:02.457 DEBUG interconnect] ServerThread receiving TP_STATE_GET_REQUEST message: 177 bytes  validator_1 | [00:19:02.457 DEBUG tp_state_handlers] GET: [('16034371e3ee7dcce5b5ad8fc29fa478bb337a26cc8665744a0443f6ae19e75d020158', None)]  validator_1 | [00:19:02.458 DEBUG interconnect] ServerThread sending TP_STATE_GET_RESPONSE to b'763b0695f1394257'  validator_1 | [00:19:02.461 DEBUG interconnect] ServerThread receiving TP_STATE_SET_REQUEST message: 259 bytes  validator_1 | [00:19:02.462 DEBUG tp_state_handlers] SET: ['16034371e3ee7dcce5b5ad8fc29fa478bb337a26cc8665744a0443f6ae19e75d020158']  validator_1 | [00:19:02.464 DEBUG interconnect] ServerThread sending TP_STATE_SET_RESPONSE to b'763b0695f1394257'  validator_1 | [00:19:02.468 DEBUG interconnect] ServerThread receiving TP_PROCESS_RESPONSE message: 69 bytes  validator_1 | [00:19:02.469 DEBUG interconnect] message round trip: TP_PROCESS_RESPONSE 0.01513814926147461  validator_1 | [00:19:02.554 INFO publisher] Claimed Block: 641d07a6(1, S:98a859f6, P:f57d5892)  validator_1 | [00:19:02.555 INFO publisher] Block publishing is suspended until new chain head arrives.  validator_1 | [00:19:02.555 DEBUG chain] Block received: 641d07a6(1, S:98a859f6, P:f57d5892)  validator_1 | [00:19:02.556 INFO chain] Starting block validation of : 641d07a6(1, S:98a859f6, P:f57d5892)  validator_1 | [00:19:02.558 DEBUG interconnect] ServerThread sending TP_PROCESS_REQUEST to b'763b0695f1394257'  tp_supplychain_python_1 | [00:19:02.559 DEBUG core] received message of type: TP_PROCESS_REQUEST  tp_supplychain_python_1 | [00:19:02.560 DEBUG handler] SupplyChainHandler.apply action: AGENT_CREATE  tp_supplychain_python_1 | [00:19:02.561 DEBUG handler] _agent_create: 0256f9f2891a05594b932353b4e56a20bec120a7bffed83eb37dd7705587070332 16034371e3ee7dcce5b5ad8fc29fa478bb337a26cc8665744a0443f6ae19e75d020158  validator_1 | [00:19:02.562 DEBUG interconnect] ServerThread receiving TP_STATE_GET_REQUEST message: 177 bytes  validator_1 | [00:19:02.562 DEBUG tp_state_handlers] GET: [('16034371e3ee7dcce5b5ad8fc29fa478bb337a26cc8665744a0443f6ae19e75d020158', None)]  validator_1 | [00:19:02.563 DEBUG interconnect] ServerThread sending TP_STATE_GET_RESPONSE to b'763b0695f1394257'  validator_1 | [00:19:02.566 DEBUG interconnect] ServerThread receiving TP_STATE_SET_REQUEST message: 259 bytes  validator_1 | [00:19:02.566 DEBUG tp_state_handlers] SET: ['16034371e3ee7dcce5b5ad8fc29fa478bb337a26cc8665744a0443f6ae19e75d020158']  validator_1 | [00:19:02.567 DEBUG interconnect] ServerThread sending TP_STATE_SET_RESPONSE to b'763b0695f1394257'  validator_1 | [00:19:02.569 DEBUG interconnect] ServerThread receiving TP_PROCESS_RESPONSE message: 69 bytes  validator_1 | [00:19:02.571 INFO dev_mode_consensus] Choose new fork 641d07a6: New fork head switches consensus to DevMode  validator_1 | [00:19:02.571 INFO chain] on_block_validated: 641d07a6(1, S:98a859f6, P:f57d5892)  validator_1 | [00:19:02.572 INFO chain] Chain head updated to: 641d07a6(1, S:98a859f6, P:f57d5892)  validator_1 | [00:19:02.572 INFO publisher] Now building on top of block: 641d07a6(1, S:98a859f6, P:f57d5892)  validator_1 | [00:19:02.575 DEBUG chain] Verify descendant blocks: 641d07a6(1, S:98a859f6, P:f57d5892) ([])  validator_1 | [00:19:02.575 DEBUG state_delta_processor] Publishing state delta from 641d07a6(1, S:98a859f6, P:f57d5892)  validator_1 | [00:19:02.575 INFO chain] Finished block validation of: 641d07a6(1, S:98a859f6, P:f57d5892)  validator_1 | [00:19:02.576 DEBUG interconnect] message round trip: TP_PROCESS_RESPONSE 0.011431694030761719  validator_1 | [00:19:12.454 DEBUG interconnect] ServerThread sending CLIENT_BATCH_SUBMIT_RESPONSE to b'3ac55e5d8d8b469d'  restapi_1 | [00:19:12.455 DEBUG route_handlers] Received CLIENT_BATCH_SUBMIT_RESPONSE response from validator with status OK  restapi_1 | [00:19:12.457 INFO rest_api] Response abfade: 201 status, 175B size, in 10.009s  supplychain_unit_test_1 | INFO:test_supplychain_integration:\{  supplychain_unit_test_1 | link: http://restapi:8080/batches?id=c22a771cd7125d440f62dc4849ddfe4ca23100af7775517f635b5a436e2789516fc02691c06e793fb47057ae3276ffd1d5469c78f3f46afd8ad04718da88b332  supplychain_unit_test_1 | }  supplychain_unit_test_1 | .set username: root  supplychain_unit_test_1 | set url: 127.0.0.1:8080  supplychain_unit_test_1 | writing file: /root/.sawtooth/keys/root.priv  supplychain_unit_test_1 | writing file: /root/.sawtooth/keys/root.addr  supplychain_unit_test_1 |  supplychain_unit_test_1 | -------------------------------------------------------------------Removing latest_supplychain_unit_test_1 ... done  Removing latest_restapi_1 ... done  Removing sawtooth-tp_settings-default ... done  Removing latest_tp_supplychain_python_1 ... done  Removing latest_validator_1 ... done  Removing network latest_default  Add Comment Click to expand inline 131 lines    <USER>[5:21 PM]   @zac-intel there you go, there are still some of my debug logs in there. I am tracking down an issue with my address generation.    mitchell-intel [5:39 PM]   Oh well, I tried    <USER>[5:44 PM]   :slightly_smiling_face:    zac-intel [7:54 PM]   @<USER>Everything appears to be working in these logs    [7:55]   Unless I'm missing something    [7:55]    restapi_1                | [00:19:02.447 INFO     rest_api] Request  abfade: POST /batches?wait=10 from 172.18.0.6  restapi_1                | [00:19:02.448 DEBUG    route_handlers] Sending CLIENT_BATCH_SUBMIT_REQUEST request to validator  validator_1              | [00:19:02.450 DEBUG    interconnect] ServerThread receiving CLIENT_BATCH_SUBMIT_REQUEST message: 1042 bytes    [7:56]    validator_1              | [00:19:02.575 INFO     chain] Finished block validation of: 641d07a6(1, S:98a859f6, P:f57d5892)  validator_1              | [00:19:02.576 DEBUG    interconnect] message round trip: TP_PROCESS_RESPONSE 0.011431694030761719  validator_1              | [00:19:12.454 DEBUG    interconnect] ServerThread sending CLIENT_BATCH_SUBMIT_RESPONSE to b'3ac55e5d8d8b469d'  restapi_1                | [00:19:12.455 DEBUG    route_handlers] Received CLIENT_BATCH_SUBMIT_RESPONSE response from validator with status OK  restapi_1                | [00:19:12.457 INFO     rest_api] Response abfade: 201 status, 175B size, in 10.009s  (edited)    [7:58]   Ah    [7:58]   I see, the response came back 10 seconds after the block was validated    <USER>[8:00 PM]   yes, that is exactly what I am seeing. In these logs I submitted with http://restapi:8080/batches?wait=10    zac-intel [8:05 PM]   Works fine on master, using intkey and the sawtooth CLI    [8:07]   Although someone is sending a bizarre number of state requests    [8:07]   It's not going through the REST API    [8:09]   I guess that's just the Intkey TP doing it's thing    zac-intel [8:12 PM]   added this Plain Text snippet: Validator Logs   [03:06:21.468 DEBUG interconnect] ServerThread receiving CLIENT_BATCH_SUBMIT_REQUEST message: 3038 bytes  [03:06:21.473 DEBUG interconnect] ServerThread sending CLIENT_BATCH_SUBMIT_RESPONSE to b'f8e79be9bbca42b0'  [03:06:21.475 DEBUG interconnect] ServerThread sending TP_PROCESS_REQUEST to b'102ca0fcdc2848c8'  . . .  Add Comment Click to expand inline 23 lines    zac-intel [8:13 PM]   added this Plain Text snippet: REST API Logs   [03:06:21.465 INFO rest_api] Request a7d001: POST /batches from 127.0.0.1  [03:06:21.466 DEBUG route_handlers] Sending CLIENT_BATCH_SUBMIT_REQUEST request to validator  [03:06:21.477 DEBUG route_handlers] Received CLIENT_BATCH_SUBMIT_RESPONSE response from validator with status OK  [03:06:21.477 INFO rest_api] Response a7d001: 202 status, 311B size, in 0.012s  [03:06:21.487 INFO rest_api] Request a7d0db: POST /batch_status?wait=10 from 127.0.0.1  Add Comment Click to expand inline 8 lines    zac-intel [8:14 PM]   added this Plain Text snippet: CLI Commands   $ intkey create_batch  Writing to batches.intkey...  $ sawtooth batch submit -f batches.intkey --wait 10  batches: 2, batch/sec: 48.52917729684074  All batches committed in 0.157849 sec  Add Comment    zac-intel [8:14 PM]   Let me double check and make sure the POST wait works as well    <USER>[8:15 PM]   There is not wait parameter on that post in my logs it reports as 'restapi_1                | [00:19:02.447 INFO     rest_api] Request  abfade: POST /batches?wait=10 from 172.18.0.6'    [8:15]   oops I missed the 2nd post in your logs.    [8:16]   That is to batch_status though, not batches    [8:17]   an off topic question, why is batch_status a post and not a get?    zac-intel [8:17 PM]   Yes, CLI uses a wait on batch_status    [8:17]   Sam mechanism though    [8:18]   And I just did a POST manually and it worked fine    [8:18]    $ curl --request POST \  >     --header Content-Type: application/octet-stream \  >     --data-binary @batches.intkey \  >     http://localhost:8080/batches?wait=10  \{    link: http://localhost:8080/batches?id=9a8d32b69d4a14ce49e40c411bdc8ed8befa966acd26a71959fde8355963d34c17fe51e9aa04a011f9bd1d1b6435c9c55637b4d248010adb94efecdf9d3b4325,5435e3cf7f9e2486fe62fed8757a36ec5426dffef010d55a2cdb053ba5df8d5b38deab0bcb8c89bda0710cd6c7dc8fff0f3ea93e81a1f6842a7243bd57e0ba95  }    [8:19]    [03:16:49.300 INFO     rest_api] Request  079ccf: POST /batches?wait=10 from 127.0.0.1  [03:16:49.302 DEBUG    route_handlers] Sending CLIENT_BATCH_SUBMIT_REQUEST request to validator  [03:16:49.657 DEBUG    route_handlers] Received CLIENT_BATCH_SUBMIT_RESPONSE response from validator with status OK  [03:16:49.658 INFO     rest_api] Response 079ccf: 201 status, 306B size, in 0.358s    [8:20]   Side note: /batch_status accepts both a GET and a POST    [8:20]   The GET accepts a list of ids in a comma-separated query parameter id=a,b,c    [8:21]   However, since our id's are 128 characters, and URLs top out at 2048, that limits you to requesting the status of about 15 batches at a time    <USER>[8:21 PM]   got it.    zac-intel [8:21 PM]   So the POST is a work around    [8:22]   you send a JSON body [a,b,c] and you can check on as many ids as you like    [8:23]   It is semantically inaccurate though    [8:23]   Anywho, your problem is weird    [8:24]   Your TP shouldn't be able to touch the wait mechanism    [8:24]   I would pull from master and make sure you have pristine validator code    [8:25]   If that's not it, maybe something weird with Docker?    [8:25]   I dunno though, by the logs the validator is clearly just hanging out, not doing anything    [8:26]   It's not like it's getting lost in some Docker middle-man or something    <USER>[8:33 PM]   yeah, I have a lot of docker wrangling going on.    [8:33]   I agree my TP should not be able to affect that mechanism.    [8:34]   I'll shoot you a link to by branch once I get it cleaned up a bit more.    zac-intel [8:36 PM]   If you want to take a look in your validator, the relevant code is here:   • https://github.com/hyperledger/sawtooth-core/blob/master/validator/sawtooth_validator/journal/block_store.py#L138   • https://github.com/hyperledger/sawtooth-core/blob/master/validator/sawtooth_validator/state/client_handlers.py#L515   • https://github.com/hyperledger/sawtooth-core/blob/master/validator/sawtooth_validator/state/client_handlers.py#L534",Bug,Medium,Complete,"2017-06-18 16:52:57","2017-06-18 16:52:57",2
"Hyperledger Sawtooth","Review and Update BlockValidator Batch and Transaction validation","Remove the completeness check (that is enforced by the Completer), verify that duplicate transactions and batch checking is implemented and working correctly.                ",Task,Medium,Complete,"2017-06-18 15:59:00","2017-06-18 15:59:00",2
"Hyperledger Sawtooth","Write SupplyChain overview help document",,Task,Medium,Complete,"2017-06-18 15:45:14","2017-06-18 15:45:14",3
"Hyperledger Sawtooth","Unit Test Interconnect and asyncio background thread","[https://asynctest.readthedocs.io/en/latest/] This library may be helpful.",Improvement,Medium,Backlog,"2017-06-16 21:44:27","2017-06-16 21:44:27",3
"Hyperledger Sawtooth","Python SDK: Add signing/encoder client functionality","The client features of Python SDK should be updated to match the functionality of the JavaScript SDK. Specifically this means adding a module for creating/encoding Batches and Transactions, as well as a signing module which can sign, verify, generate private keys, and generate public keys. Decisions must made about whether or not the root level signing module already satisfies those requirements, or should be replaced by this SDK.         Add any appropriate unit tests for the new functionality.",Improvement,Medium,Complete,"2017-06-15 20:01:49","2017-06-15 20:01:49",3
"Hyperledger Sawtooth","Implement Seth transaction receipts","Create Seth transaction receipts",Improvement,Medium,Complete,"2017-06-15 15:42:04","2017-06-15 15:42:04",3
"Hyperledger Sawtooth","Implement Ethereum JSON-RPC Log Calls",,Improvement,Medium,Complete,"2017-06-15 15:38:24","2017-06-15 15:38:24",5
"Hyperledger Sawtooth","Implement Ethereum JSON-RPC State Calls",,Improvement,Medium,Complete,"2017-06-15 15:38:14","2017-06-15 15:38:14",5
"Hyperledger Sawtooth","Implement Ethereum JSON-RPC Network Calls",,Improvement,Medium,Complete,"2017-06-15 15:37:47","2017-06-15 15:37:47",2
"Hyperledger Sawtooth","Design the Burrow-EVM JSON-RPC","Design the Burrow-EVM JSON-RPC server so that it:   # Is concurrent and handles requests efficiently   # Can be easily extended with new methods, as we will most likely support multiple JSON-RPC specs as projects diverge   # Reuses existing libraries (see https://github.com/tendermint/go-rpc)",Improvement,Medium,Complete,"2017-06-15 15:36:47","2017-06-15 15:36:47",5
"Hyperledger Sawtooth","Add receipt lookup to seth","Add features to seth to:   # Lookup a transaction receipt   # When waiting for a submitted transaction to commit, print its receipt",Improvement,Medium,Complete,"2017-06-15 15:29:00","2017-06-15 15:29:00",2
"Hyperledger Sawtooth","Update txn inputs/outputs to enable contract chaining","Currently, contract chaining is not possible because only the address of the sender account and receiver account are passed as inputs and outputs when submitting a transaction.    To support contract chaining, it should be made possible to pass the burrow-EVM namespace prefix as inputs and output when submitting a transaction.    The inputs/outputs are set here:    [https://github.com/hyperledger/sawtooth-core/blob/master/families/burrow_evm/src/sawtooth_burrow_evm/client/client.go#L60]    [https://github.com/hyperledger/sawtooth-core/blob/master/families/burrow_evm/src/sawtooth_burrow_evm/client/client.go#L106]     ",Improvement,Medium,Complete,"2017-06-15 15:24:40","2017-06-15 15:24:40",1
"Hyperledger Sawtooth","Implement logging event handler within Burrow-EVM","A set of LOG instructions are defined by the EVM which can be used to place information into a separate “substate”. It is intended that these logs be stored in a manner that is easily indexed and searched. Smart contract languages have adopted the convention of using these LOG instructions to set up event pub/sub patterns.    The LOG opcodes in the burrow-evm rely on an event-handling system that is part of the burrow project. This will likely need to be preserved in order to use the EVM as it exists in the burrow project. This event handling should be preserved if possible and used to forward events to the Sawtooth event system.",Improvement,Medium,Complete,"2017-06-15 15:04:18","2017-06-15 15:04:18",3
"Hyperledger Sawtooth","Implement stored EVM return values","Duplicate of STL-459",Improvement,Medium,Complete,"2017-06-15 14:55:14","2017-06-15 14:55:14",0
"Hyperledger Sawtooth","Define Burrow-EVM transaction receipts","After a transaction is executed, additional “substate” information should be stored about the transaction execution including:   * Return Value from the EVM (see below).   * Any logs that were produced (see below).   * The address of the contract that was created, if applicable.   * Any other information that can be stored from: [https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_gettransactionreceipt]    This task should determine what information needs to be stored in the transaction receipts and define how the receipts will be stored so they can be searched and indexed inefficiently.",Improvement,Medium,Complete,"2017-06-15 14:49:20","2017-06-15 14:49:20",1
"Hyperledger Sawtooth","Implement EVM permissions","Implement the permissions model defined in STL-448",Improvement,Medium,Complete,"2017-06-15 14:37:44","2017-06-15 14:37:44",3
"Hyperledger Sawtooth","Design EVM permissioning model","Design a model for setting Burrow-EVM account permissions within Sawtooth that can be integrated with the Burrow-EVM permission model (i.e., the code that already exists within the Burrow-EVM that is currently turned off). Check with the Burrow team to see if this scheme has changed in v0.17",Improvement,Medium,Complete,"2017-06-15 14:31:47","2017-06-15 14:31:47",2
"Hyperledger Sawtooth","Determine all the validator stat metrics to collect","The output of this work should be a list of metrics the validator could/should log.  Descriptions of the metrics can be brief.  It does not need to include OS metrics, as those are collected with telegraph outside of the validator process.    This list does not need to be 100% complete - we can add metrics later.  However, it does need to be close enough to inform the design of the stats/metrics library; in particular, we need to know the different types of metrics.  For example, we know some metrics are additive (such as number of blocks published) and some might be set (current length of chain), while others might be an average (txn rate).",Improvement,Medium,Complete,"2017-06-14 20:49:39","2017-06-14 20:49:39",2
"Hyperledger Sawtooth","Design stat collection library",,Improvement,Medium,Complete,"2017-06-14 20:48:03","2017-06-14 20:48:03",5
"Hyperledger Sawtooth","Set-up LR30-SGX","Set-up 5 machines.",Improvement,Medium,Complete,"2017-06-14 20:38:17","2017-06-14 20:38:17",3
"Hyperledger Sawtooth","Add --wait option to sawtooth config","This story should also remove the sleep from the test_permission integration tests and replace them with --wait.",Improvement,Medium,Backlog,"2017-06-14 20:24:35","2017-06-14 20:24:35",2
"Hyperledger Sawtooth","Add Writing Transaction Processors to “Developing without an SDK” section","Evaluate whether it can be templated with the SDK version",Improvement,Medium,Backlog,"2017-06-14 14:29:03","2017-06-14 14:29:03",5
"Hyperledger Sawtooth","Remove Javascript example from “Development without an SDK”","* Remove template, replace with a simple RST   * Evaluate whether the text needs to be tweaked accordingly",Improvement,Medium,Complete,"2017-06-14 14:28:29","2017-06-14 14:28:29",1
"Hyperledger Sawtooth","Write install guide for Javascript SDK","* Evaluate whether or not is can be templated with Python installs   * Should include at least Debian and Git installs",Improvement,Medium,Backlog,"2017-06-14 14:22:04","2017-06-14 14:22:04",2
"Hyperledger Sawtooth","Write install guide for Java SDK","* Evaluate whether or not is can be templated with Python installs   * Should include at least Debian and Git installs",Improvement,Medium,Backlog,"2017-06-14 14:21:29","2017-06-14 14:21:29",2
"Hyperledger Sawtooth","Write install guide for Go SDK","* Evaluate whether or not is can be templated with Python installs   * Should include at least Debian and Git installs",Improvement,Medium,Backlog,"2017-06-14 14:20:57","2017-06-14 14:20:57",2
"Hyperledger Sawtooth","Create section for Introduction to the XO Transaction Family","Create new or reuse material to complete the following sections:       - What is Xo (to inform users that have not heard of the game)        - How to play Xo (How to use the client)        - Xo Transaction Family Specification (include link to existing spec)",Improvement,Medium,Complete,"2017-06-14 14:19:58","2017-06-14 14:19:58",2
"Hyperledger Sawtooth","Create section for Understanding Transaction Family Concepts","Create new or reuse material to complete the following sections:        - Overview (include why we would write a txn family spec)       - State          - Serialization Determinism          - Address and Namespace Design (see current)        - Transaction Payload        - Transaction Header         - Execution          - Determinism",Improvement,Medium,Backlog,"2017-06-14 14:18:19","2017-06-14 14:18:19",3
"Hyperledger Sawtooth","Add Handling of TpPing to the C++ Sdk","If the cxx processor receives a TpPing response it should send back a TpPingResponse. If it does not, the executor will assume that the transaction processor has disconnected and will remove it from the processor list. ",Improvement,Medium,Complete,"2017-06-13 20:00:04","2017-06-13 20:00:04",3
"Hyperledger Sawtooth","Create IAS proxy for the Private UTXO system",,Bug,Medium,Complete,"2017-06-13 01:02:56","2017-06-13 01:02:56",5
"Hyperledger Sawtooth","Implement Full validation of IAS AVRs in the Private UTXO TP","Implement IAS signature verifcation in the Private UTXO Transaction Processor. ",Bug,Medium,Complete,"2017-06-13 00:37:15","2017-06-13 00:37:15",5
"Hyperledger Sawtooth","Implement UTXO Enclave","Implement a SGX enclave on Linux to handle the creation and validation of UTXO to UTXO transfer operations. ",Bug,Medium,Complete,"2017-06-13 00:29:22","2017-06-13 00:29:22",8
"Hyperledger Sawtooth","Implement UTXO Enclave Simulator","Create a simulate enclave that plugs in to the Private UTXO CLI and simulates generating the IAS avr","New Feature",Medium,Complete,"2017-06-13 00:27:14","2017-06-13 00:27:14",3
"Hyperledger Sawtooth","Implement Initial UTXO CLI ","Create aa cli that can perform the following actions:    1) Submit a transaction to creating an asset type    2) Submit a transaction to transfer asset    3) Submit a transaction to asset to off DLT UTXO    4) Submit a transaction to transfer UTXO to UTXO    - no IAS AVR required.    5) Convert UTXO to on chain Asset    6) retrieve the current UTXO set.    7) Report current on ledger balances of an public key.          ","New Feature",Medium,Complete,"2017-06-13 00:24:37","2017-06-13 00:24:37",5
"Hyperledger Sawtooth","Implement Initial Private UTXO transaction Processor","Create a Transaction Processor that implements handling of the described in the Private UTXO transaction processor spec:     1) creating an asset type    2) transfer asset    3) convert asset to off DLT UTXO    4) transfer UTXO to UTXO    - IAS AVR should be stubbed out.     5) Convert UTXO to on chain Asset                   Implement TP test for this transaction processor using the Transaction Processor Test FrameWork          ","New Feature",Medium,Complete,"2017-06-13 00:24:21","2017-06-13 00:24:21",5
"Hyperledger Sawtooth","Update context manager to enforce address characteristics","The context manager should enforce that gets and sets only use valid addresses: those having 70 lowercase hex characters.",Bug,High,Complete,"2017-06-10 19:50:19","2017-06-10 19:50:19",2
"Hyperledger Sawtooth","Update StateEntry proto, Get and Set Handlers for ContextManager, to handle null values","The State interface, including proto definitions, doesn't handle null values and from the sdk's perspective null and empty bytes are the same. Because of how Protocol Buffers version 3 works, bytes fields have an empty bytes string as a default. This [Github issue |https://github.com/google/protobuf/issues/1606]gives Oneof fields as an alternative to null values.     This task should be done in concert with updating the sdks to correctly return a null value from gets on the sdk state class, and also set a null value to an address using the sdk state class.",Bug,Low,Backlog,"2017-06-08 22:07:53","2017-06-08 22:07:53",5
"Hyperledger Sawtooth","Resolve license issues uncovered by Fossology Scan","h2. Context    Hyperledger Sawtooth source files (pulled on June 5, 2017) were scanned by The Linux Foundation utilizing Fossology to determine license for files contained in the following repositories:   * [https://github.com/hyperledger/sawtooth-core.git]    From the Hyperledger Charter ([https://www.hyperledger.org/about/charter]) Section 13, all files that are included in Hyperledger projects should either be licensed with the Apache License, Version 2.0 for source code or Creative Commons Attribution 4.0 International License for documentation.  h2. Expected Behavior    All files should have license text included either directly or via a LICENSE file in the directory for files that cannot be modified to include a comment with the license text (think binary files).  h2. Actual Behavior    See attached file for results.  h2. Possible Fix    For files with Attribution license, ideally, we would replace those with Apache 2.0 files and dependencies; otherwise, we will need to go to the Hyperledger Governing board for exception.    For _ALL_ files that do not have a license included, the first step is to check with the contributor to ensure that the file can be released as Apache 2.0 or CC-BY-4.0. If the contributor agrees, the file should be modified to include the license. You can utilize [SPDX Identifiers|https://spdx.org/] to represent the correct license.    For those non-modifiable files, you will need to include a LICENSE file in the directory containing the license that the files are covered by. Here are a few examples of how this might be done:   * [OPNFV Apex|https://github.com/opnfv/apex/blob/master/LICENSE.rst] -- this is an example of explicitly calling out Apache 2.0 for source code and CC-BY-4.0 for docs.   * [containerd|https://github.com/containerd/containerd/blob/master/README.md] -- see notice at bottom. This also calls out the separate Apache / CC-BY-4.0 docs, and explicitly references the docs directory.    h2. Steps to Reproduce    Run code through Fossology (contact <USER>at linuxfoundation dot org) to have the source re-run after bug has been fixed.",Task,High,Complete,"2017-06-08 20:44:21","2017-06-08 20:44:21",3
"Hyperledger Sawtooth","Write Spec for Private UTXO Transaction Processor. ","Create a Sawtooth style Spec based onthe private UTXO transaction document. ","New Feature",Medium,Complete,"2017-06-08 00:06:39","2017-06-08 00:06:39",3
"Hyperledger Sawtooth","Validator Registry does not remove Validator ID on re-enrollment","consensus.poet.families.sawtooth_validator_registry.validator_registry.processor.handler._update_validator_state(...)    Manages structures associated with validator admission.    On re-enrolling an existing anti-sybil ID (EPID), with a new Validator ID (OPK), the previous Validator ID will not be expunged from state, and the \{anti-sybil ID: Validator ID} map will not be updated appropriately.        Correct the method to remove the old Validator ID record from state and update the \{anti-sybil ID: Validator ID} map to include the new Validator ID.",Bug,Medium,Complete,"2017-06-07 22:14:31","2017-06-07 22:14:31",2
"Hyperledger Sawtooth","Publish PoET Specification","Revise format / content.  Correct errors like zTest algorithm (one value is initialized and never gets updated).","New Feature",Medium,Complete,"2017-06-07 18:15:21","2017-06-07 18:15:21",2
"Hyperledger Sawtooth","Investigate Replacing strncpy with strlcpy in PoET SGX Enclave","Investigate to understand pitfalls of using strncpy vs strlcpy and recommend course of action (including creating follow-up story(ies)) or inaction.","New Feature",Medium,Backlog,"2017-06-06 18:53:26","2017-06-06 18:53:26",1
"Hyperledger Sawtooth","Simulate Intel Attestation Service in PoET SGX Simulator Enclave","If SGX simulator is being used in SGX PoET enclave, there is currently no data returned in the proof data field of the signup information as a real SGX enclave needs to be used to get the attestation verification report from IAS. We will need to simulate the attestation verification report the same way that it is done in the PoET simulator.","New Feature",Medium,Backlog,"2017-06-06 18:50:38","2017-06-06 18:50:38",2
"Hyperledger Sawtooth","Attempt to Get SGX SDK Simulator Working with PoET SGX Enclave","The SGX SDK also has simulator libraries for use on systems without SGX hardware.  See if we can get the PoET SGX enclave wrapper code to work with the SGX simulator.","New Feature",Medium,Backlog,"2017-06-06 18:47:37","2017-06-06 18:47:37",3
"Hyperledger Sawtooth","Create Better Unit Tests for SGX Enclave","The PoET SGX unit tests could be enhanced to provide more in-depth/better testing.","New Feature",Medium,Backlog,"2017-06-06 18:36:59","2017-06-06 18:36:59",3
"Hyperledger Sawtooth","[Documentation] Creating and Submitting Transactions - Unable to submit transactions","Following: [https://intelledger.github.io/app_developers_guide/intro_to_sawtooth.html#creating-and-submitting-transactions] on my Ubuntu 16.04.02 install, I do not know how to submit transactions using intkey load.    *<USER>sawtooth*:*~*$ intkey load -f batches.intkey    [15:32:46 WARNING load] Unable to connect to http://localhost:8080: make sure URL is correct    [15:32:46 WARNING load] Unable to connect to http://localhost:8080: make sure URL is correct    [15:32:47 WARNING load] Unable to connect to http://localhost:8080: make sure URL is correct    [15:32:47 WARNING load] Unable to connect to http://localhost:8080: make sure URL is correct    [15:32:47 WARNING load] Unable to connect to http://localhost:8080: make sure URL is correct    [15:32:47 WARNING load] Unable to connect to http://localhost:8080: make sure URL is correct    [15:32:47 WARNING load] Unable to connect to http://localhost:8080: make sure URL is correct    [15:32:47 WARNING load] Unable to connect to http://localhost:8080: make sure URL is correct    [15:32:47 WARNING load] Unable to connect to http://localhost:8080: make sure URL is correct    [15:32:47 WARNING load] Unable to connect to http://localhost:8080: make sure URL is correct    [15:32:47 WARNING load] Unable to connect to http://localhost:8080: make sure URL is correct    batches: 1001 batch/sec: 3262.4823347214206    I tried using -U with the following addresses as obtained from previous steps, but I still did not see the transactions loading:    -U tcp://127.0.0.1:40000 (currently running transaction processor)    -U tcp://127.0.0.1:8800 (currently running validator)    Which address should I send to?  Regardless of address specified, nothing happened on the validator window.",Bug,High,Complete,"2017-06-06 00:24:36","2017-06-06 00:24:36",1
"Hyperledger Sawtooth","[Documentation] App Developer Guide - Unable to create keys to run validator","Using [https://intelledger.github.io/app_developers_guide/intro_to_sawtooth.html#start-validator,] I was unable to create keys due to incorrect path specified.  In addition, after Talking with Shawn Amudson, it seems that the wrong command was specified.    {{*<USER>sawtooth*:*~*$ sawtooth keygen --key-dir /home/ubuntu/sawtooth/keys/ validator}}    {{Error: no such directory: /home/ubuntu/sawtooth/keys/}}         {{*<USER>sawtooth*:*~*$ mkdir -p /home/<USER>sawtooth/keys}}    {{*<USER>sawtooth*:*~*$ sawtooth keygen --key-dir /home/<USER>sawtooth/keys validator}}    {{writing file: /home/<USER>sawtooth/keys/validator.priv}}    {{writing file: /home/<USER>sawtooth/keys/validator.pub}}    However, after talking with Shawn, he recommended that I use the following command:    {{*<USER>sawtooth*:*~*$ sudo sawtooth admin keygen}}    {{[sudo] password for <USER>}}    {{writing file: /etc/sawtooth/keys/validator.priv}}    {{writing file: /etc/sawtooth/keys/validator.pub}}",Bug,High,Complete,"2017-06-06 00:19:19","2017-06-06 00:19:19",1
"Hyperledger Sawtooth","[Documentation] Environment Setup - Sudo required","Following [https://intelledger.github.io/app_developers_guide/intro_to_sawtooth.html#create-genesis-block] after setting up my environment on Ubuntu 16.04.02 using [https://intelledger.github.io/app_developers_guide/environment_setup.html#env-ubuntu,] I received the following error because I did not use sudo, which was not mentioned as being required on the page.    {{*<USER>sawtooth*:*~*$ sawtooth admin genesis}}    {{Generating /var/lib/sawtooth/genesis.batch}}    {{Traceback (most recent call last):}}    {{  File /usr/lib/python3/dist-packages/sawtooth_cli/main.py, line 150, in main_wrapper}}{{    main()}}    {{  File /usr/lib/python3/dist-packages/sawtooth_cli/main.py, line 126, in main}}{{    do_admin(args)}}    {{  File /usr/lib/python3/dist-packages/sawtooth_cli/admin.py, line 25, in do_admin}}{{    do_genesis(args)}}    {{  File /usr/lib/python3/dist-packages/sawtooth_cli/admin_command/genesis.py, line 75, in do_genesis}}{{    with open(genesis_file, 'wb') as out_file:}}    {{PermissionError: [Errno 13] Permission denied: '/var/lib/sawtooth/genesis.batch'}}         {{*<USER>sawtooth*:*~*$ ls -la /var/lib/sawtooth/}}    {{total 8}}    {{drwxr-xr-x  2 sawtooth sawtooth 4096 May 16 20:25 *.*}}    {{drwxr-xr-x 41 root     root     4096 Jun  5 14:37 *..*}}         {{*<USER>sawtooth*:*~*$ sudo sawtooth admin genesis}}    {{Generating /var/lib/sawtooth/genesis.batch}}",Bug,High,Complete,"2017-06-06 00:13:10","2017-06-06 00:13:10",1
"Hyperledger Sawtooth","[Documentation] Environment Setup - Problem adding to /etc/apt/sources.list","Following the steps at [https://intelledger.github.io/app_developers_guide/environment_setup.html#env-ubuntu] to setup my newly created Ubuntu 16.04.02 server, I ran into the following issue:    {{*<USER>sawtooth*:*~*$ sudo echo deb http://repo.sawtooth.me/ubuntu/0.8/stable xenial universe >> /etc/apt/sources.list}}    {{-bash: /etc/apt/sources.list: Permission denied}}    Instead, I had to manually edit /etc/apt/sources.list     ",Bug,High,Complete,"2017-06-06 00:07:09","2017-06-06 00:07:09",1
"Hyperledger Sawtooth","Design approach to expose block information to transaction processors","Design a method of exposing block information to transaction processors.  In particular, block number, block hash, and block timestamp.    At least two approaches should be considered (S0=starting state, S1=final state; T=transaction; B=block):    1. Inserting transactions into the block to update state (keeping S0+T->S1); or  2. Supplying a method for TPs to get block information via 0MQ API (switching to S0+T+B->S1)  ","New Feature",High,Backlog,"2017-06-05 23:46:05","2017-06-05 23:46:05",3
"Hyperledger Sawtooth","Update Go SDK to pass error information in responses","Update the Go SDK to take the current exception message and set the values on the TpProcessResponse message. This depends on STL-369's completion.",Improvement,Medium,Complete,"2017-06-05 16:04:40","2017-06-05 16:04:40",2
"Hyperledger Sawtooth","Update JavaScript SDK to pass error information in responses","Update the Python SDK to take the current exception message and set the values on the TpProcessResponse message. This depends on STL-369's completion.",Improvement,Medium,Complete,"2017-06-05 16:01:24","2017-06-05 16:01:24",2
"Hyperledger Sawtooth","Update Java SDK to pass error information in responses","Update the Java SDK to take the current exception message and set the values on the TpProcessResponse message. This depends on STL-369's completion.",Improvement,Medium,Complete,"2017-06-05 16:00:14","2017-06-05 16:00:14",1
"Hyperledger Sawtooth","Enter System Admin's Doc stories into JIRA based on TOC",,Improvement,Medium,Complete,"2017-06-05 15:47:04","2017-06-05 15:47:04",2
"Hyperledger Sawtooth","Enter System Admin's Guide TOC into Epic description","System Administartor's Guide     -Recommended Set-up   -Diagrams & Descriptions   -Networking  -Deployment   -Upgrading   -SGX   -Installing from Repository    -Ansible    -Install files & locations   -Validator Key Definition   -Starting with System D   -Validator Genesis  -Log Configuration   -Overview   -Default   -Configuration  -Examples  -Using a Proxy Server to Authorize the REST API   -Forwarding URL Info with Headers   -Apache Proxy Setup Guide  -Monitoring & Troubleshooting  ",Improvement,Medium,Complete,"2017-06-05 15:31:22","2017-06-05 15:31:22",2
"Hyperledger Sawtooth","Enter Architecture Doc stories into JIRA based on TOC","Create stories for building content for the Architecture Document based upon the agreed-upon ToC.",Improvement,Medium,Complete,"2017-06-05 15:29:36","2017-06-05 15:29:36",2
"Hyperledger Sawtooth","Enter Architecture Doc TOC into Epic description","Determine the key entries and structure of the Architecture Document ToC and add to the Architecture Documentation Epic as predecessor to subsequent stories to create content.",Improvement,Medium,Complete,"2017-06-05 15:28:51","2017-06-05 15:28:51",2
"Hyperledger Sawtooth","Cache Invalid Transactions for Client Communication","Cache invalid transactions to be reported back to the transaction submitter when requesting batch status.",Improvement,Medium,Complete,"2017-06-05 15:13:38","2017-06-05 15:13:38",3
"Hyperledger Sawtooth","Update Python SDK to pass error information in responses","Update the Python SDK to take the current exception messages and set the values on the TpProcessResponse message. This depends on STL-369's completion.",Improvement,Medium,Complete,"2017-06-05 15:11:00","2017-06-05 15:11:00",2
"Hyperledger Sawtooth","Update TpProcessResponse to include Error message","Add fields to the TpProcessResponse to include    * {{string message}}  * {{bytes data}}    where message is the string message of the exception, and data is extended exception information.  Both fields are optional.",Improvement,Medium,Complete,"2017-06-05 15:07:44","2017-06-05 15:07:44",1
"Hyperledger Sawtooth","Review App Dev Guide TOC","Review the TOC for the App Dev Guide with the team and integrate any changes into the epic.",Improvement,Medium,Complete,"2017-06-05 15:06:32","2017-06-05 15:06:32",2
"Hyperledger Sawtooth","Send Errors Back via REST API","Currently, if a transaction fails, the REST API reports that the transaction is PENDING. This is misleading to the end-user.  This should return a response with more information:  ",Improvement,Medium,Complete,"2017-06-05 15:05:31","2017-06-05 15:05:31",2
"Hyperledger Sawtooth","Enter App Dev Guide stories into JIRA based on TOC","Based on the TOC described in STL-329, open up JIRA stories based on section.  Work with the team to figure out the right granularity of the JIRA stories.",Improvement,Medium,Complete,"2017-06-05 15:03:51","2017-06-05 15:03:51",2
"Hyperledger Sawtooth","Update default xo-tp-python log file name","Update the log file name to conform to the description in STL-355.  ",Improvement,Medium,Backlog,"2017-06-05 06:23:42","2017-06-05 06:23:42",1
"Hyperledger Sawtooth","Embed log file configuration within component's config file","Currently we have separate configuration files for logging.  We could instead embed the logging information inside the existing configuration files.        Need to determine the best approach for TPs supporting multiple languages, since the above is python specific.",Improvement,High,Backlog,"2017-06-05 06:16:07","2017-06-05 06:16:07",1
"Hyperledger Sawtooth","Update default sawtooth-validator log file name","Update the log file name to conform to the description in STL-355.",Improvement,Medium,Backlog,"2017-06-05 06:14:18","2017-06-05 06:14:18",1
"Hyperledger Sawtooth","Create docker Container for Building PoET SGX Enclave","A docker container needs to be created for building the PoET SGX enclave.  This includes automatic installation of all necessary required components (i.e., PoET SGX SDK, etc.)","New Feature",Medium,Complete,"2017-06-05 06:04:49","2017-06-05 06:04:49",3
"Hyperledger Sawtooth","Update All PoET SGX Code License Headers","All current PoET SGX enclave code has the standard Intel license text header.  The header needs to be updated to be open source friendly version of Intel license header.","New Feature",Medium,Complete,"2017-06-05 05:58:03","2017-06-05 05:58:03",1
"Hyperledger Sawtooth","Supply All Code/Licenses to Tom for Verification","In order to get approval for releasing the PoET SGX code for open source, all licenses for libraries and tools used need to be submitted to IP/license verifiction system.","New Feature",Medium,Complete,"2017-06-05 05:56:41","2017-06-05 05:56:41",1
"Hyperledger Sawtooth","Update PoET SGX Build to Use Existing Debian Packages","The PoET SGX enclave code requires the json-c and cryptopp libraries as dependencies.  Currently the code is manually built and libraries and headers are copied to a defined directory.  There exist pre-built Debian packages for crypto++ and json-c.  Migrate the code and build for PoET SGX to use these libraries.","New Feature",Medium,Complete,"2017-06-05 05:53:27","2017-06-05 05:53:27",2
"Hyperledger Sawtooth","Add PoET SGX Enclave Code to sawtooth-core Repository","The PoET SGX enclave code currently lives in a separate repository.  It should be moved to the sawtooth-core repository under `consensus/poet` according to the repository layout specified in Google doc.","New Feature",Medium,Complete,"2017-06-05 05:51:15","2017-06-05 05:51:15",2
"Hyperledger Sawtooth","Update all TPs in sawtooth-core to take --connect,-C command line argument",,Improvement,Medium,Complete,"2017-06-05 05:38:59","2017-06-05 05:38:59",2
"Hyperledger Sawtooth","Add config/settings TP configuration file","Add support for a settings TP toml config file to the settings transaction processors.  At a minimum, this file must allow specifying the connect setting.    An example toml file should be installed.",Improvement,Medium,Complete,"2017-06-05 05:37:53","2017-06-05 05:37:53",1
"Hyperledger Sawtooth","Add poet.toml configuration file","Add support for poet.toml config file to all poet-related transaction processors.  At a minimum, this file must allow specifying the connect setting.    An example file poet.toml.example, should be installed.    Note that this configuration file will be used for non-TP settings as well and contents of the file should be coordinated to make sense.",Improvement,Medium,Complete,"2017-06-05 05:37:11","2017-06-05 05:37:11",1
"Hyperledger Sawtooth","Add supplychain.toml configuration file","Add support for supplychain.toml config file to the supply chain transaction processor.  At a minimum, this file must allow specifying the connect setting.    An example file supplychain.toml.example, should be installed.    This is in the [sawtooth supply chain repo|https://github.com/hyperledger/sawtooth-supply-chain]",Improvement,Lowest,Backlog,"2017-06-05 05:37:00","2017-06-05 05:37:00",0
"Hyperledger Sawtooth","Add xo.toml configuration file","Add support for xo.toml config file to all xo transaction processors.  At a minimum, this file must allow specifying the connect setting.    An example file xo.toml.example, should be installed.",Improvement,Medium,Complete,"2017-06-05 05:36:21","2017-06-05 05:36:21",1
"Hyperledger Sawtooth","Add intkey.toml configuration file","Add support for intkey.toml config file to all intkey transaction processors.  At a minimum, this file must allow specifying the connect setting.    An example file intkey.toml.example, should be installed.",Improvement,Medium,Complete,"2017-06-05 05:36:16","2017-06-05 05:36:16",1
"Hyperledger Sawtooth","Refactor XO Python for improved documentation readability","The current structure of XO python is very difficult to consume, from a learning perspective.  Refactor the transaction handler to  improve readability for a new sawtooth app developer.",Improvement,Medium,Complete,"2017-06-02 22:40:33","2017-06-02 22:40:33",2
"Hyperledger Sawtooth","Merge burrow evm branch into master (or determine other plan)",,Improvement,Medium,Complete,"2017-06-02 16:47:41","2017-06-02 16:47:41",2
"Hyperledger Sawtooth","Research all the Ethereum/Burrow layers and decide where to ultimately position Sawtooth","* Research how Solidity contracts are actually used by developers   * Research and identify all the layers between front-end developers, Solidity developers, Ethereum and Burrow, and the EVM   * Decide where it is best to position the Sawtooth Burrow-EVM integration",Task,Medium,Complete,"2017-06-02 03:58:29","2017-06-02 03:58:29",3
"Hyperledger Sawtooth","Research how to provide a Burrow EVM Web API","The current form of the integration is not fully compatible with existing Solidity code and Javascript libraries. This task is to research how to provide a WEB API similar to that provided by the Burrow API to allow integration of existing javascript libraries.    The output of this task should be design and/or implementation tasks to provide this API.",Task,Medium,Backlog,"2017-06-02 03:55:18","2017-06-02 03:55:18",1
"Hyperledger Sawtooth","Handle Ethereum nonces correctly","Currently they are ignored except when creating contract accounts. Below is a partial list of the additional work that needs to be done:   * Whenever a contract is called, the nonce of the account associated with the contract must be incremented.   * If a transaction submitted contains a nonce that does not match the (sender’s?) account, the transaction is invalid.   * Burrow stores nonces as an int64 but since the nonce is a monotonically increasing value starting at 0, it probably makes more sense for this to be a uint64. Currently a type cast is performed when translating between the transaction payload and the EVM call.",Improvement,Medium,Complete,"2017-06-02 03:50:40","2017-06-02 03:50:40",2
"Hyperledger Sawtooth","Java code blocks for TP tutorial","Write Java code snippets for the App Dev guide's Java tutorial on writing a transaction processor, to add to the current JavaScript and Python tutorials (e.g. [http://intelledger.github.io/_autogen/sdk_TP_tutorial_python.html] )    The language-specific tutorials on writing a transaction processor use a template that inserts specially-written code blocks that demonstrate the concepts in the tutorial. Thus, it is not possible to simply cut and paste code from the SDK's into the tutorials.    Note: See the current JavaScript and Python tutorials to get an idea of the desired product.      ","New Feature",High,Backlog,"2017-06-01 16:57:00","2017-06-01 16:57:00",1
"Hyperledger Sawtooth","Rename Command line arguments for Validator and RestApi",,Improvement,Medium,Complete,"2017-06-01 15:50:11","2017-06-01 15:50:11",3
"Hyperledger Sawtooth","App Dev Guide: section Using Sawtooth with Docker","Complete Using Sawtooth with Docker section with roughly the following TOC:    *Using Sawtooth with Docker*    ",Improvement,Medium,Complete,"2017-06-01 04:19:24","2017-06-01 04:19:24",2
"Hyperledger Sawtooth","App Dev Guide: Introductory text for Installing and Running Sawtooth section","The Installing and Running Sawtooth section needs introductory text prior to the sections specific to docker and ubuntu.  This introductory text should describe what the section covers and the choices available to the reader.",Improvement,Medium,Complete,"2017-06-01 04:16:37","2017-06-01 04:16:37",1
"Hyperledger Sawtooth","Remove stale sawtooth ansible roles",,Improvement,Medium,Backlog,"2017-06-01 00:37:13","2017-06-01 00:37:13",1
"Hyperledger Sawtooth","Fix --enclave_module command-line argument in PoET CLI","PoET CLI commands/sub-commands should not have underscores.  Specifically `–poet_enclave` should be `--poet-enclave`.  Fix PoET CLI as well as all scripts and documentation.","New Feature",Medium,Complete,"2017-05-30 21:39:56","2017-05-30 21:39:56",1
"Hyperledger Sawtooth","Update Namespaces and Address Config example","The config transaction family setting address scheme needs to be updated to match the more complex method of converting a key to an address.    Suggest using the intkey family scheme as the simple example.    See the config transaction family spec for details on the scheme",Bug,Medium,Complete,"2017-05-25 16:23:59","2017-05-25 16:23:59",1
"Hyperledger Sawtooth","Refactor the Application to allow it to be tracked","Encapsulate the Application to be an object in the Record, that is either not set or the current object application.  Possible distinct object in it's own namespace, that is referenced by both the Agent(applicant) and the Record.  Extend the Record to track the history of applications and the results of those applications.           ",Task,Medium,Complete,"2017-05-24 20:49:47","2017-05-24 20:49:47",1
"Hyperledger Sawtooth","Update Supply chain records to use native addressing","Supplychain records should use serial numbers or some other natural addressing scheme to look up items. In the case of raw materials this should be a lot number or maybe even the sensor tag or nfc tag attached to the item upon harvesting. ",Task,Medium,Complete,"2017-05-24 20:45:58","2017-05-24 20:45:58",1
"Hyperledger Sawtooth","Add support for Telemetry data on the Record Fields","During Record Creation, a sensor id  and initial Telemetry records should be allowed to be set.       A transaction needs to be added to allow the telementry data to be submitted by the sensor and by other means to the Record. These transactions need to be signed by the current custodian.     A historical list of telemetry data with the timestamps and custodians needs to be kept when the new telemetry data is used.     The Record object needs to be extended to to include a Telemetry member, this will consist of a time ordered list of telemetry objects. A telemetry object consists of timestamp, custodian, sensor_id, telemetry_type [gps, accelerometer, temperture], telemetry data encoded protobuff (type depending on telemetry_type)    The telemetry_data formats are:    location:       \{   Lat: 41.5508608333,   Long: -69.5548148333,   }    Temperature   \{   Value: 8.4   }    Motion  \{  Value: 150  }  Tilt:    \{   TiltX: -17,    TiltY: -12   }  Shock:[   \{   Acceleration: -85,    Duration: 0   }",Task,Medium,Backlog,"2017-05-24 20:43:04","2017-05-24 20:43:04",3
"Hyperledger Sawtooth","Add support for domain specific data to the Supply chain records and agents","The supply chain TP should be able to accept an arbitrary set of fields for both agents and records. Both the Agent and Record proto definitions need to be expanded to include a domain_data(better name?_ array that will consist of a list of fields that are (name, value) tuples. The name and values will both be strings and the value is expected to be able to support stored encoded data.          These should be able to be set on initial record creation. There should be a mechanism in place(new txn type) for these fields to be updated by the current owner of the  Record or the Agent themselves for Agent records.          ",Task,Medium,Backlog,"2017-05-24 20:39:21","2017-05-24 20:39:21",2
"Hyperledger Sawtooth","Add Previous Block Id to State Delta Event Message","In order to improve fork resolution and lost events, include the {{previous_block_id}} in the StateDeltaEvent protobuf message.  This will allow subscribers/clients to request the previous block's state deltas if the haven't missed or dropped the original event. ",Improvement,Medium,Complete,"2017-05-22 20:15:13","2017-05-22 20:15:13",1
"Hyperledger Sawtooth","Enter Documentation Epics & Stories into JIRA","We need to fill out the JIRA epics and stories we have planned for documentation.  At a minimum this include architecture and app dev guide.",Improvement,Medium,Complete,"2017-05-22 19:52:02","2017-05-22 19:52:02",3
"Hyperledger Sawtooth","Document JIRA + GitHub Integration in Community Section",,Improvement,Medium,Complete,"2017-05-22 19:47:43","2017-05-22 19:47:43",2
"Hyperledger Sawtooth","Document Apache proxy REST API setup","In the System Administrator's Guide, document the process of putting the REST API behind an Apache proxy for authorization.","New Feature",Medium,Complete,"2017-05-22 19:27:56","2017-05-22 19:27:56",2
"Hyperledger Sawtooth","Resolve Fossology documentation licensing","HL Fossology report flagged unlicensed documentation files.  Have pointed out to HL that other major Apache-licensed projects do not license individual document files. Awaiting response.  Once resolved, issue JIRA item(s) as needed.",Task,Medium,Complete,"2017-05-22 18:09:57","2017-05-22 18:09:57",1
"Hyperledger Sawtooth","Document EVM CLI usage",,"New Feature",Medium,Complete,"2017-05-22 18:08:28","2017-05-22 18:08:28",2
"Hyperledger Sawtooth","Extend integration test to include HTTPS proxy","Extend the integration test built in STL-301 to include verifying support for proxies running HTTPS.",Improvement,Medium,Complete,"2017-05-22 17:29:51","2017-05-22 17:29:51",2
"Hyperledger Sawtooth","Update XO CLI to support Basic Auth","Add support to the XO CLI for a {{--user}} and {{--password}} optional arguments for specifying basic auth login information.",Improvement,Medium,Complete,"2017-05-22 17:14:25","2017-05-22 17:14:25",2
"Hyperledger Sawtooth","Update Intkey CLI to support Basic Auth","Add support to the Intkey CLI for a {{--user}} and {{--password}} optional arguments for specifying basic auth login information.",Improvement,Medium,Complete,"2017-05-22 17:11:47","2017-05-22 17:11:47",2
"Hyperledger Sawtooth","Update sawtooth CLI to support HTTP Basic Auth","Add support to the sawtooth CLI for a {{--user}} and {{--password}} optional arguments for specifying basic auth login information.    This assumes that HTTP basic auth has been configured on a proxy.",Improvement,Medium,Complete,"2017-05-22 17:08:33","2017-05-22 17:08:33",2
"Hyperledger Sawtooth","Implement integration test for REST API behind Apache Proxy","Implement an integration test for the REST API, such that an instance of the REST API sits behind an Apache server, which acts as a proxy.      Use this test to verify:  * the a the rest api properly responds and produces links that are relative to the proxy, not localhost  * the rest api functions behind a proxy with HTTP basic auth",Improvement,Medium,Complete,"2017-05-22 16:52:04","2017-05-22 16:52:04",5
"Hyperledger Sawtooth","Add rest API configuration file",,Improvement,Medium,Complete,"2017-05-22 16:13:05","2017-05-22 16:13:05",1
"Hyperledger Sawtooth","Add validator configuration file",,"New Feature",Medium,Complete,"2017-05-22 16:11:29","2017-05-22 16:11:29",2
"Hyperledger Sawtooth","Design a mechanism for permissioned access to a network based on validator keys and on-chain config","Validators should be able to determine whether messages delivered to them should be handled or dropped based on a set of identities stored in the config namespace. Permissioning rules could determine the roles an identity is able to play on the network (e.g. connect, peer, publish blocks, forward blocks/batches). Message handlers should examine incoming messages against the permissioning rules and the current configuration and either permit, drop, or respond with an error to the sending node. In certain cases (e.g. attempting to peer without permission), it may make sense to forcibly close the connection.",Improvement,Medium,Complete,"2017-05-22 15:58:21","2017-05-22 15:58:21",5
"Hyperledger Sawtooth","Test sawtooth behind NAT",,Improvement,Medium,Complete,"2017-05-22 15:57:35","2017-05-22 15:57:35",1
"Hyperledger Sawtooth","Create Supplychain REST-API spec",,Improvement,Medium,Complete,"2017-05-22 15:56:31","2017-05-22 15:56:31",1
"Hyperledger Sawtooth","Test upgrading sawtooth","Test behavior of apt-get upgrade. Include adding components to the meta-package.",Improvement,Medium,Complete,"2017-05-22 15:56:09","2017-05-22 15:56:09",1
"Hyperledger Sawtooth","Finalize name of CLIs, log files, config files","Prior to 1.0, we need to standardize our CLIs, log files, and config file names.    This JIRA is complete when we have a plan for each and additional JIRA tasks have been opened to implement them.","New Feature",Highest,Complete,"2017-05-22 15:46:51","2017-05-22 15:46:51",3
"Hyperledger Sawtooth","Move Curve ZMQ keys out of core.py to local config files","The hardcoded 'public network instance' Curve ZMQ keys should be moved out of the code into a local config file (depends on the completion of local config stories). Moving the keys to local config would allow a basic configuration of a secured network based on sideband sharing of a single network keypair to all participating nodes.    Make sure that the choice of configuration plays nicely with the planned design for a stronger 'per-node' key scheme.",Improvement,High,Complete,"2017-05-22 15:41:55","2017-05-22 15:41:55",1
"Hyperledger Sawtooth","Create plan for moving sawtooth documentation to new URL","Currently, documentation is at http://intelledger.github.io/.    We need a better URL with sawtooth in the name, ideally http://sawtooth.hyperledger.org/docs/ or similar.",Improvement,Medium,Complete,"2017-05-22 15:39:21","2017-05-22 15:39:21",2
"Hyperledger Sawtooth","Create Supplychain python client and CLI","Create a command line cli to allow for submission SC transactions and query of SC State. This should also include a document that provides detailed instructions on the usages and walks thru an example use case. ",Task,Medium,Complete,"2017-05-22 15:30:23","2017-05-22 15:30:23",3
"Hyperledger Sawtooth","xo show returns 404 when game doesn't exist","xo show gives an unfriendly message when a game does not exist:    % ./bin/xo show game000  Error: Error 404: Not Found    Instead, this should give Error: no such game: game000.",Bug,Lowest,Complete,"2017-05-22 04:04:43","2017-05-22 04:04:43",1
"Hyperledger Sawtooth","Define Epic for: Exploring the feasibilities of side chain and its concepts and working out the implementation in Sawtooth Lake.","I am figuring out the ways how side chains and off chain concepts can be implemented in Sawtooth Lake.   Many other blockchain communities have these features. I think implementing this would create a great edge for Sawtooth Lake over the other communities.    I have been going through various articles and papers about these concepts. I have now got a high level understanding on these topics.    I have listed below some of the most interesting links I used for understanding.    1. [https://blockstream.com/sidechains.pdf]    2. [http://lightning.network/docs/]    3. [https://lightning.network/lightning-network-paper.pdf]    4. [https://bitcoinmagazine.com/articles/understanding-the-lightning-network-part-building-a-bidirectional-payment-channel-1464710791/]    5. [https://bitcoinmagazine.com/articles/understanding-the-lightning-network-part-creating-the-network-1465326903/]    6. [https://bitcoinmagazine.com/articles/understanding-the-lightning-network-part-completing-the-puzzle-and-closing-the-channel-1466178980/]    I wish to make further progresses on the same.     ","New Feature",Medium,"In Progress","2017-05-21 08:36:44","2017-05-21 08:36:44",2
"Hyperledger Sawtooth","Publish JS SDK to NPM registry","In order to simplify development for app developers, publish the Javascript SDK to the NPM registry.  This will allow user to simple run {{npm install -S sawtooth-sdk}} ","New Feature",Highest,Complete,"2017-05-20 22:02:16","2017-05-20 22:02:16",3
"Hyperledger Sawtooth","Update pylint support to 1.7.x and un-pin current pylint=1.6.5 in docker images","The release of pylint 1.7.x broke builds.  As a workaround, we pinned the docker pip installs at 1.6.5 so builds continue to work.    Linting in the vagrant environment is currently broken as it installs 1.7.x which the code does not pass.    At the completion of this task:    - sawtooth-core will support the latest pylint 1.7.x  - pylint will no longer be pinned to a specific version withing docker or vagrant  ","New Feature",High,Complete,"2017-05-20 21:50:27","2017-05-20 21:50:27",1
"Hyperledger Sawtooth","Implement basic intkey show, list, inc, dec, set CLI commands","The intkey command currently lacks the ability to generate specific inc/dec/set transactions as well as the ability to view the current intkey namespace.    Propose the following be added to the intkey CLI:    intkey inc NAME  intkey dec NAME  intkey set NAME VALUE  intkey list  intkey show NAME    ","New Feature",Low,Complete,"2017-05-20 21:37:10","2017-05-20 21:37:10",3
"Hyperledger Sawtooth","Implement signing key-based client batch submit permissioning (on-chain config)","Restrict batch submission to a limited set of signing keys, maintained as on-chain configuration.    A list of public keys will be stored in the config namespace and only batches signed with those public keys will be accepted.  This would allow distributed batch submission permissioning, such that modification to on-chain configuration would modify behavior of all nodes in the network.    This should work in combination with STL-274 and be implemented using the interconnect handler mechanism.","New Feature",High,Complete,"2017-05-20 16:12:17","2017-05-20 16:12:17",3
"Hyperledger Sawtooth","Update the Supplychain TP to use ProtoBuf for global state representation","Currently the Supplychain TP uses ProtoBuf as global state storage. Protobuf is a better choice due to it's conciseness and repeat-ability. Updated as per comment below. ",Task,Medium,Complete,"2017-05-20 00:08:31","2017-05-20 00:08:31",1
"Hyperledger Sawtooth","Update the Supplychain TP to handle Hash collisions. ","Currently the the supplychain TP assumes all hashes are unique, and will overwrite items in the case of a collision. It needs to be updated to follow the standard pattern of using a ordered dictionary or list at each address to allow for collisions. ",Task,Medium,Complete,"2017-05-20 00:06:22","2017-05-20 00:06:22",1
"Hyperledger Sawtooth","Supplychain Transaction Processor Spec","Write a transaction processor spec",Task,Medium,Complete,"2017-05-20 00:04:22","2017-05-20 00:04:22",2
"Hyperledger Sawtooth","Add Supplychain rest interface","Add a domain specific rest api. Implement in accordance with the Spec writtent in STL-295    Associated python client issue is STL-491.",Task,Medium,Complete,"2017-05-20 00:03:24","2017-05-20 00:03:24",5
"Hyperledger Sawtooth","Finalize design of api-key based authorization","* What format will the key be in?   * What endpoints and query parameters will be added?   * What configuration options will be available?","New Feature",Medium,Complete,"2017-05-19 19:04:28","2017-05-19 19:04:28",2
"Hyperledger Sawtooth","Package OMI domain-specific Javascript","Package javascript library for in-browser use as appropriate to execute on the plan for deployment.",Task,Medium,Complete,"2017-05-19 18:07:48","2017-05-19 18:07:48",2
"Hyperledger Sawtooth","Package OMI transaction processor","Package transaction processor in deb or docker as appropriate to execute on plan for deployment.    This includes appropriate documentation.",Task,Medium,Complete,"2017-05-19 18:06:18","2017-05-19 18:06:18",5
"Hyperledger Sawtooth","Extend the OMI TP to include a sample payment TXN"," Build sample payment record transaction for a number of plays of a song from a streaming service. The transaction would contain the song identifier and the number of plays and the total payment and would be signed by the streaming service identity (i.e. “youtube” or “spotify”). The transaction processor would calculate the splits based on the fractional artist participation based on the song “tree” and would create records in state indicating payments to artists as a result of the plays",Task,Medium,Complete,"2017-05-19 17:58:17","2017-05-19 17:58:17",0
"Hyperledger Sawtooth","Plan & document training and training collateral","What do the participants need to know? How do they bring up and interact with a tests system?          Generate any tutorials documentation and guides the OMI Summer Lab participants may need in order to use the OMI TP.           ",Task,Medium,Complete,"2017-05-19 17:57:22","2017-05-19 17:57:22",2
"Hyperledger Sawtooth","OMI Plan for deployment","Create plan and collateral necessary to support the OMI Summer labs. This may include standing up servers to host validators, creating Docker compose files to allow the participants to run validators with the OMI TP (potentially local copies they have modified).       ",Task,Medium,Complete,"2017-05-19 17:55:43","2017-05-19 17:55:43",2
"Hyperledger Sawtooth","OMI Domain Specific Javascript Library","Write a domain specific JS library to enable easy access to the validator data store and submission of Transactions to the validator. This should include a tutorial and sufficient documentation to enable   easy use. This library should run in the broswer environment or under node.js",Task,Medium,Complete,"2017-05-19 17:53:16","2017-05-19 17:53:16",5
"Hyperledger Sawtooth","Implement the OMI transaction Processor","This can be done on top of the supplychain transaction processor or as it's own TP, which ever path is more expedient.          ",Task,Medium,Complete,"2017-05-19 17:52:36","2017-05-19 17:52:36",5
"Hyperledger Sawtooth","Write OMI TP spec/defintion","    Use Cases      - Cataloging, attributing and distributing live DJ mixes           -- Register Artist/DJ          -- Register Song/Mix/Asset          -- Reference Other Songs/Assets in New Asset      - Commercializing mixtapes built from original material and back catalogs           -- Register Artist          -- Register Song/Asset          -- Reference Other Songs/Assets in New Asset      - Compensating musicians for visual works using their songs as data           -- Provide Payment information for Songs/Assets (Who/How Much)      - Identifying individuals for their contribution to single tracks in new works           -- Register Individuals          -- Reference Individuals as Contributors In Songs/Assets                    Transaction Actions      - Register Entity/Identity (Artist / DJ / Individuals)           -- Fields               --- Name      - Update by Owner/Registrar      - Register Asset (Song/Mix/Compilation/Visual Work)           -- Fields (Not all are req'd)               -- 'Owner' of Asset (Could be label/PRO/etc.)              -- Title of Work              -- Type (Recording/Composition/Mix/Visual/etc.)              -- ISRC, ISWC, IPI, ISNI              -- Label              -- Songwriter / Composer              -- Publisher              -- Reference Entities as Contributors In Songs/Assets              -- Reference Other Assets in New Asset                   --- Entirely new works have no references                  --- Derivatives have a single reference                  --- Mixes/Compilations have multiple references              -- Provide Payment Information for Songs/Assets                   --- Contact Information                  --- OR                  -- Addresses and Royalty Split/Amounts              -- splits to contributors and publishers.      -- Update Fields by Owner/Registrar",Task,Medium,Complete,"2017-05-19 17:50:58","2017-05-19 17:50:58",2
"Hyperledger Sawtooth","Complete Supplychain Transaction Processor Permission enforcement.","Review the permission checks and update the transaction handler to enforce proper permission enforcement in the Transaction Handler. The code below has TBD comments in many of the places to update.                    class RecordHandler(object):   @classmethod   def apply(cls, transaction, state):   payload = json.loads(transaction.payload.decode())    LOGGER.debug(apply payload: %s, repr(payload))    tnx_action = payload.get('Action', None)   txnrecord_id = payload.get('record_id', None)    header = TransactionHeader()   header.ParseFromString(transaction.header)   tnx_originator = addressing.get_agent_index(   addressing.get_agent_id(header.signer_pubkey))   # Retrieve the stored record data if an ID is provided.   record_id = txnrecord_id   record_store_key = record_id    record_store = state_get_single(state, record_store_key)   # TBD: the originator should be a registered agent   # TBD: if it's not Create then the record should exist     # Check Action   if tnx_action == 'Create':   if txnrecord_id is None:   raise InvalidTransaction(   'Record id expected for CreateRecord')    record_store = \{}   cls.create_record(tnx_originator, record_id, payload,   state, record_store)   # TBD: If there are parents they should not be final and they should   # have accepted applications from the txn originator.   # TBD: If it is an ownership transfer then then the record should   # not have custodians.   # TBD: What if the sensor is already registered? Should we require   # an unregister operation?    elif tnx_action == CreateApplication:   if txnrecord_id is None:   raise InvalidTransaction(   'Record id expected for create_application')    cls.create_application(tnx_originator, record_id, payload,   state, record_store)   # TBD: Check for existing application - for now only one at a   # time.   # TBD: applicationtype is owner or custodian, terms should be   # defined   # TBD: If app for ownership, then there should be no custodians    elif tnx_action == AcceptApplication:   if txnrecord_id is None:   raise InvalidTransaction(   'Record id expected for accept_application')    cls.accept_application(tnx_originator, record_id, payload,   state, record_store)   # TBD: must be the record holder   # TBD: there must be an open application    elif tnx_action == RejectApplication:   if txnrecord_id is None:   raise InvalidTransaction(   'Record id expected for reject_application')    cls.reject_application(tnx_originator, record_id, payload,   state, record_store)   # TBD: must be the record holder   # TBD: there must be an open application    elif tnx_action == CancelApplication:   if txnrecord_id is None:   raise InvalidTransaction(   'Record id expected for cancel_application')    cls.cancel_application(tnx_originator, record_id, payload,   state, record_store)   # TBD: must be the application creator   # TBD: there must be an open application    elif tnx_action == Finalize:   if txnrecord_id is None:   raise InvalidTransaction(   'Record id expected for Finalize')    cls.finalize_record(tnx_originator, record_id, payload,   state, record_store)   # TBD: must be the record owner. The only way a custodian can   # finalize a record is by making a child.   # TBD: record must not be final already   else:   raise InvalidTransaction('Action \{} is not valid'.   format(tnx_action))     # Store the record data back   state_put_single(state, record_store_key, record_store)    @classmethod   def create_record(cls, originator, record_id, payload, state, my_store):   sensor_id = payload.get('Sensor', None)   sensor_idx = None   if sensor_id != None:   sensor_idx = addressing.get_sensor_index(sensor_id)    record_info = \{}   # Owner set below   record_info['CurrentHolder'] = originator   # Custodians set below   record_info['Parents'] = payload.get('Parents', None)   record_info['Timestamp'] = payload.get('Timestamp')   record_info['Sensor'] = sensor_idx   record_info['Final'] = False   record_info['ApplicationFrom'] = None   record_info['ApplicationType'] = None   record_info['ApplicationTerms'] = None   record_info['ApplicationStatus'] = None   record_info['EncryptedConsumerAcccessible'] = None   record_info['EncryptedOwnerAccessible'] = None   my_store['RecordInfo'] = record_info    my_store['StoredTelemetry'] = payload.get('Telemetry', \{})   my_store['DomainAttributes'] = payload.get('DomainAttributes', \{})   # Determine if this record has parents   has_parents = record_info['Parents'] != None and \   len(record_info['Parents']) > 0     # If there are parents update Owner and Custodian depending on the   # ApplicationType   if has_parents:   # Use the first parent   # TBD: how to handle multiple parents? If there are no custodians   # then it seems straight forward to transfer to the new owner.   # Maybe if there are custodians then all but the first need to be   # held by the owner and we handle it based on the first parent.   # One thing that could be useful here is to be able to combine   # multiple parents and keep the owner/custodians the same - right   # now we can only add a custodian or pop the stack.   parent_id = record_info['Parents'][0]   parent_store = state_get_single(state, parent_id)   if parent_store['RecordInfo']['ApplicationType'] == Owner:   # Transfer ownership - in this case there should be   # no custodians.   assert len(parent_store['RecordInfo']['Custodians']) == 0   record_info['Owner'] = originator   record_info['Custodians'] = []   else:   # Transfer custodianship   record_info['Owner'] = \   parent_store['RecordInfo']['Owner']   record_info['Custodians'] = \   list(parent_store['RecordInfo']['Custodians'])     # Check the next to last element of the Custodians array. If it   # is the new holder, then this is a 'pop' operation. It's also   # a pop if here is one custodian and the applicant is the   # owner.   is_pop = False   if len(record_info['Custodians']) > 1 and \   record_info['Custodians'][-2] == originator:   is_pop = True   elif len(record_info['Custodians']) == 1 and \   record_info['Owner'] == originator:   is_pop = True    if is_pop:   record_info['Custodians'].pop()   else:   record_info['Custodians'].append(originator)   else:   # No parents, just create a new record   record_info['Owner'] = originator   record_info['Custodians'] = []     # If there are parents mark them as final.   if has_parents:   for parent in record_info['Parents']:   parent_store = state_get_single(state, parent)   parent_store['RecordInfo']['Final'] = True   state_put_single(state, parent, parent_store)     # Remove the record from the former owner - even if this   # is a custodian transfer we need to store the new   # record ID with the owner.   AgentHandler.remove_record_owner(state,   parent_store['RecordInfo'][Owner],   parent)     # Remove the previous holder   AgentHandler.remove_record_holder(state,   parent_store['RecordInfo'][CurrentHolder],   parent)     # Remove the accepted application from the new owner   AgentHandler.remove_accepted_application(state,   parent_store['RecordInfo']['ApplicationFrom'],   parent)     # Record the owner of the new record in the agent   AgentHandler.add_record_owner(state, record_info[Owner], record_id,   record_info[Owner] == record_info[CurrentHolder])   # Record the new record holder in the agent   AgentHandler.add_record_holder(state, record_info[CurrentHolder],   record_id)     # Register the sensor   if sensor_id != None:   if state_get_single(state, sensor_idx) != None:   sensor_store = state_get_single(state, sensor_idx)   else:   sensor_store = \{}   sensor_store[Record] = record_id   sensor_store[Name] = sensor_id   state_put_single(state, sensor_idx, sensor_store)    @classmethod   def create_application(cls, originator, record_id,   payload, state, my_store):   record_info = my_store['RecordInfo']   # Agent ID who initiated the application   record_info['ApplicationFrom'] = originator   # custodian or owner   record_info['ApplicationType'] = payload['ApplicationType']   # Should be encrypted?   record_info['ApplicationTerms'] = payload['ApplicationTerms']   # To indicate acceptance (or not) of the application.   record_info['ApplicationStatus'] = Open     # Record the new application in the current holder   AgentHandler.add_open_application(state,   record_info['ApplicationFrom'],   record_info['CurrentHolder'],   record_id)    @classmethod   def accept_application(cls, originator, record_id, payload, state,   my_store):   # Mark the application as accepted. After this the new   # owner/custodian is able to make a new record with this   # record as the parent.   record_info = my_store['RecordInfo']   record_info['ApplicationStatus'] = Accepted     # Record the accepted application in the new holder   AgentHandler.remove_open_application(state,   record_info['ApplicationFrom'],   record_info['CurrentHolder'],   record_id)   AgentHandler.add_accepted_application(state,   record_info['ApplicationFrom'],   record_id,   record_info['Sensor'])    @classmethod   def reject_application(cls, originator, record_id, payload, state,   my_store):   # Mark the application as rejected.   record_info = my_store['RecordInfo']   record_info['ApplicationStatus'] = Rejected     # Record the rejected application in the agent   AgentHandler.remove_open_application(state,   record_info['ApplicationFrom'],   record_info['CurrentHolder'],   record_id)    @classmethod   def cancel_application(cls, originator, record_id, payload, state,   my_store):   # Mark the application as cancelled.   record_info = my_store['RecordInfo']   record_info['ApplicationStatus'] = Cancelled     # Record the cancelled application in the agent   AgentHandler.remove_open_application(state,   record_info['ApplicationFrom'],   record_info['CurrentHolder'],   record_id)    @classmethod   def finalize_record(cls, originator, record_id, payload, state, my_store):   record_info = my_store['RecordInfo']   # TBD: check that there are no custodians before finalizing   record_info['Final'] = True   # Remove the record from the agent   # TBD: handle any pending applications   assert record_info['Owner'] == originator   assert record_info['CurrentHolder'] == originator   AgentHandler.remove_record_owner(state, originator, record_id)   AgentHandler.remove_record_holder(state, originator, record_id)",Task,Medium,Complete,"2017-05-18 14:49:17","2017-05-18 14:49:17",1
"Hyperledger Sawtooth","Rename the config transaction family to settings transaction family","The term 'config' is overloaded, in that we have used it for two purposes: 1) off-chain file-based configuration; and 2) on-chain configuration.    To assist with this, we could rename the config transaction family to 'settings'.  In usual conversation, 'config' would refer to file-based configuration and 'settings' to on-chain settings.    This should be discussed and approved by the maintainers prior to implementation.","New Feature",Medium,Complete,"2017-05-18 04:15:35","2017-05-18 04:15:35",1
"Hyperledger Sawtooth","It is the BlockPublisher that sends the block out through Gossip, not Consensus.BlcokPublisher","The journal diagram in [http://intelledger.github.io/architecture/journal.html] has a bug, that diagram shows an arrow from Consensus.BlcokPublisher to Gossip, but it is  is the BlockPublisher that sends the block out through Gossip.",Bug,Medium,Complete,"2017-05-18 02:46:46","2017-05-18 02:46:46",1
"Hyperledger Sawtooth","PoET Block Publisher - finalize_block() success case ","Check that PoET block finalze_block() only finalizes a block to be claimed when the candidate block is good and should be generated.     Check if the wait_certificate was correctly created.",Task,Medium,Complete,"2017-05-18 02:38:28","2017-05-18 02:38:28",1
"Hyperledger Sawtooth","Make test container names informative","Here's a line of output from a failed test:  integration_test_1  | FAIL  Can you tell what test failed? No, but it would be nice to be to be able to. Figure out how to get the container names to match the test. Doing this might even lead to the removal of the annoying `-s` flags from `run_docker_test`, making local testing easier and greatly cleaning up `run_tests`.",Improvement,Medium,Complete,"2017-05-18 01:32:23","2017-05-18 01:32:23",1
"Hyperledger Sawtooth","Move Config Family to `families` directory",,Improvement,Medium,Complete,"2017-05-17 22:09:27","2017-05-17 22:09:27",1
"Hyperledger Sawtooth","Rename Config Transaction Family","Rename {{sawtooth-config}} family to something more representative of the fact that it is a reference implementation.",Improvement,Medium,Complete,"2017-05-17 22:08:45","2017-05-17 22:08:45",1
"Hyperledger Sawtooth","Create Go Client SDK",,Improvement,Medium,Complete,"2017-05-17 19:40:01","2017-05-17 19:40:01",3
"Hyperledger Sawtooth","App Dev Guide: How to import Go SDK from github",,Improvement,Medium,Backlog,"2017-05-17 19:35:52","2017-05-17 19:35:52",2
"Hyperledger Sawtooth","Review HL Fossology report",,Task,Medium,Complete,"2017-05-17 16:45:24","2017-05-17 16:45:24",1
"Hyperledger Sawtooth","App Dev Guide's docker install section needs more detail","The current docker installation section provides a bare minimum of links and help.    While we do not want to document docker itself, we should provide more assistance in finding the right information to get docker and docker compose installed such that the rest of our docker-compose instructions will work.","New Feature",Medium,Complete,"2017-05-16 22:31:00","2017-05-16 22:31:00",1
"Hyperledger Sawtooth","Rename compose file sawtooth-demo.yaml to sawtooth-default.yaml","The word 'demo' should be avoided in this context; this is our recommended starting point for app developers  .","New Feature",Medium,Complete,"2017-05-16 22:16:19","2017-05-16 22:16:19",1
"Hyperledger Sawtooth","App Dev Guide needs pointers to pages describing docker proxy configuration","The application developer guide should provide links to resources which help the app developer configure proxies when using docker-compose.    This should cover at least Windows and MacOS proxy configuration, and perhaps Linux.","New Feature",Medium,Complete,"2017-05-16 22:08:55","2017-05-16 22:08:55",2
"Hyperledger Sawtooth","Provide State Delta Export Proxy Over Web Sockets","Extend the Rest API component to provide State Export Deltas over a WebSocket.     Proposed solution here would be to have the REST API component subscribe to all state delta events.      Any client connecting via a websocket would interact in the following way:        # Send last known block id and address prefixes   # Receive State Delta Event    The rest api would manage the filtering, and the catch-up, but the clients should not need to send unregister messages, as this is simply a consequence of the WS closing.","New Feature",Medium,Complete,"2017-05-16 20:00:19","2017-05-16 20:00:19",5
"Hyperledger Sawtooth","Investigate Dispatcher Halting after Signature Verification on Block Response","When a Validator is dealing the a block response handling the genesis block, It seems like the dispatcher never gets a handler status back from the signature verifier and therefore does not continue processing the genesis block and put the validator in a bad state and causes an AssertionError: [http://rest-api-1:8080/blocks] is not available within 10 attempts.",Bug,Medium,Complete,"2017-05-16 16:12:45","2017-05-16 16:12:45",2
"Hyperledger Sawtooth","Test Javascript SDK client modules in browser","Test the Javascript SDK Client module in the browser, using at least one of Browserify or Webpack.     * Ensure that the client functionality works via the REST API.   * Verify that the signing libraries work in browser ",Improvement,High,Complete,"2017-05-16 15:50:19","2017-05-16 15:50:19",2
"Hyperledger Sawtooth","xo command needs --url parameter","In order to point xo at an alternate URL that isn't localhost:8080, it needs a --url argument.","New Feature",Medium,Complete,"2017-05-16 02:00:28","2017-05-16 02:00:28",1
"Hyperledger Sawtooth","sawtooth transaction list shows traceback on empty transaction list","After starting a network with:        and logging into compose_client_1:        And after generating keys (see STL-213)...    Using sawtooth transaction list' prior to submitting any batches results in:        Expected behavior is to show no output.    This also occurs for 'sawototh batch list':    ",Bug,Medium,Complete,"2017-05-16 01:54:25","2017-05-16 01:54:25",1
"Hyperledger Sawtooth","Docker compose_client_1 image should initialize user keys","After starting a network with:        and logging into compose_client_1:        the user is required to run 'sawtooth keygen' prior to using commands like 'xo':        It would be a better experience if keys were pre-generated.    Presumably we would not want these keys to be distributed with the image, but rather generated when doing the docker-compose up.  ","New Feature",Medium,Complete,"2017-05-16 01:36:40","2017-05-16 01:36:40",1
"Hyperledger Sawtooth","Create intkey cli test","There are no tests for intkey workload, create_batch, etc, so it's very easy to forget to update them. Create a simple test to verify that they work (for instance, run workload against a validator for five seconds or so and then verify that the chain has a few blocks in it).","New Feature",Medium,Complete,"2017-05-15 14:14:25","2017-05-15 14:14:25",1
"Hyperledger Sawtooth","Create cxx sdk base docker file and intkey cxx docker file",,Improvement,Medium,Complete,"2017-05-12 19:46:52","2017-05-12 19:46:52",3
"Hyperledger Sawtooth","Remove PoET as a Service","The PoET as a Service code should be removed from the repo.",Improvement,Medium,Complete,"2017-05-12 18:58:14","2017-05-12 18:58:14",1
"Hyperledger Sawtooth","Implement REST API callback parameter","Implement the `callback` parameter as specified in the OpenAPI document.  This is an end-to-end implementation, including the, the REST API, the CLI, unit tests, and the underlying validator code.",Improvement,Medium,Backlog,"2017-05-12 15:25:09","2017-05-12 15:25:09",5
"Hyperledger Sawtooth","Implement REST API fields and omit parameters",,Improvement,Medium,Backlog,"2017-05-12 15:22:38","2017-05-12 15:22:38",2
"Hyperledger Sawtooth","App Dev Guide's Transaction Processor Tutorial lacks xo CLI examples","The tutorial as it currently exists covers the creation of a transaction processor, for which we have a full implementation to serve as an example.    Instead of ending as it does currently, the tutorial should continue by showing some client examples as well, including game play using the xo CLI.    This could potentially change the tutorial from a transaction processor tutorial to a more comprehensive application development tutorial covering transaction processor and client-side transaction submission and state viewing.","New Feature",Medium,Complete,"2017-05-12 06:00:14","2017-05-12 06:00:14",2
"Hyperledger Sawtooth","App Dev Guide's Transaction Processor Tutorial Python is vagrant specific","The Transaction Processor Tutorial Python contains vagrant-specific instructions, which are invalid in this context (vagrant is a core guide topic).  This includes path references to /project, for example.  This needs to be cleaned up so it makes sense in terms of the environment setup provided in the Application Development Guide.","New Feature",High,Complete,"2017-05-12 05:54:44","2017-05-12 05:54:44",2
"Hyperledger Sawtooth","App Dev Guide has duplicate sections for transaction family tutorial","The Application developer guide has both a top-level section called 'Transaction Family Tutorial' as well as the Python SDK/Transaction Processor Tutorial Python.  There should only be one TF tutorial section for python.",Bug,High,Complete,"2017-05-12 05:47:48","2017-05-12 05:47:48",1
"Hyperledger Sawtooth","App Dev Guide flow is confusing when using docker","The Environment Setup section describes how to startup a sawtooth environment easily with Docker.  This is probably the easiest/best option for most application developers.    The Getting Started with Hyperledger Sawtooth section describes things in a way that would be more appropriate for native Ubuntu installs or vagrant.  For example, when using Docker, you do not manually startup the validator or worry about genesis block creation as it is done for you in the docker compose file.    Some of this content should be rewritten and generalized.  Other portions of the content should move into the Ubuntu install section of the Environment Setup guide.  (Similar to how we show docker compose up/down, we could show basic operations when installing via deb packages.)","New Feature",High,Complete,"2017-05-12 05:39:22","2017-05-12 05:39:22",3
"Hyperledger Sawtooth","App Dev Guide should not reference git or require git clone of sawtooth-core repository","Currently, the Application Developer's guide's Environment Setup section for Docker requires the user to clone the git repository.    Instead, the guide should provide a link to download the compose file from the documentation.  The cleanest approach would probably be to copy the yaml file into the app dev guide directory within the Makefile, then link to that file.    This may be a bit tricky for PDF generation.  In that instance, we will want to link to the file on github or in-line the file within the PDF text itself. Sphinx-doc allows for format conditionals.","New Feature",High,Complete,"2017-05-12 04:33:50","2017-05-12 04:33:50",2
"Hyperledger Sawtooth","Update SerialScheduler to handle explicit dependencies","If txn B lists txn A as a dependency and txn A is invalid, txn B needs to be run as if txn A hadn't been run, but with the right state.",Bug,Medium,Complete,"2017-05-11 22:03:55","2017-05-11 22:03:55",2
"Hyperledger Sawtooth","Investigate RestApi/blocks is not available Issues","Investigate cause of the following  AssertionError: http://rest-api-1:8080/blocks is not available within 10 attempts.    [https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/master/220/console]",Bug,Medium,Complete,"2017-05-11 18:42:03","2017-05-11 18:42:03",3
"Hyperledger Sawtooth","Creater Better/More Comprehensive Unit Tests for PoET Simulator","The PoET simulator is really only exercised from a unit test perspective through the classes, SignupInfo, etc., that use it.  Unit tests need to be devised and written to actually exercise the simulator directly.",Improvement,Medium,Backlog,"2017-05-11 18:32:07","2017-05-11 18:32:07",3
"Hyperledger Sawtooth","Fix PoET Block Publisher State Persistence","The PoET block publisher uses one or more class variables to persist state across creation of PoET block publisher objects.  While this works, it is quite ugly when it comes to devising unit tests.  This global state needs to be persisted in a better way.  Of highest importance is keeping track of the current PoET public key, which can probably be persisted in the PoET Key Store, an already existing global state persistence used by the PoET block publisher.",Improvement,Medium,Complete,"2017-05-11 18:30:07","2017-05-11 18:30:07",2
"Hyperledger Sawtooth","Tar up log files from tests runs","It would be very useful to have log artifacts created on master and PR build. This would include creating a tar file with the debug and error logs for each integration test. ",Improvement,Medium,Backlog,"2017-05-11 18:17:54","2017-05-11 18:17:54",2
"Hyperledger Sawtooth","Write UnitTests for the Executor","This includes writing several Mock classes for components such as Interconnect, Scheduler, Context Manager, .. etc    Tests:    Future callbacks - OK    Future callbacks - InternalError    Future callbacks - InvalidTransaction    Fail transaction based on txn processor type    Check Executor correctly creates a Waiter if Transaction Processor is not available.",Improvement,Medium,Backlog,"2017-05-11 14:37:57","2017-05-11 14:37:57",2
"Hyperledger Sawtooth","xo create should send a friendly response after waiting","Creating a game with xo currently prints out a raw JSON response from the REST API. It should instead wait for the block to commit, and then print a friendlier XO-specific confirmation.",Bug,Low,Complete,"2017-05-10 20:36:28","2017-05-10 20:36:28",1
"Hyperledger Sawtooth","Establish policy and process for timely resolution of Publicly Known Vulnerabilities","In the Security section, its uncleear how to demonstrate that the following requirements/suggestions are met:    *Publicly* *Known Vulnerabilities Fixed*    There MUST be no unpatched vulnerabilities of medium or high severity that have been publicly known for more than 60 days.    Projects SHOULD fix all critical vulnerabilities rapidly after they are reported.",Improvement,Medium,Complete,"2017-05-09 23:17:09","2017-05-09 23:17:09",1
"Hyperledger Sawtooth","Package protobuf-cpp-3.2.0 as deb","Building and installing this from source for every provision is inefficient. This dependency should be packaged as a deb like the other dependencies and published to the internal package repo: repo.sawtooth.me/ubuntu/ci    Alternatively, if the version included in the ubuntu distribution we are using can be made to work with this, or an external provider of the package can be identified, one of those options would be preferable.    https://www.debian.org/doc/manuals/maint-guide/start.en.html",Improvement,Medium,Complete,"2017-05-09 21:37:58","2017-05-09 21:37:58",3
"Hyperledger Sawtooth","Move validator/tests/unit3 to validator/tests","{{validator/tests/unit3}} is a hold-over from when we had both python 2.7 and python 3 code in the same repository.  As this is no longer the case, the contents of {{unit3}} should be moved up to {{validator/tests}} and {{unit3}} should be deleted.",Improvement,Lowest,Complete,"2017-05-08 22:36:02","2017-05-08 22:36:02",1
"Hyperledger Sawtooth","Add Journal Support for early binding consensus",,Improvement,Medium,Complete,"2017-05-08 21:29:28","2017-05-08 21:29:28",3
"Hyperledger Sawtooth","DEFECT: Fix race condition between chain controller and BlockPublisher when the chain updates.",,Bug,Medium,Complete,"2017-05-08 21:29:15","2017-05-08 21:29:15",2
"Hyperledger Sawtooth","Complete migrating backlog to HL JIRA",,Improvement,Medium,Complete,"2017-05-08 21:06:30","2017-05-08 21:06:30",3
"Hyperledger Sawtooth","Update Poet WaitTimer and WaitCertificate Tests","Create mock_poet_enclave_wait_timer and mock_poet_enclave to allow faster testing without using sleeps.     include Jamie on the review.",Improvement,Medium,Complete,"2017-05-08 20:59:24","2017-05-08 20:59:24",3
"Hyperledger Sawtooth","Handle Validator Disconnects","Handle validator disconnect events in the Go SDK correctly.    When the validator is restarted, the Go SDK does not re-connect.  Expected behavior is that a restart of the validator should not require restarting the TPs such as intkey go.",Improvement,Medium,Complete,"2017-05-08 20:40:49","2017-05-08 20:40:49",2
"Hyperledger Sawtooth","Fix block publisher repeatedly processing an invalid batch","When an invalid (yet properly signed) batch is submitted to a validator and then no further batch is submitted for some time (1 minute, for example). The block publisher will repeatedly process the invalid batch, logging again and again that it is invalid. This is a modification to the intkey smoke test that recreates the issue : [https://chat.hyperledger.org/file-upload/Aq5gq6tFvq9Wy2cNj/causes_repeats.txt.] The issue can also be recreated by submitting the same transaction without a nonce so that the batch signature is a duplicate of an already committed batch.",Bug,High,Complete,"2017-05-08 19:50:36","2017-05-08 19:50:36",2
"Hyperledger Sawtooth","App Dev Guide: Writing Transaction Processors-JavaScript","Partially done fro NML-2436.    Use specially written JavaScript code fragments to insert into tutorial template already created.      ","New Feature",Medium,Complete,"2017-05-08 19:30:49","2017-05-08 19:30:49",1
"Hyperledger Sawtooth","DEFECT sawtooth block show produces stacktrace from valid arguments","Confirm this is still an issue first.    To reproduce, enter command:    sawtooth block show <block_id>, where the block ID does not exist.    Result: stacktrace    Desired behavior: error message stating that the block ID does not exist. ",Bug,Medium,Complete,"2017-05-08 19:24:25","2017-05-08 19:24:25",1
"Hyperledger Sawtooth","Complete rebasing of Python Txn Tutorial","The Python tutorial/guide for writing a transaction processor (NML-2432) is mainly complete, but is divided into two PR's due to a process anomaly.     Get the commits in the PR's merged into a single PR and clean up.     ","New Feature",High,Complete,"2017-05-08 19:17:08","2017-05-08 19:17:08",1
"Hyperledger Sawtooth","Finish writing burrow evm transaction family specification",,"New Feature",Medium,Complete,"2017-05-08 18:53:33","2017-05-08 18:53:33",1
"Hyperledger Sawtooth","Create yaml based scheduler test","With this test (framework) it will be possible to test correctness on any scheduler implementation by writing a yaml file using particular data (The test framework will create transactions and batches and mark transaction as valid or invalid as specified by the yaml). The test of correctness is that the correct merkle root is available in the scheduler for the block production/validation component to query.",Improvement,Medium,Complete,"2017-05-08 18:27:03","2017-05-08 18:27:03",5
"Hyperledger Sawtooth","Performance Test - Storage",,Improvement,Medium,Complete,"2017-05-08 17:15:46","2017-05-08 17:15:46",5
"Hyperledger Sawtooth","Trie address globbing and CM address enforcement",,Improvement,Medium,Complete,"2017-05-08 17:11:06","2017-05-08 17:11:06",3
"Hyperledger Sawtooth","Remove Signup Information Verification from PoET Enclave Simulator","Signup information is verified in the validator registry transaction processor, removing the need to verify it in the enclave.",Improvement,Medium,Complete,"2017-05-08 16:51:20","2017-05-08 16:51:20",1
"Hyperledger Sawtooth","Make Setting the IAS REPORT_PUBLIC_KEY_PEM Configurable for PoET Consensus","Currently, the validator registry transaction processor and the PoET enclave simulator use a predetermined IAS verification key to check attestation verification report signature.    This IAS verification key needs to be configurable.",Improvement,Medium,Complete,"2017-05-08 16:49:26","2017-05-08 16:49:26",3
"Hyperledger Sawtooth","Make Setting the IAS Enclave Basename Configurable for PoET Consensus","Currently, the validator registry transaction processor and the PoET enclave simulator use a predetermined enclave basename to check against the attestation verification report. The SGX enclave checks against its own enclave basename value.    This enclave basename value needs to be configurable.",Improvement,Medium,Complete,"2017-05-08 16:47:18","2017-05-08 16:47:18",1
"Hyperledger Sawtooth","Create IntKey Transaction Family Specification",,Improvement,Medium,Complete,"2017-05-08 16:46:00","2017-05-08 16:46:00",2
"Hyperledger Sawtooth","Make Setting the IAS Enclave Measurement Configurable for PoET consensus","Currently, the validator registry transaction processor and the PoET enclave simulator use a predetermined enclave measurement to check against the attestation verification report. The SGX enclave checks against its own enclave measurement value.    This enclave measurement value needs to be configurable.",Improvement,Medium,Complete,"2017-05-08 16:45:34","2017-05-08 16:45:34",1
"Hyperledger Sawtooth","Remove Dependency on kwargs in PoET Enclave Simulator","The PoET simulator enclave still is dependent upon the old configuration model (i.e., passing all configuration via kwargs dictionary).  This dependency needs to be removed and the PoET simulator needs to be updated to use either the new config transaction family or the new local configuration being work on by [~<EMAIL>].",Improvement,Medium,Complete,"2017-05-08 16:43:34","2017-05-08 16:43:34",2
"Hyperledger Sawtooth","Add MVP label to appropriate JIRA issues",,"New Feature",Medium,Complete,"2017-05-08 16:42:32","2017-05-08 16:42:32",1
"Hyperledger Sawtooth","Review 0.8 implementation, open JIRA tasks for remaining features / issues",,"New Feature",Medium,Complete,"2017-05-08 16:34:10","2017-05-08 16:34:10",5
"Hyperledger Sawtooth","App Dev Guide: Writing Transaction Processors - Go",,"New Feature",Medium,Complete,"2017-05-08 16:27:09","2017-05-08 16:27:09",2
"Hyperledger Sawtooth","Implement Go XO example",,"New Feature",Medium,Complete,"2017-05-08 16:26:08","2017-05-08 16:26:08",5
"Hyperledger Sawtooth","Fix Java Intkey validation issue","The current implementation of java intkey uses a cbor library that gives a different map format then python and javascript. This causes failures when running multiple implementation of intkey together.",Bug,Medium,Complete,"2017-05-08 16:17:22","2017-05-08 16:17:22",1
"Hyperledger Sawtooth","Update Community Pages",,Improvement,Medium,Complete,"2017-05-08 15:18:26","2017-05-08 15:18:26",2
"Hyperledger Sawtooth","Implement Java XO Transaction Processor",,Improvement,Medium,Complete,"2017-05-08 15:17:02","2017-05-08 15:17:02",5
"Hyperledger Sawtooth","PoET Block Publisher - claim readiness if the wait timer has expired","Check that PoET Block Publisher claims readiness only when it is time to claim the current candidate blocks - the wait timer has expired.  check_publish_block()  return self._wait_timer.has_expired(now=time.time())",Task,Medium,Complete,"2017-05-08 05:19:22","2017-05-08 05:19:22",2
"Hyperledger Sawtooth","PoET Fork Resolver - current & new fork heads are not PoET blocks","Test conditions:  Current fork head is not a PoET block  New fork head is not a Poet block   - new fork head builds directly on top of it (i.e., the new fork head has the current fork head as its previous block)   - new fork head does not build directly on top of it",Task,Medium,Complete,"2017-05-08 05:13:13","2017-05-08 05:13:13",2
"Hyperledger Sawtooth","PoET Block Publisher - initialize_block() Failure & Success Cases","- Verify that it returns False if the validator does not have an entry in the validator registry   - Verify that it returns False if the PoET public key in the validator registry is not current   - Verify that it returns False if the K (block claim count) test fails   - Verify that it returns False if the validator sign up info was committed too late   - Verify that it returns False if the C policy (block claim delay) test fails   - Verify that it returns False if the Z policy (block claim frequency) test fails   - Verify that it returns True if the validator passes all the tests above",Task,Medium,Complete,"2017-05-08 05:08:30","2017-05-08 05:08:30",5
"Hyperledger Sawtooth","PoET Fork Resolver - current & new fork heads are both PoET blocks ","- current fork head and new fork head previous blocks are the same (i.e., they both build on the same block)   - current fork wait certificate duration < new fork wait certificate duration   - current fork wait certificate duration > new fork wait certificate duration   - current fork wait certificate duration == new fork wait certificate duration   - current fork header signature > new fork header signature   - new fork header signature >= current fork header signature   - current fork head and new fork head previous blocks are not the same   - current fork consensus state aggregate local mean > new fork consensus state aggregate  local mean + new fork wait certificate local mean   - current fork consensus state aggregate local mean < new fork consensus state aggregate  local mean + new fork wait certificate local mean   - current fork consensus state aggregate local mean == new fork consensus state aggregate  local mean + new fork wait certificate local mean   - current fork header signature > new fork header signature   - new fork header signature >= current fork header signature",Task,Medium,Complete,"2017-05-08 05:06:50","2017-05-08 05:06:50",3
"Hyperledger Sawtooth","Refactor - create MockConsensusState()","Create a MockConsensusState() to eliminate duplicate code in most tests in test_consensus.",Task,Medium,Complete,"2017-05-08 05:02:46","2017-05-08 05:02:46",1
"Hyperledger Sawtooth","Write Javascript Examples for Writing TP: Javascript",,Improvement,Medium,Complete,"2017-05-07 22:20:27","2017-05-07 22:20:27",1
"Hyperledger Sawtooth","Add Network message support for consensus algorithms","Need a message type defined for consensus messages, to allow for consensus algorithms to message each other. Messages should be allowed to be broadcast or directed to a specific validator.  ",Improvement,Medium,Backlog,"2017-05-06 21:59:57","2017-05-06 21:59:57",2
"Hyperledger Sawtooth","Add thread pool to C++ SDK transaction Processor","Add threading to allow for the Transaction processing requests to be handled asyncronously. ",Improvement,Medium,Backlog,"2017-05-06 21:55:20","2017-05-06 21:55:20",5
"Hyperledger Sawtooth","Update the C++ SDK to handle disconnect and reconnect events","The C++ sdk is oblivious to the connect and disconnect events from the validator socket. It needs to detect when a validator disconnects and then enter a wait loop for the validator to become availiable again and reregister. ",Improvement,Medium,Complete,"2017-05-06 21:53:16","2017-05-06 21:53:16",2
"Hyperledger Sawtooth","Improve C++ SDK GlobalState error handling","Get/Set/Delete function don't correctly check for errors on the result from the validator. ",Improvement,Medium,Backlog,"2017-05-06 21:51:03","2017-05-06 21:51:03",3
"Hyperledger Sawtooth","Implement burrow AppState interface using processor.State",,"New Feature",Medium,Complete,"2017-05-05 21:30:16","2017-05-05 21:30:16",3
"Hyperledger Sawtooth","Implement checking for address wildcards on txn inputs and outputs","After this story is finished, inputs and outputs will be able to have addresses shorter than 70 characters, and the context manager will be able to enforce that gets and sets don't access addresses outside that part of the merkle/radix tree. There should be unit tests that test correct enforcement.",Improvement,Medium,Complete,"2017-05-05 20:31:52","2017-05-05 20:31:52",3
"Hyperledger Sawtooth","Improve validator shutdown under load","Currently shutdown happens slowly with intermittent failures, when no batches are sent to the validator.     After this task is finished, an integration test that sends batches to two connected and peered validators and then asserts that each validator will give a return code of 0 within 35 seconds after either SIGINT or SIGTERM, will pass reliably.",Improvement,Medium,Backlog,"2017-05-05 20:20:56","2017-05-05 20:20:56",3
"Hyperledger Sawtooth","Sawtooth CLI link on doc index page is broken (is sawtooth_cli.html, should be cli.html)",,Bug,High,Complete,"2017-05-05 19:32:43","2017-05-05 19:32:43",1
"Hyperledger Sawtooth","Documentation should track stable and/or master for App Devs and Core Devs properly","This issue arose:  A user following the tutorial found that the documentation was not in sync with the sawtooth lake code available on the docker container.    Solution:    Documentation should exist in two versions:  * master  * stable    Developers can then choose which docs to use based on which version of the code they are using.    App developers would generally use stable. Core developers might use either stable or master.    ","New Feature",Medium,Backlog,"2017-05-05 18:05:28","2017-05-05 18:05:28",2
"Hyperledger Sawtooth","Identify remaining parallel scheduler tasks",,"New Feature",Medium,Complete,"2017-05-05 17:49:45","2017-05-05 17:49:45",2
"Hyperledger Sawtooth","Extend current unit tests to include the parallel scheduler where possible ",,"New Feature",Medium,Complete,"2017-05-05 17:41:43","2017-05-05 17:41:43",2
"Hyperledger Sawtooth","Publish stable docs as default, with docs from master at a sub-url","Currently, our published documentation is not in-sync with our stable debian packages and stable docker images.  This is causing app developer confusion.  Instead, we should publish stable documentation at the same time we publish the debian/docker artifacts.  We should also generate master as we do now, but in a different URL (similar to what we do for 0.7).","New Feature",Highest,Complete,"2017-05-05 17:36:43","2017-05-05 17:36:43",1
"Hyperledger Sawtooth","Implement burrow evm transaction family execute",,"New Feature",Medium,Complete,"2017-05-05 16:53:06","2017-05-05 16:53:06",2
"Hyperledger Sawtooth","Implement burrow evm transaction family load",,"New Feature",Medium,Complete,"2017-05-05 16:52:49","2017-05-05 16:52:49",2
"Hyperledger Sawtooth","Implement burrow evm CLI for viewing state",,"New Feature",Medium,Complete,"2017-05-05 16:51:44","2017-05-05 16:51:44",2
"Hyperledger Sawtooth","Implement burrow evm CLI for creating/submitting transactions",,"New Feature",Medium,Complete,"2017-05-05 16:39:07","2017-05-05 16:39:07",2
"Hyperledger Sawtooth","Write rough draft of burrow evm transaction family specification",,"New Feature",Medium,Complete,"2017-05-05 16:36:40","2017-05-05 16:36:40",2
"Hyperledger Sawtooth","Design burrow evm state addressing and storage format",,"New Feature",Medium,Complete,"2017-05-05 16:32:37","2017-05-05 16:32:37",1
"Hyperledger Sawtooth","Design burrow evm transaction payload format",,"New Feature",Medium,Complete,"2017-05-05 16:32:06","2017-05-05 16:32:06",1
"Hyperledger Sawtooth","Fix xo state format to handle hash collisions","Currently, the xo examples do not handle possible hash collisions.  Instead, we have warnings like the following in xo python:    Since we use xo for our tutorials, we should provide a correct implementation which stores a list of games at the address instead of a single game, thus handling hash collisions properly.  Note that this will require an update to all xo TP implementations as well as any impacted documentation.",Bug,Medium,Complete,"2017-05-05 15:45:45","2017-05-05 15:45:45",1
"Hyperledger Sawtooth","In docs, code blocks which include source files have many empty lines","In our documentation, use of literalinclude results in empty lines at the end of the block (see attached image).   ",Bug,Medium,Complete,"2017-05-05 15:17:26","2017-05-05 15:17:26",2
"Hyperledger Sawtooth","Duplicate interconnect connections cause block request spiral","I believe we have a peering bug which is being caught periodically by the poet-smoke test. Examples of the bug are here:  https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-409/4/console  https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/master/228/console  https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/master/227/console  https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/master/220/console    Using this branch I got a 4/5 failure rate doing `run_docker_test poet-smoke`: https://github.com/aludvik/sawtooth-core/tree/poet-bug    I ran it with debug level logging, and committed the log with interconnect messages filtered out: https://github.com/aludvik/sawtooth-core/blob/poet-bug/poet-smoke-fail-no-interconnect    You can see at the end of the logging, it goes into a spiral of responding to block requests.",Bug,Medium,Complete,"2017-05-05 14:32:30","2017-05-05 14:32:30",2
"Hyperledger Sawtooth","Clarify Python REST instructions are for Python 3","The instructions for submitting a transaction to the REST API from a python client are Python 3 specific, but do not state the Python version requirement.  In Python 2.7, these instructions result in an error:    The page should clearly indicate that it is for Python 3.","New Feature",Medium,Complete,"2017-05-05 00:36:12","2017-05-05 00:36:12",1
"Hyperledger Sawtooth","xo CLI does not add nonce to transaction header","Running xo create game000 twice in a row submits exactly the same transaction, with the same id (thus same batch id).  It should instead add a nonce in the transaction header so these are treated as different transactions.","New Feature",Medium,Complete,"2017-05-05 00:23:59","2017-05-05 00:23:59",1
"Hyperledger Sawtooth","Update intkey tests and implementations to conform to spec",,"New Feature",Medium,Complete,"2017-05-04 17:57:42","2017-05-04 17:57:42",5
"Hyperledger Sawtooth","Update xo tests","The xo TP and smoke tests don't test very much right now. xo smoke, for instance, verifies that nothing breaks when xo is run, but doesn't do any state checking at all [1]. They should be more extensive.    [1] In this sense it's a true smoke test: The phrase smoke test comes from electronic hardware testing. You plug in a new board and turn on the power. If you see smoke coming from the board, turn off the power. You don't have to do any more testing.","New Feature",Medium,Complete,"2017-05-04 17:49:58","2017-05-04 17:49:58",3
"Hyperledger Sawtooth","Remove all references to 'sawtooth cluster' command from documentation","Replace all references to 'sawtooth cluster' with alternatives such as docker compose.  Motivation behind this is two-fold.  First, we believe docker compose will be a better user experience overall.  Second, we may remove 'sawtooth cluster' (see STL-91).","New Feature",Medium,Complete,"2017-05-04 15:51:42","2017-05-04 15:51:42",3
"Hyperledger Sawtooth","Need block inspector tool for inspecting data files off-line","In some cases, such as when diagnosing a bug, it would be helpful to have a tool which could print the contents of the data files in a human-readable format.  This is made more difficult by the fact that payloads are opaque, so the tool would need a pluggable capability to dump contents of specific transaction payloads.","New Feature",Medium,Backlog,"2017-05-04 15:33:45","2017-05-04 15:33:45",5
"Hyperledger Sawtooth","ZMQError: Address already in use results in unfriendly traceback","It is possible to get an Address already in use error when the validator shuts down unclean and is restarted quickly.  The current error handling results in an unfriendly traceback being printed.    This error should be cleaned up so we aren't showing a traceback.  Could we avoid this error experience by retrying the ZMQ in a loop for a (short) duration of time?",Bug,Medium,Complete,"2017-05-04 15:15:36","2017-05-04 15:15:36",3
"Hyperledger Sawtooth","Change variables names from wif_filename to priv_filename","Task related to closed PR #369: Variables names wif_filename should be changed to priv_filename, to go along with the intent of PR#369.","New Feature",Medium,Complete,"2017-05-03 21:17:36","2017-05-03 21:17:36",1
"Hyperledger Sawtooth","DEFECT sawtooth cluster starts too many validators with subprocess","To reproduce:  Start validators using sawtooth cluster start -m subprocess --count 2 -P tp_intkey_process ps -ef | grep python shows that more validators than expected are started. Strange: ubuntu@ubuntu-xenial:/project/sawtooth-core$ ps -ef | grep python ubuntu 26989 20114 0 16:48 pts/1 00:00:00 python3 /project/sawtooth-core/bin/sawtooth cluster start -m subprocess --count 2 -P tp_config ubuntu 26992 26989 0 16:48 pts/1 00:00:01 [python3] <defunct> ubuntu 26993 26989 0 16:48 pts/1 00:00:02 python3 /project/sawtooth-core/bin/validator --component-endpoint tcp://0.0.0.0:40000 --network-endpoint tcp://0.0.0.0:8800 ubuntu 26994 26989 0 16:48 pts/1 00:00:02 python3 /project/sawtooth-core/bin/validator --component-endpoint tcp://0.0.0.0:40001 --network-endpoint tcp://0.0.0.0:8801 --peers tcp://0.0.0.0:8800 ubuntu 26995 26989 0 16:48 pts/1 00:00:01 python3 /project/sawtooth-core/bin/tp_config tcp://0.0.0.0:40000 ubuntu 26996 26989 0 16:48 pts/1 00:00:01 python3 /project/sawtooth-core/bin/tp_config tcp://0.0.0.0:40001 ubuntu 26997 26989 0 16:48 pts/1 00:00:01 python3 /project/sawtooth-core/bin/rest_api --stream-url tcp://0.0.0.0:40000 ubuntu 27049 26993 0 16:48 pts/1 00:00:00 python3 /project/sawtooth-core/bin/validator --component-endpoint tcp://0.0.0.0:40000 --network-endpoint tcp://0.0.0.0:8800 ubuntu 27050 26993 0 16:48 pts/1 00:00:00 python3 /project/sawtooth-core/bin/validator --component-endpoint tcp://0.0.0.0:40000 --network-endpoint tcp://0.0.0.0:8800 ubuntu 27052 26993 0 16:48 pts/1 00:00:00 python3 /project/sawtooth-core/bin/validator --component-endpoint tcp://0.0.0.0:40000 --network-endpoint tcp://0.0.0.0:8800 ubuntu 27074 26994 0 16:49 pts/1 00:00:00 python3 /project/sawtooth-core/bin/validator --component-endpoint tcp://0.0.0.0:40001 --network-endpoint tcp://0.0.0.0:8801 --peers tcp://0.0.0.0:8800 ubuntu 27076 26994 0 16:49 pts/1 00:00:00 python3 /project/sawtooth-core/bin/validator --component-endpoint tcp://0.0.0.0:40001 --network-endpoint tcp://0.0.0.0:8801 --peers tcp://0.0.0.0:8800 ubuntu 27077 26994 0 16:49 pts/1 00:00:00 python3 /project/sawtooth-core/bin/validator --component-endpoint tcp://0.0.0.0:40001 --network-endpoint tcp://0.0.0.0:8801 --peers tcp://0.0.0.0:8800 ubuntu 27119 26576 0 17:00 pts/2 00:00:00 grep --color=auto python ubuntu@ubuntu-xenial:/project/sawtooth-core$","New Feature",Medium,Backlog,"2017-05-03 21:16:27","2017-05-03 21:16:27",2
"Hyperledger Sawtooth","App Dev Guide: Writing Transaction Processors-JAVA",,"New Feature",Medium,Complete,"2017-05-03 20:56:01","2017-05-03 20:56:01",2
"Hyperledger Sawtooth","Migrate Namespace/Address Documentation to Public Sphinx Doc","Migrate this document into the appropriate place in the public facing documentation:","New Feature",Medium,Complete,"2017-05-03 20:55:07","2017-05-03 20:55:07",1
"Hyperledger Sawtooth","Add ability to specify a list of bind endpoints to validator","The --network-endpoint and --component-endpoint flags to validator should accept more than one endpoint and bind to all of them, in case multiple interfaces are required.","New Feature",Medium,Complete,"2017-05-03 20:49:17","2017-05-03 20:49:17",2
"Hyperledger Sawtooth","Define Out-of-Band Package Process","This would assist developers looking for bug fixes sooner than the standard release process to help their app development","New Feature",Medium,Backlog,"2017-05-03 20:48:03","2017-05-03 20:48:03",2
"Hyperledger Sawtooth","Research Go SDK Distribution Model","Output of this task should be additional stories for distributing the SDK","New Feature",Medium,Complete,"2017-05-03 20:47:01","2017-05-03 20:47:01",1
"Hyperledger Sawtooth","Develop Plan for 0-Downtime Upgrades",,"New Feature",Medium,Backlog,"2017-05-03 20:45:19","2017-05-03 20:45:19",3
"Hyperledger Sawtooth","Create SysAdmin Documentation for Genesis Block",,"New Feature",Medium,Backlog,"2017-05-03 20:44:23","2017-05-03 20:44:23",2
"Hyperledger Sawtooth","Test Regenerating Admin Keys",,"New Feature",Medium,Backlog,"2017-05-03 20:43:46","2017-05-03 20:43:46",2
"Hyperledger Sawtooth","Develop Plan for Module Config Files",,"New Feature",Medium,Backlog,"2017-05-03 20:42:55","2017-05-03 20:42:55",3
"Hyperledger Sawtooth","Define Recommended Deployment Network for SysAdmin Guide","This should produce a general outline/sketch of a design that will feed into a document about Recommended Deploytments.","New Feature",Medium,Backlog,"2017-05-03 20:41:51","2017-05-03 20:41:51",2
"Hyperledger Sawtooth","Generate full documentation from Open API Spec",,"New Feature",Medium,Backlog,"2017-05-03 20:33:54","2017-05-03 20:33:54",5
"Hyperledger Sawtooth","Implement REST API sort parameter",,"New Feature",Medium,Complete,"2017-05-03 20:33:14","2017-05-03 20:33:14",3
"Hyperledger Sawtooth","Create logging for REST API",,"New Feature",Highest,Complete,"2017-05-03 20:32:35","2017-05-03 20:32:35",3
"Hyperledger Sawtooth","Migrate REST API Architecture Documentation to Sphinx",,"New Feature",Medium,Complete,"2017-05-03 20:31:43","2017-05-03 20:31:43",2
"Hyperledger Sawtooth","Document API with GoDoc",,"New Feature",Medium,Complete,"2017-05-03 20:30:33","2017-05-03 20:30:33",3
"Hyperledger Sawtooth","Implement State Delta Registration with Fork Resolution","State Export clients may send {{last_known_block_ids}} which may no longer exist on the chain (e.g. the connected validator had a fork that was discarded).      Implement a way for the validator and subscriber to negotiate for a known block id.","New Feature",Medium,Complete,"2017-05-03 20:29:40","2017-05-03 20:29:40",3
"Hyperledger Sawtooth","Implement Settings Key Naming Strategy","Addresses are made up of 70 hexadecimal digits, with the first 6 making up a transaction family namespace, and the remaining 64 make up the address of the data within the namespace.  With on-chain settings, the namespace is 000000.  The remainder of the data is made up from a series of hashes of key parts.         In order to allow users to to query for groups of settings, without having to query the whole of the the settings, there needs to be a correspondence between the key parts and the address.           The remaining 32 bytes/64 hex characters of a setting address can be broken up into 4 parts, each corresponding to a part of the setting key.  Each part of the key is hashed with sha256 and the first 16 characters of the hash are used.  For keys with less than 4 parts, the remaining hashes are produced using empty strings.  For keys with more than 4 parts, the last part will be the remaining subkey (that is, 3 individual parts, and the 4 made up of the remain subkey).      Breaking it into 4 parts limits the granularity of subqueries, for deeply nested settings, but a consistent position for the keys is necessary for subgroup queries to be predictable, without the application developer requiring knowledge of how deeply nested the settings are.","New Feature",Medium,Complete,"2017-05-03 20:28:44","2017-05-03 20:28:44",2
"Hyperledger Sawtooth","Implement State Delta Subscription Catch-up","State Export clients can send \{\{last_known_block_ids}} which may be older than the current chain head.  Provide a way to send the successive events between the block id sent and the chain head.","New Feature",Medium,Complete,"2017-05-03 20:27:37","2017-05-03 20:27:37",3
"Hyperledger Sawtooth","Write Transaction Family Spec for XO","We do not currently have a transaction family specification for xo in our docs.  Since we use xo as our example transaction family for tutorial purposes, it would make sense to also provide a transaction family specification.  Following the format of the Sawtooth Config or Validator Registry transaction families, write a transaction family spec for the XO Family.","New Feature",Medium,Complete,"2017-05-03 20:18:00","2017-05-03 20:18:00",1
"Hyperledger Sawtooth","Implement direct send of messages from peer to peer by opening a temporary connection","In order to reduce message volume on the network, it is advantageous to perform direct delivery of messages between peers in certain cases. For example, if a node broadcasts a REQUEST message for a missing Block, it is preferable for the reply to be sent from the replying node directly to the requesting node, rather than being broadcast across the network. Define a mechanism for a temporary direct connection to a remote node for delivery of a message or a set of messages which does not require a peering relationship to be established. Initially this should support network endpoints as specified by a ZMQ style URI string (e.g. tcp://192.168.0.55:8800). Future enhancements may include peer addressing by other information stored in the network topology. For now, let’s assume that the pattern is REQUEST/reply where the REQUEST message will contain the requesting peer’s endpoint. The network component should attempt to open a direct connection to the peer, perform whatever session authentication is required, deliver the message, wait for acknowledgement, and close the session/connection.","New Feature",Medium,Backlog,"2017-05-03 20:13:58","2017-05-03 20:13:58",3
"Hyperledger Sawtooth","Add configuration option to select between schedulers","Add command line option and file-based configuration to switch between schedulers. Update sawtooth cluster command to enable switching scheduler.","New Feature",Medium,Complete,"2017-05-03 20:09:41","2017-05-03 20:09:41",1
"Hyperledger Sawtooth","Implement state handling in parallel scheduler branch","Finish implementation of state handling in the parallel scheduler branch, with appropriate integration with the context manager. At the end of this effort, the parallel scheduler should work well enough that it can be used in place of the serial scheduler. ","New Feature",Medium,Complete,"2017-05-03 20:08:47","2017-05-03 20:08:47",5
"Hyperledger Sawtooth","Create additional Genesis block test cases","Expand the current test cases for exercising the Genesis Block. These can include. Part of this story involves working with Genesis block development to understand additional features and properties that need to be validated through testing.","New Feature",Medium,Complete,"2017-05-03 14:39:24","2017-05-03 14:39:24",3
"Hyperledger Sawtooth","Send TP Registration ACK back before Transaction Requests","Currently, when a transaction processor (TP) registers, it is added immediately to the collection of processors before the the acknowledgement message is sent back to the TP.    This can result in situations where the TP receives transaction process requests before it receives the registration response.  It requires more complexity on the part of the SDK to manage message ordering.  The validator should send the acknowledgement before allowing the TP to be used during transaction execution. ",Bug,Medium,Backlog,"2017-05-02 23:28:55","2017-05-02 23:28:55",2
"Hyperledger Sawtooth","Startup without initializing genesis data can be confusing","During development, it is common to startup a single validator.  This requires two steps prior to staring the validator: a) create a validator key with 'sawtooth admin keygen' and b) create data for the genesis block with 'sawtooth admin genesis'.    If a user using the single validator forgets step (b), the validator will currently startup and start peering.  The validator is essentially waiting for a genesis block before it will start publishing it's own blocks.  Peering happens in one thread while the journal is running in it's own threads.  (This maybe an imprecise description of the validator's behavior, as the implementation is fairly detailed.)    Current output in this situation looks like this:            If the user mistakenly forgot the step and is not starting another validator, this debug output does not help.  In fact, the 'None' statements look buggy as it looks like str(a) where 'a is None' in python slipped through and got logged.  (This is intentional currently, so it's not actually buggy.)    Recommend we have the genesis code identify this situation and log an INFO-level message with: 'No genesis block is present, resulting in no initial chain head; block publishing is disabled until a chain head is updated' or similar and removing the logging statements where 'None' occurs (or changing them for clarity).","New Feature",Medium,Complete,"2017-05-02 22:57:24","2017-05-02 22:57:24",1
"Hyperledger Sawtooth","Executor does not recover after TP crash","If a transaction processor crashes without sending a friendly disconnect message to the validator, the executor will never detect it is gone.  This essentially hangs the validator.  This can be replicated by modifying one of the go examples and referencing a field in a struct when it's nil (this causes a runtime error similar to segfault).  Another approach might be to kill -9 a running TP.  Starting the transaction processor back up will register, but submitted transactions will not be processed.",Bug,High,Complete,"2017-05-02 22:27:55","2017-05-02 22:27:55",3
"Hyperledger Sawtooth","Research Go SDK Distribution Model","Output of this task should be additional stories for distributing the SDK ","New Feature",Medium,Complete,"2017-05-02 22:10:48","2017-05-02 22:10:48",1
"Hyperledger Sawtooth","xo create's --wait option does not wait","When creating a game with xo, it returns before the game is committed, even with --wait:    Expected behavior is for the CLI to pause until either an error is returned or the transaction has been committed to a winning block.",Bug,Medium,Complete,"2017-05-02 22:08:57","2017-05-02 22:08:57",2
"Hyperledger Sawtooth","Rename MAINTAINERS file to COMMITTERS",,"New Feature",Highest,Complete,"2017-05-02 21:58:49","2017-05-02 21:58:49",1
"Hyperledger Sawtooth","Executor treats TP internal error as invalid transaction","If a transaction processor returns an internal error, the executor will treat this as an invalid transaction.  This is extremely incorrect, as internal error indicates the transaction processor could not determine validity of the transaction.",Bug,Highest,Complete,"2017-05-02 21:49:21","2017-05-02 21:49:21",2
"Hyperledger Sawtooth","Make context manager pass unit tests",,"New Feature",Medium,Complete,"2017-05-02 21:35:14","2017-05-02 21:35:14",3
