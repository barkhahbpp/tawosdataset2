Name,Title,Description,Type,Priority,Status,Creation_Date,Estimation_Date,Story_Point
"The Titanium SDK ","iOS: Remove deprecated frameworks (AddressBook, AddressBookUI, OpenGLES)","There are some legacy frameworks still being linked as of today, although not even actively used anymore. They should be removed from the iOS source project. This also allows Catalyst apps to now use the Ti.Contacts API! :-)    PR: https://github.com/<USER>titanium_mobile/pull/12188",Improvement,High,"In QE Test","2020-10-17 15:41:42","2020-10-17 15:41:42",8
"The Titanium SDK ","iOS: Package build fails with MediaModule compile error in SDK 9.2.1","This is a different error from [TIMOB-28100|https://jira.<USER>org/browse/TIMOB-28100]    I've attached the log and the specific error is below...          ",Bug,Critical,Resolved,"2020-10-16 12:37:30","2020-10-16 12:37:30",1
"The Titanium SDK ","Angular: Project created from template fails build with type errors","*Steps to reproduce the behavior*    # Create new Angular project with {{appc new --ng}}  # Build project    *Actual behavior*    Build fails with the following error:        *Expected behavior*  Build without error",Bug,High,Resolved,"2020-10-15 18:08:14","2020-10-15 18:08:14",5
"The Titanium SDK ","Android: Implement TableViewRow.hasDetail","- Implement support for {{TableViewRow.hasDetail}} property on Android for parity with iOS.",Improvement,Low,Open,"2020-10-15 18:04:51","2020-10-15 18:04:51",3
"The Titanium SDK ","Deprecate TableView header footer properties","- Deprecate TableView {{header}} and {{footer}} properties in favor of {{headerTitle}} and {{footerTitle}} for consistency with {{TableViewSection}}, {{TableViewRow}}, {{ListView}} and {{ListSection}}.  - Display a warning when {{header}} and {{footer}} are used, recommending the _title_ equivalents.",Improvement,Low,Open,"2020-10-15 17:59:49","2020-10-15 17:59:49",3
"The Titanium SDK ","Android: Horizontal layout ignores right property","- {{right}} property will be ignored on child-views of views using {{horizontal}} layout    *TEST CASE*  {code:js}  const win = Ti.UI.createWindow({   backgroundColor: 'gray'  });  const row = Ti.UI.createView({   layout: 'horizontal',   backgroundColor: 'white',   width: Ti.UI.FILL,   height: 50  });  const view_a = Ti.UI.createView({   backgroundColor: 'green',   left: 50,   // right: 50,   width: 50,   height: 50  });  const view_b = Ti.UI.createView({   backgroundColor: 'red',   // left: 50,   right: 50,   width: 50,   height: 50  });    row.add([ view_a, view_b ]);  win.add(row);  win.open();  {code}    *EXPECTED*  - Layout takes into account {{right}} property of child-view and aligns view to the right.    *ACTUAL*  - {{right}} property is ignored, view is left aligned.",Bug,Medium,Closed,"2020-10-15 17:28:17","2020-10-15 17:28:17",5
"The Titanium SDK ","Android: Selecting multiple photos/videos via openPhotoGallery() can cause a crash as of 9.1.0","This is a regression. Broken since 9.1.0.GA.    Issue is seen only when multiple photos are selected. Selecting multiple photos from google photos does not cause this issue.    h5.Steps to reproduce:  1. Use the code below in the app.js:    2. After the app launches click {{open gallery}}.  3. Select multiple photos from the gallery & click open/select.    h5.Actual result:  1. The app crashes with error:      h5.Expected result:  1. The app should not crash.",Bug,Critical,"In QE Test","2020-10-13 22:29:16","2020-10-13 22:29:16",3
"The Titanium SDK ","Android: Opening TabGroup crashes when using AppCompat theme as of 9.3.0","*Summary:*  When the app is using a {{Theme.AppCompat}} derived theme, opening a {{TabGroup}} will throw an exception as of Titanium 9.3.0 stating the app needs to use {{Theme.MaterialComponents}}. It should only throw this exception when using the badge or badgeColor property.    This regression was caught before release.    *Steps to reproduce:*  # Create a Classic Titanium app project.  # Copy the below {{<application/>}} theme to project's tiapp.xml file.  # Copy the below app.js to the project.  # Build and run on Android.    tiapp.xml  {code:xml}  <ti:app>   <android xmlns:android=http://schemas.android.com/apk/res/android>    <manifest>     <application android:theme=@style/Theme.AppCompat/>    </manifest>   </android>  </ti:app>  {code}    app.js  {code:java}  function createTab(title) {   var window = Ti.UI.createWindow({ title: title });   window.add(Ti.UI.createLabel({ text: title +  View }));   var tab = Ti.UI.createTab({    title: title,    window: window,   });   return tab;  }    var tabGroupSettings = {   tabs: [createTab(Tab 1), createTab(Tab 2), createTab(Tab 3)],  };  if (OS_ANDROID) {   tabGroupSettings.shiftMode = false;   tabGroupSettings.style = Ti.UI.Android.TABS_STYLE_BOTTOM_NAVIGATION;  }  var tabGroup = Ti.UI.createTabGroup(tabGroupSettings);  tabGroup.open();  {code}    *Result:*  App crashes with the following exception...  {code}  [ERROR] TiExceptionHandler: (main) [206,322] Unable to start activity ComponentInfo{com.<USER>testing/org.<USER>titanium.TiActivity}: java.lang.IllegalArgumentException: The style on this component requires your app theme to be Theme.MaterialComponents (or a descendant).  [ERROR] TiExceptionHandler:  [ERROR] TiExceptionHandler:     com.google.android.material.internal.ThemeEnforcement.checkTheme(ThemeEnforcement.java:248)  [ERROR] TiExceptionHandler:     com.google.android.material.internal.ThemeEnforcement.checkMaterialTheme(ThemeEnforcement.java:222)  [ERROR] TiExceptionHandler:     com.google.android.material.badge.BadgeDrawable.<init>(BadgeDrawable.java:361)  [ERROR] TiExceptionHandler:     com.google.android.material.badge.BadgeDrawable.createFromAttributes(BadgeDrawable.java:294)  [ERROR] TiExceptionHandler:     com.google.android.material.badge.BadgeDrawable.create(BadgeDrawable.java:262)  [ERROR] TiExceptionHandler:     com.google.android.material.bottomnavigation.BottomNavigationMenuView.getOrCreateBadge(BottomNavigationMenuView.java:647)  [ERROR] TiExceptionHandler:     com.google.android.material.bottomnavigation.BottomNavigationView.getOrCreateBadge(BottomNavigationView.java:674)  [ERROR] TiExceptionHandler:     ti.modules.titanium.ui.widget.tabgroup.TiUIBottomNavigationTabGroup.updateBadge(TiUIBottomNavigationTabGroup.java:296)  [ERROR] TiExceptionHandler:     ti.modules.titanium.ui.widget.tabgroup.TiUIBottomNavigationTabGroup.updateDrawablesAfterNewItem(TiUIBottomNavigationTabGroup.java:195)  [ERROR] TiExceptionHandler:     ti.modules.titanium.ui.widget.tabgroup.TiUIBottomNavigationTabGroup.addTabItemInController(TiUIBottomNavigationTabGroup.java:171)  [ERROR] TiExceptionHandler:     ti.modules.titanium.ui.widget.tabgroup.TiUIAbstractTabGroup.addTab(TiUIAbstractTabGroup.java:263)  [ERROR] TiExceptionHandler:     ti.modules.titanium.ui.widget.tabgroup.TiUIBottomNavigationTabGroup.addTab(TiUIBottomNavigationTabGroup.java:65)  [ERROR] TiExceptionHandler:     ti.modules.titanium.ui.TabGroupProxy.handlePostOpen(TabGroupProxy.java:480)  [ERROR] TiExceptionHandler:     ti.modules.titanium.ui.TabGroupProxy.onWindowActivityCreated(TabGroupProxy.java:462)  [ERROR] TiExceptionHandler:     org.<USER>titanium.TiBaseActivity.onCreate(TiBaseActivity.java:756)  [ERROR] TiExceptionHandler:     org.<USER>titanium.TiActivity.onCreate(TiActivity.java:47)  [ERROR] TiExceptionHandler:     android.app.Activity.performCreate(Activity.java:8000)  [ERROR] TiExceptionHandler:     android.app.Activity.performCreate(Activity.java:7984)  [ERROR] TiExceptionHandler:     android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1309)  [ERROR] TiExceptionHandler:     android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3422)  [ERROR] TiExceptionHandler:     android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3601)  [ERROR] TiExceptionHandler:     android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:85)  [ERROR] TiExceptionHandler:     android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:135)  [ERROR] TiExceptionHandler:     android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:95)  [ERROR] TiExceptionHandler:     android.app.ActivityThread$H.handleMessage(ActivityThread.java:2066)  [ERROR] TiExceptionHandler:     android.os.Handler.dispatchMessage(Handler.java:106)  [ERROR] TiExceptionHandler:     android.os.Looper.loop(Looper.java:223)  [ERROR] TiExceptionHandler:     android.app.ActivityThread.main(ActivityThread.java:7656)  [ERROR] TiExceptionHandler:     java.lang.reflect.Method.invoke(Native Method)  [ERROR] TiExceptionHandler:     com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:592)  [ERROR] TiExceptionHandler:     com.android.internal.os.ZygoteInit.main(ZygoteInit.java:947)  {code}    *Expected Result:*  Should not crash if the [Tab.badge|https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Tab-property-badge] property is not set. However, if the code does set this property, then this error does make sense because it can't natively work without using a {{Theme.MaterialComponents}} derived theme. So, it should only throw or log the exception when this property is assigned.  ",Bug,Critical,Resolved,"2020-10-13 00:05:51","2020-10-13 00:05:51",3
"The Titanium SDK ","macOS: CLI does not generate macOS icons","When generating app icons, the CLI does not handle macOS icons so far (seen via a slack question), making it impossible to deploy the app to the Mac App Store",Bug,High,Resolved,"2020-10-09 14:26:29","2020-10-09 14:26:29",3
"The Titanium SDK ","Android: Add Ti.Media.requestPhotoGalleryPermissions() support","*Summary:*  We should add the following methods on Android for parity with iOS...  * [Ti.Media.requestPhotoGalleryPermissions()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Media-method-requestPhotoGalleryPermissions]  * [Ti.Media.hasPhotoGalleryPermissions()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Media-method-hasPhotoGalleryPermissions]    *Functionality:*  On Android 9 and below, these methods should check if the app has {{WRITE_EXTERNAL_STORAGE}} permission.    On Android 10 and above, these methods should always return {{true}} since we do not need write permission to save a photo/video to the gallery once [TIMOB-28059] has been implemented. Google documents this here...  https://developer.android.com/training/camera/photobasics#TaskPath    *Note:*  Currently, Titanium app developers must use the [Ti.Filesystem.requestStoragePermissions()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem-method-requestStoragePermissions] and [Ti.Filesystem.hasStoragePermissions()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem-method-hasStoragePermissions] methods before saving to the gallery. This is okay, but we don't need to check for {{WRITE_EXTERNAL_STORAGE}} permission on Android 10 and above when saving to the gallery. We also don't want to change the [Ti.Filesystem.requestStoragePermissions()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem-method-requestStoragePermissions] method's implementation since it's still needed in case you want to write to other locations on external storage.  ",Improvement,Medium,Closed,"2020-10-09 03:03:48","2020-10-09 03:03:48",5
"The Titanium SDK ","iOS 14: Default date picker crashes when setting dateTimeColor","Taken from TiSlack:    ---    Seems like iOS 14 doesn’t like the dateTimeColor property (causes crash when using a picker with type Ti.UI.PICKER_TYPE_DATE). — Is there any alternative way to change a picker’s text color?    *Crash Error (simulator & device)*      ---    The reason is that Titanium uses non-offical API's for this (reflection), which is generally okay but error prone for new releases. This year, Apple changed the UIDatePicker styles a lot, causing the initial implementation to break. The fix is to guard iOS 14 as well as the used {{datePickerStyle}} (which I added for 9.2.0).    PR to fix this: https://github.com/<USER>titanium_mobile/pull/12167",Bug,High,Resolved,"2020-10-08 08:37:16","2020-10-08 08:37:16",5
"The Titanium SDK ","Android: Canceling out of Ti.Media.openPhotoGallery() causes a crash as of 9.1.0","*Summary:*  As of Titanium 9.1.0, calling {{Ti.Media.openPhotoGallery()}} and then backing-out of the gallery apps without making a selection will cause a crash on Android. This issue does not happen if you select a photo. It only happens when you cancel out.    *Steps to reproduce:*  # Build and run [^PhotoVideoSelectTest.js] on Android with Titanium 9.1.0 or higher.  # When the alert dialog appears, select Photo.  # Back out of the photo gallery app. _(Do NOT select a photo.)_  # Notice the app crashes.        *Note:*  [~<USER> has an end-user that has this issue on a OnePlus A3003. The end-user claims that an image is being selected, although this crash should only happen if you cancel out of the gallery. Either way, the line of code that it's crashing on indicates no selection was made.",Bug,Critical,Resolved,"2020-10-07 16:01:58","2020-10-07 16:01:58",1
"The Titanium SDK ","Android: createTempFile() should create file under Ti.Filesystem.tempDirectory","*Summary:*  On Android, the [Ti.Filesystem.createTempFile()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem-method-createTempFile] method creates the file under the root {{Ti.Filesystem.applicationCacheDirectory}} when it should be created under the {{Ti.Filesystem.tempDirectory}} instead like iOS.    *Steps to reproduce:*  # Build and run the below code on Android.  # In the log, notice {{nativePath}} is immediately under the {{cache}} folder.        *Note:*  On Android, the {{tempDirectory}} is a subfolder under the {{applicationCacheDirectory}}. This is okay since Android does not natively support both of these folders. You are expected to put temp files under the app's sandboxed cache folder. However, Titanium should keep temp files under a separate temp subfolder so that we can clean it ourselves on app startup and let the Android OS clean the rest of the cached files when needed.  ",Bug,Low,Resolved,"2020-10-07 19:50:44","2020-10-07 19:50:44",3
"The Titanium SDK ","Android: createTempDirectory() does not create a directory","*Summary:*  The [Ti.Filesystem.createTempDirectory()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem-method-createTempDirectory] method does not create the referenced directory by default on Android. It correctly returns a {{Ti.Filesystem.File}} object referencing a new directory, but the Titanium developer is forced to create it manually afterwards, which doesn't match iOS' behavior or what's implied by the method name.    *Steps to reproduce:*  # Build and run the below on Android.  # Notice in the log that exists returns {{false}}. _(This is the bug.)_        *Note:*  Android should also be changed to create the temp directory under the {{Ti.Filesystem.tempDirectory}} like iOS. Currently, Android puts the temp directory in a radically different location that Titanium does not offer a directory constant for.    *Work-Around:*  You must create the directory manually like the below.    ",Bug,Medium,Resolved,"2020-10-07 19:38:22","2020-10-07 19:38:22",3
"The Titanium SDK ","Android: Update gradle to 6.7","*Summary:*  Titanium currently uses gradle v6.5.1.  We should update gradle to v6.7.  https://docs.gradle.org/6.7/release-notes.html    *To-Do:*  We need to update the following file...  https://github.com/<USER>titanium_mobile/blob/master/android/gradle/wrapper/gradle-wrapper.properties  ",Improvement,Medium,Resolved,"2020-10-05 22:17:55","2020-10-05 22:17:55",1
"The Titanium SDK ","Android: ListViewItem does not activate ripple effect from child views","- Pressing on a child view within {{ListViewItem}} does not active the row ripple effect.    *TEST*      *EXPECTED*  - {{ListViewItem}} shows ripple effect anywhere the row is tapped, including child views.    *ACTUAL*  - {{ListViewItem}} does not display ripple effect when child view is tapped.",Bug,Medium,"In Progress","2020-10-05 01:45:54","2020-10-05 01:45:54",5
"The Titanium SDK ","Android: TableViewRow does not apply opacity to child views","- Setting {{opacity}} on {{TableViewRow}} has no effect on child views.    *TEST*  {code:js}  const win = Ti.UI.createWindow({ backgroundColor: 'gray' });  const row = Ti.UI.createTableViewRow({   height: 80,   opacity: 0.4,   backgroundColor: 'blue'  });  const label = Ti.UI.createLabel({   text: 'This view should be affected by row opacity',   textAlign: Ti.UI.TEXT_ALIGNMENT_CENTER,   backgroundColor: 'red',   width: '80%',   height: '80%'  });    row.add(label);    const table = Ti.UI.createTableView({    data: [ row ]  });    win.add(table);  win.open();  {code}    *EXPECTED*  - {{TableViewRow}} including child views, should be affected by {{opacity}}.    *ACTUAL*  - Only the {{TableViewRow}} background is affected by {{opacity}}.",Bug,Medium,"In Progress","2020-10-05 01:39:19","2020-10-05 01:39:19",5
"The Titanium SDK ","Android: TableViewRow does not activate ripple effect from child views","- Pressing on a child view within {{TableViewRow}} does not active the row ripple effect.    *TEST*  {code:js}  const win = Ti.UI.createWindow({ backgroundColor: 'gray' });  const row = Ti.UI.createTableViewRow({   height: 80,   backgroundColor: 'blue'  });  const label = Ti.UI.createLabel({   text: 'Pressing this should activate ripple',   textAlign: Ti.UI.TEXT_ALIGNMENT_CENTER,   backgroundColor: 'red',   width: '80%',   height: '80%'  });    row.add(label);    const table = Ti.UI.createTableView({    data: [ row ]  });    win.add(table);  win.open();  {code}    *EXPECTED*  - {{TableViewRow}} shows ripple effect anywhere the row is tapped, including child views.    *ACTUAL*  - {{TableViewRow}} does not display ripple effect when child view is tapped.",Bug,Medium,"In Progress","2020-10-05 01:34:30","2020-10-05 01:34:30",5
"The Titanium SDK ","Android: TableViewRow displays incorrect background upon press","- Pressing on a {{TableViewRow}} results in a incorrect row color.    *TEST*  {code:js}  const win = Ti.UI.createWindow({ backgroundColor: 'gray' });  const row = Ti.UI.createTableViewRow({   height: 80,   title: 'Row should not dull upon press',   backgroundColor: 'blue'  });  const table = Ti.UI.createTableView({    data: [ row ]  });    win.add(table);  win.open();  {code}    *EXPECTED*  - {{TableViewRow}} shows ripple animation over specified {{backgroundColor}}.    *ACTUAL*  - {{TableViewRow}} changes background to an unexpected color.",Bug,Medium,"In Progress","2020-10-05 01:27:01","2020-10-05 01:27:01",5
"The Titanium SDK ","Android: TableViewRow ignores borderRadius","- Specifying a {{borderRadius}} has no effect for {{TableViewRow}}.    *TEST*  {code:js}  const win = Ti.UI.createWindow({ backgroundColor: 'gray' });  const row = Ti.UI.createTableViewRow({   borderRadius: 20,   height: 80,   title: 'View should have a border radius',   backgroundColor: 'red'  });  const table = Ti.UI.createTableView({    backgroundColor: 'white',    data: [ row ]  });    win.add(table);  win.open();  {code}    *EXPECTED*  - {{TableViewRow}} has a {{borderRadius}} applied.    *ACTUAL*  - {{TableViewRow}} ignores {{borderRadius}}.",Bug,Medium,"In Progress","2020-10-05 01:15:57","2020-10-05 01:15:57",5
"The Titanium SDK ","Android: TableViewRow does not scale to height of parent","- Specifying {{Ti.UI.FILL}} or {{'100%'}} for {{TableViewRow.height}} does not scale to the parent {{TableView.height}}.    *TEST*  {code:js}  const win = Ti.UI.createWindow({ backgroundColor: 'gray' });  const row = Ti.UI.createTableViewRow({   height: Ti.UI.FILL,   title: 'View should fill TableView parent',   backgroundColor: 'red'  });  const table = Ti.UI.createTableView({    backgroundColor: 'white',    data: [ row ]  });    win.add(table);  win.open();  {code}    *EXPECTED*  - {{TableViewRow}} scales to parent {{TableView}} _height_.    *ACTUAL*  - {{TableViewRow}} contents are scaled to zero and are hidden.",Bug,Medium,"In Progress","2020-10-05 01:12:16","2020-10-05 01:12:16",5
"The Titanium SDK ","iOS: Compile error if using Ti.Media APIs without openPhotoGallery","h5.Description    Using Ti.Media APIs without using openPhotoGallery will cause a compile error            h5.Steps to reproduce    1. Add the above code to an existing app.js  2. Build for an iOS device {{appc run -p ios -T device --build-only}}    h5.Actual    Compile error    h5.Expected    No compile error",Bug,High,Closed,"2020-09-24 09:38:43","2020-09-24 09:38:43",3
"The Titanium SDK ","Android: App builds fail if it includes Java-WebSocket library","*Summary:*  If an app includes the Java-WebSocket library via gradle (or a module that references it via gradle), then it will fail to build.    *Steps to reproduce:*  # Create a Classic Titanium app project.  # Add the below build.gradle to project folder: {{./platform/android}}  # Build for Android.    ./platform/android/build.gradle  {code:groovy}  dependencies {   implementation 'org.java-websocket:Java-WebSocket:1.5.1'  }    [ERROR] [GRADLE]   java.lang.RuntimeException: Duplicate class org.java_websocket.AbstractWebSocket found in modules jetified-Java-WebSocket-1.5.1.jar (org.java-websocket:Java-WebSocket:1.5.1) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)    ",Bug,High,Resolved,"2020-09-22 14:43:14","2020-09-22 14:43:14",3
"The Titanium SDK ","iOS: app crashes when updating tableview","The customer is experiencing a crash when updating tableview on 9.1.0.GA, the crash does not happen on 9.0.3.GA    *Testcase*;        *Actual*;        *Expected*;    No crash and {{REQUIRED}} is displayed.  ",Bug,Critical,Closed,"2020-09-22 12:23:11","2020-09-22 12:23:11",5
"The Titanium SDK ","iOS 14 App Clips extension for titanium ","App Clips may be the entry point for retail that have never jumped the App service to cater to on-premise , proximity temporary apps.    https://developer.apple.com/app-clips/    They are small (10 mb apps) that doesn’t need to be downloaded from the App Store and can be used instantly.  Even though Android has thé équivalant Instant Apps, such features would enhance greatly and bring up to speed a feature that will be ubiquitous. Even more so than regular full on apps (which are still required even for an App Clip to be attached to it).    If it is possible to do so in Ti, an Example on Axway’s Developer blog would spread it faster among us developers.    ","New Feature",Critical,Closed,"2020-08-04 02:50:25","2020-08-04 02:50:25",5
"The Titanium SDK ","Android: Ti.Filesystem.File rename() should support an absolute path in same directory","This one shows up in our unit tests for Ti.Filesystem.File.rename. If we attempt to rename a file by passing in an absolute path for the destination (as a sibling of the original file path), the rename fails.    See: https://github.com/<USER>titanium_mobile/blob/master/tests/Resources/ti.filesystem.file.test.js#L619-L642    I assume the issue is related to the underlying code which constructs the destination file: https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/io/TiBaseFile.java#L359-L360",Improvement,Medium,Closed,"2020-09-18 17:21:23","2020-09-18 17:21:23",3
"The Titanium SDK ","iOS: modules hard-code path to TitaniumKit.xcframework in Xcode project from template","When a new module project is generated using a 9.2.0 SDK, the path to the TitaniumKit.xcframework folder is hard-coded to the absolute path inside the SDK used to generate the template.    We should be using a variable with a relative path so that when devs update the titanium.xcconfig to point at a different SDK install, the xcframework pointer also updates.",Bug,High,Closed,"2020-09-16 19:44:15","2020-09-16 19:44:15",3
"The Titanium SDK ","Android: WebView should request location permission when HTML uses geolocation API","*Summary:*  When a WebView HTML's JavaScript uses the [Geolocation|https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API] web API, it should automatically prompt the end-user for permission on Android 6.0 and above.    Currently, permission will always be denied unless you call the [Ti.Geolocation.requestLocationPermissions()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Geolocation-method-requestLocationPermissions] method yourself before loading the webpage.    *Test Case:*  # Create a Classic Titanium app project.  # Add the below Android permission to the tiapp.xml.  # Use the below app.js code.  # Build and run on Android 6.0 or higher.  # Tap on the Your Location button in the map.  # Verify a dialog appears asking you for permission. _(This is the feature we're adding.)_  # Grant permission.  # Verify map shows your current location.    tiapp.xml  {code:xml}  <ti:app>   <android>    <manifest>     <uses-permission android:name=android.permission.ACCESS_FINE_LOCATION/>    </manifest>   </android>  </ti:app>  {code}    app.js  {code:javascript}  var window = Ti.UI.createWindow();  window.add(Ti.UI.createWebView({   url: 'https://maps.google.com',   borderRadius: 1,  }));  window.open();  {code}  ",Improvement,Low,Resolved,"2020-09-16 04:32:58","2020-09-16 04:32:58",5
"The Titanium SDK ","iOS/macOS Catalyst: Cannot build iOS-only modules","When trying to build an iOS only module, it fails with multiple errors. The error can be reproduced in this module: https://github.com/hansemannn/titanium-widget-kit    The reason may be that the module contains the iOS-only framework WidgetKit. I unselected macOS support in the Xcode project, but the CLI still tries to build for Catalyst as well.",Bug,Critical,Closed,"2020-09-15 21:00:11","2020-09-15 21:00:11",8
"The Titanium SDK ","CLI: EEXIST error when reinstalling an SDK/module","h5.Description    When installing an SDK if a module has symlinks and that version of the module already existed on the system we will get the below error. I think we need to check if the file exists and either remove it first, or not create the symlink.        h5.Steps to reproduce    1. Install the latest SDK ti sdk install -b master -d  2. Remove that SDK  3. Install it again ti sdk install -b master -d    h5.Actual    Above error    h5.Expected     No error",Bug,None,Closed,"2020-09-15 15:57:18","2020-09-15 15:57:18",1
"The Titanium SDK ","iOS: Peek and pop should not be guarded by the SDK","Currently, the peek and pop APIs are guarded by a {{\[Utils isForceTouchSupported\]}} check (which I added back in the days). This is wrong, because nowadays, Apple also allows peek and pop on long press, if force touch is not available. In addition, such checks should in general be performed by the developer (if wanted), not by the SDK.    Therefore, removing the guard fixes the bug for us.    PR: https://github.com/<USER>titanium_mobile/pull/12045",Bug,Medium,Closed,"2020-09-12 16:20:41","2020-09-12 16:20:41",3
"The Titanium SDK ","CLI: SDK install not preserving symlinks inside zip file","macOS xcframework make extensive use of symlinks (mostly symlinked folders). The 3rd-party npm package we use to unzip (AdmZip) does not support symlinks and mangles the extracted symlinks in the SDK zip file.    I've been able to work around this in our build scripts, but it shows up in module builds if we use the CLI to install the SDK we want to build against - and therefore will show up for end developers.",Bug,Critical,Closed,"2020-09-11 18:16:53","2020-09-11 18:16:53",8
"The Titanium SDK ","iOS: TiUIListItemProxy overreleased causing intermittent crashing w/ macOS","Occasionally our unit test suite is crashing due to this issue, but it's always spitting out lots of warnings.      So I suppose we're double releasing the proxies?",Bug,High,Closed,"2020-09-11 17:22:29","2020-09-11 17:22:29",8
"The Titanium SDK ","iOS: App crashes when animation a view","The customer is experiencing a crash when animating a view.  they have just upgraded their application from 9.0.3.GA to 9.1.0.GA, the crash is nor present on the earlier SDK.    *Testcase*;        *Expected*;  Animation to happen successfully    *Actual*;        ",Bug,Critical,Closed,"2020-09-08 16:17:34","2020-09-08 16:17:34",5
"The Titanium SDK ","iOS: Unable to build using Xcode 11.3.1","h5.Description    When building an app using Xcode 11.3.1 the build will fail with the below error, we probably need to guard the API usage with an IS_SDK_IOS_134 or something      ",Bug,High,Closed,"2020-09-08 12:42:27","2020-09-08 12:42:27",3
"The Titanium SDK ","Android: AudioRecorder recording and stopped properties return the wrong state values","*Summary:*  The following {{Ti.Media.AudioRecorder}} properties return the wrong values...  * recording never returns {{false}} after calling {{pause()}} or {{stop()}}.  * stopped never returns {{false}} ever. It always returns {{true}}.    *Steps to reproduce:*  # Create a Classic app.  # Add the below permission to the tiapp.xml.  # Use attached [^AudioRecorderStatusTest.js] for the app.js.  # Build and run on Android.  # Notice the label Stopped: true. _(This is wrong. It should be false.)_  # Tap on the Start Recording button.  # Tap on the Pause Recording button.  # Notice the label Recording: true does not become {{false}}. _(This is wrong.)_  # Tap on the Resume Recording button.  # Tap on the Stop Recording button.  # Notice the label Recording: true does not become {{false}}. _(This is wrong.)_        *Expected Result:*  Only 1 of the below properties should be true at a time...  * recording - only {{true}} after calling {{start()}} or {{resume()}}  * paused - only {{true}} after calling {{pause()}}  * stopped - only {{true}} after creation or after calling {{stop()}}  ",Bug,Low,Resolved,"2020-09-01 03:18:04","2020-09-01 03:18:04",3
"The Titanium SDK ","iOS: Support new date picker styles from iOS 13.4 and iOS 14","iOS 13.4 and 14 are introducing new date picker styles (automatic, wheels, compact and inline). Titanium does not support those so far. Example:    {code:js}  var win = Ti.UI.createWindow({   backgroundColor: '#fff'  });    var picker = Ti.UI.createPicker({   type: Ti.UI.PICKER_TYPE_DATE,   datePickerStyle: Ti.UI.iOS.DATE_PICKER_STYLE_INLINE  });    win.add(picker);  win.open();  {code}    See the attachment for details!  ","New Feature",High,Closed,"2020-08-28 12:51:36","2020-08-28 12:51:36",8
"The Titanium SDK ","Android: Update module Kotlin language support to 1.4.x","*Summary:*  Titanium currently supports Kotlin language v1.3.72 when building native modules for Android.  We should update Kotlin to v1.4.x to support the language's newest features.  https://android-developers.googleblog.com/2020/08/new-language-features-and-more-in.html    *To-Do:*  Update the Kotlin version in the following files...  https://github.com/<USER>titanium_mobile/blob/master/android/build.gradle  https://github.com/<USER>titanium_mobile/blob/master/android/templates/build/root.build.gradle  ",Improvement,Low,Resolved,"2020-08-26 23:17:37","2020-08-26 23:17:37",1
"The Titanium SDK ","iOS: Unable to build Hyperloop Example app on iOS 14 using Xcode 12 Command line tools","When running the Hyperloop examples app on Xcode 12 command line tools and then running to 14.0 beta sim/device the following errors can be seen.    *Test Steps:*  # Download Hyperloop examples app  # Download the latest Xcode 12 beta  # Download the latest iOS 14 beta for device   # Run Hyperloop examples app     *Simulator error:*      *Device error:*      *Expected result:*  App should be able to build and run without any issues.    *Actual result:*  Above errors are shown.",Bug,High,Closed,"2020-08-26 15:29:45","2020-08-26 15:29:45",5
"The Titanium SDK ","TiAPI: Add OS version patch integer constants","*Feature Proposal:*  Add the following properties to {{Ti.Platform}}...  * {{Ti.Platform.versionPatch}}  // Returns an integer.    Also add the following global constants.  _(These will pair well with [OS_ANDROID|https://docs.<USER>com/platform/latest/#!/api/Global-property-OS_ANDROID] and [OS_IOS|https://docs.<USER>com/platform/latest/#!/api/Global-property-OS_IOS].)_  * {{OS_VERSION_PATCH}}    ","New Feature",Low,Closed,"2020-08-26 14:38:47","2020-08-26 14:38:47",5
"The Titanium SDK ","Polyfill for Node.js process does not return correct toString info","When using some Node.js libraries, they check for valid <USER>using something like       It is expected that this would return:       but instead it returns:           ",Bug,Medium,Closed,"2020-08-22 22:09:44","2020-08-22 22:09:44",3
"The Titanium SDK ","TiAPI: Add properties uprightWidth and uprightHeight to Ti.Blob","*Summary:*  When a Titanium {{Blob}} wraps an image, its width and height properties provide the decoded image's dimensions. Unfortunately, Android's native image loading APIs ignore a JPEG's EXIF orientation, meaning the image is loaded as-is (no rotation applied). While our {{ImageView}} and other APIs will correctly handle the EXIF orientation, the blob's width and height is for the unrotated image which makes it difficult to do manual layouts (ex: calculate letterbox scaling).    *Proposed Solution:*  Add the following properties to Titanium {{Blob}}:  * uprightWidth  * uprightHeight    The above properties will return what the image width and height should be when a JPEG's EXIF orientation is applied onscreen. If the image is not a JPEG or the JPEG has no EXIF orientation, then these properties will return the same values as width and height.    And since iOS loads images in the upright positions, the above properties will always return the same values as width and height.    *Use-Case:*  Developers need the image's actual width and height to do things like letterbox scaling. For example...      If the JPEG is loaded sideways (ie: its EXIF orientation is ignored), then the above will scale the image wrong.    *Note:*  This is an interim solution. A better solution would be to completely refactor Titanium's image loading code and decode the image in the upright position (pre-rotated). This will be a huge undertaking that is best done in a major Titanium release version. But when we do this, Android's uprightWidth and uprightHeight properties will match width and height just like iOS.  ",Improvement,Medium,Closed,"2020-08-20 21:41:13","2020-08-20 21:41:13",3
"The Titanium SDK ","Android: Native modules pinned to build Titanium SDK version","Building a Titanium Android native module with SDK 9.0.0+ will pin the module to require the SDK the module was built with or newer.    For example, building {{titanium-identity}} with {{9.0.3.GA}} will cause a build failure for any project builds that include the module and use a older Titanium SDK.    This is because the *.pom file generated depends on {{org.<USER>titanium}}:      *TEST CASE*  1. Build a native Android module using {{9.0.3.GA}} (i.e: https://github.com/<USER>modules/titanium-identity)  2. Include module in project that uses an older Titanium SDK (9.0.0, 9.0.2, ...)  3. Build will fail  ",Bug,Critical,Closed,"2020-08-20 16:25:40","2020-08-20 16:25:40",5
"The Titanium SDK ","Android: Rewrite Ti.UI.ListView to use RecyclerView","*Summary:*  Titanium's [Ti.UI.ListView|https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.ListView] is currently implemented on Android via the Java [ListView|https://developer.android.com/reference/android/widget/ListView] class. We should re-implement Titanium's {{ListView}} to use Android's [RecyclerView|https://developer.android.com/reference/androidx/recyclerview/widget/RecyclerView.html] instead.    *Reason:*  Google's {{RecyclerView}} offers the following features we would like to add for parity with iOS:  * Swipe Actions for rows.  * Drag-and-drop rows.    The above can be done via Google's [ItemTouchHelper|https://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper] Java class in combination with their {{RecyclerView}}.    *Note 1:*  In Android Studio's UI designer, Google's {{ListView}} is listed under the Legacy widgets tab. Google isn't deprecating {{ListView}}, but they're clearly favoring {{RecyclerView}} over it.",Improvement,Medium,"In Progress","2020-08-19 00:00:34","2020-08-19 00:00:34",21
"The Titanium SDK ","Android: Add NoTitleBar and Fullscreen themes which derive from custom app theme","*Summary:*  The only means of opening a window without top title bar is via its theme creation property set to 1 of the below. The problem with this is that the below themes inherit from Google's dark AppCompat theme and do not use the theme assi  * {{Theme.AppCompat.NoTitleBar}}  * {{Theme.AppCompat.NoTitleBar.Fullscreen}}  * {{Theme.AppCompat.Fullscreen}}    The problem with the above is that the above themes inherit from Google's dark {{Theme.AppCompat}} theme. If you've assigned a custom theme to the {{<application/>}} element in the AndroidManifest.xml, the window won't use it because you told it to use Google AppCompat derived theme instead.    *Reason this is Needed:*  Other than making it easier to remove the title bar, we also want to support Google's Material themed widgets in the near future. These widgets will throw an exception if the activity or app is not using a {{Theme.MaterialComponents}} derived theme and if most developers are using the {{Theme.AppCompat}} theme instead (like what our guides suggest), then the app will crash. We'll want to have developers transition off of these older Google themes.    *Recommended Solution:*  Create the following new themes...  * {{Theme.Titanium.NoTitleBar}}  * {{Theme.Titanium.Fullscreen}}  * {{Theme.Titanium.Translucent.NoTitleBar}}  * {{Theme.Titanium.Translucent.Fullscreen}}    _(We already have {{Theme.Titanium.Translucent}} defined which derives from app's theme.)_    Titanium's build system will derive the above themes from the one assigned to the {{<application/>}} in the AndroidManifest.xml as shown below. If a theme is not assigned, then they will derive from Titanium's default theme.      *Note:*  You can easily work-around this by setting up your own custom NoTitleBar theme like the below. This is easy to do, but doing the above makes removing title bars easier.    ","New Feature",Low,Resolved,"2020-08-18 01:22:16","2020-08-18 01:22:16",5
"The Titanium SDK ","Android: Modal/Translucent window ignores <navbar-hidden/> setting in tiapp.xml","*Summary:*  If tiapp.xml has {{<navbar-hidden/>}} set to {{true}}, then it is ignored by windows which...  * Have modal set to {{true}}  * Have an opacity less than {{1.0}}  * Have an RGBA background color with a transparent alpha  * Have a translucent theme    *Note:*  If a custom theme is applied to the {{<application/>}} element in the AndroidManifest.xml, then the {{<navbar-hidden/>}} setting should be ignored. This is because the custom theme takes priority and must hide the top ActionBar/TitleBar instead.    *Steps to reproduce:*  # Copy the below tiapp.xml setting.  # Build and run the below code on Android.  # Notice that the 1st window does not show title bar. _(This is good.)_  # Tap on the Show Translucent Window button.  # Notice that shown window has a tile bar. _(This is the bug.)_    tiapp.xml  {code:xml}  <ti:app>   <navbar-hidden>true</navbar-hidden>  </ti:app>  {code}    app.js  {code:javascript}  var parentWindow = Ti.UI.createWindow({   title: Parent Window,   backgroundColor: white,  });  var openButton = Ti.UI.createButton({   title: Show Translucent Window,   bottom: 15dp,  });  openButton.addEventListener(click, function() {   var childWindow = Ti.UI.createWindow({    title: Translucent Window,    backgroundColor: black,    opacity: 0.5,   });   childWindow.add(Ti.UI.createLabel({    text: This is the translucent window.,    color: white,   }));   childWindow.addEventListener(open, function() {    setTimeout(function() {     childWindow.close();    }, 1500);   });   childWindow.addEventListener(androidback, function() {    childWindow.close();    parentWindow.close();   });   childWindow.open();  });  parentWindow.add(openButton);  parentWindow.open();  {code}    *Work-Around:*  Use the Theme.AppCompat.Translucent.NoTitleBar theme.  {code:javascript}  var childWindow = Ti.UI.createWindow({   title: Translucent Window,   backgroundColor: black,   opacity: 0.5,   theme: Theme.AppCompat.Translucent.NoTitleBar, // <- Add this  });  {code}  ",Bug,Low,Resolved,"2020-08-15 00:49:29","2020-08-15 00:49:29",3
"The Titanium SDK ","Android: Update CardView to support material theme","*Summary:*  Our [Ti.UI.Android.CardView|https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Android.CardView] is currently using the Java [androidx.cardview.widget.CardView|https://developer.android.com/reference/androidx/cardview/widget/CardView] class. It should be updated to use the newer [com.google.android.material.card.MaterialCardView|https://developer.android.com/reference/com/google/android/material/card/MaterialCardView] class. The newer class supports the material theme styles.    *To-Do:*  We must replace the Java class used here...  https://github.com/<USER>titanium_mobile/blob/master/android/modules/ui/src/java/ti/modules/titanium/ui/android/CardViewProxy.java    *Breaking-Change:*  The app must use a Theme.MaterialComponents based theme or else an exception will occur. So, app's using a custom theme based from Theme.AppCompat or similar will crash. This is normal and the exception will state that the theme will need to change.  ",Improvement,Low,Open,"2020-08-13 23:35:17","2020-08-13 23:35:17",1
"The Titanium SDK ","Android: App build fails if it includes an Apache commons-logging library","*Summary:*  If an app includes an Apache commons-logging library via gradle (or a module that references it via gradle), then it will fail to build.    *Steps to reproduce:*  # Create a Classic Titanium app project.  # Add the below build.gradle file to project folder: {{./platform/android}}  # Build for Android.    ./platform/android/build.gradle  {code:groovy}  dependencies {   implementation 'commons-logging:commons-logging:1.1.3'  }    [ERROR] [GRADLE]   [ERROR] [GRADLE] FAILURE: Build failed with an exception.  [ERROR] [GRADLE]   [ERROR] [GRADLE] * What went wrong:  [ERROR] [GRADLE] Execution failed for task ':app:checkDebugDuplicateClasses'.  [ERROR] [GRADLE] > 1 exception was raised by workers:  [ERROR] [GRADLE]   java.lang.RuntimeException: Duplicate class org.apache.commons.logging.Log found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.LogConfigurationException found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.LogFactory found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.LogFactory$1 found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.LogFactory$2 found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.LogFactory$3 found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.LogFactory$4 found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.LogFactory$5 found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.LogFactory$6 found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.LogSource found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.AvalonLogger found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.Jdk13LumberjackLogger found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.Jdk14Logger found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.Log4JLogger found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.LogFactoryImpl found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.LogFactoryImpl$1 found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.LogFactoryImpl$2 found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.LogFactoryImpl$3 found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.LogKitLogger found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.NoOpLog found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.ServletContextCleaner found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.SimpleLog found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.SimpleLog$1 found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.WeakHashtable found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.WeakHashtable$1 found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.WeakHashtable$Entry found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.WeakHashtable$Referenced found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]   Duplicate class org.apache.commons.logging.impl.WeakHashtable$WeakKey found in modules jetified-commons-logging-1.1.3.jar (commons-logging:commons-logging:1.1.3) and jetified-titanium-9.2.0-runtime.jar (org.<USER>titanium:9.2.0)  [ERROR] [GRADLE]     [ERROR] [GRADLE]   Go to the documentation to learn how to <a href=d.android.com/r/tools/classpath-sync-errors>Fix dependency resolution errors</a>.  {code}    *Cause:*  Titanium is including its own copy of the {{commons-logging-1.1.1.jar}} as shown below.  https://github.com/<USER>titanium_mobile/tree/master/android/titanium/lib    *Solution:*  We should be referencing this library via gradle instead. This will allow gradle's dependency management resolve this for us.  Or we can remove our usage of this JAR.  ",Bug,Low,Resolved,"2020-08-12 01:07:06","2020-08-12 01:07:06",3
"The Titanium SDK ","Android: ACA module no longer loaded first on startup as of 8.1.0","*Summary:*  The ACA (AMPLIFY Crash Analytics) module, if included, was intended to be loaded on app startup before requiring/importing any other JS file on app startup. This way, if a crash occurs in any of the operations that happen before the app.js gets loaded, it will be handled by the ACA module. This is no longer happening as of Titanium 8.1.0.    *Cause:*  Most of the JS files loaded in our ti.main.js were switched over from using {{require()}} to {{import}} statements as of Titanium 8.1.0. JavaScript's {{import}} statements are hoisted, which means they are effectively executed at the top of the source file and not where they're actually written.  https://github.com/<USER>titanium_mobile/blob/master/common/Resources/ti.main.js    When you do a build of the SDK, you can see the babel transpiled/polyfilled result in the following directories. Here you can see the actual load order.    ",Bug,Medium,"In QE Test","2020-08-11 22:12:41","2020-08-11 22:12:41",3
"The Titanium SDK ","iOS14: Expose new APIs Titanium.Network.HTTPClient which will require while accessing local http server","In iOS 14, Due to local network access prompt it may be that request get failed while waiting for user's permission. See more detail in WWDC video https://developer.apple.com/videos/play/wwdc2020/10110/.   In titanium, we need to provide APIs corresponding to [waitsForConnectivity|https://developer.apple.com/documentation/foundation/urlsessionconfiguration/2908812-waitsforconnectivity]   and [timeoutIntervalForResource |https://developer.apple.com/documentation/foundation/urlsessionconfiguration/1408153-timeoutintervalforresource]","New Feature",High,Closed,"2020-08-11 19:53:47","2020-08-11 19:53:47",5
"The Titanium SDK ","iOS14: Expose new error type in Bonjure Service and update doc to align with Local n/w privacy restrictions ","In iOS 14, Apple has put restriction on accessing local network. It requires user permission.   To show the prompt developer need to add key [NSLocalNetworkUsageDescription|https://developer.apple.com/documentation/bundleresources/information_property_list/nslocalnetworkusagedescription?language=objc]  in tiapp.xml and if using Bonjure Service, that need to be added in info.plist using key [NSBonjourServices |https://developer.apple.com/documentation/bundleresources/information_property_list/nsbonjourservices] . More detail can be found in WWDC video https://developer.apple.com/videos/play/wwdc2020/10110/.  In iOS 14, new error [constant|https://developer.apple.com/documentation/foundation/nsnetserviceserror/nsnetservicesmissingrequiredconfigurationerror?language=objc] is given. In titanium, it need to added in Ti.Network.BonjureService and expose as error string.  ",Improvement,High,Closed,"2020-08-11 19:39:28","2020-08-11 19:39:28",3
"The Titanium SDK ","Android: DateTimeFormat mishandles some combinations of settings on Android 8","*Summary:*  If you set up {{Intl.DateTimeFormat}} to use 12-hour time and fractional digits on Android 8.x, then it will log an error and output a different format. This is not an issue on older or new Android OS versions.    *Steps to reproduce:*  # Build and run the below code on Android 8.  # Notice an error gets logged: {{Failed to generate 'best' date pattern.}}  # Notice displayed date is {{3/31/20 8:15 PM}} which doesn't match format settings.        *Result:*  The following error gets logged...      *Expected Result:*  No error should be logged.  The displayed date should be...      *Cause:*  This is a bug on Google's end. It is adding invalid format character {{'b'}} for the AM/PM component when it should be using format character {{'a'}} instead. This used to be a bug in Oracle's JDK as well...  https://bugs.openjdk.java.net/browse/JDK-8209047    Titanium was correctly catching the exception and falling-back to use a basic date/time format, but unfortunately that means it won't match the given format settings. (Having the fallback is still a good thing.)  ",Bug,High,Closed,"2020-08-07 03:06:24","2020-08-07 03:06:24",3
"The Titanium SDK ","TiAPI: Add vscode json files to app templates","*Summary:*  We should add {{.vscode/}} JSON configuration files to our Titanium app templates which hide the generated folders (like the build folder) and suggest VS Code users to use our extension.    *Classic App Folder Exclusion:*  For Classic apps, we only need to hide the {{./build}} folder from the editor and exclude it from file monitoring/search.    {{.vscode/settings.json}}  {code:json}  {   files.exclude: {    build/: true   },   search.exclude: {    build/: true   },   files.watcherExclude: {    build/: true   },  }      *Promoting Titanium's Extension:*  When opening the app project folder in VS Code, we can have the editor recommend the end-user to use our Titanium extension by adding the following JSON file.    {{.vscode/extensions.json}}  {code:json}  {   recommendations: [    axway.vscode-titanium   ]  }  {code}  ",Improvement,Low,Closed,"2020-08-05 22:13:25","2020-08-05 22:13:25",1
"The Titanium SDK ","Android: Setting border fills view when backgroundColor is not specified","- Setting a border will fill the view with {{borderColor}} if a {{backgroundColor}} is not specified    *TEST CASE*  {code:js}  const window = Ti.UI.createWindow({   backgroundColor: 'white'  });  const border = Ti.UI.createView({   width: 200,   height: 200,   borderRadius: 5,   borderColor: 'gray',   borderWidth: 3  });    window.add(border);  window.open();  {code}",Bug,Critical,Closed,"2020-08-03 21:08:12","2020-08-03 21:08:12",3
"The Titanium SDK ","iOS: Titanium not compatible with new Facebook SDK versions due to missing Swift files","Since Facebook SDK 7.0.0, their iOS SDK requires the project to contain at least one .swift file. Otherwise the build fails due to missing Swift standard libraries. And although Titanium already enables Swift for module compatibility, it does not seem to be enough so far.    The same issue is happening for other app frameworks like React Native and they workaround it by adding it to the Xcode project (which is not generated their but stable, an option Titanium has not).    Importance of the Facebook SDK 7+ upgrade: They fixed an issue with random server errors crashing the whole app that uses it, therefore it's a critical update developers should perform.",Bug,High,Closed,"2020-08-02 12:08:36","2020-08-02 12:08:36",5
"The Titanium SDK ","TiAPI: Add OS version major/minor integer constants","*Summary:*  Currently, you can only fetch the OS version as a string via the [Ti.Platform.version|https://docs.<USER>com/platform/latest/#!/api/Titanium.Platform-property-version] property. This is not convenient to use when you only want to call APIs on higher OS versions. For example, we've seen a lot of code that looks like the below.        *Feature Proposal:*  Add the following properties to {{Ti.Platform}}...  * {{Ti.Platform.versionMajor}}  // Returns an integer.  * {{Ti.Platform.versionMinor}}  // Returns an integer.    Also add the following global constants.  _(These will pair well with [OS_ANDROID|https://docs.<USER>com/platform/latest/#!/api/Global-property-OS_ANDROID] and [OS_IOS|https://docs.<USER>com/platform/latest/#!/api/Global-property-OS_IOS].)_  * {{OS_VERSION_MAJOR}}  * {{OS_VERSION_MINOR}}    This will make the above code example look simpler like this...      *Note:*  On Android, we have a [Ti.Platform.Android.API_LEVEL|https://docs.<USER>com/platform/latest/#!/api/Titanium.Platform.Android-property-API_LEVEL] constant which is a single integer used to represent all Android OS versions. It's best to use this if you can, but note that no other platform has a similar concept... while all operating system support a {{<major>.<minor>}} version that we can use for parity.  https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels  ","New Feature",Low,Closed,"2020-08-01 03:33:55","2020-08-01 03:33:55",5
"The Titanium SDK ","Android: Change Ti.Filesystem temp APIs to use app's cache folder","*Summary:*  The following APIs need to use app's scoped storage and avoid external storage.  * Ti.Filesystem.createTempDirectory()  * Ti.Filesystem.createTempFile()  * Ti.Filesystem.tempDirectory    *Note 1:*  We should write temp files according to Google's docs in the link below. They expect us to explicitly set the temp directory to the app's cache directory.  https://developer.android.com/training/data-storage/app-specific#internal-create-cache    *Note 2:*  Our {{Ti.Filesystem.tempDirectory}} property return...      Our {{Ti.Filesystem.createTempFile()}} and {{Ti.Filesystem.createTempDirectory()}} methods should change their base directory to the below to avoid collision with the above folder.      *Note 3:*  Our [TiTempFileHelper.java|https://github.com/<USER>titanium_mobile/blob/master/android/runtime/common/src/java/org/<USER>kroll/util/TiTempFileHelper.java] code (used to acquire a temp directory path) will use {{getExternalCacheDir()}} or {{getCacheDir()}} depending on if it has access to external storage or not. This may not be a good idea since the temp directory can suddenly change at runtime due to...  * End-user granting permission, making it dynamically switch to external storage.  * End-user ejects SD card, which makes temp path switch to internal storage.    It would be better for the path to be consistent for the app's lifetime. So, it should be hardcoded to internal storage via {{getCacheDir()}} like Google's examples.    *Note 4:*  Our HTTP response cache should favor internal storage's cache directory for improved security/privacy. That is what Google suggests in the link below and is what the Chrome browser app does. External storage is best used for large files intended to be shared (like downloaded files).  https://developer.android.com/reference/android/net/http/HttpResponseCache    If we do this, then we can remove our {{startExternalStorageMonitor()}} related code in [TiApplication.java|https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/TiApplication.java] and hard-code our {{TiResponseCache}} to always be the default. This means HTTP response caching will alway be enabled, even if you don't have external storage permission.  ",Improvement,High,Resolved,"2020-07-30 04:09:15","2020-07-30 04:09:15",8
"The Titanium SDK ","Android: Add foreground service type constants for camera and microphone","*Summary:*  Android 11 has added the following...  * [ServiceInfo.FOREGROUND_SERVICE_TYPE_CAMERA|https://developer.android.com/reference/android/content/pm/ServiceInfo#FOREGROUND_SERVICE_TYPE_CAMERA]  * [ServiceInfo.FOREGROUND_SERVICE_TYPE_MICROPHONE|https://developer.android.com/reference/android/content/pm/ServiceInfo#FOREGROUND_SERVICE_TYPE_MICROPHONE]    We should add the above to Titanium as constants...  * {{Ti.Android.FOREGROUND_SERVICE_TYPE_CAMERA}}  * {{Ti.Android.FOREGROUND_SERVICE_TYPE_MICROPHONE}}    *Note:*  These constants are to be passed to Titanium's [Service.foregroundNotify()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Android.Service-method-foregroundNotify] method which gives that foreground service permission to use these feature while the app is in the background.  ","New Feature",Low,Resolved,"2020-07-25 02:10:33","2020-07-25 02:10:33",3
"The Titanium SDK ","Android: Investigate ACCESS_BACKGROUND_LOCATION handling on Android 11","*Summary:*  Supposedly, Android 11 will no longer show a permission request dialog for the {{ACCESS_BACKGROUND_LOCATION}} permission. We need to confirm this.  https://developer.android.com/preview/privacy/location#background-location-permission-dialog-changes    If true, then the only way to enable permission is to go to the app's Location Permissions activity under system settings. This very well maybe true because according to Google's developer blog below, they will be removing apps using this permission from Google Play unless they provide a valid reason and pass Google's review <USER>  https://android-developers.googleblog.com/2020/02/safer-location-access.html    *Note 1:*  We might be able to reach the app's Location Permission activity under system settings via the following intent action.  {{ACTION_LOCATION_SOURCE_SETTINGS}}    *Note 2:*  We may need to expose Android's [shouldShowRequestPermissionRationale ()|https://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)] API. Normally, this method would return {{true}} if the end-user tapped on Disallow in the permission request dialog. On Android 11, this might always return {{true}} for the {{ACCESS_BACKGROUND_LOCATION}} where you would have to tell the end-user how to enable it under system settings.  ",Story,High,Resolved,"2020-07-25 01:20:26","2020-07-25 01:20:26",3
"The Titanium SDK ","Android: Target API Level 30 (Android 11) by default","*Summary:*  When building a Titanium app for Android, Titanium should target API Level 30 (aka: Android 11) by default.    Titanium currently targets API Level 29 (aka: Android 10).    *Note:*  Titanium currently does not target API Level 30 by default. This is a safety precaution until Titanium addresses all of Android 11's breaking changes. But a developer can opt-in to targeting the newest API Level (at their own risk) by adding the following to their tiapp.xml file.          ",Improvement,High,Open,"2020-07-25 00:06:43","2020-07-25 00:06:43",3
"The Titanium SDK ","Merge titanium-mobile-mocha-suite into titanium_mobile","We split out the test suite so that it could be used between iOS/Android (titanium_mobile) and Windows (titanium_mobile_windows). Given that Windows is dead, we should consider making our lives much easier and folding the test suite and tooling directly into the SDK repo (titanium_mobile). We would avoid the need to migrate tests back and forth and maintain branches/fixes on both repos.",Story,High,Resolved,"2020-07-23 17:17:04","2020-07-23 17:17:04",13
"The Titanium SDK ","CLI: Unable to find an iOS Simulator running iOS 14.0.","I'm seeing this locally, m as well s on the build node with Xcode 12 beta 2 installed.  trying to build an iOS app the CLI shows:    ",Bug,High,Closed,"2020-07-17 18:39:18","2020-07-17 18:39:18",3
"The Titanium SDK ","TiAPI: Deprecate WebView blacklistedURLs property in favour of blockedURLs","*I am not intending to open a debate with this ticket, there has been plenty of discussion within tech as to this term and others like it. We want to create a space that is inclusive to everyone, so if there are any issue that can cause people to feel unwelcome then we will strive to fix those issues*    h5.Description    Deprecate property {{blacklistedURLs}} and replace with {{blockedURLs}}.  https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.WebView-property-blacklistedURLs    Deprecate event {{blacklisturl}} and replace with {{blockedurl}}.  https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.WebView-event-blacklisturl    We should deprecate at the earliest convenience and look to remove in the next semver major release.",Story,None,Closed,"2020-07-17 15:08:02","2020-07-17 15:08:02",3
"The Titanium SDK ","Android: Build fails as duplicate string with app_name in i18n strings.xml file","Note: This is an undocumented way of doing it. But,we need to put in a check for this.    h5.Steps to reproduce:  1. Create an app.  2. Create a folder & a string.xml file for each locale as {{./i18n/en/strings.xml}} & {{./i18n/es/strings.xml}}  3. In strings.xml in en folder add:    4. In strings.xml in es folder add:    5. In the tiapp.xml add this in the android section:    6. Build for android device/emulator.    h5.Actual result:  The build fails with :      h5.Expected result:  The build should not fail.    h5.Recommended Solution:  The official cross-platform way of localizing app name is via an i18n app.xml file as documented here...  https://docs.<USER>com/platform/latest/#!/guide/Internationalization-section-src-29004892_Internationalization-Appnamelocalization    ",Bug,Low,Resolved,"2020-07-16 23:43:44","2020-07-16 23:43:44",3
"The Titanium SDK ","Install Xcode 12 betas to build nodes","In order to support building/testing on Xcode 12 and iOS 14, we will need at least one build node running the latest Xcode 14 beta.",Story,Critical,Closed,"2020-07-16 14:40:05","2020-07-16 14:40:05",8
"The Titanium SDK ","Android: Parity with iOS Shortcut click event payload","- Amend {{Ti.UI.Shortcut}} click event to include {{item}} as Shortcut item instead    *TEST CASE*  {code:js}  const window = Ti.UI.createWindow({ backgroundColor: 'grey', layout: 'vertical' });  const shortcut = Ti.UI.createShortcut();    let lastShortcutItem;    function test(title, callback) {   const button = Ti.UI.createButton({ title, top: 50 });   button.addEventListener('click', callback);   window.add(button);  }    test('ADD RANDOM SHORTCUT', _ => {   const rand = Math.floor(Math.random() * (999 - 1)) + 1;   const item = Ti.UI.createShortcutItem({       id: `test_shortcut_${rand}`,       title: `SHORTCUT_${rand}`,       description: `DESCRIPTION_${rand}`      });   lastShortcutId = item;   shortcut.add(item);  });    test('REMOVE LAST SHORTCUT', _ => {   try {    shortcut.remove(lastShortcutItem);   } catch { }  });    test('REMOVE ALL SHORTCUTS', _ => {   shortcut.removeAll();  });    test('NUMBER OF SHORTCUTS', _ => {   alert(`staticItems: ${shortcut.staticItems.length}`);   alert(`items: ${shortcut.items.length}`);  });    Ti.UI.Shortcut.addEventListener('click', e => {   // e should contain 'item'   console.log('shortcut: ' + JSON.stringify(e, null, 1));  });    window.open();  {code}",Bug,High,Closed,"2020-07-15 22:01:22","2020-07-15 22:01:22",3
"The Titanium SDK ","Android: Build fails with ACA 2.0.1 and SDK 9.0.0-9.0.2","h5.Steps to reproduce:  1. Create & build an app with ACA 2.0.1 module and SDK 9.0.0.GA, 9.0.1.GA, or 9.0.2.GA on android device/emulator.    h5.Actual results:  1. The build fails in gradle with:  {code}  [ERROR] :  [GRADLE]   [ERROR] :  [GRADLE] FAILURE: Build failed with an exception.  [ERROR] :  [GRADLE]   [ERROR] :  [GRADLE] * What went wrong:  [ERROR] :  [GRADLE] Could not determine the dependencies of task ':app:compileDebugJavaWithJavac'.  [ERROR] :  [GRADLE] > Could not resolve all task dependencies for configuration ':app:debugCompileClasspath'.  [ERROR] :  [GRADLE]    > Could not find org.<USER>titanium:9.0.3.  [ERROR] :  [GRADLE]      Required by:  [ERROR] :  [GRADLE]          project :app  [ERROR] :  [GRADLE]          project :app > ti:cloudpush:7.1.0  [ERROR] :  [GRADLE]    > Could not find org.<USER>titanium:9.0.3.  [ERROR] :  [GRADLE]      Required by:  [ERROR] :  [GRADLE]          project :app > hyperloop:hyperloop:5.0.3  [ERROR] :  [GRADLE]          project :app > ti:playservices:17.1.1  [ERROR] :  [GRADLE]    > Could not find org.<USER>titanium:9.0.3.  [ERROR] :  [GRADLE]      Required by:  [ERROR] :  [GRADLE]          project :app > com.<USER>aca:2.0.1  [ERROR] :  [GRADLE]   [ERROR] :  [GRADLE] * Try:  [ERROR] :  [GRADLE] Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.  [ERROR] :  [GRADLE]   [ERROR] :  [GRADLE] * Get more help at https://help.gradle.org  [ERROR] :  [GRADLE]   [ERROR] :  [GRADLE] BUILD FAILED in 1s  [ERROR] :  gradlew tool returned exit code: 1  [ERROR] Application Installer abnormal <USER>termination. Process exit value was 1  {code}    h5.Actual results:  1. The build should be successful.    *Work-Around 1:*  Build with Titanium 9.0.3.GA or higher.    *Work-Around 2:*  Use ACA module v2.0.0 instead by setting the following in tiapp.xml...  {code:xml}  <ti:app>   <modules>    <module platform=android version=2.0.0>com.<USER>aca</module>   </modules>  </ti:app>  {code}      ",Bug,None,Closed,"2020-07-14 00:56:16","2020-07-14 00:56:16",3
"The Titanium SDK ","iOS 14: Expose new APIs in Ti.UI.ScrollableView to customize indicator","In iOS 14, Apple has introduced new APIs to customize indicator image in UIPageControl.    https://developer.apple.com/documentation/uikit/uipagecontrol/3577679-preferredindicatorimage?language=objc    https://developer.apple.com/documentation/uikit/uipagecontrol/3577680-setindicatorimage?language=objc    Expose these APIs in titanium sdk .    New APIs-   Property -        Function -       ","New Feature",High,Closed,"2020-07-10 19:12:10","2020-07-10 19:12:10",5
"The Titanium SDK ","iOS: Ti.Blob images from device (via Ti.UI.View#toImage()) would report dimensions in points, not pixels","On Android, if we generate a Ti/Blob image from calling Ti.UI.View#toImage(), it reports width/height/size properly.    On iOS, it will report width and height in points, not pixels. size is therefore also incorrect.    Say we have a 10px x 10px view rendered to image on a 3x scale device. The blob will report width of 3, height of 3 and size of 9. The device will report density factor of 3. So naively multiple by that still gives us wrong values (of 9, 9, 81 respectively instead of 10, 10, 100).    UIImage holds a scale value for cases like this and we should multiply width/height by that on iOS to get true pixel values. (Doing so in this case we actually do end up with 10, 10, 100 because presumably the image scale is recorded as something like 3.3333?)",Bug,High,Closed,"2020-07-02 20:35:42","2020-07-02 20:35:42",5
"The Titanium SDK ","iOS: itemclick event its firing instead of a move event when ordering items in a list (iOS 13+)","When using iOS13 or 14 the itemclick event is fired when moving items in a listView instead of a Move event listener.    *Test Case:*      *Test Steps*  # Create a Titanium application   # Copy the code above into the {{app.js}}  # Run the app on a iOS 13/14 device  # Move one of the items in the listView around  # Notice a click event is fired   # Rerun application on a device/sim < iOS13  # Move one of the items in the listView around  # Notice Move event listener is fired and logged     *Expected result*  Following should be logged:    ",Bug,None,Closed,"2020-07-01 13:25:45","2020-07-01 13:25:45",5
"The Titanium SDK ","iOS 14: Expose new APIs given in WKWebView","In WKWebView Apple has given new APIs. e.g.  1. [pageZoom|https://developer.apple.com/documentation/webkit/wkwebview/3516411-pagezoom?changes=latest_minor&language=objc]  2. [createPDF|https://developer.apple.com/documentation/webkit/wkwebview/3516407-createpdfwithconfiguration?changes=latest_minor&language=objc]  3. [createWebArchivedData|https://developer.apple.com/documentation/webkit/wkwebview/3516408-createwebarchivedatawithcompleti?changes=latest_minor&language=objc]  4. [findString|https://developer.apple.com/documentation/webkit/wkwebview/3516409-findstring?changes=latest_minor&language=objc]    Expose these APIs in titanium.    Corresponding Titanium APIs -   1. Property      It already exists. Internal implementation, native side, will be changed.  2. Function        3. Function         4. Function      ","New Feature",High,Closed,"2020-06-25 19:11:14","2020-06-25 19:11:14",5
"The Titanium SDK ","iOS: Support .xcframework binaries","iOS does not support .xcframework binaries so far (available since WWDC 2019). All modern libraries are only available as .xcframeworks, so Titanium devs currently cannot use those libraries. Please fix this asap.","New Feature",Critical,Closed,"2020-06-25 19:02:12","2020-06-25 19:02:12",8
"The Titanium SDK ","iOS 14: Ensure widgets are working as expected in titanium apps via extension ","Apple has introduced Widgets in iOS 14 https://developer.apple.com/documentation/widgetkit. Titanium developers can use it via creating extensions and use extension in their project.    Try to create a widget extension and use it in sample app, run it and see if everything works as expected.   For creating extension see guide [here|https://wiki.<USER>org/display/guides2/Creating+iOS+Extensions+-+Siri+Intents]",Story,High,Closed,"2020-06-25 17:46:11","2020-06-25 17:46:11",5
"The Titanium SDK ","TiAPI: Add isTrusted property to Ti.UI.Slider change event","Component: Ti.UI.Slider  Platform: Android    At the moment it is not possible to differentiate between a user slide and a change of the value by code inside the change event. There is already a `fromUser` parameter inside the listener:  https://github.com/<USER>titanium_mobile/blob/master/android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUISlider.java#L315    Exposing that value inside the event:  https://github.com/<USER>titanium_mobile/blob/master/android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUISlider.java#L361    and changing the calls to that function to onProgressChanged(seekBar, curPos, false); (last parameter false) would only output true if the slider was dragged by the user.    PR and Test case will follow","New Feature",Medium,Closed,"2020-05-20 10:50:09","2020-05-20 10:50:09",5
"The Titanium SDK ","iOS 14: Expose API to use  Core Location AccuracyAuthorization","Apple has exposed new APIs CoreLocation framework e.g. https://developer.apple.com/documentation/corelocation/claccuracyauthorization?changes=latest_major  https://developer.apple.com/documentation/corelocation/cllocationmanager/3600217-requesttemporaryfullaccuracyauth?changes=latest_major  https://developer.apple.com/documentation/corelocation/cllocationmanager/3600216-requesttemporaryfullaccuracyauth?changes=latest_major.  Expose new APIs in SDK to use .    New APIs-   Constants -       Property (read-only)-        function -      ","New Feature",High,Closed,"2020-06-23 18:36:24","2020-06-23 18:36:24",8
"The Titanium SDK ","iOS 14: Make changes to run on default simulator of Xcode 12","1. Add XCode 12 mapping in ioslib.  2. Update SDK to use ioslib",Improvement,None,Closed,"2020-06-23 00:50:12","2020-06-23 00:50:12",1
"The Titanium SDK ","Android: Update V8 runtime to 8.4","- Upgrade V8 to the latest stable version {{8.4.371.19}}    - Maintain backwards compatibility",Improvement,High,Closed,"2020-06-18 20:46:42","2020-06-18 20:46:42",13
"The Titanium SDK ","iOS: Support iOS 14 and Xcode 12","This epic will track all the items required to enable support for iOS 14 and Xcode 12.  ",Epic,High,Resolved,"2020-06-17 17:45:42","2020-06-17 17:45:42",0
"The Titanium SDK ","Android: Always specify default Tab.tintColor","- Always specify default {{tintColor}} for tabs    *TEST CASE*  {code:js}  const tabGroup = Ti.UI.createTabGroup({   // style: Ti.UI.Android.TABS_STYLE_BOTTOM_NAVIGATION,   // tintColor: '#bbb' // NOTE: Workaround for 9.0.3  });    const tabWin_home = Ti.UI.createWindow({      title: 'Home',      backgroundColor: 'white'  });  const tab_home = Ti.UI.createTab({      title: 'Home',      window: tabWin_home  });    const tabWin_chat = Ti.UI.createWindow({   title: 'Chat',   backgroundColor: 'white'  });  const tab_chat = Ti.UI.createTab({   title: 'Chat',   window: tabWin_chat  });    tabGroup.addTab(tab_home);  tabGroup.addTab(tab_chat);  tabGroup.open();  {code}  - Unselected tab text and icon should be dimmer than selected tab.",Bug,Medium,Closed,"2020-06-16 23:08:49","2020-06-16 23:08:49",3
"The Titanium SDK ","Android: tiapp.xml setting <navbar-hidden> is ignored if <fullscreen> or <statusbar-hidden> is also not set as of 9.0.0","In tiapp.xml there is the property <navbar-hidden>. I set it to false and in 9.0.2.GA it doesn't worky anymore and I have to use (and I'm happy with it):    {code:tss}  TabGroup: {   theme: Theme.AppCompat.NoTitleBar  }  {code}    I just want to notice you of this thing.  ",Bug,High,Closed,"2020-06-08 19:14:03","2020-06-08 19:14:03",3
"The Titanium SDK ","Android: Implement Ti.View.borderRadius multiple values for custom edge radii","A developer should be able to configure custom border radii, e.g. bottom-left, bottom-right, top-left and top-right. The size of the radius can and should be reused from the existing border-radius property.    Example:  {code:js}  var win = Ti.UI.createWindow({      backgroundColor: '#333'  });    var view = Ti.UI.createView({      backgroundColor: '#fff',      height: 350,      bottom: 0,      borderRadius: '20px 20 20dp 15px',  });    win.add(view);  win.open();  {code}",Improvement,High,Closed,"2020-06-08 17:08:25","2020-06-08 17:08:25",5
"The Titanium SDK ","Android: Module builds should auto-download NDK r21c by default if needed","*Summary:*  When doing a module build, Titanium will auto-download NDK r20b (aka: 20.1.5948944) by default if NDK installations were found on the system.    The default should be updated to NDK r21c (aka: 21.2.6472646).  https://github.com/android/ndk/wiki/Changelog-r21#r21c    *Reason:*  The macOS distribution of the Android NDK r21c tools have been notarized by Google. This means module builds will no longer display several security popups on macOS Catalina.    *To-Do:*  Update the {{android.ndkVersion}} here...  https://github.com/<USER>titanium_mobile/blob/master/android/templates/module/generated/build.gradle  ",Improvement,High,Closed,"2020-06-04 23:05:57","2020-06-04 23:05:57",3
"The Titanium SDK ","Android: Update gradle build tools to 4.0.x","*Summary:*  Titanium currently builds with com.android.tools.build:gradle tool version {{3.6.2}}.  We should update it to {{4.0.0}}.  https://developer.android.com/studio/releases/gradle-plugin?buildsystem=ndk-build#4-0-0    *To-Do:*  We must update the following files...  https://github.com/<USER>titanium_mobile/blob/master/android/build.gradle  https://github.com/<USER>titanium_mobile/blob/master/android/templates/build/root.build.gradle    *Note:*  You must use Android Studio 4.x to build a project using Android gradle tools 4.0.0 or higher.  ",Improvement,Medium,Closed,"2020-06-04 22:52:27","2020-06-04 22:52:27",3
"The Titanium SDK ","iOS: TableViewRow does not return getRect methods ","When trying to get the {{rect.height}} the value does not change even through the tableViewRow height is increasing/changing. On the Android side this is working fine and the value is returned.     *Test Case:*      *Test Steps:*  # Create a new application with the code above  # Run the application  # Click on the {{Minus}} and {{Plus}} buttons  # Notice label does not change with the correct the values (even though height of the tableViewRow changes)",Bug,None,Reopened,"2020-06-04 13:23:58","2020-06-04 13:23:58",3
"The Titanium SDK ","Android: Update ti.playservices module to use 17.4.0","*Summary:*  The ti.playservices module should update the Google Play Services base library it uses from version {{17.1.0}} to {{17.4.0}}.  https://developers.google.com/android/guides/releases#august_18_2020    *Note:*  Google appears to have fixed the bug with their {{makeGooglePlayServicesAvailable()}} method where it would throw an exception when backing out of the activity that displayed the update dialog. This means we can use Google's standard update dialog instead of using our custom implementation here...  https://github.com/<USER>modules/ti.playservices/blob/master/android/Resources/ti.playservices/ti.playservices.js    ",Improvement,Low,Resolved,"2020-06-03 22:00:23","2020-06-03 22:00:23",1
"The Titanium SDK ","LiveView: Do not report disconnect errors to ACA","h5.Description    Currently when the liveview app code can't connect to the server it will spam errors (this will be improved in 9.1.0), however we should make sure that these errors also are not reported to ACA.    LiveView currently has a shim that overrides the old APM module that would make the functions a no-op, although I think that is too brute forcey. I think we are best to maybe try to suppress these errors somehow (probably by just handling them better), and then lastly trying to detect the error somehow in liveview and suppress if it is a liveview. (maybe we could prefix all errors with LIVEVIEW and check for that before sending onto ACA)",Improvement,None,Closed,"2020-06-03 19:05:35","2020-06-03 19:05:35",2
"The Titanium SDK ","iOS: iPad crashing intermittently during unit test suite","When the test suite runs on iPad, it tends to crash around the Ti.UI.iOS.WebViewConfiguration tests (not one specific test, though). i.e.    Please see the attached crash logs.    Looks like perhaps TiViewController's underlying _proxy pointer is null?    ",Bug,High,Closed,"2020-06-03 13:31:16","2020-06-03 13:31:16",5
"The Titanium SDK ","Android: Changing currently selected row's color in picker does not update shown color","Setting the color of a picker row dynamically does not show up the changed color. To show up the changed color we need to select another option and reselect the first one.    *Steps to reproduce:*  # Create a project using the app.js as below. Run on android device  # Select an option in the picker. The selected option should change text color but it does not show up the color change.  # Click on the picker again. The last selected option shows changed color in the drop down.  # Select another option and again the option selected in step 2. The changed color is shown now.  Note: On iOS calling the picker.reloadColumn() method reloads the picker and shows the changed color of the selected option.        *Expected Result:*  On android the color change of the option should show on the first time it is selected.    *Work-Around:*  Set the row's title text after setting the color. This force picker's text field to update.        ",Bug,Low,Closed,"2020-06-02 20:40:05","2020-06-02 20:40:05",3
"The Titanium SDK ","Android: chrome devtools URL is no longer valid","h5.Description    When debugging an Android app we log a message on how to connect to the debugger in Chrome which uses a {{chrome-devtools://}} URL. In Chrome 83 this URL has been removed and is now just {{devtools://}}    h5.Steps to reproduce    1. Build an Android app with {{--debug-host /localhost:9000}}  2. Try to open the chrome-devtools URL that gets logged    h5.Actual    URL doesnt work    h5.Expected     URL should work",Bug,High,Closed,"2020-05-29 11:46:38","2020-05-29 11:46:38",2
"The Titanium SDK ","Android: Incremental build duplicates bootstrap.json entries as of 8.1.0","*Summary:*  If a project contains a JS file ending with {{*.bootstrap.js}}, then every Android incremental build performed will duplicate its entry within our {{ti.internal/bootstrap.json}} file. This causes the bootstrap JS file to be executed multiple times on startup.    This regression was introduced in Titanium 8.1.0.    *Note:*  This only negatively impacts bootstraps that have an {{execute()}} function such as [ti.playservices|https://github.com/<USER>modules/ti.playservices/blob/master/android/Resources/ti.playservices/ti.playservices.bootstrap.js], because that function will end up being invoked multiple times.    *Steps to reproduce:*  # Create a Titanium app project.  # Copy the below {{test.bootstrap.js}} to the {{Resources}} directory.  # Build and run on Android.  # Notice a bootstrap dialog appears once. _(This is good.)_  # Build and run on Android again.  # Notice *two* bootstrap dialogs appear on startup. _(This is bad.)_  # Build and run on Android again.  # Notice *three* bootstrap dialogs appear on startup. _(This is bad.)_    \\  {{./Resources/test.bootstrap.js}}      *Cause:*  The incremental build changes made in Titanium 8.1.0 by [TIMOB-27043] moved bootstrap script finding code to our core [<USER>js-task.js|https://github.com/<USER>titanium_mobile/blob/master/cli/lib/tasks/<USER>js-task.js] file. The iOS {{_build.js}} was changed to not fetch bootstrap scripts itself anymore... but the same as not done in Android's {{_build.js}} which is why the entries are being duplicated.  ",Bug,Medium,Closed,"2020-05-21 20:24:46","2020-05-21 20:24:46",3
"The Titanium SDK ","TiAPI: Add ability to run in the background without UI","*Summary:*  The Titanium JS (JavaScript) runtime is currently tightly bound to the UI. The JS runtime is created when the native UI is created and the 1st script executed (the app.js or alloy.js) is expected to immediately create a window. On Android, the JS runtime is terminated once all windows have been destroyed and a new JS runtime will be created when the app's UI has been re-launched.    We should add a new feature which will create the Titanium JS runtime on app startup before it can natively host UI (if applicable) and keep the JS runtime running for the lifetime of the application <USER> On Android, this means destroying all UI will no longer terminate the JS runtime and a re-launch will re-use the existing JS runtime.    This should be an opt-in feature since this may require the app developers to re-architect their app launch behavior.    *Use-Cases:*  * On iOS, allow app to run tasks in the background via [BGTaskScheduler|https://developer.apple.com/documentation/backgroundtasks/bgtaskscheduler?language=objc].  * On Android, prevent JS runtime from being terminated after end-user backs out of all windows or OS forcibly destroys all windows but keeps app <USER>alive.  * On Android, allow developer to set up a {{BOOT_COMPLETED}} broadcast receiver to run backgrounding tasks after device boot-up.    *New tiapp.xml property:*  Setting this to {{true}} will enable this feature. The default is {{false}}.  {code:xml}  <ti:app>   <property name=run-in-background type=bool>true</property>  </ti:app>  {code}    *New {{Ti.UI}} property:*  * {{Ti.UI.hasSession}}: A read-only boolean property which returns {{true}} if the app can currently host UI. Will returns {{false}} if unable to host UI and creating windows is impossible.    *New {{Ti.UI}} event:*  (This event will only be fired if tiapp.xml property run-in-background is set {{true}}.)  * {{sessionbegin}}: Fired when it's time for the app to create its windows. Will only be fired if {{Ti.UI.hasSession}} property was previously {{false}}.    *Bootstrap JS Changes:*  Files ending with {{*.bootstrap.js}} should no longer display UI via their async {{execute()}} function anymore. We will add the following optional function that will be called just before the {{Ti.UI}} sessionbegin event gets fired so that bootstrap can inject their UI before the app can show its first window.  * {{showUI(callback)}}: Invoked on app startup after {{execute()}} only if {{Ti.UI.hasSession}} is {{true}}. From then on, this method will be invoked just before the {{Ti.UI}} sessionbegin event is fired.    Known bootstrap that show UI are...  [ti.playservices.bootstrap.js|https://github.com/<USER>modules/ti.playservices/blob/master/android/Resources/ti.playservices/ti.playservices.bootstrap.js]  [mocha - ui.bootstrap.js|https://github.com/<USER>titanium-mobile-mocha-suite/blob/master/Resources/bootstraps/ui.bootstrap.js]    *Classic App Usage:*  For a Classic app, the app.js should look like the below. Note that the app.js can be executed in the background while the app is incapable of hosting UI.  {code:javascript}  // Listen for an event indicating when it's time to create/re-create app UI.  // On Android, this will be fired every time you back out and re-launch.  Ti.UI.addEventListener('sessionbegin', () => {   openRootWindow();  });    // On startup, only create window if app is currently capable of hosting UI.  if (Ti.UI.hasSession) {   openRootWindow();  }  {code}    *Alloy App Usage:*  Alloy users do not have to worry about window creation at launch. It is Alloy's responsibility to open/re-open the root window when needed.    On our end, we will have to change Alloy's app.js code generation to do something similar to the Classic code example above.    *Backgrounding Pro-Tips:*  * On iOS, you must use [URLSession|https://docs.<USER>com/platform/latest/#!/api/Modules.URLSession] to do networking in the background.  * On Android, you must set up a [Foreground Service|https://docs.<USER>com/platform/latest/#!/api/Titanium.Android.Service] to perform networking, geolocation, and other tasks in the background. It also signals the OS to not forcibly terminate the backgrounded app.  ","New Feature",Low,"In Progress","2020-05-16 00:09:37","2020-05-16 00:09:37",13
"The Titanium SDK ","TiAPI: Handle semantic colors (dark mode) without helper function","Titanium supports dark mode pretty okay, which is a great achievement! Unfortunately, there is one major issue when using it's API's right now: One has to fetch the colors via {{Ti.UI.fetchSemanticColor}} which does not work in Alloy (neither when styling in XML views nor in TSS styles). Users should create a mapping that fetches the color on the app start and write it to something more accessible like {{Alloy.CFG.styles.myColor}}. That is fine until you have 200+ colors that slow down the app launch by seconds (!) because all colors of the app need to be set before even shown    *Suggestion*: Be able to pass semantic colors just like normal css colors, e.g.  {code:js}  '#myView': {    backgroundColor: 'contentBackgroundColor'  }  {code}  which works with just one line of code inside the color handling of iOS (WebColor.m) / Android (TiColorHelper.java). It will lead to a notable performance boost on both startup and view presentation, since we don't have to do any manual color matching anymore.  ",Improvement,High,Closed,"2020-05-10 07:48:27","2020-05-10 07:48:27",13
"The Titanium SDK ","Android: Update toLocale*String() methods to support locale/options","*Summary:*  On Android, the following methods ignore the {{locales}} and {{options}} arguments. They also ignore the current locale and always use {{en-US}} when formatting a string.  * [Date.toLocaleString()|https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString]  * [Date.toLocaleDateString()|https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleDateString]  * [Date.toLocaleTimeString()|https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString]  * [Number.toLocaleString()|https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString]  * [String.localeCompare()|https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare]  * [String.toLocaleLowerCase()|https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleLowerCase]  * [String.toLocaleUpperCase()|https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleLowerCase]    On iOS, the above methods *+do+* support locale/options.  We should add the same on Android for parity and to better support the standard JavaScript APIs.    *Note:*  To add official {{Intl}} support to V8, we would have to {{#if}} it in, but this involves adding the ICU (International Components for Unicode) C++ library which is about 20 MB per architecture. This is too big and is not mobile friendly. Especially since Google Play has a 100 MB limit on APKs. So, the most reasonable solution is to implement this ourselves in Java.    *Alternatives:*  On older Titanium versions, your only option to generate localized strings was via APIs:  * [String.formatDecimal()|https://docs.<USER>com/platform/latest/#!/api/Global.String-method-formatDecimal]  * [String.formatDate()|https://docs.<USER>com/platform/latest/#!/api/Global.String-method-formatDate]  * [String.formatTime()|https://docs.<USER>com/platform/latest/#!/api/Global.String-method-formatTime]  ",Improvement,Medium,Closed,"2020-05-08 18:57:40","2020-05-08 18:57:40",8
"The Titanium SDK ","Android: Add Intl.Collator support","*Summary:*  On Android, we should add support for the JavaScript {{Intl.Collator}} class.  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator    A collator is used to do localized string comparisons. This allows an app to correct sort text for the current locale/language.    This is already supported on iOS. We should add it to Android for parity.    *Note:*  To add official {{Intl}} support to V8, we would have to {{#if}} it in, but this involves adding the ICU (International Components for Unicode) C++ library which is about 20 MB per architecture. This is too big and is not mobile friendly. Especially since Google Play has a 100 MB limit on APKs. So, the most reasonable solution is to implement this ourselves in Java.  ","New Feature",Medium,Closed,"2020-05-08 18:41:55","2020-05-08 18:41:55",5
"The Titanium SDK ","Android: Add Intl.DateTimeFormat support","*Summary:*  On Android, we should add support for JavaScript class {{Intl.DateTimeFormat}}.  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat    This is already supported on iOS. We should add it to Android for parity.    *Note:*  To add official {{Intl}} support to V8, we would have to {{#if}} it in, but this involves adding the ICU (International Components for Unicode) C++ library which is about 20 MB per architecture. This is too big and is not mobile friendly. Especially since Google Play has a 100 MB limit on APKs. So, the most reasonable solution is to implement this ourselves in Java.    *Alternatives:*  On older Titanium versions, your only option to generate localized date/time strings was via APIs:  * [String.formatDate()|https://docs.<USER>com/platform/latest/#!/api/Global.String-method-formatDate]  * [String.formatTime()|https://docs.<USER>com/platform/latest/#!/api/Global.String-method-formatTime]  ","New Feature",Medium,Closed,"2020-05-08 18:35:37","2020-05-08 18:35:37",8
"The Titanium SDK ","Android: Support WebAssembly in V8","I tried to use protobufjs npm package, and found on a simulator session that it crashed when trying to load WebAssembly baked into the long.js code here:  https://github.com/dcodeIO/long.js/blob/master/src/long.js#L16    Here's the output:  ","New Feature",None,Resolved,"2020-05-07 15:43:56","2020-05-07 15:43:56",8
"The Titanium SDK ","Android: Unable to do a production build after switching SDK on Windows","When creating a production build with two different SDKs the following error can be seen:       *Note*: If you manually end the java-tm <USER>you are able to build    *Test Steps:*  # Open <USER>studio   # Create a new alloy application using SDK: 9.0.2.v20200505111803  # Package using the Android store option in the drop down menu   # Go through the prompts and select an output destination   # Wait for .APK and .AAB to be created  # Change SDK in the tiapp.xml to SDK: 9.1.0.v20200505112143  # Package again using the Android store option in the drop down menu   # Go through the prompts and select an output destination ",Bug,Medium,Closed,"2020-05-06 15:01:33","2020-05-06 15:01:33",5
"The Titanium SDK ","Android: ImageView tintColor has no effect","- {{Ti.UI.ImageView.tintColor}} fails to apply the defined color to the {{ImageView}}    *TEST CASE*  {code:js}  const win = Ti.UI.createWindow({ backgroundColor: 'white' });  const img = Ti.UI.createImageView({   width: '80%',   image: 'https://about.gitlab.com/images/press/logo/png/gitlab-icon-1-color-black-rgb.png',   tintColor: 'red'  });    win.add(img);  win.open();  {code}    *EXPECTED*  - Image should tint to defined color (red).    *ACTUAL*  - Image does not tint to defined color and remains black.",Bug,High,Closed,"2020-05-05 18:15:58","2020-05-05 18:15:58",3
"The Titanium SDK ","Android: ListView should only fire scrolling event when moving a min distance","Android's {{ListView}} can spam a scrolling event even when your finger is held at a single position. This is because there is currently no touch tolerance applied and 1 pixel scroll movement will fire the event. It should only fire a scrolling event when the scroll direction changes and for a minimum pixel distance specified by Google's [ViewConfiguration.getScaledTouchSlop()|https://developer.android.com/reference/android/view/ViewConfiguration#getScaledTouchSlop()] API.    ","New Feature",Medium,Closed,"2020-05-03 13:35:42","2020-05-03 13:35:42",5
"The Titanium SDK ","TiAPI: Add Ti.Locale.parseDecimal() method","*Summary:*  Titanium has APIs to turn numbers into localized strings, but there are no APIs to convert a localized numeric string back to a number type.    *Proposed Solution:*  Add the following method.  {{Ti.Locale.parseDecimal(text \[, locale \]); // Returns number type.}}    If the above was given an invalid string, then it will return {{NaN}} (Not-a-Number), which matches JavaScript's standard {{Number.parseFloat()}} method behavior.    *Main Use-Case:*  A {{TextField}} using a decimal keyboard type will be using the device's current locale for the decimal separator. This means the decimal separator will be a comma {{,}} in Europe. It will can also be a unicode decimal separator for Arabic locales. When reading the {{TextField}} string value property, the app developer will need an easy means of parsing the localized numeric string back to a JS number type.    *Test Cases:*  Converting a number to localized string and then back to a number.      Parsing equivalent numbers from 2 different locales.      Strings that cannot be converted to a number will return NaN.    ","New Feature",Medium,Closed,"2020-04-30 05:33:30","2020-04-30 05:33:30",5
"The Titanium SDK ","Android: Remove nineoldandroids library from SDK","*Summary:*  The Titanium SDK includes a nineoldandroids-appc-2.4.0.jar library used to back-port Google's Android 3.0 animation APIs on older Android OS versions. This library is no longer needed since Titanium's min Android OS version is 4.4.  https://github.com/JakeWharton/NineOldAndroids    *To-Do:*  Remove the JAR from here...  https://github.com/<USER>titanium_mobile/tree/master/android/titanium/lib    Switch to using Google's official Animation classes in...  [TiAnimationBuilder.java|https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/util/TiAnimationBuilder.java]    Remove {{ViewHelper}} class usage from...  * [TiUIView.java|https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/view/TiUIView.java]  * [TiBorderWrapperView.java|https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/view/TiBorderWrapperView.java]    ",Improvement,Low,Resolved,"2020-04-29 21:33:26","2020-04-29 21:33:26",5
"The Titanium SDK ","Android: Blob imageAsX() methods ignore EXIF orientation if not wrapping a file","*Summary:*  When a Titanium blob references a non-file type, such as a byte buffer or content:// URL, then the blob's {{imageAs*()}} methods will ignore a JPEG's EXIF orientation setting.    This affects the following methods:  * {{Blob.imageAsCropped()}}  * {{Blob.imageAsResized()}}  * {{Blob.imageAsThumbnail()}}  * {{Blob.imageWithAlpha()}}  * {{Blob.imageWithRoundedCorner()}}  * {{Blob.imageWithTransparentBorder()}}    *Steps to reproduce:*  # Build the attached  [^DownloadImageBlobTest.js] on Android.  # Tap on the Download button. (Requires Internet access.)  # Tap on JPEG - EXIF Rotate 90 in option dialog.  # Notice that the displayed resized image is not upright. (This is the bug.  # Do the same with all of the other EXIF options in the dialog. They all have this issue.  ",Bug,Medium,Closed,"2020-04-29 16:21:18","2020-04-29 16:21:18",5
"The Titanium SDK ","Android: Setting TextField/TextArea editable to false should allow user to copy text to clipboard","*Summary:*  When setting a {{TextField}}/{{TextArea}} object's editable property to {{false}}, the end-user should be able to select the text and copy it to the clipboard. Allowing this is typically the main purpose of making a field read-only.    If the app developer doesn't want the text to be selectable, then disabling it via the enabled property would be better.    *Note:*  On iOS, we currently support copying text from a read-only {{TextArea}}.  Unfortunately, iOS' {{TextField}} does not support this. (It should though.)  ",Improvement,Low,Closed,"2020-04-28 01:19:28","2020-04-28 01:19:28",8
"The Titanium SDK ","Android: KEYBOARD_TYPE_NUMBERS_PUNCTUATION should allow all chars except emoji like iOS","*Summary:*  On iOS, {{KEYBOARD_TYPE_NUMBERS_PUNCTUATION}} allows all characters to be entered such as letters (all languages), numbers, and symbols... but not emoji. The only difference between this keyboard type and {{KEYBOARD_TYPE_ASCII}} is that iOS shows the Numbers and Punctuations keyboard layout by default when shown, but still allows the end-user to switch keyboards if they wish.    On Android, this keyboard type won't let the end-user enter any letters/symbols from any language. It will automatically filter them out when the end-user attempts to enter them. This keyboard type should be changed to match iOS' behavior.    *Test Code:*      *Note 1:*  The iOS {{UIKeyboardTypeNumbersAndPunctuation}} and {{UIKeyboardTypeASCIICapable}} types are commonly used to display keyboards without emoji. This is the most important detail we need to replicate on Android.    *Note 2:*  Android does not have an API which lets us display the numbers side of the keyboard by default when using a normal text keyboard. So, this is something we can't replicate from iOS.  ",Improvement,Medium,Closed,"2020-04-28 01:09:44","2020-04-28 01:09:44",7
"The Titanium SDK ","Android: KEYBOARD_TYPE_ASCII should not allow emoji like iOS","*Summary:*  On iOS, {{KEYBOARD_TYPE_ASCII}} allows the end-user to enter all characters (including non-English letters) except emoji.    On Android, this keyboard type accepts all characters. It should be changed to filter out emoji characters for parity with iOS. If you want a keyboard that accepts all characters, then use {{KEYBOARD_TYPE_DEFAULT}} instead.    *Use-Case:*  You would normally use {{KEYBOARD_TYPE_ASCII}} for login/user name entry. Emoji characters are not typically appropriate for this type of input.    *Test Code:*    ",Improvement,Low,Closed,"2020-04-28 00:47:46","2020-04-28 00:47:46",7
"The Titanium SDK ","iOS13: Ti.UI.Window.barColor cannot be changed after it was appeared","After Ti.UI.Window opened on iOS13, its barColor property cannot be changed to another color. Before Ti.UI.Window opening, it works fine.    It seems to be related to this PR - [https://github.com/<USER>titanium_mobile/pull/11377|https://github.com/<USER>titanium_mobile/pull/11377]. I think this fix should be applied to setBarColor method as well.  ",Bug,Critical,Closed,"2020-04-23 09:35:32","2020-04-23 09:35:32",3
"The Titanium SDK ","Android: Add callback support to Ti.Platform.openURL()","*Summary:*  On Android, the {{Ti.Platform.openURL()}} method only supports the URL argument. The 2 optional arguments, options dictionary and callback, are ignored and only supported on iOS.  https://docs.<USER>com/platform/latest/#!/api/Titanium.Platform-method-openURL    We should add support for the callback argument for consistency with iOS.      *Note:*  The options dictionary should continue to be ignored since it only supports iOS settings. Meaning that the below should work on Android without issue.    ",Improvement,Low,Closed,"2020-04-22 00:29:23","2020-04-22 00:29:23",5
"The Titanium SDK ","Android: Add badge support to TabGroup","*Summary:*  We currently only support displaying badges in {{TabGroup}} tabs on iOS. We should add support to Android for parity.  https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Tab-property-badge  https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Tab-property-badgeColor    *To-Do:*  For the top tab style, we can use the material {{TabLayout.Tab}} class' {{getOrCreateBadge()}} and {{removeBadge()}} APIs.  https://developer.android.com/reference/com/google/android/material/tabs/TabLayout.Tab    For the bottom tab style, we can use the material {{BottomNavigationView}} class' {{getOrCreateBadge()}} and {{removeBadge()}} APIs.  https://developer.android.com/reference/com/google/android/material/bottomnavigation/BottomNavigationView    Both of the above tab classes use the material {{BadgeDrawable}} class which provides APIs such as {{setNumber()}}, {{setBackgroundColor()}}, etc.  https://developer.android.com/reference/com/google/android/material/badge/BadgeDrawable  ",Improvement,Medium,Resolved,"2020-04-21 17:29:12","2020-04-21 17:29:12",7
"The Titanium SDK ","Android: Animate elevation value","Currently it is not possible to animate the elevation value. Other values can be animated.     ",Improvement,Medium,Closed,"2020-04-19 13:27:01","2020-04-19 13:27:01",5
"The Titanium SDK ","Android: Production builds no longer copy AAB to distribution folder as of 9.0.1","*Summary:*  As of Titanium 9.0.1, a production build no longer outputs an AAB (Android App Bundle) file to the distribution directory. The build does create the AAB file under the build directory, but not to the desired location.    *Steps to reproduce:*  # Delete the last built APK and AAB files from the distribution folder.  # Set up a project to build with 9.0.1.  # Build for production.  # Go to the selected Distribution folder.  # Notice the AAB file is missing. Only the APK file is there.    *Work-Around:*  The AAB file can be found under the following folder instead...    ",Bug,Critical,Closed,"2020-04-17 16:35:22","2020-04-17 16:35:22",3
"The Titanium SDK ","Android: App/Module builds fail with JDK 14 as of 9.0.0","*Summary:*  When building an app or module with Titanium 9.0.0, the build will fail if JDK 14 is installed.    Titanium 8.3.x builds fine with JDK 14... except for Hyperloop builds: [TIMOB-27780]    *Steps to reproduce:*  # Install JDK 14.  # Create a Titanium app project.  # Build with Titanium 9.0.1 for Android. (9.0.1 supports JDK 13.)    *Result:*      *Cause:*  As of Titanium 9.0.0, we now build with gradle.  We need to upgrade gradle to v6.3.0 which recently added JDK 14 support.  https://docs.gradle.org/6.3/release-notes.html    *To-Do:*  In folder {{titanium_mobile/android}}, execute below command line to upgrade gradle wrapper files.      We should also update our {{com.android.tools.build:gradle}} tool to version {{3.6.2}} for files...  https://github.com/<USER>titanium_mobile/blob/master/android/build.gradle  https://github.com/<USER>titanium_mobile/blob/master/android/templates/build/root.build.gradle    *Note:*  You can have multiple JDK installations on Mac. You can list the JDK versions installed by entering the following at the command line.      You can select which installed JDK version to use by entering the following at the command line. You'll need to set the {{<JavaVersion>}} to what's installed, which the above command line will list. The below can be set in your {{.bash_profile}} file.      *Work-Around:*  Downgrade to JDK 13 for Titanium 9.0.1.  Downgrade to JDK 12 for Titanium 9.0.0. (See [TIMOB-27781])  (JDK 8 is the min version needed.)  ",Bug,Critical,Closed,"2020-04-16 01:04:57","2020-04-16 01:04:57",5
"The Titanium SDK ","Ti.version returns long version format when transpiled, short when not","If you execute an app with:  {code:js}  console.log(Ti.version);  {code}     If there app is being transpiled, it'll return a version like {{9.1.0.v20200409133428}} while if not transpiled, it'll return a version like {{9.1.0}}    As found/seen by <USER>here: https://github.com/<USER>titanium-mobile-mocha-suite/pull/241",Bug,High,Closed,"2020-04-15 18:27:19","2020-04-15 18:27:19",3
"The Titanium SDK ","iOS: Implement Tab tintColor and activeTintColor","Implement ability to specify a {{tintColor}} or {{activeTintColor}} for tab icons.    Currently, iOS has a number of properties that can be used to specify icon color.    *TabGroup*  - activeTabIconTint  - tabsTintColor  - tintColor  - unselectedItemTintColor    *Tab*  - tintColor    This change will +deprecate+ {{activeTabIconTint}}, {{tabsTintColor}} and {{unselectedItemTintColor}} in favor of {{tintColor}} and {{activeTintColor}} for parity with Android.    *TEST CASE*  {code:js}  const tabGroup = Ti.UI.createTabGroup({   // style: Ti.UI.Android.TABS_STYLE_BOTTOM_NAVIGATION  });    const tabWin_home = Ti.UI.createWindow({      title: 'Home',      backgroundColor: 'white'  });  const tab_home = Ti.UI.createTab({      icon: 'home.png',      title: 'Home',      titleColor: 'red',      activeTitleColor: 'blue',      tintColor: 'red',      activeTintColor: 'blue',      window: tabWin_home  });    const tabWin_chat = Ti.UI.createWindow({   title: 'Chat',   backgroundColor: 'white'  });  const tab_chat = Ti.UI.createTab({   icon: 'chat.png',   title: 'Chat',   titleColor: 'red',   activeTitleColor: 'blue',   tintColor: 'red',   activeTintColor: 'blue',   window: tabWin_chat  });    tabGroup.addTab(tab_home);  tabGroup.addTab(tab_chat);  tabGroup.open();  {code}",Improvement,Medium,Reopened,"2020-04-13 21:56:43","2020-04-13 21:56:43",3
"The Titanium SDK ","iOS: Calling Ti.Platform.openURL without all parameters causes the app to crash (regression)","When I use Ti.Platform.openURL, and the app goes to background, the app crashes with this error:    [ERROR] Script Error {  [ERROR]     toJSON = <KrollCallback: 0x600001e12380>;  [ERROR] } ",Bug,Critical,Closed,"2020-03-10 17:37:42","2020-03-10 17:37:42",5
"The Titanium SDK ","test: handle when android emulator restarts itself mid-suite","Sometimes the android emulator will automatically update one of the google play services modules (typically maps) and will spit out something like this in the logs:      We should detect this in our test suite handling code and either immediately fail or restart/retry. Otherwise the test suite effectively hangs until Jenkins kills it via the timeout.",Story,Low,Closed,"2020-04-13 14:48:15","2020-04-13 14:48:15",3
"The Titanium SDK ","Android: Style default tableViewSection headerTitle using XML","If you use the normal table headerTitle you have no option to style the text or create a headerView. This PR gives you at least the option to set a background/font color, border and text style using XML ressource files.    {code}  var win = Ti.UI.createWindow({   backgroundColor: #fff  });    var sectionFruit = Ti.UI.createTableViewSection({   headerTitle: 'Fruit'  });  sectionFruit.add(Ti.UI.createTableViewRow({   title: 'Apples',   color: #000  }));  sectionFruit.add(Ti.UI.createTableViewRow({   title: 'Bananas',   color: #000  }));    var sectionVeg = Ti.UI.createTableViewSection({   headerTitle: 'Vegetables'  });  sectionVeg.add(Ti.UI.createTableViewRow({   title: 'Carrots',   color: #000  }));  sectionVeg.add(Ti.UI.createTableViewRow({   title: 'Potatoes',   color: #000  }));    var table = Ti.UI.createTableView({   data: [sectionFruit, sectionVeg]  });    win.add(table);  win.open();    var sectionFish = Ti.UI.createTableViewSection({   headerTitle: 'Fish'  });  sectionFish.add(Ti.UI.createTableViewRow({   title: 'Cod',   color: #000  }));  sectionFish.add(Ti.UI.createTableViewRow({   title: 'Haddock',   color: #000  }));    table.insertSectionBefore(0, sectionFish);  {code}    app/platform/android/res/values/colors.xml      {code:xml}  <?xml version=1.0 encoding=utf-8?>  <resources>      <color name=headerTitleColor>#ff000000</color>  </resources>  {code}      app/platform/android/res/values/dimens.xml      {code:xml}  <?xml version=1.0 encoding=utf-8?>  <resources>     <dimen name=headerTitleSize>16sp</dimen>  </resources>  {code}      app/platform/android/res/values/strings.xml      {code:xml}  <?xml version=1.0 encoding=utf-8?>  <resources>     <string name=headerTitleStyle>bold</string>  </resources>  {code}      app/platform/android/res/drawable/titantium_ui_header_title_background.xml      {code:xml}  <layer-list xmlns:android=http://schemas.android.com/apk/res/android>   <item>    <shape android:shape=rectangle>     <!-- Bottom Border -->     <solid android:color=#33000000/>    </shape>   </item>   <item android:bottom=1dp>    <shape android:shape=rectangle>     <solid android:color=#ffff/>    </shape>   </item>  </layer-list>  {code}        ","New Feature",Critical,"In Review","2020-04-08 15:20:57","2020-04-08 15:20:57",5
"The Titanium SDK ","Android: Custom theme ignored by modal/translucent windows as of 9.0.0","*Summary:*  As of Titanium 9.0.0, a custom Android theme/style defined in XML is ignored by windows:  * With modal property set to {{true}}.  * With opacity property set less than {{1.0}}. (ie: translucent windows)    *Steps to reproduce:*  # Create a Classic app project with below files.  # Build and run on Android.  # Notice modal window's title bar is dark gray, but theme sets it to red.  # Notice button's text is in all caps, but theme sets it to use lowercase letters.    app.js      tiapp.xml      ./platform/android/res/values/my_theme.xml      ",Bug,High,Closed,"2020-04-08 00:51:37","2020-04-08 00:51:37",5
"The Titanium SDK ","Android: Repository specified in modules build.gradle is not able to be resolved when building an application","h5.Description    When providing an extra maven repository that provides a dependency in a modules build.gradle file, when building an application that uses that dependency cannot be resolved.    *Workaround*:    In your application, add a build.gradle to {{platform/android}} (classic) or {{app/platform/android}} (alloy) that contains the repository definition.     h5.Steps to reproduce    1. Copy the below to a build.gradle file in a module    2. Build the module using {{appc run -p android}} (so the app creation/building happens)    h5.Actual    During the *application build* the following error occurs        h5.Expected    My expectation is that the repository definition shouldn't be required in app and module (but I could be wrong)",Bug,High,Closed,"2020-04-07 12:37:06","2020-04-07 12:37:06",0
"The Titanium SDK ","Android: NavigationWindow doesnt trigger open and close events","As per the docs the [open|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.NavigationWindow-event-open] and [close|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.NavigationWindow-event-open] events must be triggered when the NavigationWindow opens and closes respectively.    This only works on iOS.    Here is a sample:  _controller.xml_    {code:xml}  <Alloy>   <NavigationWindow onOpen=onNavigationWindowOpen onClose=onNavigationWindowClose>    <Window>     <Label>Main</Label>    </Window>   </NavigationWindow>  </Alloy>  {code}    _controller.js_    {code:javascript}  // Arguments passed into this controller can be accessed via the `$.args` object directly or:  var args = $.args;    function onNavigationWindowOpen() {      Ti.API.info('Opened');  }    function onNavigationWindowClose() {      Ti.API.info('Closed');  }  {code}    Nor _Opened_ neither _Closed_ events were shown inside the console.",Bug,Critical,Closed,"2020-03-27 08:49:25","2020-03-27 08:49:25",3
"The Titanium SDK ","Android: Implement TabGroup.tintColor","Implement ability to specify a {{tintColor}} or {{activeTintColor}} for tab icons.    *TEST CASE*  {code:js}  const tabGroup = Ti.UI.createTabGroup({   // style: Ti.UI.Android.TABS_STYLE_BOTTOM_NAVIGATION  });    const tabWin_home = Ti.UI.createWindow({      title: 'Home',      backgroundColor: 'white'  });  const tab_home = Ti.UI.createTab({      icon: 'home.png',      title: 'Home',      titleColor: 'red',      activeTitleColor: 'blue',      tintColor: 'red',      activeTintColor: 'blue',      window: tabWin_home  });    const tabWin_chat = Ti.UI.createWindow({   title: 'Chat',   backgroundColor: 'white'  });  const tab_chat = Ti.UI.createTab({   icon: 'chat.png',   title: 'Chat',   titleColor: 'red',   activeTitleColor: 'blue',   tintColor: 'red',   activeTintColor: 'blue',   window: tabWin_chat  });    tabGroup.addTab(tab_home);  tabGroup.addTab(tab_chat);  tabGroup.open();  {code}",Bug,Medium,Closed,"2020-04-02 21:47:20","2020-04-02 21:47:20",3
"The Titanium SDK ","Android: TabGroup.titleColor has no effect","Attempting to specify a {{titleColor}} or {{activeTitleColor}} does not work, the TabGroup defaults to standard system colors.    *TEST CASE*  {code:js}  const tabGroup = Ti.UI.createTabGroup();    const tabWin_home = Ti.UI.createWindow({      title: 'Home',      backgroundColor: 'white'  });  const tab_home = Ti.UI.createTab({      icon: 'home.png',      title: 'Home',      titleColor: 'red',      activeTitleColor: 'blue',      window: tabWin_home  });    const tabWin_chat = Ti.UI.createWindow({   title: 'Chat',   backgroundColor: 'white'  });  const tab_chat = Ti.UI.createTab({   icon: 'chat.png',   title: 'Chat',   titleColor: 'red',   activeTitleColor: 'blue',   window: tabWin_chat  });    tabGroup.addTab(tab_home);  tabGroup.addTab(tab_chat);  tabGroup.open();  {code}",Bug,Medium,Closed,"2020-04-02 21:25:08","2020-04-02 21:25:08",3
"The Titanium SDK ","Android: High CPU usage in Android Studio","Opening titanium_mobile/android with Android Studio 3.6+ causes high CPU usage when viewing *.java files. This is an Android Studio pre-processor issue that can be worked around by disabling specific _Java Inspections_.    This bug has been reported and can be tracked: https://issuetracker.google.com/issues/152430526",Bug,High,Closed,"2020-03-25 21:10:31","2020-03-25 21:10:31",5
"The Titanium SDK ","Android: javascript files/content assumed to be binary for Ti.Blob on apilevel 29+","This was caught by our test suite on android emulator. It seems Android changed the underlying mime type mapping result for javascript files to report {{'application/javascript'}} (whereas before it reported {{'text/javascript'}})    Our TiBlob code assumes most {{'application/'}} mime types are binary, and as a result thinks JS files hold binary content.",Bug,High,Closed,"2020-03-25 17:31:19","2020-03-25 17:31:19",5
"The Titanium SDK ","Ti.UI.iPad.Popover including arrow in content view on iOS 13","As of iOS 13, Ti.UI.iPad.Popover's arrow is included as part of the content area. This was not the case in previous versions of iOS, and is causing content to be pushed outside the bounds of what is visible in the Popover on iOS 13 devices. It's probably an issue with safe area implementation in iOS 13.    See  !popover_ios13_issue.png|thumbnail!  for the difference between how it is working on iOS 13 and iOS 12.    Reproduction code:    ",Bug,Critical,Closed,"2020-03-18 04:27:47","2020-03-18 04:27:47",5
"The Titanium SDK ","ti.urlsession - Event sessioncompleted does not get all specified values","I'm using the module [ti.urlSession|https://github.com/<USER>modules/ti.urlsession] to fetch data in the background.  The issue is that when the download is complete and the event sessioncompleted fires, the input argument object doesn't contain all the values specified in the [documentation|http://docs.<USER>com/platform/latest/#!/api/Titanium.App.iOS-event-sessioncompleted], it's missing success, errorCode, message, responseText and statusCode. Basically all attributes connected to the http response.    To test this I set up a test application:    *index.js*  {code:javascript}  var URLSession = require(com.<USER>urlSession);  function doClick(e) {   alert($.label.text);   var sessionConfig = URLSession.createSessionConfiguration({identifier: test});   var session = URLSession.createSession({configuration: sessionConfig});   var task = session.downloadTask({url: http://ip.jsontest.com});  }  Ti.App.iOS.addEventListener('downloadcompleted', function(e) {   console.log('download complete', JSON.stringify(e));   if (e.data) {    console.log(e.data.text);   }  });  Ti.App.iOS.addEventListener('sessioncompleted', function(e) {   console.log('Session complete', JSON.stringify(e));  });  $.index.open();  {code}    *index.html*  {code:html}  <Alloy>   <Window class=container>    <Label id=label onClick=doClick>Hello, World</Label>   </Window>  </Alloy>  {code}    And this is the output that I get from running the application and tapping on the label:        I had this working last in Ti SDK 7.4.1.v20180927102822",Bug,Critical,Closed,"2020-03-18 10:15:21","2020-03-18 10:15:21",5
"The Titanium SDK ","Create scripts to convert YML APIdocs to docsy-compatible markdown","[~<USER> has already created tooling to do this for his prototype Vue-based doc site (https://<USER>github.io/titanium-docs/api/)  We'll need an automated way to consume our existing apiece YML format and output set of docsy-compatible markdown files that could be pushed to Open Docs.    The goal is to eventually publish the APIDocs as part of the open docs website.    The open issues/questions here are whether that is the right place for publishing API docs/references since they don't currently have any there. docs.axway.com has some auto-generated swagger UI API references for server products: https://docs.axway.com/category/api",Story,None,Open,"2020-03-23 13:38:46","2020-03-23 13:38:46",21
"The Titanium SDK ","Convert wiki guide content to Markdown compatible with Docsy","As part of our automated doc publishing <USER>we do an HTML export of the wiki content and eventually get that into JSDuck/Guides content that goes out to docs.<USER>com    We'd like to publish to the Open Docs project and will need a way to convert the exported wiki contents into docsy-compatible markdown. Ideally e'd run this in an automated way without manual tweaks as for some time we'll have both endpoints/sites as targets (and downstream changes to markdown would get overwritten by the next publish).",Story,None,Closed,"2020-03-23 13:35:22","2020-03-23 13:35:22",13
"The Titanium SDK ","iOS: Improve display of uncaught errors","The error display on iOS is currently a little confusing and prints unrelated follow up errors that shouldn't be displayed at all.    A very simple error like this    {code:js}  throw new Error('My simple error');    [ERROR] Script Error {  [ERROR]     column = 16;  [ERROR]     line = 512;  [ERROR]     message = My simple error;  [ERROR]     sourceURL = file:///Users/<USER>Library/Developer/CoreSimulator/Devices/277C69FF-FFFF-43E3-BC8F-17B4D7B91E52/data/Containers/Bundle/Application/D76755F9-D059-418E-B8E5-BB666A380AE7/global-test-classic.app/app.js;  [ERROR]     stack =     at (/app.js:512:16)\n    at global code(/app.js:515:70)\n    at require@[native code]\n    at (/ti.main.js:13057:10)\n    at loadAsync(/ti.main.js:12985:13)\n    at global code(/ti.main.js:13054:10);  [ERROR]     toJSON = <KrollCallback: 0x600000f5a980>;  [ERROR] }   [ERROR] Script Error {  [ERROR]     column = 10;  [ERROR]     line = 13057;  [ERROR]     message = Module \app.js\ failed to leave a valid exports object;  [ERROR]     sourceURL = file:///Users/<USER>Library/Developer/CoreSimulator/Devices/277C69FF-FFFF-43E3-BC8F-17B4D7B91E52/data/Containers/Bundle/Application/D76755F9-D059-418E-B8E5-BB666A380AE7/global-test-classic.app/ti.main.js;  [ERROR]     stack =     at require@[native code]\n    at (/ti.main.js:13057:10)\n    at loadAsync(/ti.main.js:12985:13)\n    at global code(/ti.main.js:13054:10);  [ERROR]     toJSON = <KrollCallback: 0x600000f52580>;  [ERROR] }  {code}    It is not formatted at all and makes it hard to read the actual stack trace. Additionally, there is not one, but two errors shown, which is not correct.    The follow up error Module \app.js\ failed to leave a valid exports object should be ignored and not shown at all. This is especially problematic in the error modal that will be shown on the device, where the latter error will be shown first. A user has to explicitly close this modal to get to the original error.",Improvement,High,Closed,"2020-03-20 13:34:51","2020-03-20 13:34:51",5
"The Titanium SDK ","Node: console.trace is not a function.","*Steps to reproduce the behavior*    {code:js}  console.trace('test');    console.trace is not a function. (In 'console.trace('test')', 'console.trace' is undefined)  {code}    *Expected behavior*    The message gets printed to the logs with {{trace}} log level.",Bug,None,Closed,"2020-03-13 17:32:46","2020-03-13 17:32:46",3
"The Titanium SDK ","Android: convertPointToView() returns pixels instead of default units","*Summary:*  Titanium's {{View.convertPointToView()}} method is hardcoded to return pixels on Android. The returned coordinates should be using the ti.ui.defaultunit assigned to the tiapp.xml instead, which defaults to dp.    iOS returns dp, not pixels. So, this is a parity issue.    *Steps to reproduce:*  # Build and run the below on Android.  # Attempt to drag one of the squares onscreen.  # Notice the square disappears.  # Uncomment the {{Ti.Android}} code block below. _(Converts pixels to dp.)_  # Rebuild for Android.  # Notice that dragging a square now works.  # Build and run on iOS.  # Notice that dragging a square now works.        *Work-Around:*  Convert the {{convertPointToView()}} method's returned results from pixels to dp only on Android as shown below.    ",Bug,Medium,Open,"2020-03-12 01:49:55","2020-03-12 01:49:55",5
"The Titanium SDK ","Open Photo Gallery not requiring permissions","When requesting access to the user's photo gallery on iOS, the app should not allow the gallery to display if permission has not been granted.    Simple test:  index.js          The photo gallery will display and you can select a photo and get a successful result.  ",Bug,Critical,Closed,"2019-12-06 22:24:19","2019-12-06 22:24:19",3
"The Titanium SDK ","Android: Building the SDK should auto-download NDK if not installed","*Summary:*  Google's gradle tool supports downloading the Android NDK for C/C++ builds. We should let it do so if the Titanium SDK is unable to find the NDK.    *Note:*  Currently, the SDK's {{node scons}} build scripts will fail the build if it can't find the NDK directory. Instead, it should generate a {{local.properties}} file without the {{ndk.dir}} property.  [createLocalPropertiesFile ()|https://github.com/<USER>titanium_mobile/blob/9a3e46dbea8083bce98dbae5c3795f669a2b7928/build/lib/android/index.js#L285]  ",Improvement,Low,Reopened,"2020-03-10 23:50:31","2020-03-10 23:50:31",3
"The Titanium SDK ","Android: Module build should auto-download NDK if not installed","*Summary:*  Google's gradle tool supports downloading the Android NDK for C/C++ builds. Titanium's module build system should automatically download the NDK in case it's not already installed. This will help reduce tech-support issues.    *Recommended Solution:*  When we upgrade the Android gradle plugin to v3.6.0 or higher, we can specify the exact NDK version we want to download in the {{build.gradle}} as follows.  https://developer.android.com/studio/projects/install-ndk#apply-specific-version  {code:groovy}  android {   ndkVersion major.minor.build  }    No version of NDK matched the requested version 19.2.5345600. Versions available locally: 20.1.5948944    No version of NDK matched the requested version 20.0.5594570. Versions available locally: 20.1.5948944  {code}    It seems like when new NDK versions get released, older NDK versions appear to stop downloading via gradle (this is speculation). Because of this, we should avoid this feature at the moment. If we don't set the NDK version in gradle, then the gradle build system will download the newest NDK version which has a minor issue noted in [TIMOB-27776] but it still works.  ",Improvement,Medium,Closed,"2020-03-10 18:42:35","2020-03-10 18:42:35",3
"The Titanium SDK ","Android: Unable to see error event in remote images","Using the test case below the error event in remote images is not fired unlike on iOS.    *Test Steps:*  # Create a new Titanium application   # Add the test case below in to the {{app.js}}  # Run the application    *Test Case:*      *Actual result*  Following Error is shown      *Expected Result*  Following should be seen in the console      ",Bug,None,Closed,"2020-03-10 15:35:20","2020-03-10 15:35:20",5
"The Titanium SDK ","Android: TableViewSection does not scroll after a certain point","When running the test case below the TableViewSection glitches out and stops scrolling down. (Last worked 8.0.1.GA)    *Test Steps:*  # Create a new Titanium application   # Add the test case below in to the {{app.js}}  # Run the application    *Test Case:*       *Expected Result:*  TableViewSection should scroll down across all section.    *Actual Result:*  TableViewSection does not scroll past the {{red}} heading.        ",Bug,None,"In Review","2020-03-10 14:07:28","2020-03-10 14:07:28",3
"The Titanium SDK ","Android: Improve kroll-apt incremental build times with SDK","*Summary:*  The Titanium SDK incremental build times should be improved. Every time we make a Java code change in the Titanium SDK library, our kroll-apt Java annotation processor always re-generates C++ files for all Java proxies in our library, even if the proxy classes haven't changed.    *Note:*  On my machine, the build system recognizes that the re-generated C++ files haven't changed since the last build and does an incremental C++ build. On [~<USER>' machine, the C++ incremental build does not work at all and recompiles all C++ files.    Incremental build times after making a Java code changes takes {{20s}} for me and {{~1}} minute for Gary.    *To-Do:*  When our kroll-apt Java annotation processor reads all {{@Kroll}} annotations, it should read the last written JSON bindings file to see if the bindings have changed since the last build. If not, do not re-generate the proxy C++ files... unless the files are missing.  ",Improvement,High,Closed,"2020-03-07 02:55:52","2020-03-07 02:55:52",5
"The Titanium SDK ","iOS: Remove python dependency from SDK build","h5.Description    When building the iOS portion of the SDK, we use [a python script|https://github.com/<USER>titanium_mobile/blob/cc1b0554a72c271ed2050b3e7ee4ce27627804e3/support/dev/localecompiler.py] to do some handling of i18n files. We should rewrite this in the same timeframe as the Android changes (TIMOB-27719) to allow us to remove the python dependency at the same time",Improvement,Low,Closed,"2020-03-06 07:03:00","2020-03-06 07:03:00",5
"The Titanium SDK "," Android: Unable to view UI.Switch when it is turned off.","h6.Reproduce  1. Create a sample classic app.  2. Replace app.js content with the attached app.js content.  3. Run the app on an Android device.    h6.Problem  Observed an issue that we are not able to view switch properly if it is turned off in Android devices. Please find the attached screenshot for reference.",Bug,None,Closed,"2020-03-03 10:01:33","2020-03-03 10:01:33",1
"The Titanium SDK ","Buffer: Proxy object's 'set' trap returned falsy value for property '0'","*Steps to reproduce the behavior*    {code:js}  (function () {   'use strict';   const b = Buffer.alloc(1);   b[0] = 0;  })();  {code}    *Expected behavior*  The value will be set.    *Actual behavior*  Setting the value fails with the following error message: {{Proxy object's 'set' trap returned falsy value for property '0'}}",Bug,None,Closed,"2020-03-02 14:48:42","2020-03-02 14:48:42",3
"The Titanium SDK ","Android: Running clean on a module will error if libs folder does not exist","*Summary:*  When developing a module, running the {{appc ti clean}} command on a module directory that is missing a libs folder will throw an error.    This is a minor issue that you can safely ignore. The clean command will successfully delete the build and dist folders first if they exist, which is what's most important.    *Steps to reproduce:*  # Download a zip of the [ti.imagefactory|https://github.com/<USER>modules/ti.imagefactory] repo source.  # Unzip the above.  # Open the Terminal.  # {{CD}} to folder: {{./ti.imagefactory/android}}  # Enter: {{appc ti clean}}  # Notice it errors with below message.  # Enter: {{appc run -p android --build-only}}  # Wait for the build to finish.  # Enter: {{appc ti clean}}  # Notice it errors with below message.    *Result:*      *Reason:*  We're missing a libs directory existence check below.  [titanium_mobile/android/cli/commands/_cleanModule.js|https://github.com/<USER>titanium_mobile/blob/73c73b6d352ada5918ec30e008c95bf12d7ed633/android/cli/commands/_cleanModule.js#L38]  ",Bug,Low,Closed,"2020-02-29 03:14:06","2020-02-29 03:14:06",1
"The Titanium SDK ","Ignoring a file in babel config causes an error during compile","If a file is ignored through a babel config file, an error will occur because it is trying to access properties of a transformation that didn't occur.    Sample app to recreate issue: https://github.com/<USER>timob-27782    Simply run ti build -p ios --build-only to see compiler error.",Bug,Low,Closed,"2020-02-28 16:41:38","2020-02-28 16:41:38",3
"The Titanium SDK ","Android: App/Module builds fail with JDK 13 as of 9.0.0","*Summary:*  When building an app or module with Titanium 9.0.0, the build will fail if JDK 13 is installed.    Titanium 8.3.x builds fine with JDK 13... except for Hyperloop builds: [TIMOB-27780]    *Steps to reproduce:*  # Install JDK 13.  # Create a Titanium app project.  # Build with Titanium 9.0.0 for Android.    *Result:*      *Cause:*  As of Titanium 9.0.0, we now build with gradle. We're currently using gradle v5.4.1 which does not support JDK 13. We'll need to upgrade to gradle v6.0.x (released January 2020) which supports JDK 13.  https://docs.gradle.org/6.0/release-notes.html#java-13    *Note:*  You can have multiple JDK installations on Mac. You can list the JDK versions installed by entering the following at the command line.      You can select which installed JDK version to use by entering the following at the command line. You'll need to set the {{<JavaVersion>}} to what's installed, which the above command line will list. The below can be set in your {{.bash_profile}} file.      *Work-Around:*  Downgrade to JDK 12 or lower.  (JDK 8 is the min version needed.)",Bug,Critical,Closed,"2020-02-26 19:38:11","2020-02-26 19:38:11",5
"The Titanium SDK ","Android: Hyperloop builds fail if JDK 12 or higher is installed","*Summary:*  If you have JDK 12 or higher installed on your machine, then Titanium apps using the Hyperloop module will fail to build.    *Steps to reproduce:*  # Install JDK 12 or higher on your machine.  # Build [hyperloop-example|https://github.com/<USER>hyperloop-examples] for Android.  # Notice the build *fails* with the following error message.        *Cause:*  As of JDK 12, Oracle has dropped support for the Java 6 language.  https://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-8028563    Hyperloop currently hardcodes its usage of the {{javac}} command line tool during the build to Java 1.6, which is why it fails when using the newest JDK.  [android/hooks/metabase/metabase.js#L41|https://github.com/<USER>hyperloop.next/blob/24feb99f719da5e3df279452526638d46fa0043a/android/hooks/metabase/metabase.js#L41]    *Solution:*  Update {{javac}} usage to use Java 1.8 instead.    *Note:*  For JDK 13 support, we'll likely need to update Titanium's gradle template to 6.x.x as well, which means updating our Android build tools to 3.6.x via [TIMOB-27778].  ",Bug,Critical,Closed,"2020-02-26 04:28:28","2020-02-26 04:28:28",3
"The Titanium SDK ","Android: Setting labels via TabbedBar click event hangs app","*Steps to reproduce:*  # Build and run the below code on Android.  # Tap on one of the tabs.  # Notice that the app hangs.        *Cause:*  Setting the labels property causes the click event to be fired. So, setting labels within a click event listener will cause infinite recursion to occur which will eventually cause a crash.    *Work-Around:*  Defer setting the labels property via {{setTimeout()}} within the click listener.  ",Bug,High,Closed,"2019-12-10 06:32:33","2019-12-10 06:32:33",5
"The Titanium SDK ","Android: Update gradle build tools to 3.6.x","*Summary:*  As of Titanium 9.0.0, we're using Android gradle build tool 3.4.2 to build the SDK, apps, and modules.      We should update the tools to version 3.6.x.  https://developer.android.com/studio/releases/gradle-plugin#3-6-0    The newest build tools are supposed to improve APK build times.  https://developer.android.com/studio/releases/gradle-plugin#zipflinger    *Note:*  We should also update our gradle template to 6.0.x which has full support for JDK 13.  https://developer.android.com/studio/releases/gradle-plugin#updating-gradle  https://docs.gradle.org/6.0/release-notes.html    *To-Do:*  We must update the version in the following files...  https://github.com/<USER>titanium_mobile/blob/master/android/build.gradle  https://github.com/<USER>titanium_mobile/blob/master/android/templates/build/root.build.gradle    Upgrading will cause the SDK and module builds to fail. The reason is because Google's build tool will now compile C/C++ before Java, which is an issue since our {{kroll-apt}} Java annotation processor generates C++ source files. We can solve this by adding the below to the library project's build.gradle file.  {code:groovy}  project.afterEvaluate {   externalNativeBuildDebug.dependsOn compileDebugJavaWithJavac   externalNativeBuildRelease.dependsOn compileReleaseJavaWithJavac  }  {code}  https://github.com/<USER>titanium_mobile/blob/master/android/titanium/build.gradle  https://github.com/<USER>titanium_mobile/blob/master/android/templates/module/generated/build.gradle    We will also need to update our gradlew and gradle library folder to the newest version.  https://github.com/<USER>titanium_mobile/tree/master/android",Improvement,Medium,Closed,"2020-02-25 00:00:28","2020-02-25 00:00:28",3
"The Titanium SDK ","Android: Obtain holder for module references","- It is not possible to indirectly reference a module method or property.    *TEST CASE*  {code:js}  const permissions = Ti.Filesystem.requestStoragePermissions;    // Attempt to call 'requestStoragePermissions'.  permissions(e => {      if (e.success) {          console.log('Storage permissions granted.');          return;      }      console.warn('Storage permissions denied.');  });  Couldn't obtain argument holder{code}",Bug,Medium,Closed,"2020-02-24 23:52:26","2020-02-24 23:52:26",5
"The Titanium SDK ","Android: NDK version 21 outputs Bad file descriptor","- Latest NDK {{21.0.6113669}} outputs:      Although builds do complete successfully, the log seems to increase build times significantly.",Bug,High,Closed,"2020-02-24 19:37:33","2020-02-24 19:37:33",8
"The Titanium SDK ","Android: Ti.Blob.imageAsResized() not working for JPEG with exif rotation as of 8.1.0","There were some changes in the imageAsResized function in https://jira.<USER>org/browse/TIMOB-26456    It looks they broke some stuff! Taking a camera image and resizing it to random values leads to strange results:            It looks like it is keeping the aspect ration even if I don't want it to.            Note: Allow camera permissions!    *Tested versions:*  SDK 8.3.0.GA, 8.3.1.GA, 9.0.0.RC    *Device*  Pixel 4, Android 10",Bug,Critical,Closed,"2020-02-19 21:09:27","2020-02-19 21:09:27",3
"The Titanium SDK ","Android: Hyperloop builds fail if NDK not installed as of 9.0.0","_(This issue was caught before 9.0.0.GA.)_    h5.Description    When building a hyperloop application without an NDK installed the build errors with the below, we just need to do a defensive check when we're looking up the ndk path        h5.Steps to reproduce    1. Move your NDK away from the usual location (~/Library/Android/sdk/ndk/) so the CLI doesn't autodetect and remove it from the config with {{appc ti config --remove android.ndkPath  2. Build the hyperloop-examples app    h5.Actual    Above error    h5.Expected    No error",Bug,High,Closed,"2020-02-19 16:51:34","2020-02-19 16:51:34",1
"The Titanium SDK ","Android: Module build should add empty build.gradle if missing","*Summary:*  When building an existing module for 9.0.0, the build system's migration code should add an empty build.gradle file to the project folder if missing.    *Reasons:*  # This will help compel developers to use this file to reference libraries instead of using the lib directory.  # <USER>Studio needs a clue in the directory that indicates it is an Android project or else it won't be able to build/package it. This will resolve [TISTUD-9204].    *Note:*  Titanium 9.0.0's module template has already been updated to provide an empty build.gradle file. The migration code should use this same file.  ",Improvement,High,Closed,"2020-02-19 00:15:23","2020-02-19 00:15:23",3
"The Titanium SDK ","Android: Textfield inputs not setting in focused textfield and Keyboard not showing (sometimes) on a textfields which is focused","In Tableview when they clicks on any text fields are not pop-up up keyboards but it is focusing (showing cursor) on the textfields.    In their case, the issue is sometimes the keyboard is not opening for the text fields 'Middle name' and 'Last Name' and also once they enter value in 'Middle Name' fields clicks on next button should go to 'Last name' field. But the issue is, It's focusing on 'Last name' field but the text typing in the 'Middle name' field.    Sometimes when they click on text field it is focusing, but it's not opening keyboard    They have tested it with Ti-SDK 8.3.1.GA and above.    *Sample project:* https://drive.google.com/open?id=1HaUmYK-KjbPerkw72feUtmlgwAFEjwbI  *Recorded Video:* https://drive.google.com/open?id=1X1MYW_NtYafzLCovchGjKWUarrB4J-gW",Bug,High,Closed,"2020-02-18 20:04:19","2020-02-18 20:04:19",8
"The Titanium SDK ","iOS: TypeError: Cannot read property 'logger' of undefined","h5.Description    Building a project with extensions, where one of the extensions does not contain a build phase will error with the below, easy fix to just convert to an arrow function      h5.Steps to reproduce    1. Build Hans' app    h5.Actual    Above error    h5.Expected    No error",Bug,Medium,Closed,"2020-02-14 16:50:07","2020-02-14 16:50:07",1
"The Titanium SDK ","Android: Modules with AARs in lib directory should trigger a build failure in 9.0.0","*Summary:*  The Android gradle build system allows a library project to reference a local AAR for compilation, but it won't merge the local AAR's classes, AndroidManifest.xml, assets, or res files into the library project's built AAR. This is intentional on Google's end. The build system will only merge all of the AAR files' content into an app project.    Because of the above, a native module referencing local AAR files will crash at runtime when built with Titanium 9.0.0 and gradle. It will compile fine, but the classes in the AARs will not be included in the module; nor the app.    *Solution:*  When building a native Android module with Titanium, the CLI should trigger a build failure if the module's lib directory contains any AAR files and should tell the developer to reference AAR libraries via the build.gradle file instead.    *Note:*  This is a breaking-change. But by doing this, we force module developers to reference dependencies the gradle/maven way, which will solve library version conflict issues between modules.  ",Improvement,Medium,Closed,"2020-02-11 05:10:34","2020-02-11 05:10:34",5
"The Titanium SDK ","watchOS: Including watchOS framework causing build error","When including a watchOS framework to our watchOS target, the build fails because the CLI tries to parse a compiled (binary) plist which shouldn't be checked. The easy but powerful fix is to not check plist files inside frameworks but still copy them.",Bug,High,Closed,"2020-02-10 20:35:18","2020-02-10 20:35:18",3
"The Titanium SDK ","SearchBar text color and hinTextColor does not work properly.","We have tested this issue using the attached sample code with ti SDK 8.3.1.GA iPhone 11 Pro Max(ios 13.3) simulator. I assigned a red color to the color attribute and also a red color for hintTextColor. Neither the hintTextColor nor color changes the color of the text.    *Code:*  *index.js*    *index.xml*      *Test steps*:  1. Open Studio and create a new alloy project.  2. Copy index.xml and index.js code and paste your project.  3. Run the project on iPhone or simulator.  4. Then observe the search bar.    *Test Output*: Please check the attachment section.    Thanks.",Bug,None,Closed,"2020-02-08 07:12:50","2020-02-08 07:12:50",3
"The Titanium SDK ","Android: Exclude x86 and x86_64 architectures in production builds by default","*Summary:*  When doing a production build, the {{x86}} and {{x86_64}} architectures should be excluded from the built Android app by default. That is, only ARM architectures should be included.    *Note 1:*  We have been excluding {{x86}} from production builds since Titanium 7.0.0. We want to maintain this behavior in Titanium 9.0.0's gradle builds and exclude {{x86_64}} as well. These architectures are mostly needed for testing purposes in the Android emulator. Removing these architectures can reduce the APK size by a significant amount. Also, physical Android device that support {{x86}} are extremely rare.    *Note 2:*  Modules built with Titanium 8.x.x and older do not support the {{x86_64}} architecture. Only modules built with Titanium 9.0.0 and higher support {{x86_64}}. When you include a module that does *+NOT+* support {{x86_64}} into a Titanium 9.0.0 or newer app, then the build system will strip out all {{x86_64}} architectures from the app. It's all or nothing, otherwise a crash will occur on an {{x84_64}} device/emulator. This means if you want your app to support {{x86_64}}, then all modules must be built with Titanium 9.0.0 or higher.    *How to Override:*  You can override this behavior and specify which architectures you want to include in the build by adding the following {{<abi/>}} entry in the tiapp.xml file.    ",Improvement,Medium,Closed,"2020-02-07 02:45:18","2020-02-07 02:45:18",3
"The Titanium SDK ","Android: CLI fails to recognize avd emulator is booted when it starts it","We're seeing native modules builds (like this one for ti.map: https://<USER><USER>org/blue/organizations/<USER>modules%2Fti.map/detail/PR-285/9/pipeline/) failing to run our test suite because once it generates a project and launches, it never seems to think the emulator is fully booted. I can reproduce locally. If I pre-boot an emulator and launch, it recognizes the emulator has booted and works. If I don't have one up and running, it fails to recognize when the emulator has booted.",Bug,Critical,Closed,"2020-02-06 15:01:00","2020-02-06 15:01:00",8
"The Titanium SDK ","Windows app issues with 8.3.1.GA ","Hi,   I have upgraded the titanium SDK 7.2.0.GA to 8.3.1.GA, but after upgrading Windows app having the following issues:   1) Small Fonts Size    2) Splash Screen    3) Random Crashes    1) Small Font Size issues got resolved in 8.3.1.GA but got another issue with UI alignment.  All UI alignment is changed and it's not proper  2) Got workaround   3) Not able to fixed    The third point is resolved in 9.0.0.v20181031080737. And as per the earlier discussion the 9.0.0.GA is going to release in the end of Jan 2020.    Please provide the estimated date of release 9.0.0.GA.    Find the attachment for earlier communication of release date of titanium SDK            ",Bug,Critical,Closed,"2020-02-04 05:49:21","2020-02-04 05:49:21",5
"The Titanium SDK ","Android: Apps built with 9.0.0 can't upload to Firebase App Distribution when including certain modules","_(This issue was caught before release.)_    *Summary:*  You cannot upload an Android app built with a pre-release version of Titanium 9.0.0 to [Firebase App Distribution|https://firebase.google.com/docs/app-distribution] (used for beta testing) if it includes one of the following modules.  * aca  * cloudpush  * ti.admob  * ti.barcode  * ti.geofence  * ti.identity  * ti.map  * ti.playservices    *Result:*  Google's website shows the following error when attempting to upload the APK.  bq. There was an error processing your distribution. Ensure you are uploading a valid IPA or APK and try again.     !FirebaseError.png|thumbnail!     *Note:*  You can upload the APK to Google Play without issues. You can install/run the APK on devices as well. So far, this only appears to be an issue with Firebase.    *Steps to reproduce:*  # Build [kitchensink-v2|https://github.com/<USER>kitchensink-v2] for Android.  # Go to the Firebase Console webpage: https://console.firebase.google.com  # Select a Firebase project. (Create one if you don't have one.)  # Go to the App Distribution section.  # Drag-and-drop the built APK to the Releases section.  # Notice the upload errors out with the message shown above.    *Cause:*  Any module that is set up to inject AndroidManifest.xml settings via its timodule.xml will have this problem. It's an issue with the XML merge handling code which is wrongly injecting {{xmlns:android=}} namespace declarations within the child elements. Google requires the android namespace to be declared in the root {{<manifest/>}} element and will throw a fit if you add it to the child elements too.    This is really a bug in the node.js xmldom module. It's doing a string reference equality check via {{==}} instead of a string value equality check via {{===}}.  [xmldom - dom.js#L951|https://github.com/xmldom/xmldom/blob/0003c1a01a14e5bbad927b6fc36244aef83bf3ef/dom.js#L951]  ",Bug,Critical,Closed,"2020-02-04 22:53:36","2020-02-04 22:53:36",7
"The Titanium SDK ","Android: Add google-services.json support for Firebase","*Summary:*  Google documents that you should configure your app for Firebase via a google-services.json file. Titanium does not currently support this JSON file and requires app developers to call Google's Java APIs to configure the app for Firebase instead.    Add JSON file support will make this much simpler and would follow their docs.    *Note:*  Google documents how to set this up here...  https://firebase.google.com/docs/android/setup    *Recommended Solution:*  The file should be added to the following Titanium project folder...      If the file is found, we need to copy it to the following build folder location...      We'll need to add the following to the [root.build.gradle|https://github.com/<USER>titanium_mobile/blob/master/android/templates/build/root.build.gradle] file.  {code:groovy}  buildscript {   dependencies {    classpath 'com.google.gms:google-services:4.3.3'   }  }    ",Improvement,High,Closed,"2020-02-04 04:38:42","2020-02-04 04:38:42",5
"The Titanium SDK ","Android: Minor camera focus issues","- Camera should not crash with {{E/TiExceptionHandler: (main) [55,37938] autoFocus failed}}  - Camera should continue to auto focus after taking a picture    *TEST CASE*  {code:js}  const overlay = Ti.UI.createView({});  const takePicture = Ti.UI.createButton({ title: 'Take Picture' });    takePicture.addEventListener('click', _ => {      Ti.Media.takePicture();  });  overlay.add(takePicture);    Ti.Media.requestCameraPermissions(e => {      if (e.success) {          Ti.Media.showCamera({              success: e => {                  if (e.success) {                      console.log('Taken picture successfully!');                  } else {                      console.error(JSON.stringify(e, null, 2));                  }              },              saveToPhotoGallery: true,              autohide: false,              overlay: overlay,              mediaTypes: [ Ti.Media.MEDIA_TYPE_PHOTO ]          });      }  });  {code}",Bug,Medium,Closed,"2020-01-28 18:51:38","2020-01-28 18:51:38",3
"The Titanium SDK ","Android: Allow requestPermissions to succeed if already granted","Allow {{requestPermissions}} to succeed when when permissions have already been granted. This prevents the need for calling {{hasPermissions}} and simplified code.    *EXAMPLE*  {code:js}  const overlay = Ti.UI.createView({});  const takePicture = Ti.UI.createButton({ title: 'Take Picture' });    takePicture.addEventListener('click', _ => {      Ti.Media.takePicture();  });  overlay.add(takePicture);    // Should not need to call 'hasCameraPermissions', 'requestCameraPermissions' should succeed.  Ti.Media.requestCameraPermissions(e => {      if (e.success) {          Ti.Media.showCamera({              success: e => {                  if (e.success) {                      console.log('Taken picture successfully!');                  } else {                      console.error(JSON.stringify(e, null, 2));                  }              },              saveToPhotoGallery: true,              autohide: false,              overlay: overlay,              mediaTypes: [ Ti.Media.MEDIA_TYPE_PHOTO ]          });      }  });  {code}",Improvement,Low,Closed,"2020-01-28 17:57:55","2020-01-28 17:57:55",5
"The Titanium SDK ","TiAPI: Extend removal of deprecated get/set property methods from 9.0.0 to 10.0.0","When your JS code invokes a get/set property method, such as {{Label.getText()}} and {{Label.setText()}} instead of accessing the {{Label.text}} property, the following warning will be logged.      We don't want to remove these method in Titanium 9.0.0.  We should extend the removal of these deprecated APIs from Titanium 9.0.0 to 10.0.0.  ",Improvement,Medium,Closed,"2020-01-28 01:21:48","2020-01-28 01:21:48",5
"The Titanium SDK ","Android: Location permissions not auto-added when using Ti.Geolocation API as of 9.0.0","_This issue was caught before release._    *Summary:*  When doing a device or production build, Titanium's build system is supposed to auto-add the below permissions to the AndroidManifest.xml when the app uses the {{Ti.Geolocation}} APIs.  * {{android.permission.ACCESS_COARSE_LOCATION}}  * {{android.permission.ACCESS_FINE_LOCATION}}    This has stopped working as of Titanium 9.0.0 (before release).    *Steps to reproduce:*  # Set up a Classic app with the below code.  # Build and run on an Android device. (Not an emulator.)  # Notice app reports error:  {{Failed to acquire location permission}}    app.js      ",Bug,High,Closed,"2020-01-25 05:05:12","2020-01-25 05:05:12",5
"The Titanium SDK ","Android: Build analytics module with gradle","Module needs to be rebuilt for Titanium 9.0.0 to support the following:  * Built as an Android AAR library.  * Provide a POM file defining its dependencies. (Resolves library version conflicts.)  * Support AndroidX libraries.  * Add x86_64 architecture support.    Repository:  https://github.com/<USER>aps_sdk  ",Improvement,High,Closed,"2020-01-23 22:48:19","2020-01-23 22:48:19",5
"The Titanium SDK ","Android: Camera fails to open when using saveToPhotoGallery: true","h5.Description     When using the following code, the camera fails to open and I get the following error log. This looks to be a regression from 8.2.0.GA            h5.Steps to reproduce    1. Add the code above to an existing app.js  2. Build to Android    h5.Actual    Above error log    h5.Expected    Camera should open",Bug,None,Closed,"2020-01-22 21:41:36","2020-01-22 21:41:36",8
"The Titanium SDK ","Android: Build ti.webdialog module with gradle","Module needs to be rebuilt for Titanium 9.0.0 to support the following:  * Built as an Android AAR library.  * Provide a POM file defining its dependencies. (Resolves library version conflicts.)  * Support AndroidX libraries.  * Add x86_64 architecture support.    Repository:  https://github.com/<USER>modules/titanium-web-dialog  ",Improvement,High,Closed,"2020-01-22 19:40:00","2020-01-22 19:40:00",5
"The Titanium SDK ","Android: Build ti.playservices module with gradle","Module needs to be rebuilt for Titanium 9.0.0 to support the following:  * Built as an Android AAR library.  * Provide a POM file defining its dependencies. (Resolves library version conflicts.)  * Support AndroidX libraries.  * Add x86_64 architecture support.    Repository:  https://github.com/<USER>modules/ti.playservices  ",Improvement,High,Closed,"2020-01-22 19:38:52","2020-01-22 19:38:52",5
"The Titanium SDK ","Android: Build cloudpush module with gradle","Module needs to be rebuilt for Titanium 9.0.0 to support the following:  * Built as an Android AAR library.  * Provide a POM file defining its dependencies. (Resolves library version conflicts.)  * Support AndroidX libraries.  * Add x86_64 architecture support.    Repository:  https://github.com/<USER>modules/cloudpush  ",Improvement,High,Closed,"2020-01-22 19:37:44","2020-01-22 19:37:44",5
"The Titanium SDK ","Android: Build appcelerator.encrypteddatabase module with gradle","Module needs to be rebuilt for Titanium 9.0.0 to support the following:  * Built as an Android AAR library.  * Provide a POM file defining its dependencies. (Resolves library version conflicts.)  * Support AndroidX libraries.  * Add x86_64 architecture support.    Repository:  https://github.com/<USER>modules/<USER>encrypteddatabase  ",Improvement,High,Closed,"2020-01-22 19:35:22","2020-01-22 19:35:22",5
"The Titanium SDK ","Android: Build ti.identity module with gradle","Module needs to be rebuilt for Titanium 9.0.0 to support the following:  * Built as an Android AAR library.  * Provide a POM file defining its dependencies. (Resolves library version conflicts.)  * Support AndroidX libraries.  * Add x86_64 architecture support.    Repository:  https://github.com/<USER>modules/titanium-identity  ",Improvement,High,Closed,"2020-01-22 19:33:32","2020-01-22 19:33:32",5
"The Titanium SDK ","Android: Build ti.facebook module with gradle","Module needs to be rebuilt for Titanium 9.0.0 to support the following:  * Built as an Android AAR library.  * Provide a POM file defining its dependencies. (Resolves library version conflicts.)  * Support AndroidX libraries.  * Add x86_64 architecture support.    Repository:  https://github.com/<USER>modules/ti.facebook  ",Improvement,High,Closed,"2020-01-22 19:29:16","2020-01-22 19:29:16",5
"The Titanium SDK ","Android: Build ti.map module with gradle","Module needs to be rebuilt for Titanium 9.0.0 to support the following:  * Built as an Android AAR library.  * Provide a POM file defining its dependencies. (Resolves library version conflicts.)  * Support AndroidX libraries.  * Add x86_64 architecture support.    Repository:  https://github.com/<USER>modules/ti.map  ",Improvement,High,Closed,"2020-01-22 19:27:40","2020-01-22 19:27:40",5
"The Titanium SDK ","Android: Build fails and emulator does not launch","- Titanium application build fails when attempting to launch emulator using latest nodejs:      For the build to complete, the emulator must be started manually.",Bug,Critical,Closed,"2020-01-21 19:19:05","2020-01-21 19:19:05",3
"The Titanium SDK ","Android: Error building SDK if python 3 is installed","Using Fedora 31 (Linux) to compile the latest (2019-12-28) git SDK code you will run into problems            since it is using python to run genBootstrap.py. But in Fedora it will use python 3 since that is mapped as a default python. Changing   https://github.com/<USER>titanium_mobile/blob/f687e3bbf8266707e6e5fdfdba6580e141a2221b/android/titanium/prebuild.js#L111  and  https://github.com/<USER>titanium_mobile/blob/f687e3bbf8266707e6e5fdfdba6580e141a2221b/android/titanium/prebuild.js#L141   to python2 fixed the issue.     A better solution to either port it to python3 or check for the correct python version at the beginning would be better. Python 2 won't be supported after April 2020 (last version was released 19th October)    *Recommended Solution:*  Use python2 command line tool if available on system before using python command.    *Best Solution:*  Remove python dependency via ticket: [TIMOB-27719]  We'll need to do this in the near future since Apple will no longer pre-install python on future macOS versions.  ",Bug,Critical,Closed,"2019-12-28 11:28:41","2019-12-28 11:28:41",3
"The Titanium SDK ","Android: Remove python dependency from SDK build","*Summary:*  When building the Titanium SDK, the Android side currently uses python scripts to do some code generation. We should replace python scripts with node.js scripts so that we can get rid of our python dependency, thus simplifying the SDK build.    Apple will not pre-install python on the next version of macOS in the year 2020  https://developer.apple.com/documentation/macos_release_notes/macos_catalina_10_15_release_notes    *Note:*  Titanium's app and module builds do not require python. This is only an issue with SDK builds.    *Recommended Changes:*  In Titanium 9.0.0, we only run 2 python scripts via our prebuild.js script. These are the scripts we need to replace.  [titanium_mobile/android/titanium/prebuild.js|https://github.com/<USER>titanium_mobile/blob/70c16f7ca213f39791330758489be4f951dfa1ab/android/titanium/prebuild.js]    Once the above is done, we should be able to delete all python scripts from the following folder...  [titanium_mobile/android/runtime/v8/tools|https://github.com/<USER>titanium_mobile/tree/70c16f7ca213f39791330758489be4f951dfa1ab/android/runtime/v8/tools]  ",Story,High,Closed,"2020-01-17 00:04:13","2020-01-17 00:04:13",8
"The Titanium SDK ","Android: Log build warnings if res files have invalid names","*Preface:*  An Android APK's res files (such as drawables) have the following restictions:  * File names can only have lower-case letters, numbers, or underscores.  * File names cannot start with a number.  * Cannot be placed in subdirectories.    The above limitations are by Google's design, because the Android build system turns res file names into Java constants under the generated {{R}} class. Violating the above will result in a build failure.    However, Titanium allows app developers to violate the above rules and will lower-case the file name and replace illegal characters and directory separators with {{'_'}} underscores.    *App Changes for Titanium 9.0.0:*  For app builds, we want to maintain backward compatibility. This means allowing app developer to continue to violate Google's res file naming rules, but we should log a build +WARNING+ for every res file in violation to compel app developer's to follow Google's best-practices. This will also help minimize confusion when attempting to access a res file via native Java APIs using the illegal name, which won't work.    *Module Changes for Titanium 9.0.0:*  Native modules built with Titanium 9.0.0 and higher will no longer be allowed to violate Google's res file naming rules. This is because we're now building a native module to an AAR library which packages the module's res files. So, illegal res file names will cause a build failure just like how it works in Android Studio.    *Test:*  The attached [^Resources.zip] contains a directory tree of image files which violate Google's res naming conventions.  ",Improvement,Medium,Closed,"2020-01-16 01:31:23","2020-01-16 01:31:23",5
"The Titanium SDK ","iOS: 'click' event in Ti.UI.TextField is not working for iOS >= 11.x ","In iOS 10.x 'click' event is working fine for TI.UI.TextField but for iOS >= 11.x it is not working.  On some experiment I found that in iOS >= 11.x there are restriction on touch event callbacks.    Probably document need to be updated.    Workaround to this issue is -  Use 'touchstart' event or set 'enabled' property to false.    Test Case -       ",Bug,Low,Closed,"2020-01-10 18:56:19","2020-01-10 18:56:19",1
"The Titanium SDK ","Remove windows platform from hyperloop","h5.Description    With Windows platform being removed from the SDK in 9, we should also remove it from the hyperloop distribution",Story,None,Closed,"2020-01-10 10:56:24","2020-01-10 10:56:24",5
"The Titanium SDK ","TiAPI: Add state querying methods to UI components","This is a glaring issue when we look at our test suite and see the common {{before}} hooks we've written to clean up open windows/etc.    We have no means of telling if a Window is closed or open. So instead we fire off a 3-second {{setTimeout}} fallback to handle the isClosed case, and then hang an event listener for the close event and try to close the window. So in the case where the test never opened the window (or already closed it), we basically do nothing for 3 seconds and assume since the {{close}} event never fired that it must have been closed.    We have {{Ti.UI.View.visible}} which should tell us if a view is hidden or visible.    Proposed APIs:  {{Ti.UI.Window.closed}} - {{boolean}}, {{true}} or {{false}}   * tells us if the window is closed (do we need {{opened}} equivalent? I assume they'd just be inversions of one another)  * Potential alternates? {{isClosed}}, {{closed}}, {{opened}}, {{isOpened}} (properties versus methods?)      * Note that JavaFX uses {{showing}} as a roughly equivalent API here: https://openjfx.io/javadoc/13/javafx.graphics/javafx/stage/Window.html      * Android equivalent may be {{isActive}}? https://developer.android.com/reference/android/view/Window.html#isActive()    {{Ti.UI.View.focused}} - {{boolean}}, {{true}} or {{false}}  * Potential alternates? {{isFocused}}, {{hasFocus}} (properties versus methods?)      * https://developer.android.com/reference/android/view/View#hasFocus()",Story,High,Closed,"2020-01-08 15:40:38","2020-01-08 15:40:38",13
"The Titanium SDK ","Remove windows platform from SDK build/bundling","Since we no longer will be supporting Windows universal as app targets, we should remove the download/inclusion of windows in the SDK builds.",Story,Critical,Closed,"2020-01-07 15:13:49","2020-01-07 15:13:49",8
"The Titanium SDK ","Remove Windows Platform","Since Windows Phone has been EOL'd by Microsoft at the end of 2019 and due to very low usage of Windows Universal as a target platform, we have decided to no longer support Windows Universal (Phone/Desktop/Tablet) apps as of SDK 9",Epic,Critical,Resolved,"2020-01-07 15:12:22","2020-01-07 15:12:22",0
"The Titanium SDK ","Android: Native modules having uppercase name are excluded from build on case-sensitive systems","*Summary:*  Native Android modules such as ti.facebook will not have their main JAR included in the app if built from a case-sensitive file system. The app will succeed to build, but attempting to use the module's APIs will fail.    For ti.facebook, the following warning will be logged when doing a build.      _(This is more of an issue on Linux where the file system is case-sensitive by default.)_    *How to create case-sensitive disk image on macOS:*  # Open the Disk Utility app.  # From the menu, click: {{File -> New Image -> Blank Image}}  # Click on the Image Format drop-down and select sparse bundle disk image.  # In Save As field, enter: {{CaseSensitive.sparsebundle}}  # In Where field, select destination to write this image file to.  # In Name field, enter:  {{CaseSensitive}}  # In Size field, enter:  {{1 GB}}  # Click Format drop-down and select Mac OS Extended (Case-sensitive).  # Click the Save button.    You can mount the above image by double clicking the CaseSensitive.sparsebundle file. You can find the CaseSensitive volume in Finder under the Locations section.    *Steps to reproduce:*  # Download [kitchensink-v2|https://github.com/<USER>kitchensink-v2] to the case sensitive volume.  # Download the newest release version of the [ti.facebook|https://github.com/<USER>modules/ti.facebook] module.  # Unzip module to folder: {{kitchensink-v2/modules/ti.facebook/...}}  # Open the tiapp.xml file.  # Build and run on Android.  # Notice the following gets logged:    # Tap on the app's Mashups tab.  # Tap on the Facebook row.  # Notice the app crashes.    *Reason:*  Titanium's build script is doing a {{toLowerCase()}} on the JAR file name [here|https://github.com/<USER>titanium_mobile/blob/243afd00e0760f2060e797312942ee65d47b9f5f/android/cli/commands/_build.js#L1575].    *Note:*  This issue causes a build failure in Titanium 9.0.0 since moving to gradle.  ",Bug,Low,Closed,"2020-01-07 05:50:39","2020-01-07 05:50:39",5
"The Titanium SDK ","Android: Can't set versionCode via AndroidManifest.xml as of 9.0.0","*Summary:*  As of Titanium 9.0.0, setting the versionCode via the AndroidManifest.xml file no longer works.    _(This regression was caught before release.)_    *Steps to reproduce:*  # Create a Titanium app project.  # Set up the tiapp.xml file with the below.  # Build for Android.  # Go to folder: {{./build/android/app/build/intermediates/merged_manifests/debug}}  # Open the AndroidManfiest.xml file.  # Notice {{android:versionCode}} attribute is set to {{1}}. _(This is the bug.)_        *Reason:*  When building with gradle, the versionCode and versionName attributes are ignored in the AndroidManifest.xml file. These settings can only be set via a build.gradle file. This is by Google's design.    *Recommended Solution:*  Titanium's build script should read the versionCode from the app developer's AndroidManifest.xml write it to the Titanium generated build.gradle file. This way it will be backward compatible.    *Work-Around:*  Set the versionCode via your own build.gradle file as shown below.    {{./platform/android/build.gradle}}  {code:groovy}  android {   defaultConfig {    versionCode 5   }  }  {code}  ",Bug,Critical,Closed,"2020-01-07 04:21:11","2020-01-07 04:21:11",3
"The Titanium SDK ","Android: Refactor TableView to utilize RecyclerView","- Refactor {{Titanium.UI.TableView}} implementation to use [RecyclerView|https://developer.android.com/guide/topics/ui/layout/recyclerview]  - This is will allow for future features such as swipe-to-remove and drag-drop",Improvement,Medium,Closed,"2020-01-02 19:39:51","2020-01-02 19:39:51",21
"The Titanium SDK ","Add progress event to Ti.UI.WebView for Android (parity)","For some reason the progress event in Ti.UI.WebView is only available for iOS, so I did an attempt to add it (disclaimer: I am not a java programmer)    Adding this function to TiWebChromeClient.java seems to fix it;        I tested it on SDK 8.3.0 and 9.0.0. Both tests successful.    EDIT: created a PR: https://github.com/<USER>titanium_mobile/pull/11383  ",Improvement,Critical,Closed,"2019-12-09 14:45:07","2019-12-09 14:45:07",5
"The Titanium SDK ","Android: Add gradle.properties support to app builds","*Summary:*  Titanium app developers would like the ability to set up their own gradle.properties file according to Google's documentation. We should add support for this and allow this file to override the properties defined by Titanium's build system.  https://developer.android.com/studio/build#properties-files    *Recommended Solution:*  Copy the properties from the following project file...      These properties should be copied to the end of the Titanium generated gradle.properties file so that the app dev's properties can override the ones we set.","New Feature",Low,Closed,"2019-12-22 10:23:33","2019-12-22 10:23:33",5
"The Titanium SDK ","Android: Heavy image processing methods do not trigger GC","- Heavy image processing methods such as {{imageAsResized}} do not trigger garbage collection and may leave unwanted large blob references that cause {{OutOfMemory}} exceptions.    *TEST CASE*  {code:js}  const win = Ti.UI.createWindow({ backgroundColor: 'gray' });  const img = Ti.UI.createImageView();    win.addEventListener('open', async () => {        // Obtain large image blob. (8205px, 11750px)      let blob = await getImage('https://tinyurl.com/rxob7ju');        // Keep re-sizing the image down by 10%      for (let i = 0; i < 10; i++) {            // De-reference original blob so it can be freed.          blob = blob.imageAsResized(blob.width / 1.1, blob.height / 1.1);            // Idle for 100ms, allowing V8 GC to collect.          // QE: Should not need to do this to display image.          // await new Promise(resolve => setTimeout(resolve, 100));      }        // Display re-sized image.      img.image = blob;  });    win.add(img);  win.open();    function getImage(url) {      return new Promise((resolve, reject) => {         const client = Ti.Network.createHTTPClient({              onload(e) {                  resolve(e.source.responseData);              },              onerror: reject,              timeout : 10000          });          client.open('GET', url);          client.send();      });  }  {code}  - Application should display resized image without crashing",Bug,Medium,Reopened,"2019-12-21 01:39:24","2019-12-21 01:39:24",5
"The Titanium SDK ","Android: Textfield.focus() method is not working in Ti SDK 8.3.0.GA ","*Issue:* Textfield.focus() method is not working properly on android after updating to 8.3.0. It is getting focused but no keyboard is shown. The keyboard is only showing on the click of the TextField but if I call TextField.focus() then textfield is getting focused without a keyboard.    *Steps To Reproduce:*  1. Create a classic project  2. Paste this code in app.js file  3. Run it on android device or emulator  4. Click on the Focus Test Button    *Note: Works as expected with Ti SDK 8.2.0.GA*    {code:title=app.js}  var win = Ti.UI.createWindow({   title : Focus Test,   backgroundColor : 'red',   layout : vertical    });    // Create a TextField.  var aTextField = Ti.UI.createTextField({   height : 40,   top : 30,   left : 20,   right : 20,   backgroundColor : gray,   hintText : 'This is hint text',   softKeyboardOnFocus : Ti.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, // Android only   keyboardType : Ti.UI.KEYBOARD_DEFAULT,   returnKeyType : Ti.UI.RETURNKEY_DEFAULT,   borderStyle : Ti.UI.INPUT_BORDERSTYLE_ROUNDED  });    // Listen for return events.  aTextField.addEventListener('return', function(e) {   aTextField.blur();   alert('Input was: ' + aTextField.value);  });    // Add to the parent view.  win.add(aTextField);    // Create a Button.  var test = Ti.UI.createButton({   title : 'Focus Test',   height : Ti.UI.SIZE,   width : Ti.UI.SIZE,   top : 50,    });    // Listen for click events.  test.addEventListener('click', function() {     aTextField.focus();   //alert('\'aButton\' was clicked!');  });    // Add to the parent view.  win.add(test);    win.open();    {code}    ",Bug,None,Closed,"2019-12-20 14:24:47","2019-12-20 14:24:47",3
"The Titanium SDK ","iOS: App is crashing after recording the video on device","Hello,    Customer have an issue very strange. This app is for ios, He is working with TiSDK 8.3.0. Please have a look at the video. The error has not logs files on Studio console but it is crashing on physical device. The first error is related to crash app after recording video. The other error is related to go to background navigate between apps and return to my app. The same situation the app is crashing.     Example code: Available on [Here| https://github.com/jorgehip/hipCameraCrash/tree/02-MoveCameraToAlloy]    I have tested on following environment and able to reproduce the issue:  SDK: 8.3.0.GA, 8.1.0.GA  <USER>Command-Line Interface, version 7.1.2  Device: iPhone 6 plus (12.4.3)  Customer is getting this issue on iPhone X (iOS 13.x)    1. I cannot reproduce the second issue (background crash issue).  2. I can reproduce the first issue but not every time. It occurs after capturing video 3/4 times.    Please let us know if you need any more information. Thanks",Bug,None,Closed,"2019-12-17 13:41:41","2019-12-17 13:41:41",2
"The Titanium SDK ","TiAPI: Clean up apidocs to use common types","Our APIdocs frequently re-use similar arguments to methods but are not consistent in referring to those object shapes as defined types. Additionally, there may be duplicated types, types that haven't been defined but should be, or types that are defined but methods/properties don't refer to them and instead use generic Object/Dictionary type.    This is relevant to have properly define docs, but also in that we have started to ship typescript definitions generated from he docs and can rely on these more formal definitions in editors/IDE for more reliable content assist.",Improvement,None,Closed,"2019-12-16 19:25:25","2019-12-16 19:25:25",13
"The Titanium SDK ","Android: Update V8 runtime to 7.9","- Upgrade V8 to the latest stable version {{7.9.317.32}}    - Maintain backwards compatibility",Improvement,High,Closed,"2019-12-16 18:53:10","2019-12-16 18:53:10",8
"The Titanium SDK ","Android: Auto-download build system dependencies via gradle","*Summary:*  Gradle supports automatically downloading build system related dependencies such as Google's build-tools and targeted API Level libraries. We should leverage this feature so that app developer's won't have to download/install them manually via Google's Android SDK Manager dialog. This will make building Android apps more convenient and minimize tech-support issues.    *Recommended Solution:*  Once gradle build support has been added via [TIMOB-19300] in Titanium 9.0.0, we get this feature for free when we start the gradlew app build.    But in order for this to happen, we need to ignore some of the error results returned by our [node-titanium-sdk|https://github.com/<USER>node-titanium-sdk] module's Android detect API [here|https://github.com/<USER>node-titanium-sdk/blob/master/lib/android.js] in our Titanium SDK's [_build.js|https://github.com/<USER>titanium_mobile/blob/master/android/cli/commands/_build.js] script's {{validate()}} function.    The error string IDs we need to ignore are:  * {{'ANDROID_BUILD_TOOLS_TOO_NEW'}}  * {{'ANDROID_BUILD_TOOLS_NOT_SUPPORTED'}}  * {{'ANDROID_BUILD_TOOLS_CONFIG_SETTING_NOT_INSTALLED'}}  * {{'ANDROID_API_TOO_OLD'}}  * {{'ANDROID_API_TOO_NEW'}}  * {{'ANDROID_NO_APIS'}}  * {{'ANDROID_NO_VALID_APIS'}}  * {{'ANDROID_SDK_MISSING_PROGRAMS'}}    *Note 1:*  We still need our Android SDK/NDK detection code, because there is no way to run the Android gradlew tool without first setting up a local.properties file that reference the SDK/NDK directories.    *Note 2:*  Our Titanium CLI still needs to keep its existing Android tooling detection code since the CLI needs to support Titanium SDK versions older than 9.0.0.  ",Improvement,Medium,Closed,"2019-12-14 05:43:03","2019-12-14 05:43:03",5
"The Titanium SDK ","Android: Update hyperloop module to support gradle dependencies","*Summary:*  In Titanium 9.0.0, we will be changing the Android app build system from ant to gradle. This will be a breaking-change that will require the hyperloop module to change how it hooks into the build. But this is also a good opportunity to support gradle's dependencies feature which allows the hyperloop user to reference dependencies via their maven {{<groupId>:<libraryName>:<version>}} references.    *Recommended Solution:*  Add support for an optional build.gradle file to the following Titanium app project directory...  {{./platform/android/build.gradle}}    The file can then reference dependences like this...  {code:groovy}  repositories {   google()   jcenter()  }    dependencies {   implementation 'com.google.android.gms:play-services-<USER>18.3.0'  }  {code}    *Note:*  This feature depend on [TIMOB-19300] to be completed first.  ",Improvement,Critical,Closed,"2019-12-14 00:18:51","2019-12-14 00:18:51",13
"The Titanium SDK ","Android: Cold-start launch animation may occur twice","- Launching a Titanium application may show a duplicate window launch animation",Bug,Critical,Closed,"2019-12-13 18:49:14","2019-12-13 18:49:14",3
"The Titanium SDK ","Remove deprecated modules from SDK distribution","h5.Description    We have a couple modules that we have deprecated due to them being replaced, these should be removed from distribution to avoid people using them going forward    * ti.safaridialog - replaced with ti.webdialog  * ti.touchid - replaced with ti.indentity",Story,High,Closed,"2019-12-12 13:57:39","2019-12-12 13:57:39",5
"The Titanium SDK ","iOS: Drop support for iOS 9","Analytics suggest that only < 1.5% events are from iOS 9 devices.  We should stop supporting iOS 9 and make iOS 10 as minimum target.   It will help us to clean our conditional codes. ",Improvement,High,Closed,"2019-12-03 19:07:33","2019-12-03 19:07:33",1
"The Titanium SDK ","Windows: unit specifier for fontSize should be ignored ","Setting {{fontSize}} with unit specifier for {{Font}} shows smaller fonts. It also could end up throwing runtime exception when display information is not provided by Windows. We might want to just ignore unit specifier in order to keep parity between iOS.        Expected: Both Labels should be shown with same font size {{48}}.  ",Bug,Medium,Closed,"2019-12-03 08:43:41","2019-12-03 08:43:41",5
"The Titanium SDK ","Documentation for events' properties","1. Current documentation validator considers type fiels for properties on events as optional.  Information about types must be always provided in documentation.    2. Validator does not allow property on event to be optional. Actually in the SDK they could be missing (for [example|https://github.com/<USER>titanium_mobile/blob/bf8a6bfd3ca17d3389cb6c8fc775886638226093/android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUIImageView.java#L520]: image property on event error for Titanium.UI.ImageView on Android)",Improvement,High,Closed,"2019-11-20 12:51:58","2019-11-20 12:51:58",13
"The Titanium SDK ","Windows app fonts become small when titanium sdk version changed from 7.0.2.GA  to 8.2.1 GA","Hi ,     I have upgraded the titanium SDK 7.0.2.GA  to 8.2.1 GA in Windows Desktop application. After upgrade the application font becomes smaller than the previous. Also font changes happen in all pages in the application   Find below tiapp.xml details:  <property name=ti.ui.defaultunit type=string>dp</property>  <property name=run-on-main-thread type=bool>true</property>   <deployment-targets>          <target device=iphone>false</target>          <target device=ipad>false</target>          <target device=android>false</target>          <target device=windows>true</target>      </deployment-targets>      <sdk-version>8.2.1.GA</sdk-version>     <windows>          <manifest>              <Capabilities>                  <Capability Name=internetClient/>                  <Capability Name=internetClientServer/>                  <Capability Name=privateNetworkClientServer/>                  <!-- in case you need Internet connection -->                  <Capability Name=picturesLibrary/>                  <!-- This line is required to request access to the photo library -->                  <Capability Name=videosLibrary/>                  <DeviceCapability Name=location/>                  <DeviceCapability Name=webcam/>              </Capabilities>              <Applications>                  <Application>                      <VisualElements>                          <SplashScreen BackgroundColor=#FFFFFF/>                      </VisualElements>                  </Application>              </Applications>          </manifest>  <TargetPlatformVersion>10.0.16299.0</TargetPlatformVersion>          <TargetPlatformMinVersion>10.0.14393.0</TargetPlatformMinVersion>      </windows>    Can you please provide the reason for smaller font and how to fix ",Bug,Critical,Closed,"2019-11-27 12:43:23","2019-11-27 12:43:23",8
"The Titanium SDK ","Android: Additional parameters in require cause app to crash","*Steps to reproduce the behavior*    # Create a new JS files that can be required, for example {{test.js}}. The content doesn't matter  # Require that JS file with an additional parameter    # Run on Android    *Actual behavior*  The app crashes during runtime with the following error:      *Expected behavior*  Additional parameter to require will be ignored.    *Additional notes*  If the file was required before without any additional parameters the require works as expected.    ",Bug,High,Closed,"2019-11-26 19:19:27","2019-11-26 19:19:27",8
"The Titanium SDK ","Android: Prevent snapshot failure from breaking build","- Depending on build platform, some snapshots may not be generated. This can cause issues as applications may attempt to load snapshots that don't exist.  - To resolve this, we need to implement a fallback for when snapshots do not exist for particular platforms.",Bug,High,Closed,"2019-11-25 22:13:34","2019-11-25 22:13:34",5
"The Titanium SDK ","iOS: Ti.Blob.read() is inconsistent on device","- {{Ti.Blob.read()}} seems to cause inconsistent results when generating hashes on device    *TEST CASE*  {code:js}  const binaryFile = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, 'Logo.png'),    blob = binaryFile.read();  if (Ti.Utils.sha1(blob) === '668e98c66d8a11ef38ab442d9d6d4a21d8593645') {    console.log('success!');  }  {code}",Bug,Medium,Open,"2019-11-23 00:05:23","2019-11-23 00:05:23",5
"The Titanium SDK ","Windows: Remove deprecated Geolocation values, only use new ones","http://docs.<USER>com/platform/latest/#!/api/GeocodedAddress    Specifically, it is insane that we:   - have a postalCode property on Android, but zipcode on iOS/Windows.   - latitude and longitude are Numbers on iOS/Windows, but String on Android.   - have both country_code (on all platforms), and countryCode (only on Android) (we should likely have the same property, and given our naming scheme, it should be called countryCode)    {{zipcode}} and {{country_code}} were deprecated as part of TIMOB-23496 and should be removed.",Improvement,High,Closed,"2019-11-21 22:43:09","2019-11-21 22:43:09",8
"The Titanium SDK ","iOS: Remove Ti.Network.createTCPSocket","We *still* have {{Ti.Network.createTCPSocket}} hanging around even though it has been deprecated since SDK 1.7.0!    My understanding is that it is only used in the Ti.Network.BonjourService class. That implementation should be modified to use/accept Ti.Network.Socket.TCP proxies.    Then we can mark Ti.Network.TCPSocket and Ti.Network.createTCPSocket as removed in our apidocs; and we can get rid of the TiNetworkTCPSocketProxy source files in the SDK.",Story,High,Closed,"2019-11-21 19:59:00","2019-11-21 19:59:00",8
"The Titanium SDK ","Android: remove Ti.UI.WebView.onStopBlacklistedUrl event","Since we now have a cross-platform event, we should remove this event which has been deprecated since 6.1.0",Story,High,Closed,"2019-11-21 18:46:50","2019-11-21 18:46:50",5
"The Titanium SDK ","Remove deprecations prior to 9.0.0, add new deprecations","This is an Epic to track any removed APIs that were previously deprecated (and scheduled to be removed) in the 9.0.0 timeframe; a well as to gather any new deprecations we may add for a future SDK 10 release.",Epic,Critical,Closed,"2019-11-21 18:44:33","2019-11-21 18:44:33",0
"The Titanium SDK ","Android: TextField with decimal keyboard type does not allow comma for decimal separator","*Summary:*  When using a {{TextField}} with keyboardType set to {{KEYBOARD_TYPE_DECIMAL_PAD}} or {{KEYBOARD_TYPE_NUMBERS_PUNCTUATION}}, the end-user is only allowed to enter a period '.' for the decimal point. It ignores the current locale and does not allow other types of decimal separators such as a comma ',' which is used Europe and South America.    *How to add languages on Android:*  # Go to Android's main Settings screen.  # Tap on System.  # Tap on Language & Input.  # Tap on Languages.  # Tap on Add Language.  # Select a European language such as German/Deutsch.  # Drag-and-drop the language to the top of the list.    *Steps to reproduce:*  # Build and run the below code on Android.  # Select a European language. (See language instructions above.)  # Tap on the {{TextField}}.  # Attempt to enter {{1,5}} with a comma.  # Notice it won't let you use a comma ',' for the decimal separator.  # Enter {{1.5}} with a period.  # Notice that it allows a period, but this is not correct for the current locale.        *Note:*  This is actually a bug on Google's end. They have a *+partial+* fix for it as of Android 8.0 by using passing the current {{Locale}} to a {{DigitsKeyListener}} constructor.  https://developer.android.com/reference/android/text/method/DigitsKeyListener#DigitsKeyListener(java.util.Locale)    Unfortunately, Google's fix is incomplete and has the following issues:  * Fullscreen edits (when in landscape) is not fixed. Only allows period for decimal point.  * Does not support Arabic decimal separator at all.  * Android OS versions older than 8.0 can't use their fix. We need a solution for Android 4.4 too.    \\  \\  ----    *Original Post:*  In Denmark the decimal separator is comma (,)  But when setting     Titanium Shows a keyboard with a dot (.) instead...   And when parsing a value with Danish Locale 20.50 becomes 2050  On IOS the keyboard is shown with a comma (,) and everything works as expected  ",Bug,Critical,Closed,"2019-11-01 14:22:48","2019-11-01 14:22:48",13
"The Titanium SDK ","[Windows - Android] 'Failed to read bootstrap.json. Reason: Unexpected token � in JSON at position 0' can be seen intermittently ","When running a Titanium/alloy application sometimes the error below can be seen in the logs, although it seems to have no effect on the app.       *Test Steps:*  # Create a Alloy/Titanium application   # Run app to an Android emulator   # Check logs for above message     *Actual result*  Above error can be seen intermittently.    *Expected result*  Error should not be seen.        ",Bug,None,Closed,"2019-11-18 19:25:57","2019-11-18 19:25:57",1
"The Titanium SDK ","Drop support for Node 8, Make Node.JS 10.13 new minimum","Node.JS is officially ending support for Node 8 at the end of this year (12-31-2019). In preparation we should move to the next LTS line, which is Node 10.13+.    https://nodejs.org/en/about/releases/    (Note that Node 10 will go into maintenance LTS starting in April next year, and Node 12 has just become an active LTS)",Story,High,Closed,"2019-11-14 20:12:39","2019-11-14 20:12:39",3
"The Titanium SDK ","Windows: remove analyzeJsFile hook from titanium_mobile & hyperloop code ","h5.Description    Windows uses a non standard hook in the hyperloop module which we currently patch around in the processjstask, we should try to remove that hook from hyperloop and use the standardized hook if possible",Story,Medium,Closed,"2019-11-14 13:43:47","2019-11-14 13:43:47",5
"The Titanium SDK ","iOS: Crash with MobileIron wrapped app","The customer is using the MobileIron MDM tool for app deployment and using mobileiron wrapper tool for enabling apptunnel for our app (VPN less app) when we upload the iOS 13 app to MDM the app crashes. After logged a support call with Mobileiron and the root cause for the crash was identified that APSanalytics library trying to send the synchronous request on the main thread which is against Apple's recommendation    Attached the response from MobileIron support below. Currently, we have disabled the Analytics module (in tiapp.xml) in our app and the app is not crashing. But we are losing the <USER>analytics data.    can you please take a look at the issue and fix it the SDK.    {quote}  Mobileiron Support engineer response    We have identified why your wrapped app is crashing. The app uses <USER>s APSAnalytics library to send requests on app launch before AppConnect is initialized. By design, AppConnect blocks any network requests until any AppTunnel Rules are received. However, APSAnalytics makes a synchronous request on the main thread, which is against Apple's recommendations.    default 12:54:03.431961 +0200 mPeople [ERROR] APSAnalytics: error sending request: The operation couldn’t be completed. Request timed out earlier than tunneling config was received.  default 12:54:03.434021 +0200 mPeople [INFO] APSAnalyticsStore: session.start  default 12:54:03.439620 +0200 mPeople [INFO] APSAnalyticsStore: mPeople_iphone_12.4.1_Home  debug <USER>assertion 12:54:03.444635 +0200 mPeople Request for backgroundTimeRemaining from pid -1  default 12:54:03.444799 +0200 mPeople [DEBUG] APSAnalytics: Attempting to send 2 analytics event(s)    Why the issue happened in 4.4.1: AppConnect 4.0 introduced networking changes for requests being processed without any AppConnect configuration. Now, we pause these until the config has been received. This was done to improve security of data-in-transit. This works for requests off the main thread, but for synchronous requests blocking the main thread, those are deadlocked.    Note that even in the unwrapped app, we can force an identical crash by setting Network Link Conditioner to 100% Loss, then launched the unwrapped application, minimized it, and open it again. Then, with Network Link Conditioner set to Very Bad Network the app also freezes, but for less than 10 seconds, so iOS doesn't kill it.    Conclusion: This looks like an <USER>bug. Perhaps they have a newer version available, or perhaps you can init APSAnalytics later in the app launch sequence, or not use it at all.    {quote}  ",Bug,None,Closed,"2019-11-14 02:03:04","2019-11-14 02:03:04",8
"The Titanium SDK ","Android: Replace SDK build.properties with gradle generated BuildConfig class","*Summary:*  When building the Titanium SDK, we generate a build.properties file (similar to an {{INI}} file) providing the Titanium library's version and build time information. This file is stored under APK assets and is read on app startup via the Java method below.  [TiApplication.loadBuildProperties()|https://github.com/<USER>titanium_mobile/blob/5fbe78276e04049874e13bcc0a3874593f27254e/android/titanium/src/java/org/<USER>titanium/TiApplication.java#L300]    By default, gradle generates a {{BuildConfig}} Java class for all libraries and apps. We should use this feature instead of generating our own build.properties file. It will simplify our build <USER>.. and access to this info at runtime will be faster.  https://developer.android.com/studio/build/gradle-tips#share-custom-fields-and-resource-values-with-your-app-code    *Example:*  {code:groovy}  // The build.gradle file.  android {   defaultConfig {    buildConfigField('String', 'BUILD_VERSION', '9.x.x')    buildConfigField('String', 'BUILD_TIMESTAMP', 'YYYY/MM/DD HH:MM')    buildConfigField('String', 'BUILD_GIT_HASH', 'HEAD')   }  }    <AppName> <AppVersion> (Powered by Titanium <Version>.<GitHash>)  {code}    The above message gets logged in the code below...  [ti.main.js#L15|https://github.com/<USER>titanium_mobile/blob/5fbe78276e04049874e13bcc0a3874593f27254e/common/Resources/ti.main.js#L15]  ",Improvement,Critical,Closed,"2019-11-13 01:35:09","2019-11-13 01:35:09",5
"The Titanium SDK ","Android: Hiding/Showing progress indicator back-to-back puts it in a bad state as of 8.1.1","*Summary:*  Hiding and showing a progress indicator dialog like the below prevents the dialog from being hidden ever again.      *Steps to reproduce:*  # Build and run the below code on Android.  # Tap on the button.  # Notice the progress dialog never closes. (Supposed to close in 5 seconds.)    {code:js}  var self = Ti.UI.createWindow({    backgroundColor:'#ffffff',    navBarHidden:true,    exitOnClose:true   });      var button = Ti.UI.createButton({     title: 'Show Progress Dialog'   });      var progressIndicator = Ti.UI.Android.createProgressIndicator({     message: 'Loading...',     location: Ti.UI.Android.PROGRESS_INDICATOR_DIALOG,     cancelable: true,   });      button.addEventListener('click', function (e) {     progressIndicator.show();          setTimeout(function(){       progressIndicator.hide();       progressIndicator.show();     }, 3000);          setTimeout(function(){       progressIndicator.hide();     }, 5000);   });      self.add(button);   self.open();  {code}",Bug,High,Closed,"2019-11-11 07:07:13","2019-11-11 07:07:13",3
"The Titanium SDK ","iOS: TabbedBar backgroundColor is not working with latest SDK ","Hello!  TabbedBar backgroundColor is not working with the latest SDK  on iOS.   *Test Code*:      *Test Environment*:  I tested with 12.1 simulators both Ti SDK 8.2.0.GA, 8.2.1.GA    Please take a look at the attached screenshot.       ",Bug,None,Closed,"2019-11-09 13:28:52","2019-11-09 13:28:52",5
"The Titanium SDK ","Android: UI glitches out when using 'applyProperties' with Scroll View Touch Listeners","Application UI glitches out when trying to drag a label horizontally.     *Test case:*      *Test Steps*  # Create a Titanium application  # Add the code above in to the ((app.js}}  # Run on Android  # Try to drag a label horizontally    *Actual result*  Whole application moves and UI glitches out    *Expected result*  Only label should move horizontally",Bug,Medium,Closed,"2019-11-06 16:21:27","2019-11-06 16:21:27",5
"The Titanium SDK ","Windows: Hyperloop integration with nuget","Investigate nuget support for hyperloop, similar to how iOS has support for cocoapods.",Story,Medium,Open,"2019-11-04 23:31:37","2019-11-04 23:31:37",13
"The Titanium SDK ","Commented out line with Ti.include in it causes LiveView failure","On any project, add the following line:          Make sure the line is *COMMENTED OUT* with the single line prefix *//*. Compile the app with LiveView turned on. The file load will fail. Remove the line and save, the file will load without issue.    It seems that somehow, LiveView is ignoring the fact the line is commented out and trying to <USER>the 'include' function, causing the error.    If you surround by a multi line comment like this instead, then it works.      ",Bug,Critical,Closed,"2019-10-25 13:33:15","2019-10-25 13:33:15",3
"The Titanium SDK ","Android: imageView toBlob() method returns null.","*Issue:* imageview toBlob() method returns null but it should return as a blob object. It returns a proper value in iOS    Steps to Reproduce  1. Run the following sample code on an emulator or a device  2. Then check the console log.       {code:title=app.js}  var win = Titanium.UI.createWindow({    className : 'win'   });     var img = Ti.UI.createImageView({    image : 'http://ursinus.prestosports.com/sports/wbkb/2019-20/photos/KRR_48190-1.jpg?max_width=160&max_height=120',    top : 40,    width : 200,    height : 200   });     win.add(img);     Ti.API.info(ImgeView:, img.toBlob());     win.open();    {code}      {code:java}  WARN] :   TiDrawableReference: (main) [137661,138015] Could not open stream to get bitmap  [INFO] :   ImgeView: null  [INFO] :   Choreographer: Skipped 1797 frames!  The application may be doing too much work on its main thread.  [INFO] :   APSAnalyticsStore: session.end  [INFO] :   APSAnalyticsService: Successfully sent 1 stored event(s)    {code}  ",Bug,None,Resolved,"2019-11-04 16:10:00","2019-11-04 16:10:00",0
"The Titanium SDK ","Android: Semantic Colors with alpha value","Following up the implementation of dark mode (https://jira.<USER>org/browse/TIMOB-27126) the Android fallback doesn't support the alpha value you specify in the semantic colors json.   For parity it would be great if reads out those values too. The fallback color works fine.    *Workaround*:  Override the value on Android with a normal rgba value    *Tested SDK*:  8.2.0.GA",Bug,High,Closed,"2019-09-21 17:54:43","2019-09-21 17:54:43",8
"The Titanium SDK ","Webpack: Alloy loader","To support bundling Alloy apps with Webpack we need a loader for Alloy components. This loader needs the following features:    - Transform {{app/alloy.js}} entry and add require to [template/lib/alloy.js|https://github.com/<USER>alloy/blob/master/Alloy/template/lib/alloy.js]  - Modify {{template/lib/alloy.js}}   - Load and <USER>controllers  - Load and <USER>.tss style files  - Load and <USER>views","New Feature",None,Closed,"2019-10-30 00:19:04","2019-10-30 00:19:04",21
"The Titanium SDK ","iOS : Open an iPad Popover crash the app","From SDK > 8.2.0.GA opening a Popover crash the app. Tested on iOS 11,12,13 simulator.  With SDK 8.2.0.GA no problems.    Code from http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.iPad.Popover    ",Bug,Critical,Closed,"2019-10-25 09:44:43","2019-10-25 09:44:43",5
"The Titanium SDK ","Android: Be able to determine dark / light theme, as well as changes on it","A developer should be able to check the current {{Configuration.UI_MODE_NIGHT_MASK}}, i.e. dark theme vs light theme.",Improvement,Critical,Closed,"2019-10-01 16:11:31","2019-10-01 16:11:31",13
"The Titanium SDK ","iOS: Intermittent UI Layout test failures","We are seeing intermittent UI Layout test failures. Specifically here's a failure from a build: https://<USER><USER>org/job/titanium-sdk/job/titanium_mobile/job/8_2_X/46/testReport/    The test failures are variants of a test around TIMOB-23372, and expect a post layout event to have a rect with an x property equal to 10 (the left padding). Sometimes this event fires with a value of 9.    This appears to be related to simulators being created by our appium suite?    Failures:  Building for iOS Simulator: appiumTest-63D0910A-9E17-4437-AF50-781E3BCBC590-iPhone 7  Building for iOS Simulator: appiumTest-C4E4A63F-7A15-4130-A574-6E7FA5B5D620-iPhone 7    Passed:   Building for iOS Simulator: iPhone 11 Pro Max  Building for iOS Simulator: iPhone 11 Pro Max",Bug,Medium,Closed,"2019-10-24 18:02:18","2019-10-24 18:02:18",1
"The Titanium SDK ","Android: Setting ListView row item property not in template will be wrongly duplicated on offscreen rows","The customer discovered a bug with ListView on Android. The issue happens when having a very long list. They use one template for all items and show/hide certain parts of it depending on their business logic. They've noticed that when scrolling below the fold and scroll back up items are being re-rendered using styles from the LAST item in the list. Instead of showing/hiding items, they colored them red. Notice that when rendered it looks correct. When scrolling down and encounter accounts colored with red background and scroll up - previously non-colored accounts also get the red background. The customer tested on Samsung S6, S7, S8, S9, S10 with SDK 8.2.0 GA.  Note: We tested the issue on 8.2.0.GA, Sumsang Galaxy A7(Android 9) and the issue is reproducible on our end.    *Test steps:*  1. Download the attached project.  2. Open <USER>studio and import the project.  2. Run the project on a device.    *Test code:* https://drive.google.com/file/d/14BetKOnAO_JN7Kr33sJti65Jcmdrkga3/view?usp=sharing    *Test result:* https://drive.google.com/file/d/10PFwqwx-CYTnJzfft6PmFpZG_UF1TDGp/view?usp=sharing    Note: On iOS it works as expected.",Bug,Critical,Closed,"2019-10-24 02:14:09","2019-10-24 02:14:09",5
"The Titanium SDK ","Android: Videos do not play correctly on Android 5.1 (API 22)","*Summary*  When playing a video from URL using Media.VideoPlayer, the video freezes after 2-3 seconds and errors are displayed on Android 5.1 (API level 22).    *Steps to reproduce*  # Create a Classic titanium app project  # Add the below code to _app.js_  # Use any of the affected SDK versions (e.g. 8.2.0.GA)  # Run on Android API 22 emulator or device    {code:js}  var window = Ti.UI.createWindow({ fullscreen: true });  var videoView = Ti.Media.createVideoPlayer({   url: http://assets.<USER>com.s3.amazonaws.com/video/media.m4v,   autoplay: true,   width: Ti.UI.FILL,   height: Ti.UI.FILL,  });  window.add(videoView);  window.open();      *Expected Result*  The video should play as normal and there should not be any errors in the terminal.",Bug,Medium,Closed,"2019-10-23 10:34:02","2019-10-23 10:34:02",5
"The Titanium SDK ","Android: Build x86_64 module libraries","- Include {{x86_64}} ABI by default  - Build {{x86_64}} compatible V8 library  - Possibly drop {{x86}} ABI from defaults?",Improvement,High,Closed,"2019-10-21 20:54:52","2019-10-21 20:54:52",5
"The Titanium SDK ","iOS: App fails to launch with undefined is not an object on iOS 9","h5.Description    When building to an iOS 9 device/simulator the following error is seen, it's probable this is down to some of the recent refactorings in the build scripts relating to ti.main        h5.Steps to reproduce    1. Build an app to iOS 9    h5.Actual    Error above    h5.Expected    App should launch fine",Bug,High,Closed,"2019-10-21 10:08:51","2019-10-21 10:08:51",5
"The Titanium SDK ","iOS: App is crashing with SDK 8.2.0.GA on iOS 13 devices","If repeat the following operations on ios13, the app will crash. Crash logs and videos are attached herewith.What is the cause?    *Test steps:*    1. Start application  2. Select a video  3. Click on Choose  4. Wait for compressing video  5. Then move the app to the background with the home button. Wait for a few seconds after moving the app to the background and then click on the App icon for opening it.    It should be reproducible if repeated several times.    *Test project:* Click [here|https://drive.google.com/file/d/1d8KSP9olLafRle2O44ydMztlJ5H_oPkh/view?usp=sharing]    *Output:* [Video|https://drive.google.com/open?id=1np1TSXQ52D-1Op4cZXj8y30w0kmU-z_E]    *Note:* We also tested this on iPhone SE(13.1.3) and the issue is reproduced on our end. Video is uploaded on output section.",Bug,None,Closed,"2019-10-18 07:24:32","2019-10-18 07:24:32",8
"The Titanium SDK ","Android: Navigating back from camera overlay can wrongly close the app","When a Camera activity with an overlay is opened from the first window in an application and the system's back button is pressed the application gets closed.    *Test code:*  _app.js_        Opening a camera activity from another window and clicking back works as expected - only the camera activity is closed.    One reason this may happen is that the camera activity with an overlay does not have a WindowProxy child and this raises the {{exitOnClose}} flag when we go back from it with only one window in the stack. ",Bug,Low,Closed,"2019-10-17 14:33:55","2019-10-17 14:33:55",5
"The Titanium SDK ","Webpack: Automatically exclude Titanium modules","Titanium modules need to be marked as external so Webpack does not try to parse/bundle them.","New Feature",None,Closed,"2019-10-17 12:34:34","2019-10-17 12:34:34",5
"The Titanium SDK ","docs: deprecate Ti.Analytics.navEvent","- Deprecate old and unused {{Ti.Analytics.navEvent}}",Improvement,Medium,Closed,"2019-10-16 21:07:35","2019-10-16 21:07:35",2
"The Titanium SDK ","iOS: Map permission is not correct on specific iOS devices","After running following code:    I am getting following response:    After checking which permission was granted it appears that Ti.Geolocation.AUTHORIZATION_ALWAYS was granted instead of Ti.Geolocation.AUTHORIZATION_WHEN_IN_USE. This needs to be fixed.    *Test environment*: SDK- 8.2.0.GA  <USER>Command-Line Interface, version 7.1.1  Reproducible device: iPhone SE and iPhone 5C on IOS 10.3.3    I have tested on following device but cannot reproduce it:  iPhone 6+ (iOS 12.4.2) and iPod 5S(9.3.3)    *Note*: We have no iPhone SE and iPhone 5C devices available, so we failed to check this on those devices. ",Bug,None,Closed,"2019-10-16 20:15:55","2019-10-16 20:15:55",1
"The Titanium SDK ","Android: Replace clang Java formatter with gradle checkstyle tool","*Summary:*  The Android gradle build system includes its own checkstyle tool. This tool is used to enforce Java coding standards and to check for common Java coding errors. It can be used to trigger build errors that fails to pass the configured rules defined in a checkstyle.xml file.  https://docs.gradle.org/current/userguide/checkstyle_plugin.html  https://checkstyle.org/index.html    *To-Do:*  We should replace our existing clang-format tool in favor of this gradle checkstyle tool. The main reason is because the dev team does not know they are violating the clang linter's rules until its been ran on Jenkins (or ran manually via node).    * Jenkins is verifying the clang formatting rules by reformatting changed Java files and doing a comparison of files. This is too restrictive because the reformat of the files sometimes looks worse from a readability standpoint. (Too restrictive.)  * The dev team sometimes doesn't know they are violating clang's rules until a PR has been submitted to Jenkins or we run it manually via node. (Common mistake.)  ",Improvement,Low,Closed,"2019-10-16 01:23:12","2019-10-16 01:23:12",8
"The Titanium SDK ","Android: Add Java 8 support","*Summary:*  Titanium currently support Java 7 language features.    In Titanium 9.0.0, we would like to add Java 8 language features for the core SDK and all modules. This is needed since some 3rd party Android libraries use the Java 8 language, but we're currently unable to compile them into a module or via hyperloop.    *Limitations:*  Android has limited support for Java 8 language features which Google documents below. Note that older Android OS versions support less Java 8 features.  https://developer.android.com/studio/write/java8-support#supported_features    *Recommended Solution:*  We don't support Java 8 because Titanium is currently limited to using the dex command line tool in the Android SDK which only supports up to Java 7. Google's d8 command line tool supports Java 8. If we update our Titanium build system to use gradle, then we can easily add support for this.    Support can be added via the following build.gradle settings...  {code:groovy}  android {   compileOptions {    sourceCompatibility JavaVersion.VERSION_1_8    targetCompatibility JavaVersion.VERSION_1_8   }   // When we add Kotlin support in the future,   // then we must do the following as well.   kotlinOptions {    jvmTarget = 1.8   }  }  {code}    *Testing:*  We should add a Java 8 feature to our core Titanium code to prove that Java 8 compilation works for both the SDK and an app build. In our [TiUIView.java|https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/view/TiUIView.java] code, I recommend that we change the following code...  {code:java}  protected void setOnClickListener(View view)  {   view.setOnClickListener(new OnClickListener() {    public void onClick(View view)    {     fireEvent(TiC.EVENT_CLICK, dictFromEvent(lastUpEvent));    }   });  }  {code}    ...to use a Java 8 lambda as follows...  {code:java}  protected void setOnClickListener(View view)  {   view.setOnClickListener((clickedView) -> {    fireEvent(TiC.EVENT_CLICK, dictFromEvent(lastUpEvent));   });  }  {code}    We can then test the above via a Titanium {{Ti.UI.Button}} object's click event.  {code:javascript}  var window = Ti.UI.createWindow();  var button = Ti.UI.createButton({ title: Show Alert });  button.addEventListener(click, function() {   alert(Button clicked!);  });  window.add(button);  window.open();  {code}  ",Improvement,High,Closed,"2019-10-16 00:15:23","2019-10-16 00:15:23",5
"The Titanium SDK ","Android: Unable to load large image to image view","The customer has a requirement where they need to get image and display it in the image view. Few images are not displayed even though images are bind to the image view.    *It is throwing warning “[WARN] : OpenGLRenderer: Bitmap too large to be uploaded into a texture (4196x3363, max=4096x4096)”.*   I    {panel}  This issue is happening because of size 4196x3363, max=4096x4096. The log mentions the max size max=4096x4096. Is there any solution or workaround for this issue?  Note : This issue is on Nexus 7(OS 6.0.1) and Samsung s4(OS 4.4) devices. It is working fine on Pixel(9.0) device. Tested with 8.0.2.GA Ti SDK and 8.2.0.GA Ti SDK.    {panel}      Sample Test Code:    *Steps to reproduce:*  1. Create a sample classic project  2. Replace the app.js with attached app.js content.  3. Place the attached test.png under “Resources” folder.  4. Run the app in Nexus 7 device.    *Expected*: Image should bee rendered properly.  *Actual:* Image not rendered and throwing warning in the console.    *Note:*  We tested it and able to reproduce with the big image as like the customer image on HTC M8 eye v6.0.1      ",Bug,None,Closed,"2019-10-15 11:19:24","2019-10-15 11:19:24",1
"The Titanium SDK ","iOS: SelectedBGColor of list item is overriding the BG color view","h6.Problem  When adding background color for Ti.UI.View/Label of the ListView item.  But on the select of list view item, selectedBackgroundColor of the list item is overriding the background color of the Ti.UI.View.    h6.Reproduce  1. Create a default classic app.  2. Use the attached app.js code.  3. Run the code on SDK 8.1.0 and 8.2.0    h6.Expected  When clicking on the ListView item, we should still see the background color of the Ti.UI.View.    h6.Actual  When clicking on the ListView item,  unable to see the background color of the Ti.UI.View. (attached screenshot)    h6.Note  1. This happens on simulator and device on iOS 12 and below  2. Based on the customer's comment, it happened to the iOS 13 devices.  3. I do test that It is working well on iOS 13 simulator. ",Bug,None,Resolved,"2019-10-15 08:11:28","2019-10-15 08:11:28",5
"The Titanium SDK ","Android:Extra padding if enableZoomControl is true for imageView on 8.2.0.GA","The customer has a requirement where they need to display an image inside a scrollview and provide zoom controls for that image. But they are able to see the extra spacing at top and bottom of the image. If the enableZoomControls is set to false, image displayed properly without any extra spaces. Currently they are using 8.0.2.GA SDK.   Note: We tested the issue on 8.2.0.GA, Huawei Gr3 2017(Android 7) and the issue is reproduced on our end.      *Test steps:*    * Create a classic project  * Download the image file and paste it on resources  * Paste the sample code to app.js  * Run the project on device. After running, we are able to see the extra spacing at top and bottom of the image.    *Test Code:*        *Test Output:*  enableZoomControls is true:   !Screenshot_20191010-155604.png|thumbnail!       enableZoomControls is false:   !Screenshot_20191010-155205.png|thumbnail! ",Bug,None,Closed,"2019-10-10 10:09:48","2019-10-10 10:09:48",1
"The Titanium SDK ","iOS: tintColor not working for TabbedBar/ButtonBar on iOS 13","With iOS 13 the styling of the {{UISegmentedControl}} significantly changed. Previously the color of the selected element and the border color could simply be set with {{tintColor}}. Now this requires a combination of {{backgroundColor}} / {{selectedSegmentTintColor}} / {{setTitleTextAttributes}} and manual settings for borders using the underlying {{layer}}.    See also https://stackoverflow.com/a/56874473/1168989    *Steps to reproduce the behavior*  {code:js}  const win = Ti.UI.createWindow({   backgroundColor: 'black'  });  var test = Ti.UI.createTabbedBar({   labels: [ '1', '2', '3', 'AUTO' ],   tintColor: 'white'  });  win.add(test);  win.open();  {code}    *Actual behavior*  The controls has no border and unselected elements are barely visible. !Schermata 2019-10-10 alle 11.21.28.png|thumbnail!     *Expected behavior*  The control has a border and unselected element are colored according to {{tintColor}}. !Schermata 2019-10-10 alle 11.21.24.png|thumbnail! ",Bug,High,Closed,"2019-10-10 09:55:21","2019-10-10 09:55:21",5
"The Titanium SDK ","Parity: Ti.Filesystem.getFile inconsistent in support of various URIs across platforms","Between iOS and Android, we have very inconsistent support for various URIs we can pass in to refer to files. Some of this is expected, as Android has platform specific {{content:}}, {{appdata-private:}}, {{android.resource:}}, and {{file:///android_asset}} schemes.    However, there's many differences in handling {{file:}} URIs, {{app:}} URIs, and paths with no scheme.    Specifically in calling {{Ti.Filesystem.getFile()}}:  - iOS does not seem to support using {{app:}} URIs. (A workaround would be to call {{Ti.App.appURLToPath()}} on it first? Which is an undocumented public API!)  - Android doesn't support {{file://}} or {{file:}} URIs for relative paths and assumes/forces absolute  - iOS can't handle {{file:}} URIs (no trailing double-slash on the scheme)  - Android assumes {{appdata-private:}} scheme implicitly if not scheme is provided    See the test suite here: https://github.com/<USER>titanium_mobile/blob/6f176428755144db135986b281d08430fd036692/tests/Resources/ti.filesystem.file.addontest.js",Bug,High,Open,"2019-10-09 14:54:15","2019-10-09 14:54:15",13
"The Titanium SDK ","AMPLIFY Crash Analytics (ACA) module: Geolocation information in the new Crash tab.","Hello,  We´ve noticed that the old version of the Crash Reports within the Performance Tab was the Geolocation information. But since it´s being deprecated, but we need the Geolocation information from the crashes detected on the new Crash Tab.    Is it possible to add this feature to the new Crash tab? this information is important for us to have on each crash.      Thank you.","New Feature",None,Resolved,"2019-10-03 18:36:16","2019-10-03 18:36:16",5
"The Titanium SDK ","iOS: Building using Xcode 10.3 and 8_2_X Throws a Compile Error","Building for target 12.4 simulators on Xcode 10.3 errors out with a compile error when building on SDK 8.2.1.v20191001063013.        [~<USER> points to this being from the following changes:  https://github.com/<USER>titanium_mobile/commit/b1d6ce01a164e8a7d23edae8ba22d0f788a87716#diff-e1a4da0f4a0b16271e27fc854bcd357fR10    https://github.com/<USER>titanium_mobile/commit/b1d6ce01a164e8a7d23edae8ba22d0f788a87716#diff-e1a4da0f4a0b16271e27fc854bcd357fR215-R223",Bug,High,Closed,"2019-10-02 11:33:11","2019-10-02 11:33:11",2
"The Titanium SDK ","Android: Re-layout of deeply nested views can cause performance issues as of 7.5.0","*Summary:*  If you have very deeply nested views (say 15 or more), then anything that causes them to be re-laid out can cause noticeable performance issues as of Titanium 7.5.0.    *Steps to reproduce:*  # Build and run the below code on Android.  # Tap and hold on the text within the {{TextField}}.  # Notice that the app hangs for a couple of seconds.  # Rotate the device to landscape.  # Notice that the app hangs for a couple of seconds.        *Cause:*  This regression was introduced in 7.5.0 when we added the extendSafeArea and safeAreaPadding feature. The performance issue is caused by our Java [TiCompositeLayout.onApplyWindowInsets()|https://github.com/<USER>titanium_mobile/blob/3b925d3b89e0d59bf89b846bfa127e9656746dbf/android/titanium/src/java/org/<USER>titanium/view/TiCompositeLayout.java#L460] method when you have deeply nested views (say 15 or more layers). The dispatched window inset handling appears to get exponentially worse the more views you have nested. Especially since each child view that applies those insets triggers a request-layout.    *Work-around:*  Only known work-around is to not nest your views so deeply. Try not to nest more than 10 layers deep.  ",Bug,Critical,Closed,"2019-10-02 02:10:44","2019-10-02 02:10:44",5
"The Titanium SDK ","EncryptedDB ResultSet field and fieldByName functions are returning incorrect values on Android","Calling .field() or .fieldByName() on an encrypteddatabase (3.0.4) ResultSet returns a boolean false if the value of the field is NULL.  This issue seems to be isolated to this module on Android with the 8.1.0.GA SDK.  8.0.0.GA and iOS don't have this issue, nor does the built-in Ti.Database.ResultSet.  A small sample project is linked below.  Run this app on an Android device and see the discrepancies between the console log outputs for non-encDB and encDB.  Running on iOS or switching back to 8.0.0.GA alleviates the discrepancy.    Sample project:  https://drive.google.com/file/d/1HW1jxvUPZ67_HVx1Phe-PqgJKeVQygLp/view?usp=sharing",Bug,Critical,Closed,"2019-08-28 20:52:57","2019-08-28 20:52:57",5
"The Titanium SDK ","Use Webpack as the JavaScript build pipeline","This Epic is used to track the remaining tasks that are required to integrate Webpack as an alternative step in our build pipeline to <USER>JavaScript files and other related assets.",Epic,None,Closed,"2019-09-30 10:54:49","2019-09-30 10:54:49",21
"The Titanium SDK ","iOS 13: Natively presented modal windows are not dismissed properly","When using iOS 13, native modal windows like the one from {{Ti.Media.showCamera}} are not presented correctly, causing the underlaying view controller to not be dismissed correctly.    {code:js}  var win = Ti.UI.createWindow();  var btn = Ti.UI.createButton({ title: 'Show camera' });    btn.addEventListener('click', () => {    Ti.Media.requestCameraPermissions(event => {      Ti.Media.showCamera({        success: () => {},        error: () => {},        cancel: () => {},      });    });  });    win.add(btn);  win.open();  {code}  ",Bug,High,Closed,"2019-09-30 07:31:58","2019-09-30 07:31:58",5
"The Titanium SDK ","Android: Video player splashing black screen just before playing video","*Issue Description:*  When trying to play video in video player, it shows a black screen just before playing video using Ti SDK 8.2.0 on android 8 and 8.1.0    *Steps to reproduce:*  1. Create an alloy project and replace the code  2. Download test.mp4 video file from the attachment and place that in app/assets/android/video folder.  2. Build the project and observe it'll show a black screen before playing the video.    *Expected:* Shouldn't show any black screen before playing the video.  *Actual:* Shows a black screen before playing the video.    *Attachment:* See the screencast black_screen_issue.mp4     *Test Code:*  *index.xml:*      *index.js*      ",Bug,Trivial,Resolved,"2019-09-27 12:27:05","2019-09-27 12:27:05",0
"The Titanium SDK ","Android: ImageView.toImage() does not return the correct Ti.Blob","- {{Titanium.UI.ImageView.toImage}} does not return the image {{Blob}} for the current image.    *TEST CASE*  {code:js}  const Map = require('ti.map');    const win = Ti.UI.createWindow({ backgroundColor: 'white' });    const img = Ti.UI.createImageView({      width: 28,      height: 28,      image: 'appicon.png'  });    const map = Map.createView({      region: { latitude: -33.87365, longitude: 151.20689, latitudeDelta: 0.1, longitudeDelta: 0.1 },      annotations: [          Map.createAnnotation({              latitude: -33.87365,               longitude: 151.20689,              title: 'Icon',              image: img.toImage() // Should see icon center of map              // image: 'appicon.png'          })      ],  });    win.add(map);  win.open();  {code}",Bug,None,Closed,"2019-09-25 19:54:59","2019-09-25 19:54:59",3
"The Titanium SDK ","Ti.Contacts.getAllPeople() fails on iOS 13","Apple have added a new entitlement com.apple.developer.contacts.notes which allows apps to access the notes field of the contact db. The new entitlement is on a per app basis with developers required to put their case to Apple to gain it.    Titanium requests CNContactNoteKey as part of the Ti.Contacts.getAllPeople method. This triggers a CNErrorDomain error 102.    Any app compiled for iOS 13 without this entitlement will not be able to use the Ti.Contacts module for anything; regardless of needing the notes field.    To test create an empty project with the following in tiapp.xml            <key>NSContactsUsageDescription</key>          <string>Contacts test</string>    Add the following to alloy.js  var people = Ti.Contacts.getAllPeople();    error in console        ",Bug,Critical,Closed,"2019-09-22 23:06:08","2019-09-22 23:06:08",5
"The Titanium SDK ","Fix node-ios-device v1 to work on Node 12","We have little choice but get node-ios-device v1 to work with Node 12. We need this to buy us time until the tooling switches over to ioslib v3 with node-ios-device v2, which does support Node 12.",Bug,None,Resolved,"2019-09-23 15:34:55","2019-09-23 15:34:55",21
"The Titanium SDK ","iOS: Window hideShadow and shadowImage property doesn't works on iOS 13","There was a trick to remove the shadow on navigation bar. It consisted on set a image of the same color as the background and set it to *barImage* property and set *hideShadow* to true.    It is working with 8.2.0.GA on iOS 13 < but not on iOS 13.    tss:            This line could be related with:    https://github.com/<USER>titanium_mobile/blob/11aef9cc1069c395e8f9a45570633e40dd80f76e/iphone/TitaniumKit/TitaniumKit/Sources/Modules/TiUIWindowProxy.m#L442    On the screenshot attached:    - iOS 13 on the left side.  - iOS 12 on the right side.    ",Bug,Critical,Closed,"2019-09-23 12:01:40","2019-09-23 12:01:40",5
"The Titanium SDK ","Android: App stuck at launch screen when opened through notification","We noticed a strange behavior where the app sometimes hangs on the launch screen when opened through the click on a notification (Firebase powered). For sample code, please refer to our app thats internally shared.",Bug,Medium,Closed,"2019-09-23 12:05:54","2019-09-23 12:05:54",5
"The Titanium SDK ","Kitchensink : Liveview is not working ","Steps To Reproduce:  1.import kitchen sink   2.run on android or iOS device./simulator with live view    Notes:  live view works fine on default classic and alloy app  Expected:  live view should work fine    Actual:  [ERROR] :  Script Error {    [ERROR] :      column = 24;    [ERROR] :      line = 666;    [ERROR] :      message = [LiveView] File Server unavailable. Host Unreachable @ 192.168.0.17:8324\n[LiveView] Please ensure your device and computer are on the same network and the port is not blocked.;    [ERROR] :      sourceURL = file:///Users/<USER>Library/Developer/CoreSimulator/Devices/2A09648F-A541-4DD5-9E06-3B6087C54CB3/data/Containers/Bundle/Application/BFC9131E-82B1-42A3-AABC-3756D8287256/KitchenSink.app/app.js;    [ERROR] :      stack =     at _getRemoteSource(/app.js:666:24)\n    at _getSource(/app.js:682:35)\n    at _compile(/app.js:718:30)\n    at require(/app.js:586:25)\n    at patch(/app.js:424:45)\n    at (/app.js:763:15)\n    at (/app.js:768:3)\n    at global code(/app.js:771:70)\n    at require@[native code]\n    at (/ti.main.js:11677:10)\n    at loadAsync(/ti.main.js:11603:13)\n    at global code(/ti.main.js:11674:10);    [ERROR] :      toJSON = <KrollCallback: 0x600001d9dfc0>;    [ERROR] :  }    [DEBUG] :  Firing app event: uncaughtException    [ERROR] :  Script Error {    [ERROR] :      column = 10;    [ERROR] :      line = 11677;    [ERROR] :      message = Module \app.js\ failed to leave a valid exports object;    [ERROR] :      sourceURL = file:///Users/<USER>Library/Developer/CoreSimulator/Devices/2A09648F-A541-4DD5-9E06-3B6087C54CB3/data/Containers/Bundle/Application/BFC9131E-82B1-42A3-AABC-3756D8287256/KitchenSink.app/ti.main.js;    [ERROR] :      stack =     at require@[native code]\n    at (/ti.main.js:11677:10)\n    at loadAsync(/ti.main.js:11603:13)\n    at global code(/ti.main.js:11674:10);    [ERROR] :      toJSON = <KrollCallback: 0x600001d87400>;    [ERROR] :    ",Bug,None,Closed,"2019-09-19 04:53:14","2019-09-19 04:53:14",5
"The Titanium SDK ","Android: Cannot select content from downloads","I downloaded the following image to the device, so after that in the app I am selecting the image from the gallery of download, and it is causing a black/ gray window after selecting the image.    http://www.effigis.com/wp-content/uploads/2015/02/Airbus_Pleiades_50cm_8bit_RGB_Yogyakarta.jpg    The purpose of use this huge image it is that I am using the ti.imagefactory module to compress the image, but at the moment I am selecting the image downloaded the app is behaving in this way showing a black or gray window.     Note this issue is not happening in iOS.    XML:          JS:            Please let me know whether you have any doubt or question.    Thanks, and best,  <USER>  ",Bug,Critical,Closed,"2019-08-21 18:33:04","2019-08-21 18:33:04",3
"The Titanium SDK ","CLI: Semantic colors file lookup does not work correctly in classic applications","h5.Description    When looking up the {{semantic.colors.json}} file for classic applications we look in {{Resources/iphone}} this isn't really the place we want to find it. We want to also look in {{Resources}} as it's intended to be cross-platform    h5.Steps to reproduce    1. Get the project from https://github.com/ewanharris/darkmode-example-classic  2. Build to an iOS 13 sim/device  3. Toggle dark mode    h5.Actual    App has white window and black label always    h5.Expected    App should change between a yellow window with a red label (light mode) and green window with a pink label (dark moe)",Bug,Medium,Closed,"2019-09-16 13:03:56","2019-09-16 13:03:56",3
"The Titanium SDK ","Android: Random assets missing after compiling","    I have some local websites in my /app/assets/www/ folder to display charts and barcodes. While it worked fine with 8.0.2.GA I have some big issues with the latest 8.1.1.GA or CLI version listed above. Every compile a different item out of the /app/assets/www is missing!     !Screenshot_20190907_200524.png|thumbnail!     on the left side is my folder. I've open the APK inside a zip tool: the middle is the first run, the right image is the last run. Some files are the same but some files are missing.   I've tried to rename the files but that didn't work either",Bug,Critical,Closed,"2019-09-07 18:19:22","2019-09-07 18:19:22",5
"The Titanium SDK ","iOS: Support new devices in os.cpus()","- {{os.cpus()}} will fail for newer devices    **TEST CASE**  {code:js}  const os = require('os');  console.log(JSON.stringify(os.cpus(), 1));  {code}",Improvement,High,Closed,"2019-09-11 23:26:54","2019-09-11 23:26:54",3
"The Titanium SDK ","CLI: module build gives misleading error message when passed in Android SDK build tools is not installed","Jenkins modules builds were mysteriously failing suddenly on a new build node. Turns out I no longer was installing Android SDK build tools 25.0.3 but out pipeline library to build native modules was specifying to use that version.    The error message it displays in this case is misleading and partially incorrect. It indicates that Builds tools 25.0.3 is not installed (correct!), but then summaries the various tool components versions that are installed and states build tools 25.0.3. is currently installed there (incorrect!).    Please see the screenshot for the exact error.",Improvement,None,Open,"2019-09-11 16:20:53","2019-09-11 16:20:53",5
"The Titanium SDK ","Update Hyperloop to 4.0.4","Update the SDK's bundled Hyperloop version to 4.0.4",Story,None,Closed,"2019-09-10 17:06:38","2019-09-10 17:06:38",3
"The Titanium SDK ","iOS: Correctly decode push notification token","h5.Description    On iOS 13 registering for push notifications returns an invalid device token, this is because the way we decode the device token has been broken by apple (although it seems it wasnt a recommended way anyways)    See https://github.com/OneSignal/OneSignal-iOS-SDK/pull/509        h5.Steps to reproduce    1. Add the below code to an app.js or alloy.js    h5.Actual    The device token printed looks like       h5.Expected    The device token should look like    ",Bug,High,Closed,"2019-09-09 13:12:07","2019-09-09 13:12:07",3
"The Titanium SDK ","iOS 13: App can crash if deprecated statusBarFrame property is called","When accessing the (in iOS 13 deprecated) statusBarFrame property, e.g. for rare view controller changes, the app can crash. Migrating to the iOS 13+ statusBarManager API of the UIWindowScene will fix the issue.    It can be reproduced by trying my [titanium-scanner|https://github.com/hansemannn/titanium-scanner] module and clicking Cancel on the scanner view controller.    Pull request: https://github.com/<USER>titanium_mobile/pull/11201",Bug,High,Resolved,"2019-09-08 20:15:35","2019-09-08 20:15:35",0
"The Titanium SDK ","iOS: CORS Issue, origin of header is always null since SDK 8","h6.Problem Description:    As of SDK 8, any XMLHttpRequest performed inside a WebView from a file has a header of origin: null. This is a behavior that was not present in SDK 7 and only affects IOS. (It seems to be due to the change to WKWebview.)    We use the WebView in an authentication workflow where we have an intermediate HTML file with the necessary javascript to perform the redirections/progress the sign in. This is an HTML page in resources/www.    Due to the fact this header is now   A) Being set for seemingly all requests, even GET   B) is always null   This is breaking our authentication <USER>and we cannot continue developing our application until it is fixed.    There does not appear to be any way to currently set this via titanium, there is also nothing in the documentation. We cannot set Access-Control-Allow-Origin * / null as this would pose a security risk server-side.    We need to be able to switch back to using UIWebview in the new SDK, the origin header dropped, or, the origin header has a correct value (https://localhost/.....).    h6.Reproduce  1. Create a new alloy projet.  2. Add attached file.  3. Run the app to iOS device  4. Monitor network traffic so you can see the request headers (as per screenshot attached).",Bug,None,Closed,"2019-09-06 10:48:24","2019-09-06 10:48:24",0
"The Titanium SDK ","Windows:Using hint text on Textfield and 'passwordMask' property is true, the hint text is not shown when the TextField is cleared programmatically","For a TextField with hint text, if the 'passwordMask' property is true, the hint text is not shown when the TextField is cleared programmatically like on click of a button like below.    But, it works fine case of manual clearing of the same TextField. Also, for a TextField with 'passwordMask' property as false, it works without any issue in both manual and programatic clearing of the field.The customer is facing issue on *Windows 10 version 1809 desktop*.It Works fine for Android and iOS.    A screenshot is posted to the click of Reset button. On that button click, text fields are cleared. But, hint text is restored only for the Username field and not for Password field.    *Testing Environment:*            *Sample test case:*          *Test Steps:*    1. Open the app.  2. Enter some values in Username and Password fields.  3.Click the Reset button which programmatically clear the Text Fields.        *Test Output:*    *Curent Result:* Password field cleared and hint text is not shown.  *Expected Result:* Password field cleared and hint text to be shown.    ",Bug,Medium,Resolved,"2019-09-05 06:28:06","2019-09-05 06:28:06",8
"The Titanium SDK ","Android: Disable minifying of Javascript source","- Production applications using ACA without source-maps will produce illegible crash reports due to minification of the source code.  - Although minifying the source can reduce file size, the benefit for Titanium applications isn't significant like it is for web applications.  - We should set minifying to {{false}} by default for both {{production}} and {{development}} deploy types.",Improvement,Medium,"In Review","2019-09-04 22:00:48","2019-09-04 22:00:48",3
"The Titanium SDK ","iOS: Disable minifying of Javascript source","- Production applications using ACA without source-maps will produce illegible crash reports due to minification of the source code.  - Although minifying the source can reduce file size, the benefit for Titanium applications isn't significant like it is for web applications.  - We should set minifying to {{false}} by default for both {{production}} and {{development}} deploy types.",Improvement,Medium,"In Review","2019-09-04 18:24:04","2019-09-04 18:24:04",3
"The Titanium SDK ","iOS: Malformed Xcode project warning printed on every build","The following is printed as red error text when building for iOS:        Those are warnings that indicate a malformed Xcode project. Since they will be printed as red warning messages they get especially confusing when the build actually fails.",Improvement,None,Closed,"2019-09-04 11:35:15","2019-09-04 11:35:15",1
"The Titanium SDK ","Android: Border Radius once set on a view cannot be reset( i.e. set to 0)","        Currently as a workaround I am setting the borderRadius to 0.1 instead of 0.",Bug,Critical,Closed,"2019-07-19 08:29:14","2019-07-19 08:29:14",1
"The Titanium SDK ","iOS: Apps can be rejected when including UIWebView refs","Users submitting apps this week are seeing the following notification:  {quote}  ITMS-90809: Deprecated API Usage - Apple will stop accepting submissions of apps that use UIWebView APIs . See https://developer.apple.com/documentation/uikit/uiwebview for more information.  {quote}    This even occurs for SDK 8+ apps that use the WKWebView instead of the (deprecated) UIWebView. The reason is (I think) that there are still some UIWebView* left overs that aren't even used anymore. Removing them will very likely fix the issue.",Bug,High,Closed,"2019-08-30 10:54:25","2019-08-30 10:54:25",5
"The Titanium SDK ","iOS: Video player not getting closed in iOS version 10.x.x and below","Hello,    Video player is not getting closed in iOS version 10.x.x and below but on iOS version 12 or above it's working fine.     *Test Environment:*  <USER>Command-Line Interface, version 7.1.0  Operating System    Name                        = Mac OS X    Version                     = 10.14.5    Architecture                = 64bit    # CPUs                      = 4    Memory                      = 8589934592  Node.js    Node.js Version             = 8.9.1    npm Version                 = 5.5.1  Titanium CLI    CLI Version                 = 5.2.1  Titanium SDK    SDK Version                 = 8.1.0.GA  iOS device: iPhone 6plus(12.4), iPod 5G(9.3.3),  iPhone OS 10.3.3    *Test code:*  app.js    playvid.js      *Steps to reproduce the issue:*  1. Run the project on iOS 10.x.x enable device  2. Click on the red window video play button.  3. Opened the video player window and it's paying the video  4. Make it full Screen and wait until complete the video  5. It's not returning to the Red window on iOS 10.x.x device(Check Screenshot).    But it's working fine on iOS 12 or above device.    Thanks",Bug,None,Closed,"2019-08-29 19:00:08","2019-08-29 19:00:08",1
"The Titanium SDK ","iOS: Logger sometimes does not connect on concurrent builds (Xcode 11)","This is an intermittent issue where sometimes when doing concurrent builds with xCode11, the logger will not connect and console log stops at (even though the sim launches the app):      *Test Steps*  # Create a titanium application   # Run application to an iOS sim   # Notice that the logger connects when application is launched on the Sim  # Run application again    *Expected result*  Application should run on the Sim and Logger should connect     *Actual result*  Application launches on Sim but logger stops at the above message. ",Bug,None,Closed,"2019-08-29 15:13:43","2019-08-29 15:13:43",0
"The Titanium SDK ","Hyperloop example with Xcode 11 throws error on pod","**Steps To Reproduce:**  1.import Hyperloop example  2.Run on iOS simulator 13     *Expected:*  Hyperloop should be installed and launch fine   *Actual:*  throws error  [WARN]  [Hyperloop] CocoaPods 2019-08-28 16:10:45.042 xcodebuild[36945:2593098]  DTDeviceKit: deviceType from aa9928797e2fd58e6dce8e858e5e8afcbce393bf was NULL  [WARN]  [Hyperloop] CocoaPods 2019-08-28 16:10:45.085 xcodebuild[36945:2593092]  DTDeviceKit: deviceType from aa9928797e2fd58e6dce8e858e5e8afcbce393bf was NULL  [TRACE] [Hyperloop] CocoaPods note: Using new build system  [WARN]  [Hyperloop] CocoaPods 2019-08-28 16:10:45.387 xcodebuild[36945:2593095] unable to create build operation: Error Domain=com.apple.xcbuild Code=1 unknown error while handling message: missingTarget(guid: 345a28d23c8e4235945c90e2e6ffcfba1a6c203c29e67926a1f49846b3a914d9) UserInfo={NSLocalizedDescription=unknown error while handling message: missingTarget(guid: 345a28d23c8e4235945c90e2e6ffcfba1a6c203c29e67926a1f49846b3a914d9)}  [WARN]  [Hyperloop] CocoaPods ** BUILD FAILED **  [ERROR] An error occurred during build after 5s 671ms  [ERROR] the xcodebuild failed running from /Users/<USER>Documents/<USER>Studio_Workspace/hyperloop-examples2/Pods    Note:  on Xcode 10 it is hyperloop example works fine with cocoa pod version less that 1.6  on Xcode 11 it throws the error",Bug,High,Closed,"2019-08-28 21:47:08","2019-08-28 21:47:08",13
"The Titanium SDK ","Watch app does not get installed on the watch with watch OS 6.0 & IOS 13","h5. Steps to reproduce:  1. Use the watch app here : https://github.com/<USER>developer-relations/appc-sample-watchos2  2. Build it to a watch & iPhone simulator.    h5.Actual result:  1. You will see the app installs on the phone but does not install on the watch.    h5.Expected result:  1. The app should install on both phone & watch.",Bug,None,Closed,"2019-08-27 17:50:09","2019-08-27 17:50:09",8
"The Titanium SDK ","iOS: Support Apple Developer certificates","h5.Description    Apple has introduced a new Apple Developer certificate that encompasses signing for iOS, MacOS, tvOS, and WatchOS applications. I believe this was the root cause of TIMOB-27330.    Places we need to update:    Titanium CLI/SDK:    ioslib@v1 - update cert.js to also scan for Apple Development and Apple Distribution    Daemon:    ioslib@v2 & v3: Update the regex to include Apple Development and Apple Distribution    Studio:    Might need to update the property it uses from the cert object to display in the UI, currently it's possible for two certs to share an identical {{name}} i.e. {{<USER>(EH123J4ST56)}}, so only one appears to be added to the cert list, the only way to differentiate is via the {{fullname}} i.e. {{Apple Distribution: <USER>(EH123J4ST56)} vs {{iPhone Distribution: <USER>(EH123J4ST56)}}",Improvement,High,Closed,"2019-08-27 10:44:05","2019-08-27 10:44:05",8
"The Titanium SDK ","iOS: New JSCore crashes","We are noticing some new JSCore crashes recently, a few reports (mostly on iPad Mini and iPad Pro) are attached. The wider issue is that it seems like most crashes only produce dead locks, so our tracking like Firebase does not catch them. It seems to be once again related to firing events and handling callbacks.",Bug,None,Open,"2019-08-26 13:09:40","2019-08-26 13:09:40",13
"The Titanium SDK ","iOS: Unable to send Date() object in event payload","- iOS is unable to properly serialize a Javascript {{Date}} object in an event payload    *TEST*  {code:js}  Ti.Analytics.featureEvent('test.date', { date: new Date() });  {code}    *EXPECTED*  - Should not crash    *ACTUAL*  - Crashes application",Bug,High,Closed,"2019-08-23 21:56:36","2019-08-23 21:56:36",5
"The Titanium SDK ","Analytics: Improve event batching","- Improve event batching for both iOS and Android  - Send batches of 20 events for improved reliability in low connectivity environments  - Increase batch frequency to accommodate for a large number of events",Improvement,High,Closed,"2019-08-23 21:53:58","2019-08-23 21:53:58",8
"The Titanium SDK ","iOS: Unit tests failing on Xcode 11 / iOS 13","Once we started building and running against Xcode 11 and iOS 13, we have two unit tests that started failing:    ios.Titanium.UI.iOS.#createPreviewContext() - expected 0 to equal 300  ios.Titanium.UI.Window..safeAreaPadding for window inside navigation window with extendSafeArea true - expected 34 to equal 0    This can be found on any of our recent master branch builds on master",Bug,High,Closed,"2019-08-23 15:17:40","2019-08-23 15:17:40",5
"The Titanium SDK ","iOS: httpClient returning image response as undefined.","*Customer issue:* As part of Titanium SDK migration from 7.5.2.GA to 8.1.0.GA titanium SDK, we are encountering an issue when we are fetching image from server and checking if the response is Blob or not by converting to .toString().   It is returning “undefined” with 8.1.0.GA but returning blob object with 8.0.2.GA, 7.5.2.GA.     Steps to reproduce:   1. Create a classic mobile app with 8.1.0 SDK.   2. Replace app.js file content with attached app.js.   3. Run on iOS device.   4. check the info in the console.     Thanks",Bug,None,Closed,"2019-08-23 15:09:27","2019-08-23 15:09:27",2
"The Titanium SDK ","Android: WebView.stopLoading() is not functional when triggered by events","{{Titanium.WebView.stopLoading()}} has no effect when called from events.    *TEST CASE*  {code:js}  const win = Ti.UI.createWindow();  const webView = Ti.UI.createWebView({ url: 'https://google.com/' });    // prevent page from loading.  webView.addEventListener('beforeload', e => {      webView.stopLoading();  });    win.add(webView);  win.open();  {code}    *EXPECTED*  - Page is prevented from load, displaying a blank screen.    *ACTUAL*  - Page loads.",Bug,High,Closed,"2019-08-22 18:07:04","2019-08-22 18:07:04",5
"The Titanium SDK ","Improve console debugging capabilities with util.inspect","Debugging with any of the {{console}} or {{Ti.API}} logging functions needs some improvement when it comes to printing object structures. Since 8.1.0.GA printing an object simply outputs {{[object Object]}} in some cases which is not very useful.    With TIMOB-26670 we now have {{util.inspect}} available and we should hook that up with {{console}} and {{Ti.API}} just like Node.js does for extensive logging/debugging capabilities.    A few examples:    ",Improvement,None,Closed,"2019-08-20 20:33:14","2019-08-20 20:33:14",21
"The Titanium SDK ","iOS regression: Console.warn/error don't log all parameters","When using console.log/warn/error usually all parameters get logged, however since SDK 8.1.0 this is no longer the case.    If you run this code:  {code:js}  console.log('a', 'b');  console.warn('a', 'b');  console.error('a', 'b');    [INFO]  a b  [WARN]  a  [ERROR] a   {code}    It should log {{a b}} for all 3 types.    It works fine for Android and iOS SDK 8.0.0.GA",Bug,High,Closed,"2019-08-19 10:37:43","2019-08-19 10:37:43",5
"The Titanium SDK ","iOS: Invalid iOS simulator error is shown when doing concurrent builds with iOS 13","When running concurrent iOS builds on simulators the following error is seen in Studio:    The cli also shows this error:      *Test Steps*  # Create a titanium project   # Run the project in APPC studio or through the CLI (e.g. {{appc run -p ios -C 8B89634B-0E8B-4286-8839-7CEE6A035700 -I 13.0}})  # Re-run the project without closing the Simulator    *Actual result*  Above error is shown    *Expected result*  Above error should not be shown and application should launch on the simulator       ",Bug,High,Closed,"2019-08-15 10:09:00","2019-08-15 10:09:00",0
"The Titanium SDK ","Android: Pre-cache common JS assets","- Common Javascript assets such as {{app.js}} or {{alloy.js}} etc.. could be pre-loaded and cached until they are used, speeding up {{require()}} calls.  - A {{cache.json}} could list the assets to be loaded upon launch and can be generated at build time.",Improvement,Low,Closed,"2019-08-14 18:29:25","2019-08-14 18:29:25",8
"The Titanium SDK ","Windows: TableView constantly fires scrollend during mouse drag","TableView constantly fires {{scrollend}} event during dragging scroll bar with PC mouse.     !drag.png|thumbnail!         Expected: {{scrollend}} happens only when you finish scrolling bar with mouse drag.    ",Bug,High,Closed,"2019-08-14 01:48:00","2019-08-14 01:48:00",8
"The Titanium SDK ","Android: Address deprecated methods","There are many deprecated methods referenced by our codebase that we should address:    {quote}  *android/runtime/common/src/java/org/<USER>kroll/common/TiConfig.java*  Warning:(9, 20) java: android.util.Config in android.util has been deprecated  Warning:(28, 38) java: android.util.Config in android.util has been deprecated  Warning:(28, 44) java: DEBUG in android.util.Config has been deprecated  Warning:(29, 38) java: android.util.Config in android.util has been deprecated  Warning:(29, 44) java: DEBUG in android.util.Config has been deprecated  Warning:(30, 39) java: android.util.Config in android.util has been deprecated  Warning:(30, 45) java: DEBUG in android.util.Config has been deprecated  Warning:(31, 42) java: android.util.Config in android.util has been deprecated  Warning:(31, 48) java: DEBUG in android.util.Config has been deprecated  Warning:(32, 41) java: android.util.Config in android.util has been deprecated  Warning:(32, 47) java: PROFILE in android.util.Config has been deprecated    *android/runtime/common/src/java/org/<USER>kroll/KrollRuntime.java*  Information:java:   *android/runtime/common/src/java/org/<USER>kroll/KrollRuntime.java uses unchecked or unsafe operations.  Information:java: Recompile with -Xlint:unchecked for details.    *android/titanium/src/java/org/<USER>titanium/TiBlob.java*  Warning:(821, 42) java: inPurgeable in android.graphics.BitmapFactory.Options has been deprecated  Warning:(822, 42) java: inInputShareable in android.graphics.BitmapFactory.Options has been deprecated    *android/titanium/src/java/org/<USER>titanium/util/TiAnimationBuilder.java*  Warning:(1073, 41) java: invalidate(int,int,int,int) in android.view.View has been deprecated    *android/titanium/src/java/org/<USER>titanium/proxy/MenuItemProxy.java*  Warning:(38, 81) java: android.support.v4.view.MenuItemCompat.OnActionExpandListener in android.support.v4.view.MenuItemCompat has been deprecated  Warning:(56, 31) java: setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat.OnActionExpandListener) in android.support.v4.view.MenuItemCompat has been deprecated    *android/titanium/src/java/org/<USER>titanium/io/TitaniumBlob.java*  Warning:(57, 116) java: DATA in android.provider.MediaStore.MediaColumns has been deprecated    *android/titanium/src/java/org/<USER>titanium/TiApplication.java*  Warning:(421, 41) java: setBuildType(java.lang.String) in com.<USER>aps.APSAnalyticsMeta has been deprecated    *android/titanium/src/java/org/<USER>titanium/TiBaseActivity.java*  Warning:(694, 49) java: FEATURE_PROGRESS in android.view.Window has been deprecated  Warning:(695, 49) java: FEATURE_INDETERMINATE_PROGRESS in android.view.Window has been deprecated  Warning:(1419, 17) java: setProgressBarIndeterminateVisibility(boolean) in android.app.Activity has been deprecated    *android/titanium/src/java/org/<USER>titanium/TiRootActivity.java*  Warning:(495, 65) java: getDrawable(int) in android.content.res.Resources has been deprecated    *android/titanium/src/java/org/<USER>titanium/view/TiActionBarStyleHandler.java*  Warning:(65, 40) java: requestFitSystemWindows() in android.view.View has been deprecated    *android/titanium/src/java/org/<USER>titanium/io/TiFileProvider.java*  Warning:(141, 69) java: DATA in android.provider.MediaStore.MediaColumns has been deprecated    *android/titanium/src/java/ti/modules/titanium/TitaniumModule.java*  Warning:(456, 54) java: getExternalStorageDirectory() in android.os.Environment has been deprecated    *android/titanium/src/java/org/<USER>titanium/util/TiLocaleManager.java*  Warning:(36, 39) java: updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) in android.content.res.Resources has been deprecated    *android/titanium/src/java/org/<USER>titanium/TiApplicationLifecycle.java*  Warning:(57, 59) java: sendAppForegroundEvent() in com.<USER>aps.APSAnalytics has been deprecated  Warning:(83, 59) java: sendAppBackgroundEvent() in com.<USER>aps.APSAnalytics has been deprecated    *android/titanium/src/java/org/<USER>kroll/KrollProxy.java*  Information:java: Some input files use unchecked or unsafe operations.  Information:java: Recompile with -Xlint:unchecked for details.    *android/runtime/v8/src/java/org/<USER>kroll/runtime/v8/JSDebugger.java*  Warning:(239, 29) java: onWebsocketMessageFragment(org.java_websocket.WebSocket,org.java_websocket.framing.Framedata) in org.java_websocket.server.WebSocketServer has been deprecated    *android/runtime/v8/src/java/org/<USER>kroll/runtime/v8/GCWatcher.java*  Information:java:   android/runtime/v8/src/java/org/<USER>kroll/runtime/v8/GCWatcher.java uses unchecked or unsafe operations.  Information:java: Recompile with -Xlint:unchecked for details.    *android/modules/network/src/java/ti/modules/titanium/network/NetworkModule.java*  Warning:(29, 19) java: android.net.NetworkInfo in android.net has been deprecated  Warning:(35, 22) java: android.webkit.CookieSyncManager in android.webkit has been deprecated    *android/modules/network/src/java/ti/modules/titanium/network/TiNetworkListener.java*  Warning:(16, 19) java: android.net.NetworkInfo in android.net has been deprecated    *android/modules/network/src/java/ti/modules/titanium/network/TiHTTPClient.java*  Information:java:   android/modules/network/src/java/ti/modules/titanium/network/TiHTTPClient.java uses unchecked or unsafe operations.  Information:java: Recompile with -Xlint:unchecked for details.    *android/modules/database/src/java/ti/modules/titanium/database/TiDatabaseProxy.java*  Information:java:   *android/modules/database/src/java/ti/modules/titanium/database/TiDatabaseProxy.java uses unchecked or unsafe operations.  Information:java: Recompile with -Xlint:unchecked for details.    *android/modules/platform/src/java/ti/modules/titanium/platform/PlatformModule.java*  Warning:(394, 55) java: setWifiEnabled(boolean) in android.net.wifi.WifiManager has been deprecated  Warning:(401, 59) java: setWifiEnabled(boolean) in android.net.wifi.WifiManager has been deprecated  Information:java:   android/modules/platform/src/java/ti/modules/titanium/platform/PlatformModule.java uses unchecked or unsafe operations.  Information:java: Recompile with -Xlint:unchecked for details.    *android/modules/geolocation/src/java/ti/modules/titanium/geolocation/TiLocation.java*  Warning:(339, 63) java: PROPERTY_COUNTRY_CODE in org.<USER>titanium.TiC has been deprecated  Warning:(340, 32) java: PROPERTY_COUNTRY_CODE in org.<USER>titanium.TiC has been deprecated  Warning:(340, 75) java: PROPERTY_COUNTRY_CODE in org.<USER>titanium.TiC has been deprecated    *android/modules/geolocation/src/java/ti/modules/titanium/geolocation/android/LocationProviderProxy.java*  Warning:(147, 21) java: onStatusChanged(java.lang.String,int,android.os.Bundle) in android.location.LocationListener has been deprecated  Warning:(150, 46) java: OUT_OF_SERVICE in android.location.LocationProvider has been deprecated  Warning:(155, 46) java: TEMPORARILY_UNAVAILABLE in android.location.LocationProvider has been deprecated  Warning:(160, 46) java: AVAILABLE in android.location.LocationProvider has been deprecated    *android/modules/geolocation/src/java/ti/modules/titanium/geolocation/GeolocationModule.java*  Information:java:   android/modules/geolocation/src/java/ti/modules/titanium/geolocation/GeolocationModule.java uses unchecked or unsafe operations.  Information:java: Recompile with -Xlint:unchecked for details.    *android/modules/media/src/java/ti/modules/titanium/media/TiCamera.java*  Warning:(16, 24) java: android.hardware.Camera in android.hardware has been deprecated  Warning:(17, 24) java: android.hardware.Camera in android.hardware has been deprecated  Warning:(17, 31) java: android.hardware.Camera.PictureCallback in android.hardware.Camera has been deprecated  Warning:(18, 24) java: android.hardware.Camera in android.hardware has been deprecated  Warning:(18, 31) java: android.hardware.Camera.ShutterCallback in android.hardware.Camera has been deprecated    *android/modules/media/src/java/ti/modules/titanium/media/TiCameraActivity.java*  Warning:(29, 24) java: android.hardware.Camera in android.hardware has been deprecated  Warning:(30, 24) java: android.hardware.Camera in android.hardware has been deprecated  Warning:(30, 31) java: android.hardware.Camera.AutoFocusCallback in android.hardware.Camera has been deprecated  Warning:(31, 24) java: android.hardware.Camera in android.hardware has been deprecated  Warning:(31, 31) java: android.hardware.Camera.CameraInfo in android.hardware.Camera has been deprecated  Warning:(32, 24) java: android.hardware.Camera in android.hardware has been deprecated  Warning:(32, 31) java: android.hardware.Camera.Parameters in android.hardware.Camera has been deprecated  Warning:(33, 24) java: android.hardware.Camera in android.hardware has been deprecated  Warning:(33, 31) java: android.hardware.Camera.PictureCallback in android.hardware.Camera has been deprecated  Warning:(34, 24) java: android.hardware.Camera in android.hardware has been deprecated  Warning:(34, 31) java: android.hardware.Camera.ShutterCallback in android.hardware.Camera has been deprecated  Warning:(37, 24) java: android.hardware.Camera in android.hardware has been deprecated  Warning:(37, 31) java: android.hardware.Camera.Size in android.hardware.Camera has been deprecated    *android/modules/media/src/java/ti/modules/titanium/media/MediaModule.java*  Warning:(58, 24) java: android.hardware.Camera in android.hardware has been deprecated  Warning:(59, 24) java: android.hardware.Camera in android.hardware has been deprecated  Warning:(59, 31) java: android.hardware.Camera.CameraInfo in android.hardware.Camera has been deprecated    *android/modules/media/src/java/ti/modules/titanium/media/TiSound.java*  Warning:(132, 43) java: setAudioStreamType(int) in android.media.MediaPlayer has been deprecated  Warning:(760, 40) java: requestAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener,int,int) in android.media.AudioManager has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/webview/TiWebChromeClient.java*  Warning:(44, 33) java: android.webkit.WebStorage.QuotaUpdater in android.webkit.WebStorage has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiImageView.java*  Warning:(31, 22) java: android.widget.ZoomControls in android.widget has been deprecated  Warning:(51, 17) java: android.widget.ZoomControls in android.widget has been deprecated  Warning:(131, 36) java: android.widget.ZoomControls in android.widget has been deprecated  Warning:(131, 32) java: ZoomControls(android.content.Context) in android.widget.ZoomControls has been deprecated  Warning:(134, 29) java: setZoomSpeed(long) in android.widget.ZoomControls has been deprecated  Warning:(135, 29) java: setOnZoomInClickListener(android.view.View.OnClickListener) in android.widget.ZoomControls has been deprecated  Warning:(141, 29) java: setOnZoomOutClickListener(android.view.View.OnClickListener) in android.widget.ZoomControls has been deprecated  Warning:(242, 37) java: setIsZoomInEnabled(boolean) in android.widget.ZoomControls has been deprecated  Warning:(244, 37) java: setIsZoomInEnabled(boolean) in android.widget.ZoomControls has been deprecated  Warning:(248, 37) java: setIsZoomOutEnabled(boolean) in android.widget.ZoomControls has been deprecated  Warning:(250, 37) java: setIsZoomOutEnabled(boolean) in android.widget.ZoomControls has been deprecated  Warning:(345, 45) java: onTouchEvent(android.view.MotionEvent) in android.widget.ZoomControls has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/clipboard/ClipboardModule.java*  Warning:(16, 20) java: android.text.ClipboardManager in android.text has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/android/TiPreferencesFragment.java*  Warning:(8, 26) java: android.preference.PreferenceFragment in android.preference has been deprecated  Warning:(10, 44) java: android.preference.PreferenceFragment in android.preference has been deprecated  Warning:(10, 8) java: PreferenceFragment() in android.preference.PreferenceFragment has been deprecated  Warning:(17, 21) java: onCreate(android.os.Bundle) in android.preference.PreferenceFragment has been deprecated  Warning:(19, 22) java: onCreate(android.os.Bundle) in android.preference.PreferenceFragment has been deprecated  Warning:(21, 36) java: getArguments() in android.app.Fragment has been deprecated  Warning:(25, 25) java: getPreferenceManager() in android.preference.PreferenceFragment has been deprecated  Warning:(25, 47) java: setSharedPreferencesName(java.lang.String) in android.preference.PreferenceManager has been deprecated  Warning:(28, 33) java: addPreferencesFromResource(int) in android.preference.PreferenceFragment has been deprecated  Warning:(29, 37) java: getPreferenceScreen() in android.preference.PreferenceFragment has been deprecated  Warning:(30, 49) java: getPreferenceScreen() in android.preference.PreferenceFragment has been deprecated  Warning:(30, 70) java: getTitle() in android.preference.Preference has been deprecated  Warning:(43, 21) java: onResume() in android.app.Fragment has been deprecated  Warning:(45, 22) java: onResume() in android.app.Fragment has been deprecated  Warning:(46, 38) java: getActivity() in android.app.Fragment has been deprecated  Warning:(47, 25) java: getActivity() in android.app.Fragment has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUIProgressIndicator.java*  Warning:(23, 19) java: android.app.ProgressDialog in android.app has been deprecated  Warning:(46, 19) java: android.app.ProgressDialog in android.app has been deprecated  Warning:(70, 55) java: setProgress(int) in android.app.ProgressDialog has been deprecated  Warning:(73, 47) java: setProgress(int) in android.app.Activity has been deprecated  Warning:(102, 55) java: setMessage(java.lang.CharSequence) in android.app.ProgressDialog has been deprecated  Warning:(184, 39) java: setProgressBarIndeterminate(boolean) in android.app.Activity has been deprecated  Warning:(185, 39) java: setProgressBarIndeterminateVisibility(boolean) in android.app.Activity has been deprecated  Warning:(189, 39) java: setProgressBarIndeterminate(boolean) in android.app.Activity has been deprecated  Warning:(190, 39) java: setProgressBarIndeterminateVisibility(boolean) in android.app.Activity has been deprecated  Warning:(191, 39) java: setProgressBarVisibility(boolean) in android.app.Activity has been deprecated  Warning:(205, 54) java: android.app.ProgressDialog in android.app has been deprecated  Warning:(205, 50) java: ProgressDialog(android.content.Context) in android.app.ProgressDialog has been deprecated  Warning:(215, 39) java: setMessage(java.lang.CharSequence) in android.app.ProgressDialog has been deprecated  Warning:(222, 47) java: setIndeterminate(boolean) in android.app.ProgressDialog has been deprecated  Warning:(224, 47) java: setIndeterminate(boolean) in android.app.ProgressDialog has been deprecated  Warning:(225, 65) java: android.app.ProgressDialog in android.app has been deprecated  Warning:(225, 79) java: STYLE_HORIZONTAL in android.app.ProgressDialog has been deprecated  Warning:(225, 47) java: setProgressStyle(int) in android.app.ProgressDialog has been deprecated  Warning:(227, 55) java: setMax(int) in android.app.ProgressDialog has been deprecated  Warning:(229, 55) java: setMax(int) in android.app.ProgressDialog has been deprecated  Warning:(231, 47) java: setProgress(int) in android.app.ProgressDialog has been deprecated  Warning:(272, 39) java: setProgressBarIndeterminate(boolean) in android.app.Activity has been deprecated  Warning:(273, 39) java: setProgressBarIndeterminateVisibility(boolean) in android.app.Activity has been deprecated  Warning:(274, 39) java: setProgressBarVisibility(boolean) in android.app.Activity has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUIText.java*  Warning:(752, 76) java: getInstance(boolean,boolean) in android.text.method.DigitsKeyListener has been deprecated  Information:java: Some input files use unchecked or unsafe operations.  Information:java: Recompile with -Xlint:unchecked for details.    *android/modules/ui/src/java/ti/modules/titanium/ui/UIModule.java*  Warning:(105, 65) java: MAP_ADDRESSES in android.text.util.Linkify has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/webview/TiWebViewClient.java*  Warning:(106, 21) java: onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) in android.webkit.WebViewClient has been deprecated  Warning:(108, 22) java: onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) in android.webkit.WebViewClient has been deprecated  Warning:(122, 24) java: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) in android.webkit.WebViewClient has been deprecated  Warning:(127, 37) java: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) in android.webkit.WebViewClient has been deprecated  Warning:(190, 37) java: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) in android.webkit.WebViewClient has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/tabgroup/TiUIBottomNavigationTabGroup.java*  Warning:(62, 43) java: fitSystemWindows(android.graphics.Rect) in android.view.View has been deprecated  Warning:(70, 38) java: fitSystemWindows(android.graphics.Rect) in android.view.View has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUILabel.java*  Warning:(360, 55) java: fromHtml(java.lang.String) in android.text.Html has been deprecated  Warning:(497, 47) java: fromHtml(java.lang.String) in android.text.Html has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUIScrollableView.java*  Warning:(178, 22) java: setOnPageChangeListener(android.support.v4.view.ViewPager.OnPageChangeListener) in android.support.v4.view.ViewPager has been deprecated  Warning:(707, 29) java: destroyItem(android.view.View,int,java.lang.Object) in android.support.v4.view.PagerAdapter has been deprecated  Warning:(736, 29) java: finishUpdate(android.view.View) in android.support.v4.view.PagerAdapter has been deprecated  Warning:(747, 31) java: instantiateItem(android.view.View,int) in android.support.v4.view.PagerAdapter has been deprecated  Warning:(827, 29) java: startUpdate(android.view.View) in android.support.v4.view.PagerAdapter has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/tabgroup/TiUITabLayoutTabGroup.java*  Warning:(72, 43) java: fitSystemWindows(android.graphics.Rect) in android.view.View has been deprecated  Warning:(80, 38) java: fitSystemWindows(android.graphics.Rect) in android.view.View has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/tableview/TiTableViewSelector.java*  Warning:(105, 20) java: getOpacity() in android.graphics.drawable.Drawable has been deprecated  Warning:(85, 41) java: setDither(boolean) in android.graphics.drawable.Drawable has been deprecated  Warning:(108, 48) java: getOpacity() in android.graphics.drawable.Drawable has been deprecated  Warning:(126, 21) java: setDither(boolean) in android.graphics.drawable.Drawable has been deprecated  Warning:(128, 22) java: setDither(boolean) in android.graphics.drawable.Drawable has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiToolbar.java*  Warning:(77, 43) java: fitSystemWindows(android.graphics.Rect) in android.view.View has been deprecated  Warning:(105, 38) java: fitSystemWindows(android.graphics.Rect) in android.view.View has been deprecated  Warning:(193, 24) java: requestFitSystemWindows() in android.view.View has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUIActivityIndicator.java*  Warning:(102, 60) java: setColorFilter(int,android.graphics.PorterDuff.Mode) in android.graphics.drawable.Drawable has been deprecated  Warning:(125, 60) java: setColorFilter(int,android.graphics.PorterDuff.Mode) in android.graphics.drawable.Drawable has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/picker/TiUIDatePicker.java*  Warning:(213, 31) java: setCalendarViewShown(boolean) in android.widget.DatePicker has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUIButton.java*  Warning:(140, 52) java: setColorFilter(int,android.graphics.PorterDuff.Mode) in android.graphics.drawable.Drawable has been deprecated  Warning:(198, 52) java: setColorFilter(int,android.graphics.PorterDuff.Mode) in android.graphics.drawable.Drawable has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/picker/TiUITimePicker.java*  Warning:(82, 86) java: getCurrentHour() in android.widget.TimePicker has been deprecated  Warning:(82, 63) java: setCurrentHour(java.lang.Integer) in android.widget.TimePicker has been deprecated  Warning:(190, 23) java: setCurrentHour(java.lang.Integer) in android.widget.TimePicker has been deprecated  Warning:(192, 23) java: setCurrentMinute(java.lang.Integer) in android.widget.TimePicker has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/android/TiPreferencesActivity.java*  Warning:(34, 25) java: setArguments(android.os.Bundle) in android.app.Fragment has been deprecated  Warning:(37, 17) java: getFragmentManager() in android.app.Activity has been deprecated  Warning:(37, 37) java: beginTransaction() in android.app.FragmentManager has been deprecated  Warning:(37, 56) java: replace(int,android.app.Fragment) in android.app.FragmentTransaction has been deprecated  Warning:(37, 96) java: commit() in android.app.FragmentTransaction has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUIMaskedImage.java*  Warning:(424, 52) java: setColorFilter(int,android.graphics.PorterDuff.Mode) in android.graphics.drawable.Drawable has been deprecated  Warning:(663, 28) java: getOpacity() in android.graphics.drawable.Drawable has been deprecated  Warning:(1315, 63) java: saveLayer(android.graphics.RectF,android.graphics.Paint,int) in android.graphics.Canvas has been deprecated    *android/modules/ui/src/java/ti/modules/titanium/ui/EmailDialogProxy.java*  Warning:(409, 64) java: fromHtml(java.lang.String) in android.text.Html has been deprecated    *android/modules/contacts/src/java/ti/modules/titanium/contacts/ContactsApiLevel5.java*  Information:java:   android/modules/contacts/src/java/ti/modules/titanium/contacts/ContactsApiLevel5.java uses unchecked or unsafe operations.  Information:java: Recompile with -Xlint:unchecked for details.    *android/modules/app/src/java/ti/modules/titanium/app/AppModule.java*  Warning:(35, 72) java: android.support.v4.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat in android.support.v4.view.accessibility.AccessibilityManagerCompat has been deprecated  Warning:(52, 17) java: android.support.v4.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat in android.support.v4.view.accessibility.AccessibilityManagerCompat has been deprecated  Warning:(268, 51) java: removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListener) in android.support.v4.view.accessibility.AccessibilityManagerCompat has been deprecated  Warning:(272, 64) java: android.support.v4.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat in android.support.v4.view.accessibility.AccessibilityManagerCompat has been deprecated  Warning:(274, 45) java: onAccessibilityStateChanged(boolean) in android.support.v4.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListener has been deprecated  Warning:(282, 51) java: addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListener) in android.support.v4.view.accessibility.AccessibilityManagerCompat has been deprecated    *android/modules/app/src/java/ti/modules/titanium/app/AndroidModule.java*  Warning:(110, 47) java: versionCode in android.content.pm.PackageInfo has been deprecated    *android/modules/android/src/java/ti/modules/titanium/android/EnvironmentModule.java*  Warning:(54, 35) java: getExternalStorageDirectory() in android.os.Environment has been deprecated    *android/modules/android/src/java/ti/modules/titanium/android/notificationmanager/NotificationManagerModule.java*  Warning:(66, 64) java: FLAG_SHOW_LIGHTS in android.app.Notification has been deprecated  Warning:(155, 46) java: FULL_WAKE_LOCK in android.os.PowerManager has been deprecated  Warning:(159, 54) java: isScreenOn() in android.os.PowerManager has been deprecated    *android/modules/analytics/src/java/ti/modules/titanium/analytics/AnalyticsModule.java*  Warning:(119, 50) java: sendAppFeatureEvent(java.lang.String,org.json.JSONObject) in com.<USER>aps.APSAnalytics has been deprecated  Warning:(129, 58) java: sendAppFeatureEvent(java.lang.String,org.json.JSONObject) in com.<USER>aps.APSAnalytics has been deprecated  Warning:(140, 42) java: sendAppFeatureEvent(java.lang.String,org.json.JSONObject) in com.<USER>aps.APSAnalytics has been deprecated  {quote}",Improvement,Low,Open,"2019-08-12 18:08:04","2019-08-12 18:08:04",13
"The Titanium SDK ","iOS 13: Modal windows that are swiped down do not fire close event","iOS 13+ modal windows that are swiped down do not fire close event (in this case the console log):  {code:js}  var win = Ti.UI.createWindow({      backgroundColor: '#fff'  });    var btn = Ti.UI.createButton({      title: 'Trigger'  });    btn.addEventListener('click', function() {      var win2 = Ti.UI.createWindow({ backgroundColor: 'white' });        win2.addEventListener('close', () => {          Ti.API.warn('CLOSED')      });        var nav = Ti.UI.createNavigationWindow({          window: win2      });            nav.open({ modal: true })  });    win.add(btn);  win.open();  {code}",Bug,None,Closed,"2019-08-12 15:15:53","2019-08-12 15:15:53",0
"The Titanium SDK ","Xcode 11: No logs shown on recurring builds","Using the latest Xcode 11 B5, application logs are no longer visible. Logs:  ",Bug,Critical,Closed,"2019-08-12 13:18:43","2019-08-12 13:18:43",13
"The Titanium SDK ","Xcode 11: Cannot build to device","When using Xcode 11 B5, I cannot build for device anymore. Production builds work fine. The following error is shown, indicating certificate issues, which is not true since all certs are valid and can be used with Xcode 10:        To reproduce, build a simple app for device in Xcode 10 and then Xcode 11.",Bug,Critical,Resolved,"2019-08-12 06:45:45","2019-08-12 06:45:45",0
"The Titanium SDK ","Android: Splash screen open animation sometimes stutters on cold start","*Summary:*  As of Android Q beta 4, the OS displays activity windows via a zoom-in animation on some devices such as the Pixel 3. Because of this new open animation, Titanium's splash screen might stutter during a cold start (but not subsequent startups) as shown by the attached AndroidQ-Launch.gif below.   !AndroidQ-Launch.gif!     This issue can happen on older Android OS versions as well, but is less likely to happen and difficult to reproduce. The attached AndroidP-Launch.gif shows this happening on Android P with a slide-up transition.   !AndroidP-Launch.gif!     *Notes:*  * This does not happen with Android Q on a Pixel 2 device. (Does not do zoom-in animations.)  * This stutter only happens when opening a window while the splash screen is still doing its open animation. (Can work-around by delaying opening the first window.)  * This appears to be a bug on Google's end, but we should attempt to work-around it.    *Steps to reproduce:*  # Acquire a Pixel 3 device/emulator with Android Q beta 4 or newer.  # Download kitchensink-v2 project. (Can be found [here|https://github.com/<USER>kitchensink-v2].)  # Build and run on the Pixel 3.  # Notice that the splash screen stutters while opening as shown in GIF above.  # To re-test, force-quit the app and relaunch the app.    *Work-Around:*  In your app.js or alloy.js, delay opening the first window by about {{100ms}}. Waiting for the splash screen open animation to end works-around the issue.  ",Bug,High,Closed,"2019-08-10 02:56:16","2019-08-10 02:56:16",5
"The Titanium SDK ","Android: Adding <uses-library/> within tiapp.xml file's <manifest/> block creates invalid entry in AndroidManifest.xml","*Summary:*  Adding a {{<uses-library/>}} element within the tiapp.xml file's {{<manifest/>}} block will create an invalid entry within the generated AndroidManifest.xml when doing a build.    *Note:*  The {{<uses-library/>}} entry is supposed to go within the {{<application/>}} block, not the {{<manifest/>}} block. So, doing this would have been invalid anyways. This makes this bug a very minor issue.  https://developer.android.com/guide/topics/manifest/uses-library-element    *Steps to reproduce:*  # Setting a project's tiapp.xml with the {{<uses-library/>}} entry below.  # Build the project.  # Open Finder or Window Explorer.  # Go to project's subdirectory: {{./build/android}}  # Open the AndroidManifest.xml file.        *Result:*  The following invalid XML element can be found within the AndroidManifest.xml file. This doesn't prevent the app from running, but it's still not good that this is there.      *Expected Result:*  Build system should either omit the {{<uses-library/>}} entry or add it as-is.    *Solution:*  As noted above, the {{<uses-library/>}} is supposed to go within the {{<application/>}} block. So, all Titanium app devs should be doing the following instead. The build system will correctly inject this into the AndroidManifest.xml file.    ",Bug,Low,Closed,"2019-08-09 02:56:59","2019-08-09 02:56:59",3
"The Titanium SDK ","Windows: Error on app launch when Liveview is enabled","Error is shown in the app during the app launch on windows device when the liveview is enabled.  The issue consistently reproduces on windows device however on windows emulator it does work few times.    Steps to Reproduce:  1. Create a default Alloy/Classic project  2. Enable liveview and build to a windows device    Actual Result:  After the splash screen an error is shown as the app launches. Following are the error logs      Expected Result:  The liveview should work on win device",Bug,High,Closed,"2019-08-08 18:19:24","2019-08-08 18:19:24",8
"The Titanium SDK ","TiAPI: Add more support for changing file attributes/permissions to Filesystem API","We have a lot of basic file operations on Files in our API including reading some of the attributes of a File, but no real operations to change the attributes of a file:  - atime (last access time)  - mtime (last modified time)  - ctime (creation time)  - owner  - permissions    iOS has the ability to set many of these (ctime, mtime, permissions, owner/group):  https://developer.apple.com/documentation/foundation/nsfilemanager/1413667-setattributes?language=objc    Android has the ability to set mtime in the old java.io.File API. In the newer java.nio.file APIs, we can set permissions, owner, mtime directly and a more generic API for setting more (atime, ctime, mtime) here: https://developer.android.com/reference/java/nio/file/attribute/BasicFileAttributeView.html",Bug,Medium,Open,"2019-08-08 17:42:23","2019-08-08 17:42:23",13
"The Titanium SDK ","TiAPI: Add more support for symbolic/hard links to Filesystem API","Currently the only hint of support for links (hard or symbolic) is the {{symbolicLink}} property on {{Ti.Filesystem.File}}. But looking at the Android source code, I believe this will always return false (we don't appear to actually ever change the internal boolean flag or query for this info).    iOS will return the correct value, but offers no support for creating symbolic/hard links, nor for reading them to see their destination.",Bug,Medium,Open,"2019-08-08 17:07:04","2019-08-08 17:07:04",13
"The Titanium SDK ","iOS: Ti.Stream.pump with Ti.Stream.write async operations don't actually run async/interleaved","Ti.Stream.pump behaves differently on iOS vs Android. If you register a pump callback handler that then writes the data out via Ti.Stream.write's async variant, the expected behavior is that the reads and writes get interleaved - which is what occurs on Android. On iOS, however, it will do all of the reads first until EOF, and then all of the writes. This can result in piling up Ti.Buffers queued for writes for the entire file contents.    Given code like this:        On iOS you'll see output like this:  ",Bug,Medium,Open,"2019-08-08 14:57:22","2019-08-08 14:57:22",8
"The Titanium SDK ","iOS: Ti.Stream.writeStream fires callback for each loop of writes, no way to tell when done","Ti.Stream.writeStream behaves differently on iOS vs Android. Android will do all of the writes and will fire the callback once at the end (or will fire it as soon as an error occurs).    iOS will fire if an error occurs; or every iteration of it's internal read/write loop and at then at the end. But there's no way to know beforehand if it is done unless you know the exact byte count expected to be transferred. (The case I specifically saw was a Ti.File.FileStream and copying it's data)    As a first step, adding a done property to the callback's argument object would be useful so you can tell when iOS is actually finished. A second step would be to eliminate the per-loop callback firing altogether for iOS.",Bug,Medium,Open,"2019-08-08 14:55:35","2019-08-08 14:55:35",8
"The Titanium SDK ","Windows: Jenkins TabGroup default style test regularly crashing","The Jenkins tests for TabGroup {{icon-only tabs - default style}} regularly crashing.      ",Story,High,Closed,"2019-08-08 02:26:53","2019-08-08 02:26:53",5
"The Titanium SDK ","iOS: Use swift 5 for apple watch template","Currently we are using swift 3.1 for Apple Watch template. Need to update to swift 5. For module templates we have already done in TIMOB-26770.",Improvement,High,Closed,"2019-08-07 23:25:38","2019-08-07 23:25:38",5
"The Titanium SDK ","IOS:Regression-Console.log does not concatenate and log if it has multiple arguments with space","Steps to Reproduce:  1.Create a classic app  2.Run on IOS  *Expected:*  should log  movie size  *Actual:*  displays only the first argument    notes:  if using concatenation like console.log(e.type + ' e.naturalSize ' + JSON.stringify(e.naturalSize)) then logging correctly.  console.log is working fine on 8.0.2 GA and below.not working on 8.1.0    App.js:  ",Bug,Low,Closed,"2019-08-07 04:19:21","2019-08-07 04:19:21",5
"The Titanium SDK ","iOS 13: Support new type of UIBlurEffectStyle constants","In iOS 13, couple of new UIBlurEffectStyle constants are given. We need to expose these constants to developers.  ",Improvement,Medium,Closed,"2019-08-06 16:52:15","2019-08-06 16:52:15",5
"The Titanium SDK ","Android: Cannot re-show ProgressIndicator dialog if auto-hidden by closed window","*Summary:*  If a {{Ti.UI.Android.ProgressIndicator}} dialog was auto-closed by a window (ie: you did not call its {{hide()}} method yourself), then you will not be able to re-show the dialog ever again. The {{ProgressIndicator}} object becomes unusable.    *Note:*  This is more likely to happen if Android developer option Don't keep activities is enabled.    *Steps to reproduce:*  # Build and run the below code on Android.  # Tap on the Show Progress Dialog button.  # A new window displaying a progress dialog will be shown.  # Wait 2 second for the window and dialog to auto-close.  # Tap on the Show Progress Dialog button again.  # Notice that the child window is empty. The progress dialog was not shown. (This is the bug.)        *Work-Around:*  Hide the progress dialog when via its window's close event.    ",Bug,Medium,Closed,"2019-08-06 04:40:00","2019-08-06 04:40:00",5
"The Titanium SDK ","Android: Determinant ProgressIndicator ignores value property before shown","*Summary:*  The {{Ti.UI.Android.ProgressIndicator}} set up as type {{PROGRESS_INDICATOR_DETERMINANT}} ignores the value property when the {{show()}} method is called. The displayed progress is initialize to zero. Setting the value property only works after progress indicator is shown.    *Steps to reproduce:*  # Build and run the below code on Android.  # Tap on the Show Progress Dialog button.  # Observe the dialog's progress bar position.        *Result:*  The dialog's progress bar is at {{0%}}, which is wrong.    *Expected Result:*  The dialog's progress bar should be {{50%}}.    *Work-Around:*  Set the progress value after the {{show()}} method is called.    ",Bug,Medium,Closed,"2019-08-06 04:21:53","2019-08-06 04:21:53",5
"The Titanium SDK ","Windows: callback of tableview scroll function not getting the content size and contentoffset in UWP application","Hello!  Callback of tableview scroll function not getting the content size and contentoffset in UWP application. It works as expected in android and iOS.   I have implemented custom tableview using createTableView. I have attached scroll event to tableview. but callback of scroll function not getting the content size and contentoffset    *Test Project*: TestUWP.zip  Steps to reproduce:  1. Import attached project.  2. Build with sdk 8.0.2.GA or 7.0.2.GA on Windows 10 uwp apps on Windows Desktop  3. Check the log.      Test Environment :      Thanks ",Bug,High,Closed,"2019-08-05 13:41:34","2019-08-05 13:41:34",8
"The Titanium SDK ","Android: Setting <uses-feature/> required true in tiapp.xml should override false setting in libraries","*Summary:*  The AndroidManifest.xml file's {{<uses-feature/>}} android:required attribute value can be set to {{true}} or {{false}}. When multiple manifests declare the same {{<uses-feature/>}}, the merge <USER>must do a logical OR of these values. This means that if one of the manifest files sets it to {{true}}, it can be made {{false}} at the end of the XML merge. (The {{true}} setting wins.)  https://developer.android.com/studio/build/manifest-merge    When the Titanium build merges timodule.xml and tiapp.xml settings, it does not OR the android:required values. Instead the original timodule.xml value always wins. This means if the timodule.xml sets it {{false}}, the tiapp.xml is never able to set it {{true}}. (The reverse is not an issue though.)    *Note:*  The behavior of the XML merge has changed as of Titanium 8.0.2. Before 8.0.2, the tiapp.xml manifest settings used to blindly overwrite the timodule.xml manifest settings, which was not technically correct but did allow the tiapp.xml to override {{<uses-feature/>}} to {{true}} or {{false}} (it still wasn't {{OR}}ing the values though). Titanium 8.0.2 improved the merge to better follow Google's merging rules, but it is not {{OR}}ing the values which is what's needed.    *Steps to reproduce:*  # Create a Classic Titanium app project.  # Add modules ti.barcode to tiapp.xml. (Can download from [here|https://github.com/<USER>modules/ti.barcode].)  # Add the {{<uses-feature/>}} settings in tiapp.xml as shown below.  # Build for Android.  # Open Mac's Finder window. (Or Windows Explorer on Windows.)  # Go to project subdirectory: {{./build/android}}  # Open file AndroidManifest.xml.  # Observe its {{<uses-feature/>}} XML elements.        *Result:*  The merged AndroidManifest.xml file's {{<uses-feature/>}} for android.hardware.touchscreen is {{false}} when it should be {{true}}.    *Expected Result:*  The {{<uses-feature/>}} for android.hardware.touchscreen should be {{true}}, not {{false}}. The values need to be {{OR}}'ed together.  ",Bug,Medium,Closed,"2019-08-02 21:18:16","2019-08-02 21:18:16",5
"The Titanium SDK ","Windows: Issue with TableView scrollend event (Windows 10 uwp apps)","Hello!  Scroll event attached in Ti.UI.createTableView. After scroll event-triggered then the user wants to refresh table view. While scrolling, the table view shows blank.  This is happening in Windows 10 app (UWP) but working fine in android/iOS    Teste project: TestUWP.zip  *Steps to reproduce:*  1. Import attached project.  2. Build with sdk 8.0.2.GA or 7.0.2.GA on Windows 10 uwp apps on Windows Desktop  3. Scroll the table view  4.  It showing blank        Thanks     ",Bug,High,Closed,"2019-08-02 13:48:28","2019-08-02 13:48:28",8
"The Titanium SDK ","Android: AssetCryptImpl buffer overflow for large JS assets","*Summary:*  A buffer overflow or out-of-memory exception can occur for device builds (ie: encrypted assets) if the total byte size of all JavaScript source code exceeds the max heap size. This is more likely to happen when transpiled and source-maps are enabled.    *Steps to reproduce:*  # Create a Classic Titanium app project using current *8_1_X*  # Unzip the attached [^TIMOB-27300.zip] to the project's Resources directory.  # Build and run on a physical Android device. (Alternatively, build with deployment type {{-D test}}.)  # When the app launches, note that an exception occurs in the log.    *Result:*  - An BufferOverflowException gets logged.    *Expected Result:*  - App should have successfully started and display a green window.    *Notes*  - If you receive an OutOfMemory exception, test on a different device that has enough RAM to load the test case.    *Recommended Solution:*  Refactor {{titanium_prep}} to prevent {{BufferOverflowException}} for large Javascript files.  ",Bug,Critical,Closed,"2019-07-30 22:28:47","2019-07-30 22:28:47",8
"The Titanium SDK ","Android: Hyperloop should allow access to a Java inner class within an inner class","*Summary:*  Hyperloop can currently access the 1st level of inner classes under a Java class, but cannot access an inner class belonging to an inner class (ie: 2 inner classes deep).    This makes using certain Android classes such as {{MediaStore}}'s 2 level deep nested classes impossible.  https://developer.android.com/reference/android/provider/MediaStore    *Test:*  # Create a Classic Titanium project.  # Add hyperloop module to tiapp.xml.  # Copy the below code to your app.js.  # Build and run on Android.  # Notice that an exception happens for the last line of code below.      ",Improvement,Medium,Closed,"2019-07-30 01:46:51","2019-07-30 01:46:51",5
"The Titanium SDK ","Android: Allow Hyperloop to access Titanium's core Java classes","*Summary:*  Hyperloop is unable to access the Titanium SDK's core Java classes. Hyperloop is also unable to access the Java classes of the JAR/AAR libraries included with the SDK such as the java_websocket.jar (except for the Google support libraries).    We should modify Hyperloop to reference the Titanium SDK's JARs/AARs as well and not just the project's modules directory.    *Test:*  # Create a Classic Titanium project.  # Add hyperloop module to tiapp.xml.  # Copy the below code to the app.js.  # Build and run on Android.  # Verify the following gets logged every second: {{### Is app in foreground: true}}      ",Improvement,Low,Closed,"2019-07-30 01:04:34","2019-07-30 01:04:34",5
"The Titanium SDK ","Android: Unnecessary conversion from UTF-8 to UTF-16 loading JS assets","- Prevent an unnecessary conversion from UTF-8 to UTF-16 and back when loading Javascript assets",Improvement,Medium,Closed,"2019-07-29 22:43:16","2019-07-29 22:43:16",8
"The Titanium SDK ","Android: HTTPClient onsendstream progress is always set to 1.0","When initiating an XHR request on Android, and providing the onsendstream callback function, the progress within the payload (e.progress) will always be 1.    Expected is the actual progress as a number between 0.0 and 1.0    ",Bug,Medium,Closed,"2015-12-16 14:08:50","2015-12-16 14:08:50",7
"The Titanium SDK ","TiAPI: Create Node-compatible String Decoder module API","It'd be useful to create equivalents of some of the core Node modules in Titanium so that users could port/re-use node codebases on mobile devices. Some of the more common modules could map relatively easily to devices, and would be worth investigating.    https://nodejs.org/api/string_decoder.html    Once Node's Buffer module is implemented it is a relatively small effort to implement the String Decoder module.","New Feature",Low,Closed,"2019-07-29 14:28:37","2019-07-29 14:28:37",8
"The Titanium SDK ","Android: Add contentSize property to Ti.UI.ScrollView scroll event","Parity for contentSize inside the scroll event of a ScrollView. iOS has this since 5.2.0.    *Example:*        Will output height: 1020 (height of the red view) and your screen width.",Improvement,Medium,Closed,"2019-07-26 15:51:00","2019-07-26 15:51:00",5
"The Titanium SDK ","iOS: App rejected when using Swift module","We have received multiple reports that using Swift based modules will result in an App Store rejection with the following reason:    Invalid bundle - A nested bundle contains simulator platform listed in CFBundleSupportedPlatforms Info.plist key    Also see https://github.com/<USER>modules/titanium-onboarding/issues/6",Bug,None,Closed,"2019-07-26 11:49:24","2019-07-26 11:49:24",5
"The Titanium SDK ","iOS: Invalid analytics platform","- Analytics payload {{os.name}} was set to the wrong field",Bug,Critical,Closed,"2019-07-24 15:08:38","2019-07-24 15:08:38",1
"The Titanium SDK ","iOS 13: Support new type of status bar style UIStatusBarStyleDarkContent","In iOS 13 new status bar style, UIStatusBarStyleDarkContent, is given. It need to be supported in Window.",Improvement,Medium,Closed,"2019-07-23 18:08:07","2019-07-23 18:08:07",5
"The Titanium SDK ","Android: Resuming with intent using FLAG_ACTIVITY_MULTIPLE_TASK can hang the app","*Summary:*  Resuming an app with an intent having {{FLAG_ACTIVITY_MULTIPLE_TASK}} set causes it to hang in Titanium 8.0.0 if the app does not immediately open a window via its newintent event.    Titanium 7.x.x and older isn't much better. It won't hang on startup, but will instead create a new splash screen activity instance and do nothing.    *Note:*  The Android OS will automatically add the {{FLAG_ACTIVITY_MULTIPLE_TASK}} to intents assigned the {{ACTION_SEND}} action. So, apps whose intent-filter do not handle intent-filter {{ACTION_SEND}} typically don't have to worry about this issue.    *Steps to reproduce:*  # Create a classic Titanium app.  # Set project name to IntentTest. _(This is {{<name/>}} in tiapp.xml.)_  # Set project's Application Id to com.appc.intent.test. _(This is {{<id/>}} in tiapp.xml.)_  # Set up the app.js with the below code.  # Build and run on Android.  # Open the Mac Terminal.  # CD (change directory) to: {{~/Library/Android/sdk/platform-tools}}  # In the terminal, enter the following...    {code}  ./adb shell am start -n com.appc.intent.test/.IntenttestActivity -a android.intent.action.VIEW -d https://www.<USER>com -f 0x08000000  {code}    app.js  {code:javascript}  Ti.Android.rootActivity.addEventListener(newintent, function(e) {   label.text = New Intent:\n + JSON.stringify(e.intent, null, 4);   Ti.API.info(@@@ newintent:  + JSON.stringify(e.intent));  });    var window = Ti.UI.createWindow();  var scrollView = Ti.UI.createScrollView({   scrollType: vertical,   width: Ti.UI.FILL,   height: Ti.UI.FILL,  });  var label = Ti.UI.createLabel({   text: Launch Intent:\n + JSON.stringify(Ti.Android.rootActivity.intent, null, 4),   width: Ti.UI.FILL,   height: Ti.UI.SIZE,  });  scrollView.add(label);  window.add(scrollView);  window.open();  {code}    *Result:*  In Titanium 8.0.0 and higher, the app hangs. Also notice in the log that the newintent is being logged non-stop, meaning the newintent event is being fired repeatedly when it should only be fired once.    In Titanium versions older than 8.0.0, a new splash screen activity window is displayed, but nothing happens. Note that the app is not hung and you can back-out of the splash window, but this is still not good behavior.    *Expected Result:*  The newintent event should only be fired once and not hang the app.    *Work-around:*  Immediately open a window when a newintent is received set with this flag.    If you don't want to open a window immediately, then you can instead quickly open/close a temporary window when this flag is set. Note that closing a window immediately as shown below prevents it from ever being shown, because Titanium destroys it via the activity's {{onCreate()}} method.  {code:javascript}  Ti.Android.rootActivity.addEventListener(newintent, function(e) {   // This works-around the issue.   if (e.intent.flags & Ti.Android.FLAG_ACTIVITY_MULTIPLE_TASK) {    var window = Ti.UI.createWindow();    window.open();    window.close();   }  });  {code}    _(I've tested the below on Android Q while target API Level 29. It works fine.)_  ",Bug,Critical,Closed,"2019-07-23 01:40:33","2019-07-23 01:40:33",8
"The Titanium SDK ","iOS: Allow capture of signal exceptions","- Allow ability to capture and handle signal exceptions",Bug,High,Closed,"2019-07-22 22:51:08","2019-07-22 22:51:08",8
"The Titanium SDK ","Android: Do not retry sending events if no connectivity","- Do not attempt to retry sending events if no connection is established",Bug,High,Closed,"2019-07-22 22:46:26","2019-07-22 22:46:26",3
"The Titanium SDK ","Titanium Failed to encrypt JavaScript files error on >=8.0.1.GA on Windows when using 32 bit java","There is a bug on Titanium 8.0.1.GA & 8.0.2.GA, where when running a simple compile:        Gives the error:        I narrowed down the issue to changes made to *titanium_prep.win32.exe*.    Looking at the history:  https://github.com/<USER>titanium_mobile/commits/master/support/android/titanium_prep.win32.exe    It seems that one of the 2 commits to be blamed are:  https://github.com/<USER>titanium_mobile/commit/3eaf55c596402078321632c682549428b7c57371#diff-81660f9ac67f928cddca3a1e35855580  or  https://github.com/<USER>titanium_mobile/commit/86b3fc01230a0ec09c0b2577a3e68c1e488e48b1#diff-81660f9ac67f928cddca3a1e35855580    A temp workaround is to copy the *titanium_prep.win32.exe* and *titanium_prep.win64.exe* from 8.0.0.GA and replace the ones in the newer 8.0.1.GA or 8.0.2.GA.              ",Bug,Critical,Closed,"2019-07-20 23:10:26","2019-07-20 23:10:26",5
"The Titanium SDK ","Windows: Jenkins tests regularly crashing","Jenkins unit tests seems to be regularly crashing on Windows. Ended up skipping some tests in following suites.    - -ti.filesystem.file.test.js-  - -ti.media.videoplayer.test.js-  - -ti.filesystem.filestream.test.js-  - -ti.ui.tabgroup.test.js-  - -ti.map.test.js-    ",Story,Critical,Closed,"2019-07-20 23:31:13","2019-07-20 23:31:13",8
"The Titanium SDK ","iOS 13: Modal windows with large titles do not honor barColor ","On iOS 13, modal windows with large titles do not honor their {{barColor}} property. Natively, it seems like iOS 13 receives it's modal bar color from the background (see native app attached), but doing the same in Titanium also doesn't work. Here is what I tried (both with backgroundColor and barColor):  {code:js}  var win = Ti.UI.createWindow();     var btn = Ti.UI.createButton({      title: 'Open VC'  });     btn.addEventListener('click', function() {      var win2 = Ti.UI.createWindow({ backgroundColor: 'red', title: 'Hello', largeTitleEnabled: true });        var nav = Ti.UI.createNavigationWindow({          window: win2      });            nav.open({ modal: true })  });     win.add(btn);  win.open();  {code}    In addition, it seems like Titanium applies the default bar tint color different to native iOS, which should be investigated in a different ticket!",Bug,Critical,Closed,"2019-07-20 22:07:59","2019-07-20 22:07:59",5
"The Titanium SDK ","iOS Unsupported Architecture [x86_64, i386]","Hello. Good afternoon.     I created an adhoc build with the specs mentioned on the section of environment, so after that, I use the application loader to upload the build, but I am getting the issues attached in the image.    Specs:   Titanium SDK : 8.0.2.GA  CLI: 7.0.12  Node : 8.9.1  Axway <USER>Studio, build: 5.1.2.201903111843  Xcode : 10.2          Note: If use the following specs,  I will not get any complaint of apple in the application loader.  Ti SDK : 7.5.1.GA  CLI: 6.2.2  Node Version : 8.9.1   Xcode: 10.2    I do not have a reproduce project for the issue, since the project which I am using is very extensive like to put it in this jira ticket.    Please let me know whether you have any doubt or question.    Thanks, and best,  Antonio Duran.",Bug,Critical,Closed,"2019-07-17 23:57:59","2019-07-17 23:57:59",5
"The Titanium SDK ","Android: Minor memory leak occurs in runtime every time app relaunches","There is a minor string memory leak in our V8Runtime.cpp file that happens every time we launch an app. It happens in our JNI {{nativeAddExternalCommonJsModule()}} function below...  [V8Runtime.cpp#L379|https://github.com/<USER>titanium_mobile/blob/a263a54c3a6b2afa2b909c995eb0c6fb210012d3/android/runtime/v8/src/native/V8Runtime.cpp#L379]    We're calling {{GetStringUTFChar()}} to create a {{char*}} string, but we're missing a call to {{ReleaseStringUTFChar()}} to delete it. This is the leak.  ",Bug,High,Closed,"2019-07-19 21:24:44","2019-07-19 21:24:44",3
"The Titanium SDK ","[Windows] Error is shown when packaging a windows module ","When packaging a windows module an error is shown is Studio and the CLI. The CLI error is shown below:         Test Steps (CLI):   # Create a new Windows module  # {{cd}} into the Windows directory  # run {{appc run}}    *Expected result*   Module should package successfully     *Actual result*  Above error is shown   ",Bug,None,Closed,"2019-07-19 12:40:03","2019-07-19 12:40:03",1
"The Titanium SDK ","Android: AlertDialog cannot be re-shown in a different window as of 8.0.1","It is working fine in 8.0.0 but not in 8.0.1  in 8.0.1 it return Dialog activity is destroyed, unable to show dialog with message: null    so here the case  1. i have 1 component of alert dialog with android view which used in multiple page of screen  2. when i show the alert dialog in first screen it works fine  3. when i show the same alert dialog in second screen, the alertdialog not showing, but instead it's on the first screen (when i close the second page, i saw the alert dialog in 1st page)  4. in first page when i try to show the same alertdialog, it return error Dialog activity is destroyed, unable to show dialog with message: null    Workaround for this  issue  1. Keep re-creating new alertdialog unlike previous approach which using 1 alertdialog and used in multiple places.",Bug,High,Closed,"2019-06-20 01:29:00","2019-06-20 01:29:00",5
"The Titanium SDK ","[iOS] Titanium APIs are able to be used for remote webviews","When using a remote webview I am still able to log messages to the console (on Android I am unable to log messages when using a webview).    *app.js*      *Wv.html*      *Test Steps*  # Create an app with the above test files  # Click on the {{load html button}}  # Should display {{test0}} at the top  # Press {{Log Message}}  # Should log a message   # Press {{Reload Webview}}  # Press {{Log Message}}  # Should log a message   # Press {{remote load webview}}  # Should see google homepage   # Press {{Log Message}}    *Expected result*  Log message should not be logged when using a remote webview.    *Actual result*  Log message is still logged when using a remote webview.  ",Bug,Critical,Closed,"2019-07-18 10:54:43","2019-07-18 10:54:43",5
"The Titanium SDK ","Add Node 8 deprecation warning for SDK 9.0 release","Node 8 will not be supported in SDK 9.0. Please add a deprecation warning to the CLI in the next release.",Story,Medium,Closed,"2019-07-17 16:27:47","2019-07-17 16:27:47",2
"The Titanium SDK ","Android: OptionDialog without radio buttons should not auto-set selectedIndex property after clicking option","*Summary:*  As of Titanium 8.1.0, Android now supports displaying an {{OptionDialog}} without radio buttons if its selectedIndex property is not set (or set to {{-1}}). See: [TIMOB-26793]    But one usability issue with the current implementation is that tapping on an {{OptionDialog}} button causes the selectedIndex to be set to the index of the tapped button. The issue with this is if the {{OptionDialog}} is re-shown, it'll show radio buttons instead of plain buttons which is not desired. This happens because the selectedIndex was set.    *Proposed Solution:*  If the {{OptionDialog}} is not showing radio buttons, then it should not automatically set the selectedIndex property when tapping a button. The click event already provides the index of the button that was tapped on and this is enough. Besides, iOS does not support the selectedIndex property anyways, making this behavior portable.    However, if the developer does set selectedIndex via code to show radio buttons, then the {{OptionDialog}} should maintain the old behavior and update the selectedIndex property with the clicked button index.    *Steps to reproduce:*  # Build and run the below code on Android.  # Tap on the Show Dialog button.  # Tap on the dialog's Option 1 button.  # Tap on the Show Dialog button again to re-show it.  # Notice the dialog shows radio buttons in front of every option button. _(This is the usability issue.)_        *Work-around:*  Set selectedIndex to {{-1}} before re-showing the dialog.    ",Improvement,Medium,Closed,"2019-07-17 03:29:58","2019-07-17 03:29:58",5
"The Titanium SDK ","Android: Further improve launch time utilizing snapshots","- Futher improve launch time by including {{ti.main.js}} in our V8 snapshot",Improvement,Medium,Closed,"2019-07-16 21:58:48","2019-07-16 21:58:48",8
"The Titanium SDK ","Android 7: Content URL's are returned as MediaStore columns","On Android 7, different to Android 9 for example, content URL's are returned like the following:    Note {{_display_name}} for example, which is the raw column of the MediaStore class.",Bug,None,Resolved,"2019-07-16 18:09:04","2019-07-16 18:09:04",0
"The Titanium SDK ","Windows: Implement Ti.Calendar.Attendee","https://docs.<USER>com/platform/latest/#!/api/Titanium.Calendar.Attendee  https://docs.microsoft.com/en-us/uwp/api/windows.applicationmodel.appointments.appointmentinvitee    ","New Feature",Medium,Closed,"2019-07-16 07:33:12","2019-07-16 07:33:12",13
"The Titanium SDK ","Android: Improve getter and setter warnings","Improve Titanium proxy getter and setter warnings:  - Show method and line number to aid in moving over from getter/setter methods",Improvement,None,Closed,"2019-07-12 21:27:53","2019-07-12 21:27:53",2
"The Titanium SDK ","Android: Add Intl.NumberFormat support","We use the {{Intl.NumberFormat}} class to format currencies, e.g.:  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat  {code:js}  const value = new Intl.NumberFormat('en-US', {      style: 'currency',      currency: 'USD',      minimumFractionDigits: 2  }).format(10.12);    console.log(value); // output: $10.12  {code}  It works fine on iOS but throws an error {{Intl is not defined}}, although the web docs indicate it [should work on V8|https://v8.dev/blog/intl].    Workaround until then is writing another native module:  {code:java}    @Kroll.module(name=TiCurrency, id=ti.currency)  public class TiCurrencyModule extends KrollModule  {   private static final String LCAT = TiCurrencyModule;   private static final boolean DBG = TiConfig.LOGD;     @Kroll.method   public String format(KrollDict params)   {    double value = params.getDouble(value);    String currency = params.getString(currency);      NumberFormat format = NumberFormat.getCurrencyInstance(Locale.getDefault());    format.setCurrency(Currency.getInstance(currency));      return format.format(value);   }  }  {code}","New Feature",Medium,Closed,"2019-07-12 18:31:32","2019-07-12 18:31:32",8
"The Titanium SDK ","iOS: VideoPlayer natural size","Since 7.0.0 VideoPlayers property {{naturalSize}}  and event {{naturalSizeAvailable}}  of are broken on iOS. They return video layer size instead of movie size.      {code:javascript}  // URL from https://jira.<USER>org/browse/TIMOB-25566    const win = Ti.UI.createWindow({      backgroundColor: '#fff'  });    const player = Ti.Media.createVideoPlayer({      url: 'http://techslides.com/demos/sample-videos/small.mp4', // 560x320      showsControls: false,      autoplay: true,      height: 200  });  win.add(player);    function onNaturalSizeAvailable(e) {      console.log(e.type, 'e.naturalSize', JSON.stringify(e.naturalSize));      console.log('player.naturalSize', e.source.naturalSize);  }  player.addEventListener('naturalsizeavailable', onNaturalSizeAvailable);    win.open();  {code}    output (will differ on different devices/simulators):      expected output (must be the same for one video):    ",Bug,Critical,Closed,"2019-07-09 15:23:13","2019-07-09 15:23:13",5
"The Titanium SDK ","Titanium CLI v5 deprecation notices","Titanium has 3 essential CLI's: Appc CLI, Titanium CLI, and Alloy CLI.    The Appc CLI and Alloy CLI will be deprecated. The Titanium CLI will be re-imagined to include the platform specific functionality in Appc CLI as an add-on and Alloy CLI as a Titanium CLI command.    As apart of this effort, the following CLI's and compabilities will be deprecated:    h4. Titanium CLI    * End of support for Node 8 and older  ** TIMOB-27250  ** Effective Titanium SDK 9  ** Node 12 being the recommended  ** Node 10.13.0 being the minimum supported (though the actual technical minimum is 10.2.0)  ** Notice added to Titanium CLI v5 and displayed only if Node version < 10.2    * End of support for non-build,clean Titanium CLI (v5.x or older) plugins  ** Effective Titanium SDK 10  ** Plugins must be ported to Appc Daemon plugins and new hook system    * End of support for ALL Titanium CLI (v5.x or older)  ** Effective Titanium SDK 11  ** Notice added to Titanium CLI for specific commands when output is text (not JSON)  ** NON-BUILD plugins must be ported to Appc Daemon plugins  ** Note: build-related plugins must be continue to be written as Titanium CLI v5 plugins    * End of support for {{ti setup}}, {{ti module}}, and {{ti plugin}} commands?  ** Effective Titanium SDK 10  ** Notice added to Titanium CLI v5 for these commands when output is text (not JSON)  ** Command will not likely be replaced in Titanium CLI v6    h4. Appc CLI    * End of Life for Appc CLI  ** Effective Appc CLI 9  ** End of Support sometime in 2020, possibly around Titanium SDK 10... notify to switch to Titanium CLI v6  ** Notice added to Appc CLI for specific commands when output is text (not JSON)  ** Users must switch to Titanium CLI v6    h4. Alloy CLI    * End of Life for the Alloy CLI  ** Effective Titanium SDK 10?  ** Notice added to Alloy CLI  ** Users must switch to {{ti alloy}} to create models, etc  ",Story,High,Closed,"2019-07-10 17:00:37","2019-07-10 17:00:37",3
"The Titanium SDK ","Android: Setting Window barColor while using a theme without an ActionBar/TitleBar will cause a crash as of 8.1.0","*Summary:*  Setting {{Ti.UI.Window}} property barColor if it's using a theme without an {{ActionBar}} will cause a crash as of Titanium 8.1.0.    Note that this bug was never in a release version. It was caught before release.    *Steps to reproduce:*  # Set up a Classic project to build with Titanium 8.1.0.  # Copy the below code to your app.js.  # Build and run on Android.        *Result:*  App crashes on startup and the following exception gets logged...  {code}  [ERROR] :  TiExceptionHandler: (main) [1,6371] Attempt to invoke virtual method 'void android.support.v7.app.ActionBar.setBackgroundDrawable(android.graphics.drawable.Drawable)' on a null object reference  [ERROR] :  TiExceptionHandler:  [ERROR] :  TiExceptionHandler:     ti.modules.titanium.ui.WindowProxy.windowCreated(WindowProxy.java:313)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiActivityWindows.windowCreated(TiActivityWindows.java:57)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiBaseActivity.windowCreated(TiBaseActivity.java:578)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiBaseActivity.onCreate(TiBaseActivity.java:726)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiActivity.onCreate(TiActivity.java:47)  [ERROR] :  TiExceptionHandler:     android.app.Activity.performCreate(Activity.java:6975){code}      ----    *Use-case:*  This issue is more likely to happen in apps that use theme/style XML file applied globally to the app. Like the one below supplied by [~<USER>.    {code:xml}  <style name=FullScreen parent=@style/Theme.AppCompat.Light>   <item name=android:soundEffectsEnabled>false</item>   <item name=colorPrimaryDark>#000000</item>   <item name=colorPrimary>#EF4938</item>   <item name=colorAccent>#FFFFFF</item>   <item name=colorControlNormal>#EF4938</item>   <item name=colorControlActivated>#2EA1FC</item>   <item name=colorControlHighlight>#F26D60</item>   <item name=colorSwitchThumbNormal>#FFFFFF</item>     <item name=android:colorButtonNormal>#00BCFF</item>   <item name=android:colorEdgeEffect>#EF4938</item>   <item name=android:navigationBarColor>#000000</item>   <item name=windowNoTitle>true</item>   <item name=windowActionBar>false</item>  </style>  {code}    {code:javascript}  var win = Titanium.UI.createWindow({       barColor:’#FFF’       theme:'FullScreen'  });  win.open();  {code}  ",Bug,Critical,Closed,"2019-07-10 09:21:48","2019-07-10 09:21:48",3
"The Titanium SDK ","iOS: CLI prefers Xcode 11/iOS 13 even though Xcode 10.2.1 is selected","I have Xcode 11 beta2 and 10.2.1 installed. Xcode 10.2.1 is selected.    If I run {{ti build -p ios}} it will bomb out saying no Xcode's supporting iOS 13.0.    Ultimately, it looks the code to auto-select the iOS SDK version when unspecified is not always sorting the Xcode's to prefer to selected one. Specifically if a 2 member array, the custom sort only checks the second Xcode to see if it's selected, not the first. This can result in it not getting priority and Xcode's get sorted by version instead (preferring Xcode 11 and iOS 13)",Bug,High,Closed,"2019-07-09 18:55:50","2019-07-09 18:55:50",5
"The Titanium SDK ","iOS: Cannot find iOS 13 simulators in Xcode 11 Beta 3","We cannot find iOS simulators in Xcode 11 Beta 3 and up. After an investigation, we found out  that the CoreSimulator directory path moved, so ioslib could not find it.    Pull: https://github.com/<USER>ioslib/pull/90",Bug,Critical,Closed,"2019-07-08 08:45:39","2019-07-08 08:45:39",5
"The Titanium SDK ","iOS: Be able to determine dark / light mode, as well as changes on it","A developer should be able to check the current userInterfaceStyle, e.g. dark mode vs light mode.",Improvement,None,Closed,"2019-07-07 15:45:55","2019-07-07 15:45:55",5
"The Titanium SDK ","TableView / TableViewRow memory leak","Old table row references are not cleared when calling *tableView.setData(rows)*.    In a production app running SDK 7.4.1.GA this is causing serious memory issues. Because the row structure is quite complex, it's important that old rows are completely cleaned from memory before new ones are set.    We've been able to reproduce this issue in a example application for multiple SDK's (8.0.0.GA, 7.4.1.GA, 8.0.1.GA). As demonstrated in the attached video you can see that the objects are not cleared from memory. The source code for the app running in the video has also been attached to this issue.    We've tried calling `$.off();$.destroy();` on the `controllers/imagerow` controller, this does not destroy the proxies.    ",Bug,Critical,Closed,"2019-06-28 14:06:11","2019-06-28 14:06:11",8
"The Titanium SDK ","Webview http redirects not working as on 7.5.1","We have an integration with Plaid (https://plaid.com/) where we use a web view and capture redirects on the site.    From their docs:  “Communication between the WebView and your app is handled by HTTP redirects rather than client-side JavaScript callbacks. These redirects should be intercepted by your app.”    Working code:      $.bankPlaidLinkWebView.addEventListener('beforeload', function(_e) {            if (_e.url.indexOf(schemaOrString) > -1) {                  $.bankPlaidLinkWebView.stopLoading();                  handleCommand(_e.url);            }      });    beforeload triggers with an url the same as the one I sent. After that we should listen for an url that has plaidlink as the scheme.    From the docs:  All redirect URLs have the scheme plaidlink. The event type is communicated via the URL host and data is passed via the querystring. There are two supported events, connected and exit, which are documented below.    These redirects are never triggered and it always trigger my original url.    This is working on a published app but has stopped working since SDK 8.0.0.GA, I guess it’s related to the switch to WKWebview.    Checking TiUIWebView.m I found that changing line #995 from @url : webView.URL.absoluteString to:  @url : navigationAction.request.URL fixes the problem.    Don't know if you should fix it here or on the newly introduced 'redirect' event. This was working before 8.0 and works if I change the mentioned line.  ",Bug,Critical,Closed,"2019-07-01 16:34:17","2019-07-01 16:34:17",5
"The Titanium SDK ","CLI: apiversion validation always fails for native modules installed via npm","h5.Description    When installing a module from npm and building, the apiversion fails even if the apiversion is correct. This is because the apiversion passed in from the SDK is a string, whereas the version from the version we get from the module is a number. We should parseInt both of these before using them.    h5.Steps to reproduce    1. In the root of your titanium project {{alongside tiapp.xml}}, run {{npm init -y}} and then {{npm i @titanium/imagefactory}}  2. Add {{<module>ti.imagefactory</module>}} to your modules section in the tiapp  3. Build for Android or iOS (iOS will require TIMOB-27203 to be fixed first)    h5.Actual    Build errors with {{\[ERROR\] Found incompatible Titanium Modules:}}    h5.Expected    No error as everything is valid",Bug,None,Closed,"2019-07-02 14:22:58","2019-07-02 14:22:58",3
"The Titanium SDK ","iOS: no apiversion validation performed on application build","h5.Description    When building for iOS there is no module apiversion validation being performed, this is because the apiversion in the SDK is stored as {{iphone}}, and node-appc is looking for {{ios}}.     h5.Steps to reproduce    1. Add the following module to your tiapp modules section {{<module platform=iphone version=1.1.0>com.<USER>aca</module>}}  2. Open the manifest file (probably at {{/Users/<USER>Library/Application Support/Titanium/modules/iphone/com.<USER>aca/1.1.0/manifest}})  3. Change the apiversion to anything other than 2  4. Build with {{ti build -p ios --build-only}}    h5.Actual    Build carries on past the module verification stage    h5.Expected    Build should error that module is incompatible",Bug,None,Closed,"2019-07-02 13:56:59","2019-07-02 13:56:59",3
"The Titanium SDK ","IOS:Rebuilding app on device throws Couldn't find module error","*Steps To Reproduce:*  1.Create a classic/alloy app with latest 8_1_X sdk or master.  2.Run against iOS device  3.Re run against same device again.    *Expected:*  App should get installed and should be able to  launch successfully  *Actual:*  Throws the following error after launching  [ERROR] :      column = 25;  [ERROR] :      line = 9498;  [ERROR] :      message = Couldn't find module: ./app for architecture: arm64;  [ERROR] :      sourceURL = file:///var/containers/Bundle/Application/EC162335-7334-496E-B04D-39FFDFBAE114/test23.app/ti.main.js;  [ERROR] :      stack =     at require@[native code]\n    at require(/ti.main.js:9498:25)\n    at (/ti.main.js:9719:10)\n    at loadAsync(/ti.main.js:9642:13)\n    at global code(/ti.main.js:9716:10);  [ERROR] :      toJSON = <KrollCallback: 0x1d426d300>;  [ERROR] :  }  [WARN] :   Cannot serialize object, trying to repair ...  [WARN] :   Found invalid attribute toJSON that cannot be serialized, skipping it ...    Notes:  Works fine on 8.0.2 GA and happens only on master and 8.1_x  rerunning the same app on 2 times or 3 times throws error",Bug,None,Closed,"2019-07-02 04:38:36","2019-07-02 04:38:36",5
"The Titanium SDK ","Android: Update Ti.Filesystem.File to support unimplemented APIs when wrapping a content:// URL","*Summary:*  When passing an Android content:// URL to the {{Ti.Filesystem.getFile()}} method, the returned {{File}} object does not support the following methods/properties. They will return failure results and log a Method is not supported warning.  * [File.createdAt()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem.File-method-createdAt]  * [File.deleteFile()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem.File-method-deleteFile]  * [File.exists()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem.File-method-exists]  * [File.extension()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem.File-method-extension]  * [File.modifiedAt()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem.File-method-modifiedAt]  * [File.read()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem.File-method-read]  * [File.readonly|https://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem.File-property-readonly]  * [File.write()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem.File-method-write]  * [File.writable|https://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem.File-property-writable]    We should add the above methods for consistency.    *Note:*  The {{File}} object already correctly implements all other methods and properties for a content:// URL such as the {{copy()}} method and nativePath property. Adding the above methods will help make the interface more complete and avoid confusion.    *Implementation:*  We need to add the above methods to our {{TitaniumBlob}} Java class.  https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/io/TitaniumBlob.java    We can test the inclusion of these methods with the attached [^FileContentUrlTest.js] file. This test script assumes its was created via a Classic Default project template.  ",Improvement,Medium,Closed,"2019-07-01 23:34:37","2019-07-01 23:34:37",13
"The Titanium SDK ","CLI: Reduce logging output during build","Our build is very noisy by default, even if the log level is set to {{info}} only. For the {{ti}} CLI the log level is {{debug}} by default which should be changed to {{info}}.    A clean build produces around 120 lines of log output. Most of the printed output is not relevant and should be moved to the {{debug}} log level.    *Example logs from our current build*      *Proposed build logs*  ",Improvement,None,Open,"2019-07-01 11:16:30","2019-07-01 11:16:30",5
"The Titanium SDK ","iOS: Using a commonjs module in an itemtemplate fails in a classic app","h5.Description    When using a commonjs module as in an ItemTemplate the file fails to get required as it tries alloy first which throws an error, and then the classic code require is never executed, we need to nest the try catches to allow moving on    h5.Steps to reproduce    1. Get https://github.com/ewanharris/ti.imageview-listview-example  2. Build to iOS    h5.Actual    Error is thrown    h5.Expected    No error thrown",Bug,Medium,Closed,"2019-06-28 12:10:48","2019-06-28 12:10:48",5
"The Titanium SDK ","Windows: WebView should expose Ti.API.warn and Ti.API.log","Windows WebView does not expose {{Ti.API.warn}} and {{Ti.API.log}} in its script content. Windows only exposes {{Ti.API.info}}, {{Ti.API.debug}} and {{Ti.API.error}} now.    https://github.com/<USER>titanium_mobile_windows/blob/master/Source/TitaniumKit/src/UI/webview.js#L6","New Feature",Medium,Closed,"2019-06-28 02:01:32","2019-06-28 02:01:32",5
"The Titanium SDK ","Android: Ti.Filesystem.File.createFile() may alter location of specified path","If I build a file path using path.join(Ti.Filesystem.tempDirectory, dir/file.txt) and then attempt to create the file, Android will actually ignore the file path/URL I passed in and will try to force it to be created under appdata-private.    https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/TiFileProxy.java#L172-L177  ",Bug,None,Closed,"2019-06-27 17:27:19","2019-06-27 17:27:19",5
"The Titanium SDK ","Android: Ti.Filesystem.getFile is not tolerant of file: URIs without file:// prefix","A URI like this: file:/data/user/0/com.<USER>testApp.testing/cache/_tmp/rmdir1561643019762/myfile.txt should be valid and supported.    However, Android's logic uses some string matching rather than URI parsing to handle the value and it appears to use incorrect logic when the file URI does not have the two trailing slashes before the path.",Bug,None,Closed,"2019-06-27 14:11:05","2019-06-27 14:11:05",5
"The Titanium SDK ","Android: TabGroup crashes if tab title property is not set as of 8.0.2","*Summary:*  As of Titanium 8.0.2, setting up a {{TabGroup}} tab without setting the title property will cause a crash. This happens to both the top and bottom tab styles.    *Use-Case:*  Apps which want to show icon-only tab groups.    *Steps to reproduce:*  # Create a Classic Default Project.  # Set up the project to build with Titanium 8.0.2.GA.  # Replace the project's app.js with the code below.  # Build and run on Android        *Result:*  App crashes with the following stack trace when using the top bar style.  {code}  [ERROR] :  TiExceptionHandler: (main) [122,122] Unable to start activity ComponentInfo{com.<USER>testing/org.<USER>titanium.TiActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String java.lang.Object.toString()' on a null object reference  [ERROR] :  TiExceptionHandler:  [ERROR] :  TiExceptionHandler:     ti.modules.titanium.ui.widget.tabgroup.TiUITabLayoutTabGroup.updateTabTitle(TiUITabLayoutTabGroup.java:222)  [ERROR] :  TiExceptionHandler:     ti.modules.titanium.ui.widget.tabgroup.TiUITabLayoutTabGroup.addTabItemInController(TiUITabLayoutTabGroup.java:155)  [ERROR] :  TiExceptionHandler:     ti.modules.titanium.ui.widget.tabgroup.TiUIAbstractTabGroup.addTab(TiUIAbstractTabGroup.java:241)  [ERROR] :  TiExceptionHandler:     ti.modules.titanium.ui.TabGroupProxy.handlePostOpen(TabGroupProxy.java:448)  [ERROR] :  TiExceptionHandler:     ti.modules.titanium.ui.TabGroupProxy.onWindowActivityCreated(TabGroupProxy.java:430)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiBaseActivity.onCreate(TiBaseActivity.java:752)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiActivity.onCreate(TiActivity.java:47)  [ERROR] :  TiExceptionHandler:     android.app.Activity.performCreate(Activity.java:7144)  [ERROR] :  TiExceptionHandler:     android.app.Activity.performCreate(Activity.java:7135)  [ERROR] :  TiExceptionHandler:     android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1271)  [ERROR] :  TiExceptionHandler:     android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2894)  [ERROR] :  TiExceptionHandler:     android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3049)  [ERROR] :  TiExceptionHandler:     android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:78)  [ERROR] :  TiExceptionHandler:     android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)  [ERROR] :  TiExceptionHandler:     android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)  [ERROR] :  TiExceptionHandler:     android.app.ActivityThread$H.handleMessage(ActivityThread.java:1809)  [ERROR] :  TiExceptionHandler:     android.os.Handler.dispatchMessage(Handler.java:106)  [ERROR] :  TiExceptionHandler:     android.os.Looper.loop(Looper.java:193)  [ERROR] :  TiExceptionHandler:     android.app.ActivityThread.main(ActivityThread.java:6680)  [ERROR] :  TiExceptionHandler:     java.lang.reflect.Method.invoke(Native Method)  [ERROR] :  TiExceptionHandler:     com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)  [ERROR] :  TiExceptionHandler:     com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)  {code}    When using the bottom tab style, it crashes with the following stack trace...  {code:javascript}  [ERROR] :  TiExceptionHandler: (main) [114,114] Unable to start activity ComponentInfo{com.<USER>testing/org.<USER>titanium.TiActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String java.lang.Object.toString()' on a null object reference  [ERROR] :  TiExceptionHandler:  [ERROR] :  TiExceptionHandler:     ti.modules.titanium.ui.widget.tabgroup.TiUIBottomNavigationTabGroup.updateTabTitle(TiUIBottomNavigationTabGroup.java:262)  [ERROR] :  TiExceptionHandler:     ti.modules.titanium.ui.widget.tabgroup.TiUIBottomNavigationTabGroup.updateDrawablesAfterNewItem(TiUIBottomNavigationTabGroup.java:162)  [ERROR] :  TiExceptionHandler:     ti.modules.titanium.ui.widget.tabgroup.TiUIBottomNavigationTabGroup.addTabItemInController(TiUIBottomNavigationTabGroup.java:150)  [ERROR] :  TiExceptionHandler:     ti.modules.titanium.ui.widget.tabgroup.TiUIAbstractTabGroup.addTab(TiUIAbstractTabGroup.java:241)  [ERROR] :  TiExceptionHandler:     ti.modules.titanium.ui.TabGroupProxy.handlePostOpen(TabGroupProxy.java:448)  [ERROR] :  TiExceptionHandler:     ti.modules.titanium.ui.TabGroupProxy.onWindowActivityCreated(TabGroupProxy.java:430)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiBaseActivity.onCreate(TiBaseActivity.java:752)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiActivity.onCreate(TiActivity.java:47)  [ERROR] :  TiExceptionHandler:     android.app.Activity.performCreate(Activity.java:7144)  [ERROR] :  TiExceptionHandler:     android.app.Activity.performCreate(Activity.java:7135)  [ERROR] :  TiExceptionHandler:     android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1271)  [ERROR] :  TiExceptionHandler:     android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2894)  [ERROR] :  TiExceptionHandler:     android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3049)  [ERROR] :  TiExceptionHandler:     android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:78)  [ERROR] :  TiExceptionHandler:     android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)  [ERROR] :  TiExceptionHandler:     android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)  [ERROR] :  TiExceptionHandler:     android.app.ActivityThread$H.handleMessage(ActivityThread.java:1809)  [ERROR] :  TiExceptionHandler:     android.os.Handler.dispatchMessage(Handler.java:106)  [ERROR] :  TiExceptionHandler:     android.os.Looper.loop(Looper.java:193)  [ERROR] :  TiExceptionHandler:     android.app.ActivityThread.main(ActivityThread.java:6680)  [ERROR] :  TiExceptionHandler:     java.lang.reflect.Method.invoke(Native Method)  [ERROR] :  TiExceptionHandler:     com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)  [ERROR] :  TiExceptionHandler:     com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)  {code}    *Work-around:*  Set tab title to empty string like this...  {code:javascript}  var tab = Ti.UI.createTab({   title: ,    // <- This works-around issue.   icon: /assets/images/tab1.png,   window: window,  });  {code}  ",Bug,Critical,Closed,"2019-06-26 21:28:59","2019-06-26 21:28:59",5
"The Titanium SDK ","Windows: Add VideoPlayer scalingMode constants VIDEO_SCALING_RESIZE_*","*Summary:*  As of Titanium 7.0.0, we've added the following iOS-only {{Ti.Media.ViewPlayer}} constants. We need to add them to Windows as well for parity.  * [Ti.Media.VIDEO_SCALING_RESIZE|https://docs.<USER>com/platform/latest/#!/api/Titanium.Media-property-VIDEO_SCALING_RESIZE]  * [Ti.Media.VIDEO_SCALING_RESIZE_ASPECT|https://docs.<USER>com/platform/latest/#!/api/Titanium.Media-property-VIDEO_SCALING_RESIZE_ASPECT]  * [Ti.Media.VIDEO_SCALING_RESIZE_ASPECT_FILL|https://docs.<USER>com/platform/latest/#!/api/Titanium.Media-property-VIDEO_SCALING_RESIZE_ASPECT_FILL]     *Note:*  The above constants were added to iOS via [TIMOB-19040].  ",Improvement,High,Closed,"2019-06-26 06:59:08","2019-06-26 06:59:08",8
"The Titanium SDK ","Update Hyperloop to 4.0.3","Update the SDK's bundled Hyperloop version to 4.0.3",Story,None,Closed,"2019-06-24 13:11:32","2019-06-24 13:11:32",3
"The Titanium SDK ","Android: Update V8 runtime to 7.8","- Upgrade V8 to the latest stable version {{7.8.279.23}}    - Maintain backwards compatibility",Improvement,High,Closed,"2019-06-21 04:17:17","2019-06-21 04:17:17",21
"The Titanium SDK ","Android: Closing root window from child causes app exit issues as of 8.0.1","*Summary:*  As of Titanium 8.0.1, there is a regression where the app exit behavior has changed after closing the root window from a child window. After closing the root window...  * Closing the immediate child window will home-out instead of exiting the app.  * Opening another child window and then closing it will cause an app exit instead of displaying the parent window.    *Steps to reproduce:*  # Build and run the below code on Android.  # Tap on the Open button in Window 1. _(Will close Window 1 after opening Window 2.)_  # Tap on the Open button in Window 2.  # Tap on the Close button in Window 3.  # Notice the app exits. _(This is a bug. Should close Window 3 and display Window 2.)_  # Relaunch the app.  # Tap on the Open button in Window 1.  # Tap on Android's Back button in Window 2.  # Relaunch the app.  # Notice the splash screen was *NOT* shown. _(This is a bug. App did not exit when pressing back button when it should have.)_        *Work-around:*  Do not close the root window immediately after opening the child window. Instead, close the root window via the child window's close listener.  ",Bug,Medium,Closed,"2019-06-21 01:25:14","2019-06-21 01:25:14",7
"The Titanium SDK ","iOS: Ti.Platform.id changes when updating to SDK 8.0.0","*Steps to reproduce the behavior*    # Create a new classic app  # Add {{console.log(Ti.Platform.id);}}  # Build and run the app using SDK 7.5.1.GA  # Note the identifier printed to the log  # Build and run the app again using SDK 8.0.0.GA  # Note the identifier printed to the log    *Actual behavior*  Two different identifiers are logged    *Expected behavior*  The same identifier is logged",Bug,Critical,Closed,"2019-06-20 15:32:11","2019-06-20 15:32:11",5
"The Titanium SDK ","iOS 13: Support new UITableViewStyleInsetGrouped style in list-view","The new {{UITableViewStyleInsetGrouped}} should be supported in the list-view and table-view.",Improvement,Medium,Closed,"2019-06-19 18:11:27","2019-06-19 18:11:27",5
"The Titanium SDK ","iOS 13: Prevent modal windows from being swiped down","iOS 13 will display modal windows as page sheets by default. To prevent this for certain screens, the {{isModalInPresentation}} property can be configured on the internal view controller. This should be exposed as a {{forceModal}} boolean property. Since Android does not support this so far, it'd be an iOS only property for now, but could be extended once Android supports it as well.    https://developer.apple.com/documentation/uikit/uiviewcontroller/3229894-modalinpresentation",Improvement,High,Closed,"2019-06-19 17:38:04","2019-06-19 17:38:04",3
"The Titanium SDK ","CLI: Move Alloy optimizations into core SDK build","Alloy does some additional work in specialized Babel plugins to optimize Alloy applications. But most of these can be generally useful for Titanium apps and should be moved into the mainline build <USER>to benefit all apps (and to simplify Alloy's build <USER>which is poorly written resulting in some hard to fix build/source map bugs and performance issues).    Specifically Alloy allows developers to make use of special references that get replaced by true/false:  - OS_IOS, OS_ANDROID, OS_WINDOWS  - ENV_DEV, ENV_DEVELOPMENT, ENV_TEST, ENV_PROD, ENV_PRODUCTION  - DIST_ADHOC, DIST_STORE    Then it strips out dead code as a result (because these are typically use in if/else guards for platform-specific code)","New Feature",Medium,Closed,"2019-06-19 13:01:46","2019-06-19 13:01:46",13
"The Titanium SDK ","iOS: Implement async Ti.Database.DB methods","- *Parity ticket for Android implementation TIMOB-27111*    - Implement asynchronous {{Ti.Database.DB}} methods for executing SQL queries.  - Implement method for executing multiple queries in one shot. (Useful for transactions)    {code:js}  Ti.Database.DB.executeAsync(callback, query, parameters...);    Ti.Database.DB.executeAll(queries);  Ti.Database.DB.executeAllAsync(callback, queries);  {code}",Improvement,High,Closed,"2019-06-18 18:24:29","2019-06-18 18:24:29",13
"The Titanium SDK ","iOS: Update Xcode project template settings and resolve warnings","The Xcode project template was last update to recommended settings for Xcode 8.3. This needs to be updated for Xcode 10.2. The compiler also prints several warnings (including missing method selectors, nullability flags and strict prototypes) which should be addressed.",Improvement,None,Closed,"2019-06-18 13:55:49","2019-06-18 13:55:49",5
"The Titanium SDK ","iOS: Remove TestModule from main repository","The [TestModule|https://github.com/<USER>titanium_mobile/tree/673a3b9117e3d185a09882b5f0409ead47454179/iphone/TestModule] directory in our main repo was used during development of Swift support and is no longer needed so it can be safely removed.",Story,None,Resolved,"2019-06-18 10:53:21","2019-06-18 10:53:21",1
"The Titanium SDK ","iOS: Ti.UI.WebView cannot load html files from cache","*Note: Issue can be reproduced only on device, webview works as expected on simulator*  New WebView fails to load html files stored in the app with the error:        Reading iOS documentation I noticed that local files should be loaded using *loadFileURL* method as in https://github.com/<USER>modules/Ti.WKWebView/blob/master/ios/Classes/TiWkwebviewWebView.m#L198 but I don't see that in https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/TiUIWebView.m#L664  ",Bug,Critical,Closed,"2019-05-09 09:18:49","2019-05-09 09:18:49",5
"The Titanium SDK ","iOS: Incremental builds broken as of 8.1.0","_This issue is not in a released version. It was caught before release._  ----    Incremental builds are broken on master… I informed the team via the related tickets on GitHub weeks ago but it seems like it has still not been fixed on latest master. In summary: Either TIMOB-27043 or TIMOB-27045. Please handle this asap, it causes a horrible dev exp.     Steps to reproduce:    1. Run a clean build with latest master  2. Change nothing and run again    Expected: A fast, incremental build happens  Actual: A slow, full build happens every time",Bug,Critical,Closed,"2019-06-15 20:22:35","2019-06-15 20:22:35",5
"The Titanium SDK ","Android: Prevent multiple exception logs","- Prevent multiple exception logs when multiple handlers are present    *TEST CASE*  - Include {{com.<USER>aca}} module  - Throw an exception  {code:js}  throw new Error('exception');  {code}  - Should NOT see multiple {{TiExceptionHandler}} logs",Bug,Medium,Closed,"2019-06-14 23:23:28","2019-06-14 23:23:28",3
"The Titanium SDK ","Add ability to alias required modules in Titanium","With 8.0.X versions of the SDK, I could include a bootstrap file with my package before I published it to npm which then allowed me to define an alias for use with Titanium.    require('/ti.internal/extensions/binding')('axios', '/node_modules/@titanium/axios');    With the 8.1.x releases, the code has changed and is rolled up, which blocks access to the functions necessary to do this.    I will submit a PR that modifies the code to allow it.","New Feature",None,Closed,"2019-06-14 17:41:02","2019-06-14 17:41:02",5
"The Titanium SDK ","Windows: Rewrite Ti.XML with native API","Rewrite entire {{Ti.XML}} interfaces with native UWP API (Windows.Data.Xml.Dom). Currently we are using JavaScript implementation for it and some functions are missing there such as XPath support.","New Feature",Medium,Open,"2019-06-11 01:47:40","2019-06-11 01:47:40",21
"The Titanium SDK ","iOS 13 : Multiple row selection in ListView","In iOS 13 apple has exposed some new APIs  to support multiple row selection  using two-finger gesture in tableview. Expose this behavior.  See APIs -   https://developer.apple.com/documentation/uikit/uitableviewdelegate/3183943-tableview?language=objc, https://developer.apple.com/documentation/uikit/uitableviewdelegate/3183942-tableview?language=objc and  https://developer.apple.com/documentation/uikit/uitableviewdelegate/3183944-tableviewdidendmultipleselection?language=objc","New Feature",High,Closed,"2019-06-09 07:26:51","2019-06-09 07:26:51",5
"The Titanium SDK ","Android: Broken incremental builds when using encrypted assets or referencing JS from HTML","*Summary:*  The changes made by [TIMOB-27043] is causing Android build issues as of 8.1.0.  Note that this issue was never released. We've caught it before RC.    ----  *Issue 1:*  Building an Android project with asset encryption enabled (which device and production builds do by default) will fail when built the 2nd time.    To reproduce, run the below command on a project twice. It'll fail on the 2nd attempt.  {code}  appc run -p android --build-only --deploy-type test  {code}    The above will typically fail on the 2nd attempt with...  {code}  [ERROR] :  Failed to compile Java source files:  [ERROR] :    [ERROR] :  /Users/<USER>Desktop/workspaces/workspace_2019/kitchensink-v2-master/build/android/gen/com/<USER>kitchensink/KitchensinkApplication.java:40: error: cannot find symbol  [ERROR] :    KrollAssetHelper.setAssetCrypt(new AssetCryptImpl());  [ERROR] :                                       ^  [ERROR] :    symbol:   class AssetCryptImpl  [ERROR] :    location: class KitchensinkApplication  [ERROR] :  Note: /Users/<USER>Desktop/workspaces/workspace_2019/kitchensink-v2-master/build/android/gen/com/<USER>kitchensink/KitchensinkApplication.java uses unchecked or unsafe operations.  [ERROR] :  Note: Recompile with -Xlint:unchecked for details.  [ERROR] :  1 error  [ERROR] Application Installer abnormal <USER>termination. Process exit value was 1  {code}    ----  *Issue 2:*  A local HTML file that references a JavaScript file via the {{<script/>}} tag will cause an immediate build failure.    Steps to reproduce:  # Copy the below files to a Classic app.  # Build to an Android device or emulator.  # Note that the build will immediately fail.    _app.js_  {code:javascript}  var window = Ti.UI.createWindow();  window.add(Ti.UI.createWebView({   url: my.html,  }));  window.open();  {code}    _my.html_  {code:html}  <!DOCTYPE html>  <html>   <head>    <script src=myHtmlScript.js></script>   </head>   <body onload=onPageLoaded();>    This verifies that a local HTML file can access a local JS file.   </body>  </html>  {code}    _myHtmlScript.js_  {code:javascript}  function onPageLoaded() {   alert(Embedded script successfully accessed via HTML file.);  }  {code}  \\  \\  The above will cause the following build failure...  {code}  [ERROR] :  TypeError: Cannot read property 'cyan' of undefined      at AndroidBuilder.copyFile (/Users/jquick2/Library/Application Support/Titanium/mobilesdk/osx/8.2.0/android/cli/commands/_build.js:2352:53)      at AndroidBuilder.next (/Users/jquick2/Library/Application Support/Titanium/mobilesdk/osx/8.2.0/android/cli/commands/_build.js:2711:16)      at /Users/jquick2/Library/Application Support/Titanium/mobilesdk/osx/8.2.0/node_modules/async/dist/async.js:3880:24      at eachOfArrayLike (/Users/jquick2/Library/Application Support/Titanium/mobilesdk/osx/8.2.0/node_modules/async/dist/async.js:1069:9)      at eachOf (/Users/jquick2/Library/Application Support/Titanium/mobilesdk/osx/8.2.0/node_modules/async/dist/async.js:1117:5)      at _parallel (/Users/jquick2/Library/Application Support/Titanium/mobilesdk/osx/8.2.0/node_modules/async/dist/async.js:3879:5)      at Object.parallelLimit [as parallel] (/Users/jquick2/Library/Application Support/Titanium/mobilesdk/osx/8.2.0/node_modules/async/dist/async.js:3962:5)      at Object.parallel (/Users/jquick2/Library/Application Support/Titanium/mobilesdk/osx/8.2.0/node_modules/node-appc/lib/async.js:56:8)      at task.run.then (/Users/jquick2/Library/Application Support/Titanium/mobilesdk/osx/8.2.0/android/cli/commands/_build.js:2707:16)  {code}  ",Bug,Critical,Closed,"2019-06-05 22:53:53","2019-06-05 22:53:53",5
"The Titanium SDK ","iOS 13: Add support for SF Symbols","SF symbols is a new iOS 13 feature that allows developers to use build-in icons (1500 icons!) in iOS apps.    We should allow users to use these icons. They're supposed to replace the system icons up-to iOS 12    Source: https://developer.apple.com/design/human-interface-guidelines/sf-symbols/overview","New Feature",High,Closed,"2019-06-05 15:32:13","2019-06-05 15:32:13",5
"The Titanium SDK ","Windows: Support Node-compatible log formatting","- Log formatting is currently not supported on any platforms  - Our docs suggest our support is equivalent to node.js, which in this case is not true    {code:js}  console.log('%s', 'test'); // test  {code}",Improvement,Medium,Closed,"2019-06-05 04:45:58","2019-06-05 04:45:58",13
"The Titanium SDK ","Migrate unit testing suite to Karma and stock mocha/should.js","Our [titanium-mobile-mocha-suite|https://github.com/<USER>titanium-mobile-mocha-suite] is currently using a lot of custom tooling to get unit testing to work. This includes custom versions of mocha, reporters and assertion libraries. With our latest efforts to make our runtime more node compatible and the new [karma-titanium-launcher|https://github.com/<USER>karma-titanium-launcher] we can move away from custom built testing tools and use the stock version as is.    This requires a migration of our unit testing suite to use Karma and would need the following changes:  - Add Karma and the required plugins for mocha and should.js  - Apply required changes to the test files so they are compatible with Karma  - Modify the existing [test.js|https://github.com/<USER>titanium-mobile-mocha-suite/blob/master/scripts/test.js] to let Karma handle the whole unit testing <USER>  - Adopt the existing customizations made to mocha and should.js and apply them to the Karma environment",Improvement,None,Open,"2019-06-04 18:52:48","2019-06-04 18:52:48",21
"The Titanium SDK ","iOS: Install Xcode 11 betas on some build nodes","We should being the <USER>of trying to install Xcode 11 betas on one or more of our Mac build nodes so that we can start adding PRs to target iOS 13/Xcode 11.",Story,Critical,Closed,"2019-06-04 16:00:51","2019-06-04 16:00:51",5
"The Titanium SDK ","iOS 13 : Expose new APIs to support Apple login","Expose new APIs to support Apple login.","New Feature",Critical,Closed,"2019-06-03 23:50:07","2019-06-03 23:50:07",5
"The Titanium SDK ","iOS 13: Support dark mode","Apple announced dark mode in iOS 13. Look for apis to support in SDK. WWDC 2019 video for dark mode support - https://developer.apple.com/videos/play/wwdc2019/214/","New Feature",None,Closed,"2019-06-03 23:48:01","2019-06-03 23:48:01",5
"The Titanium SDK ","iOS 13: Make iOS development-project compatible with Xcode 11","Make changes in our Xcode template project in order to start active development on it. ",Improvement,None,Closed,"2019-06-03 23:44:20","2019-06-03 23:44:20",5
"The Titanium SDK ","iOS 13: Support running on Xcode 11 Simulators ","In order to run with Xcode 11, ioslib and it's mappings need to be updated. Pull ready [here|https://github.com/<USER>ioslib/pull/88].","New Feature",Critical,Closed,"2019-06-03 23:14:28","2019-06-03 23:14:28",3
"The Titanium SDK ","iOS: Infinite recursion crash","Seen on our CI build nodes when the test suite crashed.    Here's the log prior to crash:      The attached crash log gives the details, and it's pretty clearly in an infinite recursion loop in TiBindingTiValueToNSObject and TiBindingTiValueToNSDictionary - presumably some object with a circular reference?",Bug,None,Open,"2019-06-03 18:25:16","2019-06-03 18:25:16",8
"The Titanium SDK ","Android: Views inside horizontal layout are clipped to the top","Subviews inside a horizontal parent view are clipping to the top on Android. On iOS, they are centered on the y-axis like other views are as well. This is a parity issue.    Example:    {code:js}  var win = Ti.UI.createWindow({ backgroundColor: 'white' });    var view = Ti.UI.createView({ layout: 'horizontal', height: 50, backgroundColor: 'gray' });  view.add(Ti.UI.createView({ left: 10, width: 40, right: 10, backgroundColor: '#ff0', height: 20 }));  view.add(Ti.UI.createView({ left: 0, width: Ti.UI.FILL, right: 10, backgroundColor: '#f00', height: 20 }));    win.add(view);  win.open();  {code}  ",Bug,None,Resolved,"2019-06-01 03:00:27","2019-06-01 03:00:27",0
"The Titanium SDK ","Android: TabGroup bar's background color is wrongly transparent on Android 4.4 as of 8.0.0","*Summary:*  As of Titanium 8.0.0, the {{TabGroup}} tab bar's background color is transparent on Android 4.4. On Android 5.0 and higher, it shows the correct background color (defaults to dark gray).    This issue happens with both the top and bottom tab bar styles.    *Steps to reproduce:*  # Set up a Classic Titanium app project with the below code.  # Build with Titanium 8.0.0 and run it on Android 4.4  # Observe the displayed tab bar.        *Result:*  The {{TabGroup}} tab bar's background color is transparent when it shouldn't be.   !TabGroup-bad.png|thumbnail!     *Expected Result:*  The tab bar should use the same background color as the {{ActionBar}}, which by default is dark gray (depending on the assigned theme).   !TabGroup-good.png|thumbnail!     *Work-around:*  Set {{TabGroup}} property tabsBackgroundColor to the color you want.  The original dark gray color is {{#FF212121}}.",Bug,Medium,Closed,"2019-05-31 18:17:47","2019-05-31 18:17:47",5
"The Titanium SDK ","iOS: Support iOS 13 and Xcode 11","This epic will track all the items required to enable support for iOS 13.",Epic,High,Resolved,"2019-05-31 00:37:08","2019-05-31 00:37:08",5
"The Titanium SDK ","iOS : No javascript trace on IOS for requiring an unavailable module","h5. Steps to reproduce:  1. In the app.js use {{require('zzzz')}}.  2. Build it for IOS device/simulator.  3. The app will throw error/exception.  4. Go to the dashboard & check if you get the crash/exception logs from ACA.    h5.Actual results:  1. We do not see any javascript trace just native Objective C:  Please refer the attached screenshot.    h5.Expected result:  1. Javascript stack trace should be shown.",Bug,High,Closed,"2019-05-15 18:03:08","2019-05-15 18:03:08",8
"The Titanium SDK ","Android: Implement async Ti.Database.DB methods","- Implement asynchronous {{Ti.Database.DB}} methods for executing SQL queries.  - Implement method for executing multiple queries in one shot. (Useful for transactions)    {code:js}  Ti.Database.DB.executeAsync(callback, query, parameters...);    Ti.Database.DB.executeAll(queries);  Ti.Database.DB.executeAllAsync(callback, queries);  {code}",Improvement,High,Closed,"2019-05-29 20:40:15","2019-05-29 20:40:15",13
"The Titanium SDK ","Android: HTTPClient responseData blob returns 0 width/height for images over 512kb","*Summary:*  When downloading an image file greater than 512 KB via {{HTTPClient}}, the resulting responseData {{Blob}} will return zero width and height. This is not an issue with smaller image files.    *Steps to reproduce:*  # Acquire an Android device that has Internet access.  # Build and run the below code on that Android device.  # Tap on the Download button.  # An alert is displayed indicating that the image blob width/height is {{0x0}}. _(This is the bug.)_  # Notice that the image blob is successfully displayed in an {{ImageView}}. Meaning this is only an issue with the width and height returned by the blob object.        *Cause:*  When the HTTP response is over 512 KB (Titanium's default max buffer size), then {{HTTPClient}} will download the response to a temp file instead of in memory. This bug happens because {{HTTPClient}} immediately wraps this temp file with a responseData blob before any bytes have been written to it (ie: the temp file is currently empty). This means that the blob will fail to fetch image info. The solution is to re-read the image file's info once {{HTTPClient}} finishes the download.    *Work-around:*  In the {{HTTPClient}} object's onload callback, you can work-around this issue by creating a new blob from the responseData blob's file. The new blob will re-read the image file's info now that it has finished downloading.    ",Bug,Low,Closed,"2019-05-28 22:30:59","2019-05-28 22:30:59",8
"The Titanium SDK ","iOS: MusicLibrary compilation error in 8.0.1.GA","A simple ios project get a compilation error with 8.0.1.GA when using Music Library:    E.g.        Gets the following error:        Note the project must be cleaned (e.g. `ti clean`) before building in order to replicate the bug.      ",Bug,Critical,Closed,"2019-05-21 10:44:57","2019-05-21 10:44:57",2
"The Titanium SDK ","Android: ProgressIndicator logs WindowLeaked exception when hiding dialog and closing window at same time as of 8.0.2","*Summary:*  As of Titanium 8.0.2, hiding a {{Ti.UI.Android.ProgressIndicator}} and closing its parent window at the same time will log a WindowLeaked exception.    This is not a crash. Nothing harmful occurs.  This is merely an unsightly exception stack trace error that occurs in the log.    *Steps to reproduce:*  # Build and run the below code on Android.  # Tap on the Show Progress Dialog button.  # Wait 2 seconds for the progress dialog and its window to close.  # Observe the log.        *Result:*  The following gets logged when the progress dialog closes.  {code}  [ERROR] WindowManager: android.view.WindowLeaked: Activity org.<USER>titanium.TiActivity has leaked window DecorView@e74eabe[TiActivity] that was originally added here  [ERROR] WindowManager:  at android.view.ViewRootImpl.<init>(ViewRootImpl.java:518)  [ERROR] WindowManager:  at android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:346)  [ERROR] WindowManager:  at android.view.WindowManagerImpl.addView(WindowManagerImpl.java:94)  [ERROR] WindowManager:  at android.app.Dialog.show(Dialog.java:329)  [ERROR] WindowManager:  at ti.modules.titanium.ui.widget.TiUIProgressIndicator.handleShow(TiUIProgressIndicator.java:236)  [ERROR] WindowManager:  at ti.modules.titanium.ui.widget.TiUIProgressIndicator.show(TiUIProgressIndicator.java:146)  [ERROR] WindowManager:  at ti.modules.titanium.ui.android.ProgressIndicatorProxy.handleShow(ProgressIndicatorProxy.java:59)  [ERROR] WindowManager:  at org.<USER>titanium.proxy.TiViewProxy.show(TiViewProxy.java:765)  [ERROR] WindowManager:  at ti.modules.titanium.ui.TiDialogProxy.access$001(TiDialogProxy.java:29)  [ERROR] WindowManager:  at ti.modules.titanium.ui.TiDialogProxy$1.onCurrentActivityReady(TiDialogProxy.java:47)  [ERROR] WindowManager:  at org.<USER>titanium.util.TiUIHelper.waitForCurrentActivity(TiUIHelper.java:195)  [ERROR] WindowManager:  at ti.modules.titanium.ui.TiDialogProxy.show(TiDialogProxy.java:42)  [ERROR] WindowManager:  at org.<USER>kroll.runtime.v8.V8Object.nativeFireEvent(Native Method)  [ERROR] WindowManager:  at org.<USER>kroll.runtime.v8.V8Object.fireEvent(V8Object.java:63)  [ERROR] WindowManager:  at org.<USER>kroll.KrollProxy.doFireEvent(KrollProxy.java:978)  [ERROR] WindowManager:  at org.<USER>kroll.KrollProxy.handleMessage(KrollProxy.java:1207)  [ERROR] WindowManager:  at org.<USER>titanium.proxy.TiViewProxy.handleMessage(TiViewProxy.java:266)  [ERROR] WindowManager:  at android.os.Handler.dispatchMessage(Handler.java:102)  [ERROR] WindowManager:  at android.os.Looper.loop(Looper.java:193)  [ERROR] WindowManager:  at android.app.ActivityThread.main(ActivityThread.java:6694)  [ERROR] WindowManager:  at java.lang.reflect.Method.invoke(Native Method)  [ERROR] WindowManager:  at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)  [ERROR] WindowManager:  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)  {code}    *Note:*  The error appears to be harmless. The exception is being caught and logged. The reason it is happening is because the dialog is being shown again in a destroyed activity window. Why the code is automatically calling its {{show()}} method again after hiding/closing is what we need to track down (this is the real bug; but our safety mechanisms are catching it).    *Comment from <USER>*  We suspect it being related to showing our [loader class|https://gist.github.com/hansemannn/20297e983e2b8c898975b600e7ab8418] that uses a {{Ti.UI.ActivityIndicator}}. This did not happen on earlier versions of the SDK.    *Work-around:*  Instead of hiding the dialog and closing its parent window back-to-back like this...  {code:javascript}  progressIndicator.hide();  childWindow.close();  {code}    Delay closing the window after hiding the dialog like this...  {code:javascript}  progressIndicator.hide();  setTimeout(function() { childWindow.close(); }, 1);  {code}",Bug,High,Closed,"2019-05-28 11:41:51","2019-05-28 11:41:51",5
"The Titanium SDK ","Android: Window open() wrongly does a shared-element fade-in animation by default as of 8.0.1","*Summary:*  As of Titanium 8.0.1, a {{Window.open()}} method call is opening with a fade-in animation instead of the system default animation (typically slides-up). What's happening is that the window is doing a shared-element animation instead, which is mostly intended to show a view moving from one window to another.    This regression was caused by [TIMOB-25678] which was intended to allow app developers to use the shared-element transition animation properties such as activityEnterTransition without having to set up any views as shared-elements via {{Window.addSharedElement()}}. This was meant to be more convenient to use than the {{Window.open()}} method's activityEnterAnimation and activityExitAnimation properties. The negative consequence of this change was that it was always defaulting to shared-element transition animations even if none of the transition properties were assigned.    *Steps to reproduce:*  # Build and run the below code on Android.  # Tap on the Open button to open a child window.        *Result:*  After pressing the Open button, it looks like the app fades to the Android system's home screen and then the app's child window fades-in.    *Expected Result:*  Child window should open with a slide-in animation instead.  ",Bug,Critical,Closed,"2019-05-25 04:16:28","2019-05-25 04:16:28",5
"The Titanium SDK ","Android: TabGroup labels not displayed anymore (SDK 8.1.0+)","On SDK 8.1.0+, our tab-group labels are not visible anymore. Reverting [this commit|https://github.com/<USER>titanium_mobile/commit/2653e9c8f2d62862f5742c61a9ff1607fd7e870b] locally fixed it for us.",Bug,Critical,Closed,"2019-05-23 16:44:00","2019-05-23 16:44:00",5
"The Titanium SDK ","iOS Debug: Error in console on variable view refresh during debug","When stepping through during debug an error is logged in console as the variable view refreshes on each step.  The error is shown only during debug on iOS with 8.1 Ti SDK.  If we close the variable window the error would not be shown.    Steps to reproduce:  1. Create a classic/alloy project  2. Add some breakpoints  3. Debug on iOS simulator  4. When the debugger suspends on a breakpoint click on Step in.    Actual Result:  An error is shown as soon as the debugger suspends for the first time. After step in the same error is shown in console again.  The error shown is:      Expected Result:  No error should be shown",Bug,Medium,Closed,"2019-05-17 22:33:44","2019-05-17 22:33:44",2
"The Titanium SDK ","iOS: Incremental builds fail to install app when using dynamic frameworks","If a framework contains .png or .plist files our build will try to optimize those. Xcode will update code signing on the first build but fails to do so on subsequent builds. Frameworks should be left untouched to avoid this issue.    *Steps to reproduce the behavior*    # Place any framework containing PNG files into {{platform/ios}} (https://github.com/cjwirth/RichEditorView for example)  # Build and run the app for device  # Repeat!    *Actual behavior*  On incremental builds the app fails to install with the following error:      *Expected behavior*  The app can be installed as usual even on subsequent builds.",Bug,High,Closed,"2019-05-22 21:17:24","2019-05-22 21:17:24",3
"The Titanium SDK ","Android: ListView's SearchBar/SearchView wrongly overlaps rows as of 8.0.1","Android searchView is broken in 8.0.1.RC    Adding an Android.searchView to a listView is positioning it underneath the first item in the list and so can not be accessed at all. (see screenshots).     !8.0.1.v20190423123234.jpg|thumbnail! Shows the expected behaviour   !8.0.1.v20190426162041.jpg|thumbnail! Shows the exact same app with a different sdk selected and the search view is hidden under the first row.    8.0.1.v20190423123234 works correctly, 8.0.1.v20190426162041 does not.    ",Bug,Critical,Closed,"2019-05-12 23:41:13","2019-05-12 23:41:13",5
"The Titanium SDK ","Android: App crashes on incremental build in SDK 8.1.0+","We recently updated to latest master and noticed that our Android app (tested inside Simulator) sometimes randomly crashes with the following error:    We have no idea how to workaround this right now.",Bug,Critical,Closed,"2019-05-19 15:51:41","2019-05-19 15:51:41",1
"The Titanium SDK ","iOS: Using a non-string value in alert() causes app to crash in SDK 8.0.0+","When using a non-string value like an object, the app crashes. This is a regression from moving to TitaniumKit and was caused by using the {{UIAlertController}} in the {{AlertCallback}} method directly instead of the {{TiUiAlertDialog}} proxy.",Bug,High,Closed,"2019-05-19 12:11:25","2019-05-19 12:11:25",3
"The Titanium SDK ","iOS: App crashes when asking for location permissions (SDK 8.1.0+)","Our app crashes when asking for location permissions on SDK 8.1.0. The feature has not changed since a while and we noticed the crash after upgrading to latest master. Error:    Some quick research shown that the issue is in the GeolocationModule.m where the callback {{authorizationCallback}} (a {{JSManagedValue}} type) seems to be deallocated already:    JS code to reproduce:  {code:js}  /* eslint-disable strict */    var win = Ti.UI.createWindow({   backgroundColor: '#fff'  });    var btn = Ti.UI.createButton({   title: 'Request location permissions'  });    btn.addEventListener('click', function () {   Ti.Geolocation.requestLocationPermissions(Ti.Geolocation.AUTHORIZATION_WHEN_IN_USE, event => {    alert(event);   });  });    win.add(btn);  win.open();  {code}  Notes:  * We do have the {{NSLocationWhenInUseUsageDescription}} and {{NSLocationAlwaysAndWhenInUseUsageDescription}} plist keys added.   * We do not use the {{UIBackgroundModes}} key {{location}} since we only request the location while using the app  ",Bug,High,Closed,"2019-05-19 11:58:27","2019-05-19 11:58:27",3
"The Titanium SDK ","Android: ShortcutItem not being updated based on id","on iOS, there is a method *removeAllDynamicShortcuts()* that allows me to remove all shortcuts and create new ones.    on Android, the only method we have is *createShortcutItem()*.  There is no update or remove of any kind.    In Ti.Slack, <USER>mentioned that, by looking at the code, he _thought_ all we needed to do was use the createShortcutItem() method again and as long as the id was the same - it would be overridden or replaced.    That is not happening and is resulting in an error, Max number of dynamic shortcuts exceeded.    We have to have a way to remove or at a minimum replace an existing shortcut.      CODE:        ERROR:  ",Bug,Critical,Closed,"2019-04-19 13:17:36","2019-04-19 13:17:36",8
"The Titanium SDK ","Android: tiapp.xml is unable to override AndroidManifest.xml settings defined in AAR or timodule.xml","*Summary:*  The tiapp.xml file's AndroidManifest.xml settings is unable to override the XML elements such as {{<activity/>}}, {{<receiver/>}}, etc. that are defined in a native module's timodule.xml or a native AAR library's embedded AndroidManifest.xml.    *Example Use-Case:*  Microsoft's authentication library (aka: MSAL) requires the app developer to override its {{com.microsoft.identity.client.BrowserTabActivity}} in the app project's AndroidManifest.xml and add an intent-filter to it. This is needed the Chrome web browser app will return the end-user back to the app that requested single-signon.  https://github.com/Azure-Samples/ms-identity-android-native    *Steps to Reproduce:*  # Create a Titanium Classic Default Project.  # Insert the android manifest XML settings below into the tiapp.xml file.  # Create the follow subfolders under the project: {{./platform/android}}  # Copy this ticket's [^msal-0.2.2.aar] file to the {{./platform/android}} folder.  # Build the app for Android.  # Go to the project's {{./build/android}} directory via Finder/WindowsExplorer.  # Open the AndroidManifest.xml file.  # Notice that the {{<intent-filter/>}} shown below was not injected into the AndroidManifest.xml file. _(This is the bug.)_        *Recommended Fix:*  We should change the {{finalAndroidManifest}} merge order in the SDK's _build.js script [here|https://github.com/<USER>titanium_mobile/blob/2a16df7481b0a3331d2f56365463f0a9a8031d09/android/cli/commands/_build.js#L3909]. The order should be:  # {{this.androidLibraries.forEach(/* finalAndroidManifest.merge(am) */)}}  # {{this.modules.forEach(/* finalAndroidManifest.merge(am) */)}}  # {{finalAndroidManifest.merge(customAndroidManifest)}}  # {{finalAndroidManifest.merge(tiappAndroidManifest)}}    ----  *Work-Around:*  Delete the XML setting that you want to override from the timodule.xml file or AAR file. Note that you can unzip an AAR file, change its embedded AndroidMainfest.xml file, and then re-zip it. Changing the AAR library's extension from .aar to .zip is an easy way to unzip it.",Bug,Low,Closed,"2019-05-17 03:53:11","2019-05-17 03:53:11",3
"The Titanium SDK ","[Android] Continues functions after Ti.App._restart()","Build this app onto an android device. Connect a bluetooth keyboard. Open the app. Press the blue button a few times. Disconnect the scanner while the app is counting. The app resets and picks back up where it left off.    This is a problem because if I am running sql queries while the app resets it can continue to run the backbone functions without variables/Globals defined yet resulting in red screens.    I am restarting the app. Why are variables still defined? Why are functions still running?    In this app some variables are keeping their values, but in a larger scale app not all variables are redefined on Resume.    I have added a testString variable that is defined initially as 'not Clicked', but redefined as 'clicked' once the runQueries function runs. You can see this in the second set of logs. If you press Clear after a reset it outputs 'not Clicked' and if you press it before the restart it says 'clicked'.    This makes it very difficult when using an app that has bluetooth devices connected since it is impossible to know which variables will be defined correctly after a bluetooth reset. Now if you could fix the app from restarting when a bluetooth scanner is connected that would be great, but I think that's just an android problem.    Log:        another:        ",Bug,Critical,Closed,"2018-09-21 19:42:43","2018-09-21 19:42:43",5
"The Titanium SDK ","iOS: Modules using TiBlob and built before SDK 8.1 causing app crash","Not much more to say. Reproducible using common modules like [Ti.AWS|https://github.com/hansemannn/titanium-aws/blob/master/ios/Classes/TiAwsMachineIoTDataManagerProxy.m#L125-L127] or the official [Ti.Map|https://github.com/<USER>modules/ti.map/blob/master/ios/Classes/TiMapSnapshotterProxy.m#L94].",Bug,High,Closed,"2019-05-15 19:41:52","2019-05-15 19:41:52",2
"The Titanium SDK ","iOS: Memory leak and deadlock in SDK 8+","This is the follow-up ticket of TIMOB-27053. That ticket fixed some critical issues in regards to JSCore crashes, but now we still see *a lot* (on older iPhones every time) dead locks that cause the app to freeze and crash later. The worst thing is that those logs also do not show up on Crashlytics, so cannot know exactly where it crashes, although I assume it is JSCore as well.    Notable is that before every crash, it shows the following warning:      As discussed with [~<USER>, this is likely the reason why it crashes - a deadlock in firing the event. Unfortunately he was not able to provide a workaround or fix to test so far, so we are escalating this ticket now.",Bug,Critical,Closed,"2019-05-14 13:43:43","2019-05-14 13:43:43",5
"The Titanium SDK ","Android: Rewrite Ti.UI.TableView to use RecyclerView","*Summary:*  Titanium's [Ti.UI.TableView|https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TableView] is currently implemented on Android via the Java [ListView|https://developer.android.com/reference/android/widget/ListView] class. We should re-implement Titanium's {{TableView}} to use Android's [RecyclerView|https://developer.android.com/reference/androidx/recyclerview/widget/RecyclerView.html] instead.    *Reason:*  Google's {{RecyclerView}} offers the following features we would like to add for parity with iOS:  * Swipe Actions for rows.  * Drag-and-drop rows.    The above can be done via Google's [ItemTouchHelper|https://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper] Java class in combination with their {{RecyclerView}}.    *Note 1:*  In Android Studio's UI designer, Google's {{ListView}} is listed under the Legacy widgets tab. Google isn't deprecating {{ListView}}, but they're clearly favoring {{RecyclerView}} over it.    *Note 2:*  In the future, we should rewrite Titanium's {{Ti.UI.ListView}} to use Google's {{RecyclerView}} as well, but it's better to test-the-waters with the much simpler {{Ti.UI.TableView}} first.  ",Improvement,Medium,"In Progress","2019-05-13 17:50:20","2019-05-13 17:50:20",21
"The Titanium SDK ","Android: Cannot change TabGroup tab icon or title after creation","Setting a new icon on a tab does not update the icon. Works in 7.5.x. Icon renders properly on creation or add of a tab, but you cannot change/update it.    $.tab.icon = 'image.png'; ",Bug,High,Closed,"2019-05-09 20:24:05","2019-05-09 20:24:05",5
"The Titanium SDK ","IOS: Rebuilding the app with simulator fails with due to log port being occupied","h5. Steps to reproduce:  1. Create a default app.  2. Build for IOS simulator.  3. After app launch, rebuild the app for the same simulator, without quitting the current simulator.    h5.Actual results:  1. The build fails with :    2. Works fine after quitting the emulator & then rebuilding.    h5.Expected result:  1. The build should not fail.  ",Bug,None,Closed,"2019-05-09 23:43:14","2019-05-09 23:43:14",8
"The Titanium SDK ","Android: Add canStartActivity() method to Ti.Android.Activity","*The Issue:*  Currently, Titanium does not have an API to detect if there are any registered activities that can be started for a given intent. An app developer's only option is to call Titanium's [startActivity()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Android.Activity-method-startActivity] method and see if it throws an exception or not. This is an issue for apps that need to detect this in advance without launching an activity.    *Solution:*  Add a new {{canStartActivity(Intent)}} method to {{Ti.Android.Activity}} which will return {{true}} if at least 1 activity was found for the given intent.    Internally, this should call Google's [PackageManager.resolveActivity()|https://developer.android.com/reference/android/content/pm/PackageManager.html#resolveActivity(android.content.Intent,%20int)] method, where if it returns a non-null reference, then we know an activity exists for the given intent. Alternatively, we could call Google's [PackageManager.queryIntentActivities()|https://developer.android.com/reference/android/content/pm/PackageManager.html#queryIntentActivities(android.content.Intent,%20int)] method which returns a list of activities matching the given intent, where we could check if at least 1 activity was returned.    *Use-Case:*  Can be used to detect if there is a 3rd party app installed for viewing a file, such as PDF. If {{canStartActivity()}} returns {{false}}, then you can alert the end-user that viewer app needs to be installed.    *Note:*  While it would be more powerful to provide a {{queryIntentActivities()}} method in Titanium, the vast majority of app developers simply want to know if at least 1 activity exists. So, it's better to keep it simple for now. The only good use-case I've heard where you want to scrutinize the activity list is when you want to exclude an activity from a particular app that has known issues.","New Feature",Medium,Open,"2019-05-08 18:34:38","2019-05-08 18:34:38",3
"The Titanium SDK ","Windows: Layout does not match with view size property","Following code reports {{height=200}} (which is right) but the {{viewChild}} red view does not display {{200}} height actually. It looks to have {{100}} height.        Expected: {{viewChild}} should display {{200}} height.    Same thing happens on {{width}} property.        Expected: {{viewChild}} should display {{200}} width.  ",Bug,Medium,Closed,"2019-05-08 02:15:48","2019-05-08 02:15:48",8
"The Titanium SDK ","Android: UI sometimes disappears on Android 9.0 and higher when battery saver turns on/off","*Summary:*  On Android 9.0 and higher, a Titanium window's UI may disappear when the system's battery optimizer turn on or off. This can happen if the XML activities defined in the tiapp.xml are missing android:configChanges value uiMode.    This issue can be reproduced consistently in an Android 9 (API 28) emulator.    *Steps to reproduce:*  # Create a new Titanium Classic Default Project.  # Build and run on an Android 9 (aka: API 28) emulator.  # In the Android emulator's toolbar, click the ... button.  # An Extended Controls window will open next to the emulator.  # Click on the Battery tab in this window.  # Go to the Charge level and lower it to 10%.  # Click the Charge connection drop-down and change it from AC charger to None (or vice-versa).  # In the emulator, if it asks if you want to enable the battery optimizer, tap Yes.  # Notice that the Titanium app's UI disappears.  # Press the Android Back button.  # Relaunch the app. (The UI will appear as normal.)  # Click the emulator's Charge connection drop-down and change it back to AC charger.  # Notice that the Titanium app's UI disappears again.    *Cause:*  The AndroidManifest.xml that is being generated by Titanium's build system is missing a setting. We need to add uiMode to every Titanium {{<activity/>}} elements android:configChanges attribute.    *Work-Around:*  You can work-around this issue by adding the following activity XML settings to the tiapp.xml file. The key thing here is to add all of the missing configChanges values. Particularly the uiMode value which solves this ticket's specific issue.    ",Bug,High,Closed,"2019-05-07 21:53:34","2019-05-07 21:53:34",3
"The Titanium SDK ","iOS: Unable to load image on imaveView from nativePath on physical device","Hello,    We are unable to load image on imaveView from nativePath on physical device but it's showing the image on lower version of SDK (7.5.2.GA) and Simulator (with latest version of SDK).    *Test code:*      *Test Results on device:*      *Test Environment:*  <USER>Command-Line Interface, version 7.0.10  Operating System    Name                        = Mac OS X    Version                     = 10.14.4    Architecture                = 64bit    # CPUs                      = 4    Memory                      = 8589934592  Node.js    Node.js Version             = 8.9.1    npm Version                 = 5.5.1  Titanium CLI    CLI Version                 = 5.1.1  Titanium SDK    SDK Version                 = 8.0.0.GA    Note: I have tried it with WKWebView for 8.0.0.GA but got the same results.    Thanks",Bug,None,Resolved,"2019-05-07 16:34:02","2019-05-07 16:34:02",5
"The Titanium SDK ","iOS: WebView HTML JS code can no longer access Titanium. API (but Ti. exists) as of 8.0.0","*Summary:*  The {{Titanium}} object is undefined within a {{WebView}}'s HTML {{<script/>}} as of 8.0.0.  Only the {{Ti}} object is defined.    *Steps to reproduce:*  # Set up a Classic Titanium app.js with the below code.  # Build and run on iOS with Titanium 8.0.0 or 8.0.1.  # Observe the log.        *Expected Result:*  The following should be logged. (You'll get the below with a 7.5.1 built app.)      *Actual Result:*  Only the 1st message gets logged in Titanium 8.0.0 or 8.0.1 because the script errors out when using the {{Titanium}} object. _(This is the bug.)_      *Recommended Solution:*  Add a {{var Titanium = Ti;}} to the code that gets injected into the WKWebView here...  [TiUIWebView.m|https://github.com/<USER>titanium_mobile/blob/3d1569dededb35387b197a71317ffa3e7fb42ea8/iphone/Classes/TiUIWebView.m#L390]    *Work-Around:*  Use the {{Ti}} object instead of the {{Titanium}} object within the HTML's script.",Bug,None,Closed,"2019-05-02 18:36:04","2019-05-02 18:36:04",2
"The Titanium SDK ","iOS: Ti.API.log() function no longer works within WebView's HTML JS code as of 8.0.0","*Summary:*  The [Ti.API.log()|https://docs.<USER>com/platform/latest/#!/api/Titanium.API-method-log] function no longer works within a {{WebView}}'s HTML {{<script/>}} code as of Titanium 8.0.0.    *Steps to reproduce:*  # Set up a Classic Titanium app.js with the below code.  # Build and run on iOS with Titanium 8.0.0 or 8.0.1.  # Notice that *none* of the below messages get logged.  # Build and run with Titanium 7.x.x.  # Notice that the below message do get logged.        *Work-Around:*  Use the following instead. They work in 8.0.x and older versions.    ",Bug,None,Closed,"2019-05-02 17:40:59","2019-05-02 17:40:59",2
"The Titanium SDK ","iOS: Version of SDKs default modules are not up to date","Default modules, which are shipped with sdk, do not have updated module versions.  e.g  1.  urlSession - latest version is 2.2.0 but sdk has 2.1.0  2.  ti.map - latest version is 3.1.2 but sdk has 3.1.0  3.  ti.safaridialog - latest version is 3.1.0 but sdk has 1.1.1  4.  ti.identity - latest version is 1.0.6 but sdk has 1.0.5  We need to update [module.json|https://github.com/<USER>titanium_mobile/blob/master/support/module/packaged/modules.json]",Improvement,Medium,Closed,"2019-04-30 22:08:06","2019-04-30 22:08:06",2
"The Titanium SDK ","Pass along ENV variables to process.env on development builds","Currently we have an empty <USER>env object for Node API compatibility. We should consider passing along the current ENV variables to be used in some internal JSON file, similarly to how Ti.App.Properties are inserted. To protect apps, this should likely only be done in development builds, and we could consider suggesting using of https://github.com/motdotla/dotenv to developers who want to pass along/set ENV vars in production builds of the app (or maybe hook in some babel plugin that works in conjunction with dotenv to inline values? Not really sure any sensitive data should be in the app's contents at all though...)",Improvement,High,Closed,"2019-04-30 13:43:56","2019-04-30 13:43:56",8
"The Titanium SDK ","Cache JS processing between builds","The build times for apps was already increased in TIMOB-26917 by processing JS files in parallel. However, we still <USER>JS on every build, ignoring wether they were changed or not.    Further improvements to the build time could be achieved by using the file change detection from [appc-tasks|https://github.com/<USER>appc-tasks]. This would only <USER>the JS files that actually changed and avoid unnecessary transpilation and analyzation steps on every build.",Improvement,Medium,Closed,"2019-04-30 08:52:17","2019-04-30 08:52:17",13
"The Titanium SDK ","Android: Update ti.playservices to 16.1.3","- Update {{ti.playservices}} module to {{16.1.3}}",Improvement,Medium,Closed,"2019-04-29 23:58:04","2019-04-29 23:58:04",3
"The Titanium SDK ","iOS: Mocha test Titanium.UI.TextField width test failure","Titanium.UI.TextField width please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,Low,Resolved,"2019-04-26 17:49:08","2019-04-26 17:49:08",3
"The Titanium SDK ","Android: Mocha test Titanium.UI.TextField width test failure","Titanium.UI.TextField width please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,Low,Resolved,"2019-04-26 17:24:39","2019-04-26 17:24:39",3
"The Titanium SDK ","Android: Window/TabGroup close() method call is ignored until open event has been fired","*Summary:*  On Android, a {{Ti.UI.Window}} or {{Ti.UI.TabGroup}} object's {{close()}} method call is ignored if it hasn't finished opening yet. The {{Window}} or {{TabGroup}} will remain open and not automatically close itself.    This means the following won't close the window. The window will remain open.      *Steps to reproduce:*  # Build and run the below code on Android.  # Tap on the Open/Close Window button.  # Notice a red window is displayed. (This is a bug. The {{close()}} method was ignored.)  # Press the Android Back button.  # Tap on the Open/Close TabGroup button.  # Notice a red tab group is displayed. (This is a bug. The {{close()}} method was ignored.)        *Note:*  For {{TabGroup}}, calling the {{close()}} method will crash if the app was built with Titanium 7.x.x or older versions. In Titanium 8.0.0, it does not crash and the method call is ignored.    *Expected Result:*  The {{close()}} method call should be respected, eve before the window has finished opening. This is how it works on iOS. The only time {{close()}} should be ignored is if the window has never been opened or has already been closed.    *Work-around:*  Don't call the {{close()}} method until the open event has been fired.  ",Bug,None,Closed,"2019-04-26 00:38:24","2019-04-26 00:38:24",5
"The Titanium SDK ","Windows: Setup Jenkins Build with Visual Studio 2019","In order to run unit tests for Visual Studio 2019 support (TIMOB-26924), Jenkins should be building Titanium with Visual Studio 2019.","New Feature",High,Open,"2019-04-25 01:17:53","2019-04-25 01:17:53",13
"The Titanium SDK ","Android: WebView sometimes crashes on window close after zooming content","*Summary:*  Android's {{WebView}} will sometimes crash when closing its parent window after zooming its web content.    *Result:*  The following stack trace happens when it crashes.      *Note:*  This issue is difficult to reproduce, but it sometimes occurs with our mocha unit tests here...  https://github.com/<USER>titanium-mobile-mocha-suite/blob/master/Resources/ti.ui.webview.test.js    This issue has been mentioned on Slack here...  https://ti-slack.slack.com/archives/C03CVLS0U/p1547721498070400  ",Bug,None,Closed,"2019-04-24 21:43:57","2019-04-24 21:43:57",3
"The Titanium SDK ","Android: HTTPClient may use SSLv3 by default on Android 4.x when it shouldn't","*Summary:*  Titanium's {{HTTPClient}} is internally coded to always disable the SSLv3 protocol and only support TLS 1.0 and higher protocols for https:// communications. This is because SSLv3 is no longer considered secure as of 2014.  https://blog.mozilla.org/security/2014/10/14/the-poodle-attack-and-the-end-of-ssl-3-0/    Unfortunately, there is a bug on Google's end where Android 4.4 and older OS versions will ignore our TLS settings in Java and default to the SSLv3 protocol instead. This can cause communication errors since modern web servers typically respond to SSLv3 requests with an error since this protocol is not considered secure.    The Android bug report can be found here...  https://issuetracker.google.com/issues/37008635    *Steps to reproduce:*  # Acquire an Android 4.4 device.  # Make sure the device has Internet access.  # Build and run with the below code.  # Tap on the HTTP Get button.  # Notice an SSLProtocolException error is displayed on screen.  # Run the app on Android 5.0 or newer device.  # After tapping on HTTP Get, notice that a valid HTTP response is displayed onscreen.        *Result:*  The following SSLv3 error gets logged when running on Android 5.1 and older OS versions.  {code}  [ERROR] :  TiHTTPClient: (TiHttpClient-1) [8913,9013] HTTP Error (javax.net.ssl.SSLHandshakeException): javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0x76d92718: Failure in SSL library, usually a protocol error  [ERROR] :  TiHTTPClient: error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x733bdd74:0x00000000)  [ERROR] :  TiHTTPClient: javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0x76d92718: Failure in SSL library, usually a protocol error  [ERROR] :  TiHTTPClient: error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x733bdd74:0x00000000)  [ERROR] :  TiHTTPClient:  at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:448)  [ERROR] :  TiHTTPClient:  at com.android.okhttp.Connection.upgradeToTls(Connection.java:146)  [ERROR] :  TiHTTPClient:  at com.android.okhttp.Connection.connect(Connection.java:107)  [ERROR] :  TiHTTPClient:  at com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:294)  [ERROR] :  TiHTTPClient:  at com.android.okhttp.internal.http.HttpEngine.sendSocketRequest(HttpEngine.java:255)  [ERROR] :  TiHTTPClient:  at com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:206)  [ERROR] :  TiHTTPClient:  at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:345)  [ERROR] :  TiHTTPClient:  at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:296)  [ERROR] :  TiHTTPClient:  at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:503)  [ERROR] :  TiHTTPClient:  at com.android.okhttp.internal.http.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:136)  [ERROR] :  TiHTTPClient:  at ti.modules.titanium.network.TiHTTPClient$ClientRunnable.run(TiHTTPClient.java:1319)  [ERROR] :  TiHTTPClient:  at java.lang.Thread.run(Thread.java:841)  [ERROR] :  TiHTTPClient: Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0x76d92718: Failure in SSL library, usually a protocol error  [ERROR] :  TiHTTPClient: error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x733bdd74:0x00000000)  [ERROR] :  TiHTTPClient:  at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)  [ERROR] :  TiHTTPClient:  at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:405)  {code}    *Work-around:*  Simplest solution is to change the app's min supported Android version to 5.0 (aka: API Level 21). This can be done by adding the following to the tiapp.xml file.  {code:xml}  <?xml version=1.0 encoding=UTF-8?>  <ti:app xmlns:ti=http://ti.<USER>org>   <android xmlns:android=http://schemas.android.com/apk/res/android>    <manifest>     <uses-sdk android:minSdkVersion=21/>    </manifest>   </android>  </ti:app>  {code}    Alternatively, this can be worked-around server side by allowing the SSLv3 protocol, but this is not advised since this protocol is not considered secure.    Unfortunately, setting the {{HTTPClient}} tlsVersion property will not work since Android 4.4 and older OS versions may ignore this setting and use SSLv3 instead, which is the bug on Google's end that this ticket is about.",Bug,None,Closed,"2019-04-24 00:46:45","2019-04-24 00:46:45",13
"The Titanium SDK ","Android: TableView having SearchBar/SearchView will crash upon resume while Don't keep activities is enabled as of 7.2.1","*Summary:*  If Android Developer Options setting Don't keep activities is enabled, then a {{TableView}} having a {{SearchBar}} or {{SearchView}} assigned to its search property will cause the app to crash after homing-out of the app and then resuming it.    This regression was introduced as of 7.2.1.    {{ListView}} does not have this problem. This is only a regression with {{TableView}}.    *Steps to reproduce:*  # Go to the Android device's main Settings screen.  # Tap on System under Settings.  # Tap on Developer options under System settings.  # Enable Don't keep activities, which should be near the bottom of the list.  # Build and run the below code on the above Android device.  # Wait for the app to launch.  # Tap on the Android Home button.  # Resume the app.  # Notice that the app crashes upon resume.        *Result:*    ",Bug,None,Closed,"2019-04-20 02:10:02","2019-04-20 02:10:02",7
"The Titanium SDK ","iOS: Code is evaluated incorrectly, causing hard crashes","We are receiving some very rare hard crashes that are identified by incorrect proxies being passed to functions. This is really really critical since Titanium for example tries to add a list-view-section to a tabgroup via  {{tabGroup.tabs =  xxxx}} instead of the actual array of tabs. Here is the error:  {code:js}  [ERROR] Unhandled promise rejection {  [ERROR]     column = 86;  [ERROR]     line = 73;  [ERROR]     message = Invalid type passed to function;  [ERROR]     nativeLocation = -[TiUITabGroupProxy setTabs:] (TiUITabGroupProxy.m:117);  [ERROR]     nativeReason = expected: TiUITabProxy, was: TiUIListSectionProxy;  [ERROR]     nativeStack = 3   MyApp0x000000010963bd21 -[TiUITabGroupProxy setTabs:] + 1297\n4   Foundation 0x00000001111b7562 -[NSObject(NSKeyValueCoding) setValue:forKey:] + 289\n5   TitaniumKit0x000000011303085f -[TiProxy setValuesForKeysWithDictionary:] + 1558\n6   TitaniumKit0x000000011301083d -[TiViewProxy _initWithProperties:] + 1338\n7   MyApp0x000000010963aee4 -[TiUITabGroupProxy _initWithProperties:] + 260\n8   TitaniumKit0x000000011302e118 -[TiProxy _initWithPageContext:args:] + 335\n9   TitaniumKit0x0000000112fda375 -[TiModule createProxy:forName:context:] + 409\n10  CoreFoundation  0x0000000113ea94cc __invoking___ + 140\n11  CoreFoundation  0x0000000113ea6a45 -[NSInvocation invoke] + 325\n12  TitaniumKit0x000000011302c835 -[KrollMethod call:] + 606\n13  TitaniumKit0x000000011302bc88 __KrollCallAsFunction_block_invoke + 30\n14  TitaniumKit0x000000011302ba94 KrollCallAsFunction + 496\n15  JavaScriptCore  0x000000010ad6f8d3 _ZN3JSC16JSCallbackObjectINS_20JSDestructibleObjectEE4callEPNS_9ExecStateE + 515\n16  JavaScriptCore  0x000000010b2154fc _ZN3JSC5LLInt9setUpCallEPNS_9ExecStateENS_22CodeSpecializationKindENS_7JSValueEPNS_17LLIntCallLinkInfoE + 380\n17  JavaScriptCore  0x000000010ad3ab63 llint_entry + 61648\n18  JavaScriptCore  0x000000010ad3b28d llint_entry + 63482\n19  JavaScriptCore  0x000000010ad3ab71 llint_entry + 61662;  [ERROR]     sourceURL = file:///Users/<USER>Library/Developer/CoreSimulator/Devices/DF26791D-8718-4925-B10A-A5790E017287/data/Containers/Bundle/Application/04C25071-87A3-4B4C-B66C-ABB7DC337252/MyApp.app/alloy/controllers/container.js;  [ERROR]     stack =     at [native code]\n    at Controller(/alloy/controllers/container.js:73:86)\n    at createController(/alloy.js:339:53)\n    at openProtectedArea(/alloy/controllers/auth/login.js:350:51)\n    at onLogin(/alloy/controllers/auth/login.js:340:22)\n    at (/alloy/controllers/auth/login.js:254:16)\n    at _callee3$(/login-manager.js:240:33)\n    at tryCatch(/ti.main.js:3994:23)\n    at invoke(/ti.main.js:4221:32)\n    at asyncGeneratorStep(/login-manager.js:3:250)\n    at _next(/login-manager.js:3:606)\n    at run(/ti.main.js:1662:29)\n    at (/ti.main.js:1683:10)\n    at flush(/ti.main.js:1487:11)\n    at promiseReactionJob@[native code]);  [ERROR]     toJSON = <KrollCallback: 0x600003cc49c0>;  [ERROR] }  {code}    Obviously, we are not passing a {{Ti.UI.ListSection}} to the {{Ti.UI.TabGroup}}. Titanium seems to  evaluate proxies incorrectly. Since this can affect every part of our app and likely cause security issues as well, we expect immediate validation on this.",Bug,None,Open,"2019-04-19 09:03:21","2019-04-19 09:03:21",13
"The Titanium SDK ","iOS: ACA module is crashing with iOS 12 and later","Hello,  Just added the following line of code against a button click. When I clicked on, the app suddenly closed. We have attached the crash log on the attachment file.      *Tested this issue on with this environment:*  Ti SDK 8.0.0.GA  ACA v1.0.3  iOS device: iPhone 5s (12.2)    Please let us know if you need any more information.    Thanks",Bug,None,Closed,"2019-04-17 18:48:53","2019-04-17 18:48:53",8
"The Titanium SDK ","iOS: Native modules are not protected","- Native modules are not protected from deallocation by JavascriptCore. This means cached modules can have their proxies released.",Bug,None,Closed,"2019-04-16 00:51:39","2019-04-16 00:51:39",8
"The Titanium SDK ","iOS: Module builds broken","Some of the iOS native module build are completely broken with SDK 8.0.0. {{<USER>encrytpeddatabase}} is one that breaks due to the removal of some headers in the packaged SDK's {{iphone/include}} folder.    The necessary headers are included in {{iphone/Classes}}, but used to have duplicates in {{iphone/include}}. we should have redirecting headers placed there.    Additionally, a good deal of the core code moved into the TitaniumKit framework and this headers are inside the framework. We need redirecting headers for those.    Lastly, we should consider some mechanism to automatically include the TitaniumKit framework into the module build. Otherwise module authors have to modify the {{titanium.xcconfig}} to add:  ",Bug,Critical,Closed,"2019-04-11 18:00:40","2019-04-11 18:00:40",5
"The Titanium SDK ","Android: module clean command deletes too much of libs folder","Our module clean command for Android is too aggressive with the {{libs}} directory, wiping it entirely. For most modules this is fine, but if a module has a pre-built static library inside, we'll blow it away. {{<USER>encrypteddatabase}} is one such module.",Bug,High,Closed,"2019-04-11 15:52:48","2019-04-11 15:52:48",5
"The Titanium SDK ","Windows: Save callback instances to stablize tests on Jenkins","Save object instance at callbacks around networking (e.g. {{Ti.Network}}/{{Ti.UI.WebView}}) to stablize Jenkins tests.",Story,None,Closed,"2019-04-11 03:45:34","2019-04-11 03:45:34",5
"The Titanium SDK ","Android: Showing/hiding dialog while window is being destroyed by Don't keep activities sometimes crashes","*Summary:*  Showing or hiding a dialog (alert or progress indicator) from an activity window that is in the middle of being destroy, but not finished, will sometimes cause the following crashes.    Note that an Android activity can be flagged as destroyed, but not finished, if the Android OS destroys it due to low memory or if system developer option Don't keep activities is enabled. When this happens, the Android OS intends to restore the activity when the end-user navigates back to it.    ----  *Steps to reproduce dialog dismiss crash:*  _Unknown._    Theoretically, this should be possible by calling a dialog's {{hide()}} method via the {{Ti.UI.Window}} object's {{window.activity.onDestroy}} callback, but it doesn't crash for me.    Below is the stack trace reported by some app developers when this issue happens  {code}  java.lang.IllegalArgumentException: View=DecorView@1a43283[TiActivity] not attached to window manager  at android.view.WindowManagerGlobal.findViewLocked(WindowManagerGlobal.java:485)  at android.view.WindowManagerGlobal.removeView(WindowManagerGlobal.java:394)  at android.view.WindowManagerImpl.removeViewImmediate(WindowManagerImpl.java:124)  at android.app.Dialog.dismissDialog(Dialog.java:375)  at android.app.Dialog.dismiss(Dialog.java:358)  at ti.modules.titanium.ui.widget.TiUIProgressIndicator.handleHide(TiUIProgressIndicator.java:252)  at ti.modules.titanium.ui.widget.TiUIProgressIndicator.handleMessage(TiUIProgressIndicator.java:78)  at android.os.Handler.dispatchMessage(Handler.java:102)  at android.os.Looper.loop(Looper.java:193)  at android.app.ActivityThread.main(ActivityThread.java:6718)  at java.lang.reflect.Method.invoke(Native Method)  at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)  {code}    ----  *Steps to reproduce dialog show crash:*  # Go to the Android device's main Settings screen.  # Tap on System under Settings.  # Tap on Developer options under System settings.  # Enable Don't keep activities, which should be near the bottom of the list.  # Build and run the below code on the above Android device.  # Press the Android Home button.  # Resume the app.  # Press the Android Back button.  # Observe the Android log. You'll see one of the below exception stack traces.    app.js  {code:javascript}  var progressIndicator = Ti.UI.Android.createProgressIndicator({   message: Progressing...,   location: Ti.UI.Android.PROGRESS_INDICATOR_DIALOG,   type: Ti.UI.Android.PROGRESS_INDICATOR_INDETERMINANT,   cancelable: false,  });  var window = Ti.UI.createWindow();  window.add(Ti.UI.createLabel({ text: Press Back }));  window.activity.onDestroy = function() {   var isShowingAlert = true;   if (isShowingAlert) {    alert(Hello World!);   } else {    var progressIndicator = Ti.UI.Android.createProgressIndicator({     message: Progressing...,     location: Ti.UI.Android.PROGRESS_INDICATOR_DIALOG,     type: Ti.UI.Android.PROGRESS_INDICATOR_INDETERMINANT,     cancelable: false,    });    progressIndicator.show();   }  }  window.open();  {code}    Stack trace in 7.5.x...  {code}  [ERROR] TiExceptionHandler: (main) [611,6711] Attempt to invoke virtual method 'java.lang.Object org.<USER>kroll.KrollObject.callProperty(java.lang.String, java.lang.Object[])' on a null object reference  [ERROR] TiExceptionHandler:  [ERROR] TiExceptionHandler:     org.<USER>kroll.KrollProxy.handleMessage(KrollProxy.java:1210)  [ERROR] TiExceptionHandler:     org.<USER>titanium.proxy.ActivityProxy.handleMessage(ActivityProxy.java:394)  [ERROR] TiExceptionHandler:     android.os.Handler.dispatchMessage(Handler.java:102)  [ERROR] TiExceptionHandler:     android.os.Looper.loop(Looper.java:193)  [ERROR] TiExceptionHandler:     android.app.ActivityThread.main(ActivityThread.java:6669)  [ERROR] TiExceptionHandler:     java.lang.reflect.Method.invoke(Native Method)  [ERROR] TiExceptionHandler:     com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)  [ERROR] TiExceptionHandler:     com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)  [ERROR] TiExceptionHandler: (main) [34,6745] Unable to add window -- token android.os.BinderProxy@b66e705 is not valid; is your activity running?  [ERROR] TiExceptionHandler:  [ERROR] TiExceptionHandler:     android.view.ViewRootImpl.setView(ViewRootImpl.java:798)  [ERROR] TiExceptionHandler:     android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:356)  [ERROR] TiExceptionHandler:     android.view.WindowManagerImpl.addView(WindowManagerImpl.java:93)  [ERROR] TiExceptionHandler:     android.app.Dialog.show(Dialog.java:329)  [ERROR] TiExceptionHandler:     org.<USER>titanium.TiExceptionHandler.createDialog(TiExceptionHandler.java:233)  [ERROR] TiExceptionHandler:     org.<USER>titanium.TiExceptionHandler$1.onCurrentActivityReady(TiExceptionHandler.java:171)  [ERROR] TiExceptionHandler:     org.<USER>titanium.util.TiUIHelper.waitForCurrentActivity(TiUIHelper.java:193)  [ERROR] TiExceptionHandler:     org.<USER>titanium.TiApplication.waitForCurrentActivity(TiApplication.java:817)  [ERROR] TiExceptionHandler:     org.<USER>titanium.TiExceptionHandler.handleOpenErrorDialog(TiExceptionHandler.java:167)  [ERROR] TiExceptionHandler:     org.<USER>titanium.TiExceptionHandler.openErrorDialog(TiExceptionHandler.java:139)  [ERROR] TiExceptionHandler:     org.<USER>titanium.TiExceptionHandler.handleException(TiExceptionHandler.java:264)  [ERROR] TiExceptionHandler:     org.<USER>kroll.KrollRuntime.dispatchException(KrollRuntime.java:540)  [ERROR] TiExceptionHandler:     org.<USER>titanium.TiApplication$1.uncaughtException(TiApplication.java:362)  [ERROR] TiExceptionHandler:     org.<USER>kroll.KrollProxy.handleMessage(KrollProxy.java:1225)  [ERROR] TiExceptionHandler:     org.<USER>titanium.proxy.ActivityProxy.handleMessage(ActivityProxy.java:394)  [ERROR] TiExceptionHandler:     android.os.Handler.dispatchMessage(Handler.java:102)  [ERROR] TiExceptionHandler:     android.os.Looper.loop(Looper.java:193)  [ERROR] TiExceptionHandler:     android.app.ActivityThread.main(ActivityThread.java:6669)  [ERROR] TiExceptionHandler:     java.lang.reflect.Method.invoke(Native Method)  [ERROR] TiExceptionHandler:     com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)  [ERROR] TiExceptionHandler:     com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)  {code}    Stack trace in 8.0.0...  {code}  [ERROR] WindowManager: android.view.WindowLeaked: Activity org.<USER>titanium.TiActivity has leaked window DecorView@89a3790[TiActivity] that was originally added here  [ERROR] WindowManager:  at android.view.ViewRootImpl.<init>(ViewRootImpl.java:511)  [ERROR] WindowManager:  at android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:346)  [ERROR] WindowManager:  at android.view.WindowManagerImpl.addView(WindowManagerImpl.java:93)  [ERROR] WindowManager:  at android.app.Dialog.show(Dialog.java:329)  [ERROR] WindowManager:  at ti.modules.titanium.ui.widget.TiUIProgressIndicator.handleShow(TiUIProgressIndicator.java:231)  [ERROR] WindowManager:  at ti.modules.titanium.ui.widget.TiUIProgressIndicator.show(TiUIProgressIndicator.java:146)  [ERROR] WindowManager:  at ti.modules.titanium.ui.android.ProgressIndicatorProxy.handleShow(ProgressIndicatorProxy.java:59)  [ERROR] WindowManager:  at org.<USER>titanium.proxy.TiViewProxy.show(TiViewProxy.java:763)  [ERROR] WindowManager:  at ti.modules.titanium.ui.TiDialogProxy.access$001(TiDialogProxy.java:29)  [ERROR] WindowManager:  at ti.modules.titanium.ui.TiDialogProxy$1.onCurrentActivityReady(TiDialogProxy.java:47)  [ERROR] WindowManager:  at org.<USER>titanium.util.TiUIHelper.waitForCurrentActivity(TiUIHelper.java:194)  [ERROR] WindowManager:  at ti.modules.titanium.ui.TiDialogProxy.show(TiDialogProxy.java:42)  [ERROR] WindowManager:  at org.<USER>kroll.runtime.v8.V8Object.nativeCallProperty(Native Method)  [ERROR] WindowManager:  at org.<USER>kroll.runtime.v8.V8Object.callProperty(V8Object.java:75)  [ERROR] WindowManager:  at org.<USER>kroll.KrollProxy.callPropertySync(KrollProxy.java:753)  [ERROR] WindowManager:  at org.<USER>titanium.TiBaseActivity.dispatchCallback(TiBaseActivity.java:1304)  [ERROR] WindowManager:  at org.<USER>titanium.TiBaseActivity.onDestroy(TiBaseActivity.java:1589)  [ERROR] WindowManager:  at org.<USER>titanium.TiActivity.onDestroy(TiActivity.java:58)  [ERROR] WindowManager:  at android.app.Activity.performDestroy(Activity.java:7395)  [ERROR] WindowManager:  at android.app.Instrumentation.callActivityOnDestroy(Instrumentation.java:1306)  [ERROR] WindowManager:  at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:4443)  [ERROR] WindowManager:  at android.app.ActivityThread.handleDestroyActivity(ActivityThread.java:4476)  [ERROR] WindowManager:  at android.app.servertransaction.DestroyActivityItem.execute(DestroyActivityItem.java:39)  [ERROR] WindowManager:  at android.app.servertransaction.TransactionExecutor.executeLifecycleState(TransactionExecutor.java:145)  [ERROR] WindowManager:  at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:70)  [ERROR] WindowManager:  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1808)  [ERROR] WindowManager:  at android.os.Handler.dispatchMessage(Handler.java:106)  [ERROR] WindowManager:  at android.os.Looper.loop(Looper.java:193)  [ERROR] WindowManager:  at android.app.ActivityThread.main(ActivityThread.java:6669)  [ERROR] WindowManager:  at java.lang.reflect.Method.invoke(Native Method)  [ERROR] WindowManager:  at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)  [ERROR] WindowManager:  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)  {code}    ----  *Solution:*  The dialog handling code will attempt to show a dialog use the top-most activity that is being shown. This activity is fetched via {{TiApplication.getCurrentActivity()}}. This method will checks the top-most activity's {{isFinishing()}} method and ignores skips them knowing that they are in the middle of being destroyed... but this code is also missing an {{isDestroyed()}} check since an activity can be destroyed but not finished for the Don't keep activities edge-case.  [TiApplication.getCurrentActivity()|https://github.com/<USER>titanium_mobile/blob/864d8f10b30b5d4fabb4d235a44e715973750c5a/android/titanium/src/java/org/<USER>titanium/TiApplication.java#L252]    Our dialog dismissing code needs to check if the hosting activity has been destroyed as well, not just finished. We should also wrap a {{dismiss()}} call with a try/catch block just in case since we don't know how to reproduce this issue (might be a bug on Google's end that we need to work-around?).  [TiUIDialog.java|https://github.com/<USER>titanium_mobile/blob/864d8f10b30b5d4fabb4d235a44e715973750c5a/android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUIDialog.java]  [TiUIProgressIndicator.java|https://github.com/<USER>titanium_mobile/blob/864d8f10b30b5d4fabb4d235a44e715973750c5a/android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUIProgressIndicator.java]  ",Bug,None,Closed,"2019-04-11 01:49:04","2019-04-11 01:49:04",13
"The Titanium SDK ","Html having links with target=_blank is not working","Html having links with target=_blank is not working from SDK 8.0.0 as we have moved to use WKWebView in TiUIWebview instead of UIWebView  The fix is provided by [~<USER> in [PR|https://github.com/<USER>modules/Ti.WKWebView/pull/26] of WKWbView module.    Test Case -            Expected Result - It should open webpage on click of 'click me'.",Bug,None,Closed,"2019-04-10 17:40:03","2019-04-10 17:40:03",2
"The Titanium SDK ","Android: LiveView does not reload app if Don't keep activities is enabled as of 8.0.0","*Summary:*  If Android Developer Options setting Don't keep activities is enabled, then JavaScripts edits made while LiveView is running won't restart the app as of Titanium 8.0.0.    *Steps to reproduce:*  # Go to the Android device's main Settings screen.  # Tap on System under Settings.  # Tap on Developer options under System settings.  # Enable Don't keep activities, which should be near the bottom of the list.  # Build and run the below code on the above Android device.  # Edit the app.js file and save your changes.  # Notice that the app does not restart. The below log message does not get logged agin.        *Cause:*  The {{TiApplication.softRestart()}} method attempts to fetch the root activity first before doing the restart. The fetched root activity will be {{null}} in this case, because the Don't keep activities option will destroy when showing a child activity. This is the edge case that is not handled.  [TiApplication.java#L741|https://github.com/<USER>titanium_mobile/blob/864d8f10b30b5d4fabb4d235a44e715973750c5a/android/titanium/src/java/org/<USER>titanium/TiApplication.java#L741]    *Work-Around:*  Disable the Don't keep activities option.  ",Bug,None,Closed,"2019-04-10 00:56:38","2019-04-10 00:56:38",7
"The Titanium SDK ","iOS: Add accessibilityIdentifier","In UI testing one way of selecting element is by Accessibility ID, e.g. in Appium:    http://appium.io/docs/en/commands/element/find-elements/index.html#selector-strategies  {quote}  *Strategy*  Accessibility ID  *Description*  Read a unique identifier for a UI element. For XCUITest it is the element's _+accessibility-id+_ attribute. For Android it is the element's _+content-desc+_ attribute.  {quote}    In Titanium SDK content description for Android views [composed from three other properties|https://github.com/<USER>titanium_mobile/blob/8_0_X/android/titanium/src/java/org/<USER>titanium/view/TiUIView.java#L2177]:  * accessibilityLabel  * accessibilityValue  * accessibilityHint    On iOS property [accessibilityIdentifier|https://developer.apple.com/documentation/uikit/uiaccessibilityidentification/1623132-accessibilityidentifier?language=objc] is not used by Ti SDK.    I suggest to compose accessibilityIdentifier value on iOS same way it is done on Android for content description.","New Feature",Critical,Closed,"2019-04-02 12:39:46","2019-04-02 12:39:46",5
"The Titanium SDK ","Windows: Codec encodeNumber/decodeNumber should throw Error on invalid setup","{{Codec.encodeNumber}} and {{decodeNumber}} should throw Exception when specific parameter is not specified. See test case fro details: https://github.com/<USER>titanium-mobile-mocha-suite/blob/master/Resources/ti.codec.test.js#L355 and https://github.com/<USER>titanium-mobile-mocha-suite/blob/master/Resources/ti.codec.test.js#L390. ",Bug,Medium,Closed,"2019-04-09 06:39:21","2019-04-09 06:39:21",5
"The Titanium SDK ","iOS: Memory leak in Ti.API.debug","h2. Description  We have tried the candidate sdk v8.1.0 and v8.0.1, however, the memory leak issue still exists. We have done a comparison between v6.3.0.GA, and candidates sdk v8.x.x, you can find the result in screenshots which indicate that the memory is not released.     It is the same issue as our previous bug report https://jira.<USER>org/browse/TIMOB-26811    h2. Sample App  https://github.com/lukeluluke/simpleApp    h2. How to reproduce   1. <USER>the project and build with sdk v8.1.0.v20190328075104  2. Use Instruments to monitor the memory usage and leaks  3. You will find the memory keep increasing , and the are memory leaks for almost each api request.   4. Rebuild the app with sdk v.6.3.0.GA.  5. Use Instruments to monitor the memory usage and leaks  6. You will see memory is freed at some time    ",Bug,Critical,Closed,"2019-04-02 03:27:13","2019-04-02 03:27:13",13
"The Titanium SDK ","Android: Back navigating from child window causes app to exit when Don't keep activities is enabled as of 7.2.1","*Summary:*  If Android Developer Options setting Don't keep activities is enabled, then tapping the Android Back button on a child window exits the app instead of back navigating to the parent window.    This regression was introduced as of 7.2.1 due to our memory leak fixes.    *Steps to reproduce:*  # Go to the Android device's main Settings screen.  # Tap on System under Settings.  # Tap on Developer options under System settings.  # Enable Don't keep activities, which should be near the bottom of the list.  # Build and run the below code on the above Android device.  # Tap on the Open Child Window button.  # Tap on the Android Back button.  # Notice the app exits instead of showing the parent window.        ",Bug,None,Closed,"2019-04-06 05:05:18","2019-04-06 05:05:18",21
"The Titanium SDK ","Android: Calling child window's close() method back to TabGroup fails if Don't keep activities is enabled","*Summary:*  If Android Developer Options setting Don't keep activities is enabled, then calling the {{close()}} method on a child window which navigates back to a {{TabGroup}} will do the following depending on the Titanium version:  * +8.0.0 and above+: Shows a blank window.  * +7.2.1 < 8.0.0+: Causes a crash.  * +7.2.0 and below+: Shows a blank window.    This is not an issue when tapping the Android Back button on the child window. It's only an issue when calling the child window's {{close()}} method.    *Note:*  As of Titanium 7.2.1, back-navigating from a child window exits out of the app when Don't keep activities is enabled. Titanium no longer restores parent windows due to the memory leak fixes made in 7.2.1. This is a separate issue.    *Steps to reproduce:*  # Go to the Android device's main Settings screen.  # Tap on System under Settings.  # Tap on Developer options under System settings.  # Enable Don't keep activities, which should be near the bottom of the list.  # Build and run the below code on the above Android device.  # Tap on the Open Child Window button.  # Tap on the Close Window button.  # Notice that the {{TabGoup}} will either be blank or the app will crash.        *Result on Titanium 7.2.0 and Below:*  {{TabGroup}} will be empty. No tabs are shown.    *Result on Titanium 8.0.0:*  {{TabGroup}} will be empty. No tabs are shown.    *Result on Titanium 7.2.1 - 7.5.1:*  The app will crash for these Titanium versions.    ",Bug,None,Closed,"2019-04-04 18:51:21","2019-04-04 18:51:21",21
"The Titanium SDK ","Windows: Save HttpClient instance until callback is fired","Currently HttpClient may be garbege-collected before its callback is fired under some circumstances if you don't save HttpClient instance from garbage collector. In that case application crashes. We might want to save HttpClient instance from garbage collection by protecting its instance until {{onerror}} or {{onload}} callback is called.    ",Story,None,Closed,"2019-04-02 02:17:12","2019-04-02 02:17:12",8
"The Titanium SDK ","Android: Update V8 runtime to 7.3.492.26","- Upgrade V8 to the latest stable version {{7.3.492.26}}  - Includes snapshot support  - Maintain backwards compatibility",Improvement,High,Closed,"2019-04-01 16:35:33","2019-04-01 16:35:33",13
"The Titanium SDK ","Android: Reading a JSON file fails on Android Q","Running the following code, returns t==null  {quote}  var file=Ti.Filesystem.getFile(Config.PathRoot.resources,'some.json');  var d=file.read();  var t=d.text;  {quote}    Analysis:  TiBlob#getText checks TiMimeTypeHelper.isBinaryMimeType(mimetype) and if the file is binary, it only allows application/octet-stream. The detected mime type comes from android.webkit.MimeTypeMap#getMimeTypeFromExtension (in TiMimeTypeHelper#getMimeTypeFromFileExtension). This used to return the octet-steam mime on *.json files, but it was probably fixed to properly return application/json.  ",Bug,Critical,Closed,"2019-03-14 14:39:17","2019-03-14 14:39:17",5
"The Titanium SDK ","Android: Verify that Ti.UI.Android.openPreferences() works on Android Q","Android Q is deprecating the android.preference library which Titanium's {{Ti.UI.Android.openPreferences()}} API uses.  https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Android-method-openPreferences  https://developer.android.com/preview/behavior-changes-all#preferences    Google's docs suggests that android.preference library is deprecated, not removed. So, we should first check that the deprecated usage still works while targeting API Level 29.    The best solution is to change Titanium to depend on the AndroidX libraries instead of the older Support libraries per [TIMOB-26472]. This is a much bigger change that effects all modules that we may want to defer to a later date.  ",Story,Medium,Closed,"2019-03-29 20:56:59","2019-03-29 20:56:59",3
"The Titanium SDK ","CLI: File provider extension capability not appropriately set","h3. Description  While creating an iOS project using the file provider extension, we found that the capability was not appearing correctly in the generated Xcode project    h3.  Steps to reproduce  1) Create an iOS project  2) Create a file provider target, add the app groups capability  3) Ensure you have the appropriate provisioning profiles  4) Build the project  5) Examine the capabilities in the generated xCode project    h3.  Result  The capability is not set correctly.",Bug,None,Closed,"2019-03-28 17:36:29","2019-03-28 17:36:29",8
"The Titanium SDK ","iOS: WebView.setHtml() fails to load inner contents with file:// URLs and relative paths if baseURL uses app:// URL as of 8.0.0","*Summary:*  As of Titanium 8.0.0, a call to {{WebView.setHtml()}} with a baseURL set to an app:// URL such as {{Ti.Filesystem.resourcesDirectory}} will fail to load HTML content such as {{<img/>}} or {{<script/>}} if they're assigned relative paths or file:// URLs.    This is *not* an issue if:  * baseURL is set to a file:// URL.  * If baseURL was never assigned in the {{setHtml()}} call.  * If the contents such as {{<img/>}} use an app:// URL instead, but this is not support on Android or Windows.    *Steps to reproduce:*  # Create a Classic Default Project Titanium app.  # Set {{<use-app-thinning/>}} to {{false}} in the tiapp.xml as shown below.  # Copy the below code to the project's app.js.  # Build and run on iOS.  # Notice that 3 of the 4 images fail to load within the {{WebView}}.    tiapp.xml  {code:xml}  <?xml version=1.0 encoding=UTF-8?>  <ti:app xmlns:ti=http://ti.<USER>org>   <use-app-thinning>false</use-app-thinning>  </ti:app>  {code}    app.js  {code:javascript}  var sourceFile = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, assets/images/tab1.png);  var targetFile = Ti.Filesystem.getFile(Ti.Filesystem.applicationDataDirectory, tab1.png);  sourceFile.copy(targetFile.nativePath);    var htmlText =    '<!DOCTYPE html>\n' +    '<html>\n' +    ' <head>\n' +    '  <meta name=viewport content=width=device-width, initial-scale=1.0>\n' +    ' </head>\n' +    ' <body>\n' +    '  <p>Resource File (Relative Path)</p>\n' +    '  <img src=assets/images/tab1.png/>\n' +    '  <br/>\n' +    '  <p>Resource File (app:// URL; iOS-only)</p>\n' +    '  <img src=app://Resources/assets/images/tab1.png/>\n' +  // <- This works.    '  <br/>\n' +    '  <p>Resource File (file:// URL)</p>\n' +    '  <img src=' + sourceFile.nativePath + '/>\n' +    '  <br/>\n' +    '  <p>App Data File (file:// URL)</p>\n' +    '  <img src=' + targetFile.nativePath + '/>\n' +    ' </body>\n' +    '</html>\n';  Ti.API.info(### htmlText:\n + htmlText);    var window = Ti.UI.createWindow();  var webView = Ti.UI.createWebView({  // html: htmlText,  // <- This works.  });  //webView.setHtml(htmlText);  // <- This works.  webView.setHtml(htmlText, { baseURL: Ti.Filesystem.resourcesDirectory });  // <- This fails!!!  //webView.setHtml(htmlText, { baseURL: Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory).nativePath });  // <- This works.  window.add(webView);  window.open();  {code}    *Work-Around:*  Set baseURL to a file:// URL instead. For example instead of doing this...  {code:javascript}  webView.setHtml(htmlText, { baseURL: Ti.Filesystem.resourcesDirectory });  {code}  ...do this instead...  {code:javascript}  webView.setHtml(htmlText, { baseURL: Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory).nativePath });  {code}    Alternatively, don't set the baseURL in the {{setHtml()}} function call. By default, the HTML's contents are relative to the Titanium app's Resources directory.  ",Bug,Low,Closed,"2019-03-27 19:25:07","2019-03-27 19:25:07",5
"The Titanium SDK ","Windows: Support Visual Studio 2019","Support Visual Studio 2019 which is expected to be released on [April 2|https://www.zdnet.com/article/microsoft-to-launch-visual-studio-2019-on-april-2/]. ",Improvement,High,Resolved,"2019-03-26 01:52:24","2019-03-26 01:52:24",13
"The Titanium SDK ","Android: Support d8 dexer.","https://developer.android.com/studio/command-line/d8  bq. d8 is a command line tool that Android Studio and the Android Gradle Plugin use to compile your project's Java bytecode into DEX bytecode that runs on Android devices, and it allows you to use Java 8 language features in your app's code.    https://android-developers.googleblog.com/2018/04/android-studio-switching-to-d8-dexer.html    {quote}Android Studio switching to D8 dexer  06 April 2018  D8 now default dex compiler{quote}    With {{d8}} support, it will be possible to use libraries written with java 8 syntax.    [Example|https://github.com/NetrisTV/ti.exoplayer/issues/9#issuecomment-460235431]    related to [AC-5688]    P.S. Also {{dx}} will be deprecated soon.",Improvement,Medium,Closed,"2019-03-18 15:26:00","2019-03-18 15:26:00",5
"The Titanium SDK ","The timeout property is not working on HTTPClient","The enterprise customer experiences the following issue:  the timeout value is not working properly for them. Meaning like, even if they are not getting response within 60000, the service call is not getting terminated. This is happening especially under low networks. The customer  said that he don't see a benefit of giving timeout in the service call. They noticed the issue mainly in Android, but issue is there in ios as well.  *Test case:*             Note:          We tested this issue on my end using the slow internet of the mobile with latest SDK 8.0.0.GA and it's working fine on this network( android 8 device). Steps that I have followed:  1. Create a new project via studio  2. Added the app.js fine on my new project  3.  Change the mobile network to slow. I have used a mobile internet which has hotspot facility.The mobile is kept to some distance  from laptop  and the other device which I use for app build.    4. Run the application and its working fine.    Test output:    ",Bug,None,Resolved,"2019-03-22 08:53:35","2019-03-22 08:53:35",3
"The Titanium SDK ","Android: An OS forced-quit app displays a blank window upon relaunch as of 8.0.0","*Summary:*  If the OS force-quits the app (such as due to low memory), then when you relaunch the app later, it'll show a blank window as of Titanium 8.0.0.    This is not an issue if the end-user force-quits the app.  This is not an issue when the app is launched via a data intent such as URL scheme or notification.    This was not an issue before Titanium 8.0.0 _(the old code would schedule an app restart)_.    *Steps to reproduce:*  # On Android, go to its Developer Options screen.  # Tap on the Background <USER>limit row. _(It's near the bottom of the list.)_  # Tap on No background processes. _(This tells the OS to force quit the last displayed app when launching another app.)_  # Create a Classic default Titanium project.  # Build and run on the same Android device configured above.  # Wait for the app to launch.  # Tap on the Android Home button.  # Launch a different app such as Gmail.  # Tap on the Android Home button.  # Resume the Titanium app.    *Result:*  When resuming/relaunching the app, a blank window is displayed.    *Expected Result:*  Since the app was forced-quit by the OS, the app should restart normally, starting with the splash screen.    *Note:*  When the Android OS force-quits the app, next time you relaunch it with the same intent, the OS will attempt to restore it back to its previous state starting with its top-most child activity. The OS will recreate the activities in reverse order, starting with the last displayed top-most child activity and ending with the root activity. The OS won't attempt to restore/recreate the parent activity until you close/finish/destroy the child activity.    The OS won't perform the above restore behavior if the end-user force-quits the app.    _(Ticket description was rewritten now that issue has been isolated.)_",Bug,Critical,Closed,"2019-03-16 14:29:35","2019-03-16 14:29:35",7
"The Titanium SDK ","Android: Improve V8 cold start performance","*Summary:*  During an app cold start, Titanium will create a V8 {{Isolate}} one time for the lifetime of the app to be used as the JavaScript runtime. The C++ function call {{v8::Isolate::New()}} is unusually slow.  [V8Runtime.cpp#L228|https://github.com/<USER>titanium_mobile/blob/master/android/runtime/v8/src/native/V8Runtime.cpp#L228]    By running adding the following code, I'm able to benchmark this function call.  {code:cpp}  #include <time.h>  uint64_t GetCurrentTimeInMilliseconds()  {   struct timespec currentTime;   clock_gettime(CLOCK_MONOTONIC, &currentTime);   uint64_t value = (uint64_t)currentTime.tv_sec * (uint64_t)1000000;   value += (uint64_t)currentTime.tv_nsec / (uint64_t)1000;   return value / (uint64_t)1000;  }    JNIEXPORT void JNICALL Java_org_appcelerator_kroll_runtime_v8_V8Runtime_nativeInit(...)  {   // ...   uint64_t currentTime = GetCurrentTimeInMilliseconds();   isolate = Isolate::New(create_params);   LOGI(TAG, ### Isolate::New() duration: %d, (int)(GetCurrentTimeInMilliseconds() - currentTime));   // ...  }  {code}    The below are benchmarks from real physical devices:  * Pixel 2 (Android 9.0; ARM64): {{750ms}}  * Nexus 4 (Android 4.4; ARM32): {{2500ms}}    The above eats about half the startup time on a simple Hello World project. It's unusually slow.    *To be investigated:*  * Supposedly, creating the {{Isolate}} with an empty snapshot created at build time should significantly improve the performance.  * We should double check that the v8 {{.a}} static library was not compiled in debug mode.  ",Improvement,None,Closed,"2019-03-18 22:17:02","2019-03-18 22:17:02",13
"The Titanium SDK ","iOS: Focussed text-field freezes parent window","Closing a window with a search being in focus, the parent window freezes. We haven't been able to provide an isolated test case, but it can be reproduced with a list-view + search-bar. I suspect the search-controller does not hide before the parent window closes and then stays in the VC stack.    I don't see any possible workaround so far, except overriding the native back button with an own one which is a no go as well.",Bug,None,Closed,"2019-03-18 20:03:06","2019-03-18 20:03:06",3
"The Titanium SDK ","iOS: Webview Cookies is not working with 8.0.0.GA","Hello,  Webview with cookies is working just fine with 7.5.1.GA but it's not working with 8.0.0.GA.    *Testing Environment:*  <USER>Command-Line Interface, version 7.0.10  Operating System    Name                        = Mac OS X    Version                     = 10.14    Architecture                = 64bit    # CPUs                      = 4    Memory                      = 8589934592  Node.js    Node.js Version             = 8.9.1    npm Version                 = 5.5.1  Titanium CLI    CLI Version                 = 5.1.1  Titanium SDK    SDK Version                 = 8.0.0.GA, 7.5.1.GA    *Test Code One:*      *Test Code Two(ti.wkwebview):*      *Steps to reproduce the issue:*  1. Just add the app.js file on your project  2. Run using the 7.5.1.GA and  the webview is added to the controller it will print out the cookie (testCookie=works).  3. If you run the exact same code with 8.0.0.GA when the webview loads it will alert an empty value. This shows the 8.0.0 does not read the cookie value.    Note: The only difference between 7.5.1 and 8.0.0 is that 8.0.0 now uses WKWebview instead of UIWebview.  ",Bug,None,Closed,"2019-03-16 09:37:24","2019-03-16 09:37:24",5
"The Titanium SDK ","Android: Launcher icon uses Titanium's default icon instead of appicon.png as of 8.0.0","With this single change, the appicon.png is no longer applied to the android launcher icon.  I don't know if iOS is affected by this.        ",Bug,Critical,Closed,"2019-03-11 16:42:58","2019-03-11 16:42:58",3
"The Titanium SDK ","Android: Build error Failed to run dexer can occur when including several libraries","With the recent update, android compilation gets stuck at the Running dexer step. This happens when I add the cloudpush module to the project.    To reproduce the error, you can simply create a blank project (alloy), add the cloudpush module for android, and try to compile the app for Android.",Bug,Critical,Closed,"2019-03-06 04:06:05","2019-03-06 04:06:05",3
"The Titanium SDK ","Android: APK signing will fail when using MD5 keystore and JDK 8 or newer","*Summary:*  Digitally signing an APK will fail when using a keystore using an MD5 encryption with JDK 8 or newer version.    *Steps to reproduce:*  # Go to a machine with JDK 8 or newer installed on it.  # Create a Classic Titanium app.  # Copy the [^testmd5.keystore] the project's root directory.  # In Appc Studio, select Package from the top-left-most dropdown box.  # In Appc Studio, select Android Play Store from the other dropdown box.  # Click the build button.  # For Keystore Location, click the Browse button and select the testmd5.keystore file.  # For Keystore Password, enter: {{testmd5}}  # For Keypair Password, enter: {{testmd5}}  # For Key Alias, enter: {{testmd5}}  # Click the Publish button.    *Result:*  Build fails with the following logged error messages.      *Cause:*  When reading the keystore file's information via the JDK keytool, the algorithm returned will be MD5withRSA (weak) with  (weak) appended to it as of JDK 8. The returned MD5withRSA (weak) string is being blindly passed to the signing tool, when we should be passing MD5withRSA instead.    *Note 1:*  Issue was raised on github below...  https://github.com/<USER>titanium_mobile/issues/10769    *Note 2:*  Newest JDK keytool versions will typically create a keystore using SHA1 or SHA256 by default. I think MD5 was the default for JDK 6.    *Note 3:*  You can create a keystore file with MD5withRSA at the command line on Mac by entering the below in the Terminal. Note that we don't recommend signing a real app with MD5. You should use SHA256 instead. The below is for testing purposes only.    ",Bug,None,Closed,"2019-03-12 03:05:27","2019-03-12 03:05:27",3
"The Titanium SDK ","iOS: Video player orientation is not changing properly in iOS 11.x","Hello,    The video player orientation is not changing properly in iOS 11.x but it's working fine for iOS 12 and above. Please have a look at the attachment videos.    *Steps to reproduce the issue:*  1.Let app orientation be in portrait and play the video(Using the below app.js file)  2. make video go in full screen  3. switch the device in landscape mode, video orientation will come in landscape mode  4. Do not change the orientation any more and tap on cross button to go back to app exiting full screen video mode  5. you will notice window/screen in portrait mode.     *Test Code:*  app.js      *Test Environment:*  <USER>Command-Line Interface, version 7.0.9  Operating System  Name = Mac OS X  Version = 10.14  Architecture = 64bit    CPUs = 4  Memory = 8589934592  Node.js  Node.js Version = 8.9.1  npm Version = 5.5.1  Titanium CLI  CLI Version = 5.1.1  Titanium SDK  SDK Version = 7.5.1.GA,7.5.0.GA  iOS simulator version: 12.1, 11.4    Thanks",Bug,None,Closed,"2019-03-11 17:17:42","2019-03-11 17:17:42",5
"The Titanium SDK ","Update Hyperloop to 4.0.2","Update the SDK's bundled Hyperloop version to 4.0.2    Required because of TIMOB-26888",Story,None,Closed,"2019-03-11 11:12:15","2019-03-11 11:12:15",3
"The Titanium SDK ","Android: Switch between TabGroup tabs 1 and 4 sometimes crashes the app as of 8.0.0","*Summary:*  As of Titanium 8.0.0, a {{TabGroup}} with 4 or more tabs can sometimes crash when switching between tab 1 and 4. This depends on the content within the tab.    This is a regression.    *Steps to reproduce:*  # Build and run the below code on Android.  # Tap on Tab 5.  # Tap on Tab 1.  # Notice the app crashes/hangs.        *Result:*      *Cause:*  This crash happens due to view ID collision as described by [TIMOB-17089] when a tab is being restored by the Android OS. Note that the view ID collision has been an issue before 8.0.0. The reason this tab selection crash regression is happening in 8.0.0 is due to the code refactoring where tabs are now implemented via a Java {{ViewPager}} whose default offscreen page limit is set to {{1}}. This means the 8.0.0 {{TabGroup}} is only keep the tab on the left and the right of the current tab in memory. All other tabs are destroyed or are not created in memory until you tap on a tab farther in the group. Previously created destroyed tabs that are later restored cause the crash shown above.    *Recommended Solution:*  Resolve the [TIMOB-17089] issue by assigned unique IDs to all views to avoid collision.  Also, we should bump up the {{ViewPager}} limit to a higher value to avoid the tab destroy/restore behavior so that they won't lose their current state.  ",Bug,Critical,Closed,"2019-03-05 12:23:44","2019-03-05 12:23:44",7
"The Titanium SDK ","Android: Cannot dynamically change TabGroup title property as of 8.0.0","At android devices when a Window has its own title in a tabGroup the title never appears.  In order for the title to appear the focus has to be lost from tabGroup and return.  If that does not happen, the title appears to be the name of the app or the title of tabGroup if that is set.      ",Bug,Critical,Closed,"2019-02-25 12:34:30","2019-02-25 12:34:30",7
"The Titanium SDK ","Windows: Update Hyperloop apiversion for 8.0.0.GA","Update Hyperloop module apiversion for Windows because there's module binary incompatibility in upcoming 8.0.0.GA. Windows Hyperloop module needs re-compiled with updated 8.0.0.",Story,High,Closed,"2019-03-08 13:01:25","2019-03-08 13:01:25",3
"The Titanium SDK ","Windows: Update module apiversion to 7","Update module apiversion because there's module binary incompatibility in upcoming 8.0.0.GA. All Windows module needs re-compiled to make it work with 8.0.0.  ",Story,High,Closed,"2019-03-08 02:08:07","2019-03-08 02:08:07",3
"The Titanium SDK ","Android: Update ti.playservices to 16.1.2","- Update bundled {{ti.playservices}} module to {{16.1.2}}",Improvement,Medium,Closed,"2019-03-07 18:32:49","2019-03-07 18:32:49",3
"The Titanium SDK ","iOS SplitWindow swipeToClose problem","When using the swipe to close functionality in iOS and releasing your finger an inch away from the edge of the screen, it makes the content of current window disappear. Seems to only be a problem when using the SplitWindow. I can reproduce the issue using the following code:      ",Bug,Critical,Closed,"2019-03-06 10:22:39","2019-03-06 10:22:39",0
"The Titanium SDK ","Windows: Update to modern CMake configuration to speed up builds","Update cmake to 3.14.0-rc1. The latest GA 3.13.4 has a bug with WinRT project references which broke app builds. This update is to enable use to further modernize our project definitions in the future, as well as hopefully improve performance (which we may need to do further tweaks to our build <USER>to have cmake drive msbuild as <USER>did here: https://github.com/<USER>HAL/pull/90/commits/e8741b3b62ab81e0ff0135f06ce51638782b046b#diff-58231b16fdee45a03a4ee3cf94a9f2c3R19    This also relates to https://github.com/<USER>titanium_mobile_windows/pull/1346. We noticed the previous attempt to update CMake configuration made the app performance 5x times slower than before. We might want to see why.    ",Story,Medium,Open,"2019-03-06 12:40:33","2019-03-06 12:40:33",13
"The Titanium SDK ","Hyperloop: iOS - Requiring Hyperloop files fails with SDK 8.0.0 RC","*Steps to reproduce the behavior*  Run the hyperloop-examples project with the latest 8.0.0 build.    *Actual behavior*  The app fails to boot with the following error:      *Expected behavior*  The app boots without error.  ",Bug,Critical,Closed,"2019-03-06 10:43:35","2019-03-06 10:43:35",1
"The Titanium SDK ","Android: Ti.Database.install() fails if destination directory does not exist","*Summary:*  As of Titanium 7.5.0, the {{Ti.Database.install()}} function will throw a {{FileNotFoundException}} on an Android 6.0 device if analytics is disabled and the database was never installed on that device before. This issue only happens if the destination directory does not exist, which seems to happen on Android 6.0 but not newer OS versions.    Note that you need to disable analytics in the tiapp.xml since it will create the databases directory before the app.js has a chance to load, which skirts the issue.    *Steps to reproduce:*  # Create a Classic Titanium app.  # Set the tiapp.xml property analytics to false as shown below.  # Copy the below code to the project's app.js file.  # Copy the [^Database1.sqlite] file to the project's Resources directory.  # Build and run on Android 6.0.  # Notice the app crashes on startup.    tiapp.xml  {code:xml}  <?xml version=1.0 encoding=UTF-8?>  <ti:app xmlns:ti=http://ti.<USER>org>   <analytics>false</analytics>  </ti:app>  {code}    app.js  {code:javascript}  var dbConnection = Ti.Database.install(Database1.sqlite, Database1);  var resultSet = dbConnection.execute(SELECT key, value FROM properties);  Ti.API.info(@@@ Database Table 'properties' row count:  + (resultSet ? resultSet.rowCount : <null>));  if (resultSet) {   for (; resultSet.isValidRow(); resultSet.next()) {    Ti.API.info(- Key: ' + resultSet.field(0) + ', Value: ' + resultSet.field(1) + ');   }  }  dbConnection.execute(INSERT OR REPLACE INTO properties(key, value) VALUES (?, ?), LastLaunchTime, new Date());  dbConnection.close();  {code}      *Recommended Solution:*  Add a {{mkdirs()}} call to create the destination directory tree (if missing) to our {{DatabaseModule.java}} class' install() method below.  [DatabaseModule.java#L85|https://github.com/<USER>titanium_mobile/blob/master/android/modules/database/src/java/ti/modules/titanium/database/DatabaseModule.java#L85]    \\  ----  {code:java}  var db = Ti.Database.install('/src/countries.sqlite', 'countries');  {code}    {code:java}  [ERROR] :  TiDatabase: (main) [1023,1023] Error installing database: countries msg=/data/user/0/com.test.a/databases/countries: open failed: ENOENT (No such file or directory)  [ERROR] :  TiDatabase: java.io.FileNotFoundException: /data/user/0/com.test.a/databases/countries: open failed: ENOENT (No such file or directory)  [ERROR] :  TiDatabase:  at libcore.io.IoBridge.open(IoBridge.java:497)  [ERROR] :  TiDatabase:  at java.io.FileOutputStream.<init>(FileOutputStream.java:87)  [ERROR] :  TiDatabase:  at java.io.FileOutputStream.<init>(FileOutputStream.java:72)  [ERROR] :  TiDatabase:  at ti.modules.titanium.database.DatabaseModule.install(DatabaseModule.java:124)  [ERROR] :  TiDatabase:  at org.<USER>kroll.runtime.v8.V8Runtime.nativeRunModule(Native Method)  [ERROR] :  TiDatabase:  at org.<USER>kroll.runtime.v8.V8Runtime.doRunModule(V8Runtime.java:162)  [ERROR] :  TiDatabase:  at org.<USER>kroll.KrollRuntime.runModule(KrollRuntime.java:207)  [ERROR] :  TiDatabase:  at org.<USER>titanium.TiLaunchActivity.loadScript(TiLaunchActivity.java:97)  [ERROR] :  TiDatabase:  at org.<USER>titanium.TiRootActivity.loadScript(TiRootActivity.java:414)  [ERROR] :  TiDatabase:  at org.<USER>titanium.TiLaunchActivity.windowCreated(TiLaunchActivity.java:174)  [ERROR] :  TiDatabase:  at org.<USER>titanium.TiRootActivity.windowCreated(TiRootActivity.java:283)  [ERROR] :  TiDatabase:  at org.<USER>titanium.TiBaseActivity.onCreate(TiBaseActivity.java:767)  [ERROR] :  TiDatabase:  at org.<USER>titanium.TiLaunchActivity.onCreate(TiLaunchActivity.java:167)  [ERROR] :  TiDatabase:  at org.<USER>titanium.TiRootActivity.onCreate(TiRootActivity.java:260)  [ERROR] :  TiDatabase:  at android.app.Activity.performCreate(Activity.java:6309)  [ERROR] :  TiDatabase:  at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1113)  [ERROR] :  TiDatabase:  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2519)  [ERROR] :  TiDatabase:  at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2654)  [ERROR] :  TiDatabase:  at android.app.ActivityThread.access$900(ActivityThread.java:175)  [ERROR] :  TiDatabase:  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1488)  [ERROR] :  TiDatabase:  at android.os.Handler.dispatchMessage(Handler.java:111)  [ERROR] :  TiDatabase:  at android.os.Looper.loop(Looper.java:207)  [ERROR] :  TiDatabase:  at android.app.ActivityThread.main(ActivityThread.java:5728)  [ERROR] :  TiDatabase:  at java.lang.reflect.Method.invoke(Native Method)  [ERROR] :  TiDatabase:  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:789)  [ERROR] :  TiDatabase:  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:679)  [ERROR] :  TiDatabase: Caused by: android.system.ErrnoException: open failed: ENOENT (No such file or directory)  [ERROR] :  TiDatabase:  at libcore.io.Posix.open(Native Method)  [ERROR] :  TiDatabase:  at libcore.io.BlockGuardOs.open(BlockGuardOs.java:186)  [ERROR] :  TiDatabase:  at libcore.io.IoBridge.open(IoBridge.java:483)  [ERROR] :  TiDatabase:  ... 25 more  [ERROR] :  TiExceptionHandler: (main) [15,1038] ti:/invoker.js:105  [ERROR] :  TiExceptionHandler:   return delegate.apply(invoker.__thisObj__, args);  [ERROR] :  TiExceptionHandler:                   ^  [ERROR] :  TiExceptionHandler: Error: /data/user/0/com.test.a/databases/countries: open failed: ENOENT (No such file or directory)  [ERROR] :  TiExceptionHandler:     at SandboxAPI.invoker [as install] (ti:/invoker.js:105:19)  [ERROR] :  TiExceptionHandler:     at /src/lib/phone_code.js:5:20  [ERROR] :  TiExceptionHandler:     at Module._runScript (ti:/module.js:612:9)  [ERROR] :  TiExceptionHandler:     at Module.load (ti:/module.js:108:7)  [ERROR] :  TiExceptionHandler:     at Module.loadJavascriptText (ti:/module.js:457:9)  [ERROR] :  TiExceptionHandler:     at Module.loadAsFile (ti:/module.js:512:15)  [ERROR] :  TiExceptionHandler:     at Module.loadAsFileOrDirectory (ti:/module.js:429:20)  [ERROR] :  TiExceptionHandler:     at Module.require (ti:/module.js:262:17)  [ERROR] :  TiExceptionHandler:     at Module.global.Module.require (/ti.internal/extensions/binding.js:33:76)  [ERROR] :  TiExceptionHandler:     at require (ti:/module.js:570:15)  [ERROR] :  TiExceptionHandler:  [ERROR] :  TiExceptionHandler:     libcore.io.IoBridge.open(IoBridge.java:497)  [ERROR] :  TiExceptionHandler:     java.io.FileOutputStream.<init>(FileOutputStream.java:87)  [ERROR] :  TiExceptionHandler:     java.io.FileOutputStream.<init>(FileOutputStream.java:72)  [ERROR] :  TiExceptionHandler:     ti.modules.titanium.database.DatabaseModule.install(DatabaseModule.java:124)  [ERROR] :  TiExceptionHandler:     org.<USER>kroll.runtime.v8.V8Runtime.nativeRunModule(Native Method)  [ERROR] :  TiExceptionHandler:     org.<USER>kroll.runtime.v8.V8Runtime.doRunModule(V8Runtime.java:162)  [ERROR] :  TiExceptionHandler:     org.<USER>kroll.KrollRuntime.runModule(KrollRuntime.java:207)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiLaunchActivity.loadScript(TiLaunchActivity.java:97)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiRootActivity.loadScript(TiRootActivity.java:414)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiLaunchActivity.windowCreated(TiLaunchActivity.java:174)  [INFO] :   I/[MALI][Gralloc]: [+]r_hnd(0xb46ff060), client(26), share_fd(25)  [ERROR] :  V8Exception: Exception occurred at ti:/invoker.js:105: Uncaught Error: /data/user/0/com.test.a/databases/countries: open failed: ENOENT (No such file or directory)  {code}",Bug,High,Closed,"2019-02-26 15:03:32","2019-02-26 15:03:32",7
"The Titanium SDK ","Android: Ti.Database.install() should throw exception like iOS if source db file not found","*Summary:*  The [Ti.Database.install()|https://docs.<USER>com/platform/latest/#!/api/Titanium.Database-method-install] API is intended to copy a source database file embedded within the app to a writeable location. The idea being that the app developer can preconfigure a SQLite database's tables/columns/indexes, embed that preconfigured database file within the app, thus avoiding having to do set up a database dynamically within the app's code.    On iOS, if the 1st argument (the source database file path) is not found, then the {{install()}} function will throw an exception. This is good because this tells the app developer that he/she has set the path wrong to the embedded database file.    On Android, if the source database file is not found, then an empty database is installed to the given location. This may confuse the app developer. It should throw an exception instead like iOS to clearly indicate that it's a path issue.  ",Improvement,Low,Closed,"2019-03-05 23:26:09","2019-03-05 23:26:09",3
"The Titanium SDK ","iOS: Cannot debug a project with hyperloop enabled","Cannot debug a project that has hyperloop enabled. The issue is with debug on iOS only as the debug on same project works fine wth Android    Steps to Reproduce:  1. Create a default titanium project with services enabled  2. Add a breakpoint in the js file  3. Debug on iOS simulator  or device    Actual Result:  The breakpoints are not hit during the debug. If we remove hyperloop from the project  the same breakpoints are hit successfully.    Expected Result:  The debug should work even for projects with hyperloop",Bug,None,Closed,"2019-03-04 18:15:25","2019-03-04 18:15:25",0
"The Titanium SDK ","CLI: Android build fails with cannot find module error","h5.Description    The android build currently errors with the below, this is because it's trying to look for a dependency of the app used for polyfilling which was removed        h5.Steps to reproduce    1. Build for Android    h5.Actual    Above error    h5.Expected    No error",Bug,High,Closed,"2019-02-28 14:21:44","2019-02-28 14:21:44",3
"The Titanium SDK ","Android: Activity onRestart callback no longer invoked as of 8.0.0.RC","*Summary:*  As of Titanium 8.0.0.RC, the {{Activity}} callback assigned to [onRestart|https://docs.<USER>com/platform/latest/#!/api/Titanium.Android.Activity-property-onRestart] is no longer invoked.    This is a regression.    The onRestart callback is supposed to be invoked after the activity's onStop to indicate that the activity window is being resumed from the background.    *Steps to reproduce:*  # Build and run the below code on Android.  # Wait for the app to appear onscreen  # Press the Home button to suspend the app.  # Resume the app.  # Observe the log and notice that onRestart was not logged.      ",Bug,Medium,Closed,"2019-02-27 01:06:06","2019-02-27 01:06:06",5
"The Titanium SDK ","Android: TextField/TextArea within a TableView can have performance issues with some keyboards","*Summary:*  Entering text into a {{TextField}}/{{TextArea}} embedded within a {{TableView}} can cause performance issues if the virtual keyboard shows/hides its top suggestion bar dynamically. It can also cause the cursor to suddenly move to the end of field and cause the field to flicker.    *Reason:*  By default, the windowSoftInputMode is set to {{Ti.UI.Android.SOFT_INPUT_ADJUST_PAN}} (aka: adjustPan), which means that showing/hiding the virtual keyboards will cause the window to resize. The resizing of a {{TableView}} triggers its row recycling/update behavior which can cause the contents of each row (such as the {{TextField}}) to be re-parented to a new row container view, which causes havoc with the virtual keyboard.    For virtual keyboards that have a fixed height and do not pop-in/out a suggestion bar as you type, this isn't really an issue since the above mentioned resize behavior happens once. For example, this is not an issue on a Pixel phone.    But some device pop-in/out a suggestion bar as you type which causes the {{TableView}} to resize every time you type in a character. This will cause massive performance issues.    *Steps to reproduce:*  # Build and run [^TableOfTextFieldsTest.js] on Android.  # Tap on row 1's {{TextArea}}.  # Notice that the cursor is moved to end of the field. (The code is supposed to highlight the whole text instead.)  # Notice the below warnings get logged.    {code}  [WARN]  IInputConnectionWrapper: getTextBeforeCursor on inactive InputConnection  [WARN]  IInputConnectionWrapper: getSelectedText on inactive InputConnection  [WARN]  IInputConnectionWrapper: getTextAfterCursor on inactive InputConnection  {code}    *Work-Around 1:*  Set up the window to adjustPan. This works-around the issue because it causes the virtual keyboard to be overlaid on top of the window instead of resizing it, which avoids the issue.  {code:javascript}  var window = Ti.UI.createWindow({   windowSoftInputMode: Ti.UI.Android ? Ti.UI.Android.SOFT_INPUT_ADJUST_PAN : null,  });  {code}    *Work-Around 2:*  Use a {{ScrollView}} instead of a {{TableView}}.  ",Bug,Medium,Closed,"2019-02-26 15:07:28","2019-02-26 15:07:28",13
"The Titanium SDK ","iOS: HTML assigned to WebView html property is unable to access app's local files as of 8.0.0.RC","*Summary:*  When loading an HTML string to a {{WebView}} via its html property, it is no longer able to access the app's local files under the Resources directory as of Titanium 8.0.0.RC.    *Steps to reproduce:*  # Create a Classic Default Project app.  # Replace the app.js code with the below code.  # Build with Titanium 8.0.0 and run on iOS.  # Notice that an image failed to load within the web view.  # Build with Titanium 7.5.x and run on iOS.  # Notice that the image successfully loaded within the web view.        *Note:*  Loading local resource files via {{app://Resources/}} also fails to load on iOS in Titanium 8.0.0.RC, but worked in older versions. Note that this URL scheme is undocumented and is not supported on Android.    *Work-Around:*  On iOS, the {{WebView.setHtml()}} method supports a 2nd argument where you can provide a baseURL parameter. This parameter allows you to set the directory (or URL) that file paths should be relative to. So, the below will work-around the problem.        \\  ----  *Original Bug Report Below*  ----  The upcoming change in 8.0 from UIWebView to WKWebView is major and because of my reliance on the WebView I wanted to start testing this. There is a ticket TIMOB-26095 that indicates the transition is complete and tested, but there are so many use cases that are not included in the sample tests provided that I have major concerns.    For example, I cannot get local resources like images to be rendered inside the WebView.    Test case:      Works fine in SDK 7.5.1, but the image does not load in 8.0.  Am I doing something wrong? Is there a low-level change that I should know about for this?",Bug,Critical,Closed,"2019-02-14 23:22:19","2019-02-14 23:22:19",8
"The Titanium SDK ","Android: Something broken with tabsBackgroundColor &tabsBackgroundSelectedColor on TabGroup refactoring -regression ","*Test Steps:*  1.Run the app  Tab1: background color: yellow  background selected color: red  Tab2/Tab3: background color: blue  background selected color: red  3. Go to Tab 3, click on button  4. Now the following must be true:  Tab1: background/background selected color remains UNCHANGED  Tab2/Tab3: background color: orange  background selected color: white    *Actual:*   changing the tabsBackgroundColor & tabsBackgroundSelectedColor with a click eventlistener it does not change.after button clicked on tab3 tab2/tab3 background/background selected color not changed  app.js  ",Bug,Medium,Closed,"2019-02-25 20:46:40","2019-02-25 20:46:40",5
"The Titanium SDK ","Windows: Add baseURL support to WebView.setHtml()","*Summary:*  Titanium currently documents that the {{WebView.setHtml()}} method supports a 2nd argument on Android and iOS which can provide a baseURL setting. Android used to support this, but it was inadvertently removed in Titanium 6.0.3. This feature should be re-added since it's needed by iframes to indicate which URL an iframe's embedded paths are relative to.    For example, a YouTube video embedded within an iframe will not play on Android or iOS unless a baseURL of https://www.youtube.com is provided.    *Steps to reproduce:*  # Build and run the below code on Android.  # Tap on the video to attempt to play it.  # Notice that the video won't play. Instead it reads Video Unavailable.  # Build and run on iOS.  # Tap on the video play it.  # Notice that the video plays fine. _(This is because the baseURL is being used.)_        *Work-Around:*  The baseURL is not needed if the webpage was loaded from the Internet (ie: the url property). That is, baseURL is only applicable when loading HTML from string. So, hosting the webpage on your own web server will work-around this problem.  ",Improvement,Medium,Closed,"2019-02-24 13:04:21","2019-02-24 13:04:21",8
"The Titanium SDK ","iOS: Crash when handling user-activies","When trying to handle user activities, the app experiences a hard crash because the underlaying completion handler passed to the {{NSOrderedSet}} is GC'd due to a memory leak. It can be fixed by properly {{copy}}'ing the completion handler.    I scanned other parts of the SDK where this can happen and fixed some more cases as well. I also fixed some duplicate method definitions / leftovers from the SDK 8 Swift support migration.",Bug,Critical,Closed,"2019-02-23 19:24:19","2019-02-23 19:24:19",5
"The Titanium SDK ","iOS: Random JSCore crashes in SDK 8+","We noticed some random JSCore crashes in latest SDK 8 builds (not sure if also happening on < SDK 8 since we already updated to 8 a while ago). One of the crash logs attached.",Bug,Critical,Closed,"2019-02-23 13:52:42","2019-02-23 13:52:42",21
"The Titanium SDK "," Android: Activity callbacks onStop/onDestroy not invoked on main thread as of 7.5.0","*Summary:*  If tiapp.xml property run-on-main-thread is set to {{true}}, then the activity's {{onStop}} and {{onDestroy}} callbacks are not invoked upon app exit. This is a regression as of 7.5.0.    *Steps to reproduce:*  # Set tiapp.xml property run-on-main-thread to {{true}} as shown below.  # Use the below app.js code.  # Build and run on Android.  # Wait for the app to launch.  # Notice in the log that onStart() and onResume() were successfully called.  # Back out of the app to exit.  # Notice in the log that TopActivity.onStop(), TopActivity.onDestroy(), and RootActivity.onDesroy() did *+not+* get called.    *tiapp.xml*  {code:xml}  <?xml version=1.0 encoding=UTF-8?>  <ti:app xmlns:ti=http://ti.<USER>org>   <property name=run-on-main-thread type=bool>true</property>  </ti:app>  {code}    *app.js*  {code:javascript}  function addActivityListenersTo(activity, name) {   if (!activity) {    return;   }   if (!name) {    name = Activity;   }   activity.onCreate = function() {    Ti.API.info(@@@  + name + .onCreate() called.);   };   activity.onRestart = function() {    Ti.API.info(@@@  + name + .onRestart() called.);   };   activity.onStart = function() {    Ti.API.info(@@@  + name + .onStart() called.);   };   activity.onResume = function() {    Ti.API.info(@@@  + name + .onResume() called.);   };   activity.onPause = function() {    Ti.API.info(@@@  + name + .onPause() called.);   };   activity.onStop = function() {    Ti.API.info(@@@  + name + .onStop() called.);   };   activity.onDestroy = function() {    Ti.API.info(@@@  + name + .onDestroy() called.);   };  }    addActivityListenersTo(Ti.Android.currentActivity, RootActivity);    var window = Ti.UI.createWindow();  window.add(Ti.UI.createLabel({ text: Activity Callback Test }));  window.addEventListener(open, function() {   Ti.API.info(@@@ Window 'open' event fired.);  });  addActivityListenersTo(window.activity, TopActivity);  window.open();  {code}    *Work-Around 1:*  If you are building with Titanium 7.5.x, then setting run-on-main-thread to {{false}} then the {{onStop()}} and {{onDestroy()}} callbacks will be successfully invoked.    *Work-Around 2:*  Add a listener to the {{Ti.UI.Window}} object's close event instead. This event is supported on both Android and iOS, making it a portable solution.  ",Bug,Medium,Closed,"2019-02-22 17:09:58","2019-02-22 17:09:58",3
"The Titanium SDK ","Android: Re-add baseURL support to WebView.setHtml() that was removed in 6.0.3","*Summary:*  Titanium currently documents that the {{WebView.setHtml()}} method supports a 2nd argument on Android and iOS which can provide a baseURL setting. Android used to support this, but it was inadvertently removed in Titanium 6.0.3. This feature should be re-added since it's needed by iframes to indicate which URL an iframe's embedded paths are relative to.    For example, a YouTube video embedded within an iframe will not play on Android or iOS unless a baseURL of https://www.youtube.com is provided.    *Steps to reproduce:*  # Build and run the below code on Android.  # Tap on the video to attempt to play it.  # Notice that the video won't play. Instead it reads Video Unavailable.  # Build and run on iOS.  # Tap on the video play it.  # Notice that the video plays fine. _(This is because the baseURL is being used.)_        *Work-Around:*  The baseURL is not needed if the webpage was loaded from the Internet (ie: the url property). That is, baseURL is only applicable when loading HTML from string. So, hosting the webpage on your own web server will work-around this problem.  ",Improvement,Medium,Closed,"2019-02-22 03:13:22","2019-02-22 03:13:22",5
"The Titanium SDK ","Android: Fix stringify of custom TableView row","- Prevent exception when {{JSON.stringify}} a custom TableViewRow  ",Bug,Medium,Closed,"2019-02-22 00:47:16","2019-02-22 00:47:16",3
"The Titanium SDK ","Android: Getting/Setting TabGroup activeTab property before open causes a crash as of 8.0.0.RC","*Summary:*  Getting or setting the {{TabGroup}} activeTab property (or calling {{getActiveTab()}} or {{setActiveTab()}} methods) before the {{TabGroup}} has been opened causes a crash on Android as of Titanium 8.0.0.RC.    *Steps to reproduce*  # Build and run the below code via Titanium 8.0.0.RC on Android.  # Notice the app crashes on startup.    *Testcase*      *Expected*  No error is thrown and the seconf tab is in focus    *Actual*      *Note:*  It will crash when set via a {{Ti.UI.createTabGroup()}} creation property as well.    *Work-Around:*  You can set the active tab after the {{TabGroup}} has been opened as shown below.    ",Bug,Critical,Closed,"2019-02-21 16:04:25","2019-02-21 16:04:25",8
"The Titanium SDK ","Android: Reading TextField backgroundDisabledColor will crash if background/border color is assigned","Using Android SDK 7.5.0, text field touch start event is failing with below error.         *Test steps:*    1. Create a new project  2. Paste the sample test code and run on android device  3. After running, start touching on the text field and got the error.    *Test code:*    *Test Environment:*      Device:Huawei Y9 2018",Bug,Medium,Closed,"2019-02-21 09:11:28","2019-02-21 09:11:28",3
"The Titanium SDK ","iOS: The xcode project created upon build of titanium project gives error when run to iOS device","When we build a titanium mobile project using Ti SDK 8.0 the Xcode project created in the builds folder runs the project on device with errors.  This does not happen when we build project using Ti DK 7.5.0    Steps to reproduce:  1. Create a default titanium project  2. Build it for iOS  3. Open the xcode project created under /build/iphone/  4. Run that project to a iOS device    Actual Result:  An error is shown when the app is run  ",Bug,None,Resolved,"2019-02-21 00:56:09","2019-02-21 00:56:09",1
"The Titanium SDK ","iOS: Unable to get call pop menu from a webView","This is a regression from 7.5.0.GA. When pressing the call me button on an application using webView the call popup is no longer shown.     *Test Code*      *Expected result:*  Above test case should show a pop up asking the user to make a call     *Actual result:*  No pop is shown.   ",Bug,None,Closed,"2019-02-18 14:47:04","2019-02-18 14:47:04",5
"The Titanium SDK ","Android: NavigationView root window displays back button","When creating a basic NavigationWindow in Android it displays a back button (see attachment) where it shouldn't, since it is the root window.        Basically, the hello world app with a wrapping NavigationWindow    *Expected result*    It should not display a back button on root window",Bug,Critical,Closed,"2019-02-18 11:26:01","2019-02-18 11:26:01",5
"The Titanium SDK ","iOS: Two startup log messages are output","h5.Description    When building to iOS there are two startup logs {{\[INFO\]  <app_name/<app_version (<sdk_version>.<sdk_githash)}} output, see below        h5.Steps to reproduce    1. Build an app to an iOS sim or device    h5.Expected    In the logs there are two startup logs    h5.Actual    There should be one startup log",Bug,None,Closed,"2019-02-18 10:59:49","2019-02-18 10:59:49",1
"The Titanium SDK ","Hyperloop: Android - Can not read java class from the symlink directory folder","I'm experiencing what I believe is a bug in the Hyperloop in Android only. We have multiple apps that share a similar codebase. We have a lot of this code in one directory and we   symlink it to all of the other projects. If I use Hyperloop in a file that lives inside this symlinked directory to require a class it throws an error during build. If I run the project that contains the actual directory, not just a symlink, it works just fine.     The error I'm seeing.     {code:title error}  [ERROR] :  TiExceptionHandler: (main) [228,228] ti:/module.js:303  [ERROR] :  TiExceptionHandler:  throw new Error('Requested module not found: ' + request); // TODO Set 'code' property to 'MODULE_NOT_FOUND' to match Node?  [ERROR] :  TiExceptionHandler:  ^  [ERROR] :  TiExceptionHandler: Error: Requested module not found: android.view.View  [ERROR] :  TiExceptionHandler:     at Module.require (ti:/module.js:303:8)  [ERROR] :  TiExceptionHandler:     at Module.global.Module.require (/ti.internal/extensions/binding.js:33:34)  [ERROR] :  TiExceptionHandler:     at require (ti:/module.js:570:15)  [ERROR] :  TiExceptionHandler:     at /shared/Example.js:1:102  [ERROR] :  TiExceptionHandler:     at Module._runScript (ti:/module.js:612:9)  [ERROR] :  TiExceptionHandler:     at Module.load (ti:/module.js:108:7)  [ERROR] :  TiExceptionHandler:     at Module.loadJavascriptText (ti:/module.js:457:9)  [ERROR] :  TiExceptionHandler:     at Module.loadAsFile (ti:/module.js:512:15)  [ERROR] :  TiExceptionHandler:     at Module.loadAsFileOrDirectory (ti:/module.js:429:20)  [ERROR] :  TiExceptionHandler:     at Module.require (ti:/module.js:262:17)  [ERROR] :  TiExceptionHandler:  [ERROR] :  TiExceptionHandler:     org.<USER>kroll.runtime.v8.V8Runtime.nativeRunModule(Native Method)  [ERROR] :  TiExceptionHandler:     org.<USER>kroll.runtime.v8.V8Runtime.doRunModule(V8Runtime.java:162)  [ERROR] :  TiExceptionHandler:     org.<USER>kroll.KrollRuntime.runModule(KrollRuntime.java:207)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiLaunchActivity.loadScript(TiLaunchActivity.java:97)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiRootActivity.loadScript(TiRootActivity.java:414)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiLaunchActivity.windowCreated(TiLaunchActivity.java:174)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiRootActivity.windowCreated(TiRootActivity.java:283)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiBaseActivity.onCreate(TiBaseActivity.java:767)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiLaunchActivity.onCreate(TiLaunchActivity.java:167)  [ERROR] :  TiExceptionHandler:     org.<USER>titanium.TiRootActivity.onCreate(TiRootActivity.java:260)  [ERROR] :  V8Exception: Exception occurred at ti:/module.js:303: Uncaught Error: Requested module not found: android.view.View    var tabGroup = Ti.UI.createTabGroup();  var Example = require('/shared/Example');  {code}    3. Then create a directory called shared in one app and take the attached Example.js file  and put it in the shared directory.   4. Then symlink that directory in the  other project using 'ln -s /path/to/shared /path/to/symlink'. That's all I  did.   5. Now run those Apps.  6. First App is working perfectly.  7. Second App is throwing an error.      Again, this does not seem to be an issue on iOS, only Android.",Bug,None,Resolved,"2019-02-15 14:41:48","2019-02-15 14:41:48",3
"The Titanium SDK ","iOS: Titanium.Media.openMusicLibrary returns empty items on iOS 9.3.5","It works on iOS 10 or later, but fails on iOS 9.3.5    To reproduce:  - select a song  - music library will return an item  - stringify will print an empty item  - trying to read the title property on the item crashes the app    {code:js}  var win = Ti.UI.createWindow({      backgroundColor: '#fff'  });     var btn = Ti.UI.createButton({      title: 'Trigger'  });    btn.addEventListener('click', function() {      if (Ti.Media.hasMusicLibraryPermissions()) {          openMusicLibrary();      } else {          Ti.Media.requestMusicLibraryPermissions(function(e) {              if (!e.success) {                  alert(No permissions!);                  return;              }              openMusicLibrary();          })      }  });     win.add(btn);  win.open();     function openMusicLibrary() {      Ti.Media.openMusicLibrary({    allowMultipleSelections : true,    success : function(event) {     // this will be printed            Ti.API.info(JSON.stringify(event));     // this crashes the app even if items > 0             Ti.API.info('title = ' + event.items[0].title);     },    cancel : function() {     alert(Aborting );    },    error : function(error) {     // called when there's an error     var a = Titanium.UI.createAlertDialog({      title : 'Music Library'     });     if (error.code == Titanium.Media.NO_MUSIC_PLAYER) {      a.setMessage('Please run this test on device.');     } else {      a.setMessage('Unexpected error: ' + error.code);     }     a.show();    }   });  }  {code}",Bug,Critical,Closed,"2019-02-07 10:29:44","2019-02-07 10:29:44",3
"The Titanium SDK ","iOS: Localised splash screen is not visible.","When I add the splash screen in the app/i18n/es/ path I am not able to see the splash screen. I get a black screen.    *Steps to reproduce:*  1. Create an alloy project  2. Place a splash screen image In app/i18n/es/ folder   3. Under tiapp.xml, ensure the following are false    <ios>      <enable-launch-screen-storyboard>false</enable-launch-screen-storyboard>      <use-app-thinning>false</use-app-thinning>    4. Run the app on the iPhone device  5. Make sure there are no splash screen image under app/assets/iphone  5. Run the app, depending on the device language setting you should see the correct splash screen image.    Expected: Splash screen should be visible when the app launches.  Actual: A black screen is shown instead of a splash screen image.    Reference: https://docs.<USER>com/platform/latest/#!/guide/Icons_and_Splash_Screens-section-src-29004897_IconsandSplashScreens-Localizedsplashscreens    Note: It works in the Simulator.  ",Bug,None,Closed,"2019-02-15 11:54:11","2019-02-15 11:54:11",1
"The Titanium SDK ","Android: Hybrid module commonjs extensions crash application","- CommonJS extensions for native modules do not load and cause the application to crash    *TEST CASE*  - Build https://github.com/<USER>modules/ti.playservices  - Include in Titanium Application, should not crash on startup",Bug,High,Closed,"2019-02-15 00:40:56","2019-02-15 00:40:56",5
"The Titanium SDK ","Android: Build resources can fail to copy correctly","- Application resources can sometimes fail to copy into the build directory, causing the build <USER>to fail.    ",Bug,Critical,Closed,"2019-02-14 19:24:16","2019-02-14 19:24:16",3
"The Titanium SDK ","Android: Improved customization of Ti.UI.Android.SearchView","Expose new properties to improve the customization of Ti.UI.Android.SearchView. They are as follow:   - {{iconSearchColor}} - color of the Search icon in collapsed view   - {{iconSearchCloseColor}} - color of the Search Close button in expanded view   - {{iconSearchHintColor}} - color of the default Search Hint icon",Improvement,Medium,Closed,"2019-02-13 15:58:29","2019-02-13 15:58:29",5
"The Titanium SDK ","Windows: Support Windows.Desktop TargetDeviceFamily","According to the article [Non-suspending UWP Desktop Apps|https://blogs.msdn.microsoft.com/mvpawardprogram/2018/01/30/non-suspending-uwp-desktop-apps/], we could be more Desktop-Friendly, such as supporting {{Windows.Desktop}} target that never cause app suspension unlike Windows Store app. I heard that sometimes developers suffer from app suspension even on desktop because app suspension could happen even when you minimize application Window which happens often. It may become more important to focus on {{Windows.Desktop}} other than {{Windows.Universal}} because Windows mobile strategy is dying.","New Feature",Medium,Open,"2019-02-06 03:28:51","2019-02-06 03:28:51",8
"The Titanium SDK ","Angular: Project template is outdated ","Hello!  The *appc new -t app --ng* template is outdated. webpack.optimize.CommonsChunkPlugin has been removed, please use config.optimization.splitChunks instead.  Steps :   1. Create a new Angular project: *appc new -t app --ng*  2. Build and run Angular project : *appc run -p android*    *Error Log*:  ",Bug,None,Closed,"2019-02-05 15:05:57","2019-02-05 15:05:57",13
"The Titanium SDK ","Windows: removeEventListener removes wrong callback","{{removeEventListener}} removes wrong callback. If module has multiple callbacks with same name, {{removeEventListener}} always removes first one only.        Actual: {{func1}} called once and {{func2}} & {{func3}} are called twice.  Expected: all {{func2}} should be removed and {{func1}} & {{func3}} should be called twice.  ",Bug,High,Closed,"2019-02-05 07:28:27","2019-02-05 07:28:27",5
"The Titanium SDK ","Windows: TCP connection not closed at app exit","Latest error message on LiveView issue with 8.0.0 TIMOB-25072 shows that we might need to gracefully close TCP connection just before application exit - sample code: https://gist.github.com/infosia/a4d617b6678a5efef445eb7301b8b4c2#file-liveview-diff-L54 I think this has never happened on iOS/Android/WindowsPhone because application lifetime is totally controlled by each frameworks...but it seems things are different for Windows Store app because user can explicitly kill the app manually by pressing Window's [x] button. I don't know why this has never happened on previous versions but maybe we need to handle this natively, like explicitly closes all open-connection gracefully just before application exit.    *Steps to reproduce*    {{appc run -p windows -l trace --target ws-local --liveview -l trace}} and then exit the app by pressing [x] button on the title bar    *Result*        *Expexted*    {{read ECONNRESET}} error message does not happen  ",Bug,Medium,Open,"2019-02-05 01:08:37","2019-02-05 01:08:37",8
"The Titanium SDK ","iOS: Event listener on overlay is not working for camera when camera is kept idle for a few minutes","On click of simple label/button, we open the camera and one overlay is added on the camera view to show close/capture/gallery icons.   Following are the steps to reproduce the issue.      Case 1:  *  Open the application.  *  Click on the label to open the camera.  *  Keep app in the background for 1 or 2 minutes.  *  Open again  *  When we click Close button on the camera overlay, It is not clickable.      Case 2:  *  Open the application  *  Click on the label to open the camera.  *  Keep app in the foreground for few minutes.  *  Same here, when we click Close button on the camera overlay, It is not clickable.",Bug,Critical,Closed,"2019-02-01 11:04:34","2019-02-01 11:04:34",5
"The Titanium SDK ","Android: Text cursor should change color according to text color","- The text cursor maintains the color set by the parent theme, this can cause the cursor to disappear light backgrounds. The cursor should match the font color.  {code:js}  const win = Ti.UI.createWindow({ backgroundColor: 'white' });  const textArea = Ti.UI.createTextArea({ color: 'black' });  win.add(textArea);  win.open();  {code}",Bug,High,Closed,"2019-02-01 19:01:10","2019-02-01 19:01:10",2
"The Titanium SDK ","Windows: Ti.UI.View reports top/left/bottom/right values as Strings always","I'm in the <USER>of updating our test suite to use the latest {{should.js}} library, which now uses a stricter equality check. As a result, the tests are now flagging a number of windows UI tests as failing due to comparisons against expected numeric values. (the comparison used to do {{==}} but now do {{===}} so won't coerce to Number)    Turns out we're reporting string values for top/left/right/bottom always on Windows where we report Numbers on Android/iOS. The properties themselves are Number or String, so Strings can be valid but would typically be reported when followed by the unit (i.e. px, em, %).    For parity's sake, I think it'd be good to report the values as Numbers when they're purely numeric/have no units explicitly attached.",Bug,Medium,Closed,"2019-02-01 18:57:56","2019-02-01 18:57:56",8
"The Titanium SDK ","BlackBerry: Ti.UI.SIZE for width on components break position","h3. Problem  When creating a UI component and giving it a width of Ti.UI.SIZE, the component will be placed at the 0,0 position of the parent view, no matter if top, left, right, and bottom are defined.  h3. Code    h3. More  If margins are given, the component must respect them - not ignore them. If margin are not given, the component must be centered in the parent view, not be placed at 0,0",Bug,None,Closed,"2019-02-01 18:34:43","2019-02-01 18:34:43",0
"The Titanium SDK ","android: Ti.Buffer#clone() will copy over null type/value properties to cloned Buffer when undefined on original","Due to an updated {{shouldjs}} library, equality checks are stricter, exposing this bug where a <USER>Ti.Buffer will inherit {{null}} values for {{type}}/{{value}} when they're {{undefined}} on the original.",Bug,Low,Closed,"2019-02-01 18:26:55","2019-02-01 18:26:55",3
"The Titanium SDK ","require fails on directory with package.json whose 'main' field points at another directory","If you attempted to require a directory (or npm package) that held a package.json in it whose 'main' field pointed at another directory - it failed to properly resolve that.",Bug,High,Closed,"2019-02-01 16:33:51","2019-02-01 16:33:51",5
"The Titanium SDK ","iOS: Database.DB - implement remove() method","The [DB|http://developer.<USER>com/apidoc/mobile/latest/Titanium.Database.DB-object] remove() method exists in Android (see [source|https://github.com/<USER>titanium_mobile/blob/master/android/modules/database/src/java/ti/modules/titanium/database/TiDatabaseProxy.java#L182]) but not in iOS.    This ticket requests parity.  ",Bug,None,Resolved,"2019-02-01 03:33:39","2019-02-01 03:33:39",1
"The Titanium SDK ","Cease the inclusion of SOASTA in the SDK from 8.0.0+","SOASTA will not be supported for SDK 8.0.0+ . The module should no longer be available from that SDK version forward.",Bug,High,Closed,"2019-01-31 23:31:59","2019-01-31 23:31:59",5
"The Titanium SDK ","Windows: Error thrown when installing a packaged application to device using wptools","When installing a packaged windows application to a device the error below is thrown        *Steps to Reproduce*  # Create an alloy application  # Package the application to windows phone {{appc run -p windows -T dist-phonestore}}  # Follow the prompts   # Install the packaged application to device {{C:\Program Files (x86)\Windows Kits\10\bin\x86\WinAppDeployCmd.exe install -file <appxbundle location> -ip 127.0.0.1}}  ",Story,High,Closed,"2019-01-30 17:22:20","2019-01-30 17:22:20",5
"The Titanium SDK ","Android: Ti.UI.Android.SearchView only icon responds to search","- Pressing the SearchView bar does not gain focus and ability to search, only the icon responds.    *TEST CASE*  {code:js}  const win = Ti.UI.createWindow({ backgroundColor: 'gray' });  const search = Ti.UI.Android.createSearchView();  const table = Titanium.UI.createTableView({      data: [          Ti.UI.createTableViewRow({ title:'Apple' }),          Ti.UI.createTableViewRow({ title:'Banana' }),          Ti.UI.createTableViewRow({ title:'Orange' }),          Ti.UI.createTableViewRow({ title:'Raspberry' })      ],      search: search,      searchAsChild: true  });    win.add(table);  win.open();  {code}",Bug,High,Closed,"2019-01-30 00:12:52","2019-01-30 00:12:52",2
"The Titanium SDK ","Android: Default configChanges settings are lost when overriding root activity in tiapp.xml","*Summary:*  Titanium generates an AndroidManifest.xml when building an Android app. By default, the root activity will be assigned the following android:configChanges settings:  * keyboardHidden  * orientation  * fontScale  * screenSize  * smallestScreenSize  * screenLayout  * density    But if you override the root activity in the tiapp.xml without setting the android:configChanges yourself, then most of the above settings will be lost in the generated AndroidManifest.xml. Only the below will be remaining.  * screenSize  * density    *Why is this a problem:*  By default, the Android OS will destroy and recreate the window activity when a system event such as an orientation change occurs. Since android:configChanges such as orientation is lost in this case, rotating the app while its loading at the splash screen will cause the app to reload every time you change orientation.    Also note that app developers often do override the root activity in the tiapp.xml in order to set up their own custom intent-filters or to apply their own theme to the splash screen (such as a translucent status bar). So, this is a commonly done.    *Steps to reproduce:*  1. Create a Titanium app with project name MyApp.  2. Insert the below XML into your tiapp.xml.  3. Set up the app.js as shown below. It should be blank.  4. Build and run the app.  5. Verify the following gets logged on startup: {{MyApp 1.0 (Powered By Titanium ...)}}  6. Rotate the app from portrait to landscape or vice-versa.  7. Notice the {{MyApp 1.0 (Powered By Titanium ...)}} gets logged again. _(This means the app restarted. This is bad.)_  8. Go to app project folder: {{./build/android}}  9. Open the AndroidManifest.xml file.  10. Look for an XML {{<activity/>}} element with name .MyappActivity.  11. Notice that the android:configChanges attribute only has settings {{screenSize|density}} defined. _(This is the issue.)_    app.js      tiapp.xml      *Expected Result:*  Titanium's default android:configChanges listed up above should always be included when overriding the root activity... *unless* the app developer sets the android:configChanges themselves, in which case we should honor the developer's settings.    *Note:*  This used to be a bigger issue in Titanium 7.4.1 and below since the app.js would have been re-executed every time you change orientation on startup.    In 7.5.0 and above, Titanium loads ti.main.js instead which is lighter-weight and its call to {{require(app.js)}} would have no-op'ed upon re-execution of ti.main.js since the app.js was already cached.    ",Bug,High,Closed,"2019-01-29 23:57:50","2019-01-29 23:57:50",3
"The Titanium SDK ","Android: Window UI disappears when connecting/disconnecting keyboard","*Summary:*  The Titanium window UI will disappear when doing the following on Android:  * Connect or disconnect a bluetooth keyboard.  * Open or close a phone's slide-out keyboard. (Like the old Droid devices.)    *Steps to reproduce:*  # Connect a bluetooth keyboard to an Android device.  # Launch a Titanium app on that device.  # Turn off the bluetooth keyboard (or pull the batteries out).    *Result:*  The UI disappears when the keyboard disconnects.    *Cause:*  Titanium generates an AndroidManifest.xml when doing an Android build. The Titanium {{<activity/>}} elements have an android:configChanges attribute which are missing the keyboard value. This is needed to override the Android OS' default behavior of destroying the activity and recreating it when a keyboard disconnects. (We overriding the orientation change event for the same reason.)  https://developer.android.com/guide/topics/manifest/activity-element#config    *Recommended Solution:*  We need to updating Titanium's AndroidManifest.xml template and/or _build.js to automatically add the keyboard setting to all activities that do not load UI from XML such as the root activity, TiActivity, JSActivity, etc.    *Work-Around:*  Add the following to the tiapp.xml to override the the keyboard handling yourself. Note that the activity name is based on the app's name. If the app's name is MyAppName, then the activity name will be MyappnameActivity.      ",Bug,Medium,Closed,"2019-01-29 22:58:27","2019-01-29 22:58:27",3
"The Titanium SDK ","Windows: App launch failed with cyclic redundancy check error on device","Application fails to launch and throws runtime error on Windows 10 mobile device with cyclic redundancy check error (See screenshot attached)    *Steps to reproduce;*  # Create a new alloy application {{appc new}}  # Build to device {{appc run -p windows -T wp-device}}  # Build to device again {{appc run -p windows -T wp-device}}    ",Bug,Critical,Closed,"2019-01-29 04:24:13","2019-01-29 04:24:13",8
"The Titanium SDK ","Android: When backgrounded, data intent no longer re-executes app.js as of 7.5.0","*Summary:*  If the Android app's UI is in the background and you attempt to launch it via a data intent (aka: URL scheme, notification, or {{startActivity()}} intent), then the app's splash screen will be displayed but nothing will happen. This is a *regression* as of 7.5.0. Titanium 7.4.2 and older versions would re-execute the app.js in this case.    *Cause:*  What's happening is that a new UI activity stack is being created by the data intent while an existing UI stack already exists in the background. Titanium only supports running 1 JavaScript runtime at a time (does not support multiple JS runtimes). So, when the 2nd UI stack is displayed, it attempts to load the app.js when it was already loaded before.    In Titanium 7.4.2 and older versions, Titanium would re-execute the app.js for the JavaScript runtime, even though it was already loaded before. This was unintended behavior, but some app developers depend on this behavior.    As of 7.5.0, Titanium now loads a ti.main.js script on startup (our bootstrap script) and then loads the app.js via the {{require()}} function. But for the 2nd UI stack, since it's re-using an existing JavaScript runtime and the app.js was loaded before, the {{require()}} function won't re-execute the script and returns a cached module instead. This behavior is technically correct, but the old unexpected behavior is what's desired for Titanium 7.5.x.    *Note:*  As of Titanium 8.0.0, the above is not an issue. Intent handling was refactored in 8.0.0 to guarantee that only one UI stack exists at a time. Data intents will instead resume the existing UI stack like how iOS works. See [TIMOB-26075] for more details.    *Steps to reproduce:*  # Create a classic Titanium app.  # Set project name to IntentTest. (This is {{<name/>}} in tiapp.xml.)  # Set project's Application Id to com.appc.intent.test. (This is {{<id/>}} in tiapp.xml.)  # Set up the app.js with the below code.  # Build and run on Android.  # Wait for the app to launch.  # Open the Mac Terminal app.  # CD (change directory) to: {{~/Library/Android/sdk/platform-tools}}  # In the terminal, enter: {{./adb shell am start -n com.appc.intent.test/.IntenttestActivity -a android.intent.action.VIEW -d https://www.google.com -f 0x04000000}}        *Result:*  A new splash screen window instance is displayed, but doesn't show the window and label implemented via the app.js code.    *Expected Result:*  It should re-execute the app.js when 2nd UI stack is displayed to maintain old behavior.    ----  *Original Description*  ----  Using 7.5.0.GA, application gets stuck on the splash screen when navigating back from the TargetApp towards the SourceApp after having the TargetApp opened from the SourceApp. Using 7.4.2.GA, it was working fine.    If you make 2 apps use the code below and tap their buttons to launch the other app, you can reproduce this behavior.   [^SourceApp.js]  [^TargetApp.js] ",Bug,High,Closed,"2019-01-28 20:28:55","2019-01-28 20:28:55",5
"The Titanium SDK ","iOS: ListView with attributed strings shows Invalid type passed to function error.","*Issue Description:*  When I try to build a project using listView attributed string on iOS, it shows the following error on latest ti SDK 7.5.0.GA    *Error Log:*      *Steps to Reproduce:*  1. Replace index.xml, index.js, index.tss with the following test code.  *index.xml*      *index.js*      *index.tss*      2. Build the project on iOS simulator and observe the error.    *Expected:* ListView attributed string should work  *Actual:* It doesn't work, generates the said error.  ",Bug,None,Closed,"2019-01-27 11:46:32","2019-01-27 11:46:32",0
"The Titanium SDK ","Auto-select only valid certificate and/or provisioning profile when building to device","Don't make the user select their provisioning profile and development certificate when building to a device if there's only one valid option. It's pointless to ask them to choose from only one possible value.",Improvement,Medium,Closed,"2019-01-25 17:12:09","2019-01-25 17:12:09",3
"The Titanium SDK ","Windows: Timeout error thrown when installing to wp-device ","When building to windows device a time out error is thrown     # Create a mobile app   # Build to device     *Actual*  *Error*      *Expected*  No error   ",Bug,Critical,Closed,"2019-01-25 17:06:23","2019-01-25 17:06:23",5
"The Titanium SDK ","Android: Changing TabbedBar properties labels and index before opening window causes a crash","*Summary:*  Changing {{Ti.UI.TabbedBar}} properties labels or index after creating the tabbed bar but before its parent window will cause a crash.    This is a parity issue. iOS allows these properties to be changed dynamically.    *Steps to reproduce:*  # Build and run the below code on Android.  # On app startup, notice it crashes.        *Result:*  Will get the below error when setting the labels property.  {code}  [ERROR] TiExceptionHandler: Error: Attempt to invoke virtual method 'void ti.modules.titanium.ui.widget.TiUITabbedBar.setNewLabels()' on a null object reference  {code}    Will get the below error when setting the index property.  {code}  [ERROR] TiExceptionHandler: Error: Attempt to invoke virtual method 'void ti.modules.titanium.ui.widget.TiUITabbedBar.setSelectedIndex(int)' on a null object reference  {code}    *Work-Around:*  Move all property {{TabbedBar}} property changing code to the window's open event handler.    Or avoid setting these property dynamically and assign them once via its creation properties.  {code:javascript}  var window = Ti.UI.createWindow();  var tabbedBar = Ti.UI.createTabbedBar({   labels: [One, Two, Three],   index: 1,  });  window.add(tabbedBar);  window.open();  {code}  ",Bug,Medium,Closed,"2019-01-21 12:03:59","2019-01-21 12:03:59",5
"The Titanium SDK ","Windows: Always send full analytics payload","- Always send full analytics payload for parity with iOS and Android  - Update endpoint to V4",Bug,Critical,Closed,"2019-01-18 23:28:45","2019-01-18 23:28:45",3
"The Titanium SDK ","Android: Ti.App wrongly fires pause/resume event when opening/closing child windows","*Summary:*  {{Ti.App}} events pause and paused must only be fired when the app is put into the background. Events resume and resumed are to be fired when the app is returned to the foreground (include cold app startup).    Android correctly does the above when put into the background and foreground.    However, Android will also fire a pause and resume event when opening or closing a child window. This does not follow iOS' behavior and is a parity issue.    *Note:*  To be fair, the current pause/resume event behavior is how it natively works with Android's individual activities. However, app developers need these events to disable sensors when backgrounded and re-enable them when put back into the foreground, which is currently difficult to do in Titanium for the moment.    *Steps to reproduce:*  # Build and run the below code on Android.  # Tap the Open Child button.  # Observe the log.  # Notice that pause and resume events were logged. _(This is the bug.)_      ",Bug,Medium,Closed,"2019-01-18 04:08:24","2019-01-18 04:08:24",3
"The Titanium SDK ","TiAPI: App launch slowed down by 2-5 seconds in SDK 8","When using SDK 8, the app launch is now extremely slow. It looks like the core-js libraries take waaay to long. It needs to be solved differently in order to be used in production apps. Any kind of logs or insight in our app can be shared with the core team.",Bug,Critical,Closed,"2019-01-17 09:12:51","2019-01-17 09:12:51",13
"The Titanium SDK ","Update Hyperloop to 4.0.1","Due to TIMOB-26727 we need a new version of Hyperloop compiled with the latest 8_0_X branch.",Story,High,Closed,"2019-01-16 21:33:36","2019-01-16 21:33:36",2
"The Titanium SDK ","TiAPI: Ship baseline polyfills in built SDK","As part of our ES6/7/8 support we now use babel transpilation via preset-env and polyfills. Currently, we are injecting polyfills based on usage during the transpiration <USER> The avoids unnecessary polyfills, but may lead to the same polyfills being required across many files.    We can potentially move the polyfills into the app bootstrapping core js code we ship in the SDK itself so that the polyfills are required only once at startup.    Pros:  - potential speed boost when making use of polyfills by only loading them once (though also a potential startup perf hit!)  - make use of polyfills in our core js bootstrap code  - remove special polyfill copying done in node-titanium-sdk during app builds    Cons:  - shipping polyfills twice in built SDK right now (under node-titanium-sdk and in the bootstrap code) - can be fixed by removing from node-titanium-sdk  - no gain (but instead a perf hit!) if these polyfills are't actually being used",Improvement,Medium,Closed,"2019-01-15 17:38:04","2019-01-15 17:38:04",13
"The Titanium SDK ","Hyperloop: Android app using hyperloop 4.0.0 hangs on splash when built with 7.5.0.GA & latest 7.5.1 ","h5.Steps to reproduce:  1. Create a default app having hyperloop 4.0.0.  2. Build for Android device/emulator.    h5.Actual result:  1. App is stuck at splash at launch & we do see this error in logcat:      h5.Expected result:  1. App should not be stuck on the splash screen & should launch fine.",Bug,Critical,Closed,"2019-01-15 00:18:32","2019-01-15 00:18:32",5
"The Titanium SDK ","Liveview: Autokill server after a period of time","h5.Description      It was suggested to autokill the liveview server if we receive no input for a certain amount of time.    https://github.com/<USER>liveview/pull/119",Improvement,Medium,Closed,"2019-01-14 20:14:39","2019-01-14 20:14:39",1
"The Titanium SDK ","Android: Liveview closes file/event server process after the first app reload & stops working","NOTE: To make liveview work with 8.0.0 use latest studio 5.1.2 from <USER>    h5.Steps to reproduce:  1. Create a default app.  2. Enable liveview.  3. Build for android device/emulator.  4. After the app launches make changes to initiate app reload.  5. Make another change & again initiate app reload.    h5.Actual results:  1. Liveview closes the file/event server <USER>& stops working :    2. I also get these warnings:      h5.Expected result:  1. Liveview should not close the file/event server & work as expected.    Additional logs:  ",Bug,None,Closed,"2019-01-14 19:18:30","2019-01-14 19:18:30",1
"The Titanium SDK ","Android: How to achieve a service that can continue to run at regular intervals, even if the device goes to sleep.","Hello!  What we are trying to achieve is a service that can continue to run at regular intervals, even if the device goes to sleep. If calling foregroundNotify is meant to make the service run as a foreground service and foreground services are meant to behave like this, then why is this is not working?  What we are trying to achieve is an app that can regularly poll a user's position (using location services), even if the app is in the background.  Test Code:  {code}  function monitorLocation() {   function start() {    Ti.Geolocation.accuracy = Ti.Geolocation.ACCURACY_HIGH;    Ti.Geolocation.addEventListener(location, function(e) {     Ti.Media.vibrate();     Ti.API.info(@@@ Location Received:  + JSON.stringify(e.coords));    });   }   var hasPermission = Ti.Geolocation     .hasLocationPermissions(Ti.Geolocation.AUTHORIZATION_WHEN_IN_USE);   if (!hasPermission) {    Ti.Geolocation.requestLocationPermissions(      Ti.Geolocation.AUTHORIZATION_WHEN_IN_USE, function(e) {       if (e.success) {        start();       }      });   } else {    start();   }  }    var SECONDS = 20;    var intent = Ti.Android.createServiceIntent({   url : 'Service.js'  });  intent.putExtra('interval', SECONDS * 1000);  var service = Ti.Android.createService(intent);    service.start();  var window = Ti.UI.createWindow();  window.addEventListener(open, function(e) {   monitorLocation();  });    window.addEventListener(open, function(e) {   const forPermissions = [ 'android.permission.FOREGROUND_SERVICE' ];   Ti.Android.requestPermissions(forPermissions, function(e) {    if (e.success) {     Ti.API.info('SUCCESS');    } else {     Ti.API.info('ERROR: ' + e.error);    }   });  });    window.open();  {code}  Service.js  {code}  Ti.API.info(@@@ Service started.);    // Gets an intent used to resume the app if running in the background.  function getAppResumeIntent() {   var intent = Ti.App.Android.launchIntent;   if (!intent) {    intent = Ti.Android.createIntent({});   }   return intent;  }    // Put this service into the foreground state.  var notificationId = 123;  Ti.Android.currentService.foregroundNotify(notificationId, Ti.Android.createNotification({   contentTitle: Foreground Service,   contentText: Content Text,   contentIntent: Ti.Android.createPendingIntent({    // Using the launch intent will resume the app when tapped.    intent: getAppResumeIntent(),   }),  }));  {code}  {code:xml}    <android xmlns:android=http://schemas.android.com/apk/res/android>          <services>     <service type=interval url=Service.js/>    </services>    <manifest>           <uses-permission android:name=android.permission.FOREGROUND_SERVICE/>          </manifest>      </android>  {code}    On running this app, sure enough, it will consistency poll every 20 seconds as expected.  However, if you unplug the device (no longer being charged) and leave it unattended for 5 minutes, you will find that the polling stops almost as soon as the device goes to sleep. You can see this even with your supplied logic because a new notification titled Foreground Service should be received / updated every 20 seconds but you will find that it won't until you wake the device again (sending a unique notificationId may help to see multiple notifications rather than the 1 being overridden every time).    Basically, what I'm saying is we are experiencing the exact same issue on our application in that the service (doesn’t seem to matter if it’s a 'started' / 'bound 'or 'foreground' service) seems to simply stop processing when the device goes to sleep and will only start again when the device wakes up. THIS IS ONLY SEEN WHEN THE DEVICE IS NOT CONNETED TO A POWER SOURCE E.G. CONNETED TO A COMPUTER TO DEBUG.    *Note*:   On looking at previous posted solutions, I have seen some people saying to use a local notification with a wake lock (see ticket TIMOB-24629) or by using something known as Ti.Android.currentService.foregroundNotify (see ticket [TIMOB-16066|https://jira.<USER>org/browse/TIMOB-16066]) but both solutions don't appear to have any official documentation as to how to fully implement.    Note: Test Devices android 8 ","New Feature",None,Closed,"2019-01-14 13:13:14","2019-01-14 13:13:14",0
"The Titanium SDK ","Android: ListView no longer applying default row height","*Summary:*  {{ListView}} rows are supposed to have a default height if the template doesn't have one. On Android, the default height used to be {{45dp}} (assigned [here|https://github.com/<USER>titanium_mobile/blob/master/android/modules/ui/src/java/ti/modules/titanium/ui/widget/listview/TiDefaultListViewTemplate.java#L90]). As of Titanium 8.0.0, the default height is no longer being applied and the rows are auto-sizing to fit the height of the row's contents instead.    *Steps to reproduce:*  # Build and run the below code on Android.  # Notice that the rows just-fit the height of the row text. (This is the problem.)        *Result:*   !ListView-bad.png|thumbnail!     *Expected Result:*  This is how it used to work in Titanium 7.x.x.   !ListView-good.png|thumbnail!     *Note:*  We can't solve this issue by setting a min height to the row's root layout. While that would work, Titanium app developers have spoken out in the past that they don't want this behavior as can be seen in [TIMOB-19812]. We removed the min height as of Titanium 6.0.0 and we need to keep this behavior. But it's okay to apply a default height if one was not specified.  ",Bug,High,Closed,"2019-01-12 04:53:53","2019-01-12 04:53:53",3
"The Titanium SDK ","Android: TabGroup tabsBackgroundSelectedColor property is ignored","*Summary:*  Titanium documents that Android (and Windows) {{TabGroup}} supports a [tabsBackgroundSelectedColor|https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TabGroup-property-tabsBackgroundSelectedColor] property which sets the background color of the currently selected tab. This property is ignored on Titanium 6.0.0 and newer versions. (It might have stopped working before 6.0.0; have not confirmed.)    *Steps to reproduce:*  # Build and run the below code on Android.  # Notice that the selected tab's background color is not red.        *Result:*   !TabGroup-bad.png|thumbnail!     *Expected Result:*   !TabGroup-good.png|thumbnail!   ",Bug,Low,Closed,"2019-01-11 01:03:15","2019-01-11 01:03:15",8
"The Titanium SDK ","Android: TabGroup tabsBackgroundColor property ignored when landscape","*Summary:*  {{TabGroup}} property tabsBackgroundColor will only apply the color to the top tab bar's background when the app is shown in portrait orientation. When landscape, the color is ignored and will use the ActionBar's background color instead.    Not that this is because the tab bar is moved inside of the ActionBar when landscape. The work-around is to set the ActionBar's primaryColor via an XML theme instead. Also, note that implementing tab bars via an ActionBar is considered deprecated as of Android 5.0 as well.    *Steps to reproduce:*  # Build and run the below code on Android.  # Hold the device portrait.  # Notice that the top tab bar's background color is red. (This is good.)  # Rotate to landscape.  # Notice top tab bar is dark gray. (This is the issue.)        *Result:*   !TabGroupPortrait-Good.png|thumbnail!  !TabGroupLandscape-Bad.png|thumbnail!     *Expected Result:*   !TabGroupPortrait-Good.png|thumbnail!  !TabGroupLandscape-Good.png|thumbnail!   ",Bug,Medium,Closed,"2019-01-10 23:36:00","2019-01-10 23:36:00",8
"The Titanium SDK ","iOS: Ti.App._restart() crashes application","h5.Description    Calling the hidden {{Ti.App._restart();}} method on iOS crashes with the below, this is bad as it's used in liveview to restart the app.        h5.Steps to reproduce    1. Add the code below to and app.js    2. Click the window    h5.Actual    Above crash    h5.Expected    App should restart back to the clean state",Bug,None,Closed,"2019-01-08 16:44:11","2019-01-08 16:44:11",2
"The Titanium SDK ","LiveView: Transpilation does not work if not set in tiapp","h5.Description    LiveView pulls whether it should transpile from the tiapp which was fine while it was opt-in (but it was still a bad thing), now it's opt-out the method needs to be updated.    h5.Steps to reproduce    1. Run kitchensink-v2 with liveview and transpile removed from the tiapp to ios (you'll probably hit TIMOB-26649, just follow the workaround)    h5.Actual  Error like below due to not transpiling      h5.Expected    No error",Bug,High,Closed,"2019-01-08 15:17:21","2019-01-08 15:17:21",5
"The Titanium SDK ","TiAPI: Add Ti.App started event","*Summary:*  Add {{Ti.App}} event started to be fired just after the app.js or alloy.js has been executed.    *Reason:*  Native startup related events need to be deferred until after the app.js or alloy.js has had a chance to set up listeners for them. A started event is the clue needed to determine when this happens.    This is especially needed once Titanium starts displaying JavaScript bootstrap UI, which is a script which prevents the app.js from being loaded until the bootstrap finishes its job. This is something we plan on doing in the near future with Google Play Services to ensure it is installed/enabled before proceeding to load the rest of the app.    *Note:*  This feature was already implemented in Titanium 8.0.0 by [TIMOB-26075] via the code change [here|https://github.com/<USER>titanium_mobile/commit/b2b3e328bd18ef0a7e7bed4d5c530abdd881ab81#diff-722bd9f159d5a9feed5efb028c22ab04]. We just need to document it.  ","New Feature",Medium,Closed,"2019-01-08 03:39:49","2019-01-08 03:39:49",1
"The Titanium SDK ","Windows: Make HAL more lightweight"," HAL is heavy weight framework that is not quite efficient. We might be able to make it more lightweight.",Improvement,High,Closed,"2019-01-08 01:12:02","2019-01-08 01:12:02",13
"The Titanium SDK ","Windows: Optimize WinRT API calls","Passing WinRT boundaries are horribly slow. We want to eliminate the calls as much as possible.",Improvement,High,Open,"2019-01-08 01:10:45","2019-01-08 01:10:45",13
"The Titanium SDK ","Windows: Optimize UI rendering calls","Optimize UI rendering calls in our layout engine. ",Improvement,High,Closed,"2019-01-08 01:09:47","2019-01-08 01:09:47",13
"The Titanium SDK ","Windows: Runtime Performance Improvement","Peformance has been the issue on Windows for a long time. From what I observed, some basic JavaScript operations (like calling constructor, accessing properties and functions) against Titanium proxy objects are simply slow. For instance, creating 200 proxy objects on Windows (Titanium 7.4.0.GA) takes about 2 seconds on Windows locally for me.        We might be able to gradually improve performance by fixing following areas:    * UI rendering engine ... I expect there could be some redundant rendering calls that can be optimized.  * Optimize WinRT API call ... Passing WinRT boundaries are horribly slow. We want to eliminate the calls as much as we can  * HAL ... It is heavy weight framework that is not quite efficient. We might be able to make it more lightweight.  ",Epic,High,Open,"2019-01-08 01:03:11","2019-01-08 01:03:11",23
"The Titanium SDK ","Windows: TabGroup does not fire open/close events","Our TabGroup unit test suite has to skip a number of tests on Windows due to lack of firing key events like open, close, focus, blur. We should be firing those events for TabGroups (and Tabs)!",Bug,Critical,Closed,"2019-01-04 16:34:16","2019-01-04 16:34:16",8
"The Titanium SDK ","Windows: Wrong height for TableViewRow with Label","The height of first TableView row is rendered too big compared to other rows when row has a Label with relative width (e.g. _80%_).        Expected: The height of first row should have same height with other rows.  ",Bug,Medium,Closed,"2019-01-04 05:02:59","2019-01-04 05:02:59",8
"The Titanium SDK ","iOS: Proxy objects created in timers aren't released properly","Simplest case (iOS): Create an extremely simple app which just opens a controller containing a ListView with a headerView and a View inside that, and then close that  controller again after a couple of seconds - the View inside the HeaderView is not destroyed / memory is not released, so the View remains, its proxy remains, the header proxy remains, the list proxy remains and the window proxy remains in memory... every time you reopen the controller the allocations grow until eventually the app freezes and refuses to respond.    [Sample app attached - 'assets' folder is empty, as they're just the standard assets in any new project created via studio and take up over 13Mb so won't fit on the ticket!]",Bug,Critical,Closed,"2018-12-19 11:10:01","2018-12-19 11:10:01",3
"The Titanium SDK ","Android: Allow Ti.Network.HTTPClient file parameter to be set to Ti.Filesystem.File object like iOS","*Summary:*  On Android, the {{Ti.Network.HTTPClient}} file property can only be set to a {{string}}.  On iOS, the file property can be set to a {{string}} or {{Ti.Filesystem.File}} object.    We should add {{File}} object support on Android for parity.    *Community PR:*  https://github.com/<USER>titanium_mobile/pull/10532  ",Improvement,Low,Closed,"2019-01-02 19:08:26","2019-01-02 19:08:26",3
"The Titanium SDK ","iOS: App rejected because of using NSAppleMusicUsageDescription key","Hi team,    my app was rejected 3 times because of using the Apple Music API. After some investigation I found out, that a previous version of my app was rejected because of [TIMOB-23925|https://jira.<USER>org/browse/TIMOB-23925]    After adding _*<key> NSAppleMusicUsageDescription</key>*_ in the tiapp.xml with an description text, my app now is rejected because of using the api but missing controls.    It seems, that Apple does not longer allow to define NSAppleMusicUsageDescription and after that NOT using the Music API.    I don't know what I can do now. I submitted the app several times, explicit describing, that I do not use the the music API, but it is rejected every time.    Please give me a hand",Bug,Critical,Closed,"2017-10-09 13:07:17","2017-10-09 13:07:17",8
"The Titanium SDK ","Android: Unnecessary default notification channel created when using a custom one","When using SDK 7.5.0.GA and targeting Android SDK version 26 there is a small issue with notifications.    In TIMOB-25864 forward compatibility was introduced to have a default channel in case apps target SDK version 26. This works perfect, apart from the fact that it now always creates this channel.    When using the (undocumented) 'channelId' as option in the createNotification after creating a custom notification channel this yields the expected result. You see a notification that belongs to the channel just created, but on top that you still see the warning:      This occurs with the example code of NotificationChannel when targeting SDK version 26: https://docs.<USER>com/platform/latest/#!/api/Titanium.Android.NotificationChannel    Expected result:  No default notification channel is created, when a custom notification channel is defined.",Bug,Critical,Closed,"2018-11-28 22:40:21","2018-11-28 22:40:21",3
"The Titanium SDK ","iOS: Un-deprecate Ti.UI.TabbedBar and deprecate Ti.UI.iOS.TabbedBar","*Summary:*  We're adding {{Ti.UI.TabbedBar}} support to Android for parity. See [TIMOB-25953].    iOS currently has {{Ti.UI.TabbedBar}} flagged as deprecated in favor of {{Ti.UI.iOS.TabbedBar}}. Since Android will be have this feature soon, we should un-deprecate {{Ti.UI.TabbedBar}} on iOS and deprecate the other.",Improvement,High,Closed,"2018-12-20 20:53:00","2018-12-20 20:53:00",3
"The Titanium SDK ","iOS: Application crashes on launch on iOS9","h5.Description    Running a default application to iOS 9 crashes on launch with the below (this isn't logged either fwiw). This looks to be down to the usage of {{const}}, if I change addBinding to be declared with {{var}} it works, if I enable transpilation it work. I will investigate this further as there is usage of const/let throughout the new os/path code so I assume they will error.        h5.Steps to reproduce    # Create a default application  # Build it for iOS 9 (sim or device",Bug,None,Closed,"2018-12-20 15:21:51","2018-12-20 15:21:51",5
"The Titanium SDK ","TiAPI: Create Node-compatible util module API","It'd be useful to create equivalents of some of the core Node modules in Titanium so that users could port/re-use node codebases on mobile devices. Some of the more common modules could map relatively easily to devices, and would be worth investigating.    https://nodejs.org/api/util.html","New Feature",Medium,Closed,"2018-12-19 19:42:31","2018-12-19 19:42:31",21
"The Titanium SDK ","TiAPI: Create Node-compatible assert module API","It'd be useful to create equivalents of some of the core Node modules in Titanium so that users could port/re-use node codebases on mobile devices. Some of the more common modules could map relatively easily to devices, and would be worth investigating.    https://nodejs.org/api/assert.html","New Feature",Medium,Closed,"2018-12-19 19:41:40","2018-12-19 19:41:40",8
"The Titanium SDK ","Windows: Ti.Locale.getString should ignore non-string default value","If the supplied default value is a non-string, we should now reject it and treat it as if no default fallback was given. If no default was given, the original key is returned when no corresponding value is found.        Expected: key should be returned.",Bug,Medium,Closed,"2018-12-19 03:20:38","2018-12-19 03:20:38",3
"The Titanium SDK ","Windows: Ti.Geolocation.lastGeolocation should return string","{{Ti.Geolocation.lastGeolocation}} should return string. On Windows, it returns object.        Expected: It should print {{string}}.  ",Bug,Medium,Closed,"2018-12-18 01:38:58","2018-12-18 01:38:58",3
"The Titanium SDK ","Android. TableViewRow bugs","Currently on Android TableViewRow:  # always returns zeroes for {{getRect}} method (and rect {{property}})  # does not grow in height beyond original size (but can shrink)      ",Bug,Critical,Closed,"2018-12-17 11:13:52","2018-12-17 11:13:52",5
"The Titanium SDK ","Support native modules in Karma Titanium Launcher","[karma-titanium-launcher|https://github.com/<USER>karma-titanium-launcher] currently supports testing for Apps and JS modules. Covering native modules is the last missing piece for a complete unit testing environment.    The workflow for unit testing of native modules should be as follows:  * Build the module for the current platform we are testing  * Create a temporary project serving as the test runner and integrate the built module into that project  * Run the test runner and spit out results  * Tests can be configured as usual with the Karma config. For example, tests for all platform can reside in {{<project-dir>/test}} with additional tests for each platform in the respective platform folder, i.e. {{<project-dir>/android/test}}.","New Feature",None,Closed,"2018-12-17 15:06:36","2018-12-17 15:06:36",5
"The Titanium SDK ","Hyperloop Android:  How to get access the views in the inflate  layout","Hello!  How to get access the views in the inflate layout on android hyperloop? We have a button in inflate layout and we want to set button text form our js file.    Test code :  {code}  var window = Titanium.UI.createWindow();    var OnValueChangeListener = require('android.widget.NumberPicker.OnValueChangeListener');  var OnClickListener = require('android.view.View.OnClickListener');  var Activity = require('android.app.Activity');  var Button = require('android.widget.Button');  var Context = require('android.content.Context');  var LinearLayout = require(android.widget.LinearLayout);  var Inflater = require('android.view.LayoutInflater');  // var numberOnclickListener =  // require('android.content.NumberPicker.OnClickListener');    var activity = new Activity(Ti.Android.currentActivity);  var layout = new LinearLayout(activity);    var viewLayout = new LinearLayout(activity);    var okButton = new Button(activity);  // var field = new Field();  var cancelButton = new Button(activity);    var inflater = Inflater.cast(activity.getApplicationContext().getSystemService(    Context.LAYOUT_INFLATER_SERVICE));    var resId = activity.getResources().getIdentifier('button', 'layout',    activity.getPackageName());  var view = inflater.inflate(resId, null);  // numberPicker1 = activity.getResources().getIdentifier(button, id,  // activity.getPackageName());  // numberPicker1.setMinValue(1);  // numberPicker1.setMaxValue(9);  var resid = Titanium.App.Android.R.id.cancelButtton;  // var id =  // Ti.Android.currentActivity.getIdentifier(Ti.Android.R.cancelButtton);  var myButton = new Button(view.findViewById(resid));  myButton.setText(Hello!);  window.add(view);    window.open();  {code}   Place it to the [app]/platform/android/res/layout/  {code:xml}  <?xml version=1.0 encoding=utf-8?>  <LinearLayout xmlns:android=http://schemas.android.com/apk/res/android xmlns:app=http://schemas.android.com/apk/res-auto xmlns:tools=http://schemas.android.com/tools android:layout_width=match_parent android:layout_height=match_parent android:orientation=vertical android:gravity=center_horizontal android:id=@+id/parent_view>   <LinearLayout android:id=@+id/numberPickerViews android:layout_width=wrap_content android:layout_height=wrap_content android:layout_gravity=center android:orientation=horizontal>    <NumberPicker android:id=@+id/numberPicker android:layout_width=wrap_content android:layout_height=wrap_content android:layout_gravity=center android:visibility=visible />    <NumberPicker android:id=@+id/numberPicker2 android:layout_width=wrap_content android:layout_height=wrap_content android:layout_gravity=center android:visibility=visible />    <NumberPicker android:id=@+id/numberPicker3 android:layout_width=wrap_content android:layout_height=wrap_content android:layout_gravity=center android:visibility=visible />   </LinearLayout>   <LinearLayout android:id=@+id/timeSetView android:layout_width=wrap_content android:layout_height=wrap_content android:layout_gravity=center android:orientation=horizontal>    <Button android:id=@+id/setButtton android:layout_width=wrap_content android:layout_height=wrap_content android:textColor=@android:color/holo_blue_light android:text=OK android:textAlignment=center_horizontal android:gravity=left android:textStyle=bold android:textAlignment=center />    <Button android:id=@+id/cancelButtton android:layout_width=wrap_content android:layout_height=wrap_content android:textColor=@android:color/holo_blue_light android:textStyle=bold android:gravity=right android:textAlignment=center />   </LinearLayout>  </LinearLayout>  {code}    Test Environment:  {code}  Operating System    Name                        = Microsoft Windows 10 Pro    Version                     = 10.0.17134    Architecture                = 32bit    # CPUs                      = 4    Memory                      = 17091956736  Node.js    Node.js Version             = 8.9.1    npm Version                 = 5.5.1  Titanium CLI    CLI Version                 = 5.1.1  Titanium SDK    SDK Version                 = 7.5.0.GA  {code}  Thanks ",Story,None,Closed,"2018-12-14 12:47:59","2018-12-14 12:47:59",1
"The Titanium SDK ","Windows: Ti.Locale.setLangauge result is delayed","In our unit tests, we attempt to change languages and ensure we end up pulling the correct translation strings. Windows behaves oddly in that the language does get changed immediately in our model, but it still pulls the translation strings from the old language for a little while.    So ~3 tests fail in order by using the wrong language's strings, and it appears to be using the previous test's language. I'm not sure if there's some caching going on, or overriding the language is really done async - or maybe when we ask for the ResourceLoader for the current view it's outdated because it needs to load async when primary language changes?",Bug,Medium,Closed,"2018-12-13 18:02:17","2018-12-13 18:02:17",5
"The Titanium SDK ","[LiveView] Unable to use LiveView with KitchenSink-v2","When trying to use liveView with KitchenSink the application throws the following error:      *Steps to reproduce*  # Download {{KitchenSink-v2}}  # Download the latest SDK version {{appc ti sdk install -b master -d}}  # In the project directory run the following command {{DEBUG=liveview:* appc run -p ios --liveview}}  # Above error is thrown in the console and an error can be seen in the iOS simulator     *Actual result*  Above error can be seen.    *Expected result*  Application should show no error and LiveView should work with KitchenSInk without any issues. ",Bug,Medium,Closed,"2018-12-13 14:00:39","2018-12-13 14:00:39",3
"The Titanium SDK ","Windows: ability to override global functions","Relates to https://github.com/<USER>HAL/pull/86 , https://github.com/<USER>titanium-mobile-mocha-suite/blob/master/Resources/timers.test.js#L170-L176 and https://github.com/<USER>titanium_mobile/blob/master/common/Resources/ti.internal/extensions/binding.js    We already modified this behavior on iOS to allow to override global functions like `setTimeout`, which is typical of an environment like Node and is assumed by some of the popular JS testing frameworks.    I also ran into issues in overriding the standard require function in an effort to introduce cross-platform JS implementations of node-compatible core modules.    iOS PR: <USER>titanium_mobile#10155  unit tests we're skipping on Windows due to this        Expected: `Overridden require` should be shown before requiring files.  ",Improvement,Medium,Closed,"2018-12-13 11:22:20","2018-12-13 11:22:20",3
"The Titanium SDK ","Android: Calling finish() on root splash screen activity should exit the app","*Summary:*  Calling {{Activity.finish()}} on the root splash screen activity should automatically close all child windows/activities and exit out of the app.    It should only work this way for the root activity. Finishing/closing an activity in the middle of the stack should not automatically close the child activities.    *Note:*  This is mostly needed for Titanium apps launched via the Java {{startActivityForResult()}} method. In this case, the Titanium developer must call the {{Activity.setResult()}} method on the root activity and exit out to respond to the other app with the result. You typically call {{Activity.finish()}} just after {{Activity.setResult()}} when following Google's examples.    *Steps to reproduce:*  # Build and run with the below code on Android.  # Tap on the Close button.  # Notice that the app does not exit out.      ",Improvement,Low,Closed,"2018-12-12 00:17:47","2018-12-12 00:17:47",3
"The Titanium SDK ","Android: Root Ti.Android.Activity intent property should be updated when newintent event is fired","*Summary:*  Currently, the root {{Ti.Android.Activity}} object's intent property never changes when a newintent event gets fired. The activity's intent property returns the intent that originally launched/created the activity.    We can improve the usability of the app's newintent and intent-filter handling if the root activity's intent property was updated to the same intent provided by the newintent event.    Note that {{Ti.App.Android}} provides a [launchIntent|https://docs.<USER>com/platform/latest/#!/api/Titanium.App.Android-property-launchIntent] property which already provides the intent used to launch/create the root activity. So, we're not losing anything by making this change.    Also, it's currently possible to miss the newintent event on app startup, before the app.js has a chance to set up a listener for it.      ",Improvement,High,Closed,"2018-12-08 05:53:09","2018-12-08 05:53:09",5
"The Titanium SDK ","Android: Add rootActivity property to Ti.Android module","*Summary:*  The {{Ti.Android}} module supports a currentActivity property. used to access the top-most activity displayed by the app.    We could improve the usability of the newintent event and intent-filter handling if we provided easy access to the app's root activity as well. This is because the root activity's is the one that's being updated when the native Java {{Activity.onNewIntent()}} method gets called. Currently, the only way to set up newintent handling is to do so before opening a {{Ti.UI.Window}}.    *Proposed Solution:*  Add a new rootActivity property to the {{Ti.Android}} module.  ","New Feature",Medium,Closed,"2018-12-08 05:39:50","2018-12-08 05:39:50",1
"The Titanium SDK ","Android: Remove deprecated newIntent event in favor of newintent","*Summary:*  The {{Ti.Android.Activity}} object currently supports events newIntent and newintent. The newIntent event was deprecated in the past in favor of newintent with a lower-case 'i'. We should remove it in Titanium 8.0.0.          *Note:*  Ideally, we should log a warning when JS code attempts to add a listener to the deprecated newIntent event to avoid confusion/tech-support issues.",Improvement,None,Closed,"2018-12-08 04:51:37","2018-12-08 04:51:37",1
"The Titanium SDK ","Android: Change min supported version to Android 4.4 (API Level 19)","In Titanium 8.0.0, we need to bump up the minimum Android OS version supported...  *From:* Android 4.1 (API Level 16)  *To:* Android 4.4 (API Level 19)    The minSdkVersion in Titanium SDK's package.json needs to be changed here.  https://github.com/<USER>titanium_mobile/blob/master/android/package.json    Titanium's AndroidManefest.xml template will automatically pull the minSdkVersion from the above mentioned package.json.  ",Improvement,Critical,Closed,"2018-12-06 00:21:10","2018-12-06 00:21:10",1
"The Titanium SDK ","Android: App sometimes crashes when backgrounded as of 7.5.0","App getting crashed, whenever app is in background.  Error description:       The following link will show the apm from dashboard:   * https://platform.axway.com/#/app.service/apm/5af9ddd60f0e5961bf7cd0d5 or   * https://app.crittercism.com/developers/crash-details/44567a3b3cfe456e8577fb10b74a469c00555300/e30ecfa1fcab9675#period=P14D&appVersion=5.6.7     The app was showing no such crashes with SDK 7.4.1.GA, Something has changed in SDK 7.5.0.GA that is making the app crash. There are like 100s of crashes which were never there with 7.4.1.GA.    *Attachments:*  I've added 2 screenshots of crash & appc ti setup check  command log.   ",Bug,Critical,Closed,"2018-12-05 21:33:01","2018-12-05 21:33:01",5
"The Titanium SDK ","Android: image from camera gets rotated to 90 degree ","Hello!  I'm trying to take an image from the camera and then save it to the image view or post it to my server for Android. The problem is when I take the image it gets rotated to 90 degrees.    Test Code:      Tets Environment:      Please take a look on attached screenshot. Also note, that front and back facing cameras rotate the image different ways          Thanks   ",Bug,None,Closed,"2018-12-05 17:02:10","2018-12-05 17:02:10",1
"The Titanium SDK ","ScrollView: toImage() not taking complete screenshot  of scrollview","Hello!  I have a scrollview added on window, while taking the screenshot of scrollview, it takes toImage() of the area that is visible on the window, but not of full scrollview, how I can overcome this issue ?    while clicking on first window scrollview, image is displayed in next window scrollview, you will notice its not taking toImage() of complete scrollview, as its not displaying in 2 window.    Test Environment:      Thanks   ",Story,Low,Closed,"2018-12-05 12:32:18","2018-12-05 12:32:18",5
"The Titanium SDK ","Android: While updating listview, lable having attribute string goes disappear 7.5.0.GA","*Issue Overview:*  Issue is while updating listview, lable having attribute string goes disappear (Refer to the attached screenshot). This doesn't happen on ti sdk 7.4.0.GA.     *Steps to reproduce:*  1. Run the test code using sdk 7.5.0.GA  2. Click text Manzana  3. Observe that the attributed string Have you tried hyperloop1 yet goes disappear.  Now, run the test code using 7.4.0.GA and follow the steps again. Observe that, on 7.4.0.GA, the attributed string does not disappear.        ",Bug,None,Closed,"2018-12-04 12:23:18","2018-12-04 12:23:18",0
"The Titanium SDK ","Android: Infinite focus/blur loop for TextField within TableView on Huawei Honor 10 device","*Steps to reproduce*  # Run the attached app.js on Huawei Honor 10 device (Huawei P20 probably works too)  # Tap button Open TableView  # Select the first TextField  # The text field is focused and blurred in an infinite loop    A similar behavior is seen within a ListView (test with second button). The keyboard flickers a few times and then it is OK.  The behavior can't be seen within a ScrollView (third button) or a plain window (fourth button).    See attached screen recording for demo of bug.    *Environment*  Huawei Honor 10  Android 8.1  Titanium SDK 7.3.1.v20180906085249",Bug,Critical,Closed,"2018-09-24 13:24:32","2018-09-24 13:24:32",0
"The Titanium SDK ","node-ios-device: Add Node.js 11 support","node-ios-device needs to add support for module API version 64. This only affects the build scripts. The node-ios-device user code does not need to be changed.    After the module API 64 has been added to the build scripts, node-ios-device must be built locally and then manually upload the binary to S3. There will be no new resulting npm package.",Improvement,Medium,Closed,"2018-11-29 17:51:41","2018-11-29 17:51:41",5
"The Titanium SDK ","Babel minify can error and prevent application from building","I encountered an interesting error when attempting to build a test case:    {code:js}  const win = Ti.UI.createWindow({ backgroundColor: 'gray', layout: 'vertical' });  const btn_js = Ti.UI.createButton({ title: 'JAVASCRIPT' });  const btn_native = Ti.UI.createButton({ title: 'NATIVE' });    btn_js.addEventListener('click', (e) => {      const object = {};      console.log(object.test.crash);  });    btn_native.addEventListener('click', (e) => {      Ti.Geolocation.accuracy = {};  });    win.add([ Ti.UI.createView({ height: 80 }), btn_js, btn_native ]);  win.open();    /*var worker = require('ti.worker');    var window = Ti.UI.createWindow({    backgroundColor: 'white',  });    var view = Ti.UI.createView({    backgroundColor: 'white',    top: 20  });    var label1 = Ti.UI.createLabel({    text: 'Calculating prime',    width: Ti.UI.FILL,    height: Ti.UI.FIT,    textAlign: 'center',    color: 'red',    top: 10  });    var label2 = Ti.UI.createLabel({    text: 'Calculating prime',    width: Ti.UI.FILL,    height: Ti.UI.FIT,    textAlign: 'center',    color: 'green',    top: 40  });    var label3 = Ti.UI.createLabel({    text: 'Calculating prime',    width: Ti.UI.FILL,    height: Ti.UI.FIT,    textAlign: 'center',    color: 'blue',    top: 70  });    var button = Ti.UI.createButton({    title: 'Terminate',    width: Ti.UI.FIT,    height: Ti.UI.FIT,    top: 100  });    window.add(view);  view.add(label1);  view.add(label2);  view.add(label3);  view.add(button);  window.open();    var thread1 = worker.createWorker('prime.js');    thread1.addEventListener('message', function(event) {    label1.text = event.data;  });    /*  var thread2 = worker.createWorker('prime.js');    thread2.addEventListener('message', function(event) {    label2.text = event.data;  });    var thread3 = worker.createWorker('prime.js');    thread3.addEventListener('message', function(event) {    label3.text = event.data;  });    thread1.addEventListener('terminated', function() {    label1.text = 'Terminated';  });    thread2.addEventListener('terminated', function() {    label2.text = 'Terminated';  });    thread3.addEventListener('terminated', function() {    label3.text = 'Terminated';  });    button.addEventListener('click', function() {    thread1.terminate();    thread2.terminate();    thread3.terminate();  });  */    [INFO]  Processing JavaScript files  [ERROR] Cannot read property 'isPure' of null    appc run -p android -T device  {code}    And resolves itself when I comment out the {{opts.minify}} condition block in {{jsanalyze.js}}",Bug,High,Closed,"2018-11-29 00:22:23","2018-11-29 00:22:23",5
"The Titanium SDK ","Issues setting up Titanium with Android","There seems to be some major issues with getting the latest version of Titanium to work with Android.    When running {{appc ti info}} command, the Android section says:            *Issue 1: SDK Platform Tools*  Titanium requires SDK Platform Tools for 27.x, as 28.x is not supported yet. The issue is that Android Studio does not allow you to pick and choose which Platform tool version you can use and automatically installs the latest version (unlike SDK versions). This problem can be solved by installing it manually using:    http://dl-ssl.google.com/android/repository/platform-tools_r27.0.1-windows.zip    and replacing:    C:\Users\yourname\AppData\Local\Android\sdk\platform-tools    But there is no mention of this in the docs. In fact the docs look very out of date:  https://wiki.<USER>org/display/guides2/Installing+the+Android+SDK#InstallingtheAndroidSDK-ConfiguringtheCLI    Better yet, it may also be a good idea to update Titanium platform to use 28.x.    *Issue 2: Incorrect Build tool*  I was really confused by this issue as I don't even have 23.x installed. I had 26.x and 27.x installed. I found out it was because I set my build version on the config  as 23 using the CLI some time ago. So the solution was:    {{appc ti config -r android.buildTools.selectedVersion}}    A clearer message would help a lot.    *Issue 3: android executable not found*  After I fixed the above 2 issues, {{appc ti info}} gave no more issues on the Android section.    However, I then ran {{appc ti setup android}} and went on check.    The Android section had all ticks except for the following:    {{×  android            android executable not found; please reinstall Android SDK}}    I found that this should not be shown as the tool is deprecated was originally posted here more than a year back:  https://jira.<USER>org/browse/TIMOB-24891",Bug,Critical,Closed,"2018-08-24 21:16:36","2018-08-24 21:16:36",0
"The Titanium SDK ","Android: Cannot apply theme with windowTranslucentNavigation or windowTranslucentStatus to splash screen as of 7.5.0","*Summary:*  As of Titanium 7.5.0, a custom theme set up with {{windowTranslucentNavigation}} or {{windowTranslucentStatus}} will be undone when applied to the splash screen activity.    *Steps to reproduce:*  # Create a Classic app named SplashTest.  # Set up a blank app.js as shown below.  # Add the below my_themes.xml file under folder: {{./platform/android/res/values}}  # Set up tiapp.xml with the below.  # Build and run on Android.  # On app startup, notice that top status bar and bottom navigation bar are briefly displayed semi-transparent... but then become opaque. (The bug is they're not supposed to turn opaque.)  # Notice that the following warning gets logged.  {{You cannot use a translucent status bar or navigation bar unless you set the window's 'extendSafeArea' property to true.}}    {{app.js}}      {{./platform/android/res/values/my_themes.xml}}      {{tiapp.xml}}      ",Bug,Medium,Closed,"2018-11-28 04:06:29","2018-11-28 04:06:29",5
"The Titanium SDK ","iOS: Add allowTranscoding option to Ti.Media.openPhotoGallery()","*Summary:*  When selecting a video from the gallery, iOS will transcode/convert the selected video by default and return the newly formatted video instead. This can cause a very long delay if the video is large.    *Solution:*  Add an iOS-only allowTranscoding option for our {{Ti.Media.openPhotoGallery()}} method, when set {{false}}, will return the selected video as-is without transcoding it. This will solve the long delay issue.        *Note:*  There is no equivalent to this on Android, which always returns a reference to the video as-is. So, this is an iOS only feature.    *Native Implementation Details:*  Add this code at line 1746. I can provide a PR  ","New Feature",Critical,Closed,"2018-11-26 14:31:32","2018-11-26 14:31:32",5
"The Titanium SDK ","CLI: Prompted for ios code base type when creating an android module","H5.Description    When creating a module for a non-iOS platform, I'm still prompted for the code base type, this prompt should only show if the platforms includes ios    h5.Steps to reproduce    1. Run {{ti create --log-level trace --name foobarmodule --force --type module --platforms android --id com.foo}}    h5.Actual    Prompted for the code base type    h5.Expected    No prompt for code base type",Bug,Medium,Closed,"2018-11-26 13:35:25","2018-11-26 13:35:25",3
"The Titanium SDK ","CLI: Unable to create module using latest the build from Master ","When creating a module the platform folders do not get created    _The below is for iOS but is relevant for all platforms_    *Test steps:*  # Open Appc Studio  # Create a new module (File -> New -> Mobile App project)  # When creating a module select the latest SDK from master (8.0.0.v20181121114345)  # Open project and check if iOS folder has been created    *Actual result*  iOS folder can not be seen once a new module has been 'created'.    *Expected result*   iOS folder should be created when creating a new module.",Bug,High,Closed,"2018-11-26 11:02:35","2018-11-26 11:02:35",3
"The Titanium SDK ","iOS: Exception when canceling local notifications with removePendingNotifications","I'm trying to cancel local iOS notifications with Ti.App.iOS.UserNotificationCenter.removePendingNotifications(notificationsToCancel), but whenever I try to call this with an array of notifications the app crashes.    I did a little bit of research and it seems the ENSURE_TYPE on line 109 in TiAppiOSUserNotificationCenterProxy.m throws an exception. But I'm getting the notifications from getPendingNotifications so they should be ok right?    Example (press schedule and then cancel right afterwards to get the exception):        Exception:          ",Bug,Low,Closed,"2018-11-21 14:27:45","2018-11-21 14:27:45",1
"The Titanium SDK ","iOS: Animation never rotates counter-clockwise when set to -180 degrees","*Summary:*  When attempting to rotate a view via an animation set to {{-180}}, it will wrongly rotate clockwise instead of counter-clockwise. Only {{180}} should rotate clockwise.    Also, when setting up animation property autoreverse to {{true} and with a rotation of {{180}}, the initial animation will correctly rotate clockwise, but incorrectly autoreverse clockwise as well (doing a 360) instead of rotating backwards counter-clockwise. If repeat is set, then this autoreverse rotation bug will only happen on the final rotation. All of the other auto-reversed rotation will rotate in the correct direction.    This is not an issue on Android. This is only an iOS issue.    *Steps to reproduce:*  # Build and run the below code on iOS.  # Note that blue square rotate clockwise instead of counter-clockwise.        *Note:*  This is an issue on Apple's end. Their animation feature will always take the shortest route to the animation's destination. Since the rotation range is -180 to 180 on iOS, this becomes a boundary issue and iOS will always choose to rotate clockwise instead of counter-clockwise.    *Work-around:*  Instead of setting rotation to {{-180}}, set it to {{-180 + 0.01}} instead. This makes counter-clockwise the shortest route. This appear to be the only solution natively as well when using a transformation matrix for rotation.  ",Bug,Low,Closed,"2018-11-22 05:08:14","2018-11-22 05:08:14",9
"The Titanium SDK ","Windows: Support Windows 10 SDK 10.0.17763.0","According to what we've been seeing in TIMOB-26583, the [Windows 10 SDK 10.0.17763.0|https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk] provides new toolset with [MSIX packaging|https://techcommunity.microsoft.com/t5/MSIX/ct-p/MSIX] support. Under some circumstances MSBuild tries to build msix package but it fails. We might be able to package appx using 10.0.17763.0 still.  ",Improvement,High,Resolved,"2018-11-22 00:23:07","2018-11-22 00:23:07",8
"The Titanium SDK ","Babel throwing an error on build ","Babel is throwing an error on build stopping building on a device.    *Error*      *Steps to reproduce*  # Create an application {{appc new}}  # Build to device {{appc run -p ios -T device}}      ",Bug,High,Closed,"2018-11-21 11:11:30","2018-11-21 11:11:30",3
"The Titanium SDK ","iOS: Animation curve ease-in/ease-out does not auto-reverse correctly","*Summary:*  A view animation with autoreverse set to {{true}} and a repeat of {{0}} (the default) will not correctly reverse the animation when using curve {{Ti.UI.ANIMATION_CURVE_EASE_IN}} or {{Ti.UI.ANIMATION_CURVE_EASE_OUT}}. The animation incorrectly uses the same curve when performing the reverse animation.    If repeat is set to {{1}} or higher, this issue will only happen on the final/last repeated reverse animation. This issue won't happen on prior repeated animations.    *Expected Behavior:*  When the curve is set to {{Ti.UI.ANIMATION_CURVE_EASE_IN}}, then the reverse animation curve is supposed to be {{Ti.UI.ANIMATION_CURVE_EASE_OUT}}.    When the curve is set to {{Ti.UI.ANIMATION_CURVE_EASE_OUT}}, then the reverse animation curve is supposed to be {{Ti.UI.ANIMATION_CURVE_EASE_IN}}.    The above is how it works in HTML5 reverse animation. See...  https://developer.mozilla.org/en-US/docs/Web/CSS/animation-direction#Syntax    *Cause:*  Titanium's iOS code generates its own reverse animation to work-around an Apple bug. The issue is that the reverse animation uses the same curve as the forward animation. This is where the reverse curve should be applied instead.  https://github.com/<USER>titanium_mobile/blob/master/iphone/TitaniumKit/TitaniumKit/Sources/API/TiAnimation.m#L412  ",Bug,Medium,Closed,"2018-11-21 02:11:03","2018-11-21 02:11:03",3
"The Titanium SDK ","IOS: Build fails for simulator/device with SOASTA","*Steps to reproduce:*  1.Create a classic sample app    2.run against IOS device or emulator    *Expected:*  App should successfully built and installed on ios device  *Actual:*  Throws the following error  [TRACE] :  ld: symbol(s) not found for architecture x86_64  [TRACE] :  clang: error: linker command failed with exit code 1 (use -v to see invocation)  [ERROR] :  ** BUILD FAILED **  [ERROR] :  The following build commands failed:  [ERROR] :   Ld /Users/<USER>Documents/<USER>Studio_Workspace/Htest/build/iphone/build/Products/Debug-iphonesimulator/Htest.app/Htest normal x86_64  [ERROR] :  (1 failure)    ",Bug,Critical,Resolved,"2018-11-19 21:17:25","2018-11-19 21:17:25",5
"The Titanium SDK ","Android: Child view with touchEnabled false wrongly receives touch events if parent is touch enabled","*Summary:*  If a parent view's touchEnabled property is set {{true}}, its child view touchEnabled is set {{false}}, and then you tap on the child view... that child view will wrongly fire a touch/click event. The problem with this is that event will bubble to the parent view and its coordinates will be relative to the child, not the parent.    *Steps to reproduce:*  # Build and run the below code on Android.  # Touch and drag the blue square. (The square's touchEnabled property is set {{false}}.)  # If the square turns red, then it has wrongly fired a touch event.        *Cause:*  The Java touch/gesture event listeners in our {{TiUIView.java}} class are always listening. They fire an event if a JavaScript listener is set up on the view or any of its parent views by calling {{KrollProxy.hierarchyHasListener()}}. This is partly the issue.  https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/view/TiUIView.java    *Recommended Solution:*  Replace the {{KrollProxy.hierarchyHasListener()}} calls with {{KrollProxy.hasListener()}}. Also check if touch events are enabled by calling [View.isClickable()|https://developer.android.com/reference/android/view/View.html#isClickable()] which I +think+ will return {{false}} (we need to double check) when we set the touchEnabled property to false because changing that property ends up calling {{TiUIView.doSetClickable()}}.    *Work-around:*  Check the event's source property to see which view has fired this event. The above test code does this and you can simply return out of the listener if it doesn't reference the expected view.  ",Bug,Medium,Open,"2018-11-17 02:05:45","2018-11-17 02:05:45",5
"The Titanium SDK ","Android: ListView templates not compatible with native modules","ListView templates have a bug that prevents support for native modules.    {code:js}  var template = {      childTemplates: [          {               type: '<native-module-namespace>,               bindId: '',              properties: { ... }          }      ]  };  {code}",Bug,None,Closed,"2018-11-16 22:42:12","2018-11-16 22:42:12",3
"The Titanium SDK ","Windows: Ti.UI.ImageView's load event object has no state property","According to our docs and our unit test suite, the Ti.UI.ImageView {{load}} event should fire off with an object holding a {{state}} property whose values is either {{'image'}} or {{'images'}}, based on whether it's being fired after loading a single image from {{image}} property, or after loading a series of images from the {{images}} property.",Bug,Medium,Closed,"2018-11-16 19:45:42","2018-11-16 19:45:42",5
"The Titanium SDK ","Windows: Missing trailing separator for directory in Ti.Filesystem.File#nativePath","There are a number of parity issues with the implementation of Ti.Filesystem.File#getDirectoryListing() on Windows, which can be seen in the tests now skipped there:   https://github.com/<USER>titanium-mobile-mocha-suite/blob/master/Resources/ti.filesystem.file.test.js#L726-L746    Namely that:  - calling it for a file should return null  - calling for a directory that does not exist should return null (returns empty array right now)    The other test (can access resource directory files) may be failing due to Windows not appending a trailing separator while other platforms do? I tried with unix and windows separators and that didn't seem to fix it, so I don't think it's a separator mismatch issue.",Bug,Medium,Closed,"2018-11-16 19:37:37","2018-11-16 19:37:37",5
"The Titanium SDK ","Windows: ScrollView sizing incorrectly in a vertical layout","In our unit tests suite, the ti.ui.layout.test.js scrollViewWithSIZE test is failing on Windows with expected 24 to equal 50    https://github.com/<USER>titanium-mobile-mocha-suite/blob/master/Resources/ti.ui.layout.test.js#L1291    The test is now skipped on Windows.    It turns out this only happens when parent view is {{vertical}} layout.   As a side note, {{postlayout}} for {{ScrollView}} may be fired multiple times during layout and we should be testing latest value only.      ",Bug,Medium,Closed,"2018-11-16 19:30:25","2018-11-16 19:30:25",5
"The Titanium SDK ","Windows: Ti.Blob imageAs method parity","We've achieved parity between iOS and Android with the various Ti.Blob imageAs methods, and the results are much more consistent and make more sense visually.    The unit tests written as a result of that work now fail for Windows, which means we likely have parity issues there. I've since skipped the tests on windows.",Improvement,Medium,Open,"2018-11-16 19:26:45","2018-11-16 19:26:45",8
"The Titanium SDK ","Windows: Support async variants of Ti.Network.TCP #read and #write","We've added async variants for Android/iOS, but Windows does not yet support this - and is failing the unit test we wrote for it. The test has since been skipped on Windows.",Improvement,Medium,Closed,"2018-11-16 19:23:50","2018-11-16 19:23:50",8
"The Titanium SDK ","TiAPI: Implement set/clearImmediate","setImmediate and clearImmediate are *sort of* like setTimeout/clearTimeout, but are supposed to be run after current I/O event callbacks are done.    https://nodejs.org/api/timers.html#timers_setimmediate_callback_args    Basically this is roughly like setTimeout(callback, 0); as a first stab, but should be run **before** and timeout callbacks.    In effect, immediate, timers and ticks from <USER>nextTick are *sort of* like 3 separate priorities of timer queues, although at a lower level they have semantic/behavioral differences. ticks are right away and can cause infinite loops. immediate come next chance after I/O events callbacks. Then timers get fired when ready.",Improvement,Medium,Closed,"2018-11-16 16:52:45","2018-11-16 16:52:45",13
"The Titanium SDK ","TiAPI: Make Ti.Buffer Node-compatible with Node's Buffer type","We have our own Ti.Buffer type. To play nice with Node, we should see if we can't have it add/use a similar API so that can be used interchangeably.",Improvement,High,Closed,"2018-11-16 16:29:50","2018-11-16 16:29:50",13
"The Titanium SDK ","TiAPI: Global process object compatible with Node.js","Node has a top-level global {{<USER>} object which we should attempt to emulate to some degree. A large amount of it's API is not particularly relevant to us, but for compatibility reasons we should support/expose it and try to implement as much as we can that makes sense.    https://nodejs.org/api/<USER>html    Notable are:  - <USER>arch - equivalent to {{Ti.Platform.architecture}}  - <USER>cwd()  - <USER>debugPort  - <USER>hrtime([time])  - <USER>mainModule  - <USER>memoryUsage()  - <USER>nextTick(callback[, ...args])  - <USER>pid  - <USER>platform - Probably equivalent to {{Ti.Platform.name}}  - <USER>release  - <USER>setUncaughtExceptionCaptureCallback(fn)  - <USER>stderr  - <USER>stdin  - <USER>stdout  - <USER>title  - <USER>uptime()  - <USER>version - Equivalent to {{Ti.version}}  - <USER>versions  ","New Feature",High,Closed,"2018-11-16 16:12:35","2018-11-16 16:12:35",13
"The Titanium SDK ","Windows: Upgrade to Babel 7","https://github.com/<USER>titanium_mobile_windows/blob/master/cli/commands/_build/copy.js    This relies on Babel 6, we need to update this to support Babel 7.    The builds are failing since we removed Babel 6 dependencies https://github.com/<USER>node-titanium-sdk/commit/3cfe4346ee87b67fd7da89c2d75a525c588a7c93#diff-b9cfc7f2cdf78a7f4b91a753d10865a2",Bug,Critical,Closed,"2018-11-16 00:03:29","2018-11-16 00:03:29",5
"The Titanium SDK ","iOS: Add ability to remove previously added motion effects","I would like to expose a clearMotionEffects() method. We use the API exposed by this ticket but see some glitches when switching tabs. This is the natively, but requires some handling to remove the motion-effect on blur and re-add it on focus. Using this API will solve it.    This is based on the existing API exposed in TIMOB-25684.","New Feature",Medium,Closed,"2018-11-15 17:00:46","2018-11-15 17:00:46",5
"The Titanium SDK ","Windows: Building with hyperloop fails with traverse is not a function","h5.Description    Building hyperloop-examples with SDK 8 throws the following error. This is because hyperloop-examples is using the babel packages from within the SDK and these were removed in TIMOB-25650. The hyperloop hook should be fixed up to have its own dependencies        h5.Steps to reproduce    1. Build hyperloop-examples    h5.Actual    traverse is not a function is thrown    h5.Expected    No error, app should build just fine",Bug,High,Closed,"2018-11-15 13:39:08","2018-11-15 13:39:08",5
"The Titanium SDK ","Windows: Cannot find module 'babylon' error thrown on build","h5.Description    When building for windows the following error is thrown, this is because of the changes made in TIMOB-25650. We can remove this code though as it is a backwards compat thing for hyperloop 2.x        h5.Steps to reproduce    1. Build for Windows    h5.Actual    Above error thrown    h5.Expected    No error thrown",Bug,High,Closed,"2018-11-15 13:10:35","2018-11-15 13:10:35",5
"The Titanium SDK ","Windows: Remove deprecated Ti.UI.KEYBOARD_* constants in favor of TI.UI.KEYBOARD_TYPE_*","*Summary:*  The {{Ti.UI.KEYBOARD_\*}} type constants were deprecated in Titanium 6.0.0 in favor of our new {{Ti.UI.KEYBOARD_TYPE_\*}} constants. These deprecated constants should be removed in Titanium 8.0.0.    Constants to be removed...  * {{Ti.UI.KEYBOARD_ASCII}}  * {{Ti.UI.KEYBOARD_DECIMAL_PAD}}  * {{Ti.UI.KEYBOARD_DEFAULT}}  * {{Ti.UI.KEYBOARD_EMAIL}}  * {{Ti.UI.KEYBOARD_NAMEPHONE_PAD}}  * {{Ti.UI.KEYBOARD_NUMBERS_PUNCTUATION}}  * {{Ti.UI.KEYBOARD_NUMBER_PAD}}  * {{Ti.UI.KEYBOARD_PHONE_PAD}}  * {{Ti.UI.KEYBOARD_URL}}  * {{Ti.UI.KEYBOARD_APPEARANCE_ALERT}}    Above constants are to be replaced with...  * {{Ti.UI.KEYBOARD_TYPE_ASCII}}  * {{Ti.UI.KEYBOARD_TYPE_DECIMAL_PAD}}  * {{Ti.UI.KEYBOARD_TYPE_DEFAULT}}  * {{Ti.UI.KEYBOARD_TYPE_EMAIL}}  * {{Ti.UI.KEYBOARD_TYPE_NAMEPHONE_PAD}}  * {{Ti.UI.KEYBOARD_TYPE_NUMBERS_PUNCTUATION}}  * {{Ti.UI.KEYBOARD_TYPE_NUMBER_PAD}}  * {{Ti.UI.KEYBOARD_TYPE_PHONE_PAD}}  * {{Ti.UI.KEYBOARD_TYPE_URL}}  ",Improvement,High,Closed,"2018-11-15 00:41:47","2018-11-15 00:41:47",3
"The Titanium SDK ","Android: Remove deprecated Ti.UI.KEYBOARD_* constants in favor of TI.UI.KEYBOARD_TYPE_*","*Summary:*  The {{Ti.UI.KEYBOARD_\*}} type constants were deprecated in Titanium 6.0.0 in favor of our new {{Ti.UI.KEYBOARD_TYPE_\*}} constants. These deprecated constants should be removed in Titanium 8.0.0.    Constants to be removed...  * {{Ti.UI.KEYBOARD_ASCII}}  * {{Ti.UI.KEYBOARD_DECIMAL_PAD}}  * {{Ti.UI.KEYBOARD_DEFAULT}}  * {{Ti.UI.KEYBOARD_EMAIL}}  * {{Ti.UI.KEYBOARD_NAMEPHONE_PAD}}  * {{Ti.UI.KEYBOARD_NUMBERS_PUNCTUATION}}  * {{Ti.UI.KEYBOARD_NUMBER_PAD}}  * {{Ti.UI.KEYBOARD_PHONE_PAD}}  * {{Ti.UI.KEYBOARD_WEBSEARCH}}  * {{Ti.UI.KEYBOARD_TWITTER}}  * {{Ti.UI.KEYBOARD_URL}}    Above constants are to be replaced with...  * {{Ti.UI.KEYBOARD_TYPE_ASCII}}  * {{Ti.UI.KEYBOARD_TYPE_DECIMAL_PAD}}  * {{Ti.UI.KEYBOARD_TYPE_DEFAULT}}  * {{Ti.UI.KEYBOARD_TYPE_EMAIL}}  * {{Ti.UI.KEYBOARD_TYPE_NAMEPHONE_PAD}}  * {{Ti.UI.KEYBOARD_TYPE_NUMBERS_PUNCTUATION}}  * {{Ti.UI.KEYBOARD_TYPE_NUMBER_PAD}}  * {{Ti.UI.KEYBOARD_TYPE_PHONE_PAD}}  * {{Ti.UI.KEYBOARD_TYPE_WEBSEARCH}}  * {{Ti.UI.KEYBOARD_TYPE_TWITTER}}  * {{Ti.UI.KEYBOARD_TYPE_URL}}    *Note:*  We must also remove deprecated constant {{Ti.UI.KEYBOARD_APPEARANCE_ALERT}}. While this constant is only supported on iOS, it is currently defined on Android to avoid JavaScript runtime errors.  ",Improvement,High,Closed,"2018-11-14 22:12:34","2018-11-14 22:12:34",3
"The Titanium SDK ","iOS: App crash and missing events for local notifications","There are currently multiple issues around local notifications which either crash the app, do not trigger an event at all, or trigger the wrong event. This ticket is used to group other related tickets and fix those issues all in one go as they all interfere with each other.    *Issue 1* (AC-5993)  Scheduling local notification raises a unrecognized selector sent to instance exception when the app is in foreground when the notification triggers. This was already fixed in TIMOB-26513. However, local notifications shouldn't even try to trigger this method meaning our logic in UNNotificationCenter delegates is flawed and needs to be fixed.    *Issue 2* (AC-6013 & AC-6015)  Local notifications are not scheduled (or appear so because no notification will be fired).",Bug,Critical,Closed,"2018-11-14 13:21:02","2018-11-14 13:21:02",5
"The Titanium SDK ","iOS: Ti.Media.takeScreenshot is not working ","Ti.Media.takeScreenshot is not working working properly on iOS. On android, clicking on button its takes a screenshot, saved it to the gallery and displayed it to imageview properly. But on ios we are not getting the same behaviour.    *Test Code:*      *Test Environment:*          *Test steps:*    1. Create a classic project  2. Run the sample code on simulator  3. Click on button. We get the following:      *Console logs and output:*  See attachment section for screenshots    ",Bug,None,Resolved,"2018-11-14 10:47:54","2018-11-14 10:47:54",3
"The Titanium SDK ","TiAPI: Modify SDK JS files to not use deprecated property get/set methods","As of Titanium 8.0.0, Java property {{get}}/{{set}} methods are deprecated. Calling a property getter or setter method still works, but will log warnings like the below.      The Titanium SDK's core JavaScript files need to be updated to not use these deprecated methods so that warning do not get logged.  ",Improvement,High,Closed,"2018-11-14 03:41:30","2018-11-14 03:41:30",3
"The Titanium SDK ","Android: Broadcast receivers should be unregistered when exiting the app","*Summary:*  If you register a {{BroadcastReceiver}} and then back out of the app, the JavaScript runtime is kept alive due to the change we've made via [TIMOB-9831] so that the {{BroadcastReceiver}} JavaScript code can still function after exiting the app. The problem with this is if you re-launch the app after doing the above, you'll be stuck at the splash screen and the app.js won't be re-executed. The reason is because Titanium only supports running 1 JavaScript runtime at a time. You currently have to unregister the {{BroadcastReceiver}} before exiting the app to avoid this re-launch issue.    This is a design issue and needs to change.    We should revert the change made by [TIMOB-9831] and automatically unregister all broadcast receivers that were registered in JavaScript when backing out of the app.    If an app developer wants a broadcast receiver to keep running when backing out, then they should set up the root window's [exitOnClose|https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Window-property-exitOnClose] property to {{false}} so that the UI and broadcast receiver will continue to run in the background as shown in Work-Around 1 down below (or alternatively use Work-Around 2 solution). This also makes the app work more like iOS.    *Note:*  Android services has this same problem. See: [TIMOB-26538]    *Steps to reproduce:*  1. Build and run the below code on Android.  2. Back out of the app.  3. Re-launch the app.  4. Notice that you're stuck on the splash screen. _(This is the issue.)_        *Work-Around 1:*  For the 1st window you open, set it's [exitOnClose|https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Window-property-exitOnClose] property to {{false}} like the below. This prevents the back button from closing your root window and makes the app work more like iOS. It also allows the broadcast receiver to operate in the background without issue. This is the best solution.      *Work-Around 2:*  Override the root window's androidback event and use an intent to home-out of the app. This is similar to the work-around 1 solution where the root window is not closed and the broadcast receiver will continue to run in the background. Again, this makes your app effectively work like iOS.      *Work-Around 3:*  Unregister the broadcast receiver when the root window is being closed. This is best if you don't need to run it while in the background.    ",Bug,Medium,Closed,"2018-11-13 23:44:39","2018-11-13 23:44:39",7
"The Titanium SDK ","iOS: Cannot read property 'code' of undefined error thrown if log server connection times out","h5.Description    When checking the log server connection in the iOS build if the check times out then the following error is thrown. I'm unsure as to the actual reasons for why I ran into this, but you can easily reproduce by reducing the logserver wait time        h5.Steps to reproduce    1. Reduce the logserver wait time using {{appc ti config ios.logServerTestTimeout 1}}  2. Build an iOS app for simulator or device    h5.Actual    Error thrown like the above    h5.Expected    Error thrown should inform the user the real reason it errored ",Bug,None,Closed,"2018-11-13 13:19:02","2018-11-13 13:19:02",1
"The Titanium SDK ","Windows: Add support for file property to HTTPClient","*Test case:*      Null should only be shown for the first two buttons but it shown for all buttons unlike on Android. ",Bug,Medium,Closed,"2018-11-13 13:02:30","2018-11-13 13:02:30",5
"The Titanium SDK ","Windows: HTTPClient: Invalid Status Codes returned","GET request should be returning a status of 301 or 302; instead returns a status code of 200    *Test case*      *Actual result:*  Following is returned:      *Expected result:*  Following should be returned:      ",Bug,Medium,Closed,"2018-11-13 12:03:35","2018-11-13 12:03:35",5
"The Titanium SDK ","Android: Using global L() method for localization does not work if second argument is not supplied","If the {{L}} method does not receive a second parameter, the fallback string is not displayed if not supplied as a second argument. This works fine on iOS.    Example:  {code:js}  // Works  L('Hello world', 'Hello world');    // Does not work on Android, works on iOS  L('Hello world');  ",Bug,Critical,Closed,"2018-11-10 20:19:20","2018-11-10 20:19:20",8
"The Titanium SDK ","Windows: When using html in webView application closes ","When using the following test case the application crashes on Windows without throwing an error. (Works fine on Android and works fines on windows using 7.4.1.GA):      *Expected result*  Application should  show a selectBox.    *Actual result*  Application crashes without showing an error  ",Bug,High,Closed,"2018-11-09 17:16:25","2018-11-09 17:16:25",5
"The Titanium SDK ","Android: Label's default font size should be dp unless explicitly set","*Summary:*  Android's {{Ti.UI.Label}} is currently hard-coded to a font size of {{15}} using the tiapp.xml property's ti.ui.defaultunit. The problem with this is if you set the default unit to pixels (ie: {{px}}), then the label will default to 15px and be too small to read on high DPI devices. The label's default font size should be hard-coded to dp.    We don't have this issue with any of our other UI features such as {{Button}}, {{TextField}}, {{Picker}}, etc. All other UI elements use dp by default. Only our Android {{Label}} has this problem.    iOS does not have this problem.    *Steps to reproduce:*  # Create a Titanium classic app.  # Set up the tiapp.xml file's default unit to px (pixels) as shown below.  # Use the app.js below.  # Build and run on an Android device that is xxhdpi or higher.  # Notice that the text is very tiny. _(This is the bug.)_    tiapp.xml  {code:xml}  <ti:app xmlns:ti=http://ti.<USER>org>   <property name=ti.ui.defaultunit type=string>px</property>  </ti:app>  {code}    app.js  {code:javascript}  var window = Ti.UI.createWindow();  window.add(Ti.UI.createLabel({ text: Hello World }));  window.open();  {code}    *Android Results:*   !Android-dp.png|thumbnail!  !Android-px.png|thumbnail!     *iOS Results:*   !ios-dp.png|thumbnail!  !ios-px.png|thumbnail!     ",Bug,Low,Closed,"2018-11-09 04:02:33","2018-11-09 04:02:33",1
"The Titanium SDK ","Android: Services should be stopped when exiting the app","*Summary:*  If you start a service and then back out of the app, the JavaScript runtime is kept alive due to the change we've made via [TIMOB-9831] so that the JavaScript service code can still function. The problem with this is if you re-launch the app after doing the above, you'll be stuck at the splash screen and the app.js won't be re-executed. The reason is because Titanium only supports running 1 JavaScript runtime at a time. And we don't want to start a new JavaScript runtime instance since it wouldn't be able to communicate with the 1st runtime that is running the service... and we don't want the 2nd runtime to start a 2nd service instance.    This is a design issue and needs to change.    We should revert the change made by [TIMOB-9831] and stop all services when backing out of the app. If an app developer wants a service to keep running when backing out, then they should set up the root window's [exitOnClose|https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Window-property-exitOnClose] property to {{false}} so that the UI and service will continue to run in the background as shown in Work-Around 1 down below (or alternatively use Work-Around 2 solution). This also makes the app work more like iOS.    *Note:*  {{BroadcastReceiver}} has this same issue. If you don't unregister a {{BroadcastReceiver}} before exiting the app, then the next time you launch the app, you'll be stuck at the splash screen.    *Steps to reproduce:*  # Set up a Classic Titanium app using the below code an XML settings.  # Build and run on Android.  # Press the back button to exit the app.  # Re-launch the app.  # Notice that you're stuck on the splash screen. _(This is the issue.)_    tiapp.xml  {code:xml}  <?xml version=1.0 encoding=UTF-8?>  <ti:app xmlns:ti=http://ti.<USER>org>   <android xmlns:android=http://schemas.android.com/apk/res/android>    <services>     <service url=Service.js/>    </services>   </android>  </ti:app>  {code}    ./Resources/Service.js  {code:javascript}  Ti.API.info(@@@ Service started.);  {code}    ./Resources/app.js  {code:javascript}  // Start the service.  var intent = Ti.Android.createServiceIntent({   url: Service.js,  });  Ti.Android.startService(intent);    // Display the main window.  var window = Ti.UI.createWindow();  window.open();  {code}    *Work-Around 1:*  For the 1st window you open, set it's [exitOnClose|https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Window-property-exitOnClose] property to {{false}} like the below. This prevents the back button from closing your root window and makes the app work more like iOS. It also allows the service to operate in the background without issue. This is the best solution.  {code:javascript}  var window = Ti.UI.createWindow({   exitOnClose: false,  });  window.open();  {code}    *Work-Around 2:*  Override the root window's androidback event and use an intent to home-out of the app. This is similar to the work-around 1 solution where the root window is not closed and the service will continue to run in the background. Again, this makes your app effectively work like iOS.  {code:javascript}  var window = Ti.UI.createWindow();  window.addEventListener(androidback, function(e) {   // If the back key was press, cancel it and go to the home-screen instead.   var intent = Ti.Android.createIntent({    action: Ti.Android.ACTION_MAIN,   });   intent.addCategory(Ti.Android.CATEGORY_HOME);   intent.setFlags(Ti.Android.FLAG_ACTIVITY_NEW_TASK);   Ti.Android.currentActivity.startActivity(intent);  });  window.open();  {code}    *Work-Around 3:*  Stop the service when the root window is about to close and let everything terminate.  {code:javascript}  var intent = Ti.Android.createServiceIntent({   url: Service.js,  });  Ti.Android.startService(intent);    var window = Ti.UI.createWindow();  window.addEventListener(close, function(e) {   Ti.Android.stopService(intent);  });  window.open();  {code}  ",Bug,High,Closed,"2018-11-09 02:48:38","2018-11-09 02:48:38",7
"The Titanium SDK ","Android: Module AndroidManifest.xml <uses> elements overwrites tiapp.xml elements","h6. description   If I include the ti.map module in my project, and then define one or more <uses-feature> elements in the tiapp.xml, the first <uses-feature> element will not be added to the AndroidManifest.     h6.Steps to reproduce:     - create a new classic mobile app project   - add the following to tiapp.xml:     - build the app. Both <uses-feature> elements will be in the AndroidManifest.   - now add ti.map to the project   - build the app. android.hardware.camera.autofocus will not be in the AndroidManifest     Please see the AndroidManifest file for both.    h6.Cause  See [~<USER> explanation [here|https://jira.<USER>org/browse/TIMOB-26537?focusedCommentId=441381&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-441381]. He has isolated the issue. (Thanks <USER>)    h6.Note  This needs to be fixed so that we can solve another ti.map issue here: [MOD-2467]    ",Bug,High,Closed,"2016-06-01 21:42:16","2016-06-01 21:42:16",5
"The Titanium SDK ","Android: Fix analytics session events","- {{ti.foreground}} and {{ti.background}} events are being sent on every Activity {{onPause}} and {{onResume}}. This means every new window is classed as a new session, which is incorrect.  - The events need to be tied to the application lifecycle and not each activity lifecycle    *TEST CASE*  {code:js}  const win = Ti.UI.createWindow({ backgroundColor: 'blue' }),        btn = Ti.UI.createButton({ title: 'OPEN' });    btn.addEventListener('click', () => {      // this should not create a new session (not send ti.foreground)      Ti.UI.createWindow({ backgroundColor: 'red' }).open();  });    win.add(btn);  win.open();  {code}",Bug,Critical,Closed,"2018-11-08 22:16:24","2018-11-08 22:16:24",5
"The Titanium SDK ","Android: Modify native HTTP handling to only cache GET responses","*Summary:*  Titanium's custom {{TiResponseCache.java}} class currently caches all HTTP responses and ignores the HTTP method. Meaning that it'll cache POST, PUT, DELET, etc. which is a problem when using REST web APIs.    It should be changed to only cache HTTP GET responses.  _(Note: iOS does not cache HEAD responses.)_    *Note:*  This is not an issue with Titanium's {{Ti.Network.HTTPClient}} on Android since it's currently set up to *never* cache responses. The only Titanium JavaScript API which does HTTP response caching is when you load images via URLs, which are GET requests.    The above is only an issue for app's which do HTTP requests natively in Java, such as via a 3rd party native library.",Bug,Medium,Closed,"2018-11-08 19:23:21","2018-11-08 19:23:21",3
"The Titanium SDK ","iOS: Ti.Media.Audio player without url set is crashing while registering for event listener","The application throws an error when using the following test case:    Following error is shown:    Note this worked on 7.4.1.GA and looks like a regression.     *Expected result*  Application should not crash and stream should work accordingly. (If stream is paused/played)    *Actual result *  Application crashes on launch",Bug,High,Closed,"2018-11-08 15:16:19","2018-11-08 15:16:19",5
"The Titanium SDK ","Android: Amend Ti.Platform properties","- Amend {{Ti.Platform}} properties:  {code:js}  Ti.Platform.getName();  Ti.Platform.getOsname();  Ti.Platform.getVersion();  Ti.Platform.getOstype();  {code}",Bug,Critical,Closed,"2018-11-07 17:33:21","2018-11-07 17:33:21",2
"The Titanium SDK ","Windows: ScrollView does not expand with Ti.UI.SIZE","{{ScrollView}} does not expand its size along with child content when {{Ti.UI.SIZE}} is specified.         Expected:  !1.png|thumbnail! ",Bug,High,Closed,"2018-11-07 07:07:42","2018-11-07 07:07:42",5
"The Titanium SDK ","Windows: Can not compile folder with spaces","Latest [titanium-mobile-mocha-suite|https://github.com/<USER>titanium-mobile-mocha-suite/tree/master/Resources/folder%20with%20spaces] shows that Titanium project that contains folder with spaces does not compile.     How to reproduce:    * Create folder with spaces (i.e. {{folder with spaces}}) under {{Resources}} folder.    Building the project errors out with CMake Error:        Expected: It should compile without errors.",Bug,Critical,Closed,"2018-11-07 01:59:42","2018-11-07 01:59:42",5
"The Titanium SDK ","iOS 11+: Support large title style (dynamic fonts)","Titanium is pretty well suited regarding dynamic fonts, which becomes more and more important in larger scale applications. We need one more style which is currently missing ({{UIFontTextStyleLargeTitle}}) which will complete the dynamic font support.    Note: Until the below PR is merged, the following enum raw value will allow to use it today:  ","New Feature",Medium,Closed,"2018-11-06 11:41:51","2018-11-06 11:41:51",3
"The Titanium SDK ","iOS: The popover UI has shrunk and also lines are not visible in between few rows on iPad","Issue :-1  * Issue description - The popover UI has shrunk and also lines are not visible in between few rows  * Screen shot showing the issue – PFA Issue_1.png and Issue_1_screenshot.png  * Sample app code – PFA Sample_APP.zip    Issue :-2    * Issue description - On searching an item in search bar and selecting a row the, popover stays with blank white background instead of disappearing  * Screen shot showing the issue – PFA Issue_2.png  * Sample app code – PFA Sample_APP.zip",Bug,High,Closed,"2018-11-05 19:37:16","2018-11-05 19:37:16",8
"The Titanium SDK ","Android: Webview FireEvent not get fired in correct sequence","Hi team,  For Android Platform, I have added evenlistener in webview local html file. The event is fired from app.js. The issue is, fireEvent get fired in reverse order for Android.  For iOS, the sequence is right and for Android, the sequence is wrong.    App.js    index.html  {code:html}  <!DOCTYPE HTML PUBLIC -//W3C//DTD HTML 4.01//EN  http://www.w3.org/TR/html4/strict.dtd>  <html>   <head>     </head>   <body>      <script type=text/javascript>     function passdatatoserver(e) {        Ti.API.info(testevent: + e.value);       }         Ti.App.addEventListener('testevent', passdatatoserver);      </script>   </body>  </html>    [INFO] :   value passed:0  [INFO] :   value passed:1  [INFO] :   value passed:2  [INFO] :   value passed:3  [INFO] :   value passed:4  [WARN] :   TiVerify: (Timer-0) [4992,4993] Verifying module licenses...  [INFO] :   I/System.out: Thread-63102(ApacheHTTPLog):Reading from variable values from setDefaultValuesToVariables  [INFO] :   I/System.out: Thread-63102(ApacheHTTPLog):isSBSettingEnabled false  [INFO] :   I/System.out: Thread-63102(ApacheHTTPLog):isShipBuild true  [INFO] :   I/System.out: Thread-63102(ApacheHTTPLog):getDebugLevel 0x4f4c  [INFO] :   I/System.out: Thread-63102(ApacheHTTPLog):Smart Bonding Setting is false  [INFO] :   I/System.out: Thread-63102(ApacheHTTPLog):SmartBonding Setting is false, SHIP_BUILD is true, log to file is false, DBG is false, DEBUG_LEVEL (1-LOW, 2-MID, 3-HIGH) is 1  [INFO] :   I/System.out: Timer-0 calls detatch()  [INFO] :   TiVerify: (Timer-0) [838,5831] Succesfully verified module licenses  [INFO] :   testevent:4  [INFO] :   testevent:3  [INFO] :   testevent:2  [INFO] :   testevent:1  [INFO] :   testevent:0    Operating System    Name                        = Microsoft Windows 10 Pro    Version                     = 10.0.17134    Architecture                = 32bit    # CPUs                      = 4    Memory                      = 17091956736  Node.js    Node.js Version             = 8.9.1    npm Version                 = 5.5.1  Titanium CLI    CLI Version                 = 5.1.1  Titanium SDK    SDK Version                 = 7.4.1.GA  {code}",Story,None,Closed,"2018-11-05 12:40:30","2018-11-05 12:40:30",3
"The Titanium SDK ","CLI: Add link to implicit global warning log","h5.Description    The warning log had a link created to explain it, we should link to the doc.appc page (via shortlink) so that there's less confusion around the message",Story,High,Closed,"2018-11-05 10:39:59","2018-11-05 10:39:59",1
"The Titanium SDK ","Android: Ti.Platform id and version properties return null if analytics disabled as of 7.5.0.RC","*Summary:*  Properties {{Ti.Platform.id}} and {{Ti.Platform.version}} return {{null}} if analytics have been disabled in the tiapp.xml file. They return the correct values if analytics is enabled.    This bug was introduced as of 7.5.0.RC.    *Steps to reproduce:*  # Set up a Classic app with the app.js code shown below.  # In the tiapp.xml file, disabled analytics as shown below.  # Build and run on an Android device.  # In the log, notice that id and version return {{null}}. _(This is the bug.)_    *tiapp.xml*  {code:xml}  <ti:app xmlns:ti=http://ti.<USER>org>      <analytics>false</analytics>  </ti:app>  {code}    *app.js*  {code:javascript}  Ti.API.info(@@@ Ti.Platform.id:  + Ti.Platform.id);  Ti.API.info(@@@ Ti.Platform.version:  + Ti.Platform.version);  {code}    *Note:*  I suspect APIs {{Ti.Geolocation.forwardGeocoder()}} and {{Ti.Geolocation.reverseGeocoder()}} might also fail if analytics is disabled.  ",Bug,Critical,Closed,"2018-11-03 10:42:59","2018-11-03 10:42:59",2
"The Titanium SDK ","iOS: Push notifications crash the app when used with third-party module","Using third-party modules to integrate remote notifications may crash an app due to unsafe calls to {{application:didReceiveRemoteNotification:}}. This method is only available when {{Ti.Network.registerForPushNotifications}} was used.",Bug,Medium,Closed,"2018-11-02 19:02:45","2018-11-02 19:02:45",3
"The Titanium SDK ","Android: setting one of the color states may break the default background","Defining only a special color state ({{backgroundFocusedColor}}, {{backgroudDisabledColor}} or {{backgroundSelectedColor}}) without the default {{backgroundColor}} for a View results in a view with a transparent background.    This is sort of a partial regression meaning that 7.5.0 exposed it through the {{backgroundDisabledColor}} fix, but it was the same for the other two properties before that.    sample:    ",Bug,Medium,Open,"2018-11-02 16:49:09","2018-11-02 16:49:09",8
"The Titanium SDK ","Windows: Runtime Exception: Layout cycle detected. when launching kitchensink-v2","h5.Description    When launching ks-v2 I'm seeing {{Runtime Exception: Layout cycle detected. }} when the app launches. Tracking the issue down it appears to be coming from the {{$.log.setText}} call [here|https://github.com/<USER>kitchensink-v2/blob/27e44b5635f6ca2abf83f9e76cc9f0044a56795f/app/controllers/console/index.js#L11].    * Commenting out the setText call allows the app to open fine (/)  * Placing the {{setText}} call in a setTimeout fixes the issue (/)  * Replacing {{logger.history}} with 'astring' does not fix the issue (x)    My best guess right now is that there's some issue around updating the label text while we're laying out the UI?     h5.Steps to reproduce    1. Run kitchensink-v2    h5.Actual    App will error out on launch    h5.Expected    App should not error out on launch",Bug,High,Closed,"2018-11-01 15:07:47","2018-11-01 15:07:47",8
"The Titanium SDK ","Windows: Setting undefined should clear layout value","Setting {{undefined}} to layout property should clear layout value. For instance, Setting both {{left}} and {{top}} disables {{center}} property (TIMOB-26507) but we should be able to enable {{center}} property again by setting {{undefined}} for {{left}} and {{top}} properties.          Expected: The blue view should move to where you click.",Improvement,Medium,Closed,"2018-11-01 08:52:47","2018-11-01 08:52:47",5
"The Titanium SDK ","Windows: View.center is not respected when left & top is set.","{{center}} property is not respected when {{left}} and {{top}} is set. Even when these properties are already set, {{center}} should be respected and update the position of the view. Also, we should be able to use {{undefined}} to clear existing values according to [UNDEFINED behavior|https://docs.<USER>com/platform/latest/#!/guide/UI_Composite_Layout_Behavior_Spec-section-src-4196675_UICompositeLayoutBehaviorSpec-UNDEFINEDbehavior] which is taken care by TIMOB-26507.        Expected: View should move to the position where you clicked.",Bug,High,Closed,"2018-11-01 03:52:32","2018-11-01 03:52:32",8
"The Titanium SDK ","Android: Validate TiUIAbstract getWindowProxy()","- {{Titanium.UI.AbstractTab}} {{getWindowProxy}} does not validate if the proxy exists  - Causes test failures https://<USER><USER>org/job/titanium-sdk/job/titanium_mobile/job/PR-10405/24/console",Bug,None,Closed,"2018-10-31 21:34:45","2018-10-31 21:34:45",1
"The Titanium SDK ","Windows: Touch event coordinate units do not match between platforms","*Summary:*  The (x,y) units provided by View event's touchstart, touchmove, touchend, and touchcancel do not match between Android and iOS. Both platforms ignore the ti.ui.defaultunit property setting in tiapp.xml.    On Android, the touch coordinates are always in px (ie: pixels).  On iOS, the touch coordinates are always in dip (aka: dp).    *Steps to Reproduce:*  # Build and run the below code on Android.  # Drag your finger in the gray view.  # Notice that the blue square does *not* correctly following your finger.  # Build and run on iOS.  # Drag your finger in the gray view.  # Notice that the blue square *correctly* follows your finger.  # Change tiapp.xml property ti.ui.defaultunit to px.  # Build and run on iOS.  # Drag your finger in the gray view.  # Notice that the blue square does *not* correctly following your finger.  # Build and run on Android.  # Drag your finger in the gray view.  # Notice that the blue square *correctly* follows your finger.        *Work-Around:*  The following will work-around this issue on both Android and iOS...        *Ideal Solution:*  Convert native touch coordinates to use ti.ui.defaultunit on both Android and iOS. This way views can easily be dragged since their x, y, and center properties already respect the ti.ui.defaultunit property.  Note that this would be a breaking change.  ",Improvement,High,Closed,"2018-10-31 02:25:59","2018-10-31 02:25:59",8
"The Titanium SDK ","Android: Add cache property support to HTTPClient","*Summary:*  On iOS, {{HTTPClient}} supports boolean cache property, which can be set {{false}} to force {{HTTPClient}} to ignore the cache and always send the HTTP request.  https://docs.<USER>com/platform/latest/#!/api/Titanium.Network.HTTPClient-property-cache    Android does not currently support this property and always uses the cache. We should add support for this property so the cache can be ignored on Android too.    *Note:*  We need to evaluate if a {{POST}} request should be cached at all. I think no, but we should double check how it works on iOS when setting this property {{true}}.  ","New Feature",Medium,Open,"2018-10-31 01:00:55","2018-10-31 01:00:55",5
"The Titanium SDK ","Windows: ListView item template support CommonJS modules and Alloy widgets","The ListView item template only supports a limited set of view classes from the Ti.UI namespace. In addition to using one of the predefined view classes, you should be able to also pass module views to your list item template. For example, use {{ImageView}} on {{AvImageview}} module in your list view:          where {{<ImageView ns=AvImageview>}} will be expanded into {{type: 'AvImageview.ImageView'}} in ListView ItemTemplate. In this case ListView should call {{AxImageview.createImageView}} behind the scenes eventually.    We also need support for Alloy {{Widget}} tag like below.        In this case {{<Widget src=test.widget>}} will be expanded into {{type: 'test.widget'}} in ListView ItemTemplate. In this case ListView should create Alloy widget {{test.widget}} behind the scenes eventually.    So, ListView should search template class in following order:    # If there's a class in global namespace such as {{Ti.UI.View}}, use {{\[namespace\].create\[Classname\]}} function such as {{Ti.UI.createView}}.  # If there's a CommonJS module with given name, {{require}} it and then use its {{getView}} function.  # If there's a Alloy widget with given name, {{require}} {{Resources/windows/alloy/widgets/WIDGET_NAME/controllers/widget.js}} and then use its {{getView}} function  ","New Feature",Medium,Closed,"2018-10-30 07:06:26","2018-10-30 07:06:26",13
"The Titanium SDK ","Android: Exception message not displaying for Java runtime exceptions","- Java exceptions do not display the exception message, only the stack",Bug,None,Closed,"2018-10-29 19:03:55","2018-10-29 19:03:55",2
"The Titanium SDK ","Cannot load iOS 12.0 simulator after upgrading to Xcode 10 and Ti SDK 7.4.0.GA","h3. Steps to Reproduce create a new project tap on run and watch it fail Error message in the console: [ERROR] : Simulator is not available  h3. Actual Result [DEBUG] :  Removing empty directories [INFO] :   Invoking xcodebuild [DEBUG] :  Invoking: DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer /Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild build -target 'Contractor WorkZone' -configuration Debug -scheme Contractor_WorkZone -derivedDataPath /Volumes/BOX/Projects/Titanium/WorkZone/build/iphone/DerivedData -UseNewBuildSystem=YES OBJROOT=/Volumes/BOX/Projects/Titanium/WorkZone/build/iphone/build/Intermediates SHARED_PRECOMPS_DIR=/Volumes/BOX/Projects/Titanium/WorkZone/build/iphone/build/Intermediates/PrecompiledHeaders SYMROOT=/Volumes/BOX/Projects/Titanium/WorkZone/build/iphone/build/Products -destination 'platform=iOS Simulator,id=DD7ADA2D-8D55-4275-A373-37FDE844367C,OS=12.0' ONLY_ACTIVE_ARCH=1 [INFO] :   Finished building the application in 12s 747ms [INFO] :   Launching iOS Simulator [ERROR] :  Simulator is not available  h3. Expected Result Simulator should boot up",Bug,Critical,Resolved,"2018-10-10 00:59:13","2018-10-10 00:59:13",1
"The Titanium SDK ","Android: Local database provides error in Alloy","Trying to install a local database(dumped form SQlite Manager) on Android using *Titanium.Database.Install()* and it provides error.     *Testing Environment:*    <USER>Command-Line Interface, version 7.0.6,Operating System Mac OS X 10.13.6, Node.js Version 8.9.1  SDK Version 7.4.1.GA,Device: Huawei GR3 (Android 7)    *Test Steps:*    1. Create an alloy app  2.Paste the sample code to app directory and sample database to app->lib directory(sample db file is attached)  2. Run the project , click the label and check console    *Test Code:*  *index.js*    *index.xml*      *Test output:*  ",Bug,None,Resolved,"2018-10-25 07:21:46","2018-10-25 07:21:46",3
"The Titanium SDK ","Android: Add sound support to NotificationChannel","*Summary:*  Android 8.0 and newer OS versions ignore the sound property assigned to individual notifications. The only way to play custom notification sounds is to assign the sound to a {{NotificationChannel}} instead.    See sample code  [^NotificationSoundTest.js] for an example on how this would work.    Note that you must assign the custom sound to both the {{Notification}} (for Android 7.1 and below) and the {{NotificationChannel}} (for Android 8.0 and above). It's a bummer that you have to assign it to both, but that's the only solution if you want to support customer sound on OS versions older than Android 8.0.  ","New Feature",High,Closed,"2018-10-25 01:49:10","2018-10-25 01:49:10",5
"The Titanium SDK ","Android: Target API Level 28 (Android P) by default","*Summary:*  When building for Android, Titanium should target API Level 28 (aka: Android 9.0) by default if installed under the Android SDK.  Titanium currently targets up to API Level 27 (aka: Android 8.1).    *Note:*  Titanium currently does not target API Level 28 by default. This is a safety precaution until Titanium addresses all Android P breaking changes. But a developer can opt-in to targeting the newest API Level (at their own risk) by adding the following to their tiapp.xml file.      ",Improvement,High,Closed,"2018-10-23 18:56:26","2018-10-23 18:56:26",1
"The Titanium SDK ","TiUtils.m missing check for iPhone XR and iPhone XS Max images","TiUtils.m missing check for iPhone XR and iPhone XS Max images  So these devices will display the   <EMAIL>/jpg   instead of   <EMAIL>/jpg   <EMAIL>/jpg     ",Bug,Critical,Closed,"2018-10-18 13:23:12","2018-10-18 13:23:12",3
"The Titanium SDK ","Ti.Locale.setLanguage is not applying the locale effects properly on Android & iOS","In Arabic mode, the locale should change the layout correctly like window-title to the right, home-up button on right as well. All RTL effects should be applied.    However, using Ti.Locale the Arabic or RTL changes do not take place. If we use below code to apply Arabic language using Ti.Locale, the only changes that are taking place the Alert Dialog buttons are switched, but title, home-up button position, pickers are still unaffected, and it's incorrect behaviour as opposed to native Android app.    *Full titanium code using Ti.Locale(not-working) and Hyperloop(working)*      The layout changes works all correctly ONLY using Hyperloop which replicates the native Android code.    In this full sample code, using Ti.Locale, the alert-buttons are changing their positions, but title stays on left-edge in both Arabic and English language. But through Hyperloop or native Android, alert-title move to right-edge and so does the picker which is correct behaviour.    After reviewing the Ti.Locale.setLanguage() method code, I was able to get only one hint that Ti SDK code is using application-context and my native Android or Hyperloop code works when using Activity's base-context.    I do not know how to do this in iOS using Hyperloop, but I hope you get the issue.",Bug,Critical,Closed,"2018-10-12 09:30:58","2018-10-12 09:30:58",3
"The Titanium SDK ","Android: Replace support libraries with AndroidX","The Android Support Libraries have been deprecated by Google in favor of the AndroidX libraries. Google will no longer be making updates to the Support Libraries (v28 is their last version). New features will be going to AndroidX instead.  https://developer.android.com/jetpack/androidx    The Titanium SDK and its modules needs to migrate to the AndroidX libraries. Titanium's app builds will also need to leverage Google's jetifier tool which replaces prebuilt Android libraries, replaces their references from the Support libraries to AndroidX by hacking the binary (this is a Google sanctioned feature) so that 3rd party modules will be backward compatible.  https://developer.android.com/jetpack/androidx/migrate    AndroidX is best implemented in the app build.gradle file via...  {code:groovy}  android {   useAndroidX true   enableJetifier true  }  {code}  ",Improvement,High,Closed,"2018-10-19 08:29:04","2018-10-19 08:29:04",13
"The Titanium SDK ","Integrate native modules with Chakra","Enable native modules.","New Feature",None,Open,"2018-10-19 03:30:58","2018-10-19 03:30:58",11
"The Titanium SDK ","Enable WinRT scripting with Chakra","Enable integration with WinRT API natively without Hyperloop, using [JsProjectWinRTNamespace|https://docs.microsoft.com/en-us/microsoft-edge/hosting/chakra-hosting/jsprojectwinrtnamespace-function]","New Feature",Medium,Open,"2018-10-19 03:10:06","2018-10-19 03:10:06",11
"The Titanium SDK ","Integration Hyperloop with Chakra","Make Hyperloop work with Chakra","New Feature",None,Open,"2018-10-19 03:06:52","2018-10-19 03:06:52",8
"The Titanium SDK ","HAL for Chakra","Implement HAL API layer on top of Chakra.    https://github.com/<USER>HAL/tree/Chakra","New Feature",High,Open,"2018-10-19 00:23:30","2018-10-19 00:23:30",11
"The Titanium SDK ","Make classic app runnable","Make default classic app runnable without crash.",Story,None,Closed,"2018-10-19 00:17:11","2018-10-19 00:17:11",8
"The Titanium SDK ","Make Alloy app runnable","Make default Alloy app runnable with crash.",Story,None,Closed,"2018-10-19 00:16:10","2018-10-19 00:16:10",8
"The Titanium SDK ","Make mocha tests runnable and pass the tests","Make titanium-mobile-mocha-suite runnable without crash and pass the tests.",Story,None,Open,"2018-10-19 00:14:52","2018-10-19 00:14:52",11
"The Titanium SDK ","Windows: Add Ti.UI.Window property safeAreaPadding","*Summary:*  On Android and iOS, we're adding a new safeAreaPadding property to {{Ti.UI.Window}} which returns a Titanium [ViewPadding|https://docs.<USER>com/platform/latest/#!/api/ViewPadding] dictionary. This is really only relevant on Android and iOS because it's needed on devices which have camera notches which overlap the screen or when using a translucent StatusBar/NavigationBar. It reports the distance on each edge of the window where the insets/notches overlap the contents of the window.    Please see: [TIMOB-26427] and [TIMOB-26461]    On Windows, we should probably hard-code the padding to all zeros.","New Feature",Medium,Closed,"2018-10-18 23:56:08","2018-10-18 23:56:08",5
"The Titanium SDK ","Android: Toolbar height set to Ti.UI.SIZE won't resize when changing orientation","*Summary:*  Android Toolbars (and ActionBars) are supposed to use a height of {{56dp}} for portrait orientation and {{48dp}} for landscape. If a Toolbar's height is set to {{Ti.UI.SIZE}} (the default), then the height and its font size should automatically change when the orientation changes. It currently does *not*.    *Steps to reproduce:*  # Position an Android device in portrait.  # Build and run the below code on that Android device.  # Note the height of the top toolbar.  # Rotate the device to landscape.  # Notice that toolbar height does not shrink. _(This is the bug.)_  # Keep holding the device at landscape and back out of the app.  # Launch the app in landscape form.  # Notice that the toolbar height is smaller upon launch.  # Rotate the device to portrait.  # Notice that the toolbar height has not increased. _(This is the bug.)_        *Cause:*  The height is not changing because Titanium override the activity's configChanges for orientation in the AndroidManifest.xml. This is needed to prevent the UI from being torn down upon orientation change. Google designed it to reload UI from XML, but since Titanium's UI is generated dynamically via code, this is not an option. We have to resize the height ourselves.  ",Bug,Medium,Closed,"2018-10-18 01:23:25","2018-10-18 01:23:25",13
"The Titanium SDK ","Android: Add support for translucent status bar and navigation bar","*Summary:*  Add support for a translucent top status bar and translucent bottom navigation bar by adding the following constants that can be used by the {{Ti.UI.Window}} windowFlags property.  * {{Ti.UI.Android.FLAG_TRANSLUCENT_NAVIGATION}}  * {{Ti.UI.Android.FLAG_TRANSLUCENT_STATUS}}    The above correspond to the following Android 4.4 Java constants...  https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html#FLAG_TRANSLUCENT_NAVIGATION  https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html#FLAG_TRANSLUCENT_STATUS    *Example Usage:*     !AndroidTranslucentBars.png|thumbnail!     *Note 1:*  Internally, Titanium needs to support/apply these flags to allow *Android P* notches to overlap a fullscreen window. Otherwise the app window will be letterboxed between the notches. So, we might as well as expose the window flags constants for convenience... and they can be used on older Android OS versions (4.4 and higher).    *Note 2:*  Android 4.4 only supports a translucent navigation bar when the app is shown in portrait form. It is opaque when landscape. This is a limitation on Google's end.  Android 5.0 and newer OS versions support a translucent nav bar for all orientations.  ","New Feature",Medium,Closed,"2018-10-18 00:52:15","2018-10-18 00:52:15",5
"The Titanium SDK ","Windows: Window.exitOnClose doesn't work when only one Window is opened","{{Window.exitOnClose}} works only when there are multiple Windows opened. It exits the app when there's only one Window opened.        Expected: It should not exit the app.",Bug,Medium,Closed,"2018-10-17 01:02:10","2018-10-17 01:02:10",5
"The Titanium SDK ","Android: Optimize TiBlob.imageAsResized","I had a look at the implementation of TiBlob.imagesAsResized on Android and it could be optimized according to this stackoverflow article: https://stackoverflow.com/a/32121059/5193915    Rather than opening the image using {{getImage()}} and then creating a new Bitmap with {{createScaledBitmap()}} to resize it the rescaled image could be opened right away (with inTargetDensity + inDensity).    In my test patch I've returned the {{getImage()}} Bitmap right away when rotation is 0. According to  !ti_memory.png|thumbnail! it will save some memory.     But I'm not 100% sure what {{mMemoryCache}} will do so I need some help/guidance if that is still needed. It was added in https://jira.<USER>org/browse/TIMOB-16450 to solve some memory leak.    *Test code:*                  ",Bug,Critical,Closed,"2018-10-16 19:27:11","2018-10-16 19:27:11",3
"The Titanium SDK ","Android: Hyperloop should sanitize numeric names","- Hyperloop generator should sanitize numeric method names    {code:js}  var 1PackageInfoProxy = function() {...}  {code}",Bug,High,Closed,"2018-10-16 20:32:56","2018-10-16 20:32:56",3
"The Titanium SDK ","Reverse geocoding freeze the app when manualMode is true","I was implementing the Titanium reverse geocoding in my app, on iOS I have had no problems so I also do it on android, suddenly app freeze.    But I think I found the problem:  When Ti.Geolocation.Android.manualMode = true;  Titanium.Geolocation.reverseGeocoder not works and freeze the app.    I attach my index file where you can see the //commented line for manual mode, decomment it and see after first location event everything freeze",Bug,Critical,Closed,"2018-09-27 10:35:42","2018-09-27 10:35:42",3
"The Titanium SDK ","Android: Hyperloop does not generate meta data for synchronized classes","- Metabase generator does not generate meta data for synchronized classes    *TEST CASE*  - Include https://www.dropbox.com/s/rax8o5m3mrgypns/libwebrtc_19324.aar?dl=1 into {{<project>/platforms/android}} directory  {code:js}  const EglBase14 = require('org.webrtc.EglBase14');  console.log(EglBase14);  {code}",Bug,Critical,Closed,"2018-10-12 00:56:43","2018-10-12 00:56:43",8
"The Titanium SDK ","Android 8: Unable open PDF on some devices","h6.Problem    Customer is trying to download the pdf from remote server using URL, save them to external or application directory and then open them in external pdf viewer using intent. Like example in post https://www.<USER>com/blog/2015/08/<USER>pdf-viewer-demo/. But throwing following error on Android 8.        h6.Note    The strange problem is not happening to all model of devices. For example    On Android 7  Seems all devices work well. At least, all the test devices are working well.    On Android 8  Moto G device which is on android 8 worked fine.  but others, like Google Pixel or Samsung Note 8, will get above error.     h6.Example code      Please check this asap, very important function for customer's app. ",Bug,High,Closed,"2018-10-09 09:19:59","2018-10-09 09:19:59",2
"The Titanium SDK ","Calling Titanium.App.iOS.UserNotificationCenter.getDeliveredNotifications causes 'NSInvalidArgumentException'","Calling Titanium.App.iOS.UserNotificationCenter.getDeliveredNotifications causes 'NSInvalidArgumentException'.  The first line of the stacktrace ` -[UNNotification content]: unrecognized selector sent to instance` points to a type mismatch. The code attempts to get the 'content'  property on UNNotification instead of UNNotificationRequest.  Code should be modified to look like this. I can provide a PR  ",Bug,Critical,Resolved,"2018-09-25 12:36:28","2018-09-25 12:36:28",3
"The Titanium SDK ","iOS: App crashing while playing Youtube Video in WebView","App is crashing when working with youtube videos. Please check out the video attached.    index.xml  <Alloy>   <Window class=container>    <WebView url='https://www.youtube.com/watch?v=MYREllHPSbU&list=PL9MeVsU0uG64RMlPf71OHsRyJWyAXnZ-l'></WebView>   </Window>  </Alloy>    Index.js  $.index.open();  ",Bug,Critical,Resolved,"2018-10-03 12:38:44","2018-10-03 12:38:44",3
"The Titanium SDK ","Android: Implement Titanium.UI.NavigationWindow","- Android implementation of {{Titanium.UI.NavigationWindow}}",Bug,High,Resolved,"2018-10-05 22:43:11","2018-10-05 22:43:11",13
"The Titanium SDK ","Ti.Network.registerForPushNotifications callback not working when application resume.","Ti.Network.registerForPushNotifications callback not working when application resume.    it's working find when application was killed but when application resume and got notification, Open application from notifcation center receivcePush not call.",Bug,Critical,Resolved,"2018-09-25 09:14:57","2018-09-25 09:14:57",1
"The Titanium SDK ","iOS: VIdeoPlayer time in seconds","Since 7.0.0 VideoPlayer on iOS treats time in seconds instead of milliseconds.  Affected properties: currentPlaybackTime, duration (probably also playableDuration and endPlaybackTime), events: durationavailable.  ",Bug,Critical,Closed,"2018-10-01 11:48:50","2018-10-01 11:48:50",5
"The Titanium SDK ","Android: Support building app bundles","*Summary:*  Google Play allows you to upload your app as an app bundle (aka: an {{*.aab}} file) instead of an APK. How this works is that Google will generate multiple APKs from the app bundle, split by architecture and image density, and digitally sign each APK with a keystore you've uploaded for you. This is a similar feature to what Apple provides on iOS and allows for smaller apps to be downloaded to the Android device.  https://developer.android.com/guide/app-bundle    *Note:*  You cannot install/run an app bundle on an Android devices. That is, Android devices still only support APKs. An app bundle is only a Google Play publishing feature.    This is why a Titanium test or development build should not build an app bundle, because it's useless for local testing purposes. It only makes sense for production builds for publishing.    *Recommended Solution:*  When doing a production build, Titanium should generate both an APK and app-bundle to the destination directory. No configuration required.    Note that building a production APK is still useful. Some features such as push notifications, in-app billing, Google LVL licensing, etc. can't be tested with a debug.keystore signed APK. Also, app bundles do not support Google expansion files. Nor are app bundles supported on other Android app stores such as Amazon (ie: only supported on Google Play).    We can implement app bundle support once we've adopted gradle build support.  https://developer.android.com/studio/build/building-cmdline    The {{gradlew}} command line would be something like this...    ","New Feature",High,Closed,"2018-10-03 12:38:18","2018-10-03 12:38:18",3
"The Titanium SDK ","same error with sdk 7.4.0 GA --> TIMOB-26109 Xcode 10: Cannot build modules with the new (default) build system","I have reproduced the error again. I don´t know the reason, this is my log. Its seems all its ok. Any ideas?  Thanks in advance.  2018-9-27 22:48:21  Operating System  Name = Mac OS X  Version = 10.13.6  Architecture = 64bit  CPUs = 8  Memory = 8589934592  Node.js  Node.js Version = 9.2.1  npm Version = 5.5.1  Titanium CLI  CLI Version = 5.1.1  Titanium SDK  SDK Version = 7.4.0.GA  SDK Path = /Users/user1/Library/Application Support/Titanium/mobilesdk/osx/7.4.0.GA  Target Platform = iphone  Command  /Users/user1/.nvm/versions/node/v9.2.1/bin/node /Users/user1/.<USER>install/7.0.6/package/node_modules/titanium/lib/titanium.js build --platform ios --log-level trace --sdk 7.4.0.GA --project-dir /Users/user1/Documents/app --target simulator --ios-version 12.0 --device-family universal --deploy-type development --device-id 53FAF1A3-224E-4BE5-8315-7D04DA01E8BE --skip-js-minify --no-colors --no-progress-bars --no-prompt --prompt-type socket-bundle --prompt-port 49199 --config-file /var/folders/jq/rlqcc3v10_9_y__l4fsmjvkh0000gn/T/build-1538081291744.json --no-banner --project-dir /Users/user1/Documents/app  [TRACE] [ioslib] Validating iOS Simulator UDID 53FAF1A3-........  [TRACE] [ioslib] Found iOS Simulator UDID 53FAF1A3.........  [TRACE] [ioslib] Selected iOS Simulator: iPhone 6  [TRACE] [ioslib] UDID = 53FAF1A3-...........  [TRACE] [ioslib] iOS = 12.0  error:  [INFO] : Cleaning Xcode derived data  [ERROR] : note: Using new build system  [ERROR] : error: Could not delete `/Users/user1/Documents/app/build/iphone/build` because it was not created by the build system and it is not a subfolder of derived data.  [ERROR] : ** CLEAN FAILED **",Bug,Critical,Resolved,"2018-09-27 21:27:48","2018-09-27 21:27:48",3
"The Titanium SDK ","iOS: Password Keyboard Toolbar showing on non password fields","iOS app is crashing when using Titanium.UI.AUTOFILL_TYPE_PASSWORD as they getting this 2 issues:     # 1. Since a password text field exists then various text fields within the app will show the password toolbar even though they have no autofill type. This becomes very confusing like when you are entering text into a field called stock number and the password toolbar shows.     # 2. Even if I remove autoFill type password from the password field since it has a password mask set to true it will show the password toolbar. If I remove password mask it will not show the password toolbar but it will also not mask the text.     *App Link with recorded video*  # [Video of the issue happening|https://github.com/jwogan5/sampleApp/blob/master/My%20Movie%201.mp4]  # [The app code for the issue|https://github.com/jwogan5/sampleApp/blob/master/hypertest.zip]    *Steps to Reproduce:*    # 1. Using autofillType:Titanium.UI.AUTOFILL_TYPE_PASSWORD, from the above video, you can get icloud keychain opens up for a password when it got clicked. The issue occurred by going to the next page even though those fields neither an autofill nor password fields but they also show the password toolbar when click on them.     # 2. To show password toolbar in simulator, go to Settings > Accounts and Password > AutoFill Password turn on. You will get the issue.  ",Bug,None,Resolved,"2018-10-02 19:56:40","2018-10-02 19:56:40",3
"The Titanium SDK ","Android: Add immersive mode support via Ti.UI.Window property homeIndicatorAutoHidden","iOS currently supports {{Ti.UI.Window}} property homeIndicatorAutoHidden which is used to hide the iPhone X bottom home indicator line. This home indicator can be brought back to the by the end-user by swiping up from the bottom edge of the screen.    Android has a similar feature called immersive mode. It was introduced in Android 4.4 (API Level 19). The existing Titanium homeIndicatorAutoHidden property should use this feature on Android.  https://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE  ","New Feature",Low,Open,"2018-10-02 02:16:32","2018-10-02 02:16:32",5
"The Titanium SDK ","Android: Add safeAreaPadding property to Ti.UI.Window","*Summary:*  On Android, we'd like to add support for Window property extendSafeArea so that the window's root view can extend under the Android 9 notch or under an Android 4.4 translucent StatusBar/NavigationBar (see: [TIMOB-26246]). However, this feature is useless since these insets can be of various sizes and on any side of the screen. An app developer needs to know what region of the screen they can place content so that it won't be covered up by the device's insets.    *Proposal:*  Add read-only property safeAreaPadding to {{Ti.UI.Window}}. This property will return a Titanium [ViewPadding|https://docs.<USER>com/platform/latest/#!/api/ViewPadding] dictionary providing the left, top, right, and bottom padding needed to show content safely within the window without overlap. If there are no insets or if extendSafeArea is set {{false}}, then this property is expected to return all zeros for the padding.    The idea is that the app developer will then be able to set up their own safe area view and use it as a container as shown below.      *Note:*  We should do the same on iOS to handle the following:  * iPhone X top notch and bottom home indicator.  * Translucent status bar on all other iOS devices. (Safe area should be beneath status bar.)    *Safe-Area Container Example:*  Test code  [^ExtendSafeAreaContainerTest.js] shows how to create a safe-area view container for other child views, guaranteed to always make child content tappable without overlap. The green rectangle with the blue border is the safe-area view within the root white window using an orange border.   !ExtendSafeAreaContainerPortrait.jpeg|thumbnail!  !ExtendSafeAreaContainerLandscapeLeft.jpeg|thumbnail!  !ExtendSafeAreaContainerLandscapeRight.jpeg|thumbnail!     *Safe-Area ScrollView Example:*  Test code  [^ExtendSafeAreaScrollViewTest.js] shows how to pad a ScrollView. It allows its contents to scroll beneath a translucent status bar and navigation bar, but pads the top and bottom so that the top-most view and bottom-most view can be scrolled within the safe-area, making them tappable.   !ExtendSafeAreaScrollPortraitTop.jpeg|thumbnail!  !ExtendSafeAreaScrollPortraitBottom.jpeg|thumbnail!  !ExtendSafeAreaScrollLandscapeRightTop.jpeg|thumbnail!  !ExtendSafeAreaScrollLandscapeLeftBottom.jpeg|thumbnail!  !ExtendSafeAreaScrollLandscapeLeftTop.jpeg|thumbnail!     *Safe-Area TabGroup Example:*  Test code  [^ExtendSafeAreaTabsTest.js] shows how to extend tabs to beneath the notches, translucent status bar, and translucent navigation bar. You would *not* normally use a translucent top status bar with an opaque top tab bar, but this is for testing purposes. Note that the top tab bar hovers over the content and each individual tab completely fills the window. The safe-area padding reported lies within the TabGroup container where content is normally displayed when extendSafeArea is set to {{false}}.   !ExtendSafeAreaTab1Portrait.jpeg|thumbnail!  !ExtendSafeAreaTab2Portrait.jpeg|thumbnail!  !ExtendSafeAreaTabTransitionPortrait.jpeg|thumbnail!  !ExtendSafeAreaTab1LandscapeRight.jpeg|thumbnail!  !ExtendSafeAreaTab1LandscapeLeft.jpeg|thumbnail!     *Safe-Area DrawerLayout Example:*  Test code [^ExtendSafeAreaDrawerTest.js] shows that a {{Ti.UI.Toolbar}} with extendBackground to {{true}} will automatically handle the safe-area when docked to the top of the screen. The toolbar will extend into the unsafe area of the screen inset while leaving its text and button content within the safe-area. This test code uses a toolbar in the root view and in a drawer side panel.   !ExtendSafeAreaDrawerMainPortrait.jpg|thumbnail!  !ExtendSafeAreaDrawerMainLandscape.jpg|thumbnail!  !ExtendSafeAreaDrawerPanelPortrait.jpg|thumbnail!  !ExtendSafeAreaDrawerPanelLandscape.jpg|thumbnail!   ","New Feature",High,Closed,"2018-10-02 01:55:53","2018-10-02 01:55:53",13
"The Titanium SDK ","Android: Added Ti.App pause and resume lifecycle events","- {{Ti.App}} lifecycle events are not fired    {code:js}  Ti.App.addEventListener('resume', () => {      Ti.API.info('RESUME');  });    Ti.App.addEventListener('pause', () => {      Ti.API.info('PAUSE');  });  {code}",Improvement,High,Closed,"2018-10-01 17:23:01","2018-10-01 17:23:01",5
"The Titanium SDK ","[Android] Application crashes when using debugger ","When using the debugger (Windows  - Android in this instance) the application crashes after a certain period of time.     *Test Steps*  # Create and Alloy application   # Set some debug points in the {{index.js}}  # Set studio to {{debug}}  # Debug the app  # Once the debugging view is shown use the Step into/over/return buttons   # After a period of time the following error is shown in studio (see screenshot) and the application crashes      *Actual result*  Studio shows the error shown in the screenshot and the emulator/device crash.     *Expected result*  Debugging should work without any issues. ",Bug,None,Closed,"2018-10-01 16:41:30","2018-10-01 16:41:30",1
"The Titanium SDK ","ios 12 app crash (EXC_BAD_ACCESS, KERN_INVALID_ADDRESS)","After updating to ios 12 the application starts to crash randomly but often.        the part from the crashlog that is probably causing it:      Full crash log:    ",Bug,Critical,Resolved,"2018-09-19 08:27:01","2018-09-19 08:27:01",1
"The Titanium SDK ","Windows: Added Ti.App event userinteraction and property trackUserInteraction","In order to create a solution for https://jira.<USER>org/browse/TIMOB-13884, we're trying to capture all user interaction events. For Android, there is support to capture all onUserInteraction events. (https://jira.<USER>org/browse/TIMOB-26278)    We want to achieve the same functionality for iOS by extending the UIApplication and trigger an event for each UIEvent. In order to avoid negative performance impact, an event will be triggered only when a touch event began.","New Feature",Medium,Closed,"2018-09-27 00:52:21","2018-09-27 00:52:21",11
"The Titanium SDK ","API: Support async variants of Ti.IOStream methods","We currently have synchronous read/write calls for Ti.IOStreams. This has been our historical API, but having I/O done in a blocking synchronous way is a big performance no-no, and is especially bad when running on the main thread.    We should support passing in callback functions as optional final arguments to these functions, and consider deprecating the block/sync versions.  ",Improvement,High,Closed,"2018-09-25 18:59:50","2018-09-25 18:59:50",13
"The Titanium SDK ","iOS 12 Random crashes.","We're noticing various seemingly random crashes in our apps on iOS 12. See attached device logs. Issues only occur on physical devices.    I don't have any code to present, it happens randomly. I've seen various other tickets that are potentially related, but I'm creating this ticket anyway to hopefully create awareness for this issue, our clients starting to notice this which is a big issue for us.    Link with similar issue on SO: https://stackoverflow.com/questions/52120879/<USER>app-crashing-on-iphone-x-with-ios-12-beta-11    Titanium SDK we're using: 7.1.0.GA, but also tested with 7.2.0, 7.4.0. Same result.  Xcode 9 / 10, no difference.",Bug,Critical,Resolved,"2018-09-20 15:14:59","2018-09-20 15:14:59",0
"The Titanium SDK ","iOS: Cannot build hyperloop-examples app with Xcode 10 and 7.4.0 SDK","We've experienced this with an app that uses Hyperloop that builds fine under 7.3.1 SDK and Xcode 9 but the build fails under 7.4.0 (and latest build 7.4.1) SDK and Xcode 10.      I duplicated the results with the latest hyperloop-examples app on Github so this impacts apps that use Hyperloop (perhaps in a non-trivial manner?).    Basically, the build continues until it would normally say Invoking xcodebuild and instead outputs...    [TRACE] :  [Hyperloop] metabase took 3882 ms to generate  {color:red}2018-09-21T04:40:05.382Z | ERROR  | An uncaught exception was thrown!  Invalid Version: 12.-1.0  2018-09-21T04:40:05.382Z | ERROR  | Invalid Version: 12.-1.0{color}",Bug,Critical,Closed,"2018-09-21 06:14:03","2018-09-21 06:14:03",1
"The Titanium SDK ","kitchensink-v2 broken on latest SDK build on master ","On the latest version of the SDK in master (7.5.0.v20180920040518) kitchensink-v2 is broken and displays the following error on iOS (Looks like it broke in SDK Version 7.5.0.v20180919143608):        *Android Error*      *Test Steps*  # Download the latest SDK version from master {{appc ti sdk install -b master -d}}  # Download the kitchensink-v2 app from https://github.com/<USER>kitchensink-v2  # Run the kitchensink-v2 using the latest master build    *Expected result*  Application should  run without any issues     *Actual result*  Above error is shown    *Note:* kitchensink-v2 works as expected in SDK version 7.5.0.v20180919120117",Bug,High,Closed,"2018-09-20 13:26:14","2018-09-20 13:26:14",13
"The Titanium SDK ","Android: Maintain native module compatibility with Titanium 7.0.0","- Updating V8 to 7.0 breaks native module compatibility with Titanium SDK {{7.0.0}}  - Make necessary changes to V8 to maintain backwards compatibility with Titanium SDK {{7.0.0}}",Improvement,High,Closed,"2018-09-20 12:36:20","2018-09-20 12:36:20",8
"The Titanium SDK ","iOS: Application throws an error if there is no Ti.UI.Window reference","When building a blank application or with just console.log/console.time.    The following error is shown:      *Steps to reproduce:*  # Create a titanium application   # Run the app blank or with something similar to:       *Expected result*  Application should still build and the console should output something similar to (if the code above is used):      *Actual result*  Build fails and above error is shown.    ",Bug,Low,Closed,"2018-09-13 14:02:36","2018-09-13 14:02:36",2
"The Titanium SDK ","iOS 12: Support iPhone Xs Max & iPhone XR launch-screen images","Pretty much the same as TIMOB-25269, but now for another device. We need to figure out the names for the iPhone Xs launch-screen image names and handle those for the launch-screen image. This is required to incorporate the new image dimensions (and notch changes) that the new model includes.     *Important note: This can be easily workarounded by using launch-screen storyboards as documented [here|https://wiki.<USER>org/display/guides2/iOS+Launch+Files].",Bug,None,Closed,"2018-09-13 06:09:33","2018-09-13 06:09:33",8
"The Titanium SDK ","Android: appc run should dismiss screen-lock before running built app","*Summary:*  When doing an appc run to an Android device with the screen powered off or the screen-lock shown, the app will be ran in the background. The Android device will not automatically turn on the screen and dismiss the screen-lock. Ideally, it should.    *Reason:*  UI events such as postlayout will not occur in an Android app while it is running in the background. This is especially an issue for automated testing.    *Recommended Solution:*  Google recommends to invoke the menu key to dismiss the screen-lock for automated test.  https://developer.android.com/studio/test/monkeyrunner    We can do this via the adb command line as follows. Note that we need to invoke the menu key twice. Once to power on the screen (if off) and a second time to dismiss the screen-lock.    ",Improvement,Medium,Reopened,"2018-09-11 20:33:43","2018-09-11 20:33:43",3
"The Titanium SDK ","Android: backgroundDisabledColor is ignored","Property {{backgroundDisabledColor}} is ignored for Ti.UI.View.    *Sample:*  _app.js_        Clicking the button changes the state of the view, but the background color stays the same. It is expected that the color changes accordingly to the enabled state.  Edit: The previous version of the sample was not the best one.",Bug,Low,Closed,"2018-09-11 12:48:13","2018-09-11 12:48:13",3
"The Titanium SDK ","Android: Remove commons-codec.jar and replace with Java MessageDigest","*Summary:*  The Titanium SDK currently uses the Apache commons-codec.jar to generate MD5 hashes for its JavaScripts APIs such as {{Ti.Utils.md5HexDigest()}} and internally via the Java {{DigestUtils}} class.    We should remove this JAR file to reduce APK bloat and replace its usage with the built-in Java MessageDigest class provided by Android here...  https://developer.android.com/reference/java/security/MessageDigest    To simplify the transition, we can create our own Titanium {{TiDigestUtils}} Java class to ease the transition internally.    *Note:*  This was changed was suggested when Apache hashing broke when an app targets Android P. Please see the discussion in the PR below...  https://github.com/<USER>titanium_mobile/pull/10253  ",Improvement,Low,Closed,"2018-09-11 00:20:11","2018-09-11 00:20:11",7
"The Titanium SDK ","Windows: Blur is not working for TextField in ScrollView","Hi,   We are having trouble with TextField not losing focus if it is in a ScrollView. If the TextField is in ScrollView, clicking anywhere else on the screen or by explicitly calling 'blur' method on TextField doesn't make the field lose focus. Since we have some events that are triggered whenever the user leaves that field, that functionality is getting impacted because of this issue.   There was feature request created a while back - [TIMOB-25235|https://jira.<USER>org/browse/TIMOB-25235] to have blur method work for TextField.     I have created a sample app where you can reproduce this issue.   Steps to reproduce:   1. Run the attached project TestTextFieldBlurNew. You can see the TextField highlighted   2. Click anywhere on the screen and the TextField will not lose its focus. Its parent has a click event attached where blur is called on that TextField as well which doesn't seem to be working.     If we replace the ScrollView with a normal View, it is working as expected though. Please provide a solution or work around for this issue.   ",Bug,Medium,Closed,"2018-09-10 18:22:23","2018-09-10 18:22:23",8
"The Titanium SDK ","iOS: Assigning text value in change event causes duplicated input on TextView","*Steps to reproduce the behavior*  Add the following code to your app.js of a classic project:      *Actual behavior*  Any input will be duplicated in the TextView itself. For example pressing 'H' will result in 'HH' appearing in the TextView.    *Expected behavior*  The value of the text view can be assigned without any side effects.    *Additional notes*  This is required for the two-way binding in Vue.js. The iOS TextField does not have this issues, neither does any of the text widgets on Android.",Bug,Medium,Closed,"2018-09-08 09:44:59","2018-09-08 09:44:59",3
"The Titanium SDK ","iOS: Build throws ENOENT when building to iOS device","h5.Description    When building to an iOS device the build fails with the below, this looks to be because of the change to run things in parallel rather than series in https://github.com/<USER>titanium_mobile/pull/10236, the write app props just needs to ensure the directory exists before it tries to write to it          h5.Steps to reproduce    1. Build an app using {{appc run -p ios -T device}}    h5.Actual    Above error is thrown    h5.Expected    Error should not be thrown",Bug,None,Closed,"2018-09-07 14:36:28","2018-09-07 14:36:28",1
"The Titanium SDK ","Fix API documentation generation","- Fix various YAML formatting bugs  - Fix invalid modification of properties  - Fix {{changes_generator.js}} to parse deprecated platform versions",Bug,High,Closed,"2018-09-06 21:04:52","2018-09-06 21:04:52",5
"The Titanium SDK ","Windows: Implement V4 Analytics specification","- Implement V4 analytics specification outlined https://techweb.axway.com/confluence/pages/viewpage.action?spaceKey=analytics&title=Event+v4+Specification",Improvement,High,Closed,"2018-09-05 17:41:59","2018-09-05 17:41:59",13
"The Titanium SDK ","iOS: Implement V4 Analytics specification","- Implement V4 analytics specification outlined https://techweb.axway.com/confluence/pages/viewpage.action?spaceKey=analytics&title=Event+v4+Specification",Improvement,High,Closed,"2018-09-05 17:41:41","2018-09-05 17:41:41",13
"The Titanium SDK ","Android: Implement V4 Analytics specification","- Implement V4 analytics specification outlined https://techweb.axway.com/confluence/pages/viewpage.action?spaceKey=analytics&title=Event+v4+Specification",Improvement,High,Closed,"2018-09-05 17:41:17","2018-09-05 17:41:17",13
"The Titanium SDK ","Android: Refactor TabGroup and introduce new style","Refactor the implementation of TabGroup keeping the visual representation.    Introduce the {{BOTTOM_NAVIGATION_STYLE}} ( check: https://jira.<USER>org/browse/TIMOB-25953 ) for {{TabGroup}} which will be using the native {{BottomNavigationView}} native component.","New Feature",Low,Closed,"2018-09-05 08:03:12","2018-09-05 08:03:12",8
"The Titanium SDK ","CLI: node_modules in project root should be handled properly","I tried using ReduxJS in Titanium, but it fails because we do not look-up node_modules correctly. It is installed to {{node_modules/redux/lib/redux.js}}, but Titanium does not look there. This seems to be an issue for many many other Node.js modules as well. A workaround is to copy the library to app/lib (Alloy) or Resources (Classic), but that's not how it's handled in modern JS environments, so this should not be the normal workflow.    To reproduce:  1. Create a new Ti app  2. Run {{npm init}}  3. Run {{npm i redux --save}}  4. Add {{import \{ createStore \} from 'redux'}} to your app.js / index.js (ES6 enabled)  5. Run your app",Improvement,High,"In Review","2018-09-02 16:58:54","2018-09-02 16:58:54",13
"The Titanium SDK ","Android: Cannot use Android Play Beta-testing","When trying to upload an Android app to Google Play alpha/beta testing, the following error occurs:        I am using SDK 7.3.0.",Bug,None,Resolved,"2018-09-01 19:03:12","2018-09-01 19:03:12",0
"The Titanium SDK ","iOS 10: A couple of issues related to remote push-notifications","There are a couple of issues with notifications on iOS right now:  # On iOS 10+, if a notification is delivered while the app is opened, the notification is presented in-app and the usual callback is not fired  # On iOS 10+, the contents of the aps key are not in the top-level of the data key that is returned by the callback of the {{registerForPushNotifications}} callback  # On iOS 10+, the localnotificationaction event is triggered, although remotenoticationaction should be triggered  # On iOS 10+, the sound property of queued pushes can lead to a crash because it's not bridged to a consumable JS-type  # On all supported iOS versions, if a remote notification action is triggered and the app is closed, the {{notificationaction}} is not triggered  # On all supported iOS versions, silent pushes are fired to both the {{registerForPushNotifications}} callback and {{silentpush}} event. it should only be fired to the {{silentpush}} event for parity and API clearance.",Bug,Critical,Closed,"2018-09-01 10:52:01","2018-09-01 10:52:01",5
"The Titanium SDK ","iOS: Applications Shortcuts crash on SDK 7.3.0+ when triggered from background","Please check out the following:          1) Open the app from shortcut   2) Take the app to run on background   3) Open the app from shortcut again  The app terminates instantly",Bug,Critical,Closed,"2018-08-29 22:27:24","2018-08-29 22:27:24",5
"The Titanium SDK ","iOS 12: App crashes in certain Ti.Database / Promises operations","(Via Slack community)    The developer is trying to run app on iOS 12.0 Beta and it crashes with the following error logs:        - A reproducible test-app can be found [here|https://github.com/sachincredible9/ModelTemplateTest]  - The full discussion can be found [here|https://ti-slack.slack.com/archives/C03CVQX2A/p1534443895000100]    Looking at the provided error log, it seems like evaluating a javascript-file fails in {{loadCommonJSModule}} after requiring a common-js file. I am not sure so far if this happens with Alloy (and the model-binding with Backbone) only or classic Titanium apps as well. The app works fine on iOS < 12, e.g. iOS 11.4.1",Bug,High,Resolved,"2018-08-29 08:18:43","2018-08-29 08:18:43",0
"The Titanium SDK ","iOS: Remove Ti.UI.ButtonBar index property","*Summary:*  The {{Ti.UI.ButtonBar}} is a row of buttons on does not display a selection state when a button is tapped like {{Ti.UI.TabbedBar}}. Because of this, the {{Ti.UI.ButtonBar}} index property should be removed since it isn't relevant.    *Issue 1:*  Setting the index property should not put a button in the selected state.  # Run the below code on iOS.  # Note that the middle button Two is selected. (See attached Screenshot.png.)  # Tap on the middle button.  # Notice the selection state is removed.  # Tap on the left button.  # Notice the left button is not selected. (It shouldn't be selected.)    *Issue 2:*  Fetching the value of property index always returns -1 unless fetched during the click event  # Run the below code on iOS.  # Tap on the right-most button.  # Notice the 1st logged message (1) buttonBar.index: 2 has the correct index.  # Notice the 2nd message (2) buttonBar.index: -1 has the incorrect index.  In this case, it would be better to use the click event's index property.        *Recommended Solution:*  Remove the index property. It is not appropriate for this type of UI control. It would be better to use the click event's index property to identify which button was clicked on.    *Note:*  I think the index property exists for this UI control because it shares the same Objective-C code as {{Ti.UI.TabbedBar}}. An index property makes sense for {{TabbedBar}} since it has a selection state.    This issue is being raised since we want to add {{ButtonBar}} to Android and Windows and we don't think the index property will make sense on those platforms either.  ",Bug,Low,Closed,"2018-08-28 22:08:51","2018-08-28 22:08:51",3
"The Titanium SDK ","Android: Update V8 runtime to 7.0.276.42","As an ongoing effort, each major revision of the SDK should target the latest stable branch tip.    For 8.0.0 we should target roughly V8 6.9.    We can track the stable versions here: https://omahaproxy.appspot.com    The release cycle for V8 is ~6 weeks. Currently V8 stable is 6.8.x, 6.9.x is beta. It's anticipated that at least 6.9.x will become stable by the 8.0.0 timeframe.",Improvement,High,Closed,"2018-08-28 15:04:46","2018-08-28 15:04:46",13
"The Titanium SDK ","Android: Cursor issue when textfield inside view, which is under tableview ","h6.Reproduce  1.Run the following code in an Alloy project. (Simple structure, textfield is under view, and view is under tableviewRow).  2.Click different Rows (basically card type in the example).   3 There will be a textfield to input.  4.Try #2 and #3 serval times.    h6.Problem  5. You will see, some times, there is no cursor display in textfield.   6. The other problem is, some times, if you click the textfield, which is focused already. The cursor will disappear.    h6.Note  Mainly code about focus and cursor is around line 471 - 478 in index.js file",Bug,None,Closed,"2018-08-24 09:25:27","2018-08-24 09:25:27",3
"The Titanium SDK ","Generate source maps for transpiled code","- Currently, we do not generate any source maps for transpiled JS code. Babel can produce a source map that can be used when debugging with Inspector.",Bug,High,Closed,"2018-08-23 17:52:40","2018-08-23 17:52:40",5
"The Titanium SDK ","Windows: Improve build/launch time via Titanium CLI","Building/launching apps via CLI is much slower than Visual Studio.    I suspect, Titanium Windows CLI is slower because we usually launch external tools (.exe)  in order to get information/build/launch projects and then read/parse standard outputs/errors to get the results. I would expect Visual Studio doesn't do such a thing but uses public/private API to deal with them such as MSBuild API.   ",Improvement,High,Closed,"2018-08-23 03:21:45","2018-08-23 03:21:45",13
"The Titanium SDK ","Android: WebView does not load when Custom Useragent is set","h5. Steps to reproduce:  1.Use the code below in app.js      h5. Actual results:  1.The web view does not load    h5.Expected results:  1.Web VIiew should load successfully",Bug,None,Resolved,"2018-08-22 18:50:33","2018-08-22 18:50:33",0
"The Titanium SDK ","Hyperloop: Android - Can't instantiate a CoordinatorLayout in SDK 7.3.0","Hi, since 7.3.0 this example does not work anymore. https://github.com/<USER>hyperloop-examples/blob/master/app/controllers/android/nativelayout.js     And if I try to create a CoordinatorLayout directly in hyperloop or in a java module I get this exception:    ",Bug,Medium,Closed,"2018-08-20 22:16:11","2018-08-20 22:16:11",7
"The Titanium SDK ","Android: Ti.UI.WebView not firing events in 7.x","Setting custom UserAgent for WebView (Android) causes WebView to not fire events (ex. load, beforeLoad and etc.).Using default UserAgent - expected behaviour, events firing.    ",Bug,Critical,Closed,"2018-08-20 21:20:29","2018-08-20 21:20:29",5
"The Titanium SDK ","Xcode 10: Cannot build native modules in Xcode IDE when using new build-system (default)","Related to TIMOB-26109, Xcode cannot find the header-source-paths used before (e.g. {{#import TiApp.h}}) from {{~/Library/Application Support/Titanium/mobilesdk/osx/7.3.0.GA/iphone/include/}} anymore. While building the module works fine, building the library from Xcode, for example to debug the development <USER> does not work anymore. The radar is [rdar://40906817|http://www.openradar.me/40906817] and it's still open after 2 months of iOS 12 / Xcode 10 Beta testing.    For our current module architecture, this is fundamental. For our new Swift support and framework-based modules, this will not be an issue anymore, but all existing modules will still be affected by it.     As a workaround, the developer can go to {{File > Project Settings}} and select the Legacy Build System which does not has this issue.",Bug,Critical,Resolved,"2018-08-20 11:29:15","2018-08-20 11:29:15",2
"The Titanium SDK ","Hyperloop: iOS - TiApp Utility Class methods throw selector-error","When attempting to register a UIApplicationDelegate instance through hyperloop the following exception is thrown:      I'm providing an example project where I've copied and pasted the example code from Titanium's wiki",Bug,Critical,Resolved,"2018-08-18 13:03:05","2018-08-18 13:03:05",2
"The Titanium SDK ","Android: Support touch feedback on backgroundImage, backgroundGradient, and transparent backgrounds","*Summary:*  A {{Ti.UI.View}} object's {{touchFeedback}} and {{touchFeedbackColor}} properties will only show a touch/tap ripple animation if you set the view's {{backgroundColor}} property to a non-transparent color. This is a documented limitation.  https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.View-property-touchFeedback  https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.View-property-touchFeedbackColor    We should add touch feedback to the following as well:  * {{backgroundImage}} property (only apply ripple to non-transparent part)  * {{backgroundGradient}} property (only apply ripple to non-transparent part)  * No background (ripple applied to entire transparent background)    *Use-Case:*  This is needed for developers who want to show buttons with custom image backgrounds.      *Note:*  The touch feedback feature only works on Android 5.0 and newer OS versions.  ",Improvement,Low,Closed,"2018-08-18 08:28:14","2018-08-18 08:28:14",8
"The Titanium SDK ","Android: Add versionCode to tiapp.xml template","Currently the default tiapp.xml doesn't include the versionName or versionCode in the manifest. It will always use versionNumber 1 and versionCode 1 in the AndroidManifest. This will lead to an error when a user uploads an update to the playstore and has to search the documentation or internet to find out where to make these settings.    Adding the versionNumber to the tiapp.xml will give the user a place to start. And by using the <version> number inside the versionName it will automatically stay in sync with the iOS version. Advanced users can still overwrite the versionName with a custom name like before by adding the parameter to tiapp.xml    Scenario:  * android:versionCode is exposed in the <manifest> block  * user creates an update and can increase the version code  * AndroidManifest will use the versionCode from the <manifest> block and the <version>  * if a user wants to have a different version number he can add android:versionName to the tiapp.xml (like he would do it today or already has) and it will overwrite the <version> string inside the AndroidManifest    Existing apps with a custom android:versionCode and android:versionName would still use those values.  New apps will use the new android:versionCode from <manifest> and the normal <version> number as android:versionName",Improvement,Medium,Closed,"2018-08-16 20:06:30","2018-08-16 20:06:30",3
"The Titanium SDK ","iOS: accessibilityLabel doesn't get properly set on Ti.UI.TableView","While working through our Appium suite, I noticed that tests that relied on using the accessibility id/label for a table view ere failing. Using the Appium Desktop inspector, I see that the table view has no accessibility id assigned, though the code has set an accessibilityLabel.    I assume this is because the view gets attached async, so the code here does not attempt to set it: https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/TiViewProxy.m#L2856-L2863  ",Bug,High,Closed,"2018-08-17 12:30:32","2018-08-17 12:30:32",2
"The Titanium SDK ","Windows: leverage extended execution restricted capabilities","Hello,    One a Windows App with <USER>which calls an asynchronous function on a .NET Core SDK which downloads extensive amounts of data and saves it directly on the App's AppData however, as per limitations from Windows 10, the App must be in the foreground for the whole execution.   This creates a problem because if the App gets minimized or it is unfocused while on FullScreenMode, this call will fail. There exists a few restricted capabilities in UWP that may help with this and I wanted to reach out whether these are supported on Ti SDK 7.3 for Windows 10 or whether there's a way to do this within the Titanium SDK.       The customer have tried adding         On the tiapp.xml file however, in the vsbuild folder's manifest these were removed. They also tried prefixing the Capability element with rescap but it failed to compile.    Please let us know if you need any more information.    Thanks",Improvement,High,Closed,"2018-08-16 19:08:17","2018-08-16 19:08:17",8
"The Titanium SDK ","iOS: Crash on iOS 12 Beta","Taken from [this Slack thread|https://ti-slack.slack.com/archives/C03CVQX2A/p1534443895000100]:    We are trying to run app on iOS 12.0 Beta Version App crashes with Following Error Logs. Can Anyone direct me what is causing app to Crash.    ",Bug,Critical,Resolved,"2018-08-16 18:28:37","2018-08-16 18:28:37",1
"The Titanium SDK ","Reduce splash screen image sizes","The current splash screen images are pretty big (in terms of kb's). They can be compressed without loosing quality",Improvement,Low,Closed,"2018-08-16 13:33:28","2018-08-16 13:33:28",0
"The Titanium SDK ","iOS (webView): text remains hidden behind the keyboard in iPad(landscape mode) when writing into text area within the webview.","*Issue description:*  I am opening the following URL in the webView. When I write into text area within the webView, the writing goes back under the keyboard.  https://lite.educode.ca/nativeexercise/59ef7ee6dfae4e3ea58b4d36/91ae5c31-254a-433b-a736-0a002b998829  This happens on iPad in landscape mode, doesn't happen in portrait mode.    *Steps to reproduce:*  1. Run the test code, webview will show the webpage.   2. Set the orientation to landscape.  3. In the editor area you can keep pressing enter and go on line 31 or more and write any text there you will find text going under the keyboard    *Test code:*    ",Bug,None,Resolved,"2018-08-16 07:06:45","2018-08-16 07:06:45",1
"The Titanium SDK ","Android: Support faster SDK builds with parallel execution '-j' on Windows","When building the Titanium SDK (ie: titanium_mobile) on Mac, the Android NDK will build the C/C++ library with the {{-j8}} command line argument. This enables parallel execution of up to 8 build tools to be ran in parallel, allowing for faster build times.    On Windows, this feature is purposely disabled due to file locking errors caused by dependency order and code generation issues in the make file. These issues should be resolved for faster build times on Windows.",Improvement,Low,Closed,"2018-08-15 04:01:37","2018-08-15 04:01:37",13
"The Titanium SDK ","iOS: Crash during cleanup of Ti.Media.VideoPlayer",,Bug,High,Resolved,"2018-08-14 15:17:09","2018-08-14 15:17:09",0
"The Titanium SDK ","iOS: Ti.Media.AudioPlayer test-suite crashes in some situations","It seems like our Ti.Media.AudioPlayer test-suite crashes in some situations. The crash report is attached and looks like being an issue with the KVO-observer we use to handle the AVPlayer API. I remember we had some issue with closing the audio-player and still listening to the KVO, so this may be similar.",Bug,High,Closed,"2018-08-14 11:17:49","2018-08-14 11:17:49",0
"The Titanium SDK ","Android 9: Cannot launch Emulator with API-level 28","When trying to boot an Android emulator with API-level 28 (Android 9), the build fails with the following error:    As a workaround, the emulator can be booted before and it works:  ",Bug,None,Closed,"2018-08-14 09:06:04","2018-08-14 09:06:04",1
"The Titanium SDK ","Android: Listview with template causes a nullpointer on itemclick","When you click on a listitem, using a Listview with template, it causes a nullpointer.  It happens when you try to manipulate the items of a section.    *Test case:*    *index.xml*        -------------------    *index.js*      ",Bug,Critical,Closed,"2018-08-13 17:47:30","2018-08-13 17:47:30",1
"The Titanium SDK ","Android: node-titanium-sdk 0.6.0 doesn't wait for Genymotion cold boot in 7_3_X","The 7_3_X branch was bumped to version 0.6.0 of the node-titanium-sdk. When using that branch to boot a Genymotion emulator (v2.12.0) the first run isn't working anymore. A second run with a running emulator does properly boot an Android app.    Expected behaviour:  ---    ---    Current behaviour using (7.3.0.v20180809095942):  ---    ---",Bug,Critical,Resolved,"2018-08-12 15:35:05","2018-08-12 15:35:05",1
"The Titanium SDK ","Windows: Switching to JsRT (Chakra) for better performance","Peformance has been the issue on Windows for a long time. From what I observed, some basic JavaScript operations (like calling constructor, accessing properties and functions) against Titanium proxy objects are simply slow. For instance, creating 200 proxy objects on Windows (Titanium 7.4.0.GA) takes about 2 seconds on Windows locally for me.        We have been improving performance overall and have archived huge improvements like TIMOB-23637 but yet we can't keep up with other platforms regarding performance now, I am guessing that huge difference between other platforms (especially between iOS) is that the unavailability of JIT (Just In Time) compiler on our JavaScript engine. On Windows, JIT is not enabled because it is not available yet. It is huge disadvantage regarding performance.     So this is quite fundamental issue. In order to improve performance, we might want to consider developing JavaScriptCore JIT for Windows, or try switching to Chakra, a JavaScript engine which Microsoft developed, which should have JIT enabled and should provide much better performance unlike our custom JavaScriptCore port. Again this requires big-and-fundamental changes regarding our Titanium (AKA {{TitaniumKit}} and {{HAL}}) framework overall technically, and I don't think we can archive huge peformance improvements without this.",Epic,High,Open,"2018-08-13 00:59:21","2018-08-13 00:59:21",23
"The Titanium SDK ","Android: Using __dirname in app.js errors with Can't find variable: __dirname ","h5.Description    *This is not a regression occurs using 5.5.1.GA stack*    When using {{__dirname}} in an app.js file the following is thrown    *Using __dirname in any file other than app.js works*        h5.Steps to reproduce    # In your app.js add {{console.log(__dirname)}}  # Build for Android    h5.Actual result    The above error is thrown    h5.Expected result    __dirname should be able to be used in app.js file",Bug,High,Resolved,"2018-08-10 13:05:58","2018-08-10 13:05:58",0
"The Titanium SDK ","Hyperloop: iOS - Objective-C++ files are incorrectly added to the Xcode project","Adding a source file with .mm extension (Objective-C++) will incorrectly add it with {{sourcecode.c.objc}} file type to the Xcode project, should be {{sourcecode.cpp.objcpp}}.    Affects a deprecated feature but the fix is a simple one liner.",Bug,Medium,Resolved,"2018-08-10 11:51:32","2018-08-10 11:51:32",1
"The Titanium SDK ","insertAt not working as expected","On Android inserting children in a view with defined layout (I have tested only with {{vertical}} so far) ends with a different result based on what order the method is called even if the {{position}} property matches. In the attached sample the views on the left are added in descending order based on the position index and the views in the right container are added in ascending order based on the same. IMO it would make sense for the end result to be the same no matter in what order the method is called if the positions match.     After clicking the button to replace the view with index in the left container you can notice that it is not only changing color - from gray to red, but also changing its position. Having in mind that the {{left}} property is 15 units multiplied by the position index it should remain in the same position. After the replacement the new view takes position which is the same as the view with index 3 in the right container. Which is the expected position.    -I haven't tested that on iOS and I don't know what is the behavior in such case.-  [~<USER> ran the sample on iOS and we get the exact same behavior. Is this the intended behavior?",Bug,Medium,Closed,"2018-08-10 10:28:08","2018-08-10 10:28:08",1
"The Titanium SDK ","ES6 transpile not working","Created a new app, added Transpile option to tiapp.xml and some sample ES6 code and when building I get:        Project:    https://www.dropbox.com/s/7e467yjzg4a8m1o/es6.zip?dl=1",Bug,None,Resolved,"2018-08-09 15:52:53","2018-08-09 15:52:53",0
"The Titanium SDK ","Android: Added Ti.App event userinteraction","In order to create a solution for https://jira.<USER>org/browse/TIMOB-13884, we're trying to capture all user interaction events.     The Android Activity has the onUserInteraction() method. The Activity has to throw events each time the onUserInteraction() is triggered.    https://developer.android.com/reference/android/app/Activity#onUserInteraction()",Improvement,Low,Closed,"2018-08-09 09:54:37","2018-08-09 09:54:37",2
"The Titanium SDK ","TypeScript: Add dict types for create factory functions","Improve creation dict typings for create factory functions. This is currently set to {{any}} but we could create a dictionary of available properties with [Distributive conditional types|http://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html#distributive-conditional-types]",Improvement,Medium,Open,"2018-08-08 11:41:50","2018-08-08 11:41:50",5
"The Titanium SDK ","TypeScript: Update Titanium typings to 7.3.0","The TypeScript typings for Titanium need to be updated for our latest SDK release 7.3.0",Story,Medium,Closed,"2018-08-08 11:27:00","2018-08-08 11:27:00",3
"The Titanium SDK ","Android: Drawer hamburger menu disappears on click","While trying to get a reproducible case for memory-issues, I found another issue where when clicking the hamburger menu of a drawer layout will hide it and does not make it come back.     Test-Case:  {code:js}  var window = Ti.UI.createWindow({ backgroundColor: 'white', theme: 'Theme.AppCompat.NoTitleBar', exitOnClose: false });    var btn = Ti.UI.createButton({   title: 'Trigger'  });    btn.addEventListener('click', function() {   var window2 = Ti.UI.createWindow({  title: 'Test' });   var left = Ti.UI.createView({ backgroundColor: 'red' });   var center = Ti.UI.createView({ backgroundColor: 'blue' });     var button2 = Ti.UI.createButton({ title: 'Close'});   left.add(button2);     button2.addEventListener('click', function () {    drawer.closeLeft();    window.open();    window2.close();   })     var drawer = Ti.UI.Android.createDrawerLayout({    centerView: center,    leftView: left   });   window2.add(drawer);   window2.open();   window.close();  });    window.add(btn);  window.open();  {code}    *Work-Around:*  The solution is to set up the hamburger button on the ActionBar yourself like this...  {code:java}  window.addEventListener(open, function(e) {   var actionBar = window.activity.actionBar;   if (actionBar) {    actionBar.displayHomeAsUp = true;    actionBar.homeButtonEnabled = true;    actionBar.onHomeIconItemSelected = function(e) {     // Handle the hamburger button click here...    };   }  });  {code}    We document this here...  https://docs.<USER>com/platform/latest/#!/api/Titanium.Android.ActionBar  ",Bug,Medium,Closed,"2018-08-07 20:02:46","2018-08-07 20:02:46",3
"The Titanium SDK ","Android: Cannot build anymore, ti info broken","Our Android setup is broken. Since the latest Android Studio update, I cannot see any emulators anymore and ti info is giving the following:    Not only is the note about upgrading to Ti SDK 3.2 incorrect, outdated and confusing, but also the CLI thinks there are no issues although obviously no Android platform can be detected properly.",Bug,Critical,Closed,"2018-08-06 08:36:29","2018-08-06 08:36:29",0
"The Titanium SDK ","Android: Closing parent window closes current window as well","I am running into a strange situation in which the current window is closed when i call {{close()}} on the parent window. Is there a workaround for this? It works fine on iOS and is a common pattern for login/logout scenarios.",Bug,Critical,Closed,"2018-08-05 22:25:19","2018-08-05 22:25:19",1
"The Titanium SDK ","iOS: Make RefreshControl on ScrollView available on iOS < 10","Currently, we only support the {{refreshControl}} property on the Ti.UI.ScrollView for iOS 10+. We can support it for earlier versions as well:    {code:js}  var win = Ti.UI.createWindow({      backgroundColor: '#fff'  });    var nav = Ti.UI.iOS.createNavigationWindow({      window: win  });    var refreshControl =  Ti.UI.createRefreshControl();    refreshControl.addEventListener('refreshstart', function () {      setTimeout(function () {          refreshControl.endRefreshing();      }, 2000);  });    var scrollView = Ti.UI.createScrollView({      refreshControl: refreshControl,      layout: 'vertical'  });    scrollView.add([      Ti.UI.createView({ top: 30, width: 300, height: 100, backgroundColor: 'red'}),      Ti.UI.createView({ top: 30, width: 300, height: 100, backgroundColor: 'red'}),      Ti.UI.createView({ top: 30, width: 300, height: 100, backgroundColor: 'red'}),      Ti.UI.createView({ top: 30, width: 300, height: 100, backgroundColor: 'red'}),      Ti.UI.createView({ top: 30, width: 300, height: 100, backgroundColor: 'red'}),      Ti.UI.createView({ top: 30, width: 300, height: 100, backgroundColor: 'red'}),      Ti.UI.createView({ top: 30, width: 300, height: 100, backgroundColor: 'red'}),      Ti.UI.createView({ top: 30, width: 300, height: 100, backgroundColor: 'red'}),      Ti.UI.createView({ top: 30, width: 300, height: 100, backgroundColor: 'red'}),      Ti.UI.createView({ height: 30 }),  ])    win.add(scrollView);  nav.open();  {code}",Improvement,Low,Closed,"2018-08-05 19:50:46","2018-08-05 19:50:46",0
"The Titanium SDK ","LiveView: Calling liveview server stop causes exception, but stops connections","When using {{liveview server stop}} to stop all connections, the following error occurs:    It seems to error out, but after checking with {{liveview server status}}, they have been killed properly.",Bug,None,Closed,"2018-08-04 14:20:45","2018-08-04 14:20:45",1
"The Titanium SDK ","Titanium project boilerplates for integration with various tech stacks","While working on the Angular and Vue.js projects we have experimented with different technology stacks and how they can work with Titanium. A lot of this can benefit our users in their existing and new projects so it would be a good thing to create some boilerplate projects that demonstrate how to use these various tech stacks.    Suggestion for possible boilerplate projects:  * Use [TypeScript|http://www.typescriptlang.org/] in app projects and libraries (/) (https://www.<USER>com/blog/2018/08/introducing-titanium-boilerplates-typescript/)  * Unit test app and module projects as well as libraries with [Karma|https://karma-runner.github.io/]  * End-to-end test app and module projects as well as libraries with [Appium|http://appium.io/] and [WebdriverIO|http://webdriver.io/]  * Use [Webpack|https://webpack.js.org/] to load, transform and bundle all kinds of assets.    More ideas that required additional evaluation:  * State libraries like Vuex, Redux or MobX",Story,Medium,Open,"2018-08-03 09:39:00","2018-08-03 09:39:00",21
"The Titanium SDK ","Android: NotificationManager.notify() will crash while screen is off and if app is missing WAKE_LOCK permission","*Summary:*  As of Titanium 6.2.0, posting a local notification while the screen is off will cause the app to crash if the app does not have the {{WAKE_LOCK}} permission.    Titanium should not require the {{WAKE_LOCK}} permission.    *Steps to reproduce:*  # Connect an Android device to your machine.  # Turn the Android device's screen off.  # Build and run the below code on that Android device.  # View the log and notice an exception was printed on startup.  # Turn on the device's screen and view the app. Notice an exception dialog was displayed.        *Result:*  The following exception gets logged...      *Expected Result:*  App should not require the {{WAKE_LOCK}} permission. Java code should check if app has {{WAKE_LOCK}} before attempting to use it. If the permission is missing, then avoid it and do not turn on the screen.    Note that many Android users tend to avoid apps that use the {{WAKE_LOCK}} permission since they're considered to waste battery life. This permission is a dirty word in the Android world and is best avoided if possible.    *Cause:*  This is an issue in Titanium's Java {{NotificationManagerModule.notify()}} method...  [NotificationManagerModule.java#L137|https://github.com/<USER>titanium_mobile/blob/master/android/modules/android/src/java/ti/modules/titanium/android/notificationmanager/NotificationManagerModule.java#L137]    The solution is to do the following:  * Check if {{WAKE_LOCK}} permission is defined in AndroidManifest.xml via the {{Context}} class before creating a wake lock.  * {{catch}} block should catch the {{Exception}} type to catch all exception.  ",Bug,High,Closed,"2018-08-03 00:45:55","2018-08-03 00:45:55",3
"The Titanium SDK ","Android: TableView with remote image crash","Moved from TIMOB-26225 into separate issue.    Test app:        Steps to reproduce:  1. Build app with {{<property name=run-on-main-thread type=bool>*false*</property>}})  2. Run app  3. Double click on Reload button    [Explanation|https://jira.<USER>org/browse/TIMOB-26225?focusedCommentId=439536&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-439536]    Affects any build with [TIMOB-26202] changes.      refs [TIMOB-26225], [TIMOB-26202]",Bug,Critical,Closed,"2018-08-02 10:57:46","2018-08-02 10:57:46",1
"The Titanium SDK ","Android: Allow activity android:launchMode attribute to be set in tiapp.xml","*Summary:*  In Titanium 6.1.0, our build tools ignore the activity android:launchMode setting in tiapp.xml and log the following build warning. This was to avoid confusion over how Google's singleTask feature works and to favor Titanium's intent-filter-new-task property instead.  {code}  [WARN] : android:launchMode should not be used. Ignoring definition from <ActivityName>  {code}    We should change the behavior to allow developers to set android:launchMode again, but keep the build warning. Some developers already know how to deal with the repercussions of the singleTask setting where all child activity windows are automatically closed upon app resume.    *Test:*  # Add the below Android xml settings to your tiapp.xml file.  # In the XML, change the {{<activity>}} element's name attribute's {{<ProjectName>}} part to the name of your Titanium project where only the 1st letter is capitalized. (Ex: MyProject would become Myproject.)  # Build the application for Android.  # Note the build warning that appears regarding android:launchMode.    *tiapp.xml*  {code:xml}  <?xml version=1.0 encoding=UTF-8?>  <ti:app xmlns:ti=http://ti.<USER>org>   <android xmlns:android=http://schemas.android.com/apk/res/android>    <manifest>     <application>      <activity android:name=.<ProjectName>Activity android:launchMode=singleTask>       <intent-filter>        <action android:name=android.intent.action.MAIN/>        <category android:name=android.intent.category.LAUNCHER/>       </intent-filter>      </activity>     </application>    </manifest>   </android>  </ti:app>  {code}  ",Improvement,Medium,Closed,"2018-08-02 01:38:40","2018-08-02 01:38:40",1
"The Titanium SDK ","Android: ImageView image set to a URL while autorotate is true will crash if running on main thread","*Summary:*  The Android {{ImageView}} will cause a crash if you set image to a URL, autorotate to {{true}}, and the JavaScript runtime is set up to run on the main UI thread.    *Steps to reproduce:*  # Uninstall the app from the device if already installed. (Will delete cached web responses.)  # Make sure the Android device has Internet access.  # Set tiapp.xml file property run-on-main-thread to {{true}}.  # Build and run the below code.  # Notice that the app crashes/hangs on app startup.    tiapp.xml  {code:xml}  <?xml version=1.0 encoding=UTF-8?>  <ti:app xmlns:ti=http://ti.<USER>org>   <property name=run-on-main-thread type=bool>true</property>  </ti:app>  {code}    app.js  {code:javascript}  var window = Ti.UI.createWindow();  window.add(Ti.UI.createImageView({   image: https://raw.githubusercontent.com/recurser/exif-orientation-examples/master/Portrait_3.jpg,   autorotate: true,  }));  window.open();  {code}    *Cause:*  When the {{ImageView}} property {{autorotate}} is set to true, it will attempt to read the image's EXIF rotation if applicable. Since the image file is not in storage, it will attempt to re-download the image on the main UI thread, but Android's Java {{HttpUrlConnection}} class will throw a {{NetworkOnMainThreadException}} when attempting to do so.    *Work-arounds:*  You can do one of the following to work-around this issue...  * Set tiapp.xml property run-on-main-thread to {{false}}.  * Download the image file to storage via {{HTTPClient}} and display the download file instead of a URL.  * Set {{ImageView}} property autorotate to {{false}}.  ",Bug,High,Closed,"2018-07-31 22:53:02","2018-07-31 22:53:02",7
"The Titanium SDK ","Android: Change in memory behavior","[~<USER>, [~<USER>  I noticed a change in the memory management after the recent changes on it that I think deserves some attention. Until 7.2.0.GA the sample app I have attached had this behavior.    1. Open the application.  2. Click Remove.  3. Force GC through the Android profiler tool.  4. Click Add again.    The colorized views are successfully added again to the window.    After the merge of: https://github.com/<USER>titanium_mobile/pull/10174 the same sequence results in a crash (attached in the ticket). That happens because the Views are garbage collected.  The same goes with Ti.Map module when AnnotaionProxies are released (that happens when they are removed from the MapView) for example.  What bothers me is that this change may cause problems in applications that are relying on keeping the references to proxies in the same context after heavy memory usage (one that can cause the system to garbage collect). And I think if that is the case for Proxies in general we may have that problem in a variety of usages.    How do you think we should go about that?    Note: I haven't matched the position of the views to be related to the device's screen. I have been testing on Pixel emulator.    P.S. We talked with <USER>about that earlier this week and at that moment we had a upcoming changes in the most recent PR for memory management. I have tested today with it and the described change in behavior is still present.",Bug,None,Closed,"2018-07-27 11:15:23","2018-07-27 11:15:23",5
"The Titanium SDK ","Android: Remove harmless activity errors/warnings logged on startup","*Summary:*  A Titanium 7.3.0 built Android app will log the following messages on startup.        These errors/warnings are actually harmless noise triggered by Titanium when loading its core modules (ie: {{Ti}}, {{Ti.UI}}, {{Ti.Platform}}, etc.) when the Android {{Application}} instance gets created, but before an {{Activity}} has been created. There is no {{Activity}} to fetch at this point in the code and the modules already correctly handle {{null}} and will fetch a valid {{Activity}} later when needed.    *Recommended Solution:*  It's the responsibility of the caller to handle the null case, not the method.    So, remove the {{Application instance no longer available.}} log message in {{AndroidModule.getCurrentActivity()}} here...  https://github.com/<USER>titanium_mobile/blob/7_3_X/android/modules/android/src/java/ti/modules/titanium/android/AndroidModule.java#L580    And remove the {{No valid root or current activity found for application instance}} log message from {{TiApplication.getRootOrCurrentActivity()}} here...  https://github.com/<USER>titanium_mobile/blob/7_3_X/android/titanium/src/java/org/<USER>titanium/TiApplication.java#L297    *Side Note:*  The {{TiApplication.getInstance()}} call can never return {{null}}. The Android {{Application}} class is always the 1st object to be created within the app and is guaranteed to exist for the lifetime of the app. There is no point in doing a {{null}} check on it. Nor do we need to keep a weak reference to it within {{TiApplication}}. A normal strong reference will suffice.  ",Improvement,Medium,Closed,"2018-07-27 02:11:09","2018-07-27 02:11:09",1
"The Titanium SDK ","Android: Window leak in Ti.UI.currentWindow","Steps to reproduce:  1. Create application, put attached files in {{Resources}}  2. Run {{ti build}} with {{--debug-host localhost:8990}}  3. Open {{chrome-devtools://}} link in Chrome  4. Resume script execution, wait for app load  5. In memory tab, press Take snapshot  6. In app press OPEN 2ND WINDOW  7. In memory tab, press Take snapshot  8. In app press OPEN 3RD WINDOW  9. In memory tab, press Take snapshot  10. In app press back button  11. In memory tab, press Take snapshot  12. In app press back button  13. In memory tab, press Take snapshot    Now you got five snapshots.  1. Select Snapshot 2  2. Change Summary to Comparison, put Window in Class filter  3. Expand Window, observe one new Window instance, remember @id  4. Select Snapshot 5, put Window in Class filter  5. Expand Window, observe three instance of Window  6. Select Window instance with @id from (3)  7. Observe Retainers below",Bug,Critical,Closed,"2018-07-26 09:02:38","2018-07-26 09:02:38",3
"The Titanium SDK ","Windows: Macro for removed/moved/deprecated APIs","Introduce C++ macros to mark removed/moved/deprecated APIs for Windows, like {{DEPRECATED_REPLACED}} and {{DEPRECATED_REMOVED}} for iOS and {{@deprecated(7.0.0)}} and {{@removed(8.0.0)}} annotations for Android.",Story,Medium,Open,"2018-07-25 07:54:14","2018-07-25 07:54:14",13
"The Titanium SDK ","Windows : Support KEYBOARD_TYPE_NUMBER_PAD / KEYBOARD_TYPE_NUMBERS_PUNCTUATION","Hello!  Can you please let me know how to show numeric keyboard on windows app on textbox or TextField?  Titanium.UI.KEYBOARD_TYPE_NUMBERS_PUNCTUATION is only available for Android and iOS.  https://docs.<USER>com/platform/latest/#!/api/Titanium.UI-property-KEYBOARD_TYPE_NUMBERS_PUNCTUATION    Thanks ","New Feature",Medium,Closed,"2018-07-24 18:58:32","2018-07-24 18:58:32",13
"The Titanium SDK ","Android: Cannot get current activity in native module when using 7.3.0+","I have a module where I want to configure an SDK by passing the current activity to it automatically  on app start. We have the {{onCreate}} method via the {{@Kroll.onCreate}} annotation, but neither of the following methods worked there:  - {{getActivity()}} (because of the static context)  - {{TiApplication.getAppRootOrCurrentActivity()}} errors:   {quote}  No valid root or current activity found for application instance  {quote}  - TiApplication.getInstance().getCurrentActivity(): Same as above    I also tried invoking them in the constructor of the module but that did not work either. I am trying to prevent a manually {{initialize()}} call from the module, so I am wondering if there is a better approach here.",Bug,Critical,Closed,"2018-07-22 13:48:45","2018-07-22 13:48:45",0
"The Titanium SDK ","Android: Remove kroll-thread","The kroll thread was deprecated in SDK 7 and should be removed in 8.    This means that the tiapp.xml property run-on-main-thread will be ignored and will be internally hard-code to {{true}}.  ",Story,High,Closed,"2018-07-21 10:04:59","2018-07-21 10:04:59",8
"The Titanium SDK ","Android: TableView leaks memory when overwriting data property","*Summary:*  Replacing a {{TableView}}'s data array property causes a memory leak where the previous array of rows do not get garbage collected.    *Steps to reproduce:*  _(Below requires an Android emulator and Chrome web browser to be installed.)_  # Create a classic Titanium project with the below code.  # Go to the project directory at the command line.  # Enter: {{appc ti build -p android --debug-host /127.0.0.1:51388}}  # Wait for the app to launch. It'll hang on the splash screen.  # In the log, copy the the chrome-devtools://devtools/bundled/inspector.html?... URL.  # Open the Chrome browser and paste the copied URL.  # In Chrome, select the Memory tab.  # Select the Allocation instrumentation on timeline radio button.  # Click the Start button.  # Select the Sources tab.  # Click the Resume script execution toolbar button in top-right corner. Looks like: [>]  # Wait for the Titanium app to display a TableView.  # Click the Reload button in the bottom-right corner of the app.  # Click the Android back button.  # In Chrome, select the Memory tab.  # In Chrome, top-left corner, click the Stop recording heap profile toolbar button.  # Under the Constructor column, expand the Label tree.  # Note that 50 Labels are listed under it. These have not been garbage collected.        *Notes:*  * If a {{TableView}} is garbage collected, then its rows are correctly garbage collected as well. This is only an issue when overwriting the rows via the data property.  * This is an issue for Alloy since its generated code will replace the {{TableView}} data array any time the model changes via a fetch, destroy, change, add, remove, or reset event.  ",Bug,High,Closed,"2018-07-21 07:41:58","2018-07-21 07:41:58",8
"The Titanium SDK ","Android: Modify OptionDialog to display a list of normal buttons","*Summary:*  The {{Ti.UI.OptionDialog}} currently displays a vertical list of radio buttons, but none of the radio buttons are ever enabled if property {{selectedIndex}} is not set. This is not a good interface. Especially if the {{buttonNames}} property is not set as well.    It would be better to display a vertical list of normal button like how it works on iOS.        We should only use radio buttons if the {{buttonNames}} property is also set. In which case, tapping a radio button should not automatically close the dialog. Doing it this way, we'll be following Google's material design guideline here...  https://material.io/design/components/dialogs.html#usage  ",Improvement,Medium,Closed,"2018-07-21 03:50:23","2018-07-21 03:50:23",3
"The Titanium SDK ","Android: App crashes when trying to re-open a closed window ","When trying to re-open a window previously closed the app crashes. This didn't happen on 7.2.0.GA.    As per example above, click the button, close the window then click the button again.        Question is. Which behaviour is the expected behaviour. Not being able to reopen a window, or being able to reopen a window",Bug,None,Closed,"2018-07-20 13:28:50","2018-07-20 13:28:50",3
"The Titanium SDK ","iOS : ScrollView content scrolling vertically in bigger iPads when using percent-based layout","Hello,    The customer is using the scrollView with Horizontal layout and adding the required UI elements to a main view and adding it back to the actual scrollview. Even after fixing the height of scrollView equal to that of main view inside it, its still scrolling vertically which is not an expected behaviour.     The sample code to replicate the issue in iPAD pro 12.9 inch (2nd generation) and other bigger iPAD's.     *Sample code:*      *Test Environment:*  <USER>Command-Line Interface, version 7.0.4  SDK: 7.2.0.GA, 7.1.1 GA  iOS device: iPAD pro 12.9 inch (2nd generation)    Thanks",Story,None,Closed,"2018-07-20 13:24:49","2018-07-20 13:24:49",1
"The Titanium SDK ","Windows :  Implement Ti.UI.WebView.mixedContentMode ","Android 5 (21) adds WebSettings.setMixedContentMode to control how mixed content is handled (https that contains inlined http).  Need to add access to this.  https://developer.android.com/reference/android/webkit/WebSettings#setMixedContentMode(int)    Description:   Images doesn't load in webview if they are hosted on http server!  E.g. if you assign webview url property to https://blogs-dev.vmware.com/vov/authors/  Some images get load properly but some which are hosted on http server or have http://xyz path they are not getting loaded.    Test code:      Error Log:      Test Environment:       Thanks ","New Feature",Medium,Closed,"2018-07-19 23:53:24","2018-07-19 23:53:24",1
"The Titanium SDK ","Android: Resolve Veracode string equality warnings","*Summary:*  The Veracode scanner has sighted the following string equality/comparison issues in Titanium's Android Java code...    ||Class||Line||Description||  |MediaModule.java|729|Member variable {{intentType}} should use {{equals()}} instead of {{==}}|  |TiBlob.java|263|Member variable {{mimeType}} should use {{equals()}} instead of {{==}}.|  |TiBlob.java|421|Member variable {{mimeType}} should use {{! equals()}} instead of {{!=}}.|  |TiCameraActivity.java|413|Member variable {{mediaType}} should use {{equals()}} instead of {{==}}.|  |TiCameraActivity.java|682|Member variable {{mediaType}} should use {{equals()}} instead of {{==}}.|    Note that there are no bugs in the above code.    String reference equality happens to work for the way it's written, but we should change to use {{equals()}} to avoid potential bugs in the future.  ",Improvement,Low,Closed,"2018-07-19 21:21:58","2018-07-19 21:21:58",1
"The Titanium SDK ","iOS: File methods isFile() and isDirectory() are missing for encrypted assets","*Summary:*  On iOS, when loading an encrypted asset such as app.js via {{Ti.Filesystem.getFile()}}, the returned {{File}} object is missing methods {{isFile()}} and {{isDirectory()}}. Attempting to call these methods will cause JavaScript runtime error.    This is an issue for iOS production builds and test builds for device.  This is not an issue for iOS Simulator builds since JS files are not encrypted.  This is not an issue on Android.    *Steps to reproduce:*  # Create a Titanium project with the below code.  # Build and run to an iOS device.  # Notice that the app crashes on startup.  # Build and run to the iOS simulator.  # The {{isFile()}} and {{isDirectory()}} methods work and are correctly logged.        *Cause:*  Our {{TiFileSystemBlobProxy.m}} code is missing the {{isFile()}} and {{isDirectory()}} methods.  ",Bug,Medium,Closed,"2018-07-18 02:16:15","2018-07-18 02:16:15",1
"The Titanium SDK ","iOS CLI: Incremental build does not remove unencrypted JS files when switching deploy type from development to test","*Summary:*  There is an iOS incremental build issue where if you build for the iOS Simulator first, then an iOS device afterwards, the resulting iOS app bundle will contain both encrypted {{.js}} files an unencrypted plain text {{.js}} files. Builds for device (ie: deployment type test and production) must encrypt all {{.js}} files.    This is *+not+* an issue with production/release builds.  This is only an issue with debug builds.    *Steps to reproduce:*  # On Mac, open a Finder window.  # Go to an existing Titanium project directory.  # Delete its build directory if it has one.  # Open a Terminal window.  # In the terminal, {{cd}} to the same project directory.  # Run: {{appc run -p ios -D development --build-only}}  # Wait for the build to finish.  # Run: {{appc run -p ios -D test --build-only}}  # Wait for the build to finish.  # In Finder, go to directory: {{./build/iphone/build/Products/Debug-iphonesimulator}}  # Right click on the app bundle file and select Show Package Contents from the popup menu.    *Result:*  The app bundle for the test build contains plain text {{.js}} files such as app.js when it shouldn't. A test build must encrypt all {{.js}} files.    *Notes:*  * This is an incremental build issue. The app bundle includes both encrypted {{.js}} files and plain text {{.js}} files from the previous development build.  * I'm not sure if the reverse is true. When doing a test build first and then doing a development build, the generated {{ApplicationRouting.m}} does not contain any assets.",Bug,High,Closed,"2018-07-18 01:22:16","2018-07-18 01:22:16",0
"The Titanium SDK ","Android: Backing out of root window with exitOnClose false shows splash if child window closed programmatically","I want to use {{exitOnClose:false}} on my root window, so it will go into background and is not exiting. It works fine unless I close a child window with the {{homeAsUp}} back arrow.     *Example:*      *Example video:* https://migaweb.de/open_window.mp4    *Steps to reproduce*  * First three times I open the index and close it and open it again (was in background, seeing no splashscreen -> works fine)  * After that I open the second window two time and close it with the back button and then the index window, too (same, works fine)  * Last time I close the second window with the homeAsUp button and I end up at the splashscreen when I close the index. After that I ALWAYS end up at the splashscreen unless I kill the app    *Tested versions:*  Android 7  HTC A9  Ti SDK 7.2.0.GA, 7.3.0.v20180711185043    *Expected behaviour*  Always go to background and don't show the splashscreen when {{exitOnClose}} is set to false on the root window.",Bug,Critical,Closed,"2018-07-14 15:44:40","2018-07-14 15:44:40",7
"The Titanium SDK ","iOS: Percentage based layout rounds floating widths/heights incorrectly","*Summary:*  iOS will incorrectly wrap views within a horizontal layout if their percentage based widths total to 100%. This is not an issue on Android.    *Steps to reproduce:*  # Build and run  [^HorizontalPercent50x50Test.js] on iOS.  # Note that the left view width is 50% and the right view width is 50%.  # Observe the layout.    *Result:*  On iOS, the right view is wrongly wrapped to the next row.   !HorizontalPercent-iOS-bad.png|thumbnail!     *Expected Result:*  Both views are expected to be on the same row since they both have a width of 50%. Android does this correctly as seen here...   !HorizontalPercent-Android-good.png|thumbnail!     *Work-Around:*  Use {{Ti.UI.FILL}} to the right-most view's {{width}} property instead of using a percentage.    *Note:*  The attached [^HorizontalFillTest.js] provides a more complex horizontal layout test. iOS has 2 issues with this as well:  * The {{Left (50%) | Right (50%)}} test shows that the views are wrongly shrunk to 25% width instead of 50%.  * The yellow {{(75%)}} label does not have the same width as the {{(25%)|(50%)}} labels above it.    iOS looks like this...   !HorizontaFill-iOS-bad.png|thumbnail!     Android handles it correctly as can be seen here...   !HorizontalFill-Android-good.png|thumbnail!   ",Bug,Medium,Closed,"2018-07-13 21:04:52","2018-07-13 21:04:52",5
"The Titanium SDK ","Windows: Compler warnings PRI249: 0xdef00520 - Invalid qualifier","Currently lots of compiler warnings being produced when building app, seems like it happens only on 7.4.0 master branch. Although it does not prevent app building we want to suppress compiler warnings whenever possible.    ",Improvement,Medium,Closed,"2018-07-13 03:37:46","2018-07-13 03:37:46",8
"The Titanium SDK ","CLI: If any Xcode installs don't have EULA accepted (even one not being used), build won't work","On our CI build machines we have Xcode 8.1, 9, and 10 beta 3 installed. It seems that accepting the license for 10 beta 3 and 8.1 are mutually exclusive (i.e. if I accept 10 beta 3's license using xcodebuild -license accept, it causes Xcode 8.1 xcodebuild -checkFistLaunchStatus to return a non-zero exit code; and vice versa).    When doing ti info or a ti build, this ends up complaining with an error about the Xcode EULA not being accepted - even though in this particular case we have Xcode 10 beta 3 selected and what we are going to use for the build set up properly.    The CLI should be able to determine if the Xcode version we're using is ok and mark the other Xcode EULA acceptance as a warning instead of an error that stops the build.",Bug,High,Closed,"2018-07-12 15:23:04","2018-07-12 15:23:04",5
"The Titanium SDK ","CLI: Titanium CLI errors with winston.Logger is not a constructor","h5.Description    When using the titanium cli from master branch, the cli errors out with the below        This is because of the upgrade to winston 3.0.0, we can either downgrade to 1.1.2 (the old version), or fix the usage. The former is probably safer    h5.Steps to reproduce    # Download the git repo for titanium cli  # run {{npm install}}  # run {{./bin/titanium}}    h5.Actual    Above error    h5.Steps to reproduce    CLI should work",Bug,None,Resolved,"2018-07-12 12:42:11","2018-07-12 12:42:11",1
"The Titanium SDK ","CLI: Network check errors with 502 on accessing http://preview.appcelerator.com","h5.Description    When running {{[appc] ti setup check}} the network section shows errors as http://preview.<USER>com returns a 502, we should either fix this, or remove/replace the url from the list. I prefer the latter, I think we could replace to access {{https://preview.<USER>com/appc-studio}}    h5.Steps to reproduce    # Run {{appc ti setup check}}    h5.Actual    The following error is shown        h5.Expected     No error should be shown",Bug,None,Resolved,"2018-07-12 10:44:27","2018-07-12 10:44:27",1
"The Titanium SDK ","Android: getActionBar() throws CalledFromWrongThreadException exception","    Patch with fix is in attachment.",Bug,Critical,Closed,"2018-07-11 12:29:27","2018-07-11 12:29:27",1
"The Titanium SDK ","Android: TransformAfterLayout NullPointerException in Ti.Animation","  https://github.com/<USER>titanium_mobile/blob/0a7dce77bb4fbdd21370512800a61542670e6006/android/titanium/src/java/org/<USER>titanium/view/TiUIView.java#L549",Bug,Critical,Closed,"2018-07-11 15:21:30","2018-07-11 15:21:30",1
"The Titanium SDK ","TiAPI: Remove all deprecated API's (<= SDK 7.0)","There are many API's (321 in total) that are currently deprecated in the SDK. All API's that have been deprecated before 5.x (e.g. 3.2, 4.0 etc) should go away these days. Some major examples:    - Titanium.Android.Calendar -> Ti.Calendar (since 3.2.0)  - PENDING_INTENT_FOR_* (since 2.0.0)  - Android geolocation legacy mode (since 2.0.0)  - Ti.Network.SOCKET_* (since 1.7.0)    We could likely save a good amount of compile time for both docs-gen and the SDK itself by removing this.    (Edit by Hans: Renamed the ticket to handle all deprecations, not just Ti.Calendar.Event).",Story,Medium,Closed,"2018-07-11 14:11:25","2018-07-11 14:11:25",13
"The Titanium SDK ","Windows: Parity of Ti.Media APIs","Windows is missing some of the Ti.Media APIs. We should take another look at whether we can implement the following:  - cameraAuthorization  - #hasAudioRecorderPermissions()  - #hasMusicLibraryPermissions()  - #hasPhotoGalleryPermissions()  - #hideMusicLibrary()  - #previewImage()  - #queryMusicLibrary()  - #requestMusicLibraryPermissions()  - #requestPhotoGalleryPermissions()  - #setOverrideAudioRoute()  - #switchCamera()  - volume (output) event  - cameraready event",Improvement,High,Open,"2018-07-10 19:50:39","2018-07-10 19:50:39",13
"The Titanium SDK ","iOS: Move Ti.Media microphone related APIs to AVAudioRecorder and remove 3rd-party library","iOS should be using AVAudioRecorder for mic recording related APIs, but is using a very, very old 3rd-party library: [SCListener|https://github.com/stephencelis/sc_listener]. Full affected list of API's:  - startMicrophoneMonitor()  - stopMicrophoneMonitor()  - peakMicrophonePower (property)  - averageMicrophonePower (property)    This does not have to be a breaking change as the newer API's are pretty solid to use. We should also add an example for this into our KitchenSink (cc [~<USER>)",Improvement,High,Closed,"2018-07-10 19:44:50","2018-07-10 19:44:50",0
"The Titanium SDK ","Parity: Ti.Network.Socket.UDP API differs significantly from Ti.Network.Socket.TCP API","The Ti.Network.Socket.TCP and Ti.Network.Socket.UDP APIs should be as similar as we can possibly achieve. However they differ significantly at the most basic levels.    Specifically:  - TCP uses properties to set host/port then calls {{#listen()}} and {{#accept()}}, UDP uses {{#start(port, [host])}} for starting a local socket  - TCP uses {{#close()}}, UDP uses {{#stop()}} to tear down the socket  - TCP uses properties to set host/port then calls {{#connect()}}, it's unclear to me how UDP handles connecting/sending data to a remote socket as a client.  - TCP has callbacks for {{accepted}}/{{connected}} (server got a connection, connected as a client); UDP has {{started}}/{{data}} (socket bound, socket received data).  - The properties/callbacks differ in naming of common properties, i.e. port is the same, but TCP uses {{host}} while UDP uses {{address}}.  - TCP forces you to use {{IOStream}} read/write methods (using {{Ti.Buffer}}); UDP has special methods for writing bytes (as Number[]) and Strings.",Bug,Medium,Open,"2018-07-10 19:25:27","2018-07-10 19:25:27",21
"The Titanium SDK ","iOS: Implement Ti.Network.Socket.UDP","We currently only support Ti.Network.Socket.UDP on Windows platform. We should have the ability to work with UDP sockets/connections on each of the major platforms much as we can use TCP.","New Feature",Medium,Open,"2018-07-10 19:24:37","2018-07-10 19:24:37",21
"The Titanium SDK ","Android: Implement Ti.Network.Socket.UDP","We currently only support Ti.Network.Socket.UDP on Windows platform. We should have the ability to work with UDP sockets/connections on each of the major platforms much as we can use TCP.","New Feature",Medium,Open,"2018-07-10 19:24:27","2018-07-10 19:24:27",21
"The Titanium SDK ","Windows: add buttonClickRequired  method on Ti.UI.AlertDialog","Adds the {{buttonClickRequired}} property to {{Ti.UI.AlertDialog}}, which controls whether the dialog can be cancelled by clicking the system back button. Defaults to `true`.      ","New Feature",Medium,Closed,"2018-07-09 23:36:58","2018-07-09 23:36:58",8
"The Titanium SDK ","Hyperloop: iOS - Support Carthage","There has been kind of a shift in deps-management on iOS lately. Some major devs are moving to Carthage to have more control over their deps and some new packaged are even not CocoaPods available so far, like [Flight-School/Money|https://github.com/Flight-School/Money].    We should consider supporting the Carthage build as an alternative to CocoaPods...and silently start thinking about the Apple Swift Package Manager as well... :-)","New Feature",High,Closed,"2018-07-06 01:09:38","2018-07-06 01:09:38",13
"The Titanium SDK ","iOS: Timer functions can not be re-assigned","The callbacks for timing function like {{setTimeout}} or {{setInterval}} are bound with the readonly flag and can not be reassigned. This is contradictory to other JS environments like the Web or Node where this is very much possible. ",Bug,High,Closed,"2018-07-05 13:42:27","2018-07-05 13:42:27",1
"The Titanium SDK ","An exception is raised when a remote image URL is set on an ImageView on some Android devices","On one of our Android device, a native exception is raised when we set a remote URL on an ImageView (no problems with local URLs). Visually, no remote images are displayed on the app. If we turn on the storage permission on the device for our app, the images are displayed. This error happens only on SDKs 7.1 and more.    Here's the exception :       ",Bug,Critical,Closed,"2018-07-03 07:49:14","2018-07-03 07:49:14",3
"The Titanium SDK ","Android: Application throws exception after close on 7.4.0","- Due to fixing lifecycle events, an exception will be thrown when the events are fired after the KrollRuntime has been destroyed.",Bug,High,Closed,"2018-07-03 21:01:33","2018-07-03 21:01:33",3
"The Titanium SDK ","iOS: Property check on proxy always returns true","Checking for property existence on Titanium proxy objects always returns true, ignoring if a property really exists or not. Various aspects of Vue/Angular and module bundling with Rollup/Webpack rely on proper existence checks for properties on our proxies.    *Steps to reproduce the behavior*  Run the following example code in a Titanium app which compares the behavior to a plain JavaScript object.      *Actual behavior*  The property check returns true for non-existing properties on the Ti.UI.Window object.    *Expected behavior*  The property check should return true only for existing properties and false otherwise.",Bug,Critical,Closed,"2018-07-03 12:23:29","2018-07-03 12:23:29",3
"The Titanium SDK ","Windows: TextField/TextArea should not receive focus by default when a window is opened","h2. Behavior    TextField should not receive focus right after Windows is opened to match iOS's behavior.    h2. Test case        Expected: No focus log should be shown after app launched and TextField should not have focus.  ",Bug,Medium,Closed,"2018-07-03 00:08:33","2018-07-03 00:08:33",8
"The Titanium SDK ","Windows: focus and blur events bubbles to parent views when it shouldn't","*Summary:*  A view's {{focus}} and {{blur}} events are not supposed to bubble up to the view's parents according to our documentation here...  https://docs.<USER>com/platform/latest/#!/guide/Event_Handling-section-src-29004896_EventHandling-Bubblingandnon-bubblingevents    On Windows, they do bubble up. This can cause confusion since these events will bubble up to the window which use the {{focus}} and {{blur}} events to indicate if the window is active, not if it has gained/received input focus.    This is not an issue on iOS.    *Steps to reproduce:*  # Build and run the below code on Windows.  # If the TextField has the focus, then tap on the Remove Focus button.  # Tap on the Set Focus button.  # In the log, notice that the TextField focus event's bubbles property is set true. This is wrong.  # In the log, notice the Window received a focus event after the TextField did. This is wrong.  # Tap on the Remove Focus button.  # In the log, notice that the TextField blur event's bubbles property is set true. This is wrong.  # In the log, notice the Window received a blur event after the TextField did. This is wrong.        *Expected Result:*  The {{focus}} and {{blur}} events should not not bubble. Their {{bubbles}} property should be {{false}} and the parent window should not have received the TextField's events.  ",Bug,Medium,Closed,"2018-07-03 00:04:40","2018-07-03 00:04:40",8
"The Titanium SDK ","Android: Add the Android Studio default SDK/NDK install paths to the Android lookup","h5.Description    Currently if you install the Android SDK through Android Studio you have to add the path in your Titanium config (however we may also find it if you set the env vars, or add the build/platform tools to the path). It would be nice if the Android Studio default install location could be added to the lookup so that it can work a bit more seamlessly, and for some parity with the daemon.    The default locations are    {{~/Library/Android/Sdk}} and {{%LOCALAPPDATA%/Android/Sdk}}, in that folder also is where the NDK installs to under {{~/Library/Android/Sdk/ndk-bundle}} which we should handle also",Improvement,None,Closed,"2018-07-02 10:55:17","2018-07-02 10:55:17",3
"The Titanium SDK ","Android: focus and blur events bubbles to parent views when it shouldn't","*Summary:*  A view's {{focus}} and {{blur}} events are not supposed to bubble up to the view's parents according to our documentation here...  https://docs.<USER>com/platform/latest/#!/guide/Event_Handling-section-src-29004896_EventHandling-Bubblingandnon-bubblingevents    On Android, they do bubble up. This can cause confusion since these events will bubble up to the window which use the {{focus}} and {{blur}} events to indicate if the window is active, not if it has gained/received input focus.    This is not an issue on iOS.    *Steps to reproduce:*  # Build and run the below code on Android.  # If the TextField has the focus, then tap on the Remove Focus button.  # Clear the Android log.  # Tap on the Set Focus button.  # In the log, notice that the TextField focus event's bubbles property is set true. This is wrong.  # In the log, notice the Window received a focus event after the TextField did. This is wrong.  # Tap on the Remove Focus button.  # In the log, notice that the TextField blur event's bubbles property is set true. This is wrong.  # In the log, notice the Window received a blur event after the TextField did. This is wrong.        *Expected Result:*  The {{focus}} and {{blur}} events should not not bubble. Their {{bubbles}} property should be {{false}} and the parent window should not have received the TextField's events.    *Work-Around:*  Set the {{focus}} and {{blur}} event's {{cancelBubble}} property to {{true}} to prevent the event from propagating up the view hierarchy.    ",Bug,Medium,Closed,"2018-06-30 02:49:09","2018-06-30 02:49:09",3
"The Titanium SDK ","Android: Cannot edit TextField/TextArea while in a ScrollView as of 7.3.0","*Summary:*  As of Titanium 7.3.0 (not released yet), Android's TextField/TextArea view cannot be edited while they're in a ScrollView. When tapping on them, they immediately drop the focus.    This is not an issue in Titanium 7.2.0. I've confirmed it.    *Steps to reproduce:*  # Create a classic app with the below code targeting Titanium 7.3.0.  # Build and run on Android.  # Tap on a TextArea.  # Notice that the virtual keyboard does not appear. You are unable to edit it.  # Scroll down to the bottom.  # Tap on a TextField.  # Notice that the virtual keyboard does not appear. You are unable to edit it.        ",Bug,Critical,Closed,"2018-06-28 18:59:46","2018-06-28 18:59:46",3
"The Titanium SDK ","iOS: Requiring a JSON file that contains single quotes throws error","h5.Description    When requiring a JSON file where a value contains a single quote an error like below is thrown, this works fine on Windows/Android        *Workaround*  Read the file in like {{JSON.parse(Ti.Filesystem.getFile('file.json').read())}}      h5.Steps to reproduce    # Add the below into a JSON file under your project    # Add a require statement into your code that requires the file    h5.Actual    Error like the above is thrown    h5.Expected    File should be imported",Bug,High,Closed,"2018-06-28 11:27:25","2018-06-28 11:27:25",0
"The Titanium SDK ","iOS: TableView + run-on-main-thread - insertRowAfter directly after updateRow causes error / race crash","When enabling    and using TableView, if one runs insertRowAfter directly after updateRow the app will throw the error below or cause race crash with no error.    Error:       Steps to reproduce:  1. Create new alloy project  2. In your index.js add the code below  3. Build to ios simlulator  5. Click on Update + Add button  7. Remove run-on-main-thread from tiapp.xml and build and see that everything works fine.    PS....when adding the setTimeout you will see that it works      ",Bug,Critical,Closed,"2018-06-28 07:21:11","2018-06-28 07:21:11",0
"The Titanium SDK ","iOS: Animation is not working when the app window is opened from the background.","*Issue Description:*  Animation is working fine if application is in foreground, but if we launch the app from background, animation is not working on iOS using ti SDK 7.2.0.GA, 7.0.2.GA. App just freezes. On android, it works as expected.     *Test Code:*  *index.xml*      *index.js*      *index.tss*      *Steps to reproduce:*  Run the test code.  Observe that animation is working.  Keep the app in background.  Launch the app from background again and observe that animation does not work    *Expected:*  Animation should work when app is launched from background.    *Actual:*  Animation does not work    *Test log:*      Dropbox link for animation POC:  https://www.dropbox.com/s/pr2ua7ndz93pzhf/ProgressbarPOC.zip?dl=0    ",Bug,None,Resolved,"2018-06-27 09:51:22","2018-06-27 09:51:22",0
"The Titanium SDK ","Android: Activity Listening Broken on run-on-main-thread = true","Tested with a Pixel on Android 8.0 using a wireless keyboard. Build the app and you will see the OS logs appear. When a wireless keyboard is connected to the device via bluetooth it causes the app to soft reset on Android. I used     because I've had problems with the soft reset holding things in memory.    When    the listener works correctly. The app restarts and runs 'Start by OS' and 'Resume by OS'.    When    the listener does not fire the 'START' & 'RESUME' activity listener after the reset. You will notice this by the lack of error logs.  ",Bug,Critical,Closed,"2018-06-26 20:26:14","2018-06-26 20:26:14",5
"The Titanium SDK ","iOS: ScrollableView +  run-on-main-thread - views dont render until scroll when re-adding views","When enabling  ScrollableView does not render views when re-adding views to the ScrollableView until you scroll a bit then they suddenly render.    When removing `run-on-main-thread` it works just fine.    Steps to reproduce:  1. Create new alloy project  2. In your index.js add the code below  3. Build to ios simlulator  4. Scroll to see everything is working   5. Click on re-add views button - See that views are now all white / not rendered  6. Scroll left or right and see that the views then render  7. Remove run-on-main-thread from tiapp.xml and build and see that everything works fine.      ",Bug,Critical,Closed,"2018-06-27 07:27:04","2018-06-27 07:27:04",0
"The Titanium SDK ","Windows: File.getDirectoryListing() returns empty array for file or non-existent directory.","Windows: {{File.getDirectoryListing()}} returns empty array for file or non-existent directory.        Expected: {{null}} should be returned for file or non-existent directory.",Bug,Medium,Closed,"2018-06-27 01:09:52","2018-06-27 01:09:52",8
"The Titanium SDK ","Windows: Build fails with ENOENT error when using transpile","h5.Description    When enabling transpilation the build fails with the below error {{ENOENT: no such file or directory, mkdir' C:\Users\awam\.titanium\vsbuild\ticreateapp\bin\assets\Resources\node_modules'}}, I believe this is because it's trying to copy to the wrong place.    h5.Steps to reproduce    # Enable transpilation in the tiapp.xml {{<transpile>true</transpile>}}  # Build the project    h5.Actual    Above error thrown    h5.Expected    No error",Bug,Medium,Closed,"2018-06-26 14:09:51","2018-06-26 14:09:51",8
"The Titanium SDK ","Windows: ScrollView doesn't return correct event source","{{ScrollView}} doesn't return correct source when event listener is added to the scroll view's parent.        Expected: When blue view is clicked, it should show view2.  ",Bug,High,Closed,"2018-06-25 06:06:03","2018-06-25 06:06:03",8
"The Titanium SDK ","Ti.Platform.id not working on Android in 7.2.0.GA (works on 7.1.1.GA)","I just tried upgrading to Ti 7.2.0.GA and found that Ti.Platform.id is returning null on Android. It works when reverting back to 7.1.1.GA. And it works on iOS.    When using 7.1.1.GA `alert(Ti.Platform.id);` returns a string (as expected).    When using 7.2.0.GA `alert(Ti.Platform.id);` returns null.    Given 7.2.0 looks like it was mostly about GDPR, could it have been pulled out inadvertently? Or does the documentation need updating (http://docs.<USER>com/platform/latest/#!/api/Titanium.Platform-property-id)? Or am I missing something?",Bug,Critical,Closed,"2018-06-23 13:44:08","2018-06-23 13:44:08",2
"The Titanium SDK ","Windows: Scale Transform  Events( source.id) is still `overlay`","Hello !  We was able to test the `source.id` of the events [TIMOB-26072|https://jira.<USER>org/browse/TIMOB-26072] with SDK 7.3.0.v20180618182516 as according to this https://github.com/<USER>titanium_mobile_windows/pull/1249 it had been solved. For the most part, the problem seemed resolved till I tried on our Application.    We created another minimal, complete, and verifiable sample that demonstrates the issue. Please find it attached.    In such App, you will see that if you click on the blue section a little bit below the Alloy controller, the source.id is still `overlay`. Simply removing `slidingView.addSomething(controllerview);` from index.js solves the issue but, of course, no controller gets added.      Test SDK :  7.3.0.v20180618182516    ",Bug,High,Closed,"2018-06-22 16:03:34","2018-06-22 16:03:34",13
"The Titanium SDK ","Android: Ti.Filesystem.File#getDirectoryListing() does not return null for file/non-existent directory","According to our docs, and our iOS behavior - if Ti.FIlesystem.File#getDirectoryListing() is called on a file or a directory that does not exist, it should return null. On Android it returns an empty array.",Bug,Medium,Closed,"2018-06-22 15:13:52","2018-06-22 15:13:52",3
"The Titanium SDK ","Windows: Improve File.getDirectoryListing() performance in Resources directory","*Summary:*  On Windows, accessing files/directories under Resources is slower than it should be. These files are stored within the APPX where a list of file paths from assets can be easily extracted... which should make it faster than storage access.    *Test:*  Run the below code to fetch a listing of all files under the Resources directory. Observe the log for the duration of this function.      *Recommended Solution:*  An Windows APPX is really a zip file. We should open the APPX as a zip file and fetch/store all zip entries referencing files under the assets directory. This way we can have fast hash table lookups when doing existence checks and fetching directory listings.  ",Improvement,Medium,Closed,"2018-06-21 04:15:49","2018-06-21 04:15:49",5
"The Titanium SDK ","Android: Improve File.getDirectoryListing() performance in Resources directory","*Summary:*  On Android, accessing files/directories under Resources is slower than it should be. These files are stored within the APK where a list of file paths from assets can be easily extracted... which should make it faster than storage access.    *Test:*  Run the below code to fetch a listing of all files under the Resources directory. Observe the log for the duration of this function.      *Results:*  For a project have about 160 files under Resources, I get the following results...  * Android 4.1 Emulator: 80 ms  * Galaxy Nexus (Android 4.1): 70 ms  * Amazon Fire HD 8 (7th Generation): 19 ms  * Pixel XL (Android 8.0): 3 ms    *Recommended Solution:*  An Android APK is really a zip file. We should open the APK as a zip file and fetch/store all zip entries referencing files under the assets directory. This way we can have fast hash table lookups when doing existence checks and fetching directory listings.  ",Improvement,Low,Closed,"2018-06-21 02:28:01","2018-06-21 02:28:01",5
"The Titanium SDK ","TiAPI: Deprecate Ti.XML in favor of standalone module","Our Ti.XML namespace has been around a while now. Nowadays, most of the common-used API's are JSON-based and based on the usage reports, there are not many devs left using this API inside the core. But still, it is still included, with it's 37 files. Removing it would mean a huge compile time bump, so it should be deprecated and moved to a standalone module, like we recently did with Ti.Yahoo.",Story,High,Closed,"2018-06-20 12:54:26","2018-06-20 12:54:26",0
"The Titanium SDK ","Android: Accessing Titanium.App.Android.R logs GC errors","When building an Alloy app with Ti SDK 7.1.1 accessing `Titanium.App.Android.R` causes the logs to trow errors:        How to reproduce:    1. Create new Alloy app  2. Add the following code below in alloy.js:  3. Build  4. See errors in logs.        Logs:    ",Bug,Critical,Closed,"2018-06-06 03:54:59","2018-06-06 03:54:59",3
"The Titanium SDK ","Windows: Move 2DMatrix and 3DMatrix to Matrix2D and Matrix3D","We need to rename our Ti.UI.2DMatrix and Ti.UI.3DMatrix to non-numeric proxies. This is important for the following components:    - ES6 imports (e.g. Ti.ES6)  - Angular support  - View support",Story,Medium,Closed,"2018-06-19 14:53:28","2018-06-19 14:53:28",13
"The Titanium SDK ","Windows: Unable to build to device when using Windows SDK 15063 and newer tooling is installed","I am unable to build applications to windows device.    *Steps to reproduce*  # Create a mobile application   # Build to device {{appc run -p windows -T wp-device -l trace}}    *Log and Error*  https://gist.github.com/longton95/62ab044c898b31ef92f35048cb72d735    *Log and Error with --deploy-type production flag*  https://gist.github.com/longton95/320cb804efbfee3f3b1c25029bc72856    ",Bug,High,Closed,"2018-06-19 14:25:01","2018-06-19 14:25:01",13
"The Titanium SDK ","Android: Cannot use a module when using a listview childtemplates","The issue is that I cannot use the styled label module that <USER>built in a ListView.  The type for the ChildTemplates is expecting a string and cannot recognize the module.  Please Advise.",Improvement,Medium,Closed,"2018-06-19 13:29:22","2018-06-19 13:29:22",13
"The Titanium SDK ","TiAPI: Move 2DMatrix and 3DMatrix to Matrix2D and Matrix3D","We need to rename our Ti.UI.2DMatrix and Ti.UI.3DMatrix to non-numeric proxies. This is important for the following components:    - ES6 imports (e.g. Ti.ES6)  - Angular support  - View support",Story,Medium,Closed,"2018-06-19 13:00:37","2018-06-19 13:00:37",8
"The Titanium SDK ","TiAPI: hasCompass should be a method, not a property","The hasCompass property should be deprecated and moved to the hasCompass() method like we do with every other hasXXX API, like hasLocationPermissions(), hasCameraPermissions(), etc.",Story,Low,Closed,"2018-06-18 04:43:07","2018-06-18 04:43:07",0
"The Titanium SDK ","Android: SDK is wrongly adding core Google Play Services libraries as of 7.1.0","*Summary:*  As of Titanium 7.1.0, the SDK is wrongly including the following JAR files to all Android app builds...  * play-services-base-11.0.4.jar  * play-services-basement-11.0.4.jar  * play-services-location-11.0.4.jar  * play-services-tasks-11.0.4.jar    On a Mac, you can verify that the above libraries are wrongly being included by going to the following directory in Finder...  {{~/Library/Application Support/Titanium/mobilesdk/osx/7.x.x/android}}    These 4 libraries are not supposed to be there and it's preventing us from updating the ti.playservices module's Google Play Services libraries to a newer version (will cause a version conflict).    *Note:*  Titanum's core geolocation code needs a reference to the above mentioned JAR files to compile, but it doesn't require the JAR files to be included. This is because our geolocation code will dynamically detect the existence of the Google Play Services classes via reflection... and if they don't exist, it'll fallback to using the OS' location APIs instead. So, we need to exclude the Google Play Services JARs when packaging the SDK.",Bug,Medium,Closed,"2018-06-14 19:11:28","2018-06-14 19:11:28",3
"The Titanium SDK ","Android: Fix compatibility with NDK 12+","- Recent optimizations prevent ABI compatibility with {{kroll-v8}}  - Remove specific optimization to allow compilation of Titanium SDK on NDK 12+",Bug,None,Closed,"2018-06-14 19:10:40","2018-06-14 19:10:40",3
"The Titanium SDK ","iOS: Migrate Ti.UI.WebView NSURLConnection usage to NSURLSession","We have migrated our networking code base to use NSURLSession in SDK 7.1.0 and it works good. Now that we drop iOS 8 support to move to iOS 9 as our new deployment target (TIMOB-26123), the only remaining deprecation warning is a NSURLConnection usage in the Ti.UI.WebView that is used to handle insecure connections for the ignoreSslError property. This should be migrated to NSURLSession as well.",Bug,High,Closed,"2018-06-14 11:40:45","2018-06-14 11:40:45",1
"The Titanium SDK ","Android: Allow asset directory names with a leading underscore to be included in the build","*Summary:*  Directory names have a leading underscore '_' (ex: _MyDirectory) are automatically excluded from the built Android APK's assets directory. Google did this intentionally with their aapt command line tool. We should change this behavior since iOS and Windows doesn't have this restriction. (Makes it less confusing too.)    For JavaScript files under these directories, they will only be excluded when building for the emulator since they're added to the APK's assets directory in this case. For device and production builds, the JavaScript will be correctly included, but this is because they're compiled/encrypted and not bundled under the APK's assets directory in this case.    *Steps to reproduce:*  # Create a Titanium Classic app.  # Copy the attached [^Test.zip] file's contents to your app.  # Build and run the app for the Android emulator.  # On app startup, a runtime error will occur where {{require()}} will fail to find the JavaScript file under directory _Test.  # Build and run the app to an Android device. _(Note the emulator.)_  # On app startup, note that a window is displayed, but it fails to display an image. _(The JS files was loaded, but the _Test/AppcLogo.png did not get included into the APK.)_    *Cause:*  Google's command line tool aapt will automatically exclude the following from the APK's assets directory:  * .svn  * .git  * .ds_store  * .scc  * .CVS  * thumbs.db  * picasa.ini  * _<directory>    We can change this behavior by using aapt argument {{--ignore-assets}} and tell it not to omit directories with a leading underscore.  ",Improvement,Low,Closed,"2018-06-13 18:49:05","2018-06-13 18:49:05",3
"The Titanium SDK ","Android: Video Quality undefined","Can't changer the quality of media camera because Titanium media video qualities is undefined    {quote} Ti.API.info(Titanium.Media.QUALITY_HIGH   + Titanium.Media.QUALITY_HIGH);   Ti.API.info(Titanium.Media.QUALITY_MEDIUM   + Titanium.Media.QUALITY_MEDIUM);   Ti.API.info(Titanium.Media.QUALITY_LOW   + Titanium.Media.QUALITY_LOW);   Ti.API.info(Titanium.Media.QUALITY_640x480   + Titanium.Media.QUALITY_640x480);   Ti.API.info(Titanium.Media.QUALITY_IFRAME_960x540   + Titanium.Media.QUALITY_IFRAME_960x540);   Ti.API.info(Titanium.Media.QUALITY_IFRAME_1280x720   + Titanium.Media.QUALITY_IFRAME_1280x720);{quote}    Logs ==>     06-10 10:20:45.406 30754 30754 I TiAPI   :  Titanium.Media.QUALITY_HIGH  undefined  06-10 10:20:45.406 30754 30754 I TiAPI   :  Titanium.Media.QUALITY_MEDIUM  undefined  06-10 10:20:45.406 30754 30754 I TiAPI   :  Titanium.Media.QUALITY_LOW  undefined  06-10 10:20:45.406 30754 30754 I TiAPI   :  Titanium.Media.QUALITY_640x480  undefined  06-10 10:20:45.406 30754 30754 I TiAPI   :  Titanium.Media.QUALITY_IFRAME_960x540  undefined  06-10 10:20:45.406 30754 30754 I TiAPI   :  Titanium.Media.QUALITY_IFRAME_1280x720  undefined    ",Bug,Critical,Closed,"2018-06-10 10:28:59","2018-06-10 10:28:59",5
"The Titanium SDK ","Android: Update emulator tooling path","- The current {{tools/emulator}} path is now obsolete  - Update the path to the newer {{emulator/emulator}} path    *TEST CASE*  - Build and run a project using an x86 emulator    - {{appc run -p android}}    *EXPECTED*  - Emulator runs correctly    *ACTUAL*  ",Bug,Critical,Closed,"2018-06-12 21:56:01","2018-06-12 21:56:01",2
"The Titanium SDK ","Android: Ti.buildHash property always returns null","*Summary:*  The {{Ti.buildHash}} property always returns {{null}} on Android. This has been happening since Titanium 6.0.0.  _(This is not an issue on iOS.)_    *Steps to reproduce:*  * Build and run the below code on Android.  * On app startup, an alert displays the {{buildHash}}.  * Note that it displays it as undefined. _(This is the bug.)_        *Cause:*  Our android.js build script expects to receive {{option.gitHash}} with a capital 'H' here...  https://github.com/<USER>titanium_mobile/blob/master/build/android.js#L22    But our scons-build.js and scons-cleanbuild.js scripts are passing in a lowercase {{githash}}.  https://github.com/<USER>titanium_mobile/blob/master/build/scons-build.js  https://github.com/<USER>titanium_mobile/blob/master/build/scons-cleanbuild.js    *Note:*  The {{buildHash}} is mostly needed to distinguish between an RC and GA version of Titanium. We log the Titanium version on app startup and this is helpful to better provide tech-support for the community.  ",Bug,Low,Closed,"2018-06-12 18:17:11","2018-06-12 18:17:11",1
"The Titanium SDK ","iOS: Drop iOS 8 support, use iOS 9 as the minimum target","It is time to move to iOS 9 as our minimum target. It's a move not only done by us but all major frameworks and it should be used to also clean up the conditional-statements inside the core. Moving to the iOS 9 target also uncovers 150+ warnings that need to be resolved. Most of them are around Ti.Contacts, which luckily is iOS 9 compatible already, but still has some references to the deprecated AddressBook framework that needs to be ripped out.",Improvement,High,Closed,"2018-06-12 09:57:40","2018-06-12 09:57:40",21
"The Titanium SDK ","iOS: Default simulator should be compatible with selected xcode","*TEST CASE*  - Install xcode-beta (10.0) along with xcode (9.x)  - Use xcode-select to select 9.x  - Build a project without specifying a simulator  - An iOS 12.0 simulator will be selected which is only compatible with xcode 10.0",Bug,High,Closed,"2018-06-11 23:08:19","2018-06-11 23:08:19",5
"The Titanium SDK ","Update npm package dependencies and reduce security vulnerabilities listed","We have a number of security vulnerabilities now listed by default on npm installs (as of npm 6 this is built into the <USER>. We should try to update all of our npm package dependencies as much as possible, as well as attempt to drive down the security vulnerabilities listed as low as possible (ideally none).    This has knock-on effects on all of the npm packages we generate and dependencies upon in the SDK, so this will include fixes for things like node-appc, ioslib, windowslib, appc-aar-tools, etc.",Improvement,High,Closed,"2018-06-11 18:00:30","2018-06-11 18:00:30",13
"The Titanium SDK ","iOS: ES6 promises not supported on iOS 9. (Works on iOS 8 and 10.)","*Summary:*  JavaScript ES6 promises are not supported on iOS 9 when setting tiapp.xml setting {{<transpile>true</transpile>}}.    However, promises are supported on iOS 8 and iOS 10.    *Steps to reproduce:*  # Set up a project's tiapp.xml with the below transpile setting.  # Build and run the below code on iOS 9.    {code:xml}  <?xml version=1.0 encoding=UTF-8?>  <ti:app xmlns:ti=http://ti.<USER>org>   <transpile>true</transpile>  </ti:app>  {code}    {code:javascript}  Ti.API.info(@@@ typeof Promise:  + (typeof Promise));  var promise = new Promise(function(resolve, reject) {   Ti.API.info(@@@ Promise execution started.);   setTimeout(function() {    Ti.API.info(@@@ Promise execution ended.);    resolve();  //  reject();   }, 1000);  }).then(function() {   Ti.API.info(@@@ Promise.then() called.);  }).catch(function(e) {   Ti.API.info(@@@ Promise.catch() called.);  });  {code}    *Result:*  An exception dialog is displayed stating Can't find variable: Promise.    *Notes:*  * This issue does not happen in iOS 8.1 and 8.4 simulators.  * This issue does not happen in iOS 10.3.1 simulator.  * I verified that this issue happens in iOS 9.0 and 9.3 simulator.  * I've tried setting tiapp.xml {{<transpile>}} setting true and false. No difference. Always fails on iOS 9.x Setting {{<transpile>}} to false surprisingly works on iOS 8.  ",Bug,High,Closed,"2018-06-08 22:35:51","2018-06-08 22:35:51",5
"The Titanium SDK ","iOS: Images are skewed on iOS 8","*Summary:*  The default splash image (and other images) appears skewed when running on iOS 8. This is not an issue on iOS 9 and newer OS versions.    This issue happens in Titanium 6.1.1 and 7.3.0.    *Steps to reproduce:*  # Create a new Classic App project.  # Builds and run it in the iOS 8 simulator.  # Observe the default splash when displayed onscreen. (It appears skewed.)  # Observe the tab icons at the bottom of the app. (They appear skewed.)    *Result:*  On iOS 8, it looks like the following...  !iOS8Splash.bad.png|thumbnail! !iOS8Tabs.bad.png|thumbnail!    On iOS 9 and 10, it works correctly.  !iOS10Splash.good.png|thumbnail!  !iOS10Tabs.good.png|thumbnail!   ",Bug,Low,Resolved,"2018-06-08 19:35:53","2018-06-08 19:35:53",0
"The Titanium SDK ","TiAPI: Add support for console.timeLog","it would be very useful to have the ability to output timing to the log for testing and debugging.    We have already added console.time and console.timeEnd. Due to some ambiguities around calling timeEnd multiple times for the same label, they introduced console.timeLog to handle printing intermediate timings without removing the timer/label. We should expand to support this as well.    https://github.com/whatwg/console/pull/138","New Feature",Low,Closed,"2018-06-08 14:53:01","2018-06-08 14:53:01",5
"The Titanium SDK ","Android: Ti.UI.convertUnits doesn't handle the special case of input values as percentages","Android appears to not handle the special case of input values as percentages. It should bail early and return 0. There is an existing unit test, which is currently skipped on Android for now.",Bug,Medium,Open,"2018-06-08 14:35:50","2018-06-08 14:35:50",5
"The Titanium SDK ","iOS: Ti.UI.convertUnits does not consult ti.ui.defaultunit property","Looks like iOS does not consult ti.ui.defaultunit property for converting when input units aren't specified. It assumes dp, which is the default value placed in tiapp.xml.",Bug,Medium,Closed,"2018-06-08 14:34:40","2018-06-08 14:34:40",3
"The Titanium SDK ","Windows: Implement Ti.UI.convertUnits","[Ti.UI.convertUnits|https://docs.<USER>com/platform/latest/#!/api/Titanium.UI-method-convertUnits] is missing on Windows. ","New Feature",Medium,Open,"2018-06-08 07:21:20","2018-06-08 07:21:20",8
"The Titanium SDK ","Xcode 10: Cannot build application with new (default) build system","When using Xcode 10 and the new build system, the app build fails because the <project>/build/iphone/build directory is generated by our CLI instead of the actual xcodebuild command. While this was okay in the past, the new build system complains about that.     I filed a radar at https://openradar.appspot.com/40906897 and talked to the Apple engineers during WWDC. They assume it to be an issue in the new build system, but we can actually fix it on our end by now pre-creating the directory and let xcodebuild create it. I tested it as a local change and it works with both Xcode 10 and 9.    Error:  ",Bug,Critical,Closed,"2018-06-08 00:27:47","2018-06-08 00:27:47",0
"The Titanium SDK ","Xcode 10: Cannot build modules with the new (default) build system","When using Xcode 10 and the new build system, which is now default, the linked core-classes (TiProxy.h, TiBase.h, ..) cannot be found anymore. I opened a [Radar|https://openradar.appspot.com/radar?id=5621620265713664] for this.",Bug,Critical,Closed,"2018-06-07 17:11:10","2018-06-07 17:11:10",3
"The Titanium SDK ","CLI: clean command builds the project instead ","*Steps to reproduce*  # Create a project {{appc new}}  # Run the project once   # {{ti clean}}    *Expected*  The app is cleaned     *Actual*  The app is built ",Bug,Critical,Closed,"2018-06-07 14:47:20","2018-06-07 14:47:20",1
"The Titanium SDK ","Windows: Update module apiversion to 6","Update module apiversion because there's module binary incompatibility in upcoming 7.3.0. All Windows module needs re-compiled to make it work with 7.3.0.",Story,High,Closed,"2018-06-07 04:30:07","2018-06-07 04:30:07",3
"The Titanium SDK ","Android: Push notifications should create default channel if not assigned when targeting Android 8","*Summary:*  Our APS library (which implements Android push notifications) correctly uses Google's {{DEFAULT_CHANNEL_ID}} on Android 8 when targeting API Level 25 or lower.  [APSCloudPush.java#L409|https://github.com/<USER>aps_sdk/blob/897b735961c10ce1b6e74f9fd48b48edb4eec83e/android/cloudpush/APSCloudPush/src/main/java/com/<USER>aps/APSCloudPush.java#L409]    However, when targeting API Level 26 or higher, you cannot use Google's {{DEFAULT_CHANNEL_ID}} which means notifications will fail to be posted to the status bar. So, the APS library must be changed to create its own default notification channel if one was not supplied from the payload... and it should only do so when targeting API Level 26 or higher.    *Recommended Solution:*  We should use a similar solution used by Titanium's local notifications as shown here...  https://github.com/<USER>titanium_mobile/pull/9945    It probably should use a separate notification channel name than what Titanium uses. This may be needed to avoid collision with how Titanium configures its channel.  ",Improvement,High,Closed,"2018-06-06 01:42:36","2018-06-06 01:42:36",5
"The Titanium SDK ","Windows: Add Ti.UI.ButtonBar support","*Summary:*  Currently, Titanium's {{ButtonBar}} is an iOS only feature. We should add support on Android for parity.    On iOS, a Titanium {{ButtonBar}} works just like a Titanium {{TabbedBar}}. Only one button/tab can be selected at a time. The only difference is the appearance. On iOS, a {{ButtonBar}} is implemented via {{UISegmentedControl}}.    *Possible Solutions:*  Implement it as a radio button group. This seems to be the most appropriate solution. And I think this would be the solution on Windows as well.  https://developer.android.com/guide/topics/ui/controls/radiobutton    Alternatively, implement it just like {{TabbedBar}}. Have the Android {{ButtonBar}} proxy derive from the {{TabbedBar}} proxy and have them use the same implementation. Ideally implemented via the Java {{TabLayout}} or {{BottomNavigationView}}.  ","New Feature",Low,Open,"2018-06-06 00:41:26","2018-06-06 00:41:26",7
"The Titanium SDK ","Android: CLI appc run should launch app with intent action MAIN category LAUNCHER","*Summary:*  {{appc run}} launches the app on Android with an intent that is missing action android.intent.action.MAIN and category android.intent.category.LAUNCHER, which is how an app is normally launched on Android via the app list screen.    The consequence of this is that if you press the HOME button to suspend the app and then tap on the app from the home screen, then a new activity instance will be created and Titanium will be stuck on the splash screen since Titanium only supports running 1 JavaScript runtime at a time.    *Steps to reproduce:*  # Build and run the below code on Android either via <USER>Studio or via {{appc run}} at the terminal.  # Wait for the app to be displayed on the Android device.  # Press the Home button to suspend the app. (Do *NOT* press the Back key.)  # From the home screen, go to the app list screen.  # Tap on the installed app to attempt to resume it.  # After doing this, notice that the app is stuck displaying the splash screen. It does not resume the app. It has created a new activity instance without a JavaScript runtime.        *Cause:*  On Android, an existing activity window stack can be resumed when using the same an intent that originally launched it. If given different intent settings for the same activity (such as the case here), then Android will create a new activity instance by default.    *Recommended Solution:*  We need to modify the CLI on how it starts the app via Android adb command line tool here...  https://github.com/<USER>node-titanium-sdk/blob/master/lib/adb.js#L655    We need to add intent parameters {{-a}} to set the action, {{-c}} to set the category, and {{-f}} to set the flags via adb similar to the following.      The {{-f 0x10200000}} part adds intent flags {{FLAG_ACTIVITY_NEW_TASK}} and {{FLAG_ACTIVITY_RESET_TASK_IF_NEEDED}}. The {{FLAG_ACTIVITY_NEW_TASK}} is set by all Android OS versions when launching an app from the home screen. The {{FLAG_ACTIVITY_RESET_TASK_IF_NEEDED}} is set by newer Android OS versions (such as Android 8) but works fine on older OS versions such Android 4.1.    *Note:*  We also need this change to resolve a regression mentioned here: [TIMOB-25867]  ",Bug,Low,Resolved,"2018-06-05 22:28:13","2018-06-05 22:28:13",3
"The Titanium SDK ","Hyperloop: iOS 12 - Using CocoaPods in Hyperloop does not work with Xcode 10","When using Xcode 10, Hyperloop errors if the app includes CocoaPods dependencies:      Before, there was also an issue with cleaning the build directory, which is addressed via [this PR|https://github.com/<USER>titanium_mobile/pull/10123] already.",Bug,Critical,Closed,"2018-06-05 19:58:10","2018-06-05 19:58:10",3
"The Titanium SDK ","Integrate Karma unit test runner into SDK","This ticket is about integrating the [titanium-karma-runner|https://github.com/<USER>titanium-karma-runner] into the SDK.    Ideally we should go with an approach like the following:    * The above standalone Titanium Karma runner app is intended for testing libraries that are not part of any Appc project, like [titanium-vdom|https://github.com/<USER>titanium-vdom] for example.  * For app and module projects, Introduce a new test command that will run unit tests using the Titanium Karma client. This could either be a new flag to the run command like {{appc run --unit}} or a separate command like {{appc test}}.    What needs to be done:  * (/) Bundle the Titanium Karma client and place it somewhere in the SDK so it can replace a project's default app.js during unit testing. (Implemented as a node module here: [titanium-karma-client|https://github.com/<USER>titanium-karma-client])  * Implement the {{appc test}} command. This will start a local Karma server, build the project with the altered app.js, then launches the app and passes the URL of the Karma server so tests can be executed.  * (/) Create the karma-titanium-launcher which will start test run execution by passing the Karma server URL to the build testing app. (Implemented as a Karma plugin: [karma-titanium-launcher|https://github.com/<USER>karma-titanium-launcher])  * Nice to have: Maybe integrate with device farms?","New Feature",Medium,Closed,"2018-06-05 13:25:08","2018-06-05 13:25:08",21
"The Titanium SDK ","iOS 12: Make iOS development-project compatible with Xcode 10","This ticket describes some minor changes to our Xcode template project in order to start active development on it.",Improvement,None,Closed,"2018-06-05 00:02:00","2018-06-05 00:02:00",1
"The Titanium SDK ","iOS 12: Update simulator mappings for Xcode 10","We need to do a slight adjustment on the simulator mappings of ioslib in order to run on Xcode 10 properly.",Improvement,Medium,Closed,"2018-06-04 23:17:24","2018-06-04 23:17:24",8
"The Titanium SDK ","Windows: Wrong event source after scaling with 2DMatrix","Wrong {{source.id}} is returned after scaling the view with {{2DMatrix}}.        Expected: When clicking on the blue view, it should prompt {{view2}}.  ",Bug,Medium,Closed,"2018-06-04 06:59:16","2018-06-04 06:59:16",13
"The Titanium SDK ","Windows: 2DMatrix should scale from center","View scale with {{2DMatrix}} should scale the view from center position of the view.        Expected: View should scale from center of the view.",Bug,Medium,Closed,"2018-06-04 06:46:53","2018-06-04 06:46:53",5
"The Titanium SDK ","CLI: Fix new Buffer deprecation warnings in build scripts","h5.Description    Node 10 produces a deprecation warning when the {{new Buffer}} constructor is used. See https://nodesource.com/blog/understanding-the-buffer-deprecation-in-node-js-10/ if you're curious    In most cases I believe the most appropriate swap for us to do is turn {{new Buffer}} into {{Buffer.from}}    In titanium_mobile there are two instances https://github.com/<USER>titanium_mobile/search?l=JavaScript&q=%22new+Buffer%22  , however checking all modules (*lib, node-appc, node-titanium-sdk etc.) would also be good as there deprecation warning will not be shown for code that resides under {{node_modules}} I believe.    We might also wish to update eslint-config-axway to include the {{no-buffer-constructor}} rule    Steps to reproduce to be added as replacement happens",Bug,None,Closed,"2018-05-31 09:56:36","2018-05-31 09:56:36",5
"The Titanium SDK ","Android: ERR_INVALID_CALLBACK error when building a app/module on Node 10","h5.Description    Building an app or module with Node 10 throws the following error        h5.Steps to reproduce    1. Download Node 10  2. Build a module or an app    h5.Actual    Above error    h5.Expected     No error should occur",Bug,High,Closed,"2018-05-31 09:38:54","2018-05-31 09:38:54",5
"The Titanium SDK ","App does not run if included module have multiple .aar file.","I am trying to build an Android module that includes .aar files. The module currently doesn't do much at all but when I include various .aar files then the module is created but when it gets to running the test app of the module it fails.     It creates the unsigned apk and then processes the dex files and then the src files when it throws the following error.     (__('Valid ABIs for this project: %s', this.abis(', ')));   : this.abis is not a function   Failed to run ti /Users/jasonwogan/.<USER>install/7.0.3/package/node_modules/titanium/lib/titanium.js       The Module: https://github.com/jwogan5/sampleApp/blob/master/android.zip     *Steps To Reproduce*  1. Just build that module  2. Then run it with any sample test App.   ",Bug,High,Closed,"2018-05-31 01:29:57","2018-05-31 01:29:57",0
"The Titanium SDK ","Windows: Remove Ti.UI.currentWindow","Remove {{Ti.UI.currentWindow}} as it has been removed on the other platforms.    Related to https://github.com/<USER>titanium_mobile/pull/10080#discussion_r191809153","New Feature",Medium,Closed,"2018-05-30 20:33:41","2018-05-30 20:33:41",3
"The Titanium SDK ","iOS: Ti.UI.convertUnits returns incorrect values for 3x resolution devices","Calls to Ti.UI.convertUnits return invalid values for 3x iOS devices. It appears to be multiplying by 2x instead under the hood.",Bug,Medium,Closed,"2018-05-30 14:09:14","2018-05-30 14:09:14",5
"The Titanium SDK ","Android : WebView Html5 Audio / Video Not playing from External Storage","    [ERROR] :  MediaResourceGetter: Invalid url: java.lang.RuntimeException: setDataSource failed: status = 0x80000000  [ERROR] :  MediaPlayer: error (262, 0)  [ERROR] :  MediaPlayer: Unable to create media player      ================    The audio / video file from *external storage* not playing under webview.    Note: please check the attached code (app.js)    on my android deice I have copied both audio file into the directory where created index.html file is present",Bug,Critical,Closed,"2018-05-23 06:47:01","2018-05-23 06:47:01",0
"The Titanium SDK ","Android: Refactor app resume and newintent handling","*Summary:*  Titanium's app resume handling from notification, shortcuts, intent-filters, etc. is problematic. It does not always resume and instead displays a new splash-screen instance which never runs the app.js (appears to hang) or a dialog stating that the app needs to be restarted (which can get stuck in an infinite loop).    The following is a list of issues that have been reported. Some are flagged closed, but they're not completely resolved:  * [TIMOB-1559]  * [TIMOB-4941]  * [TIMOB-9285]  * [TIMOB-15253]  * [TIMOB-24427]  * [TIMOB-24747]  * [TIMOB-25776]    *Recommended Solution:*  Get rid of *+all+* of the activity restarting code. No one likes this behavior.  * [TiRootActivity.onCreate()|https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/TiRootActivity.java#L75]  * [TiLaunchActivity.onCreate()|https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/TiLaunchActivity.java#L142]  * [TiBaseActivity.onCreate()|https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/TiBaseActivity.java#L578]    Drop support for Android bug 2373/5277 related tiapp.xml properties:  * [link|https://docs.<USER>com/platform/latest/#!/guide/tiapp.xml_and_timodule.xml_Reference-section-src-29004921_tiapp.xmlandtimodule.xmlReference-PropertiestoworkaroundAndroidbugs2373and5277]    In the main activity's {{onCreate()}}, we should do the following:  # Check if {{TiApplication.getRootActivity()}} is not null. This tells us if a pre-existing activity window is already in the background and needs to be resumed. If it doesn't exist, then go ahead and create the activity (we're done).  # Fetch the pre-existing root activity's intent. If we call {{Context.startActivity()}} with this intent, then it'll resume it with all of its child activity windows intact. _(This is what we're missing.)_  # Call {{finish()}} for the new activity since we don't want to spawn a new instance. Attempt to disable the activity window's animation if possible via {{Activity.overridePendingTransition()}}.  # Have the pre-existing root activity fire a newintent event with the intent received by the new activity that we just finished/closed. (We must wait for the old activity task to resume first though.)    *Issues to Investigate:*  * The {{Activity.getIntent()}} can return {{null}} in rare cases ([link|https://stackoverflow.com/questions/37856407/can-activity-getintent-ever-return-null]). We need to figure out how to resume the app's activity in this case.  * We need to double check the necessity of {{TiBaseActivity.isUnsupportedReLaunch()}}. I suspect it's handling the case where a new Java runtime and {{Application}} instance is being re-created for a pre-existing app <USER>(the C/C++ side's static variables still remember previous application info).  * Check how this works with launchMode singleTop. (It is being used by some community users. Although with this change, we shouldn't need it anymore.)  * Re-test with Titanium's Live-View feature and {{Ti.App._restart()}} method to make sure they don't break.    *Limitations:*  * Titanium only supports running one V8 JavaScript runtime at a time. So, multiple activity tasks cannot be supported due to this limitation. This is partly why we need to refactor the app resume behavior. _(This may be fine from a portability standpoint anyways since iOS does not support this.)_  * We should avoid launchMode singleTask support. While it does what we want and makes an Android app work more like iOS, it comes with a huge limitation. A singleTask activity's child activity windows are all torn down by the Android OS after homing-out of the app and then resuming it. singleTask is only a viable solution if we re-architected Titanium to only support one activity and and all {{Ti.UI.Window}} objects spawned fragments instead, but this would be a major MAJOR breaking-change that is best avoided for now.    ",Improvement,High,Closed,"2018-05-30 03:33:56","2018-05-30 03:33:56",13
"The Titanium SDK ","Windows: Update APSAnalytics to support opt-out","Update [aps_sdk|https://github.com/<USER>aps_sdk] to support opt-out for Windows. I believe it is not a requirement of 7.2.0 because Axway doesn't officially support native sdk for Windows, but it is good to have it updated.  ","New Feature",High,Closed,"2018-05-24 21:01:17","2018-05-24 21:01:17",8
"The Titanium SDK ","node-ios-device: Support Xcode 9 and Node.js 10","Apparently newer versions of Xcode prohibit the linking to private frameworks. In the case of node-ios-device, it needs to link with MobileDevice.framework and can't with Xcode 9.2 and 9.3.    node-pre-gyp is pretty out-of-date.    The build scripts need to be updated for Node.js 10 (and Node.js 9).",Improvement,High,Closed,"2018-05-24 18:59:04","2018-05-24 18:59:04",8
"The Titanium SDK ","Android: Investigate NDK r17 support","We currently support the Android NDK r16b with SDK 7.x. As of May 2018, NDK r17 is available ([Changelog|https://developer.android.com/ndk/downloads/revision_history]). We should validate if our tooling already supports it and if not, what it takes to update it.",Story,High,Closed,"2018-05-24 13:34:55","2018-05-24 13:34:55",1
"The Titanium SDK ","iOS: Implement WebView.onlink callback","h5. description  Costumer is attempting to load a pdf for android using intents with webview.   in the mobile app they are using webview control for displaying the remote web site by binding a URL. The web pages in the web site contains few pdf links. On click of normal hyperlinks, respective web page is being shown in the web view. Whereas, on tapping a pdf links, a blank window is getting opened in Android devices. In iOS it’s working fine and a PDF is showing.    Per Jira WebView cannot disply PDF documents on Android. So they are using intents as a workaround to open the PDF link. The issue is that on click of the pdf link in the web view, they are unable to get the exact PDF url with any of Titanium WebView API methods or events    The customer was able to do it natively and open the PDF's with intents.     h5. Request  The customer wants to know how to get the exact PDF link using the webview API or if there is a workaround they could use.    h5. additional information   attached are two apps. One is a titanium app and one is an android native application.  [titanium app|https://axwaysoftware-my.sharepoint.com/personal/<USER>axway_com/_layouts/15/guestaccess.aspx?guestaccesstoken=rsxSxfm51VH5t8MRm7YpDX1bHDfJfDfaycmtpKrlAEE%3d&docid=2_11a957eab95234b6ab84003e12f7b0b41&rev=1]",Story,High,Closed,"2018-05-23 17:38:01","2018-05-23 17:38:01",3
"The Titanium SDK ","Windows: Support x64 build target for Hyperloop","Support x64 build target support for Hyperloop.",Story,Medium,Closed,"2018-05-21 03:29:50","2018-05-21 03:29:50",13
"The Titanium SDK ","Android: Build fails due to invalid character '$' in android manifest with facebook & liveview with 7.3.0 SDK","This can be called as a regression. Works with 7.1.1.GA    h5.Steps to reproduce:  1. Create a default app for android.  2. Add the facebook module to the tiapp.xml.  3. Build the app with SDK 7.3.0 (I used 7.3.0.v20180518082133).    h5.Actual result:  1. Build fails to package with error:    2. In the android manifest this line gets added:    3. Build fails due to the {{$}} symbol.    Expected result:  1. Build should not fail when facebook & liveview are used in the app.",Bug,Medium,Closed,"2018-05-18 17:22:28","2018-05-18 17:22:28",3
"The Titanium SDK ","Android: Webview with HTML having GIF images not loaded on all android devices.","Hi,  I am facing a wired issue in android.  I have Web-view with HTML having GIF images. GIF images is loading in some android device and doesn't load in some android device.  1.html  {code:HTML}  <!DOCTYPE html PUBLIC -//W3C//DTD HTML 4.01//EN http://www.w3.org/TR/html4/strict.dtd>  <html lang=en>    <head>      <meta http-equiv=Content-Type content=text/html; charset=utf-8>      <meta name=viewport content=width=device-width, height=device-height, initial-scale=1.0, user-scalable=no/>  </head>    <body style=background-color:transparent; margin: 0; height: 100%; overflow: hidden>      <div style=text-align: right>           <img src=gifImg.gif style=width: 40px; height: 40px />      </div>  </body>    </html>  {code}    index.xml  {code:xml}  <Alloy>      <Window class=container>          <WebView id=previewWebView url = '/gifTest/1.html'/>      </Window>  </Alloy>  {code}  Places your gif image and HTML file to the assets/gifTest/ location    Note: We have tested on Android 6 (HTC one m8), Android 7 (Huawei), and Android 8 Huwawei y9 2018 is working as expected.    Problem with the following devices and Chrome browser version: 66.0.3359.158  OnePlus 5T(8.1.1), Moto G4 plus(v7.0.0), onePlus 3(v8.0.0) and Moto G5 (v7.0.0)    *Steps To Reproduce:*  1. Run the provided test code with those specific devices.  2. Make sure the Chrome browser of those devices is up to date.  3. Test on the actual device, not on emulator.    *Test environment :*  {code}  Operating System    Name                        = Microsoft Windows 10 Pro    Version                     = 10.0.16299    Architecture                = 32bit    # CPUs                      = 4    Memory                      = 17091956736  Node.js    Node.js Version             = 8.9.1    npm Version                 = 5.5.1  Titanium CLI    CLI Version                 = 5.1.0  Titanium SDK    SDK Version                 = 7.1.1.GA  {code}    Thanks ",Bug,None,Resolved,"2018-05-18 17:02:03","2018-05-18 17:02:03",0
"The Titanium SDK ","Android: Ti.UI.createRefreshControl.beginRefreshing() does not fire 'refreshstart'","- {{beginRefreshing()}} does not fire the {{refreshstart}} event    *TEST CASE*  {code:js}  var window, control, listView;    window = Ti.UI.createWindow();    window.addEventListener('open', function () {      control.beginRefreshing();  });    control = Ti.UI.createRefreshControl();    listView = Ti.UI.createListView({      refreshControl: control  });    control.addEventListener('refreshstart', function () {      Ti.API.info('refreshstart');      setTimeout(function () {          Ti.API.info('ending...');          control.endRefreshing();      }, 2000);  });    control.addEventListener('refreshend', function () {      Ti.API.info('refreshend');      alert('DONE!');  });    window.add(listView);  window.open();  {code}",Improvement,Critical,Closed,"2018-05-17 23:50:11","2018-05-17 23:50:11",2
"The Titanium SDK ","iOS : Replace NSURLConnection with NSURLSession used in Ti.UI.WebView","Apple has deprecated NSURLConnection and NSURLSession should be used instead of same. In Ti.UI.WebView, we are still using NSURLConnection. We should replace NSURLConnection with NSURLSession.",Improvement,High,Closed,"2018-05-17 06:19:56","2018-05-17 06:19:56",3
"The Titanium SDK ","Windows: Refactor RSOD","- Refactor the red-screen of death (crash dialog) with stack traces to match the iOS/Android look and feel.  - Add nativeStack property to show the native stack trace     Unit-test (iOS and Android so far): https://github.com/garymathews/titanium_mobile/pull/2/files#diff-3dc400bf7f83b2691685b65f5a5066d1R13",Improvement,High,Closed,"2018-05-16 22:32:17","2018-05-16 22:32:17",13
"The Titanium SDK ","Windows: 2DMatrix rotation scales view","Animation transform using {{2DMatrix}} with {{rotate}} property should just rotate the view but it actually scales view.        Expexted: View should rotate at the center position of the view. This should not change view size.  ",Bug,Medium,Closed,"2018-05-16 02:08:59","2018-05-16 02:08:59",8
"The Titanium SDK ","Android: Time picker value property does not retain assigned year/month/day like iOS","{color:red}After thinking about it, perhaps this behavior is okay. If you want the year/month/day parts preserved, then you should be using the {{Ti.UI.PICKER_TYPE_DATE_AND_TIME}} type. Especially since one problem with preserving the date in a {{Ti.UI.PICKER_TYPE_TIME}} is it has a daylight savings time issue where 2 AM cannot be selected on a spring-forward day (such as 2018/03/11), which is currently the case for both Android and iOS. This behavior would be okay in a date-time picker, but perhaps not in a time-only picker.{color}    *Summary:*  A {{Ti.UI.Picker}} of type {{PICKER_TYPE_TIME}} does not retain the originally assigned year, month, day, and seconds assigned to its {{value}} property. The date returned by {{value}} is always set to the current date (this is wrong), with the hour and minute components set to what's selected in the picker (this last part is fine).    On iOS, all other date components (year, month, day, seconds) are preserved. Android should do the same.    *Test:*  # Build and run the below code on Android.  # Tap the Get Selected Time button.  # An alert dialog displays the picker's current date and time. Note that the date is set to current day instead of the hardcoded 2018/01/01.        *Note:*  This is an issue with Titanium's TiUITimeSpinner Java class...  [TiUITimeSpinner.java|https://github.com/<USER>titanium_mobile/blob/master/android/modules/ui/src/java/ti/modules/titanium/ui/widget/picker/TiUITimeSpinner.java]    *Work-Around:*  You can extract the hour and minute selected from the picker and recreate a date object with the correct time like this...    ",Bug,Medium,Open,"2018-05-16 01:39:25","2018-05-16 01:39:25",3
"The Titanium SDK ","Android: Add paragraph styles to AttributedString","*Summary:*  Add new paragraph style type {{Ti.UI.ATTRIBUTE_PARAGRAPH_STYLE}} to {{AttributedString}}, supporting the following settings:  * {{alignment}}  * {{firstLineHeadIndent}}  * {{headIndent}}  * {{tailIndent}}  * {{lineBreakMode}}  * {{maximumLineHeight}}  * {{minimumLineHeight}}  * {{lineSpacing}}  * {{paragraphSpacingAfter}}  * {{paragraphSpacingBefore}}  * {{lineHeightMultiple}}  * {{hyphenationFactor}}  * {{allowsDefaultTighteningForTruncation}}    This is needed for parity with iOS. See: [TIMOB-24080]  ",Improvement,Medium,Open,"2018-05-15 18:38:42","2018-05-15 18:38:42",11
"The Titanium SDK ","Hyperloop: Accessing internal WebSocket library","Titanium is shipping a {{java_websocket.jar}} in {{/linux/7.1.1.GA/android/}} which I can use in a normal Android module by just importing it with {{import org.java_websocket.client.WebSocketClient;}}. No need to put the jar into my project folder.    When trying the same with Hyperloop I always get the error, that the module is not found. When placing the jar into the project folder it complains about duplicate classes.    Is there a way to access the libraries inside the Android folder using Hyperloop?    Titanium SDK 7.1.1.GA  ",Bug,Critical,Closed,"2018-05-08 17:02:01","2018-05-08 17:02:01",1
"The Titanium SDK ","Windows: Disabling Ti.View does not disable its children","We have having issues related to disabling the children of Ti.View. If we make touchEnabled false for a View, it does not make its children uneditable.  Where as if we use Ti.ScrollView instead, everything is working as expected.    As mentioned in the ticket  [TIMOB-25306|https://jira.<USER>org/browse/TIMOB-25306], since we can not make the picker disabled by setting its touchEnabled property as false, we are trying to use it as a workaround to disable its Parent view which would in turn disable all its children.      Steps to reproduce:  1. Run the attached Alloy project TestPickerDisabled  2. You can see two Pickers and two TextFields. Picker and TextField whose background color is yellow are children of Ti.View where as the other Picker and TextField whose background color is Red are children of Ti.ScrollView.  3. We have touch enabled property set to false for both Ti.View and Ti.ScrollView. You can observe that the Picker and the TextField that are children of Ti.View are editable where as the children of Ti.ScrollView are not editable.    Test Project : *TestPickerDisable.zip*    Test Environment :    Thanks   ",Bug,High,Closed,"2018-05-13 15:54:10","2018-05-13 15:54:10",8
"The Titanium SDK ","Android: Warning: PickerProxy: the useSpinner property is deprecated","Received this email through JIRA admin account:    _In Android when using the Picker element we are receiving the following warning:PickerProxy: the useSpinner property is deprecated, see the documentation for more information. At any time we are establishing this property and it is causing the application to freeze_    I reached out to the app developer for more details, and will update the ticket after information is available.",Bug,None,Closed,"2018-05-11 21:37:55","2018-05-11 21:37:55",0
"The Titanium SDK ","iOS: Ti.Media.VideoPlayer shows an error on Window Close on SDK 7.1.1.GA","Hello,     The following error occurs when closing a window with a video player control with SDK 7.1.1.GA on iOS. On Android, it works just fine.     *Test Environment:*  <USER>Command-Line Interface, version 7.0.3  SDK: 7.1.1.GA    *Test code:*  index.xml    video.xml    index.js    video.js    index.tss    alloy.js      Note: Also I have added the full project on the attachment file.  *Error:*    In this test code customer used *media* in the create command to play a video stored on the local device. If they put a fake url in the create it won't throw the error but even though they set the media later then it will not play the video. Again, this only happens on iOS.     Thanks",Bug,High,Closed,"2018-05-11 15:45:10","2018-05-11 15:45:10",8
"The Titanium SDK ","Android: TCP read() and write() methods cause a crash when running on main UI thread","*Summary:*  If the tiapp.xml file property {{run-on-main-thread}} is set to {{true}}, then calling a {{Ti.Networking.Socket.TCP}} object's blocking {{read()}} or {{write()}} method will cause a crash on Android.    *Steps to reproduce:*  # Open the project's tiapp.xml file.  # Make sure property run-on-main-thread is set to {{true}}.  # Set up an Android device with Internet access.  # Build and run [^TcpClientBlockingTest.js] on the Android device.    *Result:*  The app crashes with a Java {{NetworkOnMainThreadException}}.    *Cause:*  The Java {{java.net.ServerSocket}} class will throw a {{NetworkOnMainThreadException}} when used on the main UI thread. It can only be used by a non-UI thread.    *Work-Around:*  Simplest solution is to set the tiapp.xml property run-on-main-thread to {{false}}.    Best solution is to not use the blocking read() and write() methods and use the async {{Ti.Stream.pump()}} and {{Ti.Stream.write()}} methods instead as documented here...  https://docs.<USER>com/platform/latest/#!/api/Titanium.Network.Socket.TCP    Note that even if we do fix the crash, we still don't recommend using the synchronous {{read()}} and {{write()}} method calls since they'll block the UI thread. This will make the UI appear to stutter or hang, providing a poor experience for the end-user.",Bug,High,Closed,"2018-05-11 03:09:09","2018-05-11 03:09:09",7
"The Titanium SDK ","Android : Titanium.Android.ACTION_HEADSET_PLUG Not working as expected.","We want to detect the current state of headphones connected (true) or disconnected (false). We have an API for that but no example code in documents.  http://docs.<USER>com/platform/latest/#!/api/Titanium.Android-property-ACTION_HEADSET_PLUG  I create an example code but not working.   {code}  function doClick() {   Ti.Android.unregisterBroadcastReceiver(bc);  }  $.index.open();  var onReceived = function(e) {   Ti.API.info(received!);   Ti.API.info('Handling broadcast. >> ' + JSON.stringify(e));   alert('Handling broadcast. >> ' + JSON.stringify(e));  };  var bc = Ti.Android.createBroadcastReceiver({   onReceived : onReceived  });  Ti.Android.registerBroadcastReceiver(bc,[Titanium.Android.ACTION_HEADSET_PLUG]);  {code}  Index.xml  {code:xml}  <Alloy>      <Window class=container  onClose=doClose />     </Alloy>  {code}    Test Environment:  {code}  Operating System    Name                        = Microsoft Windows 10 Pro    Version                     = 10.0.16299    Architecture                = 32bit    # CPUs                      = 4    Memory                      = 17091956736  Node.js    Node.js Version             = 8.9.1    npm Version                 = 5.5.1  Titanium CLI    CLI Version                 = 5.1.0  Titanium SDK    SDK Version                 = 7.1.0.GA  {code}    Thanks     ",Bug,None,Closed,"2018-05-10 16:12:06","2018-05-10 16:12:06",2
"The Titanium SDK ","Windows: Add Ti.Filesystem.File parity across platforms","Fix some parity issues we're looking at deprecating Ti.Filesystem.File #createTimestamp() and #modificationTimestamp() to be replaced by new #createdAt() and #modifiedAt() methods that return a Date.    Basically the timestamp methods return a Date on iOS and Number on the rest. There's not a nice non-breaking way to fix that, so we'd like to deprecate the existing methods and add new variants that return Date on all platforms (since it's pretty easy to turn that into a timestamp if necessary).  ",Improvement,High,Closed,"2018-05-09 23:04:10","2018-05-09 23:04:10",13
"The Titanium SDK ","Android: Analytics can cause a crash on Android 8 if app is backgrounded","When using Analytics (enabled by default via the tiapp.xml property {{<analytics>true</analytics}}, an Android app can randomly crash:    The crash happens in the handleMessage method of the APSAnalyticsHelper.java and indicates an issue with the main thread. We removed the class recently, as part of [this PR|https://github.com/<USER>aps_sdk/pull/312], so it might not be an issue in future versions of the SDK. [~<USER> to confirm",Bug,None,Closed,"2018-05-09 15:26:24","2018-05-09 15:26:24",3
"The Titanium SDK ","TiAPI: Improve parity on Core-SDK","Currently, there are differences in behavior when using several core-API's across iOS and Android. Those should be resolved.  ",Epic,None,Resolved,"2018-05-09 10:45:33","2018-05-09 10:45:33",0
"The Titanium SDK ","TiAPI: Add Ti.Filesystem.File parity across platforms","Currently, there are differences in behavior when using the Ti.Filesystem.File API across iOS and Android. Those should be resolved.",Improvement,High,Closed,"2018-05-09 10:42:15","2018-05-09 10:42:15",13
"The Titanium SDK ","TiAPI: Add Ti.Blob parity across platforms","Currently, there are differences in behavior when using the Ti.Blob API across iOS and Android. Those should be resolved.",Improvement,High,Closed,"2018-05-09 10:40:59","2018-05-09 10:40:59",13
"The Titanium SDK ","TiAPI: Add Ti.Buffer parity across platforms","Currently, there are differences in behavior when using the Ti.Buffer API across iOS and Android. Those should be resolved.",Improvement,High,Closed,"2018-05-09 10:39:03","2018-05-09 10:39:03",15
"The Titanium SDK ","iOS: Search results table-view background color change","I have a window with backgroundImage and a tableView with backgroundColor transparent and labels of all item white.  When I click on searchBar and start typing the backgroundColor of tableView became white and the results are unreadable because item's labels have the same color of background.    Android work fine with the same component Ti.UI.createSearchBar",Improvement,Medium,Closed,"2018-05-09 10:33:34","2018-05-09 10:33:34",2
"The Titanium SDK ","Windows: Add ARM64 support for modules","* Titanium CLI should be able to create/build modules for ARM64.","New Feature",High,Open,"2018-05-09 04:02:18","2018-05-09 04:02:18",13
"The Titanium SDK ","Windows: Support x64 build target","Support {{--x64}} build target for UWP app.","New Feature",Medium,Resolved,"2018-05-09 04:00:13","2018-05-09 04:00:13",13
"The Titanium SDK ","Titanium.UI.iOS.MenuPopup: Ability to change background color and text color","Customer is looking for way to change background color and text color for controller Titanium.UI.iOS.MenuPopup.    For now, there is no properties to change those. So create this as new feature.  Please also advice any workaround to change them.","New Feature",None,Closed,"2018-05-08 11:02:52","2018-05-08 11:02:52",1
"The Titanium SDK ","Windows: Titanium.Media.MEDIA_TYPE_VIDEO not working.","Hello !  I am having problem to take video from <USER>windows 10 app Surface Pro . Titanium.Media.MEDIA_TYPE_VIDEO not working now.       Above code doesn't give me option for video.    Test Environment:  SDK 7.1.0  windows 10  Surface Pro    Thanks   ",Bug,High,Closed,"2018-05-04 17:46:06","2018-05-04 17:46:06",13
"The Titanium SDK ","TextArea: Cursor should go to beginning of the text when editable is false","For now, if we set value to textArea by coding, the cursor will go to the end of the text value. But if the content is more than the height of the text area, you will  have to scroll up to read the top content. This is very inconvenience. Specially, when customer just want to make the textArea as a read only area.     We should consider with the following improvement. Like if editable property is false, then the curser should go to the beginning of content. If editable property is true, we keep the current behaviour. ",Improvement,None,Closed,"2018-05-04 11:07:36","2018-05-04 11:07:36",0
"The Titanium SDK ","iOS: Textfield AutoCaps is not working on specific keyboardType.","Issue:  Textfield autocapitalization property is not working with specific keyboardType named  keyboardType :Titanium.UI.KEYBOARD_TYPE_NAMEPHONE_PAD,    Steps To Reproduce:  1. Run the following test code on an iOS device  2. Then click on textfield and check autocapitalization is not showing. If you change the keyboardType it works.    Test Code:  {code:title=app.js}        var window = Ti.UI.createWindow({          backgroundColor: 'white'      });        var textField = Ti.UI.createTextField({          borderStyle: Ti.UI.INPUT_BORDERSTYLE_ROUNDED,          keyboardType :Titanium.UI.KEYBOARD_TYPE_NAMEPHONE_PAD,          autocapitalization :Titanium.UI.TEXT_AUTOCAPITALIZATION_ALL,          color: '#336699',          width: 250,          height: 60      });        textField.addEventListener('click', function() {          Ti.API.info('in text field click');      });        window.add(textField);        window.open();    {code}    Thanks!",Bug,None,Closed,"2018-05-04 09:54:02","2018-05-04 09:54:02",0
"The Titanium SDK ","Android: TiHTTPClient getResponseHeader throws a NullPointerException","Calling  throws an exception:        I was trying to send some data to sentry.io, maybe inside the response there were no headers.",Bug,Critical,Closed,"2018-05-01 17:57:26","2018-05-01 17:57:26",3
"The Titanium SDK ","Update Ti.Map modules (iOS 3.1.0, Android 4.2.0)","We need to update the Ti.Map module references on the SDK.    Includes the following changes:  * [MOD-2145] iOS: Added image overlay support.  * [MOD-2416] Android: Added image overlay support.  * [MOD-2345] Android/iOS: Added padding support.  * [MOD-2417] Android: Fixed map animation crash that sometimes happens.  ",Story,Medium,Closed,"2018-05-03 08:19:36","2018-05-03 08:19:36",1
"The Titanium SDK ","The new update 7.1.1 does not work on Android (Gradle bug)","The new update 7.1.1 does not work on Android. At the creation of the SDK, stops and i get the following message:        ",Bug,Critical,Closed,"2018-05-03 08:16:00","2018-05-03 08:16:00",2
"The Titanium SDK ","iOS: Refactor RSOD","- Refactor the red-screen of death (crash dialog) to match the updated Android implementation",Improvement,High,Closed,"2018-05-03 01:08:39","2018-05-03 01:08:39",13
"The Titanium SDK ","Android: Reduce V8 library size","- The size of {{libkroll-v8}} for each architecture we support is quite large in size. We should see what optimizations we can make to reduce the size of the library.",Improvement,Medium,Closed,"2018-05-01 21:41:01","2018-05-01 21:41:01",5
"The Titanium SDK ","Windows: Provide API to support opt-out of Analytics at runtime","We must provide an API for developers to allow end-users to opt-out of analytics.","New Feature",Critical,Closed,"2018-05-01 21:38:21","2018-05-01 21:38:21",21
"The Titanium SDK ","iOS: Provide API to support opt-out of Analytics at runtime","We must provide an API for developers to allow end-users to opt-out of analytics.","New Feature",Critical,Closed,"2018-05-01 21:37:50","2018-05-01 21:37:50",21
"The Titanium SDK ","Android: Provide API to support opt-out of Analytics at runtime","We must provide an API for developers to allow end-users to opt-out of analytics.","New Feature",Critical,Closed,"2018-05-01 21:17:32","2018-05-01 21:17:32",21
"The Titanium SDK ","Android custom Module : Unable to connect WIFI of Android 8 devices ","We are using below code to connect to Android device Wifi programatically. This code is working fine Android devices 7 and below. Same code is not working in Android 8. We have developed sample app in Android studio where we are able to connect to WIFI using wifiManager manager class. Due to this we are suspecting this issue might exists only if we using <USER>module. Details are mentioned after the code.  Code used to connect :      Please take a look on attached zip file.      Note Our App which is consuming this module is targeted for Titanium SDK 5.5.1.GA.    Let me know if you need more information.    ",Bug,None,Closed,"2018-05-01 17:05:18","2018-05-01 17:05:18",8
"The Titanium SDK ","Windows: Titanium codebase to support 64bit compatibility","Fix build errors/warnings when building for 64 bit. ","New Feature",High,Closed,"2018-05-01 10:15:10","2018-05-01 10:15:10",8
"The Titanium SDK ","Windows: Add x64 support for modules","* Titanium CLI should be able to create/build modules for x64.","New Feature",High,Resolved,"2018-05-01 10:11:56","2018-05-01 10:11:56",13
"The Titanium SDK ","Windows: CLI should support --x64 and --arm64 build  target","Support {{x64}} and {{arm64}} build  target in CLI.","New Feature",High,Closed,"2018-05-01 10:10:04","2018-05-01 10:10:04",13
"The Titanium SDK ","Windows: Setup Jenkins Build with Visual Studio 2017","In order to support ARM64 build  (TIMOB-25716), Jenkins should be building Titanium with Visual Studio 2017.","New Feature",High,Closed,"2018-05-01 10:07:29","2018-05-01 10:07:29",13
"The Titanium SDK ","Windows: JavaScriptCore for ARM64","Build JavaScriptCore for ARM64.","New Feature",High,Closed,"2018-05-01 10:00:51","2018-05-01 10:00:51",13
"The Titanium SDK ","Windows: JavaScriptCore for x64","Build JavaScriptCore for x64.","New Feature",High,Closed,"2018-05-01 10:00:22","2018-05-01 10:00:22",13
"The Titanium SDK ","Android apps crash when trying to add views to Titanium.Media.VideoPlayer objects if fullscreen property is set to true.","Android apps crash when trying to add views to Titanium.Media.VideoPlayer objects if fullscreen property is set to true. The sample code in the documentation exhibits the crash (see snippet under Android Fullscreen Video Player here, https://docs.<USER>com/platform/latest/#!/api/Titanium.Media.VideoPlayer).     See attached for example project. When the block that adds the closeButton is removed there is no crash.        Environment:  ",Bug,Medium,Closed,"2018-04-25 18:42:18","2018-04-25 18:42:18",5
"The Titanium SDK ","Windows: Unit specifier is ignored for font size","Changing unit specifier for font size does not change font size.    ",Bug,High,Closed,"2018-04-25 04:04:32","2018-04-25 04:04:32",5
"The Titanium SDK ","Windows: Physical pixel as a unit in views and fonts is not working","Hi !  Using the current Ti SDK GA 7.1.0 Windows applications do not recognize widths nor heights set as pixels. Also the fonts seem to be hardcoded to DIP since they don't change when specifying 18px as a value. See attached app folder of an alloy application that has 4 boxes, each with a different unit (px, dip, dp and pt)    *Test Project*:    [^app.zip]     Our application requires us to have a 1920x1400 canvas to display all the elements needed. However if the user has a screen with 2736x1824 @ 200%, the actual dip that we can use are 1368x912     The device is a surface 4 pro.","New Feature",High,Closed,"2018-04-24 14:36:01","2018-04-24 14:36:01",13
"The Titanium SDK ","Windows : Ti.UI.TextArea is not wrapped when there is long text, it just show in single line","Hello !  Ti.UI.createTextArea is not wrapped when there is long text, it just show in single line in windows phone. But it wrapped in android.  Teste code :      Test Environment:      Please take a look on attached screenshot.  ",Bug,High,Closed,"2018-04-23 17:54:17","2018-04-23 17:54:17",8
"The Titanium SDK ","Windows: Add ability to create module with C#","Feature request: We might want to consider adding ability to create Titanium module with C# because we are currently using {{C++/CX}} which might be looking unfamiliar for developers.","New Feature",Medium,Open,"2018-04-23 05:16:18","2018-04-23 05:16:18",13
"The Titanium SDK ","Windows: nuget support for Hyperloop","Investigate {{nuget}} support for hyperloop, similar to how iOS has support for cocoapods. ","New Feature",Medium,Closed,"2018-04-23 05:10:28","2018-04-23 05:10:28",13
"The Titanium SDK ","Android: Changing index break events on TableViewRow","When we populate TableView with TableViewRows and then change their order with updateRow method it will prevent firing events on the TableViewRow with lowest index. This includes click and touchstart events.    Code to reproduce:    ",Bug,Critical,Closed,"2018-04-20 16:21:43","2018-04-20 16:21:43",3
"The Titanium SDK ","Android: AlertDialog not firing click event when canceled","The alert dialog doesn't fire a cancel event if you press outside of the alertDialog box in 7.1.0. The event listener actually doesn't console anything if done this way. If you switch it back to 6.2.2 it works correctly and fires the eventlistener when the user touches outside of the alert dialog.    Make a sample AppSellHerHater project and paste the index.js below. Then build to android on 7.1.0 and watch it not work. Then build with 6.2.2 and watch it work correctly.      ",Bug,Medium,Closed,"2018-04-19 14:31:26","2018-04-19 14:31:26",2
"The Titanium SDK ","Android: Embedded youtube video is not playing due to Chrome bug","Hi,  I am trying to display the youtube video with embedded URL.    Here I am trying to assign the embedded URL to URL property of Webview.  This is running fine on iOS but on Android, we are having some issues.  Please find the log we are getting while doing this.    [INFO] :   I/TiWebChromeClient.console: (main) [456,456] Error parsing header X-XSS-Protection: 1; mode=block; report=https://www.google.com/appserve/security-bugs/log/youtube: insecure reporting URL for secure page at character position 22. The default protections will be applied. (0:https://www.youtube.com/embed/xyz?list=xyz-l)    Can you please try on your end and let me know if this is valid.",Bug,Critical,Closed,"2018-04-17 07:26:16","2018-04-17 07:26:16",0
"The Titanium SDK ","iOS: minimumFontSize property in Ti.UI.label lowers text baseline as it decreases","We've observed this problem for quite a while (I think it might also be in SDK 5.5) but it was one of those am I seeing things or is this really happening? bugs.  I finally sat down and ran some test cases and it is really happening.  As the attached test code shows, set the original font size such that the string does not fit the width of the label.  Then steadily decrease minimumFontSize until the string fits.  The string eventually fits into the label but the baseline of the text drops a little bit every time minimumFontSize is decreased.  We set borderWidth to 2 so that you can see the text move relative to the boundaries of the label.    We have several apps that require this functionality - it used to work properly somewhere in the SDK 5 generation.    The same code runs correctly on Android 7.1 (see screenshot)",Bug,Critical,Closed,"2018-04-17 01:44:39","2018-04-17 01:44:39",0
"The Titanium SDK ","Liveview: Write more information to pidfile, such as port and ip data","h5.Description    Currently when liveview writes its pidfile (at ~/.titanium), it only contains the path of the project, we should write more data to this (ip, fport, eport etc.) so that commands like stop/restart can function if the user defines a custom ip or port.    It would probably make sense to turn this file into a json object like below    ",Improvement,Medium,Closed,"2018-04-16 09:59:24","2018-04-16 09:59:24",3
"The Titanium SDK ","Android: Update old exception dialog","The current exception dialog is ugly and provides little debugging information. We should update the dialog to a cleaner and clearer output that also provides a stack trace.",Improvement,Medium,Closed,"2018-04-13 22:50:59","2018-04-13 22:50:59",3
"The Titanium SDK ","Android: Merge manifest of Android Libraries","The AndroidManifest.xml of an Android Library (.aar) needs to be merged into the final app manifest.",Bug,None,Closed,"2018-04-13 20:44:40","2018-04-13 20:44:40",2
"The Titanium SDK ","Android: Implement method to obtain current stack trace from V8","Currently, there it is not possible to obtain the current stack trace from V8 on the Java side of Titanium Android.    - Implement a V8Runtime method to obtain the current stack trace  - Report the stack trace upon runtime exceptions",Improvement,High,Closed,"2018-04-13 17:11:34","2018-04-13 17:11:34",5
"The Titanium SDK ","iOS: e.orientation always returns 5 for landscape to FACE_UP and portrait  to FACE_UP.","Basically, need to maintain the onset of UI when we in portrait and move up & down. Also another set of UI when are in landscape and move up&down.     Eg:  if( e.orientation === Ti.UI.PORTRAIT && e.orientation === Titanium.UI.FACE_UP){    updateUI();  }    Also,    if( (e.orientation === Ti.UI.LANDSCAPE_LEFT || e.orientation === Ti.UI.LANDSCAPE_RIGHT) && e.orientation === Titanium.UI.FACE_UP){  updateUI()  }    But it does not work.      *Test Code:*          Thanks.  ",Bug,None,Closed,"2018-04-13 03:10:50","2018-04-13 03:10:50",0
"The Titanium SDK ","Android: Refactor Appcelerator Crash Analytics module","- Update for compatibility with Titanium SDK 7.0.0+  - Add ARM64 support  - Refactor ACA implementation  {quote}  - Remove ACRA third-party library for crash handling  - Remove unnecessary/deprecated methods  - Utilize APSAnalytics library for sending events  - Fix event payload format  {quote}",Improvement,High,Resolved,"2018-04-10 22:31:51","2018-04-10 22:31:51",34
"The Titanium SDK ","Android: Add Ti.UI.ButtonBar support","*Summary:*  Currently, Titanium's {{ButtonBar}} is an iOS only feature. We should add support on Android for parity.    On iOS, this feature is implemented via the {{UISegmentedControl}} whose momentary style is set to {{true}}. This means the {{UISegmentedControl}} doesn't maintain a check/selection state and acts like buttons.    On Android and Windows, this should be implemented as a horizontal layout of buttons.    *Note:*  The {{ButtonBar}} style property has been deprecated on iOS since Titanium 3.4.2 and will log a warning when you attempt to set it. iOS currently ignores this property. We can re-purpose this property to implement the 3 different button styles documented by Google's material theme: Text Button, Outlined Button, and Contained Button.  https://material.io/design/components/buttons.html  ","New Feature",Low,Open,"2018-04-10 19:42:04","2018-04-10 19:42:04",7
"The Titanium SDK ","Android: Add Ti.UI.TabbedBar support","*Summary:*  Currently, Titanium's {{TabbedBar}} feature is iOS only. We should add support on Android for parity.    This would also be a solution for developers who want to see tabs at the bottom of the Android screen, such as how it works on iOS. The {{TabbedBar}} can be used in conjunction with a {{ScrollableView}} with scrolling disabled to have the same effect as a {{TabGroup}}.    *Recommended Solution:*  Use the Google design support library's {{TabLayout}} class which only shows tabs.  https://developer.android.com/reference/android/support/design/widget/TabLayout.html  https://material.io/guidelines/components/tabs.html#tabs-usage    Alternatively, use the Java {{TabHost}} class. The {{TabHost}} content area for the tabbed view can be set with a zero height so that only the tab bar is shown.  https://developer.android.com/reference/android/widget/TabHost.html    The iOS {{Ti.UI.TabbedGrouped}} is currently flagged deprecated. We should un-deprecate it and make the {{Ti.UI.iOS.TabbedGroup}} deprecated instead.  https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TabbedBar  https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.iOS.TabbedBar    *Future:*  Google's material design guidelines suggests that you use a {{BottomNavigationView}} if the tabbed bar is shown at the bottom of the screen. It doesn't show an underline for tab selection and instead highlights the text and image. Unfortunately, this solution has a limit on how many tabs can be shown. It doesn't support horizontal scrolling. Perhaps this should be a style setting upon {{TabbedBar}} creation that can be implemented later?  https://developer.android.com/reference/android/support/design/widget/BottomNavigationView.html  https://material.io/guidelines/components/bottom-navigation.html  ","New Feature",Low,Closed,"2018-04-10 18:26:06","2018-04-10 18:26:06",7
"The Titanium SDK ","iOS: Listview setHeaderView with search is not working","Hello !  We have an issue with Listview setHeaderView with search. HeaderView is not displayed on iOS with search bar but its working on android.     Test code:  {code}  var popularSearchList = [],      searchList = [],      popularSearchListData = [],      searchListData = [];  for (var i = 0; i < 5; i++) {   popularSearchList.push({    id : i,    name : Bhuvan  + i   });  }  searchList.push({   id : 0,   name : ListView  }, {   id : 1,   name : TextField  }, {   id : 2,   name : EditText  }, {   id : 3,   name : Spinner  }, {   id : 4,   name : Button  }, {   id : 5,   name : ImageView  }, {   id : 6,   name : ImageButton  }, {   id : 7,   name : RecyclerView  }, {   id : 8,   name : CardView  });    showRecentSearchList(popularSearchList);  showSearchList(searchList);    function showRecentSearchList(popularSearchList) {   _.each(popularSearchList, function(popularSearchDataObj) {    var listRowObj = {     lblRecentSearchItem : {      text : popularSearchDataObj.name     },     rowName : popularSearchDataObj.name,     template : recentSearchListTemplate,    };    popularSearchListData.push(listRowObj);   });   $.lvSearchList.sections[0].setHeaderView(addRecentSectionHeader());   $.lvSearchList.sections[0].setItems(popularSearchListData);  }    function showSearchList(searchList) {   _.each(searchList, function(searchListObj) {    var listRowObj = {     lblSearchItem : {      text : searchListObj.name     },     rowName : searchListObj.name,     properties : {      searchableText : searchListObj.name,     },     template : searchListTemplate    };    searchListData.push(listRowObj);   });   //$.lvSearchList.sections[0].setHeaderView(addSearchSectionHeader());   //$.lvSearchList.sections[0].setItems(searchListData);  }    function searchAction(e) {   $.lvSearchList.searchText = e.value;   if (e.value.length > 0) {    showListView(true);   } else {    showListView(false);   }  }    function showListView(isSearchData) {   //$.lvSearchList.sections[0].setHeaderView(addSearchSectionHeader());   if (isSearchData) {    $.lvSearchList.sections[0].setHeaderView(addSearchSectionHeader());    $.lvSearchList.sections[0].setItems(searchListData);   } else {    $.lvSearchList.sections[0].setHeaderView(addRecentSectionHeader());    $.lvSearchList.sections[0].setItems(popularSearchListData);   }  }    function addRecentSectionHeader() {   var headerView = Ti.UI.createView({    width : Titanium.UI.FILL,    height : 40,    backgroundColor : 'white',    layout : 'horizontal'   });   var leftImage = Ti.UI.createImageView({    width : Titanium.UI.SIZE,    height : Titanium.UI.SIZE,    image : '/images/customer.png',    left : 20,   });   headerView.add(leftImage);   var title = RECENT;   var lblTitle = Titanium.UI.createLabel({    width : Titanium.UI.FILL,    text : title,    height : Titanium.UI.FILL,    color : 'red',    left : 20,    font : {     fontSize : 16,     fontWeight : 'bold'    }   });   headerView.add(lblTitle);   return headerView;  }    function addSearchSectionHeader() {   var headerView = Ti.UI.createView({    width : Titanium.UI.FILL,    height : 40,    backgroundColor : 'white',    layout : 'horizontal'   });   var leftImage = Ti.UI.createImageView({    width : Titanium.UI.SIZE,    height : Titanium.UI.SIZE,    image : '/images/chassis.png',    left : 20,   });   headerView.add(leftImage);   var title = RESULTS;   var lblTitle = Titanium.UI.createLabel({    width : Titanium.UI.FILL,    text : title,    height : Titanium.UI.FILL,    color : 'red',    left : 20,    font : {     fontSize : 16,     fontWeight : 'bold'    }   });   headerView.add(lblTitle);   return headerView;  }    function cancelSearchAction(e) {    }    $.index.open();    {code}    {code:xml}  <Alloy>   <Window class=container>    <View width=Titanium.UI.FILL height=Titanium.UI.FILL layout=vertical top=25>     <View width=Titanium.UI.FILL height=40 borderColor=green borderWidth=2 left=10 right=10>      <SearchBar id=tfSearchField onChange=searchAction onCancel=cancelSearchAction />      <!--<TextField id=tfSearchField platform=ios onChange=searchAction onCancel=cancelSearchAction />-->     </View>     <ListView id=lvSearchList defaultItemTemplate=searchListItem>      <Templates>       <ItemTemplate id=recentSearchListTemplate name=recentSearchListTemplate>        <View id=viewRecentSearchList>         <Label id=lblRecentSearchItem bindId=lblRecentSearchItem/>         <ImageView id=imgRightArrow/>        </View>       </ItemTemplate>       <ItemTemplate id=searchListTemplate name=searchListTemplate>        <View id=viewSearchList>         <Label id=lblSearchItem bindId=lblSearchItem/>         <ImageView id=imgRightArrow/>        </View>       </ItemTemplate>      </Templates>      <ListSection/>     </ListView>    </View>   </Window>  </Alloy>  {code}  Full project ListviewSearch.zip    Please take a look on attached screenshot for android and iOS.    Teste Environment :  {code}  Operating System    Name                        = Mac OS X    Version                     = 10.13    Architecture                = 64bit    # CPUs                      = 4    Memory                      = 8589934592  Node.js    Node.js Version             = 8.9.1    npm Version                 = 5.5.1  Titanium CLI    CLI Version                 = 5.0.14  Titanium SDK    SDK Version                 = 7.1.0.GA  {code}    Thanks   ",Bug,None,Closed,"2018-04-10 14:00:34","2018-04-10 14:00:34",1
"The Titanium SDK ","iOS: setUnselectedItemTintColor is unrecognized in iOS9","The Ti.UI.TabGroup property unselectedItemTintColor is only available on iOS 10+ and should be guarded.    PR: https://github.com/<USER>titanium_mobile/pull/9991",Improvement,Critical,Closed,"2018-04-10 08:03:15","2018-04-10 08:03:15",1
"The Titanium SDK ","Windows: Wrong layout with bottom/right and center","{{bottom}} property is not calculated property when it is used with {{center}} property.        Actual: The blue box ({{view2}}) and ed line ({{view3}}) are not aligned     !b.png|thumbnail!     Expected: The blue box ({{view2}}) should be aligned with red line ({{view3}}).     !a.png|thumbnail!     More test cases:        ",Bug,Medium,Closed,"2018-04-10 07:30:30","2018-04-10 07:30:30",8
"The Titanium SDK ","Windows: Implement Ti.UI.TextArea.padding","[Ti.UI.TextArea.padding|https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TextArea-property-padding] property is not implemented on Windows.    ","New Feature",Medium,Closed,"2018-04-09 05:57:44","2018-04-09 05:57:44",5
"The Titanium SDK ","CLI: Block-scoped declaration error when using Node 4","h5.Description    When performing any Titanium CLI action (build, clean etc.) when using Node 4, the CLI will throw an error like the below        h5.Steps to reproduce    1. Execute a command like {{ti clean}} using node 4    h5.Actual    Error above    h5.Expected    CLI should function as we should break supported versions in a non-major release. Although Node 4 does go end-of-life at the end of the month, so we should not promote using it",Bug,None,Closed,"2018-04-06 18:56:39","2018-04-06 18:56:39",1
"The Titanium SDK ","Windows: Unable to install to device with JDK 9","I am unable to install to a device with JDK 9 this is due to [package.json|https://github.com/<USER>titanium_mobile_windows/blob/master/package.json#L32].    When I change the package.json to allow JDK 9 it installs to the device but the application crashes immediately with no error log.        h4. Actual        h4. Expected  No error is thrown.",Bug,High,Closed,"2018-04-06 18:20:43","2018-04-06 18:20:43",5
"The Titanium SDK ","iOS 11: Screen orientation not working in navigation window","Hello,    We are seeing a screen orientation problem as windows are being open from a root navigation modal window.     *Steps to reproduce:*    1. Open the sample application in [link|https://drive.google.com/file/d/1n6lNK6bDwtQBDekMOAQE4mjoqjZeKpgk/view?usp=sharing] or use the below-provided code.   2. Run the application in an iOS simulator using below code Or    3. Run the sample application in the simulator.   4. Switch the simulator's device orientation to UPSIDE DOWN   5. Click on the link on the main app screen labeled Launch Nav Root Window   6. Once the window titled Modal 1 window is opened, then click the Next nav button   7. The window titled Modal 2 should not have the correct orientation.     *Test Code:*  index.xml    *Modal1.xml, Modal3.xml, Modal3.xml, Modal4.xml, Modal5.xml*    *Modal1.js, Modal3.js, Modal3.js, Modal4.js, Modal5.js*      tiapp.xml      *Test Environment:*  Using latest SDK 7.1.0.GA, 7.0.1.GA   Latest CLI 7.0.2    The Screen orientation not working in navigation window on iPhone.    Thanks",Bug,High,Closed,"2018-04-06 13:32:59","2018-04-06 13:32:59",13
"The Titanium SDK ","Android: HTTPClient downloads are slower compared to iOS","Performance of HTTP Client on Android is rather sub-par when compared to how it performs on iOS. Speed and responsiveness is just not there and has never been. It also seems to be hard on resources that can really slow down the performance of the phone/app as a whole when there are multiple HTTP requests happening at once or in succession.     Here is a basic bit of code that just does a download of a 100 Mb file and shows the speed of the download and time. In the image attached you can see the performance difference between a iPhone and Android phone running the same app. The android phone is more the capable of the same download speed as the iPhone is showing, when using react or when creating a web view to do the same thing I can get over 150 Mbps on the Android phone.     Sample code:    ",Improvement,High,Closed,"2018-01-24 16:51:45","2018-01-24 16:51:45",5
"The Titanium SDK ","Android: Improve horizontal ScrollView scrolling that is set up with a RefreshControl","*Summary:*  When a horizontal {{ScrollView}} has been assigned a {{RefreshControl}}, it is difficult to scroll it horizontally. While scrolling it horizontally, if you slightly drag your finger up/down, the {{RefreshControl}} will then cancel horizontal scrolling and then steal/intercept all touch events.    *Steps to Reproduce:*  # Build and run the below code on Android.  # Start dragging the {{ScrollView}} horizontally.  # As you drag it horizontally, drag down without lifting your finger from the screen.  # Notice that the {{RefreshControl}} progress circle is being pulled down by your finger.  # As you drag down, attempt to drag horizontally without lifting your finger from the screen.  # Notice that you can no longer scroll the {{ScrollView}} horizontally anymore.        *Expected Result:*  Once you start scrolling horizontally, you should not be able to pull down the {{RefreshControl}} progress circle. It should only allow horizontally scrolling. And if you start dragging vertically, it should only pull down the {{RefreshControl}} and not allow horizontal scrolling of the {{ScrollView}}. It should only be one or the other since it's too difficult for a person to drag perfectly horizontally or vertically.    *Cause:*  This happens because Google's Java {{HorizontalScrollView}} class does not support nested scrolling. Google's {{SwipeRefreshLayout}} ignores a {{requestDisallowInterceptTouchEvent()}} method calls from child views that do not support nested scrolling, which causes it to intercept all touch events once you drag vertically.  [SwipeRefreshLayout.java#L735|https://github.com/aosp-mirror/platform_frameworks_support/blob/master/core-ui/src/main/java/android/support/v4/widget/SwipeRefreshLayout.java#L735]    *Note:*  This is not an issue with a vertical {{ScrollView}} using a {{RefreshControl}}. This is only an issue with a horizontal {{ScrollView}}.",Improvement,Low,Closed,"2018-04-05 21:53:34","2018-04-05 21:53:34",3
"The Titanium SDK ","Android: Horizontal TextField scrolling should not be canceled by scrollable parent view","*Summary:*  When a TextField is within a vertical ListView, ScrollView, or TableView... horizontal TextField scrolling will be canceled if you drag your finger too far up/down and the vertically scrolling parent view will steal/intercept all touch events from there. This makes scrolling a TextField difficult.    *Expected Behavior:*  Once horizontal scrolling has started in a TextField, the parent view should no longer be able to scroll vertically until your finger has been released.    *Steps to Reproduce:*  # Build/run the below code on Android.  # Start dragging a TextField horizontally.  # As you drag it horizontally, drag up or down.  # Notice that the TextField no longer scrolls horizontally and you're now vertically scrolling the parent ScrollView instead.        *Notes:*  * A vertical scrolling TextArea does not have this problem since it supports nested scrolling.  * iOS does not allow horizontal scrolling of a TextField at all while in a vertically scrolling parent, but I don't think we should match this behavior on Android since it makes it less convenient to use.  ",Improvement,Medium,Closed,"2018-04-05 21:16:21","2018-04-05 21:16:21",3
"The Titanium SDK ","iOS: TableView: Appending row immediately after a section appends them before the section","In a TableView, when appending a row immediately after appending a section, the elements appear in the reverse order (row and then section).    *Steps to reproduce issue*:  1. Create a classic app with the below code  2. Run the app    *Expected Results*:  Each section has 3 rows under it    *Actual Results*:  All of the rows appear first, then the sections    *Notes*:  In the example, you can click on the window to add another section and row that also appear in reverse order.    ",Bug,High,Closed,"2018-04-05 18:20:53","2018-04-05 18:20:53",1
"The Titanium SDK ","Windows: Ti.Utils.base64decode should ignore line breaks","{{Ti.Utils.base64decode}} should trim trailing line breaks to keep parity with other platforms.        Expected: This should print Decoding successful!",Bug,Medium,Closed,"2018-04-05 08:00:00","2018-04-05 08:00:00",5
"The Titanium SDK ","Windows: Implement Ti.UI.TextField.hintTextColor","[Ti.UI.TextField.hintTextColor|https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TextField-property-hintTextColor] is not implemented on Windows.  ","New Feature",Medium,Open,"2018-04-05 06:10:05","2018-04-05 06:10:05",8
"The Titanium SDK ","Windows: Implement Ti.UI.TextField.padding","[Ti.UI.TextField.padding|https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TextField-property-padding] property is not implemented on Windows.    ","New Feature",Medium,Closed,"2018-04-05 06:07:32","2018-04-05 06:07:32",8
"The Titanium SDK ","Android: Cannot build SDK with JDK 10 (missing javah tool)","*Summary:*  If you attempt to build the Titanium SDK (ie: titanium_mobile) with JDK 10 installed, the build will fail due to a missing javah tool. This tool has been removed in JDK 10.    *Steps to reproduce:*  # Instal JDK 10 if not done already.  # Open the terminal.  # {{cd}} to the {{titanium_mobile/build}} directory.  # Enter: {{node scons.js build android}}    *Result:*  Build fails due to missing javah tool.    *Work-Around:*  Build with JDK 8 or 9.    *Recommended Solution:*  Remove Titanium's usage of the javah tool and the {{#include}}'s to the generated headers files. They're not needed.    The generated header files and function prototypes are useless by themselves. We have to create the function implementation ourselves, which we've already done and they're already publicly exported via {{JNIEXPORT}} in their respective C++ files. Since the implementation side already exports the functions, the function prototypes are not needed.  https://github.com/<USER>titanium_mobile/blob/master/android/runtime/v8/src/native/JSDebugger.cpp  https://github.com/<USER>titanium_mobile/blob/master/android/runtime/v8/src/native/V8Object.cpp  https://github.com/<USER>titanium_mobile/blob/master/android/runtime/v8/src/native/V8Runtime.cpp      ----  *Original Description:*  JDK 10 has dropped the {{javah}} tool (http://openjdk.java.net/jeps/313) which is required by our tooling when building the Android platform. We need to use {{javac}}'s {{-h}} flag instead. {{javah}} generated the header files from the compiled {{.class}} files in the jars, however {{javac -h}} used the original {{.java}} files.    We'll likely have to move the header generation out of the native compile step and into the Java compile step. We can do this by specifying the {{nativeheaderdir}} attribute in the {{javac}} task in the {{common.xml}} file. However, the {{nativeheaderdir}} attribute is only supported in ant 1.9.8+ (https://ant.apache.org/manual/Tasks/javac.html) and we ship {{ant}} 1.8.0 with Titanium. The Android build also depends on {{ant-contrib}} and {{ant-nodeps}} which may not be compatible with ant 1.9.8 or newer.    In the meantime, we'll have to use JDK 9 to build the Titanium SDK.",Bug,High,Closed,"2018-04-04 19:04:55","2018-04-04 19:04:55",3
"The Titanium SDK ","Android: Update Multi-Dex support library","Our current {{android-support-multidex.jar}} is from 2015. We should update it to the latest {{1.0.3}} from March 2018.",Improvement,High,Closed,"2018-04-04 19:00:13","2018-04-04 19:00:13",3
"The Titanium SDK ","iOS: Closing a window with tabBarHidden property while modal window is open hides TabGroup bar","In a certain flow it is possible to permanently hide the tabbar even though it is not according to spec. It can be recreated using the following flow:    - open window with {{tabbarhidden}} property on true in tab  - open modal window on top of this  - close window with {{tabbarhidden}} property  - close modal window    Now, while the tabbar should be visible again, the tabbar is actually hidden. Only way to re-enable it is to open another window in the tabgroup with the {{tabbarhidden}} property and then manually close it again without the modal present. This seems to trigger a refresh. Below code to reproduce    {code:js}  Ti.UI.backgroundColor = 'white';    var tabGroup = Ti.UI.createTabGroup();  var window1 = Ti.UI.createWindow({      title: 'Window 1'  });  var tab1 = Ti.UI.createTab({      title: 'Tab 1',      window: window1  });    var window2 = Ti.UI.createWindow({      title: 'Window 2'  });  var tab2 = Ti.UI.createTab({      title: 'Tab 2',      window: window2  });    tabGroup.addTab(tab1);  tabGroup.addTab(tab2);    tabGroup.addEventListener('open', doStuff);    tabGroup.open();    // below is test code to reproduce the issue  function doStuff() {      Ti.API.info('START!');      var secondWindow = Ti.UI.createWindow({          tabBarHidden: true,          title: 2nd window no tabbar      });        var modalWindow = Ti.UI.createWindow();      var nav = Ti.UI.iOS.createNavigationWindow({          window: modalWindow      });        setTimeout(function() {          // open tabbarhidden window in tabgroup          tab1.openWindow(secondWindow);            setTimeout(function() {              // open modal              nav.open({                  modal: true              });                setTimeout(function() {                  // close tabbarhidden window in tabgroup while modal is open                  secondWindow.close();                    setTimeout(function() {                      // close modal window, now tabbar is gone                      nav.close();                  }, 1000);              }, 1000);          }, 1000);      }, 2500);  }  {code}",Bug,High,Closed,"2018-04-04 09:38:16","2018-04-04 09:38:16",1
"The Titanium SDK ","iOS: Move SDK-core to own framework","In order to do TIMOB-17887, native Swift modules need classes to be in an own framework instead of referencing them from the hard drive like we now do (pretty hacky btw). The plan is to place this framework in titanium_mobile and compile from there (making use of Jenkins as well).    This requires some critical operations:  * Move classes to own framework (done)  * Migrate compiler statements to some kind of shared config (done)  * Change CLI to compile and link new framework with the main target  ",Story,High,Closed,"2018-04-04 08:51:26","2018-04-04 08:51:26",42
"The Titanium SDK ","Windows: More options for Logo / Splash Screen","The package manifest's [VisualElements|https://docs.microsoft.com/en-us/uwp/schemas/appxpackage/appxmanifestschema2013/element-visualelements] supports more options for visual elements such as wide asset in {{DefaultTile}} with scales. Titanium supports few of them. Titanium should be able to provide more flexible way to specify them in any way. See also  [tile and icon assets|https://docs.microsoft.com/en-us/windows/uwp/design/shell/tiles-and-notifications/app-assets#asset-size-tables].  ","New Feature",High,Closed,"2018-04-02 08:13:30","2018-04-02 08:13:30",13
"The Titanium SDK ","Android: Build fails if SDK with JDK 9/10 fix is not selected in CLI & tiapp.xml (only if ran from CLI)","I am not sure if this is an issue or its just to be like this due to the architecture of CLI & SDK.  What I am seeing is if I do not have an SDK with the new JDK 9/10 detection fix in both the CLI & tiapp.xml the build fails.     h5.Steps to reproduce:  *A. SDK with jdk 9/10 fix selected in the CLI & 7.1.0.GA in tiapp.xml:*  1. Make sure you have CLI core 7.0.3-master.24 installed which has the jdk  9/10 fix.  2. Create an app with SDK 7.1.0.GA (this will have sdk 7.1.0.GA in the tiapp.xml).  3. Make sure you have the SDK with the jdk 9/10 selected in the CLI.  4. Build for android.  5. Build fails with:      *B. 7.1.0.GA in selected in CLI & SDK with jdk 9/10 fix in the tiapp.xml:*  1. Make sure you have CLI core 7.0.3-master.24 installed which has the jdk  9/10 fix.  2. Select 7.1.0.GA in CLI & have sdk with jdk9/10 fix in tiapp.xml.  3. Build for android.  4. Build fails with:      Expected result:  For A : Probably fail  For B : Probably should not fail with JDK not found error.",Bug,None,Closed,"2018-03-30 19:00:50","2018-03-30 19:00:50",2
"The Titanium SDK ","Android: OptionDialog not firing click event for cancel button like iOS","h5. Issue:   Customer is having and issue with the ClickEvent of a Ti.UI.OptionDialog in Android. If 'cancel' property is set to an index, clicking that cancel option or clicking outside the dialog doesn't fire the dialog's 'click' event. This is the behavior in SDK 7.1.0.GA whereas it is working fine in SDK 6.2.2.GA.     h5: App:   [^TestInputDialog.zip]     h5. Steps to reproduce:   1. Run the attached project - TestInputDialog in Android.   2. Click on 'Hello World' text. OptionDialog will be displayed.   3. Click on 'Cancel' option in the dialog. Log statement in the dialog's corresponding click event handler will not be displayed in console.   4. Dismiss dialog by clicking outside the dialog. Click event of the dialog will not be triggered   4. Remove 'cancel' property in the dialog options while creating it(line 8 in index.js) and repeat the above steps.   5. Clicking the 'Cancel' option or anywhere outside the dialog will print the log statement. ",Bug,Medium,Closed,"2018-03-30 18:36:09","2018-03-30 18:36:09",2
"The Titanium SDK ","Android: Allow picker minDate/maxDate properties to be set dynamically","On iOS it is possible to change the minDate/maxDate on runtime, on Android this is not possible due to TiSDK constraint in the code.     Test code    {code:js}  var win = Ti.UI.createWindow({      title: 'Form',  });    /*  // working  var dp = Ti.UI.createPicker({     type: Ti.UI.PICKER_TYPE_DATE,     minDate: new Date(2018,1,1)  });  */    var dp = Ti.UI.createPicker({     type: Ti.UI.PICKER_TYPE_DATE  });    // not working  dp.setMinDate(new Date(2018,1,1));    win.add(dp);  dp.showDatePickerDialog();  win.open();  {code}    *Observed Behaviour:*  Setting minDate on creation works, adjusting it after doesn't    *Expected behaviour*:   On Android setting minDate/maxDate on runtime (after creation) should work as it does on iOS.    *Community Credit*:  <USER>for finding the issue, <USER>for helping locating the problem/creating test code.",Improvement,Medium,Closed,"2018-03-30 13:15:35","2018-03-30 13:15:35",3
"The Titanium SDK ","Windows: ReferenceError: __ is not defined when building a module where the apiversion does not match","h5.Description    When there is an apiversion mismatch between the SDK and a module then the CLI will error with the below        h5.Steps to reproduce    1. Create a windows module or download an existing one like ti.paint  2. Change the apiversion in the manifest file  3. Build the module using {{ti build -p windows --build-only}}    h5.Actual    Build errors with the above    h5.Expected    Build should not error",Bug,None,Closed,"2018-03-29 14:10:06","2018-03-29 14:10:06",1
"The Titanium SDK ","Android: Build fails for android with java.time.DateTimeException with java 9.0.4 & crittercism","h5.Steps to reproduce:  1. Build an android app with SDK having fix for java 9 support.    h5.Actual results:  1. The build will fail with error:      h5.Expected result:  1. The build should be successful.  ",Bug,None,Closed,"2018-03-28 23:12:57","2018-03-28 23:12:57",5
"The Titanium SDK ","Android : Return event of TextField with Ti.UI.RETURNKEY_SEARCH returnKeyType  is not working 7.1.0.GA ","Hi,  We are having issues with return event of TextField in SDK 7.1.0.GA in Android. If the returnKeyType of the TextField is Ti.UI.RETURNKEY_SEARCH, return even is not being triggered. Whereas if the returnKeyType is removed, it is working as expected.  This was working in SDK 6.2.2.GA but not in 7.1.0.GA.    Steps to reproduce:  1. Run the attached project - TestTextField in Android.  2. Click on the TextField in the screen and keyboard will appear.  3. Tap on the search button in the keyboard. Log message in its 'return' event will not be printed in console.  4. Repeat the above steps after removing returnType of the TextField. Log message('return clicked') will be printed in console    PFA the environment details - tiInfo.rtf  Please let us know if any additional information is required.    Thanks,",Bug,None,Closed,"2018-03-28 14:24:55","2018-03-28 14:24:55",0
"The Titanium SDK ","Android: Memory leak when using TextFields in TableView rows","h6.Reproduce steps  1. Run the attached simple Alloy app. (Just an Alloy project that opens a modal window which has a TableView with rows containing Textfields. )  2. Click the Open Window   3. Hit the Android back button to dismiss the window with the tableview textfield rows   4. Repeat steps 2 & 3 repeatedly until you start seeing messages such as the following:     Attached screenshot for that as well.",Bug,None,Closed,"2018-03-28 11:48:07","2018-03-28 11:48:07",5
"The Titanium SDK ","iOS: Getting security alert screen","While launching the application we have seen the security alert (see the attached screenshot).   Explanation of this issue on chat from <USER>team is:  if we added the jail-broke property in tiapp then this app will not work on rooted device and you will see this error. But we are running the app on the same device and this is not observed again an again.     Please let us know the other scenario's in which this issue may occur.  What steps we need to take to get it resolved? ",Bug,Critical,Closed,"2018-03-28 07:42:39","2018-03-28 07:42:39",1
"The Titanium SDK ","Windows: require/import with namespace for Hyperloop","{{require(package_name).class_name}} doesn't work for Hyperloop Windows.        This doesn't work because Hyperloop Windows {{require}} needs _fully qualified class name or enum_ and require against package name is not implemented.  ","New Feature",Medium,Closed,"2018-03-28 06:21:26","2018-03-28 06:21:26",13
"The Titanium SDK ","Hyperloop: lib file failed to leave a valid exports object","With the following files: https://gist.github.com/Topener/3a446122e6807732320aed7268395b43    I get the error         Error doesn't occur when using Hyperloop 3.0.3 with TiSDK 7.2.0",Bug,Critical,Closed,"2018-03-26 11:26:12","2018-03-26 11:26:12",0
"The Titanium SDK ","iOS: Ti.UI.iOS.Stepper handles value boundaries incorrect ","We handle allowed values for our Stepper UI element with:  {code:objc}    if (newValue < [[self stepper] maximumValue] && newValue > [[self stepper] minimumValue]) {      [[self stepper] setValue:newValue];    } else {      NSNumber *currentValue = [NSNumber numberWithDouble:[[self stepper] value]];      [self.proxy replaceValue:currentValue forKey:@value notification:NO];      NSLog(@[WARN] The value passed in must be smaller than the maximum and bigger than the minimum stepper values);    }  {code}  Which is wrong. It should be newValue <= maximum && newValue >= minimum.",Bug,Medium,Closed,"2018-03-23 12:41:07","2018-03-23 12:41:07",2
"The Titanium SDK ","Android: Add Kotlin language support for modules","*Summary:*  Titanium currently cannot build modules containing {{*.kt}} kotlin language files. We would like to add support for this language in the future.    *Note:*  This can easily be implemented once Titanium supports building with gradle.  https://developer.android.com/kotlin/add-kotlin  ","New Feature",Medium,Closed,"2018-03-22 21:53:01","2018-03-22 21:53:01",5
"The Titanium SDK ","Windows: Rename HAL","Apparently Microsoft starts rejecting our {{HAL.DLL}} in WACK (Windows Apps Certification Kit) just because Windows system has {{HAL.DLL}} in system library. We need to rename it in order to pass the cert.      ",Improvement,High,Closed,"2018-03-22 12:30:37","2018-03-22 12:30:37",8
"The Titanium SDK ","Create Github Issue template","We decided to reopen the Issues tab as part of opening more to the community. While it is still in an experimental phase and we need to see if developer actually use it properly (mainly no SPAM, no duplicates), we also need to add a template like we do for pull requests to force a certain structure. [Here|https://github.com/stevemao/github-issue-templates] are a few cool ones for inspiration",Story,High,Resolved,"2018-03-21 17:47:46","2018-03-21 17:47:46",5
"The Titanium SDK ","Windows: Use of deprecated methods in Ti.Media","{{Ti.Media}} uses some deprecated methods that causes compile time warning {{C4973}}.    ",Story,Medium,Closed,"2018-03-21 05:57:30","2018-03-21 05:57:30",13
"The Titanium SDK ","Windows: Support Hyperloop ES6","ES6 {{import}} doesn't work for Hyperloop Windows because Hyperloop scans {{require}} and generates glue code _before transpile ({{import}} to {{require}}) runs_ at compile time.    ","New Feature",High,Closed,"2018-03-21 02:04:04","2018-03-21 02:04:04",8
"The Titanium SDK ","Android: Emulator builds should not add additional permissions","*Summary:*  When building with deployment type development (ie: for the Android emulator), the Titanium build system adds the following permissions to the AndroidManifest.xml file, even if they're not defined in the tiapp.xml file.  * {{android.permission.ACCESS_COARSE_LOCATION}}  * {{android.permission.ACCESS_FINE_LOCATION}}  * {{android.permission.ACCESS_MOCK_LOCATION}}    The above behavior was intentional and was intended for fast incremental builds with LiveView and the emulator. However, this behavior has been known to cause confusion.    *To-Do:*  In Titanium 9.0.0, we should remove the above behavior. The build system should produce a consistent AndroidManifest.xml for all deployment types (ie: test, development, and production).    *Note:*  Titanium should still include its default permissions listed below.  * {{android.permission.INTERNET}}  * {{android.permission.ACCESS_WIFI_STATE}}  * {{android.permission.ACCESS_NETWORK_STATE}}  * {{android.permission.WRITE_EXTERNAL_STORAGE}}    If you don't want the above default permissions injected, then you can set the following in your tiapp.xml file to override this behavior.    ",Improvement,Medium,Closed,"2018-03-20 16:35:17","2018-03-20 16:35:17",5
"The Titanium SDK ","Android: Ti.Geolocation - Exception when calling Ti.Geolocation.hasLocationPermissions()","h5. Issue  Customer's app has an android service to get location data in the background. It is encountering an exception when it calls Ti.Geolocation.hasLocationPermissions():     They are receiving the following error:  {quote}03-19 08:43:48.855 2764 2764 E TiApplication: (main) [6,1875] No valid root or current activity found for application instance   03-19 08:43:48.855 2764 2764 E KrollProxy: (main) [0,1875] Error creating proxy   03-19 08:43:48.855 2764 2764 E KrollProxy: java.lang.NullPointerException: Attempt to invoke virtual method 'android.content.pm.PackageManager android.content.Context.getPackageManager()' on a null object reference   03-19 08:43:48.855 2764 2764 E KrollProxy: at com.google.android.gms.common.zzo.isGooglePlayServicesAvailable(Unknown Source:4)   03-19 08:43:48.855 2764 2764 E KrollProxy: at com.google.android.gms.common.zze.isGooglePlayServicesAvailable(Unknown Source:0)   03-19 08:43:48.855 2764 2764 E KrollProxy: at com.google.android.gms.common.GoogleApiAvailability.isGooglePlayServicesAvailable(Unknown Source:0)   03-19 08:43:48.855 2764 2764 E KrollProxy: at ti.modules.titanium.geolocation.android.FusedLocationProvider$PlayServices.available(FusedLocationProvider.java:184)   03-19 08:43:48.855 2764 2764 E KrollProxy: at ti.modules.titanium.geolocation.android.FusedLocationProvider.hasPlayServices(FusedLocationProvider.java:80)   03-19 08:43:48.855 2764 2764 E KrollProxy: at ti.modules.titanium.geolocation.android.FusedLocationProvider.<init>(FusedLocationProvider.java:61)   03-19 08:43:48.855 2764 2764 E KrollProxy: at ti.modules.titanium.geolocation.GeolocationModule.<init>(GeolocationModule.java:219)   03-19 08:43:48.855 2764 2764 E KrollProxy: at java.lang.Class.newInstance(Native Method)   03-19 08:43:48.855 2764 2764 E KrollProxy: at org.<USER>kroll.KrollProxy.createProxy(KrollProxy.java:137)   03-19 08:43:48.855 2764 2764 E KrollProxy: at org.<USER>kroll.runtime.v8.V8Runtime.nativeRunModule(Native Method)   03-19 08:43:48.855 2764 2764 E KrollProxy: at org.<USER>kroll.runtime.v8.V8Runtime.doRunModule(V8Runtime.java:187)   03-19 08:43:48.855 2764 2764 E KrollProxy: at org.<USER>kroll.KrollRuntime.handleMessage(KrollRuntime.java:325)   03-19 08:43:48.855 2764 2764 E KrollProxy: at android.os.Handler.dispatchMessage(Handler.java:102)   03-19 08:43:48.855 2764 2764 E KrollProxy: at android.os.Looper.loop(Looper.java:164)   03-19 08:43:48.855 2764 2764 E KrollProxy: at android.app.ActivityThread.main(ActivityThread.java:6494)   03-19 08:43:48.855 2764 2764 E KrollProxy: at java.lang.reflect.Method.invoke(Native Method)   03-19 08:43:48.855 2764 2764 E KrollProxy: at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)   03-19 08:43:48.855 2764 2764 E KrollProxy: at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)   03-19 08:43:48.855 2764 2764 E JavaObject: !!! OH NO! We tried to grab a Java Object back out of the reference table, but it must have been GC'd, because it's null! Key: 15   03-19 08:43:48.855 2764 2764 I TiAPI : We do not have location permissions. Exiting. {quote}    The exception does not seem to make the service crash, but it doesn't think that it has location permissions (which it definitely does). So they are not getting any location data.     h5. Code to create Android service:       h5. Service Code:   Uses a module to do all the location detection and updating with the back-end service provider.      h5. Additional information   - issue not in SDK 7.0.2   - the WxAlertSubscriptionUpdater module is shared by the app and the service; the app doesn't have this problem when it talks to the Geolocation module   - They have been unable to replicate this problem with a minimal test app; it's possible that a test app is too small to make garbage collection happen? ",Bug,Critical,Closed,"2018-03-19 22:18:41","2018-03-19 22:18:41",3
"The Titanium SDK ","Android: Improve Ti.App._restart() performance","Currently, we use an Intent to re-launch our Titanium application when {{Ti.App._restart()}} is invoked. This isn't the best solution as it results in re-launching the application.    Instead, we can terminate all existing acivities and restart the KrollRuntime to reset the Javascript context to a clean state.",Improvement,Medium,Resolved,"2018-03-19 22:05:34","2018-03-19 22:05:34",5
"The Titanium SDK ","Android: return event is received twice from Symbol TC55/TC70 scanner","Using the scanner of Symbol TC55/TC70 to send return event results in receiving it twice.",Bug,Critical,Closed,"2018-03-19 16:00:45","2018-03-19 16:00:45",8
"The Titanium SDK ","Windows: Implement WebView.blacklistedURLs","{{WebView.blacklistedURLs}} property is missing as well as {{blacklisturl}} event. ","New Feature",Medium,Closed,"2018-03-19 07:00:26","2018-03-19 07:00:26",5
"The Titanium SDK ","Hyperloop: Logs should show the actual native class, not HyperloopClass, debug logs should be hidden","A few things:  - We should use proper class description for native classes. This is mainly for the developer experience, because all classes are logged as HyperloopClass right now, instead of printing the actual class behind the wrapper. This PR will replace {{<HyperloopClass: 0x608000072c80>}} with {{<NSMutableArray: 0x608000072c80>}}  - Internal logs should be removed from public log level, e.g. {{\[HYPERLOOP\] didStartNewContext <KrollContext: 0x608000074140>}}. They do not have any value for a Titanium developer",Improvement,Low,Resolved,"2018-03-18 21:12:28","2018-03-18 21:12:28",5
"The Titanium SDK ","iOS: Create modules in dist directory (Parity with Android)","This is all about parity and developer experience: Currently, iOS modules are created in the module root. Android uses the dist directory, which is better for separating it from the actual source code and module configuration.",Improvement,Low,Closed,"2018-03-18 17:48:07","2018-03-18 17:48:07",0
"The Titanium SDK ","Android: Modify Ti.Platform.architecture to provide consistent results like iOS","*Summary:*  Currently, the {{Ti.Platform.architecture}} property on Android is difficult to use compared to iOS and Windows. It commonly fails to identify the device's architecture by returning Unknown or returns a difficult to parse string containing version and revision numbers appended to it.    Below is a list of all architecture strings that has been reported to our analytics system:  {code}  'Unknown'  'ARMv7 Processor rev 0 (v7l)'  'ARMv7 Processor rev 4 (v7l)'  'AArch64 Processor rev 4 (aarch64)'  'ARMv7 Processor rev 3 (v7l)'  'AArch64 Processor rev 1 (aarch64)'  'ARMv7 Processor rev 5 (v7l)'  'AArch64 Processor rev 2 (aarch64)'  'AArch64 Processor rev 3 (aarch64)'  'AArch64 Processor rev 0 (aarch64)'  'ARMv7 Processor rev 1 (v7l)'  'ARMv7 Processor rev 2 (v7l)'  'ARMv8 Processor rev 2 (v8l)'  'ARMv7 Processor rev 8 (v7l)'  'ARMv7 Processor rev 10 (v7l)'  'ARMv7 Processor rev 9 (v7l)'  'ARMv7 processor rev 4 (v7l)'  '64-bit ARMv8 Processor rev 0 (v7l)'  'AArch64 Processor rev 13 (aarch64)'  'ARMv7 processor rev 1 (v7l)'  'sc7731 rev 5 (v7l)'  '64-bit ARMv8 Processor rev 1 (v7l)'  'NVIDIA Denver 1.0 rev 0 (aarch64)'  'MT6732 rev 2 (v7l)'  'AArch64 Processor rev 12 (aarch64)'  'ARMv6-compatible processor rev 5 (v6l)'  '6591 rev 4 (v7l)processor'  'ARMv7'  'mtk6580L rev 5 (v7l)'  'ARMv8 Processor rev 4 (aarch64)'  'Qualcomm Snapdragon 800'  'UNIVERSAL5410'  'ARMv7 Processor rev 12 (v7l)'  'MT6592 2.0GHZ (Octa-Core) rev 5 (v7l)'  'ARMv7 Processor rev 3 srev 0x23 (v7l)'  'MTK6580 rev 5 (v7l)'  'ARMv7 Processor rev 2 srev 0x23 (v7l)'  'ARMv7 Processor rev 6 (v7l)'  'S805'  'ARMv8 processor rev 1 (aarch64)'  'UNKNOWN rev 0 (UNKNOWN)'  'ARMv7 Processor'  'Quad-Core ARMv7 Processor'  'ARMv8 Processor rev 5 (v7l)'  'S905'  'ARMv7 Processor rev 5 rev 5 (v7l)'  'ARMv7 processor (v7l)'  'Quadcore Cortex-A71.2GHz rev 5 (v7l)'  'arm'  'MT6592 2.0GHZ rev 5 (v7l)'  {code}    I've tested the following devices and they return the following:  ||Device Name||Returned Architecture String||  |Emulator|Unknown|  |Pixel XL|Unknown|  |Galaxy Tab 3|Unknown|  |Galaxy Nexus|ARMv7 Processor rev 10 (v7l)|  |Galaxy Note 2|ARMv7 Processor rev 0 (v7l)|  |Nexus 4|ARMv7 Processor rev 2 (v7l)|  |Nexus 5|ARMv7 Processor rev 0 (v7l)|  |Nexus 10|ARMv7 Processor rev 4 (v7l)|  |Pixel 2|AArch64 Processor rev 1 (aarch64)|  |Amazon Fire HD 8 (7th gen)|AArch64 Processor rev 3 (aarch64)|    Note that Unknown is the most commonly reported architecture name in our analytics system. Odds are most of these are coming from Google's Android emulator.    *Cause:*  The {{Ti.Platform.architecture}} property uses our APS library to fetch the architecture name, which attempts to fetch this string from a system file named cpuinfo. This is an undocumented feature that we should avoid. Especially since it's proven to be unreliable and causes Unknown to be returned.  [APSAnalyticsHelper.java#L339|https://github.com/<USER>aps_sdk/blob/195633dd10a37d96ecf52be35c0c712dff5ef331/android/analytics/APSAnalytics/src/main/java/com/<USER>aps/APSAnalyticsHelper.java#L339]    *Recommended Solution:*  The APS library's {{getArchitecture()}} method should be changed to fetch architecture via Google's {{android.os.Build}} class using its {{Build.SUPPORTED_ABIS}} and {{Build.CPU_ABI}} constants.  https://developer.android.com/reference/android/os/Build.html    I've tested the above constants on real Android devices and in the emulator. The above always return strings matching the APK's lib folder architecture subfolder names, where the {{*.so}} C/C++ libraries are kept. With the only exception being with the x86_64 being returned by the emulator. For example:  * armeabi-v7a  * arm64-v8a  * x86  * x86_64    *Ideal Solution:*  Android should ideally return the same architecture string types that iOS does. This would make it easier to work with from a portability standpoint. It would also make it easier from an analytics standpoint to identify popular architectures between platforms.    iOS fetches CPU architecture from the APS library here...  [APSUtility.m#L24|https://github.com/<USER>aps_sdk/blob/195633dd10a37d96ecf52be35c0c712dff5ef331/ios/support/analytics/APSAnalytics/APSUtility.m#L24]    iOS currently returns the following hardcoded strings:  * x86_64  * arm  * armv6  * armv7  * armv7s  * arm64  * i386    *Work-Around:*  You can use hyperloop to fetch the architecture using the above mentioned Java Build class constants.  {code:javascript}  // WARNING: You must add hyperloop module to the project for the below to work.  var buildClass = require(android.os.Build);  if (Ti.Platform.Android.API_LEVEL >= 21) {   Ti.API.info(@@@ Build.SUPPORTED_ABIS[0]:  + buildClass.SUPPORTED_ABIS[0]);  } else {   Ti.API.info(@@@ Build.CPU_ABI:  + buildClass.CPU_ABI);  }  {code}  ",Improvement,High,Closed,"2018-03-17 04:13:24","2018-03-17 04:13:24",2
"The Titanium SDK ","Android: Ti.Platform.ostype wrongly returns 32bit on a 64-bit OS","*Summary:*  The {{Ti.Platform.ostype}} property is currently hardcoded to return 32bit on Android.  [APSAnalyticcsHelper.java#L235|https://github.com/<USER>aps_sdk/blob/195633dd10a37d96ecf52be35c0c712dff5ef331/android/analytics/APSAnalytics/src/main/java/com/<USER>aps/APSAnalyticsHelper.java#L235]    Now that Titanium supports building Android apps for ARM64, it should return 64bit when running on a 64-bit Android device like how it works for iOS here...  [APSUtility.m#L15|https://github.com/<USER>aps_sdk/blob/195633dd10a37d96ecf52be35c0c712dff5ef331/ios/support/analytics/APSAnalytics/APSUtility.m#L15]    *Steps to Reproduce:*  # Build an run the below code on a 64-bit Android device, such as a Pixel XL phone.  # Observe the log for an ostype: entry.        *Note:*  We had to do something similar for iOS as can be seen here: [TIMOB-18193]    *Recommended Solution:*  Check if array returned by {{android.os.Build.SUPPORTED_64_BIT_ABIS}} contains at least 1 element.  https://developer.android.com/reference/android/os/Build.html#SUPPORTED_64_BIT_ABIS    Note that Google added 64-bit support as of Android 5.0 (aka: API Level 21). So, you can't use Google's {{Process.is64Bit()}} method since it is only supported on Android 6.0 and higher.  https://developer.android.com/reference/android/os/Process.html#is64Bit()  ",Bug,Medium,Closed,"2018-03-17 02:48:29","2018-03-17 02:48:29",2
"The Titanium SDK ","Windows: Support '@' character in node_modules","- Including {{@babel}} with Titanium Windows projects will cause compilation errors due to the unsupported {{@}} character",Bug,High,Closed,"2018-03-16 23:42:02","2018-03-16 23:42:02",3
"The Titanium SDK ","Android: Babel rewrites app.js in classic project to generated ES5 code","I noticed that Babel rewrites ES6 code in the app.js of classic projects to ES5 code (by using the generated code). It was noticed while moving [ti.mapbox to ES6|https://github.com/hyperloop-modules/ti.mapbox/pull/2].",Bug,High,Closed,"2018-03-16 16:29:27","2018-03-16 16:29:27",13
"The Titanium SDK ","iOS 11.2: Ti.UI.RefreshControl with Ti.UI.Window.largeTitleEnabled hides spinner","Hi,  I have created a simple navigationWindow in Alloy.  The Window has {{largeTitleEnabled: true}}, inside the window I have a simple listView with a refreshControl.  When I run a Pull to Refresh the spinner is hidden by large-title.  ",Bug,Critical,Closed,"2018-03-15 18:37:12","2018-03-15 18:37:12",8
"The Titanium SDK ","Android: Intent - getData(), getAction() always equal to null ","*Issue:*  When I use the deep link for my project and try to access the Ti.Android.currentActivity.getIntent().getData() it always returns null for Ti SDK 6.2.0 and above but If I downgrade the SDK to 6.1.2 then it works fine. It cannot read data from incoming intents.      *Steps to Reproduce*  1. Create a new alloy App and use the following test code  2. Install the app on any android device.   2. Goto the browser and browse to https://uktvplay.uktv.co.uk site.   3. Click on any episodes   4. It will open up the app but getData() is always null but it should return a URL    *Test code:*  - https://gist.github.com/MotiurRahman/ca8cd6c8b2745c870836602dfb6875fe    *Expected Result:* It should return the URL when the App is opened from the deep link.    Thanks!",Bug,High,Closed,"2018-03-16 03:16:50","2018-03-16 03:16:50",2
"The Titanium SDK ","iOS: Log-server-port Build Error Masks Real Error","*Description*    When building an iOS app and there is an issue connecting to the iOS log-server, it always output Another <USER>is currently bound to port xxxxx even if there is another server connection issue such as the port not existing.    *Workaround*    Figure out the real issue by logging the actual error within the sdk itself (at ~/Library/Application Support/Titanium/mobilesdk/osx/7.0.2.GA/iphone/cli/commands/_build.js in the determineLogServerPort function).    *Steps to Reproduce*    1. Create a different type of error with the server. For example, my /etc/hosts file did not have an entry for 127.0.0.1 localhost, so the actual node error was 'ENOTFOUND'.  2. Create a new titanium app with `appc ti new`.  3. Build with appc ti build -p ios    *Actual Result*    Build errors out with following text:      *Expected Result*    More detailed error. I.E. Something like:      Followed by suggested solution. For example if the node error was EADDRINUSE, then you could still use the existing error message. But if it's another error, log accordingly so the user has the best information for solving the issue.",Bug,Critical,Closed,"2018-02-22 15:49:05","2018-02-22 15:49:05",8
"The Titanium SDK ","iOS: Add ability to hide back button on NavigationWindow","Natively it is possible to hide the backButton programatically using the hidesBackButton attribute. This is discussed in this StackOverflow question: https://stackoverflow.com/questions/614212/how-to-hide-back-button-on-navigation-bar-on-iphone    We should consider using this property when the user wants to hide the button. ",Improvement,Medium,Closed,"2018-03-15 11:08:16","2018-03-15 11:08:16",0
"The Titanium SDK ","Windows: Implement WebView.onlink callback","h5. description  Costumer is attempting to load a pdf for android using intents with webview.   in the mobile app they are using webview control for displaying the remote web site by binding a URL. The web pages in the web site contains few pdf links. On click of normal hyperlinks, respective web page is being shown in the web view. Whereas, on tapping a pdf links, a blank window is getting opened in Android devices. In iOS it’s working fine and a PDF is showing.    Per Jira WebView cannot disply PDF documents on Android. So they are using intents as a workaround to open the PDF link. The issue is that on click of the pdf link in the web view, they are unable to get the exact PDF url with any of Titanium WebView API methods or events    The customer was able to do it natively and open the PDF's with intents.     h5. Request  The customer wants to know how to get the exact PDF link using the webview API or if there is a workaround they could use.    h5. additional information   attached are two apps. One is a titanium app and one is an android native application.  [titanium app|https://axwaysoftware-my.sharepoint.com/personal/<USER>axway_com/_layouts/15/guestaccess.aspx?guestaccesstoken=rsxSxfm51VH5t8MRm7YpDX1bHDfJfDfaycmtpKrlAEE%3d&docid=2_11a957eab95234b6ab84003e12f7b0b41&rev=1]","New Feature",Medium,Closed,"2018-03-14 23:34:18","2018-03-14 23:34:18",3
"The Titanium SDK ","Android: Build warning appears when Android build-tools v27 or higher is installed","*Summary:*  In the Android SDK, if you install build-tools version 27.0.0 or higher and then do an Android build via Titanium, then the following warning message will be logged...        Android build-tools 27.x.x so far appears to work fine with Titanium builds. So, this warning is harmless for now. But in the future, Google could make breaking changes to their build-tools and we need to protect against this to help future proof our build system.    *Test:*  # Open Google's Android SDK Manager.  # Make sure the newest 26.x.x build-tools version is installed.  # Make sure the newest 27.x.x build-tools version is installed.  # Do a Titanium Android build.  # Observe the log for the above mentioned warning.    *Cause:*  Titanium currently only supports build-tools version 26.x.x as defined by our package.json here...  https://github.com/<USER>titanium_mobile/blob/master/android/package.json#L25    But the CLI ignores this setting and always uses the newest build-tools version available in the Android SDK instead of using the preferred version defined by our package.json. This is because the linked code below will return a {{maybe}} string instead of {{true}} for a version higher than supported version, but it still evaluates as a positive in the {{if}} condition...  https://github.com/<USER>node-titanium-sdk/blob/master/lib/android.js#L768    *Recommended Solution:*  CLI should be changed to favor the build-tools version defined in the package.json. A newer version outside of this range should only be selected if no preferred version is installed, in which case, the build-tools warning is desired.    We should not make this change until after updating Titanium's package.json to support build-tools 27.x.x. This is to avoid a possible breaking change with developers who only have 27.x.x installed. _(Shouldn't cause an issue, but better safe than sorry.)_  ",Improvement,Medium,Closed,"2018-03-14 02:43:13","2018-03-14 02:43:13",3
"The Titanium SDK ","Android: Notifications should use default channel on Android 8 if not assigned","*Summary:*  If an Android app targets API Level 26 or higher, notifications will fail to be posted to the status bar on Android 8.0 or higher unless they're assigned a notification channel as documented here...  https://docs.<USER>com/platform/latest/#!/api/Titanium.Android.NotificationChannel    We should modify notifications to auto-assign them the default notification channel if a channel was not already assigned by the developer. This way, when we modify Titanium to auto-target API Level 26 in the future (see ticket: [TIMOB-25852]), notifications will still work. Avoids a breaking change.    Note that if the app targets API Level 25 or lower, Android 8 will auto-assign the notification the default channel for us.    *Test:*  # Set up tiapp.xml to target API Level 26 as shown below.  # Build and run the below code on an Android 8 device.  # Tap on the Send Notification button.  # Verify that the notification was posted to the status bar.    {code:xml}  <ti:app>      <android xmlns:android=http://schemas.android.com/apk/res/android>          <manifest>        <uses-sdk android:minSdkVersion=16 android:targetSdkVersion=26/>          </manifest>      </android>  </ti:app>  {code}    {code:javascript}  var notificationId = 0;  var window = Ti.UI.createWindow();  var button = Ti.UI.createButton({ title: Send Notification });  button.addEventListener(click, function(e) {   var notification = Ti.Android.createNotification(   {    contentTitle: Content Title,    contentText: Content Text,    contentIntent: Ti.Android.createPendingIntent(    {     intent: Ti.Android.createIntent({}),    }),   });   notificationId++;   Ti.Android.NotificationManager.notify(notificationId, notification);  });  window.add(button);  window.open();  {code}    *Recommended Solution:*  This should be implemented similar to the following aps_sdk library's PR here...  https://github.com/<USER>aps_sdk/pull/307    *Note:*  This is not an issue with our ti.cloudpush module. It already assigns a default channel to the received push notification.  ",Improvement,High,Closed,"2018-03-13 21:03:36","2018-03-13 21:03:36",1
"The Titanium SDK ","Liveview: Support transpiling user code ","h5.Description     We added babel transpilation in SDK 7.1.0 (TIMOB-24610), as liveview passes the code to the app we need to introduce a transpilation step there to ensure that the code works as expected. We can pull in node-titanium-sdk to implement this as the information we need to pass down to babel should be available in off the builder property","New Feature",High,Closed,"2018-03-13 10:32:55","2018-03-13 10:32:55",3
"The Titanium SDK ","Update Android Support libraries to 27.1.1","- Update Android Support libraries to version {{27.1.1}} https://developer.android.com/topic/libraries/support-library/revisions.html#27-1-1",Improvement,High,Closed,"2018-03-12 22:37:17","2018-03-12 22:37:17",8
"The Titanium SDK ","Android: Delay WebView Ti.App.fireEvent() to be fired after page load","*Summary:*  The JavaScript within a WebView's HTML can call {{Ti.App.fireEvent()}} to communicate with the Titanium JavaScript side. It currently fires events immediately. The problem with this is if the listener immediately calls {{WebView.evalJS()}} to communicate back, it'll always timeout on Android if the web page hasn't finished loading yet and the Titanium runtime runs on the main UI thread (the default). This makes it less convenient to use.    *Steps to Reproduce:*  # Build and run attached [^WebViewInteropTest.js] on Android.  # Observe the Android log.    *Result:*  An {{Timeout waiting to evaluate JS}} warning message appears in the log.    *Expected Result:*  The {{evalJS()}} calls should succeed. A countdown message Reload in: X should appear in the web page, starting from 5. When it counts down to zero, the page should reload.    *Cause:*  The {{WebView.evalJS()}} call will not work until the load event has been received from the WebView. This is because Titanium injects a polling script into the web page in the {{WebViewClient.onPageFinished()}} call...  https://github.com/<USER>titanium_mobile/blob/master/android/modules/ui/src/java/ti/modules/titanium/ui/widget/webview/TiWebViewClient.java#L45    This polling script is responsible for fetching/evaluating the script added to the stack by the {{evalJS()}} call...  https://github.com/<USER>titanium_mobile/blob/master/android/modules/ui/src/java/ti/modules/titanium/ui/widget/webview/TiWebViewBinding.java#L151    Since {{evalJS()}} is getting called before the web page has finished loading, the {{evalJS()}} call will always fail with a timeout warning when the Titanium runtime runs on the main UI thread.    *Recommended Solution:*  Queue all {{Ti.App.fireEvent()}} calls made within the HTML and do not fire them until the page has finished loading.    *Work-Around:*  Use the new async version of {{WebView.evalJS()}} that was introduced into 7.5.0. It does not have this issue.  ",Improvement,Medium,Closed,"2018-03-12 21:31:53","2018-03-12 21:31:53",3
"The Titanium SDK ","iOS: Question on how to use trackSignificantLocationChange with background location update","Hello,     On iOS, when using Ti.Geolocation.trackSignificantLocationChange and dealing with background updates with args.launchOptionsLocationKey we are seeing an issue where after a background update has come in while the app was closed and the next launch of the app hangs on the splash screen. The app must be manually closed in order to get farther than the splash screen.     *Example Code:*  Example app attached.     *To reproduce:*   1. Install app on physical device and choose Always allow location permission.   2. Force close app with the test switcher   3. Move device until you get a background location update   4. Launch the app and observe the app hang on the launch screen",Story,None,Resolved,"2018-03-12 18:50:26","2018-03-12 18:50:26",3
"The Titanium SDK ","Android: Prevent stretching splash screen","Right now for splash screens on android we add an activity in front of the app that displays the image. However, this image is fixed in size and when a photo is to be used as a splash screen a 9-patch image is not a solution.    Instead, the image should not be stretching as was also asked on StackOverflow: https://stackoverflow.com/a/37616137/249710    The solution there is to change the activity with an ImageView and use the center-crop method. This will prevent stretching of the image.        *Expected Result*  The image should not stretch but center crop instead. This will prevent any stretching and will allow the user to use photos as splash screens.",Improvement,Medium,Open,"2018-03-12 10:58:31","2018-03-12 10:58:31",13
"The Titanium SDK ","TiAPI: Explain run-on-main-thread usage in tiapp.xml","Does somebody explain <property name=run-on-main-thread type=bool>true</property> real mean ?    That defult value is true but if I change value to false my app (especially android) working faster and not freeze.    My Project is Alloy Mobile App and shoul I use true? If I use false what problems can arise?",Story,Critical,Closed,"2018-03-10 16:24:29","2018-03-10 16:24:29",2
"The Titanium SDK ","Android: Add TextArea lines and maxLines support","Add the possibility to set the properties {{lines}} and {{maxLines}} at a TextField.  * https://developer.android.com/reference/android/widget/TextView.html#attr_android:lines  * https://developer.android.com/reference/android/widget/TextView.html#attr_android:maxLines    The TextField will start with the {{lines}} amount of lines and will be extended to {{maxLines}} when pressing the Return key.    ","New Feature",Critical,Closed,"2018-03-11 12:45:54","2018-03-11 12:45:54",3
"The Titanium SDK ","iOS: SearchBar doesn't show Bookmark button when set on creation in TableView","When showBookmark is set to true on creation of the searchbar and it is in a TableView, the bookmark button does not show.    *Steps to reproduce issue*  1. Create a new project with the below code  2. Run the project    *Expected Results*  The searchbar has the bookmark button shown    *Actual Results*  The searchbar does not have the bookmark button shown    *Notes*  The bookmark button can be toggled to show it, but the toggle has to be tapped twice, since it thinks it is being shown.  Also, if you just create a searchbar with showBookmark = true, then the button will show. Having the searchbar in the tableview does not show the bookmark button.    *Code*  Classic:  {code:js}  var win = Ti.UI.createWindow();    var searchBar = Titanium.UI.createSearchBar({      showBookmark: true  });    var table = Ti.UI.createTableView({      data: [{          title: Toggle Bookmark button      }],      search: searchBar  });    table.addEventListener('click', function(e){   searchBar.showBookmark = !searchBar.showBookmark;  });    win.add(table);  win.open();  {code}    Alloy:  index.xml  {code:xml}  <Alloy>    <Window>      <TableView>        <SearchBar id=search showBookmark=true/>        <TableViewRow onClick=toggle title=Toggle bookmark button/>      </TableView>    </Window>  </Alloy>  {code}    index.js:  {code:js}  function toggle() {   $.search.showBookmark = !$.search.showBookmark;  }    $.index.open();  {code}",Bug,High,Closed,"2018-03-08 20:48:57","2018-03-08 20:48:57",0
"The Titanium SDK ","Create hyperloop sample app for inclusion on the Studio dashboard","h4. Description  We need to enhance our sample app offerings. Hyperloop has specifically been requested.    Creating a cross-platform hyperloop sample will help with this effort.   ","New Feature",None,Open,"2018-03-07 19:35:31","2018-03-07 19:35:31",13
"The Titanium SDK ","iOS: Accessibility support for Dynamic Type","h5. Feature Request:  Trying to use the accessibility options in iOS: Specifically the option to use larger text (Dynamic Type) but the changes are not applied to the app.    Setting the font size to use sp as unit identifier for the font size which works on Android but not in iOS.   font: {   fontSize: '16sp'   }     In the fontSize documentation it says: iOS ignores any unit specifier after the size value.     when changing font size in accessibility options the alert dialogs have the font size change but nothing else.    Can we implement Dynamic Type support so that font size is also changed within the app? ","New Feature",High,Closed,"2018-03-07 17:28:02","2018-03-07 17:28:02",5
"The Titanium SDK ","Android: Non-production app builds with modules crash on startup if TLS 1.1 or higher is required for Internet access","Related to https://jira.<USER>org/browse/TIMOB-20579    When being connected to a hotspot network, without being logged in into the hotspot (and without having internet connection), I'm not able to open the app, I get following error log:    It's just a normal <USER>Titanium app, containing the ti.brightness module. That's might not be the issue, as the error stack shows that it goes wrong when performing network calls.    Android 7 on Samsung Galaxy S8    ",Bug,Critical,Closed,"2018-02-20 10:18:43","2018-02-20 10:18:43",13
"The Titanium SDK ","Android: Update splash screen and icon","- Update Androids splash screen and icon to match the newer assets on iOS",Improvement,Low,Closed,"2018-03-06 22:21:55","2018-03-06 22:21:55",5
"The Titanium SDK ","Android: 7.1.0.RC - Setting data in Ti.UI.TableView does not work as before","*This is a regression from 7.0.2 to 7.1.0*    I have tried 7.1.0.RC    It used to work properly in the past ...  {code:js}  tableData[2] = tableViewSection3;  tableView.data = tableData;      {code:js}  function createTableViewRow(e) {      var rowView = Titanium.UI.createTableViewRow({    height: 120   });      rowView.add(Titanium.UI.createLabel({    text:'Text',   }));      return rowView;  }    var win = Ti.UI.createWindow();    var tableData = [];    var tableView = Titanium.UI.createTableView({   separatorStyle:Ti.UI.TABLE_VIEW_SEPARATOR_STYLE_NONE  });     var tableViewSection1 = Ti.UI.createTableViewSection();  var tableViewSection2 = Ti.UI.createTableViewSection();  var tableViewSection3 = Ti.UI.createTableViewSection();    tableData.push(tableViewSection1);  tableData.push(tableViewSection2);  tableData.push(tableViewSection3);     tableView.data = tableData;     win.add(tableView);    var setData = function(e) {     tableViewSection3.add(createTableViewRow());   tableViewSection3.add(createTableViewRow());   tableViewSection3.add(createTableViewRow());      //tableView.updateSection(2, tableViewSection3);   tableData[2] = tableViewSection3;   tableView.data = tableData;      };    win.addEventListener('open', function(e) {   setData();  });    win.open();  {code}  ",Bug,Critical,Closed,"2018-03-06 11:57:19","2018-03-06 11:57:19",3
"The Titanium SDK ","iOS: Cannot remove Ti.App.iOS.handleurl event-listener","In my app Titanium.App.iOS.addEventListener(handleurl, iosHandleUrl) can successfully register an event listener for the handle url event. Titanium.App.iOS.addEventListener(handleurl, iosHandleUrl) fails to remove the event listener resulting in the iosHandleUrl function being called multiple times in my app, when redirected back to the app from the browser.    To reproduce this I've create a sample project with the following code in index.js        And added the following to the plist in tiapp.xml.    When I launch the app then open a browser and open handleurltest:// the expected behaviour is that redirected to app from URL should be logged once but the actual behaviour is that it's logged three times.    The app was built against version 6.3.0.GA of the SDK.",Bug,Critical,Closed,"2018-03-06 13:23:30","2018-03-06 13:23:30",5
"The Titanium SDK ","TiAPI: Touch event coordinate units do not match between platforms","*Summary:*  The (x,y) units provided by View event's touchstart, touchmove, touchend, and touchcancel do not match between Android and iOS. Both platforms ignore the ti.ui.defaultunit property setting in tiapp.xml.    On Android, the touch coordinates are always in px (ie: pixels).  On iOS, the touch coordinates are always in dip (aka: dp).    *Steps to Reproduce:*  # Build and run the below code on Android.  # Drag your finger in the gray view.  # Notice that the blue square does *not* correctly following your finger.  # Build and run on iOS.  # Drag your finger in the gray view.  # Notice that the blue square *correctly* follows your finger.  # Change tiapp.xml property ti.ui.defaultunit to px.  # Build and run on iOS.  # Drag your finger in the gray view.  # Notice that the blue square does *not* correctly following your finger.  # Build and run on Android.  # Drag your finger in the gray view.  # Notice that the blue square *correctly* follows your finger.        *Work-Around:*  The following will work-around this issue on both Android and iOS...        *Ideal Solution:*  Convert native touch coordinates to use ti.ui.defaultunit on both Android and iOS. This way views can easily be dragged since their x, y, and center properties already respect the ti.ui.defaultunit property.  Note that this would be a breaking change.  ",Bug,Medium,Closed,"2018-03-06 03:44:25","2018-03-06 03:44:25",8
"The Titanium SDK ","Android: Animation with border radius doesn't works properly","Affects to 7.0.2, 7.1.RC    Animating a view with border radius doesn't works properly. On iOS it works fine.    Check attached demo to see code example.  ",Bug,Critical,Closed,"2018-03-02 08:18:20","2018-03-02 08:18:20",8
"The Titanium SDK ","Android: Setting Ti.UI.SearchBar hintText property after creation causes a crash as of 7.0.0","*Summary:*  Assigning a string to {{Ti.UI.SearchBar}} property hintText after it has been created will cause a crash on Android as of Titanium 7.0.0.    *Steps to reproduce:*  # Build and run the below code on Android.  # Notice the app crashes on startup.        *Recommended Fix:*  When Titanium's TiUIText.java class reads property {{PROPERTY_HINT_TYPE}} via {{TiConvert.toInt()}}, the code needs to set the default value to {{UIModule.HINT_TYPE_STATIC}} in the following places in the code.  [TiUIText.java#L350|https://github.com/<USER>titanium_mobile/blob/master/android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUIText.java#L350]  [TiUIText.java#L924|https://github.com/<USER>titanium_mobile/blob/master/android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUIText.java#L924]    *Work-Around 1:*  Set the hintText property when creating the {{SearchBar}}, but never afterwards.      *Work-Around 2:*  Set {{SearchBar}} property hintType to {{Ti.UI.HINT_TYPE_STATIC}}. This is an undocumented feature of {{SearchBar}} but it supports on Android since it internally uses {{Ti.UI.TextField}} within the {{SearchBar}}.    ",Bug,None,Closed,"2018-03-02 19:45:01","2018-03-02 19:45:01",3
"The Titanium SDK ","Windows Hyperloop: Style CalendarDatePicker Height not working","We are using a Windows.UI.Xaml.Controls.CalendarDatePicker (https://docs.microsoft.com/en-us/uwp/api/Windows.UI.Xaml.Controls.CalendarDatePicker) and we are trying to add some styling.   We are able to set the width doing something like this:     BUT when we try to set the height like this, it's not working:     Any idea?",Bug,Medium,Closed,"2018-03-02 02:31:59","2018-03-02 02:31:59",3
"The Titanium SDK ","Hyperloop: iOS - CocoaPods 1.4.0 breaks metabase generation","There are [reports|https://github.com/<USER>hyperloop-examples/issues/75] that Hyperloop does not work with CocoaPods 1.4.0. We should investigate it and add support for the new version.     [CocoaPods 1.4.0 Change Log|http://blog.cocoapods.org/CocoaPods-1.4.0/]",Bug,High,Closed,"2018-03-01 21:56:45","2018-03-01 21:56:45",5
"The Titanium SDK ","Windows: Error thrown when building to emulator with forceUnInstall flag for first time","h5.Description    When building an app for wp-emulator with {{--forceUnInstall}} and the emulator is in a clean state (i.e. no app already installed), then the build will fail because it's trying to uninstall a non-existent app and then doesn't continue on with the install when the uninstall fails        h5.Steps to reproduce    1. Build an application for wp-emulator with the emulator closed (clean state)    h5.Actual    Build fails with above    h5.Expected    Build should not fail",Bug,None,Closed,"2018-03-01 16:53:09","2018-03-01 16:53:09",5
"The Titanium SDK ","Android: JNIUtil error message on app launch","h5.Description    When an app launches I'm seeing the below error logged to the console, it doesn't look to cause any issues to the app but it might give people a scare when upgrading to 7.1.0. From what I can tell it occurs on any app        h5. Steps to reproduce    1. Create a default app using {{appc new}}/{{ti create}}  2. Build the app for Android    h5.Actual    On app launch the error/warning log above is shown    h5.Expected    No error/warning log",Bug,None,Closed,"2018-03-01 11:00:15","2018-03-01 11:00:15",3
"The Titanium SDK ","postlayout on TableViewRow doesn't work on iOS","postlayout event doesn't trigger when used on TableViewRow.    To replicate,  create a new Alloy MObile Project.    Replace index.xml contents with below:  Index.xml    <Alloy>   <Window class=container id=win layout=vertical >    <TableView width=90%  height=Titanium.UI.SIZE top=100   >     <TableViewRow onPostlayout=test1 onClick=test2  >      <Label text=API Health  />     </TableViewRow>     <TableViewRow id=tvr  >      <Label text=Consumer Engagement  />     </TableViewRow>     <TableViewRow   >      <Label text=API Usage  />     </TableViewRow>     <TableViewRow   >      <Label text=Infrastructure Health  />     </TableViewRow>    </TableView>   </Window>  </Alloy>      Replace index.js contents with below:    $.win.open();    function test1() {   alert(hello);  }    $.tvr.addEventListener(postlayout, test1);    function test2() {   alert(clicked);  }        You can see the click event is working, but not the postlayout. ",Bug,Critical,Resolved,"2018-02-28 03:37:19","2018-02-28 03:37:19",2
"The Titanium SDK ","Android: ScrollView starts at the wrong location if it contains a ListView","When you have a ListView within a ScrollView on Android, sometimes the scroll view starts around the middle of the screen.    e.g.          However changing the ListView into a normal view seems to fix the issue.    In addition, there are times where the above window opens up fine. But most of the time it opens up incorrectly.    Note that this does not happen on iOS.    Tested on:   - Samsung S6 (real device) and    - Nexus 5 emulator (API 19)     with SDK: Titanium 7.0.2 GA    ",Bug,Critical,Closed,"2018-02-27 15:32:07","2018-02-27 15:32:07",8
"The Titanium SDK ","Android: ActionBar height won't resize on screen rotation","*Summary:*  The ActionBar on Android won't resize when the device rotates.     [As seen in Material Design guidelines|https://material.io/guidelines/layout/structure.html#structure-app-bar], when a mobile is on landscape, ActionBar's height is 48dp, while on portrait it's 56dp.    Attached is a video demonstrating the issue.    *Steps to reproduce:*  # Position an Android device in portrait.  # Build and run a default Classic app project on that Android device.  # Note the height of the top titlebar.  # Rotate the device to landscape.  # Notice the titlebar height does not shrink. _(This is the bug.)_  # Keep holding the device at landscape and back out of the app.  # Launch the app in landscape form.  # Notice that the titlebar height is smaller upon launch.  # Rotate the device to portrait.  # Notice that the titlebar height has not increased. _(This is the bug.)_  ",Bug,Medium,Closed,"2018-02-22 10:17:47","2018-02-22 10:17:47",13
"The Titanium SDK ","ES6: Logs do not work anymore","While migrating my [canteen app|https://github.com/hansemannn/studentenfutter-app] to ES6, I noticed that logs (e.g. {{Ti.API.warn}}) do not work anymore. The only logs appearing are:      To reproduce:  {code:js}   var win = Ti.UI.createWindow({     backgroundColor: '#fff'  });    var btn = Ti.UI.createButton({    title: 'Trigger'  });    btn.addEventListener('click', function() {    Ti.API.error('Hello?')  });    win.add(btn);  win.open();  {code}",Bug,High,Closed,"2018-02-25 13:50:51","2018-02-25 13:50:51",0
"The Titanium SDK ","Hyperloop - ES6: Cannot find scoped this methods anymore","When using ES6 in Hyperloop methods, e.g.   {code:js}      var ButtonDelegate = Hyperloop.defineClass('ButtonDelegate', 'NSObject');        ButtonDelegate.addMethod({          selector: 'buttonPressed:',          instance: true,          arguments: ['UIButton'],          callback: (sender) => {               if (this.buttonPressed) {  //              ^-- Here is the issue - it cannot find the declared method                  this.buttonPressed(sender);              }          }      });        var delegate = new ButtonDelegate();        // Not found when being used in Hyperloop.addMethod      delegate.buttonPressed = function(sender) {          alert('Button pressed!');      };  {code}  the {{this.buttonPressed}} method cannot be found, although declared. We use this pattern many times, to assign methods to instances afterwards. If there is a better approach, we should replace the usages in the hyperloop-examples sample app.    *EDIT*: It only seems to be an issue if the delegate is in the same file as its usage. It works fine for other delegates / sub classes like [here|https://github.com/<USER>hyperloop-examples/blob/master/app/lib/ios/subclasses/tableviewdatasourcedelegate.js#L9].",Bug,Medium,Closed,"2018-02-24 19:05:01","2018-02-24 19:05:01",1
"The Titanium SDK ","Android: appc info show a leading 0 before NDK Path","Current output of {{appc info android}}            with the fix:      ",Bug,Critical,Closed,"2018-02-24 12:02:27","2018-02-24 12:02:27",1
"The Titanium SDK ","iOS: Bar Image is not showing properly in iPhone X","Issue: For iPhone X, bar image is not showing properly as like iPhone 8 and other. Always crop top portion.      Steps To Reproduce:  1. Create a new Alloy App.  2. Use the following test code and image then run it on iOS X and iOS 8 for checking the difference.    {code:title=index.xml}  <Alloy>   <TabGroup id=tabGroup>    <Tab id=tab title=My Tab icon=myicon.png>     <Window barImage = /images/relevent-dark-header.png>           </Window>    </Tab>   </TabGroup>  </Alloy>    {code}    Thanks!",Bug,None,Resolved,"2018-02-24 09:04:39","2018-02-24 09:04:39",3
"The Titanium SDK ","iOS: SDK 7.0.2.GA - VideoPlayer playback issues","on iOS titanium SDK 7.0.2.GA once the playback is done the media player fires the complete event (which is correct) and then the stop event (which shouldn't)    also the function stop doesn't stop the playback but rather pauses it.    and the durationavailable event is fired twice the second time an audio/video is played.      ",Bug,High,Closed,"2018-02-22 19:25:15","2018-02-22 19:25:15",8
"The Titanium SDK ","Android: Cannot build titanium project with JDK 1.9","When the system has only jdk 9 installed then the titanium project fails to build for android.    Steps to Reproduce:  1. Create a default alloy project  2. build the project for android from command line appc run -p android    Actual Result:  The project does not build with following error:      Running dexer manually shows the error is actually the following, in the dexer args [here|https://github.com/<USER>titanium_mobile/blob/d3cadc1bcecec20650fae421355e4edffa4876dd/android/cli/commands/_build.js#L4225] we need to swap {{'-Djava.ext.dirs=' + this.androidInfo.sdk.platformTools.path,}} to {{'-classpath', this.androidInfo.sdk.platformTools.path}}, I don't believe we need to handle this on a per-version basis as Java 1.8 handles the {{-classpath}} arg just fine    ",Bug,High,Closed,"2018-02-23 01:41:34","2018-02-23 01:41:34",3
"The Titanium SDK ","Android: Unnecessary info logs in console when trying to use geolocation methods with no Ti.playservices","h5.Steps to reproduce:  1. Use the code below in your app.js:    2. Make sure you do not have ti.playservices module in your app.  3. Build the app on Android device/emulator. (I saw the logs on Nexus 6P Android 8.0 & Android 4.4.4 emulator).  4. After app launch tap click me button.  5. Allow location permissions.  6. Check the logs.    h5.Actual results:  1. These info logs are seen : https://gist.github.com/<USER>bc231d92727852c4a74f8f37e3465d53    h5. Expected results:  1. The info logs should not be logged.",Bug,None,Closed,"2018-02-22 21:55:54","2018-02-22 21:55:54",1
"The Titanium SDK ","Android: Remove unnecessary Google Play Services logs","h5.Steps to reproduce:  1. Use the code below in your app.js:    2. Make sure you do not have ti.playservices module in your app.  3. Build the app on Android device/emulator. (I saw the logs on Nexus 6P Android 8.0 & Android 4.4.4 emulator).  4. After app launch tap click me button.  5. Allow location permissions.  6. Check the logs.    h5.Actual results:  1. These info logs are seen : https://gist.github.com/<USER>bc231d92727852c4a74f8f37e3465d53    h5. Expected results:  1. The info logs should not be logged.",Bug,Low,Closed,"2018-02-22 21:47:33","2018-02-22 21:47:33",2
"The Titanium SDK ","Windows: Adding a hyperloop created UI element to a View multiple times throws an error","h5.Description    Adding a HL created view to a Titanium view multiple times throws the following error            h5.Steps to reproduce    1. Add the above code to an existing classic project with hyperloop setup  2. Build for any Windows target  3. Click the view when the app launches  4. Click the view again a second time    h5.Actual    Error shown above is thrown on the second click    h5.Expected    No error should be thrown",Bug,High,Closed,"2018-02-22 14:39:01","2018-02-22 14:39:01",8
"The Titanium SDK ","Hyperloop: Android - Expose all missing Android R resource types to Ti.Android.R","We support a couple of Android R resources types in Titanium [already|http://docs.<USER>com/platform/latest/#!/api/Titanium.Android.R].     With having Hyperloop these days, we are able to perform powerful Android interactions like the BottomNavigationView, RecyclerView API's. It's convenient to load the views via XML and configure them via colors and strings inside the platform/android/res/ directory. For a concrete use-case, we need to load a {{menu}} resource for the bottom navigation view, which would be {{Ti.Android.R.menu.xxxx}}, but the {{menu}} namespace is not exposed. Therefore, this ticket proposes a tiny change that basically adds all (current) Android R resources types to our resource lookup map, so developers can use the official SDK API's instead of hacking it together like in the example.    Missing properties:  - animator  - bool  - fraction  - interpolator  - menu  - mipmap  - plurals  - raw  - transition  - xml","New Feature",High,Closed,"2018-02-21 20:46:43","2018-02-21 20:46:43",8
"The Titanium SDK ","Windows: Adding a hyperloop created UI element to a View crashes the app","h5.Description    *This is a regression from 7.0.2.GA*    When adding a UI element that is created using hyperloop to a Ti.UI.View the app will crash with no logs        h5.Steps to reproduce    1. Add the above code to an existing classic project with hyperloop setup  2. Build for any Windows target  3. Click the view when the app launches    h5.Actual    App crashes    h5.Expected    App should not crash",Bug,High,Closed,"2018-02-21 18:15:36","2018-02-21 18:15:36",5
"The Titanium SDK ","iOS: No callback when not granting push notification permission (Apple bug)","Hi,     I am trying to enable push notifications on IOS device and when I grab token I am being asked to provide push notification permission. If I choose not to give it, error callback is not thrown. I copied code directly from Push Notifications Reference Guide:     http://docs.<USER>com/platform/latest/#!/guide/Subscribing_to_push_notifications     Here is the code:   ---------------------------------------------------------------------------------------------------------------------------------------------------         ---------------------------------------------------------------------------------------------------------------------------------------------------     Note that deviceTokenError never gets thrown once permission has been granted/revoked.    *Expected Result:* error callback should be fired when not granting push notification permission.  *Actual Result:* error callback never be fired.    Thanks ",Bug,None,Closed,"2018-02-21 05:38:07","2018-02-21 05:38:07",5
"The Titanium SDK ","Android: Scrolling horizontal ScrollView within a vertical ScrollView should disable vertical scrolling","*Summary:*  When scrolling a horizontal ScrollView within a vertical ScrollView, it will scroll horizontally until you scroll too far up/down, then horizontal scrolling will be canceled by the parent vertical ScrollView and it'll only scroll vertically from then on. This is a behavior change that was introduced in Titanium 6.3.0.    The old behavior would block the parent ScrollView from scrolling vertically while scrolling the child horizontal ScrollView. This behavior should be restored. _(This is also the iOS behavior.)_    *Steps to Reproduce:*  # Build/run the below code for Android using Titanium 6.3.0 or higher.  # Start dragging one of the horizontal ScrollViews. (It's the box containing labels.)  # As you drag it horizontally, drag up or down.  # Notice the parent ScrollView will scroll vertically, but you can no longer scroll the child ScrollView horizontally anymore.        *Result:*  Once you drag up or down while scrolling horizontally, the horizontal ScrollView's scrolling is canceled and only the parent vertical ScrollView can be scrolled.    *Expected Result:*  Parent vertical ScrollView should not be scrollable while scrolling a child horizontal ScrollView. This was the old Android behavior. It is also the iOS behavior.    *Cause:*  ScrollViews call the parent view's {{requestDisallowInterceptTouchEvent()}} method when scrolling has started. However, Google's {{SwipeRefreshLayout.requestDisallowInterceptTouchEvent()}} method ignores the request when made by a child view (in this case a {{HorizontalScrollView}}) that does not support nested scrolling. Since it's ignored, the parent ScrollView ends up intercepting and stealing the nested {{HorizontalScrollView}} touch events.  [SwipeRefreshLayout.java#L735|https://github.com/aosp-mirror/platform_frameworks_support/blob/master/core-ui/src/main/java/android/support/v4/widget/SwipeRefreshLayout.java#L735]    *Work-Around:*  You can restore the old behavior by listening to the horizontal ScrollView's dragstart and dragend events. In the dragstart event handler, disable the parent vertical ScrollView. In the dragend event handler, re-enable the parent vertical ScrollView.      ",Bug,Medium,Closed,"2018-02-21 02:33:59","2018-02-21 02:33:59",3
"The Titanium SDK "," Android:  getTime issue with 7.0.2 sdk in android","Hi,  There is an issue in the SDK 7.0.2 with the getTime() function in Android.  Issue:-  new Date(2018-02-20T11:30:00).getTime() has discrepancy with the old sdk's (  same function is returning different values(milliseconds) in old sdk and new sdk.  1519104600000 - new sdk (7.0.2.GA)  1519126200000 - old sdk (6.3.0.GA)    steps to recreate:-  1)calculate the milliseconds using new Date(2018-02-20T11:30:00).getTime() in 7.0.2 and 6.3.0.  2)copy that in check the local time and UTC in http://currentmillis.com.  3) you should see the difference in two SDK's.    Test Code:    ",Bug,None,Closed,"2018-02-20 19:43:12","2018-02-20 19:43:12",2
"The Titanium SDK ","Windows: HttpClient.onreadystatechange should be called right after ondatastream/onsendstream","HttpClient {{callbackTestForGETMethod}} and {{callbackTestForPOSTMethod}} [unit test|https://github.com/<USER>titanium-mobile-mocha-suite/blob/master/Resources/ti.network.httpclient.test.js#L377] shows {{onreadystatechange}} should be called right after {{ondatastream/onsendstream}} event to keep parity with iOS/Android.        Expected: {{finish}} should be printed.",Bug,Medium,Closed,"2018-02-20 07:30:45","2018-02-20 07:30:45",5
"The Titanium SDK ","Windows: Fix windowsBroken HttpClient tests","In {{ti.network.httpclient.tests}} on our unit tests, we've been skipping some of unit tests for Windows by marking {{windowsBroken}}. Need to make sure what's causing the actual issue and create new ticket when needed. This ticket is to keep track on it. ",Story,Medium,Closed,"2018-02-20 00:51:40","2018-02-20 00:51:40",8
"The Titanium SDK ","Windows: Instance properties can be called without object instance","Some Titanium APIs can be invoked without an object instance existing.        This is a basic design issue in HAL, it basically doesn't distinguish between static property and instance property and there's no way to define instance only property - [TIMOB-18681]",Story,Low,Open,"2018-02-16 23:57:17","2018-02-16 23:57:17",2
"The Titanium SDK ","iOS: Sending events that cannot be serialized fail on SDK 7.0.0+","Here is a code :  alloy.js      {code:javascript}  Ti.Gesture.addEventListener('orientationchange', function (e) {      Ti.App.fireEvent('_customEvent', e);  });    Ti.App.addEventListener('_customEvent', function () {});    {code}    This triggers an error on orientation change        ",Bug,Critical,Closed,"2018-02-16 12:54:35","2018-02-16 12:54:35",5
"The Titanium SDK ","Windows: Ti.Geolocation.getCurrentPosition location is not accurate","Test Code :    Test Environment:      Thanks ",Bug,None,Resolved,"2018-02-15 13:31:35","2018-02-15 13:31:35",3
"The Titanium SDK ","Windows: HttpClient.clearCookies freezes app","{{Ti.Network.HttpClient.clearCookies}} hangs. It also doesn't clear the cache.        Expected: App should not freeze and New cookie should be different.",Bug,High,Closed,"2018-02-15 06:05:45","2018-02-15 06:05:45",3
"The Titanium SDK ","Windows: Ti.Filesystem.File can't handle multilingual filename","{{Ti.Filesystem.File}} can't handle multilingual filename.        Expected: This should write a file with given filename and given content.  ",Bug,High,Closed,"2018-02-14 09:58:19","2018-02-14 09:58:19",8
"The Titanium SDK ","Foreground Push notification cannot get received when there is Content-Available in payload","h6.Reproduce  1. Run the following app on iOS device.  https://github.com/sliang0904/SimlpePushCode/blob/master/app.js  2. Click subscribe button to register to channel. And keep the app in foreground.  3. Send push notification from dashboard. But with 'Content-Available' checked. (attached screen shot)  4. Then the app can not get the push notification.  5. But if you put the app in background. Then send same push again. then app can receive the push.",Bug,None,Resolved,"2018-02-14 08:20:36","2018-02-14 08:20:36",5
"The Titanium SDK ","Windows: Implement Ti.UI.Label.ellipsize","Implement [Ti.UI.Label.ellipsize|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Label-property-ellipsize]. It should return {{Number}} value but currently on Windows it returns {{bool}}.   ","New Feature",Medium,Closed,"2018-02-14 03:44:32","2018-02-14 03:44:32",8
"The Titanium SDK ","Android: Cannot use Ti.NFC","Dear all,    I've been playing (or trying to play) with the ti.nfc module for a while.  I'm just throwing there the example TagViewer from the module examples, just a copy and paste of the module and a modification of the tiapp.xml to add the android properties in manifest.    However, when trying to run the project, this warning appears in there:    [WARN] :   android:launchMode should not be used. Ignoring definition from .NfcActivity    And the application doesn't work properly. Am I doing something wrong? Should I change something to allow android:launchMode?    Thanks for your comments.    PD: I've also attached the tiapp.xml the modules folder and the app folder of the project, in case you want to take a look (I tried to attach the whole project, but looks like it is too heavy).",Bug,Critical,Closed,"2018-01-29 13:31:11","2018-01-29 13:31:11",8
"The Titanium SDK ","iOS: Cannot get gradient properties after creation","Triggered by TIMOB-9366, a developer might want to receive gradient properties after creating the gradient. Example:  {code:js}  var win = Titanium.UI.createWindow({      backgroundColor:'#fff'  });    var gradient = {      type: 'radial',      startPoint: { x: 50, y: 50 },      colors: [ 'red', 'blue'],      startRadius: '90%',      endRadius: 0  };  var radialGradient = Ti.UI.createView({      width: 100,      height: 100,      backgroundGradient: gradient  });    win.addEventListener('open', function() {    console.log(radialGradient.backgroundGradient.colors.join(', ')); // CRASH!  });    win.add(radialGradient);    win.open();  {code}    This does not only effect the colors key but also startPoint, endPoint and type.",Bug,Low,Closed,"2018-02-13 11:55:05","2018-02-13 11:55:05",5
"The Titanium SDK ","Windows: Contact request should not block UI thread","Requesting access to contact while {{ContactManager::RequestStoreAsync}} should not block UI thread because permission requesting dialog actually uses UI thread. This causes intermittent application freeze described in TIMOB-23332.",Story,Medium,Closed,"2018-02-13 07:24:29","2018-02-13 07:24:29",5
"The Titanium SDK ","Android: Apps fail to build as of 7.0.2 if system requires proxy to access Internet","*Summary:*  If the developer's system uses a proxy to access the Internet, then Android apps will fail to build as of Titanium 7.0.2.    *Steps to Reproduce:*  # Delete the following folder on Mac, if it exists: ~/.gradle/caches  # Set up the machine to access the Internet via a proxy.  # Configure the proxy settings in <USER>Studio via its Proxy Setup window or via the CLI's appc config set proxyServer.  # Attempt to do an Android build.    *Result:*  The build fails with follow logged errors...      *Cause:*  A new gradle build step has been added to Titanium 7.0.2 to perform ProGuard and multidexing apps. Gradle is failing to download its module(s) from maven repositories since it is not configured to work through a proxy.    *Recommended Solution:*  Developers currently have to configure Titanium/Appc to use a proxy according to our docs here...  http://docs.<USER>com/platform/latest/#!/guide/Using_Studio_From_Behind_a_Proxy  http://docs.<USER>com/platform/latest/#!/guide/<USER>CLI_Getting_Started    When the Titanium build system generates the gradle-wrapper.properties file, it should add the CLI's proxy settings to that gradle property file as well. Gradle documents these proxy settings here...  https://docs.gradle.org/current/userguide/build_environment.html#sec:accessing_the_web_via_a_proxy    *Work-Around:*  Titanium developers can work-around this issue by configuring a global gradle.properties file with these proxy settings according to the docs here...  https://docs.gradle.org/current/userguide/build_environment.html#sec:accessing_the_web_via_a_proxy    On Mac, the global file goes here...      On Windows, the global file goes here...    ",Bug,Critical,Closed,"2018-02-12 21:20:18","2018-02-12 21:20:18",5
"The Titanium SDK ","Android: requestThumbnailImagesAtTimes() does not work with remote content","Requesting a thumb from a video payer that has a remote video loaded results in a crash.    Test case:      ",Bug,High,Closed,"2018-02-12 16:39:26","2018-02-12 16:39:26",5
"The Titanium SDK ","Android: Allow video-upload in Ti.UI.WebView","If you display a web form in Webview on your app with a File upload, you can't choose a video on Android. (iOS it's OK).",Bug,Critical,Closed,"2018-02-07 21:07:41","2018-02-07 21:07:41",3
"The Titanium SDK ","Use rollup to avoid circular references with ES6 imports in JavascriptCore","- JavascriptCore does not have full ES6 module support, circular references with {{import}} will cause a stack overflow    *TEST CASE*  {code:js}  // TODO  {code}",Bug,High,Closed,"2018-02-09 22:55:49","2018-02-09 22:55:49",8
"The Titanium SDK ","Android: Animated views should retain their initial properties","- Animations update the properties of the proxy after a transformation. Out documentation suggests this is not the case (http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Animation)    {quote}Note that when you animate a view's size or position, the actual layout properties (such as top, left, width, height) are not changed by the animation.{quote}    *TEST CASE*  {code:js}  var win = Ti.UI.createWindow();      view = Ti.UI.createView({          backgroundColor:'red',          width: 100, height: 100,          left: 100,  top: 100      });    win.addEventListener('open', function () {      var animation = Ti.UI.createAnimation({          top: 150,          duration: 1000      });        animation.addEventListener('complete', function () {          // make sure to give it a time to layout          setTimeout(function () {              console.log(`X: ${view.rect.x} == 150, TOP: ${view.top} == 100`);          }, 500);      });        view.animate(animation);    });  win.add(view);  win.open();  {code}",Bug,High,Closed,"2018-02-09 21:53:44","2018-02-09 21:53:44",3
"The Titanium SDK ","Windows: Add support for RequestHeaders for ImageViews","A lot of times an image requires requestheaders, like oAuth/basic auth or others before it can be loaded. Right now a workaround is needed to get these images (doing a XHR call to fetch images, then insert it into imageview).    However, by adding support for requestheaders to ImageViews a workaround would not be needed anymore.     A possible example of implementation:    {code:js}  Ti.UI.createImageView({      url: 'http://example.com/my_image.png',      requestHeaders: {          'Authorization' : 'Bearer myToken'      }  });  {code}","New Feature",Medium,Open,"2018-02-09 00:47:34","2018-02-09 00:47:34",5
"The Titanium SDK ","Windows: Titanium.Network.HTTPClient Location doesn't return the redirected URL","Titanium.Network.HTTPClient Location doesn't return the redirected url in windows.  It works perfectly on iOS and Android.    Sample Code:    var _tmpURL = any url that redirects to other url  var _tmpClient = Ti.Network.createHTTPClient({           onload: function(e)           {                   serverAddressRedirected = _tmpClient.location;     //this should return redirected url but returns the url before redirect                   Ti.API.info(Location: + serverAddressRedirected);                              },          onerror : function(e)            {                 alert(Error: + e.error);            },            timeout: 30000        });        _tmpClient.open(GET,_tmpURL);        _tmpClient.send();    ",Bug,Critical,Closed,"2018-02-07 14:56:20","2018-02-07 14:56:20",8
"The Titanium SDK ","Android: Improve proxy getter/setter validation","- The parent proxy of getters and setters is not validated which can cause a crash    *TEST CASE*  {code:js}  Ti.API.bubbleParent; // should not crash  {code}",Bug,High,Closed,"2018-02-06 22:50:17","2018-02-06 22:50:17",3
"The Titanium SDK ","Android: Restart app on system locale change","Apps in Titanium doesn't restart the activities when locale config has changed and the broadcast event is fired.    From the documentation:    https://developer.android.com/guide/topics/manifest/activity-element.html#config    Locale The locale has changed; the user selected a new text language.    As you can see in the documentation page. If android:configChanges are added to the manifest in an activity block is the app who should handle this changes. If not, the app is restarted by default (as expected).    I found this broadcast handler in the titanium source code but the behaviour isn't as expected.    Adding 'locale' to android:configChange doesn't works.    Generated and modified manifest (adding locale to android:configChanges):        I've tried removing android:configChanges attribute in my custom manifest to get the default behaviour but it is added again.    By default the generated manifest by Titanium has the android:configChanges flag enabled with custom properties. It's Titanium who handles this changes.      TEST APP:    Languages: en, es    Expected behaviour: Settings > Languages > Change language > Come back to app > Activity has been restarted with new language  Current behaviour: Settings > Languages > Change language > Come back to app > Activity hasn't been restarted with new language",Bug,Critical,Closed,"2017-12-19 11:53:17","2017-12-19 11:53:17",5
"The Titanium SDK ","Android: WebView should prompt user for client certificate if requested by server","_*Edit:*_  _Original issue turned out to be a {{WebView}} hardware acceleration bug on Google's end based on the web page's content, which was worked-around by adding a border to the {{WebView}}. However, we're keeping the code change where the {{WebView}} will prompt the end-user for a client certificate via a dialog if requested by the web server._    *Original Post:*  The following page will not render in an Android Webview, however, it loads correctly the iOS webview and in all Android stock browsers.    [https://idp.unilever.com/adfs/ls/?client-request-id=9b52f9a3-756e-4cde-99bd-64515d1e274a&wa=wsignin1.0&wtrealm=urn%%3afederation%%3aMicrosoftOnline&wctx=LoginOptions%%3D3%%26estsredirect%%3d2%%26estsrequest%%3drQIIAa2Qv4vUQACFM7c_PNcVjsNCLOQK5arZJJNkNhkQjKeLJ3d4blhFQWQymbmNJDNxJln1_go7UQtFO-0sBRvLK_TqAy2sxEIs1co9wd7C9sHjve_rWWR1WteVIbbdyLzgM67RgMpZXmxr1VQDpkp7S-maFnq5t_Ti5_iJbD5tPHqbXbl5cvXSS3DhH9t2Em9u2LExXNe5kmtKmqbkOuF6ljP-Dpy-FQxThNjQhwx7PvRxNIQRyjBEYcSiEAcRo3QPgC8A7C90EloW6NdC0GhJFDW5IZKW3JCakYMh4g7cP0meQaF0SWvSSFNxloucZ49b_U2Vzu_GVZUkl1-3TgmMBeUOgkHmYehHQQpTwR04DCkWIhIhx_xz60TFa64Hpqay4PfP_iU-oNxr97-2-w4gi4uHlsBxsGL9aIPnnbmy9-LZtw8fL55_Gh95RR8uW7sdm1Fv_Zx3Z3p7zfUEupbi0Xhyb2LCu42a4OtXp-t6J95yRqPxjjrjEvdB9-hu1_retd4c_j-293vHkOOGcM7rBCtuQPyAIHTjNw2&cbcxt=&username=<USER>stanley%%40unilever.com&mkt=&lc=|https://idp.unilever.com/adfs/ls/?client-request-id=9b52f9a3-756e-4cde-99bd-64515d1e274a&wa=wsignin1.0&wtrealm=urn%%3afederation%%3aMicrosoftOnline&wctx=LoginOptions%%3D3%%26estsredirect%%3d2%%26estsrequest%%3drQIIAa2Qv4vUQACFM7c_PNcVjsNCLOQK5arZJJNkNhkQjKeLJ3d4blhFQWQymbmNJDNxJln1_go7UQtFO-0sBRvLK_TqAy2sxEIs1co9wd7C9sHjve_rWWR1WteVIbbdyLzgM67RgMpZXmxr1VQDpkp7S-maFnq5t_Ti5_iJbD5tPHqbXbl5cvXSS3DhH9t2Em9u2LExXNe5kmtKmqbkOuF6ljP-Dpy-FQxThNjQhwx7PvRxNIQRyjBEYcSiEAcRo3QPgC8A7C90EloW6NdC0GhJFDW5IZKW3JCakYMh4g7cP0meQaF0SWvSSFNxloucZ49b_U2Vzu_GVZUkl1-3TgmMBeUOgkHmYehHQQpTwR04DCkWIhIhx_xz60TFa64Hpqay4PfP_iU-oNxr97-2-w4gi4uHlsBxsGL9aIPnnbmy9-LZtw8fL55_Gh95RR8uW7sdm1Fv_Zx3Z3p7zfUEupbi0Xhyb2LCu42a4OtXp-t6J95yRqPxjjrjEvdB9-hu1_retd4c_j-293vHkOOGcM7rBCtuQPyAIHTjNw2&cbcxt=&username=<USER>stanley%%40unilever.com&mkt=&lc=]  ",Bug,Critical,Closed,"2018-02-06 09:44:11","2018-02-06 09:44:11",11
"The Titanium SDK ","Android: ScrollView width ignores Ti.UI.SIZE as of 6.3.0","*Summary:*  Setting the ScrollView width property to Ti.UI.SIZE will do a Ti.UI.FiLL instead as of Titanium 6.3.0.  _(This is not an issue with the height property. Only the width.)_    *Code to Reproduce:*      *Result:*  The above code produces a yellow ScrollView. Note that the ScrollView does not auto-size itself to just fit the Hello World label as seen in Screenshot-Bad.png.    *Expected Result:*  The ScrollView width should auto-size itself to fit the label as shown in Screenshot-Good.png. This is how it worked in Titanium 6.2.2 and older versions.    *Cause:*  This bug happened when we added RefreshControl support. Google's Java SwipeRefreshLayout class does not support the WRAP_CONTENT setting.    *Recommended Solution:*  Modify Titanium's Java TiSwipeRefreshLayout onMeasure() method to handle the WRAP_CONTENT setting ourselves. We're already doing this in the vertical direction and we need to do the same for the horizontal.  https://github.com/<USER>titanium_mobile/blob/master/android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiSwipeRefreshLayout.java#L76  ",Bug,High,Closed,"2018-02-05 18:59:39","2018-02-05 18:59:39",1
"The Titanium SDK ","Android: Incompatible types: Class<KrollExternalModule>","I'm using 7.0.1, trying to switch to 7.0.2 RC I unable to run it to android and I get this error    error: incompatible types: Class<KrollExternalModule> cannot be converted to Class<? extends KrollSourceCodeProvider>  [ERROR] :        (Class<KrollExternalModule>) Class.forName(className));  [ERROR] :        ^  [ERROR] :  Note: Some input files use unchecked or unsafe operations.  [ERROR] :  Note: Recompile with -Xlint:unchecked for details.  [ERROR] :  Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output  [ERROR] :  1 error  [ERROR] Application Installer abnormal <USER>termination. Process exit value was 1  ",Bug,Critical,Closed,"2018-02-04 17:04:16","2018-02-04 17:04:16",2
"The Titanium SDK ","iOS: Remove TiCore","We deprecated TiCore in SDK 7 and fixed the last issues around using JSCore (proxies not being released, post data not being released, fix debugger). So it's time!",Improvement,Critical,Closed,"2018-02-04 10:16:01","2018-02-04 10:16:01",13
"The Titanium SDK ","iOS: Modal error dialog not shown when using main-thread","When running on main-thread (new default since 7.0.0), the red screen of death is not shown. This is due to [this commit|https://github.com/<USER>titanium_mobile/commit/32dd2c512b18e7cfa6655fb4b57987f45613249a] from the good old 1.x SDK days where we didn't have the ability to run UI on the main-thread.    This ticket should also be used to refactor the error dialog a bit - to include the error reason and make a bit less ugly.",Bug,High,Closed,"2018-02-03 22:34:36","2018-02-03 22:34:36",5
"The Titanium SDK ","iOS: Uploaded file persists in memory when using JSCore","Doing a file upload with the createHTTPClient on iOS in TI SDK 7.x.x causes the file to stay in ram after the upload is completed or aborted. It does not get removed from ram as it should. When doing a large upload or multiple uploads this is a rather big problem because it can cause the app to crash or have a large ram usage as you can see from the screen shot.     Example code is below, using a 100MB file will cause 400 + Mb of ram usage for 1 upload, this will then stay in ram, doing 3 uploads will cause the app to crash on a iPhone X.     The file should be removed from ram when the upload is completed or aborted, it use to do this in previous version of TI.     ",Bug,Critical,Closed,"2018-01-25 20:59:49","2018-01-25 20:59:49",8
"The Titanium SDK ","Windows: Auto-increment version numbering","We might want to introduce automatic-increment for build number during build due to deployment issues  (See TIMOB-25616 and TIMOB-25017).    Here's some starting point to discuss:    - Do we accept the difference between version numbering in tiapp.xml and actual app? Note that Developers may want to determine specific version number for the release build.  - We could introduce special placeholder like {{<version>1.0.*</version>}} but this may cause breaking change and parity issue between platforms. Do we wan to do like this? Or we could just say If you omit the build number, we just automatically increment it behind scenes, only on Windows platform.  - Do we accept this breaking change regarding new version numbering spec?   - Do we want to enable it by default? Otherwise do we want to introduce new property in tiapp.xml like {{<enable-auto-build-numvering/> or so}}?  - Do we want to introduce this new version numbering spec for other platforms? Do we want to keep parity for it?  - Do we want to make it configurable from Appc Studio? For instance [Automatically increment checkbox in UWP packager|https://docs.microsoft.com/en-us/windows/uwp/packaging/images/packaging-screen5.jpg]  ","New Feature",Medium,Closed,"2018-02-02 04:12:27","2018-02-02 04:12:27",5
"The Titanium SDK ","iOS:Tableview with custom rows becomes blank on search bar OnFocus","Tableview with custom rows becomes blank on search bar OnFocus    *Test Environments:*  <USER>Command-Line Interface, version 7.0.1  Operating System Mac OS X,Version 10.13.2,Architecture 64bit, CPUs  4,Memory 8.0GB     Node.js Version             = 8.9.1     npm Version                 = 5.5.1    <USER>CLI 4.2.11    Core Package  7.0.1    Titanium CLI 5.0.14    node-appc Version 0.2.41   Titanium SDK 7.0.1.GA  iOS SDK: 11.1-Simulator iPhone X  Xcode 9.1,9.2    *Test Code:*    *index.js*      *index.xml*        *Test Steps:*  1. Create an alloy project  2. Paste the sample code to app folder  3. Run Via simlator  4. Click on searchbar and observe that tableview  becomes blank on search bar OnFocus    *Output*:[Screenshot| https://s17.postimg.org/ouj2zhgwf/Simulator_Screen_Shot_-_i_Phone_X_-_2018-02-01_at_15.01.03.png]",Bug,None,Closed,"2018-02-01 09:28:18","2018-02-01 09:28:18",0
"The Titanium SDK ","TiAPI: Add support for async/await","We added support for ES6 and later in the latest 7.1.0 changes, which is *awesome*! The only thing missing is the support for using async/await in Titanium code.    Here is an example (taken from my sample-project):  {code:js}    someOtherMethod() {      this._getUserLocation();    }      async _getUserLocation() {      // FIXME: Current throws, work in progress!      const coordinates = await Ti.Geolocation.getCurrentPosition(event => {        return new Promise(resolve => {          resolve(event.coords);        });      });      alert(`Found location! Latitude: ${coordinates.latitude}, Longitude: ${coordinates.longitude}`);    }  {code}  The full sample can be found [here|https://github.com/hansemannn/titanium-es6-sample/blob/master/Resources/src/application.js#L84-L94]. It is throwing an Cannot find regeneratorRuntime error when calling the method, which looks like a Babel error that occurs when certain transform-plugins are missing.     We use the babel-preset-env, which should already support it by having a dependency on [babel-plugin-transform-async-to-generator|https://www.npmjs.com/package/babel-plugin-transform-async-to-generator] but for some reasons it does not work.     Important to say is also that I may be doing something wrong, so let me know if thats the case!",Improvement,High,Closed,"2018-02-01 09:26:23","2018-02-01 09:26:23",8
"The Titanium SDK ","iOS 11: Location permissions do not indicate missing WhenInUse privacy-key","When asking for Location permissions in iOS 11, the following error is shown, even thought my plist already have these keys:          This is the ios part of the tiapp.xml. I've also opened the generated Info.plist file and it looks good.          In order to reproduce the issue, this is an example code, on an normal app, inside app.js (I've also attached the file)            Thanks for having a look",Bug,Medium,Closed,"2018-02-01 09:09:24","2018-02-01 09:09:24",2
"The Titanium SDK ","iOS: Question about TabGroup limitations"," We are not able to resize the tab group height, as when we provide both icon and title for tab they are getting stick to each other using circle shape icon. Also we are not able to provide the padding forth icons.    *Test Environments:*    <USER>Command-Line Interface, version 7.0.1  Operating System Mac OS X,Version 10.13.2,Architecture 64bit,CPUs  4,Memory 8.0GB   Node.js Version             = 8.9.1   npm Version                 = 5.5.1   <USER>CLI 4.2.11   Core Package  7.0.1   Titanium CLI 5.0.14    node-appc Version 0.2.41   Titanium SDK 7.0.1.GA   iOS SDK: 11.1-Simulator iPhone X    *Test Steps:*    1. Open Studio and create a clasic project  2.Paste the resource folder to newly created project  3. Run via simulator . Observe that  both icon and title for tab they are getting stick to each other using circle shape icon.    *Test Output:* [Snapshot| https://s9.postimg.org/3uxpv598v/Simulator_Screen_Shot_-_i_Phone_X_-_2018-01-31_at_15.29.01.png]  ",Bug,None,Closed,"2018-01-31 11:48:14","2018-01-31 11:48:14",2
"The Titanium SDK ","Android: Replace Activity.isDestroyed() with Android 4.1 compatible alternative","The fix for TIMOB-25656 made use of {{Activity.isDestroyed()}} which is an Android 4.2+ method. We need to replace it with an alternative.    *TEST CASE*  - Titanium Application should launch on 4.1 device",Bug,Critical,Closed,"2018-01-30 18:47:31","2018-01-30 18:47:31",1
"The Titanium SDK ","Android: View with border larger than screen may fail to appear as of 7.0.2.RC","This warning appeared to me with SDK 7.0.2.v20180123170142 and 7.0.2.v20180125101244 only. So some views do not display, but with SDK 7.0.2.v20180123083830 and below it's working good    [WARN]: View: TiBorderWrapperView not displayed because it is too large to fit into a software layer (or drawing cache), needs 14925600 bytes, only 8294400 available",Bug,Critical,Closed,"2018-01-28 22:18:52","2018-01-28 22:18:52",3
"The Titanium SDK ","Titanium.Video constants, VIDEO_PLABACK_STATE_PLAYING etc don't work","trying to get the status of the video playback but the constants are all undefined, hence my logic is not working...    to reproduce:    1)   var activeAd = Titanium.Media.createVideoPlayer({   url :select a video file,   backgroundColor : '#fffae8',   scalingMode : Titanium.Media.VIDEO_SCALING_MODE_FILL,   showsControls : false,   autoplay : true  });      2) add below event listeners    activeAd.addEventListener(complete, adWatchCalculate);  activeAd.addEventListener(error, adWatchCalculate);  // activeAd.addEventListener(playbackstate, adWatchCalculate);  activeAd.addEventListener(playbackstate, function(e) {   console.log('e.playbackState ' + e.playbackState);   console.log('Titanium.Media.VIDEO_PLAYBACK_STATE_PLAYING ' + Titanium.Media.VIDEO_PLAYBACK_STATE_PLAYING);   console.log('Titanium.Media.VIDEO_PLAYBACK_STATE_INTERRUPTED ' + Titanium.Media.VIDEO_PLAYBACK_STATE_INTERRUPTED);   console.log('Titanium.Media.VIDEO_PLAYBACK_STATE_PAUSED ' + Titanium.Media.VIDEO_PLAYBACK_STATE_PAUSED);   console.log('Titanium.Media.VIDEO_PLAYBACK_STATE_STOPPED ' + Titanium.Media.VIDEO_PLAYBACK_STATE_STOPPED);       if (e.playbackState == Titanium.Media.VIDEO_PLAYBACK_STATE_PLAYING) {    adLoadSuccess = true;    console.log('true');   }  });      OUTCOME IS as below:  [INFO] :   e.playbackState 0  [INFO] :   Titanium.Media.VIDEO_PLAYBACK_STATE_PLAYING undefined  [INFO] :   Titanium.Media.VIDEO_PLAYBACK_STATE_INTERRUPTED undefined  [INFO] :   Titanium.Media.VIDEO_PLAYBACK_STATE_PAUSED undefined  [INFO] :   Titanium.Media.VIDEO_PLAYBACK_STATE_STOPPED undefined    I am trying to figure out if the video has started to play, but unable to...",Bug,Medium,Closed,"2018-01-28 10:49:46","2018-01-28 10:49:46",0
"The Titanium SDK ","Android: Glitch on backgroundColor animation with borderRadius","Background color animation in rounded-angle views changes the color to the rectangle behind the view, but the shape with rounded corners does not animate.    I enclose two comparison videos on iOS and Android.    Example code:          ",Bug,Critical,Closed,"2018-01-26 13:18:32","2018-01-26 13:18:32",1
"The Titanium SDK ","Android: Allow SearchBar color and hintTextColor properties to be set dynamically","*Summary:*  Add the ability to set the text color and hint text color of a Ti.UI.SearchBar on Android  The Android Ti.UI.SearchBar supports undocumented properties color and hintTextColor for changing its text field colors. However, these properties can only be set upon creation. We should allow these properties to be set dynamically.    This is especially needed for parity since we're adding this feature on iOS via [TIMOB-10368].    *Note:*  We plan on adding a similar feature to Android's SearchView in 7.1.0. See: [TIMOB-25668]    *Test Code:*  Once this feature has been implemented, verify that the SearchBar's hint text color is blue and the entered text is red.      ",Improvement,Low,Closed,"2018-01-26 23:15:17","2018-01-26 23:15:17",1
"The Titanium SDK ","Hyperloop: iOS - Unable to load Mapbox using Hyperloop","h5 Issue:   Using steps in Timob-23853 https://jira.<USER>org/browse/TIMOB-23853?focusedCommentId=429306&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-429306  customer is unable to load Mapbox and gets error:  Couldn't find module:   Attached is a screenshot of the error along with the testapp:    [^HyperloopDemo.zip]    !Screen_Shot_2018-01-26_at_1.29.28_PM.png|thumbnail!     you can see the log we get when trying to load the module here:   https://gist.github.com/exclusiveTanim/c47578c227c7e958a34d441311a5c223    Customer has reached out to express urgency for a resolution. ",Bug,None,Closed,"2018-01-26 21:26:59","2018-01-26 21:26:59",5
"The Titanium SDK ","Android: TableView can crash using setData()","I  have a tableview in a View XML and it crashes when I set the data via setData on SK6. Works fine on SDK 5, but on SDK6 it crashes on Android when I assign the same data twice which I do when I need to switch data sets. This is only on Android as iOS works as it should    $.table.setData(myDataSet);  $.table.data = [];  $.table.setData(newDataSet);                // This is ok  $.table.data = [];  $.table.setData(anotherNewDataSet);   // This is ok  $.table.data = [];  $.table.setData(myDataSet);                 // Re-assigning myDataSet crashes the app    I am guessing this is a bug in SDK6 for Android. I've done some further testing and it only crashes if the SAME dataset is assigned twice, I can keep adding new datasets and it won't crash, but assign the same dataset again and it crashes.    Thanks    Nigel",Bug,Critical,Closed,"2017-08-30 07:51:59","2017-08-30 07:51:59",8
"The Titanium SDK ","Android: Ensure device's installed Google Play Services is available/updated on app startup","*Summary:*  The Google Play Services libraries (included with ti.playservices module) are merely an interface to the installed Google Play Services app/apk. The app must ensure that Google Play Services is installed on the device and that its apk version is greater or equal to the version of the Google Play Services libraries that the app includes... or else the library's APIs will fail or throw an exception.    Google documents the above here...  https://developers.google.com/android/guides/setup#ensure_devices_have_the_google_play_services_apk    *Feature Requirements:*  # The Google Play Services check should be done when the Titanium splashscreen is displayed (ie: TiLaunchActivity.java) and before executing the app.js script.  # Do not run the check if ti.playservices module is not included in the app. (In this case, assume app does not use Google Play Services.)  # If Google Play Services is found to be too old or disabled, display an alert asking end-user to resolve it. Keep the end-user on the launcher screen in this case.  # If end-user chooses to update Google Play Services, remain on the launcher screen until the download completes, then proceed on to execute the app.js script.  # Do not display an alert if the device does not have Google Play installed and proceed to execute the app.js script. In this case, assume the app is not distributed via the Google Play app store (such as Amazon) or the app is running via an emulator without Google Play installed.  # Add tiapp.xml boolean property ti.playservices.validate.on.startup which when set {{false}} will disable this feature. In this case, it is the app developer's responsibility to manage this.    *Note:*  Currently, Titanium's ti.playservices module purposely uses Google Play Services library versions a few revs old to avoid the failure mentioned above. Once we update a Titanium app to install the newest version of Google Play Services on startup, we no longer have to fear this issue and we can keep the module's libraries up-to-date.",Improvement,High,Closed,"2018-01-26 02:54:53","2018-01-26 02:54:53",5
"The Titanium SDK ","iOS: Support iOS 12 and Xcode 10","This epic will track all the items required to enable support for iOS 12",Epic,High,Closed,"2018-01-25 22:27:53","2018-01-25 22:27:53",0
"The Titanium SDK ","Android: Add VideoPlayer showsControls property","*Summary:*  As of Titanium 7.0.0, we've added VideoPlayer.showsControls property for iOS to show/hide the overlaid video controls. We should do the same on Android for parity.  http://docs.<USER>com/platform/latest/#!/api/Titanium.Media.VideoPlayer-property-showsControls    *Test:*  Once this feature is implemented, run the below code on Android and verify that the video player does not show any overlaid controls when the video is tapped on.      ",Improvement,Medium,Closed,"2018-01-24 21:40:43","2018-01-24 21:40:43",1
"The Titanium SDK ","Add support for promises to Titanium and Alloy","As a developer,  I want to be able to use libraries that depend on JavaScript Promises,  So that I can have out-0f-box support for a wider range of modules.    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises    I have been using JavaScript promises in my code for years but the only way to use modules that depend on Promises is to add support myself.  It would be great if Titanium added built-in support for Promises.    I think it would be a relatively small change.  Just add bluebird (http://bluebirdjs.com/docs/getting-started.html) and add a global variable Promise.     Let me know if you have any questions.  Thanks!",Improvement,Critical,Closed,"2018-01-24 14:28:03","2018-01-24 14:28:03",0
"The Titanium SDK ","iOS: Local image is not loading to the webveiw.","Issue: Image path is not getting in webview. I would like to set a background image to the webView but it does not work. The image is located in the assets folder. But it works as expected on Android.    Steps to Reproduce:    1. Create a new Alloy project  2. Place an image to the assets>>images folder  3. Run the following test code to the iOS device     {code:title=index.xml}  <Alloy>   <Window id=win>    <WebView id=webview backgroundImage=/images/test.jpg></WebView>   </Window>  </Alloy>  ",Bug,None,Closed,"2018-01-23 09:05:40","2018-01-23 09:05:40",0
"The Titanium SDK ","Windows: Network.TCP causes app crash","Application crashes when there's runtime error during TCP callback. For example, following app crashes without any error logs.        Expected: This Titanium app should not crash. This should alert {{Can't find variable: port}} because there's runtime error in {{connected}} callback (the variable {{port}} is not defined).    Here's a sample server code to debug the issue. Launch this using {{node server.js}} in Node.js in order to test this.    ",Bug,High,Closed,"2018-01-23 06:09:40","2018-01-23 06:09:40",3
"The Titanium SDK ","Hyperloop: Android- Cannot start native media Player.","Issue: Can not start native media player. It throws an error like Uncaught TypeError: Cannot read property 'start' of null    Steps to Reproduce:    1. Create a new Alloy project.  2. Place the attached .mp3 file to the assets folder.  3. Then run the following test code.    {code:title=index.js}  var MediaPlayer = require('android.media.MediaPlayer');  var Activity = require('android.app.Activity'),      am = require('android.content.res.AssetManager'),      fis = require('java.io.FileInputStream');    var View = require('android.view.View');  var activity = new Activity(Ti.Android.currentActivity);  var context = activity.getApplicationContext();  var mPlayer = new MediaPlayer(activity);    var mPlayer = MediaPlayer.create(context, five.mp3);    function doClick() {   mPlayer.start();    }    $.containerWin.open();        {code:title=error}  [ERROR] :  TiExceptionHandler: (main) [692901,692901] ----- Titanium Javascript Runtime Error -----  [ERROR] :  TiExceptionHandler: (main) [0,692901] - In undefined:69,11  [ERROR] :  TiExceptionHandler: (main) [0,692901] - Message: Uncaught TypeError: Cannot read property 'start' of null  [ERROR] :  TiExceptionHandler: (main) [0,692901] - Source:   mPlayer.start();  [ERROR] :  V8Exception: Exception occurred at undefined:69: Uncaught TypeError: Cannot read property 'start' of null  {code}    Thanks",Bug,None,Closed,"2018-01-23 02:44:27","2018-01-23 02:44:27",0
"The Titanium SDK ","Windows: Pickers populated at run time do not fire change events","Hello,   When creating a picker on windows and populating it after the view has been opened the change event does not fire.     *Test Environment:*  <USER>Command-Line Interface, version 7.0.1  SDK: 7.0.1.GA  Operating System   Name = Microsoft Windows 10 Enterprise 2016 LTSB   Windows 10 emulator    *Test Code:*    index.js    index.tss    *Steps to Reproduce:*  - Open the sample app attached   - Click on the populate picker label   - Select an item from the picker   - Change event does not fire.     - Click on the create picker label   - Select an item from the new picker   - Change event fires     *Expected Result:*  When clicking on one of the newly added properties of the picker the change event should fire.     *Actual Result:*   The new property is selected but the change event does not fire.   ",Bug,High,Closed,"2018-01-22 20:14:21","2018-01-22 20:14:21",5
"The Titanium SDK ","Windows: ti.xaml.listview module does not build","*ti.xaml.listview* module does not build on 7.0.1     *Test Environments:*  <USER>Command-Line Interface, version 7.0.1   Titanium SDK 7.0.1.GA   Operating System Microsoft Windows 10, Enterprise 10.0.16299, Architecture 64bit, CPUs 4,Memory 6338011136   Node.js Version = 8.9.1   npm Version = 5.5.1   Titanium CLI Version = 5.0.14   Titanium SDK Version = 7.0.1  .GA   Windows Phone emulator: 10-0-1       *Test Code*:[Sample Project|https://www.dropbox.com/s/7dwj4s753qles4e/BlankApp-win-ti-xaml-list-view-tests.zip?dl=0]    *Test Steps:*    1) Open studio and inport the app   4) Run the project via emulator     *Console logs:*      *Note:*    Tested the *ti.xaml.listview* module  from github [link| https://github.com/<USER>modules/ti.xaml.listview/releases] and it provides exception during compile.    ",Bug,High,Closed,"2018-01-22 06:48:38","2018-01-22 06:48:38",3
"The Titanium SDK ","Android: TabGroup 'close' event is never fired","- {{Titanium.UI.TabGroup}} never fires {{close}} event    {code:js}  var win = Ti.UI.createWindow(),   tabGroup = Ti.UI.createTabGroup();   tab = Ti.UI.createTab({    title: 'Tab',    window: win   });    tabGroup.addEventListener('close', function () {   console.log('TabGroup.close()');  });    tabGroup.addTab(tab);  tabGroup.open();  {code}",Bug,Medium,Closed,"2018-01-19 00:19:41","2018-01-19 00:19:41",5
"The Titanium SDK ","iOS: Expose UIInterpolatingMotionEffect Horizontal and Vertical","Adds iOS homescreen like parallax effect to views based on <USER>s module https://github.com/<USER>TiMotionEffects    How to use it:      {code:js}  var win = Ti.UI.createWindow({      backgroundColor: '#fff'  });    var background = Ti.UI.createImageView({   image: 'http://web-features.net/pb-examples/rainbow-at-sea/bg.jpg',   horizontalMotionEffect: {    min: -50,    max: 50   },   verticalMotionEffect: {    min: -50,    max: 50   }  });  win.add(background);    win.open();  {code}    ","New Feature",Critical,Closed,"2018-01-18 15:12:39","2018-01-18 15:12:39",5
"The Titanium SDK ","iOS: Address Ti.Filesystem parity issues, refactor Ti.Filesystem API's, fix broken tests","There are a couple of Ti.Filesystem.File API's that are not available on iOS according to the documentation:  * copy(newPath)  * readonly  * parent    Also, some unit-tests are not working because:  * createTimestamp() and modificationTimestamp() return a different value (Date) than they should (Number)  * File-errors are muted, they should be logged on the error-level and the method should continue as before (no breaking change)  *  Return types are {{id}} instead of their proper type (TiBlob, TiFile, NSString, NSNumber). Not a biggie, but may look confusing to contributors     While {{copy()}} was not available so far, the properties {{readonly}} and {{parent}} already but haven't been documented to be available.",Improvement,Medium,Closed,"2018-01-18 13:11:57","2018-01-18 13:11:57",8
"The Titanium SDK ","iOS: Ti.Media.audioSessionCategory not working correctly for an audioRecorder app.","We are building an app wherein audio recording and playing audio files is a requirement.  The problem we are facing now is when a music app(Spotify/sound-cloud) is playing an audio while we record audio using app the music app pauses the audio but when recording is stopped the music app audio is not resumed.    we have tried all sessionCategories but none of these works.  AUDIO_SESSION_CATEGORY_AMBIENT  AUDIO_SESSION_CATEGORY_PLAYBACK  AUDIO_SESSION_CATEGORY_PLAY_AND_RECORD  AUDIO_SESSION_CATEGORY_RECORD  AUDIO_SESSION_CATEGORY_SOLO_AMBIENT",Bug,Critical,Closed,"2018-01-17 18:49:39","2018-01-17 18:49:39",2
"The Titanium SDK ","Windows: Support ARM64 build target","It is being said that [supporting ARM desktop|TIMOB-25603] requires 64 bit build. ","New Feature",Medium,Open,"2018-01-17 06:05:12","2018-01-17 06:05:12",13
"The Titanium SDK ","Android: Crash when setting wrong accuracy in Ti.Geolocation","*Problem:*  I was using a not supported accuracy for Ti.Geolocation on Android:  {{Ti.Geolocation.accuracy = Ti.Geolocation.ACCURACY_BEST_FOR_NAVIGATION;}}  which is only supported on iOS and ended up with this crash:          *Solution:*  It shouldn't produce a hard crash with this error message but use a fallback (LOW) and display an error message. Perhaps there are other parts that would produces this crash too if org.<USER>titanium.util.TiConvert.toInt(java.lang.Object) (TiConvert.java:415) is the culprit.    *Solution/Workaround:*  Switching to {{Ti.Geolocation.accuracy = Ti.Geolocation.ACCURACY_LOW;}} works fine again.",Bug,Critical,Closed,"2017-12-28 10:26:33","2017-12-28 10:26:33",1
"The Titanium SDK ","Android: Window transitions are not enabled unless a shared element exists","- {{hasActivityTransitions}} incorrectly requires at least one sharedElement to be defined in order to return {{true}}    {code:js}  var win = Ti.UI.createWindow({          backgroundColor: 'blue',          layout: 'vertical'      }),      lbl = Ti.UI.createLabel({          left: 5,          text: 'TEST LABEL',          transitionName: 'lbl'      }),      btn = Ti.UI.createButton({          title: 'OPEN'      });    btn.addEventListener('click', function () {      var win2 = Ti.UI.createWindow({              backgroundColor: 'red',              layout: 'vertical',              activityEnterTransition: Titanium.UI.Android.TRANSITION_SLIDE_RIGHT          }),          lbl2 = Ti.UI.createLabel({              right: 5,              text: 'TEST LABEL',              transitionName: 'lbl'          }),          btn2 = Ti.UI.createButton({              title: 'CLOSE'          });        btn2.addEventListener('click', function () {          win2.close();      });        win2.add([lbl2, btn2]);      // win2.addSharedElement(lbl, 'lbl'); // this should not need uncommenting to see a Window transition        win2.open();  });    win.add([lbl, btn]);  win.open();  {code}",Bug,High,Closed,"2018-01-16 21:39:33","2018-01-16 21:39:33",2
"The Titanium SDK ","iOS: HTTPClient unit-test sometimes fails because of incorrect states","The following test-case sometimes fails because the {{onreadystate}} event fires before the {{ondatastream}} one. There are also cases where the {{orreadystate}} fires one state twice because the states are lost as a result of a race condition when sending out the events.    The proposed fix (working 20/20 times so far) is to ensure we are firing events to the client serial (blocking) on the main-thread. This ensures all state events get queued correctly and fixes the above issues.    Before:    After:  ",Bug,High,Closed,"2018-01-16 08:41:15","2018-01-16 08:41:15",2
"The Titanium SDK ","iOS: Address 10+ compiler warnings and general issues in source project","We currently have a number of (non-critical) warnings in the iOS source, caused by some PR's over the last months. Examples  * Unknown selector-warnings because of text-field changes (selector is in place, but not referenced correctly)  * Unknown selector-warning because of APSAnalytics (a recent updated missed to expose it)  * Deprecating warnings (about AUTHORIZATION_AUTHORIZED which is technically identical to AUTHORIZATION_ALWAYS)  * Missing 1024x1024px launch-screen (development-only, missing since Xcode 9 update)  * Fix memory leaks  * Fix an issue where the VideoPlayer would crash after closing and waiting for deallocation (~ 30s)  * Fix an issue where the thumbnail-generation of the video-player would block the UI    To fix this, it requires two small PR's to aps_sdk and titanium_mobile",Bug,High,Closed,"2018-01-14 15:34:32","2018-01-14 15:34:32",5
"The Titanium SDK ","Android: Not all TextField return key types fire a return event","Setting *returnKeyType* on *TextField* does not fire *return* event in case of some particular values.     Here's a sample code to show it with possible values where return event fired up & for some other values which it doesn't get fired for. I am also aware that not all return-types are not for Android but they should not prevent *return event* to get called.          ",Bug,Critical,Closed,"2018-01-09 15:38:46","2018-01-09 15:38:46",13
"The Titanium SDK ","Android: scalingMode - VIDEO_SCALING_RESIZE_ASPECT_FILL not working since upgrading to Ti SDK 7.0.x","Since upgrading to Ti SDK 7.x and finding that `Ti.Media.VIDEO_SCALING_ASPECT_FILL` has been removed I changed to `Ti.Media.VIDEO_SCALING_RESIZE_ASPECT_FILL`. This works on iOS but on Android, it acts like `Ti.Media.VIDEO_SCALING_RESIZE_ASPECT` which resizes to fit the available area. Here is my embed code:    `<VideoPlayer id=videoPlayer ns=Ti.Media url=/video/intro.mp4 sourceType=Ti.Media.VIDEO_SOURCE_TYPE_FILE scalingMode= Ti.Media.VIDEO_SCALING_RESIZE_ASPECT_FILL backgroundColor=#D0EAED onComplete=complete autoplay=false />`    Attached is a screenshot. You can see the bar down the left side where the video has not stretched to fill.",Bug,Critical,Closed,"2018-01-12 06:09:12","2018-01-12 06:09:12",1
"The Titanium SDK ","Android: when using Ti.UI.Toolbar as ActionBar, onHomeIconItemSelected doesn't work","I'm using a Toolbar as an ActionBar and I want to show the left drawer menu when clicking on the navigation icon, but the problem is that nothing happens when I click it.    Check my code below.    view/xml:  {code:xml}  <Alloy>   <Window class=container id=window onOpen=open title=Directions List >        <DrawerLayout id=drawerLayout>          <LeftView>           </LeftView>          <CenterView>      <View>       <Toolbar        title=Directions List        width=Ti.UI.FILL        elevation=10        top=0        barColor=#db4337        titleTextColor=white        displayHomeAsUp=true        homeButtonEnabled=true         id=actionBar        navigationIcon=/icons/nav_menu_white.png / >                 <Label text=test />             </View>       </CenterView>    </DrawerLayout>     </Window>  </Alloy>  {code}    style/tss:  {code:css}  Window:{   theme : 'AppTheme.TransBtns.Drawer',   windowSoftInputMode: Ti.UI.Android.SOFT_INPUT_STATE_HIDDEN  }  {code}    android theme:  {code:xml}  <style name=AppTheme.TransBtns.Drawer parent=Theme.AppCompat.Light.DarkActionBar>       <item name=windowActionBar>false</item>          <item name=windowNoTitle>true</item>   <item name=android:buttonStyle>    @style/Widget.AppCompat.Button.Borderless.Colored   </item>  </style>  {code}    controller/js:   {code:javascript}  function open() {   var activity = $.window.getActivity();      if (activity) {    var actionBar = activity.getActionBar();    if (actionBar) {     actionBar.displayHomeAsUp = true;     actionBar.onHomeIconItemSelected = function() {      $.drawerLayout.toggleLeft();     };    }   }  }  {code}    I tried showing on console the value of activity.getActionBar() and apparently it shows the value of the original ActionBar, the one which isn't visible, instead of showing the Toolbar.    I also tried this but nothing happens:  {code:javascript}  // $.actionBar is the id of the Toolbar  $.actionBar.onHomeIconItemSelected = function() {   $.drawerLayout.toggleLeft();  };  {code}",Bug,Critical,Closed,"2018-01-12 11:39:38","2018-01-12 11:39:38",0
"The Titanium SDK ","Android: HintTextColor for SearchView","*Problem:*  The {{Ti.UI.Android.SearchView}} has no property to change the {{hintTextColor}}. In a light theme the color is always white and you can't see the hintText.    *Solution:*  Add {{hintTextColor}} as a property. Since it is Android-only no parity is needed.    *Example*  ",Improvement,Critical,Closed,"2018-01-13 15:18:44","2018-01-13 15:18:44",5
"The Titanium SDK ","Android: Add TableView scrollable property support","*Summary:*  A TableView on iOS supports a scrollable property which can enable/disable touch scrolling by the end-user. We should add support on Android as well for parity.  _(Note: Android ListViews already supports a similar feature.)_    *Test:*        ",Improvement,Low,Closed,"2018-01-13 02:37:31","2018-01-13 02:37:31",1
"The Titanium SDK ","Android: Glitchy rotation animation occurs with views with borders in Android 7.0 and above","I am using Circular progress widget(https://github.com/manumaticx/circularprogress), in that as per my project requirement I need to rotate the view for that I have added the below code:        this is working fine in all the Android and iOS devices except Android OS version 7. Please see the attachment file, Android 7 should work as like that.    If I just add this property *autoreverse : true* then the Circular view is showing but not the correct position.    *Actual Behaviour:* Android v7.0.0  Circular view and animation is not working properly.    *Expected Behaviour:* Need's to support the Android 7.0.0 as well.    Test Code:     I have attached the App folder please run it on Android 7.0.0 and other devices for the difference.     Let me know if you need anything else.",Bug,Medium,Reopened,"2018-01-11 09:54:30","2018-01-11 09:54:30",3
"The Titanium SDK ","Android: ListView 'canScroll' property cannot be set dynamically","The 'canScroll' property on ListView for Android cannot be dynamically set. It has been implemented as a creation-only property. Please introduce a dynamic capability to run {color:red}listView.setCanScroll(false){color}; in android. This works correctly in iOS already.    Test case:      ",Bug,Medium,Closed,"2018-01-10 23:04:26","2018-01-10 23:04:26",1
"The Titanium SDK ","iOS: Build fails with Titanium SDK 7.0.1.GA","*ERROR ON : Device (iPhone 5s)*  The following build commands failed:  [ERROR] :   Ld build/Intermediates/SampleApp.build/Debug-iphoneos/SampleApp.build/Objects-normal/arm64/SampleApp normal arm64    *ERROR ON :  Simulator*   The following build commands failed:  [ERROR] :   Ld build/Products/Debug-iphonesimulator/SampleApp.app/SampleApp normal x86_64    *NOTE : the application build works fine with Ti SDK 6.1.0*",Bug,Critical,Closed,"2018-01-10 09:02:12","2018-01-10 09:02:12",2
"The Titanium SDK ","Android. TiViewProxy.getOrCreateView returns null on Titanium 7.0.0+","Before 7.0.0 TiViewProxy.getOrCreateView() never returned null. Now it does.    [Breaking commit|https://github.com/<USER>titanium_mobile/commit/58ffbd5147faa90259d805957ab8957c7a84b912#diff-bec22e2efdd8b352a7754ea42f435dc7R487]    In attached example I use DrawerLayout, but problem can appear in every module which use getOrCreateView() without checking result for null.",Bug,Critical,Closed,"2018-01-09 11:16:35","2018-01-09 11:16:35",3
"The Titanium SDK ","iOS: Duplicate tiapp key in Geolocation error logging","`kTiGeolocationUsageDescriptionAlwaysAndWhenInUse` was logged twice, replaced it with `kTiGeolocationUsageDescriptionWhenInUse`    h5.Steps to reproduce    - Add the code below to an app.js and build to iOS      h5.Expected    {{\[ERROR\] The NSLocationAlwaysUsageDescription, NSLocationWhenInUseUsageDescription and NSLocationAlwaysAndWhenInUseUsageDescription key must be defined in your tiapp.xml in order to request this permission.}} should be logged      h5.Current    {{\[ERROR\] The NSLocationAlwaysAndWhenInUseUsageDescription, NSLocationAlwaysUsageDescription and NSLocationAlwaysAndWhenInUseUsageDescription key must be defined in your tiapp.xml in order to request this permission.}} is logged        ",Bug,Low,Resolved,"2018-01-09 10:39:16","2018-01-09 10:39:16",2
"The Titanium SDK ","iOS: Ad-hoc build fails when packaging with WatchApp","h5. Issue.   Ad-hoc building of application with Watch app fails with the output below. The Ad Hoc provisioning profiles are up to date and associated with the signing identity. The same set-up works using Xcode 8.3.3/ 9.2 and Ti 6.2.1. Other apps with no associated watch apps build without issue.     h5. Error:   {quote}[DEBUG] Packaging IPA for target dist-adhoc   [DEBUG] Deleting old .ipa file   [DEBUG] Running: /Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild -exportArchive -archivePath /Users/ian/git/mobile/wralnews/build/iphone/WRAL_News.xcarchive -exportPath /Users/ian/Desktop -exportOptionsPlist /Users/ian/git/mobile/wralnews/build/iphone/export_options.plist   [TRACE] 2018-01-04 17:52:47.391 xcodebuild[53745:14054966] [MT] IDEDistribution: -[IDEDistributionLogging _createLoggingBundleAtPath:]: Created bundle at path '/var/folders/m5/plphwvdn33xcbfzbspj8qxgm0000gn/T/WRAL_News_2018-01-04_17-52-47.390.xcdistributionlogs'.   [TRACE] 2018-01-04 17:52:47.886 xcodebuild[53745:14054966] [MT] IDEDistribution: Step failed: <IDEDistributionSigningAssetsStep: 0x7f8594246f00>: Error Domain=IDEDistributionSigningAssetStepErrorDomain Code=0 Locating signing assets failed. UserInfo={NSLocalizedDescription=Locating signing assets failed., IDEDistributionSigningAssetStepUnderlyingErrors=(   [TRACE] Error Domain=IDEProvisioningErrorDomain Code=9 \\WRAL WatchApp.app\ requires a provisioning profile.\ UserInfo={NSLocalizedDescription=\WRAL WatchApp.app\ requires a provisioning profile., NSLocalizedRecoverySuggestion=Add a profile to the \provisioningProfiles\ dictionary in your Export Options property list.},   [TRACE] Error Domain=IDEProvisioningErrorDomain Code=9 \\WRAL WatchApp Extension.appex\ requires a provisioning profile.\ UserInfo={NSLocalizedDescription=\WRAL WatchApp Extension.appex\ requires a provisioning profile., NSLocalizedRecoverySuggestion=Add a profile to the \provisioningProfiles\ dictionary in your Export Options property list.}   [TRACE] )}   [TRACE] error: exportArchive: WRAL WatchApp.app requires a provisioning profile.   [TRACE]   [TRACE] Error Domain=IDEProvisioningErrorDomain Code=9 WRAL WatchApp.app requires a provisioning profile. UserInfo={NSLocalizedDescription=WRAL WatchApp.app requires a provisioning profile., NSLocalizedRecoverySuggestion=Add a profile to the provisioningProfiles dictionary in your Export Options property list.}   [TRACE]   [TRACE] error: exportArchive: WRAL WatchApp Extension.appex requires a provisioning profile.   [TRACE]   [TRACE] Error Domain=IDEProvisioningErrorDomain Code=9 WRAL WatchApp Extension.appex requires a provisioning profile. UserInfo={NSLocalizedDescription=WRAL WatchApp Extension.appex requires a provisioning profile., NSLocalizedRecoverySuggestion=Add a profile to the provisioningProfiles dictionary in your Export Options property list.}   [ERROR] Failed to export archive to ipa   [ERROR] The selected provisioning profile <REDACTED> is most likely not a valid Ad Hoc provisioning profile.   [ERROR] Please ensure you are using a valid Ad Hoc provisioning that is linked to the signing identity, then try again. {quote}    h5.  contents of export_options.plist  {quote}<?xml version=1.0 encoding=UTF-8?>   <!DOCTYPE plist PUBLIC -//Apple//DTD PLIST 1.0//EN http://www.apple.com/DTDs/PropertyList-1.0.dtd>   <plist version=1.0>   <dict>   <key>method</key>   <string>ad-hoc</string>   <key>teamId</key>   <string><REDACTED></string>   <key>signingCertificate</key>   <string>iPhone Distribution: <REDACTED></string>   <key>provisioningProfiles</key>   <dict>   <key><REDACTED></key>   <string><REDACTED></string>   </dict>   </dict>   </plist> {quote}    h5. How to reproduce:  Create iOS app with Watch app associated  Package with Ad-Hoc profile",Bug,High,Closed,"2018-01-08 20:44:05","2018-01-08 20:44:05",3
"The Titanium SDK ","Upgrade to babel 7","h5.Description    I believe the babel 7 release is a little while off (it's been cooking since February 2017), but I wanted to get a ticket in to track it on our side.    Tasking it out I think the following needs to be done (will maybe break these out into sub-tasks of this ticket)    * Update node-titanium-sdk  ** Move to {{@babel/core, @babel/traverse, @babel/types, babel-preset-minify}}, and upgrading {{babylon}}  * titanium_mobile/titanium_mobile_windows, update all {{require('babel-X')}}, as needed    * Ensure nothing is broke :)    It might be worthwhile getting some feature branches setup to get some builds setup with the beta versions of these (currently 7.0.0-beta.36 at time of writing)    Some reading that might be useful    https://babeljs.io/blog/2017/12/27/nearing-the-7.0-release  https://babeljs.io/blog/2017/09/12/planning-for-7.0  https://babeljs.io/blog/2017/03/01/upgrade-to-babel-7",Story,High,Closed,"2018-01-08 11:15:06","2018-01-08 11:15:06",8
"The Titanium SDK ","Hyperloop: hyperloop support for insertSDK frame work for iOS and Android","Hello,    A customer is trying to add the insertSDK framework(acquired by pendo) used for analytics into alloy project. Is it possible to call third-party native ios(swift ) SDK from appc if yes, can you provide a sample app? Because the SDK He's trying to integrate has *.plist* and *url schemas* to configure and view controller lifecycle methods to initiate during runtime.     Here is the attachment of the SDK information and how it works on [*this*|https://drive.google.com/file/d/1w2yQgr7L-mRqzeLFZJqyAdaXyQyZ0BRU/view?usp=sharing] link. Can anyone from your technical team assist the customer whether it is possible to integrate with APPC or not before he takes any other step further?    Thanks",Story,None,Closed,"2018-01-06 12:32:27","2018-01-06 12:32:27",5
"The Titanium SDK ","Windows: Implement Ti.UI.Label.minimumFontSize and maxLines","In some cases we want to make sure to display entire text even when Label space is small. We have useful property for it ([Ti.UI.Label.minimumFontSize|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Label-property-minimumFontSize]) on other platforms. According to the doc, Label's font will be auto-downscaled so that its text will fit the label's width if necessary.    Unfortunately, it is not implemented yet for the Windows platform.","New Feature",Medium,Closed,"2018-01-05 01:01:20","2018-01-05 01:01:20",13
"The Titanium SDK ","iOS: Unable to click ListView last item","h5. description  when using listview search you are unable to click the last item     h5. how to reproduce  Run attached project  go to ListView   Search Data1   Do some Scrolling   Click on the Last item   Alert box is used to verify if the right item was selected, But a different item info shows up in the alert box.    h5. Project   [^LIstViewSearchFailing.zip]     h5. Additional information  customer has a pending release in the upcoming weeks and is considering this urgen.",Bug,None,Closed,"2018-01-04 21:54:19","2018-01-04 21:54:19",3
"The Titanium SDK ","Windows: View.add should be ignored when it's ready added","TIMOB-25465 and TIMOB-25639 show that rendering issue happens when you try to {{add}} a view that is already added. According to the current code, we are not actually checking if the View is already added but just leaves the platform behavior how to render it in that case. We should just ignore the {{add}} operation when it is already added.  ",Story,High,Closed,"2018-01-03 08:52:34","2018-01-03 08:52:34",5
"The Titanium SDK ","iOS: Callback of requestThumbnailImagesAtTimes is not fired","I'm trying to get video thumbnail using the below snippet code, but requestThumbnailImagesAtTimes doesn't call the callback at all on iOS, while it works on android.    requestThumbnailImagesAtTimes, is used on a local video, I tried bot to set the URL, or media but doesn't seem to work.        ",Bug,Critical,Resolved,"2017-12-28 16:03:50","2017-12-28 16:03:50",2
"The Titanium SDK ","Android: Calling ScrollableView's setters causes a crash if parent window is closed as of 7.0.0","Hi,    We are migrating our app from 6.3.0GA Ti SDK to 7.0.0.GA SDK and we are facing couple of issues:    1. In a window, we are using scrollable view and on close of window we are emptying the views of scrollable view by using scrollableView.views = []. with 6.3.0.GA it is working fine but with 7.0.0.GA we are getting error stating     2. In a window, we are using activity indicator and on close of that window we are hiding activity indicator by activityIndicator.hide(). with 6.3.0.GA it is working fine but with 7.0.0.GA we are getting error stating         Steps to reproduce the issues:  1. Create a sample classic project  2. Copy the attached files and paste them into resources folder  3. Run the App on android device  4. Click on the label “click to view scrollable window”, once window is opened click on android back button.  5. Click on label “click to show indicator”, once window is opened click on android back button.      Note : This is an issue in android platform.   Even tried with 7.0.1.GA sdk still we are facing these issues.  ",Bug,High,Closed,"2017-12-28 16:44:50","2017-12-28 16:44:50",1
"The Titanium SDK ","Android: Multi-View Viewpager (ScrollableView)","In iOS it is possible to set {{clipViews}} to display the previous and next page in a ScrollableView. Android doesn't have this feature but it would be nice to display multiple views, too.    The following resources have good examples on how to implement it in different ways:  https://commonsware.com/blog/2012/08/20/multiple-view-viewpager-options.html  https://stackoverflow.com/a/21239185  https://github.com/br00/android-viewpager-multiple-pages    Adding {{pager.setPageMargin(-200)}} in [TiUIScrollableView|https://github.com/<USER>titanium_mobile/blob/b758504ce898d0e93e461849cbb8975283da85bc/android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUIScrollableView.java#L118] already helped to get this effect.","New Feature",Critical,Closed,"2017-12-18 21:11:52","2017-12-18 21:11:52",13
"The Titanium SDK ","Android: ScrollableView cacheSize cannot by dynamically changed","On Android, calling ScrollableView's setCacheSize method is throwing error:        I also looked out in the SDK source code & seems this method is missing in Android (perhaps iOS as well) source code.    *There's no way at present we can set dynamic cacheSize. we can set it at creation only.*",Bug,Low,Closed,"2017-12-26 10:12:18","2017-12-26 10:12:18",1
"The Titanium SDK ","Android: Add androidback callback property to camera overlay","*Summary:*  When showing a camera overlay on Android (ie: use camera in-app instead of 3rd party camera app), you are unable to override the Back button. We should support his by adding a new androidback callback property like this.        ",Improvement,Medium,Closed,"2017-12-23 21:17:48","2017-12-23 21:17:48",5
"The Titanium SDK ","iOS: Unable to get x,y coordinates with respect to screen size","Hello,    Unable to get x,y coordinates with respect to the screen size on iOS. But android its showing the value. We are able to achieve this in the Android using the “e.source.rect.x” and “e.source.rect.y” properties on click of the image view. But considering iOS, we are not seeing any rect property within the “e”.    *Test Environment:*  <USER>Command-Line Interface, version 7.0.0 and 7.0.1  SDK: 7.0.0.GA and 7.0.1.GA  iOS simulator  *Test Code:*      *Steps to reproduce :*  1) Create a sample project   2) Copy the above code app.js file.   3) Place the attached images in the resources/iphone/images/ folder.   4) Click on any imageview.     *iOS out comes:*      *Android Output:*    Thanks",Story,None,Closed,"2017-12-27 16:07:41","2017-12-27 16:07:41",3
"The Titanium SDK ","Android : Webview with fullscreen window not working as expected","I am coming across an issue with webview for android. I have explained it in this screencast (video/audio).   https://screencast-o-matic.com/watch/cblZFY29zJ    Steps:  1. Create an example apps with fullscreen window.  2. Add a webview with the following URL : https://wallet.gbsinfosolutions.com/index.php/mobile-topup'  3. Click on cardholder name text field in webview.  4. Webview stopped scroll     Note: This issue only for Android with fullscreen window.    Test Code :  {code}  var webview = Titanium.UI.createWebView({   url : 'https://wallet.gbsinfosolutions.com/index.php/mobile-topup'  });  var window = Titanium.UI.createWindow({   fullscreen:true  });  window.add(webview);  window.open({   modal : true  });  {code}  {code:xml}  <android xmlns:android=http://schemas.android.com/apk/res/android>  <manifest>  <application android:theme=@style/Theme.AppCompat.Translucent.NoTitleBar.Fullscreen/>  </manifest>  </android>  {code}      ",Bug,None,Closed,"2017-12-25 18:20:15","2017-12-25 18:20:15",3
"The Titanium SDK ","Android: ScrollableView Ti.UI.SIZE is ignored for width","*Summary:*  Setting a ScrollableView's width to Ti.UI.SIZE doesn't shrink the container to fit the currently displayed view/page. It always does an equivalent to Ti.UI.FILL instead.  (This works on iOS.)    *Steps to Reproduce:*  # Build and run the below code on Android.  # Notice that the gray ScrollableView container completely fills the window width-wise.  # Scroll to the right until you see the purple view.  # Notice the gray ScrollableView's width never changes. It always fills the window.        *Expected Result:*  Width of the ScrollableView should change to just-fit its child view contents.  ",Bug,Medium,Closed,"2017-12-23 03:41:30","2017-12-23 03:41:30",5
"The Titanium SDK ","Android: ScrollableView left/right page arrows are not density scaled","*Summary:*  On Android, a ScrollableView's left/right paging arrows are hard-coded to 80x80 pixels. They appear very large on a low DPI screen (such as hdpi) and small on a high DPI screen (such as xxxhdpi).    *Steps to Reproduce:*    # Build and run the below code on an hdpi device.  # Scroll to the right in the ScrollableView.  # Note the very LARGE left/right arrows that are overlaid on the view.  # Run the below code on an xxxhdpi device.  # Scroll to the right in the ScrollableView.  # Note the very small left/right arrows that are overlaid on the view.        *Expected Result:*  The left/right arrows should be density scaled so that they appear to have a similar physical size (in inches) between different DPI devices.  ",Bug,None,Closed,"2017-12-23 02:47:07","2017-12-23 02:47:07",1
"The Titanium SDK ","Androd: tabDividerColor for tab is not working.","Is there a way to change colour in TabGroup? (color of the divider between tabs)    The following appears on the documentation:    tabDividerColor : String  Color of the divider between tabs, as a color name or hex triplet.For information about color values, see the Colors section of Titanium.UI.    The above way doesn't work. Is there another solution?    Thank you in advance.      ","New Feature",Critical,Closed,"2017-12-19 10:43:43","2017-12-19 10:43:43",1
"The Titanium SDK ","autoAdjustScrollViewInsets fails with extendEdges: [Ti.UI.EXTEND_EDGE_TOP]","The autoAdjustScrollViewInsets has stopped working when extendEdges: [Ti.UI.EXTEND_EDGE_TOP] is applied. This was working up until Ti SDK 6.2.2 and it stopped working from Ti SDK 6.3.0.GA onwards. It is still not fixed in the current SDK.    This affects both ListView and TableView components.    Refer to the test case below. The content is not correctly offset underneath the titlebar. The only workaround for the moment seems to be creating a 64dp tall 'spacer' view at the top of the list content.    Hans mentioned a possibly related fix in AC-5301 (TIMOB-25332) however that fix does not resolve the test case below.    Here is my sample code:    ",Bug,Critical,Closed,"2017-12-20 00:52:31","2017-12-20 00:52:31",5
"The Titanium SDK ","Android: Native libraries are not included with compiled Titanium modules","{{*.so}} libraries in the {{lib}} folder of a project are not included in the compiled module output    *TEST CASE*  - Compile the {{<USER>encrypteddatabase}} module  - Verify the appropriate {{*.so}} libraries are included in the {{.zip}} output  ",Bug,Critical,Closed,"2017-12-21 20:05:09","2017-12-21 20:05:09",3
"The Titanium SDK ","Android: SOASTA breaks Android 8.0+ WebView events","SOASTA prevents {{Titanium.UI.WebView}} events from firing.    *TEST CASE*  {code:js}  var win = Ti.UI.createWindow({          backgroundColor : 'gray'      }),      webView = Ti.UI.createWebView({          url : 'https://google.com'      });    webView.addEventListener('load', function(e) {      alert('source:' + JSON.stringify(e.source, null, 2));  });    win.add(webView);  win.open();  {code}    *EXPECTED*  - Should see an alert dialog after the page has loaded    *ACTUAL*  - {{load}} event is never fired",Bug,High,Closed,"2017-12-21 19:42:52","2017-12-21 19:42:52",8
"The Titanium SDK ","Android: previewImage() crashes when given a non-file based blob","*Summary:*  The media.previewImage() method will crash if given a blob whose image is not file based, such as a screenshot returned by View.toImage().    *Steps to Reproduce:*  # Build and run the below code on an Android device.  # Tap the Preview button.  # Select an app to preview the screenshot, if asked.        *Result:*  App crashes with the following stack trace...        *Expected Result:*  Should not crash. Should either display the in-memory image or invoke the error callback stating that the given blob must be file based. Ideally, the given memory based blob should be stored to a temp file and displayed.    *Work-Around:*  Titanium developer can save the blob to a temp file and preview the file instead.    *Note:*  The following pending PR will fix the TiBaseFile exception mentioned in the above stack trace...  https://github.com/<USER>titanium_mobile/pull/9223    However, the Java code proceeding the image.getData() method call in MediaModule.previewImage() still needs to be changed to handle a blob that'll return a null for its native file path.  https://github.com/<USER>titanium_mobile/blob/7_0_X/android/modules/media/src/java/ti/modules/titanium/media/MediaModule.java#L1148",Bug,Medium,Closed,"2017-12-20 02:33:36","2017-12-20 02:33:36",5
"The Titanium SDK ","Android: Push notifications not shown in statusbar on Android 8 if app is backgrounded","Regard to ticket [TIMOB-25501|https://jira.<USER>org/browse/TIMOB-25501], customer try to use SDK 7.0.0 and cloudpush 5.0.0 to verify if it fix the problem. But find another problem.    h6.Problem  Customers sent notifications from dashboard when the app is in background but not getting the notifications(or even not added to notification tray) even the sound property is removed.    h6.Note  This issue is only happened on Android 8.   Another device with Android 6.0.1 is working well.  ",Bug,Medium,Closed,"2017-12-19 12:22:24","2017-12-19 12:22:24",3
"The Titanium SDK ","Windows: Add option to suppress/force uninstallation on deploy","In TIMOB-25017, we've been seeing that the persistent in app properties are erased every time on the installation. We found that it is because WinAppDeployCmd fails when same version of the app is already installed, and then Titanium tries to uninstall existing app in order to complete the installation. We can suppress the uninstallation by bumping up the version in the tiapp.xml everytime on deployment, but sometimes uninstallation can be done unintentionally when you forget the bump. We might want a new option to suppress unintentional uninstallation by forcing {{--forceUnInstall}} or something explicitly.  ",Improvement,High,Closed,"2017-12-18 04:54:06","2017-12-18 04:54:06",5
"The Titanium SDK ","Need to include npm apps-license for license tracking","Per request, need to include npm apps-license for license tracking to projects:   apps-cli*  arrow  appc-install  studio  titanium*",Story,High,Resolved,"2017-12-14 21:38:55","2017-12-14 21:38:55",4
"The Titanium SDK ","Android DrawerLayout: Unexpected Behaviour when using Theme.AppCompat.Light.NoActionBar","h6.Problem  After removing actionBar by using @style/Theme.AppCompat.Light.NoActionBar, The centerWindow of DrawerLayout is leaving a black box in the top of screen. And the left and right Windows looks all right. (Attached screen shot.)    h6.Reproduce  1. Create a simple classic project.  2. Add following code to app,js    3. Add following lines to tiapp.xml    4. Add attached mytheme.xml file into ./platform/android/res/values folder  5. Run the app. You will see the problem.    h6.Note  1. The problem can be reproduce in both SDK 6.3.0 and 7.0.0.GA",Bug,None,Closed,"2017-12-14 03:09:37","2017-12-14 03:09:37",5
"The Titanium SDK ","Remove deprecated Ti.map API","The old deprecated Ti.map APIs included in the core SDK were deprecated in 3.2.0 and moved out to a native module we ship with the core. The old code should have been removed long, long ago, but has not been yet.",Story,High,Closed,"2017-12-13 20:48:38","2017-12-13 20:48:38",5
"The Titanium SDK ","Android: Apply clang-format formatting to all Java sources","The iOS-core has been around for a while now. We have moved from tabs to spaces over the years, moved to a unified code-style and are now formatting all methods and properties correctly during code-review.     We might want to use an automatic linting-solution that can be triggered via CLI, or regex-replace the issues. ",Story,High,Closed,"2017-12-13 20:45:54","2017-12-13 20:45:54",5
"The Titanium SDK ","Windows: Support Windows 10 ARM Desktop"," Currently Titanium is assuming Windows 10 Store app runs on x86/x64 device, but we will need {{ARM}} target for the destop app, because Microsoft is going to [launch Windows 10 desktop on ARM|https://techcrunch.com/2017/12/05/windows-10-on-arm-is-here-always-connected-devices/]. So in that sense we should be able to specify which architecture to build in command line, such as {{--architecture ARM}} on {{appc run}}.      ","New Feature",Medium,Open,"2017-12-13 03:41:23","2017-12-13 03:41:23",5
"The Titanium SDK ","Windows: Titanium.Filesystem ( Folder exists in real physical path but it always shows as false).","Steps to generate this problem:    Issue 1:  Folder exists in real physical path but it always shows as false.    var cDir;    if(Ti.Filesystem.isExternalStoragePresent())  {   cDir = Ti.Filesystem.externalStorageDirectory + /Attachments;  }  else  {   cDir = Ti.Filesystem.applicationDataDirectory + /Attachments;     }    var folder = Titanium.Filesystem.getFile(cDir);  if(!folder.exists()) //folder doesn't exists  {   folder.createDirectory(); //create folder. OK  }  //after creating folder, try to check if folder exists statement anywhere in code.  //it always shows as false even if folder is present.    Ti.API.info(folder exists: + folder.exists());      Issue 2:  Creating subfolder always makes application crash. Code:    var cDirTemp;  cDirTemp = cDir + /Temp;  var folderTemp = Titanium.Filesystem.getFile(cDirTemp);    if(!folderTemp.exists())   {   folderTemp.createDirectory(); //this line makes application crash.  }  else{   folderTemp.deleteDirectory(true);   folderTemp.createDirectory();  }    Testing code is attached for detail.",Bug,Critical,Closed,"2017-12-11 21:31:01","2017-12-11 21:31:01",5
"The Titanium SDK ","Android: V8 crash can occur when attempting to move weak Java ref to strong","This issue was found by [~<USER> whilst working on another issue.    It appears there's an issue when a weak Java reference is GC'd before being moved to a strong reference.    *TEST CASE*  - Select a couple of large images  - Repeatedly view each image until crash  {code:js}    var window = Ti.UI.createWindow();  var tableView = Ti.UI.createTableView(  {   width: Ti.UI.FILL,   height: Ti.UI.FILL,  });  window.add(tableView);  var addButton = Ti.UI.createButton(  {   title: Add,   left: 10dp,   bottom: 10dp,  });  addButton.addEventListener(click, function(e) {   var dialog = Ti.UI.createAlertDialog(   {    message: Which media type do you want to open?,    buttonNames: [Photo, Video, Both],   });   dialog.addEventListener(click, function(e) {    var mediaTypes;    if (e.index === 0) {     mediaTypes = [Ti.Media.MEDIA_TYPE_PHOTO];    } else if (e.index === 1) {     mediaTypes = [Ti.Media.MEDIA_TYPE_VIDEO];    } else if (e.index === 2) {     mediaTypes = [Ti.Media.MEDIA_TYPE_PHOTO, Ti.Media.MEDIA_TYPE_VIDEO];    } else {     Ti.API.info(@@@ Alert was canceled.);     return;    }    Ti.Media.openPhotoGallery(    {     allowMultiple: true,     allowEditing: false,     autohide: true,     mediaTypes: mediaTypes,     success: function(e) {      Ti.API.info(@@@ success() e:  + JSON.stringify(e));      var createRowFrom = function(selectionEvent) {       if (!selectionEvent || !selectionEvent.media) {        selectionEvent =        {         mediaType: null,         media:         {          file:          {           name: null,           nativePath: null          },         },        };       }       var fileName = null;       if (selectionEvent.media.file) {        fileName = selectionEvent.media.file.name;       }       if (!fileName) {        if (selectionEvent.mediaType === Ti.Media.MEDIA_TYPE_VIDEO) {         fileName = Unknown Video Name;        } else {         fileName = Unknown Image Name;        }       }       var row = Ti.UI.createTableViewRow({ title: fileName });       row.addEventListener(click, function(e) {        switch (selectionEvent.mediaType) {         case Ti.Media.MEDIA_TYPE_PHOTO:         case Ti.Media.MEDIA_TYPE_LIVEPHOTO:          var childWindow = Ti.UI.createWindow();          childWindow.add(Ti.UI.createImageView(          {           image: selectionEvent.media,           width: Ti.UI.FILL,           height: Ti.UI.FILL,          }));          childWindow.open();          break;         case Ti.Media.MEDIA_TYPE_VIDEO:          var childWindow = Ti.UI.createWindow();          childWindow.add(Ti.Media.createVideoPlayer(          {           url: selectionEvent.media.nativePath,           autoplay: true,           mediaControlStyle: Ti.Media.VIDEO_CONTROL_DEFAULT,           scalingMode: Ti.Media.VIDEO_SCALING_ASPECT_FIT,           width: Ti.UI.FILL,           height: Ti.UI.FILL,          }));          childWindow.open();          break;         default:          alert(Unknown media type selected.);          break;        }       });       return row;      };      if (e.images) {       for (var index = 0; index < e.images.length; index++) {        tableView.appendRow(createRowFrom(e.images[index]));       }      }      if (e.videos) {       for (var index = 0; index < e.videos.length; index++) {        tableView.appendRow(createRowFrom(e.videos[index]));       }      }     },     cancel: function() {      Ti.API.info(@@@ Photo gallery selection canceled.);     },     error: function() {      Ti.API.info(@@@ Photo gallery selection error.);     },    });   });   dialog.show();  });  window.add(addButton);  var clearButton = Ti.UI.createButton(  {   title: Clear,   right: 10dp,   bottom: 10dp,  });  clearButton.addEventListener(click, function(e) {   tableView.data = [];  });  window.add(clearButton);  window.open();    12-07 14:51:42.267  8482  8482 F libc    : Fatal signal 5 (SIGTRAP), code 1 in tid 8482 (lerator.testing)  12-07 14:51:42.322  8579  8579 I crash_dump64: obtaining output fd from tombstoned  12-07 14:51:42.322   745   745 I /system/bin/tombstoned: received crash request for pid 8482  12-07 14:51:42.323  8579  8579 I crash_dump64: performing dump of <USER>8482 (target tid = 8482)  12-07 14:51:42.323  8579  8579 F DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***  12-07 14:51:42.324  8579  8579 F DEBUG   : Build fingerprint: 'google/marlin/marlin:8.0.0/OPR6.170623.012/4283428:user/release-keys'  12-07 14:51:42.324  8579  8579 F DEBUG   : Revision: '0'  12-07 14:51:42.324  8579  8579 F DEBUG   : ABI: 'arm64'  12-07 14:51:42.324  8579  8579 F DEBUG   : pid: 8482, tid: 8482, name: lerator.testing  >>> com.<USER>testing <<<  12-07 14:51:42.324  8579  8579 F DEBUG   : signal 5 (SIGTRAP), code 1 (TRAP_BRKPT), fault addr 0x78b2b4d898  12-07 14:51:42.324  8579  8579 F DEBUG   :     x0   0000000000000001  x1   0000000000000000  x2   0000000000000000  x3   000000000000000c  12-07 14:51:42.324  8579  8579 F DEBUG   :     x4   000000000000007e  x5   000000788ed0e0f1  x6   000000000000000a  x7   000000000000000a  12-07 14:51:42.324  8579  8579 F DEBUG   :     x8   0000000000000000  x9   0000000000000001  x10  0000000000004001  x11  0000000000000000  12-07 14:51:42.324  8579  8579 F DEBUG   :     x12  00000078cd9319b8  x13  0a38353136373532  x14  00000078cd931d14  x15  0000000000000000  12-07 14:51:42.324  8579  8579 F DEBUG   :     x16  00000078cd94f2c0  x17  00000078cd8eed1c  x18  000000001300a780  x19  00000078b2e58000  12-07 14:51:42.324  8579  8579 F DEBUG   :     x20  00000078cd951658  x21  00000078b2bc66a8  x22  00000078b2c1be80  x23  00000078bc7022c8  12-07 14:51:42.324  8579  8579 F DEBUG   :     x24  00000000000000a9  x25  0000000000000003  x26  00000078bc7022b0  x27  00000078bc7022a0  12-07 14:51:42.324  8579  8579 F DEBUG   :     x28  0000007ff2d48bcf  x29  0000007ff2d48ab0  x30  00000078b2b4aff8  12-07 14:51:42.324  8579  8579 F DEBUG   :     sp   0000007ff2d48960  pc   00000078b2b4d898  pstate 0000000080000000  12-07 14:51:42.334  8579  8579 F DEBUG   :   12-07 14:51:42.334  8579  8579 F DEBUG   : backtrace:  12-07 14:51:42.334  8579  8579 F DEBUG   :     #00 pc 0000000000d56898  /data/app/com.<USER>testing-L5fqJNWjxitzyiZdU8-UPg==/lib/arm64/libkroll-v8.so (_ZN2v84base2OS5AbortEv+20)  12-07 14:51:42.334  8579  8579 F DEBUG   :     #01 pc 0000000000d53ff4  /data/app/com.<USER>testing-L5fqJNWjxitzyiZdU8-UPg==/lib/arm64/libkroll-v8.so (_Z8V8_FatalPKciS0_z+232)  12-07 14:51:42.334  8579  8579 F DEBUG   :     #02 pc 00000000009e4e7c  /data/app/com.<USER>testing-L5fqJNWjxitzyiZdU8-UPg==/lib/arm64/libkroll-v8.so (_ZN2v88internal13GlobalHandles8MakeWeakEPPNS0_6ObjectEPvPFvRKNS_16WeakCallbackInfoIvEEENS_16WeakCallbackTypeE+224)  12-07 14:51:42.335  8579  8579 F DEBUG   :     #03 pc 00000000004580b0  /data/app/com.<USER>testing-L5fqJNWjxitzyiZdU8-UPg==/lib/arm64/libkroll-v8.so (_ZN8titanium10JavaObject10MakeJSWeakEv+36)  12-07 14:51:42.335  8579  8579 F DEBUG   :     #04 pc 0000000000458274  /data/app/com.<USER>testing-L5fqJNWjxitzyiZdU8-UPg==/lib/arm64/libkroll-v8.so (_ZN8titanium10JavaObject13getJavaObjectEv+116)  12-07 14:51:42.335  8579  8579 F DEBUG   :     #05 pc 0000000000461318  /data/app/com.<USER>testing-L5fqJNWjxitzyiZdU8-UPg==/lib/arm64/libkroll-v8.so (_ZN8titanium13TypeConverter19jsValueToJavaObjectEPN2v87IsolateEP7_JNIEnvNS1_5LocalINS1_5ValueEEEPb+640)  12-07 14:51:42.335  8579  8579 F DEBUG   :     #06 pc 00000000004614a0  /data/app/com.<USER>testing-L5fqJNWjxitzyiZdU8-UPg==/lib/arm64/libkroll-v8.so (_ZN8titanium13TypeConverter19jsValueToJavaObjectEPN2v87IsolateEP7_JNIEnvNS1_5LocalINS1_5ValueEEEPb+1032)  12-07 14:51:42.335  8579  8579 F DEBUG   :     #07 pc 00000000004618f0  /data/app/com.<USER>testing-L5fqJNWjxitzyiZdU8-UPg==/lib/arm64/libkroll-v8.so (_ZN8titanium13TypeConverter29jsObjectIndexPropsToJavaArrayEPN2v87IsolateEP7_JNIEnvNS1_5LocalINS1_6ObjectEEEii+164)  12-07 14:51:42.335  8579  8579 F DEBUG   :     #08 pc 000000000045e14c  /data/app/com.<USER>testing-L5fqJNWjxitzyiZdU8-UPg==/lib/arm64/libkroll-v8.so (_ZN8titanium12ProxyFactory15createJavaProxyEP7_jclassN2v85LocalINS3_6ObjectEEERKNS3_20FunctionCallbackInfoINS3_5ValueEEE+680)  12-07 14:51:42.335  8579  8579 F DEBUG   :     #09 pc 000000000045daac  /data/app/com.<USER>testing-L5fqJNWjxitzyiZdU8-UPg==/lib/arm64/libkroll-v8.so (_ZN8titanium5Proxy16proxyConstructorERKN2v820FunctionCallbackInfoINS1_5ValueEEE+1612)  12-07 14:51:42.335  8579  8579 F DEBUG   :     #10 pc 000000000072ac48  /data/app/com.<USER>testing-L5fqJNWjxitzyiZdU8-UPg==/lib/arm64/libkroll-v8.so (_ZN2v88internal25FunctionCallbackArguments4CallEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEE+188)  12-07 14:51:42.335  8579  8579 F DEBUG   :     #11 pc 000000000077e224  /data/app/com.<USER>testing-L5fqJNWjxitzyiZdU8-UPg==/lib/arm64/libkroll-v8.so  12-07 14:51:42.335  8579  8579 F DEBUG   :     #12 pc 000000000077f154  /data/app/com.<USER>testing-L5fqJNWjxitzyiZdU8-UPg==/lib/arm64/libkroll-v8.so  12-07 14:51:42.335  8579  8579 F DEBUG   :     #13 pc 000000000077f40c  /data/app/com.<USER>testing-L5fqJNWjxitzyiZdU8-UPg==/lib/arm64/libkroll-v8.so (_ZN2v88internal21Builtin_HandleApiCallEiPPNS0_6ObjectEPNS0_7IsolateE+28)  12-07 14:51:42.335  8579  8579 F DEBUG   :     #14 pc 00000000000000e4  <anonymous:0000007891e84000>  12-07 14:51:42.968   745   745 E /system/bin/tombstoned: Tombstone written to: /data/tombstones//tombstone_07  12-07 14:51:42.972   909   976 I BootReceiver: Copying /data/tombstones/tombstone_07 to DropBox (SYSTEM_TOMBSTONE)  12-07 14:51:42.972   909  8580 W ActivityManager:   Force finishing activity com.<USER>testing/org.<USER>titanium.TiActivity  12-07 14:51:42.979   909   954 I ActivityManager: Showing crash dialog for package com.<USER>testing u0  12-07 14:51:42.992   909  1157 W InputDispatcher: channel '9e40254 com.<USER>testing/com.<USER>testing.ClassicapptestActivity (server)' ~ Consumer closed input channel or an error occurred.  events=0x9  12-07 14:51:42.992   909  1157 E InputDispatcher: channel '9e40254 com.<USER>testing/com.<USER>testing.ClassicapptestActivity (server)' ~ Channel is unrecoverably broken and will be disposed!  12-07 14:51:42.992   909  1157 W InputDispatcher: channel '1a8efc0 com.<USER>testing/org.<USER>titanium.TiActivity (server)' ~ Consumer closed input channel or an error occurred.  events=0x9  12-07 14:51:42.992   909  1157 E InputDispatcher: channel '1a8efc0 com.<USER>testing/org.<USER>titanium.TiActivity (server)' ~ Channel is unrecoverably broken and will be disposed!  12-07 14:51:42.993   909  3696 I ActivityManager: Process com.<USER>testing (pid 8482) has died: fore TOP   12-07 14:51:42.995   909  1579 I WindowManager: WIN DEATH: Window{1a8efc0 u0 com.<USER>testing/org.<USER>titanium.TiActivity}  12-07 14:51:42.995   909  1579 W InputDispatcher: Attempted to unregister already unregistered input channel '1a8efc0 com.<USER>testing/org.<USER>titanium.TiActivity (server)'  12-07 14:51:42.997   909  3698 I WindowManager: WIN DEATH: Window{9e40254 u0 com.<USER>testing/com.<USER>testing.ClassicapptestActivity}  {code}",Bug,High,Closed,"2017-12-12 00:09:11","2017-12-12 00:09:11",13
"The Titanium SDK ","Windows: Error logs are not produced on app crash","Hello,  We are having issues in being able to debug crashes when trying to access undefined element in an object.     *Test Code:*   index.xml      index.js      lib/helper.js    Steps to reproduce.   1. Run the attached project using above code.   2. Click on Hello, World.   3. The error will be displayed in the console.     The error message just says *[ERROR] In undefined: undefined, undefined* instead of specifying where exactly the error is. In this situation, the error object is showed in the error screen displayed in the app. But, in some scenarios when this happens during a complex operation, app crashes. When that happens, it is really hard to figure out where exactly the issue is.   That way, even if the app crashes, we can see the error in the console to be able to fix it.     Thanks",Bug,High,Closed,"2017-12-11 20:46:26","2017-12-11 20:46:26",5
"The Titanium SDK ","Android: Multidexed apps crash on startup on Android 4.x","*Summary:*  When adding several heavy weight Android modules such as ti.map and its ti.playservices dependency, the app will most likely crash on startup on Android 4.x. This is not an issue on Android 5.0 and above since those OS versions have built-in support for multidexed apps.    *Steps to Reproduce:*  # Open the tiapp.xml file.  # Target Titanium SDK 7.0.0 or higher.  # Add module ti.map.  # Add the below property to the tiapp.xml file. (This will increase the likeliness of the bug.)  # Build and run on an Android 4.x device. (The app.js code does not matter.)        *Result:*  Crashes on app startup with the following logged error...        *Expected Result:*  Should not crash. (We've added the Google multidex support library with the intention of multidex support on Android 4.x.)    *Reason:*  Android 4.x does not have built-in multidex support. So, we have to add support by calling the Google support library's MultiDex.install() from the application class which we're already doing now. But in order to do this, Titanium's application class and all of the classes it uses must be embedded in the main dex file or else the Java runtime will fail to lazy load them on startup. We must specify which Java classes must be embedded in the main dex file by using the --main-dex-list command line argument when building a multidexed app.    *Notes:*  This issue is more likely to happen with Titanium 7.0.0 when using any module that uses Google Play Services. This is because our new ti.playservices includes a much higher public API count that'll trigger multidexed builds.    This was raised:  * https://jira.<USER>org/browse/AC-5431  * [https://jira.<USER>org/browse/TIMOB-14740|https://jira.<USER>org/browse/TIMOB-14740?focusedCommentId=431868&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-431868]",Bug,High,Closed,"2017-12-11 20:31:39","2017-12-11 20:31:39",8
"The Titanium SDK ","Windows: selecting search result with searchbar and in tableview shows empty row","Steps to generate issue:    1. create search bar  2. Create table view and add this searchbar to this tableview.  3. searchbar shows in tableview.  4. search any text. Matching results are shown.  5. Now select any matching result from search.  6. Empty row displays in tableview    Expected:  Selected result from searchbar should show in tableview    Sample code is attached",Bug,Critical,Closed,"2017-12-10 05:30:37","2017-12-10 05:30:37",5
"The Titanium SDK ","iOS: Webview not working inside the container view as expected.","1. Created the alloy titanium mobile project.  2. Created a view in window on index.  3. Added the webview inside the View.  4. View has onClick event.  5. Loading the webview with Google Url.  6. Not able to select any kind of textfield.    7. Please check the below project in attachment.    Following the configuration of my machine:  1. Ti SDK 6.3.0  2. Appc Studio 4.10.0  3. Node.js 4.4.6  4. CLI 5.0.14  5. Xcode 9.0.1  6. iOS SDK 11.0    Let me know if you need more details.  Thanks :)",Bug,High,Closed,"2017-12-07 07:33:23","2017-12-07 07:33:23",2
"The Titanium SDK ","Windows: Avoid deleting build directory each time","Windows build wipes out the directory and rebuilds each time. We should be able to re-use existing project directory and stop wiping it out on each build, which should improve build time.  ",Improvement,Medium,Closed,"2017-12-07 00:26:02","2017-12-07 00:26:02",5
"The Titanium SDK ","iOS: TabGroup more tab not rendering properly on iPad in landscape orientation","When you create a TabGroup control with too many tabs the control automatically creates a more tab that shows a listing of additional tabs. The more tab does not render appropriately in landscape orientation on iPad. The width of the tab listing does not extend to the right-edge of the screen as it should (please see the attached screenshot).    I've attached a very simple Alloy project that you can use to replicate this issue.    ",Bug,Medium,Closed,"2017-12-05 19:31:43","2017-12-05 19:31:43",1
"The Titanium SDK ","Windows: Support for dp in ti.ui.defaultunit","According to the document,     {quote}  You can specify the default unit type to use with untyped values. To the tiapp.xml file, you would add  <property name=ti.ui.defaultunit type=string>value</property>    Where value is one of px, mm, cm, in, dp, dip, or system. The system value corresponds to the platform-dependent system unit as described above.   {quote}    Current default units are hard-coded to {{px}}.    See also: [Setting default units in tiapp.xml|http://docs.<USER>com/platform/latest/#!/guide/Layouts,_Positioning,_and_the_View_Hierarchy-section-src-29004895_safe-id-TGF5b3V0cyxQb3NpdGlvbmluZyxhbmR0aGVWaWV3SGllcmFyY2h5LVNldHRpbmdkZWZhdWx0dW5pdHNpbnRpYXBwLnhtbA]  ",Improvement,High,Closed,"2017-12-04 04:38:47","2017-12-04 04:38:47",8
"The Titanium SDK ","Windows: borderWidth should be changed 0 to 1 when borderColor is set","According the description of {{Ti.UI.View.borderWidth}},     {quote}  If borderColor is set without borderWidth, this value will be changed to 1 of the unit declared as 'ti.ui.defaultunit' in tiapp.xml descriptor.  {quote}    http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.View-property-borderWidth    Titanium Windows doesn't implement it, it remains 0 even after borderColor is set.        Expected: Red border should be shown around blue view.    Support for {{'ti.ui.defaultunit'}} is split into TIMOB-25582 ",Bug,Medium,Closed,"2017-12-04 01:52:40","2017-12-04 01:52:40",3
"The Titanium SDK ","Android: Return event is fired twice for textarea","h5.Steps to reproduce:  1. Use the code below in your app.js:    2. Build for android device.  3. After the app launches, click to focus the textarea.  4. Hit the return key.    h5. Actual result:  1. You will get two alerts return event fired.    h5.Expected result:  1. You should get only one return event & one alert.",Bug,None,Closed,"2017-12-01 23:58:13","2017-12-01 23:58:13",2
"The Titanium SDK ","TiAPI: Remove deprecated Geolocation values, only use new ones","http://docs.<USER>com/platform/latest/#!/api/GeocodedAddress    Specifically, it is insane that we:   - have a postalCode property on Android, but zipcode on iOS/Windows.   - latitude and longitude are Numbers on iOS/Windows, but String on Android.   - have both country_code (on all platforms), and countryCode (only on Android) (we should likely have the same property, and given our naming scheme, it should be called countryCode)    It was deprecated as part of TIMOB-23496 and will now be removed.",Improvement,High,Closed,"2017-12-01 21:03:15","2017-12-01 21:03:15",8
"The Titanium SDK ","Android: customView of Map.Annotation won't show the first time app runs if it has an image","When using customView property on an Annotation which contains an ImageView and a Label, the first time you open the app you won't see the image. If you go back and open the map again, the images will show.    I uploaded a couple of files. One of them is a video showing the bug, the other one is a test case project (remember to change google maps API_KEY on tiapp.xml).",Bug,Critical,Open,"2017-11-24 11:22:10","2017-11-24 11:22:10",1
"The Titanium SDK ","iOS: VideoPlayer showsControls false does if url is set after creation","I have below code block to show videoplayer in full screen with showscontrol false.  <VideoPlayer mediaTypes=Titanium.Media.VIDEO_MEDIA_TYPE_VIDEO fullscreen=false showsControls=false id=videoPlayer width=Ti.UI.FILL ns=Ti.Media height=Ti.UI.FILL autoplay=false>   </VideoPlayer>     But this shows a pause control, please check the attached screenshot.",Bug,Critical,Closed,"2017-11-28 10:10:34","2017-11-28 10:10:34",5
"The Titanium SDK ","Android: Ti.Media.showCamera with an overlay fires success callback multiple times on some devices","Using an `overlay` in `Ti.Media.showCamera()` requires to capture picture programmatically using `Ti.Media.takePicture()` method, but when used with `autohide:false`, the `success` callback is fired repeatedly on my Moto G4 Play device. This Moto device is able to auto-focus perfectly & that's why the console shows the relevant log but it's certainly a bug as it's impossible to create a custom-overlay camera feature to capture pics continuously without closing the camera.     On the other hand, my Samsung On5 device was not firing success callback multiple times but it was also not able to auto-focus on things. So it seems the issue is related to auto-focus feature which is very much required & thus making overlay useless on my Moto G4 Play device.    *Steps to reproduce:*  1- Tap 'Open Camera' button  2- Tap `Take Picture` button & do not press back button in order to keep camera window open  3- Try to notice if your device is able to auto-focus or not by moving the camera around quickly.  4- If your device is able to auto-focus on different objects, then only success callback will be fired multiple times.    Here's a sample code for this:          Here's the output of this code on Moto G4 Play device:          Here's is the Java code link causing this issue : https://github.com/<USER>titanium_mobile/blob/949d3cda48dbf98381cbdcbad191d48cd4868df7/android/modules/media/src/java/ti/modules/titanium/media/TiCameraActivity.java  ",Bug,Critical,Closed,"2017-11-20 16:11:53","2017-11-20 16:11:53",5
"The Titanium SDK ","Windows: TableViewRow click event should contain rowData","{{click}} event in {{Ti.UI.TableViewRow}} should contain row data information such as {{rowData}} and {{section}} etc according to the [API doc|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TableViewRow-event-click].        Expected: Clicking row should show row data.",Bug,Medium,Closed,"2017-11-28 03:22:59","2017-11-28 03:22:59",5
"The Titanium SDK ","iOS: extendSafeArea property not behave properly if tabBarHidden = true or navBarHidden = true."," As [~<USER> and [~<EMAIL>] has put their comment in TIMOB-25267 -    If 'extendSafeArea = false' in a NavigationController and navBarHidden: true, safe area at the top is not respected. Only happens with navBarHidden on the window.    Similarly if 'extendSafeArea = false' in a TabGroup and 'tabBarHidden: true', safe area at the bottom is not respected.    Test Case (NavigationBar) -          Test Case (TabBar) -     ",Bug,High,Closed,"2017-11-27 04:49:15","2017-11-27 04:49:15",0
"The Titanium SDK ","Ti.Geolocation.locationServicesEnabled still returns false in Android.","Hello All,  I'm always getting false with the use of Ti.Geolocation.locationServicesEnabled on android.  Tested this on Android device with os version 6 & 7.  Turning Location services on or off returns same value.    Steps i was performing to get location:  1) checking for location permission using hasLocationPermissions() — This works perfect  2) Check whether location service is On/Off using Ti.Geolocation.locationServicesEnabled – Returns false always.    I'm using Titanium SDK: 6.3.0    Any help would be appreciated.      Thanks.",Bug,Critical,Closed,"2017-11-23 17:01:51","2017-11-23 17:01:51",1
"The Titanium SDK ","Android: View rect x and y are inconsistent","I have a problem on Android with View.rect object which returns x;y as absolute position in window.  This behaviour is inconsistent with iOS and the documentation which says The bounding box of the view *relative to its parent*, in system units.    The view's bounding box is defined by its size and position.    The view's size is rect.width x rect.height. The view's top-left position *relative to its parent* is (rect.x , rect.y).    This is since the https://jira.<USER>org/browse/TIMOB-24442 bugfix    The commit that introduced the wrong behaviour is   https://github.com/<USER>titanium_mobile/commit/db9a1ccf960f96e6eb671619560015cb5c65dead    {code:javascript}  var vw = Ti.UI.createView({      top: 100,      left: 100,      width: 200,      height: 200,      backgroundColor: blue  });    var inner = Ti.UI.createView({      top: 20,      left: 20,      width: 30,      height: 30,      backgroundColor: yellow  });    vw.add(inner);    $.index.add(vw);    $.index.addEventListener('click', function (e) {      if (OS_IOS) {          Ti.API.info('Rect : ' + JSON.stringify({x: e.source.rect.x, y: e.source.rect.y, width: e.source.rect.width, height: e.source.rect.height}));              } else {          Ti.API.info('Rect : ' + JSON.stringify(e.source.rect));      }  });    $.index.open();  {code}    Procedure :  - click on the white zone (e.source = $.index)  - click on the blue zone (e.source = vw)  - click on the yellow zone (e.source = inner)    iOS log :      Android log :    ",Bug,High,Closed,"2017-11-23 11:04:47","2017-11-23 11:04:47",1
"The Titanium SDK ","Hyperloop: iOS - Wrong header include with Swift frameworks","Swift based Frameworks that expose an Objective-C interface generate a wrong header include when using blocks or custom classes like delegates.    *Steps to reproduce the behavior*  * Checkout https://github.com/<USER>hyperloop-examples/pull/63  * Run using {{appc run -p ios -l trace}}    *Actual behavior*  The build fails with the following message:      *Expected behavior*  Build is successful and without any errors.",Bug,Medium,Closed,"2017-11-23 16:18:55","2017-11-23 16:18:55",3
"The Titanium SDK ","Android: Nested scrolling within disabled ScrollView are not propagated to parent","*Summary:*  When scrolling a child view within a ScrollView, once you reach the top or bottom of the child view, the drag event is supposed to scroll the parent ScrollView. And if the parent ScrollView reaches its top or bottom, then it's drag event is supposed to be propagated to the ScrollView's parent, in case there is a ScrollView within a ScrollView. This works fine unless the inner ScrollView's scrollingDisabled is set false, in which case, the nested drag event is no longer bubbled up the UI tree.    *Steps to reproduce:*    # Build and run the below code on an Android device.  # Scroll one of the TextArea fields up and down past the bounds of its scrollable area.        *Result:*  The outer ScrollView does not scroll when you reach the top or bottom bounds of TextArea's scroll area. (This works fine if ScrollView.scrollEnabled property is set true.)    *Expected Result:*  Outer ScrollView should scroll.  ",Bug,Low,Closed,"2017-11-23 01:32:56","2017-11-23 01:32:56",1
"The Titanium SDK ","Windows: Incorrect event's source.id on Windows 10 Mobile","h5. Issue Description   Issue: When wrapping view(s) within an outer view, and a click event listener is added to that outer view, and all of this is in a standalone alloy controller, the feedback gotten from the click event object in regards to what the source of the click is, is incorrect.     SAMPLE PROJECT:   https://propelics.box.com/s/o7uaqpvwwtd41g71gurdgg9022obdjal     STEPS TO REPRODUCE:   1.- Open and run sample project. Can be deployed with -T ws-local   2.- A window with two views will appear: one white with a smaller red view in within and one cyan with a smaller purple view in within.   3.- Click on the red inner view of the white view and observe the console output: the event object will print with a source.id = moreButton, which is correct, as you'll can verify in the contents of index.xml.   4.- Now click on the purple inner view of the cyan view and observe the console output: the event object will print with a source.id = siteTab, which is incorrect, as you can verify in the contents of smallerViewController.xml.     As demonstrated, this is only reproducible in standalone alloy controllers.     NOTE: Exact the same behavior happens with a Ti.UI.Button. ",Bug,High,Closed,"2017-11-21 03:17:17","2017-11-21 03:17:17",5
"The Titanium SDK ","Android: EmailDialog file attachments not working on Android 7 and higher","*Summary:*  As of Titanium 6.2.2, the EmailDialog fails to attach files on Android 7.0 and newer OS versions.    *Steps to reproduce:*    # Set up a project using Titanium 6.2.2 or higher.  # Build and run the app on an Android 7.0 or newer device.  # Tap on the Send E-Mail button.        *Result:*  An e-mail window gets displayed, but notice that there are no file attachments. This is the bug.    *Expected Result:*  There should be 2 files attached to the e-mail, File1.txt and File2.txt.    *Work-Around:*  In Titanium 7.0.0 and higher, you can target API Level 23 in the tiapp.xml file to work-around this issue.        For Titanium 6.3.x and 6.2.2, there is no work-around. You must build with Titanium 6.2.1 or older instead.  ",Bug,High,Closed,"2017-11-20 22:36:28","2017-11-20 22:36:28",3
"The Titanium SDK ","Android: onTrimMemory can cause crash","- {{onTrimMemory}} can cause an exception when attempting to release memory:      *TEST CASE*  - Download an image first  - Run app and select image from Downloads folder  - Press back to exit app  {code:js}  Ti.Media.openPhotoGallery({      success:function(event) {          var image = event.media.imageAsResized(300, 300);          console.log('resized image');      }  });  {code}    NOTE: this is happening on Android 8.0",Bug,None,Closed,"2017-11-20 17:55:56","2017-11-20 17:55:56",2
"The Titanium SDK ","iOS: Original back button in iOS navigation bar shows briefly after replacing it with a custom one.","*Issue Description:*  When I add a custom back button using leftNavButton, the original iOS back button appears briefly before the custom one appears. I'm experiencing this behaviour using latest ti SDK 6.3.0.GA.    *Steps to reproduce:*  - Add a custom image in project directory and rename it to backbtn.png  - Then run the sample code below  - A red window should appear, click *Open blue window* button  At this point, observe that the default iOS back button appears briefly before the custom one.    *Expected:*  The default iOS back button should not appear.    *Actual:*  The default iOS back button appears briefly before the custom back button appears.    *Test Code:*  *app.js*          ",Bug,None,Resolved,"2017-11-20 11:08:23","2017-11-20 11:08:23",1
"The Titanium SDK ","Windows: Navigation parity for a cross-platform Ti.UI.NavigationWindow","On iOS, we have the {{Ti.UI.iOS.NavigationWindow}} to handle a stack of windows that can be opened and closed. Unfortunately, on Android and Windows, we have to do that manually and it required the (Alloy) developer to either write custom (per platform) logic or use plugins like [xp.ui|https://github.com/FokkeZB/UTiL/blob/master/app/lib/xp.ui.js].    Proposed API-changes:  * iOS: Deprecate {{Ti.UI.iOS.NavigationWindow}} in favor of {{Ti.UI.NavigationWindow}}  * Android / Windows: Support NavigationWindow, add the native [back button|https://developer.android.com/training/implementing-navigation/temporal.html]  * Android / Windows: Expose the {{openWindow}}, {{closeWindow}} and {{popToRootWindow}} if possible  * Adjust Alloy to make the {{<NavigationWindow>}} tag available for all platforms    This should be done in the Release 7.4.0 timeframe and is a fundamental cross-platform parity improvement.","New Feature",Medium,Closed,"2017-11-20 00:19:54","2017-11-20 00:19:54",13
"The Titanium SDK ","Android: Support DrawerLayout with Ti.UI.TabGroup","As far as I know, it is not possible to use tabs and a drawer menu simultaneously in <USER>Titanium. It would be great if those two elements could be combined.     Material guidelines: https://material.io/guidelines/patterns/navigation.html#navigation-combined-patterns (see Combined patterns section, the part where it says Side nav and tab combinations, or just check the images I attached).  ",Improvement,Critical,Resolved,"2017-11-19 17:33:41","2017-11-19 17:33:41",0
"The Titanium SDK ","Android: Allow HTTPClient to send request in onload","I got an app that send post json objects synchronous via recursive function,   Once an object is sent I wait for the response before sending another, but Im getting timedout errors:      ",Improvement,Medium,Closed,"2017-10-30 01:32:58","2017-10-30 01:32:58",3
"The Titanium SDK ","iOS: ListView - controller.open doesn't come to front when using searchbar ","h3. Steps to Reproduce Inside of my ListView I have an onItemclick event which opens a new detailcontroller. After updating to 4.10.0 the detailcontroller doesn't come to front when using the search before. It appears hidden in the back. Just after canceling the search the detail controller appears.  h3. Actual Result controller.open() -> controller is hidden by searchbar  h3. Expected Result controller.open() should come to front.",Bug,Critical,Closed,"2017-11-17 18:21:21","2017-11-17 18:21:21",8
"The Titanium SDK ","iOS: ListView with SearchBar issue with Ti SDK 6.3.0.GA","h5. Issue Description     We are having an issue with ListViews with SearchBar hiding behind the Navigation Bar when cancelling the search. Please see the details below for steps to re-create, screenshots, and a sample app. Note that this issue exists only with version 6.3.0.GA. App works without any issues with previous versions of the SDK.     Steps to recreate:     1) Launch the sample app with Ti SDK 6.3.0.GA   2) Enter a search text in the search bar. For example, enter 'L'   3) Click on one of the list items to go to second window   4) On the second window, click on the back arrow to go to previous window   5) On the first window, notice that search text is still populated and search bar is visible   6) Click the cancel button on the search bar   7) Notice that search bar is hidden behind the navigation bar - This is the issue. Expected behavior is the search bar should be fully visible just below the navigation bar.     ",Bug,Critical,Closed,"2017-11-17 20:59:09","2017-11-17 20:59:09",0
"The Titanium SDK ","Android: Listview when showing image with defaultImage causing inconsistency on image","The issue is when user scroll the listing, sometimes the image switched to defaultImage, eventhough the image is already loaded in imageview container.    Please try the attached code., try to reset the list or scroll the list, the image will switch value to defaultImage and never loaded the remote image.    this happen in 6.3.0, working fine in 6.2.2 and 6.1.2  ",Bug,Critical,Closed,"2017-11-17 02:14:30","2017-11-17 02:14:30",2
"The Titanium SDK ","Hyperloop: Android - Add support to catch typed exceptions","With TIMOB-24657 we allowed exceptions to bubble up to JS so they can be utilized in try-catch-blocks. All exception will be converted to strings though, so there cannot be done any type checking against the exception class, which is crucial in Java. The following approach solves this issue:    * Throw a special {{HyperloopException}} from Java based on a catched {{InvocationTargetException}}.  * Handle those exception in https://github.com/<USER>titanium_mobile/blob/master/android/runtime/v8/src/native/JSException.cpp#L37. Get the original exception via {{getCause()}} and construct a {{HyperloopNativeExceptionError}} in JS which allows the developer to access the underlying native Exception","New Feature",Medium,Open,"2017-11-16 15:24:24","2017-11-16 15:24:24",5
"The Titanium SDK ","iOS: Expose navigation-window instance property to Ti.UI.Window","In a production app, there are many cases where the developer would like to know the navigation-window context he/she is currently in. For example, when going through a set of windows to select a configuration, the developer calls openWindow(nextWindow)) to open the next window (push it) into the current context.    Right now, developers either store a global reference, e.g.   {code:js}  Alloy.Globals.navWindow = nav;    -> [BAD]    I am proposing a solution where the developer can reference the current navigation-window using the navigationWindow instance property. See the following test-case for an example:  {code:js}  var win = Ti.UI.createWindow({      backgroundColor: '#fff'  });    var nav = Ti.UI.iOS.createNavigationWindow({    window: win  });    var btn = Ti.UI.createButton({      title: 'Open next window'  });    btn.addEventListener('click', function() {      win.navigationWindow.openWindow(Ti.UI.createWindow({        title: 'Next Window!',        backgroundColor: 'green'      }));  });    win.add(btn);  nav.open();  {code}  While the developer could still just use the nav property, it will get more complex when using a multi-level application which scope changes during the navigation-flow. Ideally, once we move the navigation-window to the universal {{Ti.UI.NavigationWindow}} namespace, we could expose the same for Android (cc [~<USER>) and Windows (cc [~<USER>).    Requirements of this API:  * Return existing references only, no copies  * Make the property read-only  * Only return a navigation-window if one exists, error else",Improvement,Medium,Closed,"2017-11-16 13:05:24","2017-11-16 13:05:24",8
"The Titanium SDK ","Android App Crash due to Attempt to invoke virtual method 'void java.net.HttpURLConnection.disconnect()' on a null object reference","Recently tracking a lot of the following errors. Null checks need to be placed in TiHTTPClient.java.      e.g.   1)  java.lang.NullPointerException    0 java.lang.NullPointerException: Attempt to invoke virtual method 'void java.net.HttpURLConnection.disconnect()' on a null object reference  ! 1 at ti.modules.titanium.network.TiHTTPClient$ClientRunnable.run(TiHTTPClient.java:1293)  2 at java.lang.Thread.run(Thread.java:818)        2)   java.lang.NullPointerException: Attempt to invoke a virtual method on a null object reference  ! 1 at ti.modules.titanium.network.TiHTTPClient$ClientRunnable.run(TiHTTPClient.java:1293)  2 at java.lang.Thread.run(Thread.java:762)  ",Bug,Critical,Closed,"2017-08-17 02:46:37","2017-08-17 02:46:37",2
"The Titanium SDK ","Android: ScrollView.scrollTo() ignores ti.ui.defaultunit when animated","*Summary:*  The Android ScrollView.scrollTo() method always operates in pixels when set up to be animated. Meaning that it ignores the ti.ui.defaultunit property's configured units (such as dp) in the tiapp.xml file.    Note that ScrollView.scrollTo() when not set up to animated does respect the ti.ui.defaultunit property.    *Steps to reproduce:*    # Open your project's tiapp.xml file.  # Add a ti.ui.defaultunit property set to dp as shown below.  # Create an app.js file using the below code.  # Build and run the app on Android.  # Tap the Scroll to Middle button.    {code:xml}  <?xml version=1.0 encoding=UTF-8?>  <ti:app xmlns:ti=http://ti.<USER>org>   <property name=ti.ui.defaultunit type=string>dp</property>  </ti:app>  {code}    {code:javascript}  var window = Ti.UI.createWindow();  var scrollView = Ti.UI.createScrollView(  {   layout: vertical,   scrollType: vertical,   showHorizontalScrollIndicator: false,   shorVerticalScrollIndicator: true,   width: Ti.UI.FILL,   height: Ti.UI.FILL,  });  var firstView = Ti.UI.createLabel(  {   text: First View,   textAlign: Ti.UI.TEXT_ALIGNMENT_CENTER,   color: white,   backgroundColor: blue,   borderColor: white,   borderWidth: 1dp,   width: 100%,   height: 75%,  });  scrollView.add(firstView);  var middleView = Ti.UI.createLabel(  {   text: Middle View,   textAlign: Ti.UI.TEXT_ALIGNMENT_CENTER,   color: white,   backgroundColor: #008800,   borderColor: white,   borderWidth: 1dp,   width: 100%,   height: 75%,  });  scrollView.add(middleView);  var lastView = Ti.UI.createLabel(  {   text: Last View,   textAlign: Ti.UI.TEXT_ALIGNMENT_CENTER,   color: white,   backgroundColor: purple,   borderColor: white,   borderWidth: 1dp,   width: 100%,   height: 75%,  });  scrollView.add(lastView);  window.add(scrollView);  var button = Ti.UI.createButton(  {   title: Scroll to Middle,   bottom: 10dp,   right: 10dp,  });  button.addEventListener(click, function(e) {   scrollView.scrollTo(0, firstView.size.height, { animated: true });  });  window.add(button);  window.open();  {code}    *Result:*  The top of the middle view fails to be scrolled to the top of the scroll view.    This is because the view's height was returned in dp units but the scrollTo() method interpretted it as pixels instead.    *Expected Result:*  The scrollTo() method must respect the project's ti.ui.defaultunit setting.    *Work-Around:*  This issue can be worked-around by doing 1 of the following...  * Do not use animated scrolling.  * Set ti.ui.defaultunit to pixels.  ",Bug,Medium,Closed,"2017-11-15 04:25:23","2017-11-15 04:25:23",1
"The Titanium SDK ","Windows: Ti.Utils.base64encode behaves different between Android/iOS and Windows","h3. Problem    The result of Ti.Utils.base64encode is different between iOS and Android. On iOS there are newline characters included when the string is long enough, on Android the newline characters are stripped out (which is the correct way to do base64 UTF8 encoding). Please see the attached screenshot explaining the issue.     h3. Sample Code    ",Bug,High,Closed,"2017-11-15 04:01:20","2017-11-15 04:01:20",5
"The Titanium SDK ","Cannot get hyperloop to work with cocoa pods since upgrading","Trying to demonstrate Hyperloop and iOS Charts for a customer.  We standard hyperloop demo app that was created by Bert Granges uses the JBChartView cocoa pod.  This used to work in previous versions of the sdk and hyper loop.  I have a new machine, and I have installed the latest version of Studio, Hyperloop, and Ti SDK.  I can't get this to work.  I am guessing that since Hyperloop is now included in the SDK, that something needs to change in this project, but I have spent days and cannot get it to work.  Below is the error.    [INFO] :   [Hyperloop] CocoaPods dependencies found. This will take a few moments but will be cached for subsequent builds  [ERROR] :  An error occurred during build after 12s 605ms  [ERROR] :  pod install returned a non-zero exit code: 1",Bug,High,Resolved,"2017-11-14 22:41:20","2017-11-14 22:41:20",0
"The Titanium SDK ","Android: Lower min targetSdkVersion from 25 to 23","*Summary:*  As of Titanium 6.2.2, the min targetSdkVersion that an app can target is Android API Level 25 (aka: Android 7.0). This is an issue for developers that are running into problems with file permission issues (such as custom notification sounds [AC-5349]) and their only work-around is to lower the target API Level 23 (aka: Android 6.0).    *Steps to reproduce:*  # Set up a project which uses Titanium 6.2.2 or 6.3.0.  # Add the below XML to the tiapp.xml file.  # Attempt to build the app.        *Result:*  The build fails in 6.2.2 and 6.3.0. The following error gets logged.      ",Improvement,None,Closed,"2017-11-13 22:35:51","2017-11-13 22:35:51",1
"The Titanium SDK ","Android: Forced rebuild loop due to tiapp.xml navbar-hidden changed","Android builds are stuck in a forced rebuild loop due to changes to tiapp.xml navbar-hidden setting.    *Steps to reproduce the behavior*  # Run a clean build  # Run a second build    *Actual behvior*  Second build and onward always get forced to a full rebuild, indicated by the following logs:      *Expected behavior*  The build does an incremental build instead of a full rebuild. The above log message should not appear.    *Additional Notes*  Only occurs with fixes from CLI-1278.",Bug,None,Closed,"2017-11-13 19:22:10","2017-11-13 19:22:10",1
"The Titanium SDK ","Android. TiResponseCache. Permission","HTTP response caching is disabled, if WRITE_EXTERNAL_STORAGE is not granted.  After TIMOB-20470 directory for cache is taken by '.getCacheDir()' or '.getExternalCacheDir().  No permissions required to write files in this directories.",Bug,Critical,Closed,"2017-10-13 12:52:01","2017-10-13 12:52:01",2
"The Titanium SDK ","Android: ImageView sometimes crashes when loading via URL","This bug is so difficult to reproduce.  However, if your app loads a lot of images and consumes memory which will subsequently trigger GC constantly, then you will often see this bug very often. It appears to me that after some heavy GC is carried out by the system, listview will crashes either silently or with some errors.    The bugs appear to me like after the systems is GCed, the native system tried to access some invalid arraylist which is probably our list items but has been cleaned up during the GC. The full error logs is listed below -            {color:green}[INFO] :   art: Background partial concurrent mark sweep GC freed 39840(2MB) AllocSpace objects, 562(22MB) LOS objects, 24% free, 49MB/65MB, paused 1.766ms total 205.007ms  [INFO] :   art: Background sticky concurrent mark sweep GC freed 178393(7MB) AllocSpace objects, 75(1200KB) LOS objects, 11% free, 57MB/65MB, paused 2.294ms total 100.092ms  [INFO] :   I/Adreno-EGL: <qeglDrvAPI_eglInitialize:410>: EGL 1.4 QUALCOMM build: AU_LINUX_ANDROID_LA.BF.1.1.1_RB1.05.00.02.042.016_msm8226_LA.BF.1.1.1_RB1__release_AU ()  [INFO] :   I/Adreno-EGL: OpenGL ES Shader Compiler Version: E031.25.03.00  [INFO] :   I/Adreno-EGL: Build Date: 02/11/15 Wed  [INFO] :   I/Adreno-EGL: Local Branch:  [INFO] :   I/Adreno-EGL: Remote Branch: quic/LA.BF.1.1.1_rb1.10  [INFO] :   I/Adreno-EGL: Local Patches: NONE  [INFO] :   I/Adreno-EGL: Reconstruct Branch: AU_LINUX_ANDROID_LA.BF.1.1.1_RB1.05.00.02.042.016 + 62ca4eb + acd831d + 9f8b442 + e027a02 + cba30ba + 53c303a + a649d79 + 23e16f8 + 5e97da7 + cbd2a44 + 33d072a + 7aacf06 + 72b33e7 + 28f6f60 + b4c13d8 +  NOTHING  [INFO] :   OpenGLRenderer: Initialized EGL, version 1.4  {color}  {color:red}  [ERROR] :  TiApplication: (main) [51471,51471] Sending event: exception on thread: main msg:java.lang.NullPointerException: Attempt to invoke virtual method 'java.util.Iterator java.util.ArrayList.iterator()' on a null object reference; Titanium 6.2.2,2017/09/19 16:01,undefined  [ERROR] :  TiApplication: java.lang.NullPointerException: Attempt to invoke virtual method 'java.util.Iterator java.util.ArrayList.iterator()' on a null object reference  [ERROR] :  TiApplication:  at org.<USER>titanium.util.TiDownloadManager.handleFireDownloadMessage(TiDownloadManager.java:104)  [ERROR] :  TiApplication:  at org.<USER>titanium.util.TiDownloadManager.handleMessage(TiDownloadManager.java:174)  [ERROR] :  TiApplication:  at android.os.Handler.dispatchMessage(Handler.java:98)  [ERROR] :  TiApplication:  at android.os.Looper.loop(Looper.java:135)  [ERROR] :  TiApplication:  at android.app.ActivityThread.main(ActivityThread.java:5343)  [ERROR] :  TiApplication:  at java.lang.reflect.Method.invoke(Native Method)  [ERROR] :  TiApplication:  at java.lang.reflect.Method.invoke(Method.java:372)  [ERROR] :  TiApplication:  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:905)  [ERROR] :  TiApplication:  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:700)  [INFO] :   Process: Sending signal. PID: 15484 SIG: 9{color}    Steps to reproduce [tested on moto G 1st gen phone with 1GB RAM]-  1. Import the attached zip file to your titanium studio and run it in a system with limited memory.  2. Try to scroll down quickly the listview as fast as possible. Click the LV BUTTON to change the contents of the listview (SO as to trigger GC).  3. Still you see no crashes occurring? Cool, background the app for sometimes, open a a memory extensive app like a browser, load some heavy images, and before the system could terminate our backgrounded app,  quickly bring up the app to foreground and do a rapid scroll.  4. This time the app hangs up and crashes after a few rounds of GC.  ",Bug,Critical,Closed,"2017-10-07 06:32:24","2017-10-07 06:32:24",1
"The Titanium SDK ","Android: Transparent theme not working in SDK 6.3.0","Customer is unable to use transparent theme with SDK 6.3.0GA but works fine with SDK 6.2.0  index.xml:    Index.tss:      Below are two screenshots one with 6.2.2 and other with 6.3.0",Bug,None,Closed,"2017-11-13 17:43:33","2017-11-13 17:43:33",1
"The Titanium SDK ","Android: can not use a CardView inside an ItemTemplate","As title says, I am trying to create an ItemTemplate which has a CardView inside it, but this causes the app to crash. This is the error showing in <USER>s console:    {code}[ERROR] :  TiApplication: (main) [49049,49384] Sending event: exception on thread: main msg:java.lang.IllegalArgumentException: Cannot add a null child view to a ViewGroup; Titanium 6.3.0,2017/10/31 18:13,undefined  [ERROR] :  TiApplication: java.lang.IllegalArgumentException: Cannot add a null child view to a ViewGroup  [ERROR] :  TiApplication:  at android.view.ViewGroup.addView(ViewGroup.java:4250)  [ERROR] :  TiApplication:  at android.view.ViewGroup.addView(ViewGroup.java:4230)  [ERROR] :  TiApplication:  at ti.modules.titanium.ui.widget.listview.ListSectionProxy.generateChildContentViews(ListSectionProxy.java:731)  [ERROR] :  TiApplication:  at ti.modules.titanium.ui.widget.listview.ListSectionProxy.generateCellContent(ListSectionProxy.java:703)  [ERROR] :  TiApplication:  at ti.modules.titanium.ui.widget.listview.TiListView$TiBaseAdapter.getView(TiListView.java:284)  [ERROR] :  TiApplication:  at android.widget.HeaderViewListAdapter.getView(HeaderViewListAdapter.java:220)  [ERROR] :  TiApplication:  at android.widget.AbsListView.obtainView(AbsListView.java:2363)  [ERROR] :  TiApplication:  at android.widget.ListView.makeAndAddView(ListView.java:1970)  [ERROR] :  TiApplication:  at android.widget.ListView.fillDown(ListView.java:704)  [ERROR] :  TiApplication:  at android.widget.ListView.fillSpecific(ListView.java:1412)  [ERROR] :  TiApplication:  at android.widget.ListView.layoutChildren(ListView.java:1708)  [ERROR] :  TiApplication:  at android.widget.AbsListView.onLayout(AbsListView.java:2162)  [ERROR] :  TiApplication:  at android.view.View.layout(View.java:17637)  [ERROR] :  TiApplication:  at android.view.ViewGroup.layout(ViewGroup.java:5575)  [ERROR] :  TiApplication:  at android.support.v4.widget.SwipeRefreshLayout.onLayout(SwipeRefreshLayout.java:610)  [ERROR] :  TiApplication:  at ti.modules.titanium.ui.widget.listview.TiListView$ListViewWrapper.onLayout(TiListView.java:153)  [ERROR] :  TiApplication:  at android.view.View.layout(View.java:17637)  [ERROR] :  TiApplication:  at android.view.ViewGroup.layout(ViewGroup.java:5575)  [ERROR] :  TiApplication:  at org.<USER>titanium.view.TiCompositeLayout.onLayout(TiCompositeLayout.java:862)  [ERROR] :  TiApplication:  at android.view.View.layout(View.java:17637)  [ERROR] :  TiApplication:  at android.view.ViewGroup.layout(ViewGroup.java:5575)  [ERROR] :  TiApplication:  at org.<USER>titanium.view.TiCompositeLayout.onLayout(TiCompositeLayout.java:862)  [ERROR] :  TiApplication:  at android.view.View.layout(View.java:17637)  [ERROR] :  TiApplication:  at android.view.ViewGroup.layout(ViewGroup.java:5575)  [ERROR] :  TiApplication:  at android.widget.FrameLayout.layoutChildren(FrameLayout.java:323)  [ERROR] :  TiApplication:  at android.widget.FrameLayout.onLayout(FrameLayout.java:261)  [ERROR] :  TiApplication:  at android.view.View.layout(View.java:17637)  [ERROR] :  TiApplication:  at android.view.ViewGroup.layout(ViewGroup.java:5575)  [ERROR] :  TiApplication:  at android.support.v7.widget.ActionBarOverlayLayout.onLayout(ActionBarOverlayLayout.java:443)  [ERROR] :  TiApplication:  at android.view.View.layout(View.java:17637)  [ERROR] :  TiApplication:  at android.view.ViewGroup.layout(ViewGroup.java:5575)  [ERROR] :  TiApplication:  at android.widget.FrameLayout.layoutChildren(FrameLayout.java:323)  [ERROR] :  TiApplication:  at android.widget.FrameLayout.onLayout(FrameLayout.java:261)  [ERROR] :  TiApplication:  at android.view.View.layout(View.java:17637)  [ERROR] :  TiApplication:  at android.view.ViewGroup.layout(ViewGroup.java:5575)  [ERROR] :  TiApplication:  at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1741)  [ERROR] :  TiApplication:  at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1585)  [ERROR] :  TiApplication:  at android.widget.LinearLayout.onLayout(LinearLayout.java:1494)  [ERROR] :  TiApplication:  at android.view.View.layout(View.java:17637)  [ERROR] :  TiApplication:  at android.view.ViewGroup.layout(ViewGroup.java:5575)  [ERROR] :  TiApplication:  at android.widget.FrameLayout.layoutChildren(FrameLayout.java:323)  [ERROR] :  TiApplication:  at android.widget.FrameLayout.onLayout(FrameLayout.java:261)  [ERROR] :  TiApplication:  at com.android.internal.policy.DecorView.onLayout(DecorView.java:726)  [ERROR] :  TiApplication:  at android.view.View.layout(View.java:17637)  [ERROR] :  TiApplication:  at android.view.ViewGroup.layout(ViewGroup.java:5575)  [ERROR] :  TiApplication:  at android.view.ViewRootImpl.performLayout(ViewRootImpl.java:2346)  [ERROR] :  TiApplication:  at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2068)  [ERROR] :  TiApplication:  at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1254)  [ERROR] :  TiApplication:  at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6337)  [ERROR] :  TiApplication:  at android.view.Choreographer$CallbackRecord.run(Choreographer.java:874)  [ERROR] :  TiApplication:  at android.view.Choreographer.doCallbacks(Choreographer.java:686)  [ERROR] :  TiApplication:  at android.view.Choreographer.doFrame(Choreographer.java:621)  [ERROR] :  TiApplication:  at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:860)  [ERROR] :  TiApplication:  at android.os.Handler.handleCallback(Handler.java:751)  [ERROR] :  TiApplication:  at android.os.Handler.dispatchMessage(Handler.java:95)  [ERROR] :  TiApplication:  at android.os.Looper.loop(Looper.java:154)  [ERROR] :  TiApplication:  at android.app.ActivityThread.main(ActivityThread.java:6119)  [ERROR] :  TiApplication:  at java.lang.reflect.Method.invoke(Native Method)  [ERROR] :  TiApplication:  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)  [ERROR] :  TiApplication:  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)  {code}      And this is my code (xml, tss, js):    *xml:*  {code:xml}  <ListView id=list defaultItemTemplate=temp>    <Templates>      <ItemTemplate name=temp >        <CardView id=cardData >   <View class=views >     <Label left=8dp color=#212121 bindId=name />     <ImageView class=icons right=8dp image=/icons/more_vert.png />   </View>        </CardView>      </ItemTemplate>     </Templates>     <ListSection id=section />  </ListView>  {code}    *tss:*  {code:css}  'CardView': {   top: 20dp,   left: 20dp,   right: 20dp,   bottom: 20dp,   width: Ti.UI.FILL,   height: Ti.UI.SIZE,   contentPadding: 40,   cardCornerRadius: 20,   cardUseCompatPadding: true,   backgroundColor: #fafafa,   layout: 'vertical'  }    .views : {   top: 16dp,   layout: horizontal,   height: Ti.UI.SIZE  }    .icons : {   width: 24dp,   height: 24dp  }  {code}    *js:*  {code:javascript}  var array = [aaa, bbb, ccc];    var items = [];    for (var i = 0; i < array.length; i++)  {      items.push({       name : { text: array[i] },       template : temp      });  }  $.section.setItems(items);  {code}  ",Bug,Critical,Closed,"2017-11-07 13:59:02","2017-11-07 13:59:02",5
"The Titanium SDK ","iOS: Crashes during XML mocha tests","I'm seeing some intermittent crashes of the mocha test app on the build machine. Attached are the crash logs. It looks to be related to garbage collection and the XML APIs.    The app crashes during a stress test on the Ti.UI.TableView here: https://github.com/<USER>titanium-mobile-mocha-suite/blob/master/Resources/ti.ui.tableview.test.js#L1089    However, the crash logs indicate some sort of GC issue with {{TiDOMNodeProxy dealloc}} on a JS callback.",Bug,Medium,Resolved,"2017-11-10 18:42:44","2017-11-10 18:42:44",5
"The Titanium SDK ","Windows: Search bar does does not support changing color in the suggestion field  ","Search bar does does not support changing color in the suggestion field.         *Steps to reproduce*  + Add the above code to an existing app.js  + Build for Windows  + Search for something (6)    *Actual result*  Color of the suggestion field will stay gray and the user will not be able to read the item numbers ",Bug,Medium,Closed,"2017-11-09 23:34:25","2017-11-09 23:34:25",5
"The Titanium SDK ","iOS: Unable to subscribe for push notifications on latest SDK","Hello,    Unable to subscribe to push notifications on latest Ti SDK 6.3.0.GA. We have tested the issue in the following environment:  <USER>Command-Line Interface, version 6.3.0  Axway <USER>Studio, build: 4.10.0.201709271713,  Titanium SDK 6.3.0  Xcode Version: Version 9.1  iOS SDK 11    *Steps to reproduce the issue:*  1- Create new certificate  2- Create new provisioning profile  3- Delete old provisioning profiles from Apple developer and my mac  4- Download and install the new profile and certificate  5- Clean the project  6- Delete the build forlder  7- Uninstall and reinstall the app  8- Run the app using the new certificate and profile (in development)  9- Accept permission to allow notifications in the app     OR  Just create a new application and follow all the configuration for push notification on above working environment.    *Test Code:*  - https://gist.github.com/MotiurRahman/2cd4520727271bb60316d57032bf0028    *Test Results:*  We have got an infinity loop like below      *Expected Result:*  The device is subscribed for the push notification.    Thanks",Bug,Low,Resolved,"2017-11-09 19:10:53","2017-11-09 19:10:53",1
"The Titanium SDK "," Enable hyperloop on an existing project from the CLI","Hi,   This is a new feature requested to enable hyperloop on an existing project from the CLI.  We have to enable every other module by hand too if you are using CLI. The studio does it for us.      Now we can enable  Hyperloop on an existing project /old project with studio by adding  <module>hyperloop</module> and <plugin>hyperloop</plugin> to our tiapp.xml  But it is not possible to enable  Hyperloop on an existing project /old project with CLI. It will be great if  we can enable  Hyperloop on an existing project with CLI     Thanks   ","New Feature",None,Closed,"2017-11-09 16:27:56","2017-11-09 16:27:56",0
"The Titanium SDK ","Does the iOS debugger use the same protocol as the Android debugger?","Hi,  What I want to know is if the protocol being used by the Studio Debugging Perspective is the same when the target is Android and when the target is iOS. I am not asking about how to debug an app, but rather technical details about how debugging are being implemented for the different platforms. I already know that on Android, when --debug-host is specified, the app is debuggable using the v8-debugger-protocol. What I want to know is if libti_ios_debugger implements the same protocol or a different one.    Thanks ",Story,None,Closed,"2017-11-09 15:53:51","2017-11-09 15:53:51",0
"The Titanium SDK ","iOS: TableViewRow background color disappear","The backgroundColor of the children views of a tableviewrow disappear on the touch.  In development, it becomes quite annoying, I'm also forced to use graphics for solid colors.  Here is a video of an application that I'm developing.",Bug,High,Closed,"2017-11-08 14:07:48","2017-11-08 14:07:48",0
"The Titanium SDK ","Error with Ti.Cloudpush Android","Hello,    I am trying to get the Android deviceId using Ti.cloudpush, but my app is crashing.  This just started happening recently.  My QA team believes this is the first time they are seeing the issue.      Run a simple app with the following code.  App will crash with error message below.     var CloudPush = require('ti.cloudpush');  // Initialize the module  CloudPush.retrieveDeviceToken({   success : deviceTokenSuccess,   error : deviceTokenError  });    seems to be crashing on retrieveDeviceToken -- if you comment out the callbacks it will still crash.    ERROR:    [ERROR] :  TiApplication: (main) [5,230] Sending event: exception on thread: main msg:java.lang.NoClassDefFoundError: Failed resolution of: Lcom/google/android/gms/common/GooglePlayServicesUtil;; Titanium 6.2.2,2017/09/19 16:01,undefined  [ERROR] :  TiApplication: java.lang.NoClassDefFoundError: Failed resolution of: Lcom/google/android/gms/common/GooglePlayServicesUtil;  [ERROR] :  TiApplication:  at com.<USER>aps.CCPushService.getPushType(CCPushService.java:63)  [ERROR] :  TiApplication:  at com.<USER>aps.CCPushService.ifEnabled(CCPushService.java:250)  [ERROR] :  TiApplication:  at com.<USER>aps.PushBroadcastReceiver.onReceive(PushBroadcastReceiver.java:59)  [ERROR] :  TiApplication:  at android.app.ActivityThread.handleReceiver(ActivityThread.java:3043)  [ERROR] :  TiApplication:  at android.app.ActivityThread.-wrap18(ActivityThread.java)  [ERROR] :  TiApplication:  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1561)  [ERROR] :  TiApplication:  at android.os.Handler.dispatchMessage(Handler.java:102)  [ERROR] :  TiApplication:  at android.os.Looper.loop(Looper.java:154)  [ERROR] :  TiApplication:  at android.app.ActivityThread.main(ActivityThread.java:6131)  [ERROR] :  TiApplication:  at java.lang.reflect.Method.invoke(Native Method)  [ERROR] :  TiApplication:  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)  [ERROR] :  TiApplication:  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)  [ERROR] :  TiApplication: Caused by: java.lang.ClassNotFoundException: com.google.android.gms.common.GooglePlayServicesUtil  [ERROR] :  TiApplication:  at java.lang.VMClassLoader.findLoadedClass(Native Method)  [ERROR] :  TiApplication:  at java.lang.ClassLoader.findLoadedClass(ClassLoader.java:742)  [ERROR] :  TiApplication:  at java.lang.ClassLoader.loadClass(ClassLoader.java:362)  [ERROR] :  TiApplication:  at java.lang.ClassLoader.loadClass(ClassLoader.java:312)  [ERROR] :  TiApplication:  ... 12 more  [ERROR] :  TiApplication: Caused by: java.lang.NoClassDefFoundError: Failed resolution of: Lcom/google/android/gms/common/zzg;  [ERROR] :  TiApplication:  ... 12 more  [ERROR] :  TiApplication: Caused by: java.lang.ClassNotFoundException: Didn't find class com.google.android.gms.common.zzg on path: DexPathList[[zip file /data/app/com.test-1/base.apk],nativeLibraryDirectories=[/data/app/com.test-1/lib/arm, /data/app/com.test-1/base.apk!/lib/armeabi-v7a, /system/lib, /vendor/lib]]  [ERROR] :  TiApplication:  at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:56)  [ERROR] :  TiApplication:  at java.lang.ClassLoader.loadClass(ClassLoader.java:380)  [ERROR] :  TiApplication:  at java.lang.ClassLoader.loadClass(ClassLoader.java:312)  [ERROR] :  TiApplication:  ... 12 more",Bug,Critical,Closed,"2017-11-07 23:12:24","2017-11-07 23:12:24",1
"The Titanium SDK ","Android: Prevent kroll from removing null proxy object pointer","- Prevent {{null pointer dereference}} when removing proxy pointer    *TEST CASE*  - View map and navigate back repeatedly until crash  {code:js}  var MapModule = require('ti.map'),      win = Titanium.UI.createWindow({backgroundColor: 'gray'}),      btn = Ti.UI.createButton({title: 'VIEW MAP'});        function viewMap () {      var win = Ti.UI.createWindow({backgroundColor: 'gray'}),          mapView = MapModule.createView({              userLocation: true,              mapType: MapModule.NORMAL_TYPE,              animate: true,              region: {latitude: -33.87365, longitude: 151.20689, latitudeDelta: 0.1, longitudeDelta: 0.1 }          });      win.add(mapView);      win.open();  }    btn.addEventListener('click', function (e) {   if (Ti.Geolocation.hasLocationPermissions()) {          viewMap();      } else {          Ti.Geolocation.requestLocationPermissions(function (e) {              if (e.success === true) {                  viewMap();              } else {                  alert('permissions denied: ' + e.error);              }          });   }  });    win.add(btn);  win.open();  {code}",Bug,Critical,Closed,"2017-11-07 21:48:08","2017-11-07 21:48:08",3
"The Titanium SDK ","Android: html styles not getting applied correctly in WebView in SDK 6.3.0.GA","h6.Reproduce  1. Use the following simple code in an alloy project.  {code:title=index.xml}  <Alloy>   <Window onOpen=onWinOpen>    <View class=imgContainer height=65%>     <WebView id=captureImg1/>    </View>   </Window>  </Alloy>    1. Copy of project [Project|https://axwaysoftware-my.sharepoint.com/personal/<USER>axway_com/_layouts/15/guestaccess.aspx?guestaccesstoken=WJWavnEh%2FAB2TFgwpO%2F%2B2eWLqXIxCVFdDv0da%2B3CD%2BE%3D&docid=2_1c7c4f16fc811463ba1dd911690e841c8&rev=1&e=fea122bfeb73428a85d25f37ce421f83]  2. Run the project in an android device.  3. You will see the image doesn't show-up.    h6.Note  1. This is only happened in SDK 6.3.0.GA  2. It is working well in SDK 6.2.2.GA",Bug,None,Closed,"2017-11-07 03:26:45","2017-11-07 03:26:45",0
"The Titanium SDK ","iOS: Ti.Platform.openURL method always returns false on iOS","[openURL|http://docs.<USER>com/platform/latest/#!/api/Titanium.Platform-method-openURL] method can open the URL but it returns false. It should return true     h6.Testing Environment:  iOS Device version v11.0.3  Ti SDK 6.3.0    It seems deprecated natively for (iOS 2.0–10.0)  - https://developer.apple.com/documentation/uikit/uiapplication/1622961-openurl?language=objc    h6.Test Code                  Thanks",Story,None,Closed,"2017-11-07 02:59:43","2017-11-07 02:59:43",5
"The Titanium SDK ","Android: Add FACE_UP/FACE_DOWN support to Ti.Gesture","*Summary:*  On Android, the Ti.Gesture.orientation property and the orientationchange event currently only support orientations PORTRAIT, UPSIDE_PORTRAIT, LANDSCAPE_LEFT, and LANDSCAPE_RIGHT. We should also add support for FACE_UP and FACE_DOWN like iOS and Windows Phone for feature parity.    *Test Procedure:*    # Build and run the below on a physical Android device. (Cannot be tested via emulator.)  # Lay the android device flat on a table with the screen facing up towards the sky.  # Verify that the app displays Face Up onscreen.  # Lift the device above your head, with the screen facing straight down towards the Earth.  # Verify that the app display Face Down onscreen.    *Test Code:*          ",Improvement,Low,Closed,"2017-11-06 18:27:03","2017-11-06 18:27:03",3
"The Titanium SDK ","iOS: SearchBar No Results in ListView is not showing on ItemTemplate label in 6.2.2.GA  and later","Hello,    SearchBar No Results in ListView is not showing on ItemTemplate label in 6.2.2.GA  and later but it works on lower SDKs.    *Test Environment:*  Operating System    Name                        = Mac OS X    Version                     = 10.13    Architecture                = 64bit    # CPUs                      = 4    Memory                      = 8589934592  Node.js    Node.js Version             = 6.10.3    npm Version                 = 3.10.10  Titanium CLI    CLI Version                 = 5.0.14  Titanium SDK    SDK Version                 = 6.3.0.GA, 6.2.2.GA, 6.1.1.GA    *Test Code:*  Added the test code *index.xml*, *index.js* and  *index.tss* file on the attachment    *Output Results:*  SearchBar No Results in ListView is not showing on ItemTemplate label  in 6.2.2.GA  and later but showing on 6.1.1.GA(see the attachment image).    *Expected Results:*  SearchBar No Results in ListView shows on ItemTemplate label.",Bug,None,Closed,"2017-11-05 17:02:17","2017-11-05 17:02:17",5
"The Titanium SDK ","iOS: Wrong options shown on TouchID authentication failure","h5. Issue Description  We have used TouchID in our app to authenticate user. We have set authenticationPolicy to Modules.TouchId.AUTHENTICATION_POLICY_BIOMETRICS and see we saw below issue with it.     When user try to authenticate himself and he got failed, it will show alert box with below 2 options,   1. Enter Password   2. Cancel     Both are doing the same thing. They are closing popup. We think Enter Password option is irrelevant over here until and unless we set authenticationPolicy property to Modules.TouchId.AUTHENTICATION_POLICY_PASSCODE. We believe Enter Password option only be shown in case if user set set authenticationPolicy property to Modules.TouchId.AUTHENTICATION_POLICY_PASSCODE explicitly.   ",Bug,None,Closed,"2017-11-03 21:55:52","2017-11-03 21:55:52",1
"The Titanium SDK ","Hyperloop: iOS - Cannot use Hyperloop.defineClass with a Classic (Non-Alloy) project","While the Hyperloop requirements state Alloy 1.8.0+ does this mean that you MUST use Alloy for your UI or just that you have Alloy 1.8.0+ installed.    We have tried to use Hyperloop with a Classic project for iOS and while the correct JS and Objective-C code was generated, the app was not able to resolve references to classes generated by the Hyperloop invocations.    We put the same code into the Hyperloop-examples app (which is Alloy) and it compiled and ran OK.    We can get more specific about the problems and submit example code but I wanted initially to see whether the intention was to allow Hyperloop to work with Classic (Non-Alloy UI) apps.",Bug,Critical,Resolved,"2017-11-03 14:46:25","2017-11-03 14:46:25",2
"The Titanium SDK ","Android: Tapping right-aligned TextField not always receiving focus as of 6.2.2","*Problem:*    In a right aligned TextField (2nd and last in example) it is difficult to select the text by clicking in the the TextField area.     *Testdevice:*  HTC A9 (Android 7)    *SDK Versions*  -  6.2.1.GA working  - 6.2.2.GA+ not working    This PR: https://github.com/<USER>titanium_mobile/pull/9433 was between 6.2.1 and 6.2.2 so it might give a hint.    *Example*        *Additional info by [~<USER>*    {quote}  I'm able to reproduce this issue on an Android 7.1 Pixel XL with right-aligned TextFields, but not left-aligned or center-aligned TextFields. Also, I'm NOT able to reproduce this issue with right-aligned TextFields on an Android 5.0 Moto G or Android 4.1 Galaxy Nexus. Hmm... this requires further investigation.  {quote}  ",Bug,Critical,Closed,"2017-11-02 19:10:30","2017-11-02 19:10:30",5
"The Titanium SDK ","iOS: JSCore enabled app crashes ios app","<use-jscore-framework>true</use-jscore-framework>     ios app crashes with the following crashlog.    Have seen on lower sdks as well.  Happens both on iOS simulator and on device.  Tested on SDK: 6.3.0.GA   Xcode 9.  iOS 11.    This is stopping our team from using jscore/and safari debugger benefits, which is meant to be default soon in Ti 7+.  Also stopping Hyperloop adoption.    device.log attached for device app crash.",Bug,Critical,Closed,"2017-11-03 04:57:51","2017-11-03 04:57:51",5
"The Titanium SDK ","SDK Android build fails on 6.3.X branch","When running `node scons.js cleanbuild -a 25` in order to make a custom Titanium sdk build, the following error occurs:    ",Bug,Critical,Closed,"2017-11-02 12:46:20","2017-11-02 12:46:20",1
"The Titanium SDK ","Problem when building tianium_mobile branch 6.2.x. 404 returned from Amazon when downloading compiled android core modules","Problem when building tianium_mobile branch 6.2.x.   404 is returned from Amazon when downloading compiled android core modules  ",Bug,Critical,Closed,"2017-11-02 12:38:41","2017-11-02 12:38:41",0
"The Titanium SDK ","Android: TableView : java.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.util.HashMap.containsKey(java.lang.Object)' on a null object reference","It's happening when you have multiple nested windows with table views and click back button quickly to close the application.    Here is the complete crash log:-  11-01 00:56:36.663: E/AndroidRuntime(22347): java.lang.RuntimeException: Unable to destroy activity {com.<USER>mobile/org.<USER>titanium.TiActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.util.HashMap.containsKey(java.lang.Object)' on a null object reference  11-01 00:56:36.663: E/AndroidRuntime(22347):   at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:4244)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at android.app.ActivityThread.handleDestroyActivity(ActivityThread.java:4262)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at android.app.ActivityThread.-wrap6(ActivityThread.java)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1551)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at android.os.Handler.dispatchMessage(Handler.java:102)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at android.os.Looper.loop(Looper.java:154)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at android.app.ActivityThread.main(ActivityThread.java:6165)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at java.lang.reflect.Method.invoke(Native Method)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:888)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:778)  11-01 00:56:36.663: E/AndroidRuntime(22347): Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.util.HashMap.containsKey(java.lang.Object)' on a null object reference  11-01 00:56:36.663: E/AndroidRuntime(22347):   at org.<USER>kroll.KrollProxy.hasProperty(KrollProxy.java:580)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at ti.modules.titanium.ui.widget.TiUITableView.processProperties(TiUITableView.java:175)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at org.<USER>kroll.KrollProxy.setModelListener(KrollProxy.java:1222)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at org.<USER>titanium.proxy.TiViewProxy.realizeViews(TiViewProxy.java:516)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at org.<USER>titanium.proxy.TiViewProxy.handleGetView(TiViewProxy.java:507)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at org.<USER>titanium.proxy.TiViewProxy.getOrCreateView(TiViewProxy.java:485)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at ti.modules.titanium.ui.TableViewProxy.getTableView(TableViewProxy.java:147)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at ti.modules.titanium.ui.TableViewProxy.handleMessage(TableViewProxy.java:860)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at android.os.Handler.dispatchMessage(Handler.java:98)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at org.<USER>kroll.common.TiMessenger.dispatchMessage(TiMessenger.java:394)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at org.<USER>kroll.common.TiMessenger.dispatchPendingMessages(TiMessenger.java:379)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at org.<USER>kroll.common.TiMessenger$2.getResult(TiMessenger.java:257)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at org.<USER>kroll.common.TiMessenger.sendBlockingMessage(TiMessenger.java:291)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at org.<USER>kroll.common.TiMessenger.sendBlockingRuntimeMessage(TiMessenger.java:191)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at org.<USER>kroll.KrollProxy.fireSyncEvent(KrollProxy.java:800)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at org.<USER>titanium.proxy.TiWindowProxy.closeFromActivity(TiWindowProxy.java:206)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at org.<USER>titanium.TiBaseActivity.onDestroy(TiBaseActivity.java:1591)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at org.<USER>titanium.TiActivity.onDestroy(TiActivity.java:32)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at android.app.Activity.performDestroy(Activity.java:6889)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at android.app.Instrumentation.callActivityOnDestroy(Instrumentation.java:1175)  11-01 00:56:36.663: E/AndroidRuntime(22347):   at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:4231)  11-01 00:56:36.663: E/AndroidRuntime(22347):   ... 9 more",Bug,Critical,Closed,"2017-11-01 07:33:49","2017-11-01 07:33:49",2
"The Titanium SDK ","tintColor hex value only works without '#' on iOS simulator","{{tintColor}} works with the hex value only, without the '#'...        To replicate, create a basic alloy app. Replace code in index.xml and index.js with below, respectively:    INDEX.XML  ----------------  <Alloy>   <Window class=container layout=vertical backgroundColor=olive>    <ImageView id=img image=/images/ic_assignment_white_48.png top=40% tintColor=#ffa500 />    <ImageView id=img2 image=/images/ic_assignment_white_48.png  tintColor=ffa500 />    <ImageView id=img3 image=/images/ic_assignment_white_48.png  />    <ImageView id=img4 image=/images/ic_assignment_white_48.png  />   </Window>  </Alloy>        INDEX.JS  ------------  $.index.open();    $.img3.tintColor= '#ffa500';  $.img4.tintColor= 'ffa500';  ",Bug,Medium,Closed,"2017-10-27 02:35:35","2017-10-27 02:35:35",3
"The Titanium SDK ","Android: Custom theme not applying when background color is transparent","Hi,  Custom theme not applying when the background color is transparent.Testing in android with the latest SDK and found that customs theme properties are not getting applied.    Attached the project (AppcleratorBug) with custom_theme.xml having the below properties.  *android:textAllCaps*  *android:windowActionBar*      In the tss when we apply the background color 'transparent' the theme properties are not getting applied.    Tested for all other colors and works fine.",Bug,High,Closed,"2017-11-01 17:56:31","2017-11-01 17:56:31",3
"The Titanium SDK ","Android: HTML Key is missing under the source object for web view","h5. Issue Description     Hi team, i have found an issue after upgrading the <USER>SDK from 6.0.4 to 6.2.2.   HTML Key is missing under the source object. i used that key to find out whether the response(url response data) is success/error based on it.     Added the Info method to capture the response in the code. For example added google.com in the web view url.     Please let me know if there is any change to the source object or if i need to use any other method/object.     ",Bug,High,Closed,"2017-11-01 17:47:12","2017-11-01 17:47:12",2
"The Titanium SDK ","Android: Ti.UI.Window.orientation should return screen orientation in split-screen mode","*Summary:*  The Ti.UI.Window.orientation property should return the orientation that the OS is displaying its screen contents. This is how it works on iOS. Instead, on Android, it returns the orientation of the app window based on its width and height (ex: if width > height, then it's landscape).    This is an issue when displaying the app in split-screen mode. For example, when the device is held landscape, apps are displayed side-by-side in portrait form. Android currently returns portrait in this case when it should return landscape (the screen's orientation).    *Steps to Reproduce:*    # Run the below code on an Android 7.0 or newer device.  # Hold the device in portrait orientation.  # On the bottom navigation bar, hold the square button (aka: the multi-tasking button).  # Select an app from the multi-tasking app list to put it into split-screen mode.  # Notice that this app displays Landscape instead of Portrait.  # Rotate the device 90 degrees to landscape form.  # Notice that this app displays Portrait instead of Landscape.    *Test Code:*      ",Bug,Low,Closed,"2017-10-31 21:38:04","2017-10-31 21:38:04",3
"The Titanium SDK ","Windows: Incorrect event's source.id when in separate controller","h5. Issue Description   Issue: When wrapping view(s) within an outer view, and a click event listener is added to that outer view, and all of this is in a standalone alloy controller, the feedback gotten from the click event object in regards to what the source of the click is, is incorrect.     SAMPLE PROJECT:   https://propelics.box.com/s/o7uaqpvwwtd41g71gurdgg9022obdjal     STEPS TO REPRODUCE:   1.- Open and run sample project. Can be deployed with -T ws-local   2.- A window with two views will appear: one white with a smaller red view in within and one cyan with a smaller purple view in within.   3.- Click on the red inner view of the white view and observe the console output: the event object will print with a source.id = moreButton, which is correct, as you'll can verify in the contents of index.xml.   4.- Now click on the purple inner view of the cyan view and observe the console output: the event object will print with a source.id = siteTab, which is incorrect, as you can verify in the contents of smallerViewController.xml.     As demonstrated, this is only reproducible in standalone alloy controllers.     NOTE: Exact the same behavior happens with a Ti.UI.Button. ",Bug,High,Closed,"2017-10-31 19:24:07","2017-10-31 19:24:07",5
"The Titanium SDK ","Android: webview userAgent  doesn't change","Hi,  I've got a problem with webview on Androids when setting the userAgent. I'm using SDK 6.2.2GA    When I set the userAgent it doesn't change. I've tried this in a Samsung S7 (android 7)and HTC M8 (android 6). However, it works on an iPhone.    Here is some example code:      Environment :  ",Bug,None,Closed,"2017-10-31 18:23:57","2017-10-31 18:23:57",3
"The Titanium SDK ","Syntax eval is not working inside the CommonJS module.","JavaScript eval() function is not working inside the CommonJS module and the iOS device. It can not detect the variable value when we write down inside the CommonJS module. But it works if we write eval() function to the app.js file.    Steps to Reproduce:    1. Create a new App  2. Disable LiveView   3. Run the following test code on the iOS device    Note: It works if liveveiw is enabled. Also, working in a simulator.    {code:title=app.js}  var win = Ti.UI.createWindow({   backgroundColor : 'red',   layout : vertical  });    // Create a Button.  var request = Ti.UI.createButton({   title : 'Got it',   height : Ti.UI.SIZE,   width : Ti.UI.SIZE,   top : 50  });      request.addEventListener('click', function(e) {     var EvalTestClass = require('lib/evalTest');     var evalTest = new EvalTestClass();     evalTest.open();  });    win.add(request);    win.open();            Error Code      Thanks    ",Bug,Critical,Closed,"2017-09-07 04:01:26","2017-09-07 04:01:26",5
"The Titanium SDK ","CLI: Resolve all Node 8 issues","There are some common issues / warnings when using the CLI with Node 8:    We should go through all Titanium-related projects and resolve all warnings before the GA, including the app-build, module build, Hyperloop and whatever else.",Bug,None,Resolved,"2017-10-29 19:09:31","2017-10-29 19:09:31",0
"The Titanium SDK ","Hyperloop: Android - Error in opening zip file bcel-5.2.jar","I removed <USER> and reinstalled everything  Steps to reproduce  I installed appceletaror, titanium sdk 6.2.2.GA and 6.1.2.GA  Created a new proyect enabling hyperloop  run: appc run -p android --build-only  Project fails to compile        I reinstalled hyperloop several times and same result  ",Bug,Critical,Closed,"2017-10-28 20:26:25","2017-10-28 20:26:25",1
"The Titanium SDK ","Android: Update module build tools to compile with Java 7","*Summary:*  Currently, the appc command line tool builds Titanium Android modules with Java 6 which is obsolete and generates compiler warnings.    We should switch to compiling modules with Java 7 which is 100% supported by the Android SDK and is what Google currently recommends. Plus, module developers can take advantage of Java 7's newest language features, such as the Closable try-resouce feature.    *Note:*  The Android SDK does not fully support Java 8 yet. We can use the JDK 8 or JDK 9 tools, but compile with Java 7 until Google has full support.    *How to test:*    # Unzip the attached [^java7module.zip] file.  # Open the Mac terminal (or Windows command prompt).  # In the terminal, cd (change directory) to the ./java7Module/android directory.  # In the terminal, enter: appc ti sdk select  # You will be prompted to select an SDK version. Enter the newest Titanium version.  # In the terminal, enter: appc run -p android --build-only  # Verify that the build was successful. (Note that compiler errors will occur if compiling with Java 6.)  ",Improvement,High,Closed,"2017-10-27 01:22:10","2017-10-27 01:22:10",3
"The Titanium SDK ","iOS: ListView itemclick event issues with SearchBar","Hi All,    My app gets crashed during itemclick event of Listview in IOS,* while a list item is clicked &  search bar is active.*  On click of item i'm closing the current window.  Same code works perfectly in Android.    Scenario 1:  - On click on item, window gets closed as expected.  - In this case search bar is inactive.    Scenario 2:  - Search for an item in search bar & on click of that particular item the app gets freezed & clicking anywhere makes app crashed.  - Expected result was to close the current window.  - alert & console logs get executed though.    Have attached dummy code & some screenshots for testing.    Thanks.",Bug,Critical,Closed,"2017-10-26 14:22:53","2017-10-26 14:22:53",2
"The Titanium SDK ","app icon is shown instead of app splash screen","When the app is launched, app icon is shown instead of the app splash image.    re-produce, create a basic alloy and and run.",Bug,Critical,Closed,"2017-10-23 04:36:48","2017-10-23 04:36:48",1
"The Titanium SDK ","Android: Update SDK to compile with Java 7","*Summary:*  The Titanium SDK for Android is currently built with Java 6, which is obsolete and generates compiler warnings when building with the Android SDK.    We should switch to compiling with Java 7 which is 100% supported by the Android SDK and is what Google currently recommends. Plus, we can take advantage of Java 7's newest language features, such as the Closable try-resouce feature.    *Note:*  The Android SDK does not fully support Java 8 yet. We can use the JDK 8 or JDK 9 tools, but compile with Java 7 until Google has full support.",Improvement,High,Closed,"2017-10-25 22:22:01","2017-10-25 22:22:01",1
"The Titanium SDK ","Android: Support ARM64","- Natively support ARM64 instead of relying on ARMv7 compatibility",Improvement,High,Closed,"2017-10-25 17:46:39","2017-10-25 17:46:39",5
"The Titanium SDK ","Hyperloop: iOS - Cannot use version-specific API's on older devices","Crash file included in attachments.    Problem:  This happens upon app boot, and is related with HyperLoop, iOS9, and trying to access an iOS Framework that's non-existant for the device    XCode crash:   AppName: Dyld Message: Library not loaded: /System/Library/Frameworks/Speech.framework/Speech    More info:  This happens even if the code is never accessed or required, as shown below in code, so version checks don't matter.    Unable to use HyperLoop v2.2.0 because it breaks speech functionality as noted here:   https://jira.<USER>org/browse/TIMOB-25432    ####################################          Code to test:    {code:title=app/alloy.js}        {code:title=app/controllers/index.js}  $.index.open();    /* Whether below is commented out or not the crash still happens */    setupSpeech();    /**  * @function setupSpeech  * @summary Initialize then request permissions  * @returns {void}  */  function setupSpeech() {  var speech = require('ti.speech.ios');  speech.initialize();  speech.requestSpeechRecognizerAuthorization(function (e) {  if (!e.success) {  alert('Speech recognition was not authorized!');  error();  } else {  speech.requestMicrophoneAuthorization(function (e) {  if (!e.success) {  alert('Permission to record audio was not authorized!');  } else {  startSpeechRecognition();  }  });  }  });  }    /**  * @function startSpeechRecognition  * @summary Start Speech Recognition  * @returns {void}  */  function startSpeechRecognition() {  var started = speech.startRecognition({  type: speech.SOURCE_TYPE_MICROPHONE, // optional, as it defaults to this if url is undefined  progress: progressCallback,  id: ++speechInstance,  });    if (started) {  $.label.text = 'Listening...';  }  }        {code:title=app/styles/index.tss}  .container: {  backgroundColor:white  }    Label: {  width: Ti.UI.SIZE,  height: Ti.UI.SIZE,  color: #000  }    #label: {  font: {  fontSize: 12  }  }        {code:title=app/lib/ti.speech.ios.js}  'use strict';  /***  * @file Use Speech Recognition functionality in iOS 10  * @module ti.speech  * @author <USER>  * @author <USER>  * @requires Hyperloop  * @requires Speech  * @version 1.0.0  * @since 1.0.0  */    if (OS_IOS && parseInt(Ti.Platform.version) > 9) {  var AVAudioEngine = require('AVFoundation/AVAudioEngine');  var AVAudioSession = require('AVFoundation/AVAudioSession');  var AVFoundation = require('AVFoundation');  var NSBundle = require('Foundation/NSBundle');  var NSError = require('Foundation/NSError');  var NSLocale = require('Foundation/NSLocale');  var NSURL = require('Foundation/NSURL');  var SFSpeechAudioBufferRecognitionRequest = require('Speech/SFSpeechAudioBufferRecognitionRequest');  var SFSpeechRecognitionRequest = require('Speech/SFSpeechRecognitionRequest');  var SFSpeechRecognitionResult = require('Speech/SFSpeechRecognitionResult');  var SFSpeechRecognitionTask = require('Speech/SFSpeechRecognitionTask');  var SFSpeechRecognizer = require('Speech/SFSpeechRecognizer');  var SFSpeechURLRecognitionRequest = require('Speech/SFSpeechURLRecognitionRequest');  var Speech = require('Speech');    var audioEngine;  var request;  var recognitionTask;  var speechRecognizer;  var SOURCE_TYPE_URL = 'url';  var SOURCE_TYPE_MICROPHONE = 'microphone';    exports.SOURCE_TYPE_URL = SOURCE_TYPE_URL;  exports.SOURCE_TYPE_MICROPHONE = SOURCE_TYPE_MICROPHONE;  exports.RECOGNITION_STATE_STARTING = Speech.SFSpeechRecognitionTaskStateStarting;  exports.RECOGNITION_STATE_RUNNING = Speech.SFSpeechRecognitionTaskStateRunning;  exports.RECOGNITION_STATE_FINISHING = Speech.SFSpeechRecognitionTaskStateFinishing;  exports.RECOGNITION_STATE_COMPLETED = Speech.SFSpeechRecognitionTaskStateCompleted;  exports.RECOGNITION_STATE_CANCELING = Speech.SFSpeechRecognitionTaskStateCanceling;  } else {  alert('iOS version 9 or below');  }      /**  * @function initialize  * @summary Creates a speech recognizer for the specified locale, if supported.  * @param {string} locale - Locale to use for initializing speech recognizer  * @since 1.0.0  */  exports.initialize = function (locale) {  var __prefix = __filename + '.requestSpeechRecognizerAuthorization: ';  console.info(__prefix + 'entering');  if (speechRecognizer) {  speechRecognizer = null;  // Can't delete local variable in strict mode  // delete speechRecognizer;  }    if (locale) {  speechRecognizer = SFSpeechRecognizer.alloc().initWithLocale(NSLocale.alloc().initWithLocaleIdentifier(locale));  } else {  speechRecognizer = new SFSpeechRecognizer();  }  console.info(__prefix + 'exiting');  };    /**  * Callback used for reporting success of requesting permissions for features  * @callback permissionCallback  * @param {object} param - Object that contains info about the success of the request  * @param {string} param.message - Friendly message regarding the success or failure of request  * @param {number} param.status - Status of the permission request as returned from the OS  * @param {boolean} param.success - Value is true, if request was successful, otherwise false  */    /**  * @function requestSpeechRecognizerAuthorization  * @summary Asks the user to grant your app permission to perform speech recognition.  * @param {permissionCallback} callback - A function that is called when the authorization request has been approved or denied.  * @since 1.0.0  */  exports.requestSpeechRecognizerAuthorization = function (callback) {  var __prefix = __filename + '.requestSpeechRecognizerAuthorization: ';  console.info(__prefix + 'entering');  SFSpeechRecognizer.requestAuthorization(function (status) {  var success = false;  var message = '';    switch (status) {  case Speech.SFSpeechRecognizerAuthorizationStatusAuthorized:  // User gave access to speech recognition  message = 'User gave access to speech recognition';  success = true;  break;    case Speech.SFSpeechRecognizerAuthorizationStatusDenied:  // User denied access to speech recognition  message = 'User denied access to speech recognition';  break;    case Speech.SFSpeechRecognizerAuthorizationStatusRestricted:  // Speech recognition restricted on this device  message = 'Speech recognition restricted on this device';  break;    case Speech.SFSpeechRecognizerAuthorizationStatusNotDetermined:  // Speech recognition not yet authorized  message = 'Speech recognition not yet authorized';  break;    default:  // Should not be here. Issue should be resolved in Hyperloop 2.0.2.  message = 'Something has gone wrong requesting Speech Recognition authorization';  break;  }    // TODO: Temporarily setting success to true until Hyperloop 2.0.2, https://jira.<USER>org/browse/TIMOB-23902  // success = true;    callback({  success: success,  message: message,  status: status,  });  });  console.info(__prefix + 'exiting');  };    /**  * @function requestMicrophoneAuthorization  * @summary Asks the user to grant your app permission to record audio using microphone.  * @param {permissionCallback} callback - A function that is called when the authorization request has been approved or denied.  * @since 1.0.0  */  exports.requestMicrophoneAuthorization = function (callback) {  var __prefix = __filename + '.requestMicrophoneAuthorization: ';  console.info(__prefix + 'entering');  Ti.Media.requestAudioRecorderPermissions(function (mic) {  callback({  success: mic.success,  message: mic.success ? 'Recording permission has been granted.' : 'Recording permission has been denied.',  });  });  console.info(__prefix + 'exiting');  };      /**  * Indicates whether the speech recognizer is available.  * Even though a speech recognizer is supported for a specific locale,  * it might be unavailable for reasons such as a nonfunctioning Internet connection.  * @function isAvailable  * @summary Indicates whether the speech recognizer is available.  * @since 1.0.0  * @returns {boolean} - A Boolean value that indicates whether the speech recognizer is available.  */  exports.isAvailable = function () {  return speechRecognizer && speechRecognizer.isAvailable();  };    /**  * This callback is used to report progress on speech Recognition  * @callback progressCallback  * @param {object} param - Object that contains info about the state of the speech recognition  * @param {string} param.value - Text transcription of speech recognition  * @param {object} param.error - Contains any error returned from the speech recognition engine  * @param {number} param.state - Represents the state of the speech recognition engine  * @param {boolean} param.finished - Value is true, if recognition is finished, otherwise false  */      /**  * @function startRecognition  * @summary Starts the speech recognition engine and begins processing  * @param {object} args - Parameters used to start speech recognition  * @param {string} [args.type=SOURCE_TYPE_MICROPHONE] - Indicates source for speech recognition (microphone or url)  * @param {string} [args.url] - Url for audio file to apply speech recognition to.  * @param {progressCallback} args.progress - Callback function used to report progress of speech recognition  * @since 1.0.0  * @returns {boolean} - Returns true if started successfully, otherwise false.  */  exports.startRecognition = function (args) {  var __prefix = __filename + '.startRecognition: ';  console.info(__prefix + 'entering');  var progressCallback = args.progress || null;  var type = args.type;  var instance = args.id;  console.error('speech instance: ' + JSON.stringify(instance, null, 2));    if (!type && args.url) {  type = SOURCE_TYPE_URL;  } else if (!type) {  type = SOURCE_TYPE_MICROPHONE;  }    if (!progressCallback) {  Ti.API.error('No progress callback supplied - You will not be notified about transcription updates');  }    if (recognitionTask) {  recognitionTask.cancel();  recognitionTask = null;  // Can't delete local variable in strict mode  // delete recognitionTask;  }    if (request) {  request = null;  }    if (type == SOURCE_TYPE_URL) {  var url = args.url.split('.');  var ext = url.pop();  var soundPath = NSBundle.mainBundle.pathForResourceOfType(url.join('.'), ext);  var soundURL = NSURL.fileURLWithPath(soundPath);    request = SFSpeechURLRecognitionRequest.alloc().initWithURL(soundURL);  if (!request) {  console.error('Unable to created a SFSpeechURLRecognitionRequest object');  return false;  }    request.shouldReportPartialResults = true;    if (!speechRecognizer) {  exports.initialize();  }    recognitionTask = speechRecognizer.recognitionTaskWithRequestResultHandler(request, function (result, error) {      if (!recognitionTask) {  // The recognitionTask has already been cancelled.  return;  }    if (recognitionTask.state === Speech.SFSpeechRecognitionTaskStateCanceling) {  // The recognitionTask is being cancelled so no progress should be reported after this.  console.info('The speech recognition task has been cancelled.');  _.isFunction(progressCallback) &&  progressCallback({  id: instance,  error: error,  value: result && result.bestTranscription.formattedString,  state: recognitionTask && recognitionTask.state,  finished: true,  });    progressCallback = null;  request = null;  recognitionTask = null;  return;  }    _.isFunction(progressCallback) &&  progressCallback({  id: instance,  error: error,  value: result && result.bestTranscription.formattedString,  state: recognitionTask && recognitionTask.state,  finished: result && result.isFinal(),  });    if (error || (result && result.isFinal())) {  recognitionTask = null;  request = null;  return;  }  });  console.info(__prefix + 'exiting');  return true;  } else if (type == SOURCE_TYPE_MICROPHONE) {    if (!audioEngine) {  audioEngine = new AVAudioEngine();  }    if (!audioEngine.inputNode) {  console.error('Audio engine has no input node');  return false;  }    request = new SFSpeechAudioBufferRecognitionRequest();  request.shouldReportPartialResults = true;    // Create recognition task that will listen to live speech and send progress to callback  recognitionTask = speechRecognizer.recognitionTaskWithRequestResultHandler(request, function (result, error) {  var ___prefix = __filename + '.speechRecognizer.recognitionTaskWithRequestResultHandler: ';  console.info(___prefix + 'entering');  var isFinal = result && result.isFinal();  _.isFunction(progressCallback) && progressCallback({  id: instance,  error: error,  value: result && result.bestTranscription.formattedString,  state: recognitionTask && recognitionTask.state,  finished: isFinal,  });  if (error || isFinal) {  if (audioEngine) {    // Need to make sure that tap has not been removed already.  // App will crash if removeTapOnBus() is called after removal  if (audioEngine.inputNode && audioEngine.inputNode.tapInstalled) {  audioEngine.inputNode.removeTapOnBus(0);  audioEngine.inputNode.tapInstalled = false;  }    audioEngine.isRunning() && audioEngine.stop();  }  request && request.endAudio();  recognitionTask = null;  console.info(___prefix + 'exiting');  return;  }    console.info(___prefix + 'exiting');  });    if (audioEngine.inputNode) {  audioEngine.inputNode.removeTapOnBus(0);  audioEngine.inputNode.tapInstalled = false;  }    audioEngine.inputNode.installTapOnBusBufferSizeFormatBlock(0, 1024, audioEngine.inputNode.outputFormatForBus(0), function (buffer, when) {  request && request.appendAudioPCMBuffer(buffer);  });  audioEngine.inputNode.tapInstalled = true;    audioEngine.prepare();  var audioEngineStartError = new NSError();  var audioEngineStartSuccess = audioEngine.startAndReturnError(audioEngineStartError);  console.info(__prefix + 'exiting');  if (!audioEngineStartSuccess) {  //TODO: Do something with audioEngineStartError  return false;  }      return true;  } else {  console.error('Unhandled type supplied:' + type);  return false;  }  };    /**  * @function stopRecognition  * @summary Forces speech recognition components to stop processing  * @since 1.0.0  */  exports.stopRecognition = function () {  var __prefix = __filename + '.stopRecognition: ';  console.info(__prefix + 'entering');  if (audioEngine) {    // if we are using the audioEngine for real-time audio, we need to stop components  audioEngine.isRunning() && audioEngine.stop();    // Need to make sure that tap has not been removed already.  // App will crash if removeTapOnBus() is called after removal  request && request.endAudio();  if (audioEngine.inputNode && audioEngine.inputNode.tapInstalled) {  audioEngine.inputNode.removeTapOnBus(0);  audioEngine.inputNode.tapInstalled = false;  }    } else if (recognitionTask) {  // If are using a file for audio recognition, we need to cancel the recognition task  recognitionTask.cancel();  }  console.info(__prefix + 'exiting');  };    {code}    What % of your users are affected? [less than 10]  Does this affect data integrity? [No]  Do you have a viable workaround? [No]  Does this affect critical application functionality? [Yes]  What business functionality are you unable to perform?     [iOS 9 crashes on boot for all users]",Bug,Critical,Closed,"2017-10-24 21:25:15","2017-10-24 21:25:15",5
"The Titanium SDK ","Android: Add toolbar tests and drawables loading callback","Add unit tests for Ti.UI.Toolbar component (mainly Android).  Add a callback for loading drawables as logo or icons.  Add a test for loading a density depending resource in ImageView.",Improvement,Low,Closed,"2017-10-24 14:41:55","2017-10-24 14:41:55",5
"The Titanium SDK ","Windows: Auto-detect requirement of cmake needing to be rerun in module build","h5.Description    Currently when building a module, if the module has been cloned from git then when building the project the various architectures will be skipped and no module to be produced. We could detect what exists on the filesystem and regenerate what's required (could be a little iffy), or we could place all of the solutions into a build/ dir and force --run-cmake to true if that dir doesnt exist",Improvement,Medium,Closed,"2017-10-24 08:25:26","2017-10-24 08:25:26",5
"The Titanium SDK ","Hyperloop: iOS - Cannot find class with name: SFSpeechRecognizer when placed in app/lib","From the community (opening just in case):    Try it out with the [Ti.Speech|https://github.com/hyperloop-modules/ti.speech] project.    *EDIT*: It seems to works when the class is not instantiated in {{app/lib}} but in {{app/controllers/index.js}}, so probably our metabase cannt find declarations anymore when placed in app/lib.",Bug,High,Closed,"2017-10-24 07:55:20","2017-10-24 07:55:20",3
"The Titanium SDK ","Android: java.lang.ClassCastException: ti.modules.titanium.ui.widget.TiUILabel$1 cannot be cast to android.view.ViewGroup;","Filing this ticket from the community just in case it's our issue:  ",Bug,Critical,Closed,"2017-10-24 07:35:03","2017-10-24 07:35:03",3
"The Titanium SDK ","CLI: Support detection of Java 9","  ",Improvement,Critical,Closed,"2017-10-21 17:36:10","2017-10-21 17:36:10",5
"The Titanium SDK ","Android: ScrollView does not fire longclick events.","*Summary:*  An Android ScrollView's scrollable content area never fires a longclick event.    *Steps to reproduce:*  # Run the below test code on an Android device.  # Tap and hold your finger on the app window for a couple of seconds.        *Result:*  No alert is displayed for the longclick event.    *Expected Result:*  An alert displaying longclick should be displayed when the event has been received.    *Work-Around:*  The longpress event is supported. This event can be used instead.    *Note:*  On Android, the longpress and longclick events are normally fired back-to-back.  ",Bug,Low,Closed,"2017-10-20 21:55:33","2017-10-20 21:55:33",1
"The Titanium SDK ","Android: Module build will fail if documentation folder contains non-markdown files","When trying to compile this Android module: https://github.com/nuno/TiCollectionView the current CLI will stop at  {code}[INFO]  Packaging the module{code}  because the documentation folder (https://github.com/nuno/TiCollectionView/tree/master/android/documentation) contains images.    The _buildModule.js tries to generate markdown out of the files at  https://github.com/<USER>titanium_mobile/blob/b56b146871238abe931333ead44b5b5b027e877f/android/cli/commands/_buildModule.js    Since I'm not sure what files are allowed in this folder a fix would be to exclude images:  {code:javascript}  if (fs.statSync(currentFile).isFile() &&   currentFile.indexOf(.png) == -1 &&   currentFile.indexOf(.gif) == -1) {   var obj = {},    contents = fs.readFileSync(currentFile).toString();     obj[file] = markdown.toHTML(contents);   this.documentation.push(obj);  }  {code}    or only allow {{.md}} files (or even .txt)     {code:javascript}  if (fs.statSync(currentFile).isFile() &&   (currentFile.indexOf(.md) != -1 ||   currentFile.indexOf(.txt) != -1)) {   var obj = {},    contents = fs.readFileSync(currentFile).toString();     obj[file] = markdown.toHTML(contents);   this.documentation.push(obj);  }  {code}    Ti 6.2.2.GA",Improvement,Critical,Closed,"2017-09-25 17:26:19","2017-09-25 17:26:19",5
"The Titanium SDK ","Hyperloop: iOS - Pods with hyphens not supported","*Steps to reproduce the behavior*  # Create a new empty app  # Add the following Podfile and replace {{<project_name>}} with the name of your test project.    # Add the following to {{app/controllers/index.js}}      *Actual behavior*  The build crashes with the following log output      *Expected behavior*  The build runs successful and the user is able to use the provided demo code.    *Additional notes*  In addition to the build failure the generated js and native module wrapper files will be generated with a hyphen in their name, which is invalid and needs to be normalized to generate a valid name.",Bug,High,Open,"2017-10-19 12:36:33","2017-10-19 12:36:33",5
"The Titanium SDK ","Hyperloop: iOS - Improve metabase caching","Hyperloop will currently always regenerate the metabase. Depending on how extensively Hyperloop is used, this can take a few seconds. There is a partial caching for subsequent processes that prevents further processing of the metabase if the resulting JSON doesn't change. This needs to be improved so that the metabase generation will be entirely skipped if no input parameters to the metabase generator changed compared to the last run.",Improvement,Medium,Open,"2017-10-19 11:52:36","2017-10-19 11:52:36",8
"The Titanium SDK ","Android: getting image from Google Drive via openPhotoGallery causes a crash","Test project    *index.js:*      *index.xml:*      *I'm getting error if select image from google drive:*      *I managed to get around it by:*        P.S. of course, working fine for local images",Bug,Critical,Closed,"2017-09-18 11:54:42","2017-09-18 11:54:42",5
"The Titanium SDK ","Xcode 9: Debug -> Location does not show standard locations and custom location does not set location","When building with Xcode 9 and iOS 11 the menu option Debug -> Location does not show the standard locations (apple etc) and custom location does not set location.  Using location services / get location etc in app produces a GPS error.    Building to 10.3 or below shows the locations correctly and location works as expected    ",Bug,Critical,Closed,"2017-10-17 16:30:34","2017-10-17 16:30:34",2
"The Titanium SDK ","Block-scoped declarations (let, const, function, class) not yet supported outside strict mode","iOS does not work, Android does. Reported via Slack and also mentioned [here|https://jira.<USER>org/browse/TIMOB-25368?focusedCommentId=428740&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-428740]. The related line is [this one|https://github.com/<USER>node-titanium-sdk/blame/master/lib/titanium.js#L97] and may be popped up when we moved the node-titanium-sdk from the timob to it's own repo.      h5.Steps to reproduce    1. Switch to node 4  2. Attempt to build an application","New Feature",Critical,Closed,"2017-10-18 12:58:47","2017-10-18 12:58:47",1
"The Titanium SDK ","Hyperloop: iOS - Can't find blocks from typedefs","*Steps to reproduce the behavior*  # Create a new app, download the Contentful SDK from http://static.contentful.com/downloads/iOS/ContentfulDeliveryAPI-1.10.4.zip and place it under {{app/platform/ios}}  # Add the following sample code to your app    # Build and run your app    *Actual behavior*  The build fails with the following error message:      *Expected behavior*  The build should be successful and the app should run without problems. You should see a debug message {{The access token you sent could not be found or is invalid.}}, indicating that the error block was successfully called.",Bug,High,Closed,"2017-10-17 12:01:34","2017-10-17 12:01:34",5
"The Titanium SDK ","Hyperloop: iOS - Framework handling regressions","Configuring third-party sources in appc.js causes the FRAMEWORK_SEARCH_PATHS build setting to be overwritten without inheriting other paths. Also pulling in additional system frameworks via the {{frameworks}} setting in {{appc.js}} doesn't work anymore. This is a regression to Hyperloop 2.1.3.    *Steps to reproduce the issue*  # Follow the instructions in TIMOB-25393 by placing the Contentful SDK inside the hyperloop-examples project and make sure to select a SDK build that already includes the fix from that ticket  # Add the following system frameworks to the {{frameworks}} configuration option in {{appc.js}}  #* SystemConfiguration  #* MobileCoreServices  #* CoreData  # Add the following sample code to {{app/controllers/index.js}}    # Build and run the hyperloop-examples application    *Actual behavior*  The build fails with the following linker error due to not linking against CoreData framework:      *Expected behavior*  The build links against the specified system frameworks and is successful. The app loads without a crash.",Bug,Critical,Closed,"2017-10-17 11:36:52","2017-10-17 11:36:52",2
"The Titanium SDK ","Hyperloop does not generate code for Flurry & Contentful Pods","We've been trying to use 3rd party Pods, Frameworks and Libraries with Hyperloop and we've been running into issues.  It seems that when you step up from the trivial Pods like GLCalendar and JBChartView, Hyperloop seems to break down.    Again, we're using the hyperloop_examples app since that is a known good app that works with Hyperloop.    The Pods we added were for Flurry and Contentful.          In the case of Contentful, it tries to load these .js files, but they aren't there (see below).      The same happens when we load the Flurry Pod - except in that case there are no source .m files, just a .a library file and it doesn't seem to recognize any classes at all.    My colleague also believes that having hyphens in the names may be having an impact in the case of the Flurry SDK.    In the end, if you try to use these Pods, it can't resolve references to the 'require' because there are no files generated like cdaclient.js    [DEBUG] :  Loading: /Users/administrator/Library/Developer/CoreSimulator/Devices/96DE9717-0DBE-450D-960D-45FA0ABC90B0/data/Containers/Bundle/Application/F082145F-2193-414F-920E-698FFFEE1DFE/Hyperloop_Sample.app/hyperloop/contentfuldeliveryapi/cdaclient, Resource: hyperloop/contentfuldeliveryapi/cdaclient  [DEBUG] :  Loading: /Users/administrator/Library/Developer/CoreSimulator/Devices/96DE9717-0DBE-450D-960D-45FA0ABC90B0/data/Containers/Bundle/Application/F082145F-2193-414F-920E-698FFFEE1DFE/Hyperloop_Sample.app/hyperloop/contentfuldeliveryapi/cdaclient.js, Resource: hyperloop/contentfuldeliveryapi/cdaclient_js  [DEBUG] :  Loading: /Users/administrator/Library/Developer/CoreSimulator/Devices/96DE9717-0DBE-450D-960D-45FA0ABC90B0/data/Containers/Bundle/Application/F082145F-2193-414F-920E-698FFFEE1DFE/Hyperloop_Sample.app/hyperloop/contentfuldeliveryapi/cdaclient.json, Resource: hyperloop/contentfuldeliveryapi/cdaclient_json  [DEBUG] :  Loading: /Users/administrator/Library/Developer/CoreSimulator/Devices/96DE9717-0DBE-450D-960D-45FA0ABC90B0/data/Containers/Bundle/Application/F082145F-2193-414F-920E-698FFFEE1DFE/Hyperloop_Sample.app/hyperloop/contentfuldeliveryapi/cdaclient/package.json, Resource: hyperloop/contentfuldeliveryapi/cdaclient/package_json  [DEBUG] :  Loading: /Users/administrator/Library/Developer/CoreSimulator/Devices/96DE9717-0DBE-450D-960D-45FA0ABC90B0/data/Containers/Bundle/Application/F082145F-2193-414F-920E-698FFFEE1DFE/Hyperloop_Sample.app/hyperloop/contentfuldeliveryapi/cdaclient/index.js, Resource: hyperloop/contentfuldeliveryapi/cdaclient/index_js  [DEBUG] :  Loading: /Users/administrator/Library/Developer/CoreSimulator/Devices/96DE9717-0DBE-450D-960D-45FA0ABC90B0/data/Containers/Bundle/Application/F082145F-2193-414F-920E-698FFFEE1DFE/Hyperloop_Sample.app/hyperloop/contentfuldeliveryapi/cdaclient/index.json, Resource: hyperloop/contentfuldeliveryapi/cdaclient/index_json",Bug,Critical,Closed,"2017-10-16 19:20:13","2017-10-16 19:20:13",5
"The Titanium SDK ","Update module apiversion","As we are expecting significant internal changes (such as JavaScriptCore upgrade) on upcoming major release (7.0.0), the module {{apiversion}} needs to be bumped to {{4}}.","Technical task",Medium,Closed,"2017-10-17 03:48:32","2017-10-17 03:48:32",3
"The Titanium SDK ","Windows: Hyperlop to drop Windows 8.1 support","As of {{Titanium SDK 7.0.0}}, we are going to drop support for Windows (Store/Phone) 8.1. Hyperloop needs to be dropping support for them too.  Since we are going to have significant internal changes (such as JavaScriptCore upgrade), the module {{apiversion}} will be bumped to {{4}}.",Improvement,Medium,Closed,"2017-10-17 02:10:03","2017-10-17 02:10:03",3
"The Titanium SDK ","Android: Alert window does not appear with remote security policy when device is offline","*Description*  An app built with remote security policy is expected to pop up an alert when the device is offline. This used to work for SDK < 6.0.4. However, for SDK versions 6.0.4 - 6.2.2 (current GA), the alert does not pop up and stays on the splash screen. This is a regression.    *Steps to reproduce*  1. Create a default classic app.  2. Add this to tiapp.xml:    3. Set up the test device to have no network connectivity.  4. Build and launch the app to an Android device.    *Actual Results*  For the affected versions, the app stays at the launch screen, and the expected pop up alert does not pop up.    *Expected Results*  An alert should pop up.    *Note:*  Documentation for this feature can be found here...  https://docs.<USER>com/platform/latest/#!/guide/tiapp.xml_and_timodule.xml_Reference-section-src-29004921_tiapp.xmlandtimodule.xmlReference-appc-sourcecode-encryption-policy  ",Bug,None,Closed,"2017-10-16 22:54:41","2017-10-16 22:54:41",5
"The Titanium SDK ","Get Certificate Expired Error when using old CLI.","h6.Problem  1. More than one customers are getting an error “certificate has expired”  using CLI v5.1.0 or CLI v6.1.0 even after alloy compiler is completed successfully. (Attached screenshot)  2. For now, Customer is not be able to upgrade to v6.2.3 as they gonna release sooner, there is no time to upgrade env and test it.    Any idea how to fix/workaround it and make sure customer can use old CLI and SDK  Below is the project setup configuration that we are using for eSMART Thailand application.     Application  eSMART Thailand application  SDK version .  5.1.2.GA  CLI version .  5.1.0  Alloy version . 1.7.26    h6.Note  This is not happening when we are using CLI v6.2.3 or CLI 6.2.4",Bug,None,Closed,"2017-10-16 11:30:00","2017-10-16 11:30:00",0
"The Titanium SDK ","Multiple network API is not functional","Hi guys, I'm facing some problems since last friday afternoon.  At first, forward geocoding is not responding and throws certificate error(see attachment).  I tried to uninstall and reinstall my app, and it's throwing same error when I want to subscribe to push notifications channel.  I've got newest version of SDK and Studio as well. At friday morning(13.10.2017@08:00 UTC+1) was everything ok...  Please take a look and let me know if there is some workaround and fix it asap.  Thank you    edit: subscribe to push notification channel is functional on Android, error message pops out on iOS...",Story,Critical,Closed,"2017-10-16 07:32:45","2017-10-16 07:32:45",1
"The Titanium SDK ","iPad Crash: Taking a photo will cause app to crash after the first successful attempt","Nothing special with my code...this is hit the first time and it works...the second..app crashes    {code:js}  Ti.Media.showCamera({    success: function(event) {      // called when media returned from the camera      Ti.API.info('Our type was: ' + event.mediaType);      if (event.mediaType == Ti.Media.MEDIA_TYPE_PHOTO) {          var photo = event.media;        if (photo != null) {          }      } else {        }    },    cancel: function() {      },    error: function(error) {      // called when there's an error      var a = Titanium.UI.createAlertDialog({        title: 'Camera'      });      if (error.code == Titanium.Media.NO_CAMERA) {        a.setMessage('Please run this test on device');      } else {        a.setMessage('Unexpected error: ' + error.code);      }      a.show();    },    saveToPhotoGallery: false,    allowEditing: false,    mediaTypes: [Ti.Media.MEDIA_TYPE_PHOTO]  });  {code}    ",Bug,Critical,Resolved,"2017-10-13 14:54:40","2017-10-13 14:54:40",0
"The Titanium SDK ","iOS: TiUITable crashes app with a Zombie","I'm using Titanium SDK 6.2.2.GA with Xcode 9 and iOS 11.    I'm testing the app with the new SDK and Xcode and I noticed that my app started crashing a lot. After some debugging I was able to see that the crash was happening when I close a Window that has a TableView with data binding.    I ran the app using Instruments with the Zombie profile and the crash is happening because is finding a zombie in the   {code:Objc}  TiUITableView dealloc        I'm also getting crashes on this line:  {code:Objc}  [footerViewProxy setProxyObserver:nil];  {code}    My app crashes at least 1 of 3 times when closing windows that have TableViews.      ",Bug,Critical,Closed,"2017-10-13 23:06:39","2017-10-13 23:06:39",0
"The Titanium SDK ","Listview horizontal layout doesn't work","*Test case*      *Actual result* : first screen shot    *Expected result* : second screen shot  ",Bug,Critical,Closed,"2017-10-13 15:21:34","2017-10-13 15:21:34",3
"The Titanium SDK ","IOS: Xcode 9, Impossible to build to a different simulator without manually closing the previous one","I searched but did not find any ticket on this issue (very strange). It's a duplicate?    Anyway, the problem is the following:    0) No open simulator  1) Build to iPhone Simulator (for example iPhone 5s)  2) The build is ok, the simulator start the application  3) Build to iPad Simulator (for example iPad Air 2), without close the iPhone Simulator  4) The console says Launching iOS Simulator. But the iPad Simulator don't start the application and the iPhone Simulator stay open.  5) Close the iPhone Simulator  6) repeat point 3. The iPad Simulator start the application correctly.",Bug,Critical,Closed,"2017-10-04 08:52:28","2017-10-04 08:52:28",0
"The Titanium SDK ","Windows: Broken display text after 6.2.2.GA updated","Hello,    We have tested the issue on the following environment and the Label text under a TableView Row is not showing on 6.2.2.GA.  *Testing Environment:*  Operating System    Name                        = Microsoft Windows 8.1 Pro    Version                     = 6.3.9600    Architecture                = 32bit    # CPUs                      = 4    Memory                      = 6323945472  Node.js    Node.js Version             = 4.6.0    npm Version                 = 2.15.9  Titanium CLI    CLI Version                 = 5.0.14  Titanium SDK    SDK Version                 = 6.2.2.GA  <USER>Command-Line Interface, version 6.2.4  *Test Case:*  index.xml    index.tss    index.js      *Test Results:*  Broken display text after 6.2.2.GA updated  Attached the output images for 6.1.1.GA and 6.2.2.GA",Bug,High,Closed,"2017-10-11 20:13:37","2017-10-11 20:13:37",5
"The Titanium SDK ","Android: Wrong thread error in DrawerLayout when not running on main thread","When using a DrawerLayout in an app that is not running with   {{<property name=run-on-main-thread type=bool>true</property>}} it will raise a CalledFromWrongThreadException error:    *Code*      KitchenSink Demo: https://github.com/<USER>kitchensink-v2/pull/14      *Error:*      *Workaround*    Add {{<property name=run-on-main-thread type=bool>true</property>}} to tiapp.xml    *Environment*  Ti SDK 6.2.0.GA  Android 7",Bug,Critical,Closed,"2017-09-14 18:25:34","2017-09-14 18:25:34",2
"The Titanium SDK ","Windows: Prevent Resize window","h5. Issue Description     Prevent or set fixed the window size on windows machines. ",Improvement,Medium,Closed,"2017-10-09 18:37:28","2017-10-09 18:37:28",3
"The Titanium SDK ","Android: ScrollView child percent size should be relative to container size","*Summary:*  On Android, child views that use percent values for their size/positional properties (ex: width, height, top, bottom, etc.) are relative to the size of the scrollable content area when they should be relative to the ScrollView container instead, like iOS.    The main issue with this is that as the content area grows in size (say vertically as you add more views), the percentage based properties such as height grow as well. This makes it difficult for developers to display child views that 100% fill the ScrollView container to create their own paginated like view.    *Steps to Reproduce:*    # Run the below code on Android.  # Verify that the green 50% view fills half the window vertically.  # Scroll all the way to the bottom.  # Verify that the blue 100% view completely fills the window.    *Test Code:*          ",Bug,Medium,Closed,"2017-10-09 17:00:08","2017-10-09 17:00:08",5
"The Titanium SDK ","Android:List item is not rendering properly with 6.2.X and above","Hi,    In our app we have a list view where list template consists of views, labels. On scroll of list view , list item is not rendering properly(a view is occupying entire list view width and height).    It is working fine with 6.1.2 GA whereas we are having this issue with 6.2.X SDK. Even tried with 6.3.0.v20170929040536 but having the same issue.  Note: It is an issue with Android.    Test Code      Steps to reproduce:  1. Run the attached app on Android device  2.Scroll the list view      Thanks",Bug,High,Closed,"2017-10-09 16:27:41","2017-10-09 16:27:41",3
"The Titanium SDK ","Hyperloop: The module android.support.v4.content.ContextCompat is missing with TiSDK 6.2.2.GA","Hi,  While updating an app from the SDK 6.1.2 to 6.2.2, We found an issue with a custom android Hyperloop class that works as an audio record permissions check.The module android.support.v4.content.ContextCompat is missing with TiSDK 6.2.2.GA  This error is not happening when using SDK 6.1.2  Test code:  *ti.checkSelfPermission.js*      *index.js*    Error Log:      Thanks ",Bug,None,Closed,"2017-10-05 19:18:21","2017-10-05 19:18:21",5
"The Titanium SDK ","iOS: Appending view to scroll-view while scrolling, scrolls back to the top of the scroll-view","Trying to execute an infinite scroll so when the user scrolls to a certain point the feed will append more rows but when appendrow is called the tableview tries to scroll back to the top of the table which is leading to an annoying situation. This has worked fine up until recently. Thank you in advance",Bug,Critical,Resolved,"2017-10-03 21:00:17","2017-10-03 21:00:17",5
"The Titanium SDK ","iOS/Android: Provide official Firebase module","There are some Google Firebase modules for Titanium out there, but especially the Android ones are not really production-ready. We should provide an official one like we do with Ti.Facebook and many others successfully already.","New Feature",None,Resolved,"2017-10-03 18:48:41","2017-10-03 18:48:41",13
"The Titanium SDK ","iOS: CFBundleTypeIconFiles not used in iOS11","I have an app that recognizes .picsafe files (my own custom extension). Here is an extract from my tiapp.xml file.     ```  <key>CFBundleDocumentTypes</key>          <array>            <dict>              <key>CFBundleTypeName</key>              <string>PicSafe File</string>              <key>CFBundleTypeIconFiles</key>              <array>                <string>Document-picsafe-320.png</string>                <string>Document-picsafe-64.png</string>                <string>Document-picsafe-58.png</string>                <string>Document-picsafe-29.png</string>              </array>              <key>LSItemContentTypes</key>              <array>                <string>com.picsafe.med</string>              </array>              <key>LSHandlerRank</key>              <string>Owner</string>              <key>CFBundleTypeRole</key>              <string>Viewer</string>              <key>public.filename-extension</key>              <string>picsafe</string>            </dict>          </array>  ```    When I build to a device running iOS 11, it does not use the image specified. It seems to use the app icon. When I build to a device running iOS 10, the correct image is displayed. See the images attached (iOS 11 is running on the device on the left and iOS 10 is running on the device on the right).    Note, I tried deleting my app on the iOS 11 device and you can see that it uses the Telegram icon, and it would appear that it is using the correct CFBundleTypeIconFiles icon for Telegram. That leads me to believe it might be a Titanium issue.      ",Bug,Critical,Closed,"2017-10-03 03:20:14","2017-10-03 03:20:14",0
"The Titanium SDK ","Android: Intents should use ContentProvider","- As of Android 7.0, Intents should use a {{ContentProvider}} to provide the {{DATA}} URI of created Intents.    *TEST CASE*  {code:js}  var extFile = Ti.Filesystem.getFile(Ti.Filesystem.externalStorageDirectory, 'test.pdf'),      openPDF = function(pdf) {          Ti.Android.currentActivity.startActivity(              Ti.Android.createIntent({                  action : Ti.Android.ACTION_VIEW,                  type : 'application/pdf',                  data : pdf.nativePath              })          );      };    if (extFile.exists()) {      openPDF(extFile);  } else {      var httpClient = Titanium.Network.createHTTPClient({          onload: function() {              extFile.createFile();              extFile.write(this.responseData);              openPDF(extFile);          }      });      httpClient.open('GET','https://github.com/mozilla/pdf.js/raw/master/examples/helloworld/helloworld.pdf');      httpClient.send();  }  {code}",Bug,High,Closed,"2017-10-02 21:39:38","2017-10-02 21:39:38",3
"The Titanium SDK ","TiAPI: Move KitchenSink-v2 to use ES6","Now that Alloy uses Babel to transpile ES6 code, we should update [kitchensink-v2|https://github.com/<USER>kitchensink-v2] to use ES6 as well. It is our most important sample-project and should reflect the latest technologies we provide.     Changes to consider  - Change {{var}} to {{let}} / {{const}}  - Use arrow-syntax ({{() =>}} instead of {{function()}} callback). Maybe even use promises?  - Use classes instead of functions?  - Add linting of possible?",Story,High,Closed,"2017-10-02 14:23:22","2017-10-02 14:23:22",13
"The Titanium SDK ","Android: Height Ti.UI.FILL inside ScrollView should match iOS","A View with height {{Ti.UI.FILL}} inside a ScrollView, ListView or TableView should match iOS behavior (essentially acting like {{height: '100%'}})    *TEST CASE*  {code:js}  var win = Ti.UI.createWindow({          backgroundColor: 'white'      }),      scrollView = Ti.UI.createScrollView({          layout: 'vertical'      }),      field = Ti.UI.createTextField({          hintText: 'TEST',          hintTextColor: 'grey',          top: '250dp',          left: '10%', right: '10%',          backgroundColor: 'transparent',          width: Titanium.UI.FILL      }),      view = Ti.UI.createView({          width: Ti.UI.FILL,          height: Ti.UI.FILL,          backgroundColor: 'blue'      });    scrollView.add([field, view]);    win.add(scrollView);  win.open();  {code}",Bug,High,Closed,"2017-09-29 23:19:38","2017-09-29 23:19:38",3
"The Titanium SDK ","Android: ScrollView not scrolling when keyboard is showing","When using SDK 6.2.2GA on Android, ScrollView will not scroll when the keyboard is visible after clicking on a TextField.    When using SDK 6.2.0GA or 6.1.2GA it will work correctly.    See images attached and code below.    view.xml:      tss:  {code:css}  .container : {   backgroundColor: 'white'   }    .container[platform=android] : {   exitOnClose : true  }    Window[platform=android]:{   theme : 'Theme.AppCompat.NoTitleBar',   windowSoftInputMode: Ti.UI.Android.SOFT_INPUT_STATE_HIDDEN  }    #scrollView: {   layout: 'vertical'  }    .icons : {   left: 0,   width: 25dp,   height: 25dp  }    #userView : {   top: 160dp,   width: 80%,   height: 50dp   }    #userTxt : {   hintText : L('user'),   left: 10%,   right: 10%,   backgroundColor: 'transparent',   width: Titanium.UI.FILL,   hintTextColor: grey,   color : black  }    #passView : {   width : 80%,   height : 50dp  }    #passTxt : {   hintText : L('password'),   passwordMask: true,   left: 10%,   right: 10%,   backgroundColor: 'transparent',   width: Titanium.UI.FILL,   hintTextColor: grey,   color : black  }    #registerGmailBtn : {   top: 20dp,   width: 80%  }    #btns : {   top: 20dp,   height: Ti.UI.SIZE  }    .smallBtns : {   width: 120dp  }    #loginBtn : {   left: 10%  }    #registerBtn : {   right: 10%  }    #legalBtn : {   top: 40dp  }  {code}    ",Bug,Critical,Closed,"2017-09-28 13:00:10","2017-09-28 13:00:10",3
"The Titanium SDK ","Add deprecation warning when building using 8.1","We probably need to print out a clearly visible warning when a user builds using 8.1 win-sdk.     Message should probably be like    {{Support for Windows 8.1 and Windows Phone 8.1 SDKs has been dropped as of Titanium SDK 6.3.0.GA, and will be removed in Titanium SDK 7.0.0.GA}}",Sub-task,None,Closed,"2017-09-28 15:09:22","2017-09-28 15:09:22",3
"The Titanium SDK ","Android: Ti.UI.SIZE height not working for ListView (SDK 6.2.X)","When using SDK 6.2.0GA, 6.2.1.GA or 6.2.2GA on Android, a ListView will not behave as expected when setting height to Ti.UI.SIZE.    If I use SDK 6.1.2GA it will resize as expected.    See images attached and code below.    view.xml:      tss:    {code:css}  'CardView': {   width: Ti.UI.FILL,   height: Ti.UI.SIZE,   left: 10dp,   right: 10dp,   contentPadding: 40,   cardCornerRadius: 20,   cardUseCompatPadding: true,   backgroundColor: #fafafa  }  .smallText :{   left: 16dp,   font: {    fontSize: 14sp   }  }    .titleLabel : {   color: #212121  }    .subtitleLabel : {   color: #757575  }    #locationsCard : {   top: 10dp,   bottom: 10dp,   layout: 'vertical',   height: Ti.UI.SIZE  }    #locationsList : {   top: 16dp,   left: 16dp,   right: 16dp,   bottom: 16dp,   canScroll: false,   showVerticalScrollIndicator: false,   height: Ti.UI.SIZE  }    .itemView : {   top: 8dp,   bottom: 8dp,   layout: 'horizontal',   height: Ti.UI.SIZE,   backgroundColor: #fafafa,    touchFeedback: true,   touchFeedbackColor: #808080  }    .icons : {   width: 24dp,   height: 24dp  }    .locationView : {   layout: 'vertical',   height: Ti.UI.SIZE,   width: Ti.UI.FILL  }    .separator : {   bottom: 0,   height: 1,   width: Ti.UI.FILL,   left: 40dp,   right: 0,   backgroundColor: #d3d3d3,  }    #selectCard : {   top: 10dp,   bottom: 10dp,   height: 48dp,   layout: 'horizontal',   backgroundColor: '#fafafa'  }  {code}  ",Bug,Critical,Closed,"2017-09-28 10:57:54","2017-09-28 10:57:54",0
"The Titanium SDK ","Hyperloop: iOS - Building hyperloop-examples app fails with Hyperloop 2.2.0","Trying to build the hyperloop-examples project fails during the last xcodebuild phase with the following error:    ",Bug,None,Closed,"2017-09-27 15:31:15","2017-09-27 15:31:15",2
"The Titanium SDK ","Android: Move Play Services into a module","In an attempt to minimise conflicting Google Play Services library versions we can move the Play Services into a Titanium native module.    This will prevent the need to update each modules Play Services library and negate the need for module developers to include their own Play Services library which could conflict with existing modules.",Improvement,Medium,Closed,"2017-09-26 21:45:49","2017-09-26 21:45:49",8
"The Titanium SDK ","Windows: Ti.Database.install should not prefix the specified path with the resourcesDirectory","h5.Description    *This only occurs on ws-local target for me*, I have a fix locally just need to write a unit test    When calling Ti.Database.install('/database/path.db', 'example') on Windows the function will throw an error. Tracking this down the error originates from the Ti.Filesystem APIs, used [here|https://github.com/<USER>titanium_mobile_windows/blob/67db155c01654c8442d32e418da6da66c1cf7aef/Source/TitaniumKit/src/DatabaseModule.cpp#L23-L35].    After walking it through the error appeared to be caused by the path being like {{C:\Users\ewan\Documents\debug_proj\NG\NG.Windows10.Win32\Debug\AppX\\./databases/kitchensink.db}}, as the install function prefixes the resourcesDirectory onto the specified path. Based off documentation and other platforms I believe this is incorrect and the path should be passed through untouched allowing the Filesystem APIs to resolve it correctly    h5.Steps to reproduce    # Download the zipped resources and build for ws-local    h5.Actual    Error is thrown         h5.Expected    No error should be thrown",Bug,High,Closed,"2017-09-26 15:08:18","2017-09-26 15:08:18",3
"The Titanium SDK ","Android: Build fails with No resource found that matches the given name (at 'background' with value '@color/primary').","h5.Description    Jenkins is currently failing with the below, because of https://github.com/<USER>titanium_mobile/pull/9439         h5.Steps to reproduce    # Get the SDK from https://<USER><USER>org/blue/organizations/<USER>titanium-sdk%2Ftitanium_mobile/detail/master/550/artifacts  # Build an app for Android    h5.Actual    Build fails with error above    h5.Expected    Build should not fail",Bug,Critical,Closed,"2017-09-26 11:15:21","2017-09-26 11:15:21",2
"The Titanium SDK ","Windows: Prevent app from suspension","According to the studies from [TIMOB-25019|https://github.com/<USER>titanium_mobile_windows/commits/TIMOB-25019], we have been seeing that the app tend to suspend while we are executing our unit test. We might want to give developer a chance to control the extended execution manually by the new API. From cross-platform perspective the app suspension scheme has pretty much similar to what iOS/Android has I believe, so I think we still want to keep that parity too.     FYI: [Postpone app suspension with extended execution - Microsoft Docs|https://docs.microsoft.com/en-us/windows/uwp/launch-resume/run-minimized-with-extended-execution]  ","New Feature",Medium,Closed,"2017-09-26 02:03:29","2017-09-26 02:03:29",5
"The Titanium SDK ","Windows: New Timer implementation","According to the studies from TIMOB-25019, we found some pitfalls in current `setTimeout/setInterval` implementations. There may be rare chances to encounter but we want simpler/faster/safer implementation for it.     - Make sure to clear callback right after callback is actually called from `setTimeout`.   - Invoke callback immediately when interval equals zero. It had synchronization issue with `clearTimeout/clearInterval`.  - `Xaml::DispatcherTimer` functions should have been called from UI thread. Use `ThreadPoolTimer` when possible, because it doesn't have the issue.   - With `ThreadPoolTimer`, make sure to invoke callback from UI thread.    Note that this is about internal implementation, so the API functionalities {{setTimeout/setInterval/clearTimeout/clearInterval}} should not be changed.",Story,Medium,Closed,"2017-09-26 00:55:39","2017-09-26 00:55:39",5
"The Titanium SDK ","Windows: App crashes when attempting to access ApplicationView","h5. Description  When attempting to get the Current ApplicationView using Hyperloop and the function GetForCurrentView(https://docs.microsoft.com/en-us/uwp/api/windows.ui.viewmanagement.applicationview#Windows_UI_ViewManagement_ApplicationView_GetForCurrentView) The App crashes with the error message attached.    h5. Reproduction Steps  # Run the attached sample app on Windows Simulator or device  # Click on the Click me to Crash' label  # App crashes.  ",Bug,High,Closed,"2017-09-25 22:00:37","2017-09-25 22:00:37",3
"The Titanium SDK ","Hyperloop: Move to using auto-required 'hooks' folder, not plugin","We currently use a 'plugins' folder inside our hyperloop release to handle CLI hooks to do the inspection of source for hyperloop usage, generation of metaphase, etc. This requires jumping through some hoops to get the build to include the plugins folder and it's hooks; and it requires the user add the hyperloop plugin to their tiapp.xml.    Given that we now support implicit hooks in a module from TIMOB-24041, we should move straight to simple hooks and deprecate the plugin. To avoid a breaking change we can add a plugin whose hook simply spits out the deprecation notice that the plugin should no longer be added to the tiapp.xml.    This will simplify the builds, so we shouldn't need to unzip and re-zip to hack the plugins folder inside (in our Jenkinsfile), and should remove one more step from using hyperloop in apps. ",Improvement,High,Closed,"2017-09-25 18:04:18","2017-09-25 18:04:18",8
"The Titanium SDK ","iOS: Custom ListItem does not respect default row-height of 43px, sizing instead (regression)","I noticed that custom item-templates will size by default on 6.2.0. It's no blocker as the developer can just set a height of 43 which is the default cell-height, but ideally, we should address that in the height-calculation of the TiUIListView.m already.    *EDIT*: It's actually a regression from TIMOB-23436. Reverting the change resolves this issue, so we need to find a better way to fix TIMOB-23436.    Test-Case:  {code:js}  var win = Ti.UI.createWindow({backgroundColor: 'white'});    var myTemplate = {      childTemplates: [          {                            // Title               type: 'Ti.UI.Label',     // Use a label for the title               bindId: 'info',          // Maps to a custom info property of the item data              properties: {            // Sets the label properties                  color: 'red',              }          }      ]  };    var listView = Ti.UI.createListView({      templates: { 'template': myTemplate },      defaultItemTemplate: 'template'  });  var sections = [];    var fruitSection = Ti.UI.createListSection({ headerTitle: 'Fruits / Frutas'});  var fruitDataSet = [      { info: {text: 'Apple'}},      { info: {text: 'Banana'}}  ];  fruitSection.setItems(fruitDataSet);  sections.push(fruitSection);  listView.setSections(sections);    win.add(listView);  win.open();  {code}",Bug,Critical,Closed,"2017-09-24 09:01:46","2017-09-24 09:01:46",1
"The Titanium SDK ","Windows: Use i18n resource for SearchBar No Results","In {{Ti.UI.SearchBar}}, when there are no results shown there should be a single result shown saying 'No Results'. We implemented it in TIMOB-24975 as hard-coded string but we could use i18n resources so we can display it in other languages.",Improvement,Medium,Open,"2017-09-22 02:38:15","2017-09-22 02:38:15",3
"The Titanium SDK ","iOS 11: Sections in grouped Ti.Ui.ListView not properly spaced","Since upgrading to Xcode 9, the Titanium.UI.iOS.TableViewStyle of GROUPED no longer has the correct spacing. As you can see in the screenshots, the top spacing is correct, but subsequent sections are not spaced properly from the previous section.    This is happening in my app, but also happening in the KitchenSink app (screenshot included also)",Bug,Critical,Closed,"2017-09-21 18:02:25","2017-09-21 18:02:25",5
"The Titanium SDK ","iOS CLI: No profile for team '6E5M3DGMBX' - where the team is the bundle identifier ","Just updated to Xcode 9 and TiSDK 6.2.1, and everything broke all together when I try to Package to ad hoc.    This is the error I get:    [TRACE] :  Code Signing Error: No profile for team '6E5M3DGMBX' matching 'my cert adhoc' found:  Xcode couldn't find any provisioning profiles matching '6E5M3DGMBX/my cert adhoc'. Install the profile (by dragging and dropping it onto Xcode's dock item) or select a different one in the General tab of the target editor.  [TRACE] :  Code Signing Error: Code signing is required for product type 'Application' in SDK 'iOS 11.0'    (This was working fine until the update, so the certificates and the private keys are correctly imported)      EDITED:    The problem is that the project.pbxproj is created with the DEVELOPMENT_TEAM value set as the *bundle* identifier instead of the *Team* identifier. If you open the xcode project and then fix it from the General menu, the DEVELOPMENT_TEAM value will be eventually right.",Bug,Critical,Closed,"2017-09-21 11:03:29","2017-09-21 11:03:29",0
"The Titanium SDK ","Windows: currentPage property of scrollableview.scrollend event is always 0","h5.Description    When using the scrollend event, the currentPage event is always set to 0, it should be the index of the currently visible view        h5.Steps to reproduce    # Add to an existing app.js and build for Windows  # Scroll the view    h5.Actual    When finishing scrolling the currentPage property is always 0    h5.Expected     currentPage property should be index of the current view",Bug,Medium,Closed,"2017-09-21 10:25:28","2017-09-21 10:25:28",5
"The Titanium SDK ","Windows: image property of ListItem should not overlay text","h5.Description    When setting the image property of a ListItem it overlays the title. On Android the image is on the right of the ListItem and on iOS it's on the left.        h5.Steps to reproduce    # Add the above to an existing app.js and build for Windows    h5.Actual    Image and text overlay  h5.Expected    Image and text should not overlay",Bug,High,Closed,"2017-09-21 10:04:05","2017-09-21 10:04:05",5
"The Titanium SDK ","Windows: Click event of Button does not provide X, Y coordinates","h5. Description  When Click event is fired on Ti.UI.Button, the obejct in the event parameter is not provided x,y coordinates of the click location    h5. Steps to reproduce  Run attached Alloy project  Click on the test button   Log statement in index.js for the click event of button to print x, y coordingates will print NaN instea of the actual click coordinates     h5. additional information  Attached environment details:    [^tiInfo (1).txt]   attached test app:    [^TestButtonClick.zip] ",Bug,Medium,Closed,"2017-09-20 22:01:31","2017-09-20 22:01:31",5
"The Titanium SDK ","Android: AssetManager will release when suspended to background","The AssetManager reference will become null when the application suspends to background. This prevents resources from loading when the application resumes.",Bug,Critical,Closed,"2017-09-20 21:52:17","2017-09-20 21:52:17",2
"The Titanium SDK ","Android: Application can crash after exiting","The application can crash when attempting to release objects when exiting the application.    *TEST CASE*  1. Load application  2. Press back to exit the application  3. Load the application again  4. Press back to exit the application  5. After a few seconds a crash dialog should appear    _NOTE: Steps 2-4 should be done in quick succession_",Bug,Critical,Closed,"2017-09-20 21:43:04","2017-09-20 21:43:04",5
"The Titanium SDK ","iOS: camera with overlay view is zoomed","If I add overlayView to camera, then camera view becomes zoomed. Without overlayView camera has another zoom value. I prepared test project.    *index.js:*      *index.html:*  ",Bug,Critical,Closed,"2017-09-18 08:48:39","2017-09-18 08:48:39",8
"The Titanium SDK ","iOS 11: Support for NFC (Parity with Android)","We provide NFC functionalities for Android since a while now. As iOS supports the same since iOS 11, we should try go gain some parity between both. The difference is still that Android can also write and detect more types, but at least the NDEF-handling is pretty similar.",Bug,High,Resolved,"2017-09-18 06:30:19","2017-09-18 06:30:19",21
"The Titanium SDK ","When using SDK 6.2.0, images are not loaded but FILE NOT FOUND exception is thrown for Android","when referring to local image as per below, anFILE NOT FOUND exception is thrown,     [ERROR] :  TiDrawableReference: (pool-3-thread-1) [82,82] Problem opening stream with url /images/default.png: Resources/images/default.png  [ERROR] :  TiDrawableReference: java.io.FileNotFoundException: Resources/images/default.png    Reproduce:  Create the basic mobile app and replace the index.xml code with the below.    <Alloy>   <Window class=container>    <ImageView id=iconFurnish image=/images/default.png  />   </Window>  </Alloy>    The image is included in the app be default.",Bug,Critical,Closed,"2017-09-18 03:16:50","2017-09-18 03:16:50",1
"The Titanium SDK ","iPhone X: Height / Inset of Window Toolbar","This is in relation to the win.toolbar that shows at the bottom of the window.     I think the issue is the height of the toolbar? Really not sure how else this issue would be resolved without some pretty ugly hacks.    Please see the attached screenshot that highlights the issue. ",Bug,Critical,Closed,"2017-09-16 23:02:17","2017-09-16 23:02:17",2
"The Titanium SDK ","iOS 11: Add the ability to change the Search Bar Size","I notice that when building with Xcode 9 / iOS 11, the SearchBar is significantly larger.     Is there a way we can control this? Or get it to retain the size it was in iOS 10?     I am not sure if this is what is meant to happen as part of iOS 11 and we are given no choice. Or if it is something that we can actually control somehow.    Attached is a screenshot showing the difference. Same code using the 6.2.0 SDK. The left size is built using Xcode 8.3.3 and iOS 10.3. The right side is build using Xcode 9 and iOS 11. Notice that not just the height has changed but also the position of the search icon and hint text as well. It is the height that concerns me the most as it is a lot of vertical space being used now.    From a comment on StackOverflow it seems you may be able to control the height. Is this something we can do in Ti?   https://stackoverflow.com/questions/46037928/ios-11-uisearchbar-in-navigation-bar    Overall just wanted to share the observation and see what options we have.",Improvement,Medium,Closed,"2017-09-16 21:08:04","2017-09-16 21:08:04",0
"The Titanium SDK ","iOS: Xcode 9 build-error - Argument name clash","When i run for the IOS simulator everything is fine. When i try to build for deployment....it takes forever to build and sticks on this line Processing JavaScript files....and then fails with this error:     [ERROR] :  /Users/pladis/Documents/LPDevices.nosync/IOS/Resources/ui/handheld/iphoneV2/Services/FormsService.js: Argument name clash in strict mode (3045:115)    Any ideas?",Bug,Critical,Closed,"2017-09-17 00:34:27","2017-09-17 00:34:27",1
"The Titanium SDK ","Windows: click event of Ti.UI.TextField does not work","h5. Problem Description:  click event of Ti.UI.TextField is not working. When user clicks on TextField, click event added to that TextField is not fired.    h5. Steps to Reproduce:  1. Run the attached Alloy project (attached)  2. TextField in index.xml has onClick event added to it - onTextFieldClick  3. When user clicks on TextField, onTextFieldClick is not called.    h5. Expected Result:  Click event should be fired when clicking on TextField.",Bug,High,Closed,"2017-09-16 21:21:28","2017-09-16 21:21:28",5
"The Titanium SDK ","Windows: touchEnabled property of Ti.UI.Picker does not work","h5. Problem Description:    touchEnabled property of Ti.UI.Picker is not working. Even though touchEnabled property is applied to the Picker, user is able to click the picker to see options.    h5. Steps to Reproduce:    1. Run the attached Alloy project (attached)  2. touchEnabled property applied to Picker has no effect on it.    h5. Expected Results:    Picker should be disabled once touchEnabled property is set false.",Bug,High,Closed,"2017-09-16 21:09:06","2017-09-16 21:09:06",5
"The Titanium SDK ","Windows: Feature request - Ti.UI.Picker font property","h5. Description:  Currently, font property of Ti.UI.Picker for Ti.UI.PICKER_TYPE_DATE is available only for Android.    h5. Test Case:  Sample project attached.    'font' property applied to datePicker in index.tss has no effect on the Picker.    h5. Some more info:    http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Picker-property-font    Apart from the Font, what I observed that while testing with 6.1.2.GA, the picker displays like:   !image-2017-09-16-14-58-32-843.png|thumbnail!     But with 6.2.0.GA picker displaying like (takes full-screen width) :    !image-2017-09-16-14-55-36-776.png|thumbnail! ","New Feature",Medium,Closed,"2017-09-16 20:01:11","2017-09-16 20:01:11",5
"The Titanium SDK ","iPhone X: Add new home-indicator related API's","There are some utility API's in the iOS 11 GM seed that we might want to add to the SDK:  - {{prefersHomeIndicatorAutoHidden}}    - Returns a Boolean indicating whether the system displays a visual indicator for returning to the Home screen.    - Could be exposed as a Ti.UI.Window boolean-property homeIndicatorAutoHidden    - {{setNeedsUpdateOfHomeIndicatorAutoHidden}}    - Notifies UIKit that your view controller updated its preference regarding the visual indicator for returning to the Home screen.    - Could be exposed as a Ti.UI.Window event homeindicatorupdate  ","New Feature",Low,Closed,"2017-09-16 19:14:45","2017-09-16 19:14:45",5
"The Titanium SDK ","Windows: Ti.App.Properties is not persistence if re-install the app","h6.Reproduce.  1. Create a new Alloy project.  2. Add following lines into Alloy.js file    3. Run the app in a windows device. Check the console log  4. Re-install the app through CLI or studio. Check the console log again    h6.Problem  You will see the value saved in Ti.App.Properties is not persistence after re-install the same app.    h6.Note  1. If do not re-install, just simply close and run again, it works well.  2. Tested on iOS platform, it works well. The value is persistence even after re-install.",Bug,High,Closed,"2017-09-16 05:34:54","2017-09-16 05:34:54",5
"The Titanium SDK ","Windows: ListItem is not occupying the full width of ListView","h5. Issue Description     ListItem is not occupying the full width of ListView. It is leaving empty space at both right and left edges which is preventing us to add content there.    PFA the sample project created for this - TestListView.zip  Also attached the screenshot of the app where we can see that yellow color is visible on both edges which is the background color of the ListView.    h5. Steps to reproduce.  Run the attached project.    Attached the environment details as well - tiInfo.txt",Bug,High,Closed,"2017-09-15 19:33:13","2017-09-15 19:33:13",5
"The Titanium SDK ","Windows: Change Date picker order ","h5. Issue Description     When date picker is used in windows, the order of display is as Date/Month/Year. Customer need  a way to update this order to Month/Date/Year PFA the sample project created to test this issue - TestDatePicker.zip ","New Feature",Medium,Closed,"2017-09-15 18:03:50","2017-09-15 18:03:50",5
"The Titanium SDK ","Android App getting focused from background after supplying fingerprint.","H5. Issue Description     In our application we are using finger print based authentication for Android, and we are using TouchId module version 2.2.0.  When we keep the app in background, the app is still waiting for finger print to be supplied. If you supply finger print our app is getting focused even if we are using any other app at that time.    it would be helpful, if Touch Id module is returning a message when app is pushed to background.    h5. Steps to Reproduce    To reproduce the issue,  1  Run the attached sample app here https://drive.google.com/open?id=0BwTWo-c2a0b9OVhlWEdvc0Q2SEU  2  click on “click to get touchID view” label  3  Keep the app in background by pressing Home  4  Now provide the invalid/valid finger print, app will get focused.  ",Bug,None,Closed,"2017-09-15 17:35:03","2017-09-15 17:35:03",3
"The Titanium SDK ","iOS: Failed to expand identifiers when using 6.2.0","      I can't compile my project with 6.2.0.GA    I'm using an extra Entitlements.plist for some iCloud functions.    With 6.1.1.GA and 6.1.2.GA compiling works as expected.        I compared the _build.js of 6.1.2 und 6.2.0 and there are huge differences working with provisioning files. Maybe there is an bug?    Any hint what I can do?",Bug,Critical,Closed,"2017-09-15 14:04:27","2017-09-15 14:04:27",5
"The Titanium SDK ","Windows: Calling send with data will upgrade from a GET to a POST","h5.Description    When performing a GET request and providing the optional data param the SDK will upgrade the request from GET to POST, this isn't in line with other platforms and causes problems for modules like ti.cloud which always send an empty data object        h5.Steps to reproduce    # Add the above code to an existing app.js and build for Windows  # Tap the label    h5.Actual    Request is changed to a POST    h5.Expected    Request should stay as get",Bug,Medium,Closed,"2017-09-15 14:16:12","2017-09-15 14:16:12",3
"The Titanium SDK ","Android: [ti.map] No static method getAppCurrentActivity()","Trying to add an annotation or a circle (I suppose any view we can add to a mapView) throws the following error:       ",Bug,Critical,Closed,"2017-09-14 15:02:23","2017-09-14 15:02:23",1
"The Titanium SDK ","Windows: editable property of Ti.UI.TextField does not work as expected","h5. Problem Description:  editable property of Ti.UI.TextField is not working as expected. Even though editable property is applied to TextField, when user clicks on it, border color is updated to blue and background color is updated to white which makes it look like it is editable.    h5. Steps to Reproduce:  Attached the sample project  1. Run the attached Alloy project TestTextFieldEditable  2. index.js has a TextField with gray background  3. Click anywhere else on the window, TextField will be visible with gray background.  4. Click on TextField. This will turn the border color to blue and background color to White making the TextField look like it is editable.    h5. Expected Behavior:  TextField should look like it is not editable once we apply the editable property to it whenever we click anywhere on the screen.",Bug,High,Closed,"2017-09-14 21:53:27","2017-09-14 21:53:27",5
"The Titanium SDK ","iOS: Error out on duplicate third-party frameworks","The new framework integration introduced in 6.2.0 contains a minor bug, where duplicate frameworks will be silently ignored, rather than informing the developer so he can select which framework should be used. Currently, the hook will simply use the first framework found.    The intended behavior should be as followed:  - The build should fail if two frameworks with the same name are used across the app project. Framework can be provided by modules or by placing them in the project's {{platform/ios}} folder.  - This gives the developer the opportunity to delete the undesired framework to make sure the correct version of the framework is used.",Bug,Critical,Closed,"2017-09-14 21:43:49","2017-09-14 21:43:49",2
"The Titanium SDK ","Android Images in density-specific resource folders are not picked ","density-specific resourced in 6.2.0 are not working - images in for example res-hdpi are not picked up. Images in the android/images folder work fine but in for example android/images/res-hdpi they are not picked up and I receive this error. When I build the same exact files in 6.1.2 it works fine    Example of file structure: app/assets/android/images/res-hdpi/menu_home.png        ",Bug,Critical,Closed,"2017-09-14 10:20:32","2017-09-14 10:20:32",3
"The Titanium SDK ","Windows: saveToPhotoGallery throws exception","h5.Description    Calling Ti.Media.saveToPhotoGallery() throws the following error, running through VS gives more detail and I believe the cause is [to_path here|https://github.com/<USER>titanium_mobile_windows/blob/7f4b3efcac026b1b6037b59ad1904556c826db21/Source/Media/src/Media.cpp#L377] is null, so the to convert string call is returning an empty string, which then causes an error in the copy call. I believe this is because the Library folders are virtualized [read here|https://stackoverflow.com/questions/38874259/windows-storage-knownfolders-musiclibrary-path-returns-empty] so they don't have a path, we might need to do something like [this|https://github.com/Microsoft/Windows-universal-samples/blob/6370138b150ca8a34ff86de376ab6408c5587f5d/Samples/FileAccess/cpp/Scenario1_CreateAFileInThePicturesLibrary.xaml.cpp#L31-L48] to first find the folder for a user, then write to that folder            h5.Steps to reproduce    # Add the above to an existing app.js and build for Windows    h5.Actual    Error thrown    h5.Expected    Image should be written to gallery",Bug,High,Closed,"2017-09-14 16:29:30","2017-09-14 16:29:30",5
"The Titanium SDK ","get the exact PDF url from Titanium WebView API","h5. description  Costumer is attempting to load a pdf for android using intents with webview.   in the mobile app they are using webview control for displaying the remote web site by binding a URL. The web pages in the web site contains few pdf links. On click of normal hyperlinks, respective web page is being shown in the web view. Whereas, on tapping a pdf links, a blank window is getting opened in Android devices. In iOS it’s working fine and a PDF is showing.    Per Jira WebView cannot disply PDF documents on Android. So they are using intents as a workaround to open the PDF link. The issue is that on click of the pdf link in the web view, they are unable to get the exact PDF url with any of Titanium WebView API methods or events    The customer was able to do it natively and open the PDF's with intents.     h5. Request  The customer wants to know how to get the exact PDF link using the webview API or if there is a workaround they could use.    h5. additional information   attached are two apps. One is a titanium app and one is an android native application.  [titanium app|https://axwaysoftware-my.sharepoint.com/personal/<USER>axway_com/_layouts/15/guestaccess.aspx?guestaccesstoken=rsxSxfm51VH5t8MRm7YpDX1bHDfJfDfaycmtpKrlAEE%3d&docid=2_11a957eab95234b6ab84003e12f7b0b41&rev=1]",Story,High,Closed,"2017-09-13 17:42:08","2017-09-13 17:42:08",3
"The Titanium SDK ","Windows: Button image property should be placed to left of the title","h5.Description    Image property of button is currently identical to backgroundImage, according to docs it should display an image to the left of the button title.    Android doesn't demonstrate this behaviour either, need to check iOS        h5.Steps to reproduce    # Add the above to an existing app.js and build for Windows    h5.Actual    image property takes all up all of button    h5.Expected    image property should only be placed to left of button",Bug,Medium,Closed,"2017-09-13 15:31:03","2017-09-13 15:31:03",5
"The Titanium SDK ","Windows: index property of TableView click event should be index of whole TableView and not section","h5.Description    The index property of a tableview click event is in relation to the tableviewsection, it should be in relation to the entirety of the tableview        h5.Steps to reproduce    # Add the above to an existing app.js and build for Windows  # Click Row 10 in section 2    h5.Actual    Row 0 in Section 1 gets updated    h5.Expected    Row 10 in section 2 should be updated",Bug,Medium,Closed,"2017-09-13 14:52:35","2017-09-13 14:52:35",3
"The Titanium SDK ","Windows: setData does not add UI elements that already existed","h5.Description    When calling setData, child elements of the TableViewRow that have been added once are not added        h5.Steps to reproduce    # Add the above code to an existing app.js and build for Windows  # Click 'Add old data' button  # Click 'Add new data' button    h5.Actual    'Add old data' does not add the label to the tableviewrow    h5.Expected    The label should be visible in both cases  ",Bug,Medium,Closed,"2017-09-13 14:28:19","2017-09-13 14:28:19",5
"The Titanium SDK ","Windows: TableViewRow does not fill size of TableView","h5.Description    When using Ti.UI.FILL (or setting width to a suitable number), a TableViewRow will never fill the size of the TableView and there will be padding on either side of the TableViewRow.    Code has border to attempt to highlight where the TableViewRow ends, you will notice TIMOB-24855 in this test case too    I tried playing around with the [XAML ListView example|https://github.com/Microsoft/Windows-universal-samples/tree/master/Samples/XamlListView]  and that seems to always go to the edge so I don't think it's a platform limitation        h5.Steps to reproduce    # Add above code to an existing app.js and build for Windows    h5.Actual    TableViewRow has padding on left and right, not filling TableView    h5.Expected    TableViewRow should size to fit the TableView (to edge of the blue border)",Bug,High,Closed,"2017-09-13 13:10:22","2017-09-13 13:10:22",5
"The Titanium SDK ","iOS: Cannot install apps to iTunes 12.7","Attempting to build a developer build with iTunes 12.7 installed nothing happens after:    [INFO]  Installing application into iTunes  [INFO]  Initiating iTunes sync    ",Bug,High,Closed,"2017-09-13 12:22:08","2017-09-13 12:22:08",3
"The Titanium SDK ","iPhone X: Validate Layout changes","As the layout changed to be bezier-shaped, we need to do smoke-tests regarding all layouts, especially top/bottom related ones. Also, there are safe-area properties we should investigate - either as a property or handle internally  There also seems to be a small UI-glitch when opening a window from a navigation-window and then closing the old window again. Not sure if it's a general Simulator issue or within Titanium apps, yet.",Story,High,Closed,"2017-09-13 07:24:30","2017-09-13 07:24:30",5
"The Titanium SDK ","iOS: Add support for iPhone X","This ticket can be used to collect items that should be addressed to properly support the new iPhone X capabilities. Some changes we should to take care of before the iPhone X ships in November:    *Different screen-size*:    Add small change to iOS-build to add the new launch-screen to the asset-catalog. Please note that this also applies for custom splash-screens. Everyone using storyboards (the recommended way be Apple these days that we also support) will not have to change anything.     *New App-Icon*:    -Apple might introduce a new icon-size for the iPhone X.- EDIT: No new icon-size! Will probably reuse the one from the iPhone 7S Plus dimensions (@3x)    *Face ID support*:   As discussed on Teams, we may want to create a new module like Ti.Identity to manage all security-related functionalities in one module, including touch-id, face-id and keychain-access. This will also deprecate Ti.TouchID and move Android over as well.    *Validate layout*:   As the layout changed to be bezier-shaped, we need to do smoke-tests regarding all layouts, especially top/bottom related ones. Also, there are safe-area properties we should investigate - either as a property or handle internally  There also seems to be a small UI-glitch when opening a window from a navigation-window and then closing the old window again. Not sure if it's a general Simulator issue or within Titanium apps, yet.",Epic,High,Closed,"2017-09-12 21:21:55","2017-09-12 21:21:55",0
"The Titanium SDK ","Android: Loading url in WebView crashes on Android 4.1","*Summary:*  WebView will crash on Android 4.1 when it attempts to load a webpage.    *Test:*        *Notes:*    - It does not crash on Android 4.2 or newer OS versions.  - It won't crash on Android 4.1 if a webpage has not been loaded. (That is, the url has not been set.)    *Cause:*    It crashes when the Canvas.drawPath() methods get called in our TiBorderWrapperView.java while hardware acceleration is enabled. So, even though we've never applied a border in the above test code, our WebViewProxy always applies a zero border width to its settings, which is enough to trigger our TiUIView code to go wrap the WebView in a TiBorderWrapperView container.    *Suggested Solution:*  Never draw a border around a WebView on Android 4.1 to work-around this issue.    Note that disabling hardware acceleration will work-around this issue as well, but doing so will prevent HTML5 videos from being seen (see: [TIMOB-23885]), making this a worse solution.",Bug,Critical,Closed,"2017-09-12 18:22:27","2017-09-12 18:22:27",3
"The Titanium SDK ","Windows: Click and touch events not being passed down to child view","h5.Description    Child view elements (Ti.UI.View) are not passed down click and touch events, other elements like label and button are        h5.Steps to reproduce    # Add the above to an existing app.js and build for Windows  # Tap the button  # Tap the label  # Tap the view    h5.Actual    click event fires for label and button but not for view    h5.Expected      click event should fire for all",Bug,High,Closed,"2017-09-11 11:03:58","2017-09-11 11:03:58",5
"The Titanium SDK ","iOS: HTTPclient sends additional post request on receipt of 401 error","When making a POST request with httpClient and the resource returns a 401 error, a second POST request is being made automatically. Similar issues have previously been reported (and resolved) with Android, but not iOS.    {code:js}  var httpClient = Ti.Network.createHTTPClient({     onload: function(e) {      // This function is not triggered with the 401 response code    },      onerror: function(e) {        // This function is triggered with the 401 response code, but a second POST is also made    },    onreadystatechange: function(e) {      Ti.API.warn(this.readyState);      // 1      // 3      // 3      // 4      // 4    },    timeout: 2000    });    httpClient.open('POST', 'https://httpstat.us/401');  {code}",Bug,Critical,Resolved,"2017-09-10 07:53:15","2017-09-10 07:53:15",5
"The Titanium SDK ","Android: Runtime error exposed beyond app through Intent.getData() on API 24 & higher when using Ti.Media.previewImage()","*Reason:* https://inthecheesefactory.com/blog/how-to-share-access-to-file-with-fileprovider-on-android-nougat/en    h5. Steps to reproduce:  1. Use the code below in the app.js:      2. Make sure you have {{camera}} permission in your tiapp.xml:    2. Build the app to android device.  3. After the app launches, click on {{TAKE SCREENSHOT}}.    h5.Actual result:  1. On API 24 & higher clicking the {{TAKE SCREENSHOT}} button causes {{Runtime Error}}:    h5.Expected results:  1. No runtime error should be thrown.",Bug,None,Closed,"2017-09-08 22:17:00","2017-09-08 22:17:00",5
"The Titanium SDK ","Windows: Crash when adding tableview back to window","h5.Description    *The original Android ticket that this test came from was related to searchbar but this occurs when the searchbar isn't added too, when testing please ensure both (with searchbar and without searchbar) are exercised*    When adding a tableview back to a windows after removing it the app will freeze and crash        h5.Steps to reproduce    # Add the above code to an existing app.js  # Tap the button at the top  # Tap the button again    h5.Actual    TableView is removed on first click, app freezes and crashes on second click    h5.Expected    TableView is removed on first click, readded on second click",Bug,High,Closed,"2017-09-08 14:25:07","2017-09-08 14:25:07",5
"The Titanium SDK ","Windows: Setting label.color to null causes label text to become transparent","h5.Description    Setting color property of a label to null causes the label text to become transparent, it should go to the default colour for the platform, I have not tested any other UI elements        h5.Steps to reproduce    # Add the above code to an existing app.js  # Tap the label    h5.Actual    Label becomes transparent    h5.Expected    Label should go to default color",Bug,Medium,Closed,"2017-09-08 11:47:32","2017-09-08 11:47:32",3
"The Titanium SDK ","Windows: backgroundGradient.colors should accept an array of just colour values","h5.Description    backgroundGradient.colors property should accept an array containing just strings representing color values, as opposed to an array of objects with color values and offset value        h5.Steps to reproduce    # Add the above to an existing app.js and build for Windows  # Comment out the array of objects and uncomment the array of color strings    h5.Actual    backgroundGradient disappears after step 2    h5.Expected    backgroundGradient should stay",Bug,Medium,Closed,"2017-09-08 10:21:22","2017-09-08 10:21:22",8
"The Titanium SDK ","Windows: backgroundGradient should have a default startPoint and endPoint","h5.Description    Defining a backgroundGradient without a startPoint or endPoint should default to a value    Docs: https://github.com/<USER>titanium_mobile/blob/6f50122643f87a89523bf27af3186f597a9a55df/apidoc/Titanium/UI/View.yml#L1788    Android: https://github.com/<USER>titanium_mobile/blob/a8aceeaeee02ed9c8ea70c835a0e78960e254a55/android/titanium/src/java/org/<USER>titanium/view/TiGradientDrawable.java#L29    iOS (I think): https://github.com/<USER>titanium_mobile/blob/8ab7ac87ef1663c4cd8b50afc59b3bea72f31d53/iphone/Classes/TiGradient.m#L210-L215    Note that on Android the value stated in the docs doesn't give them same outcome as the default value, below is what obtains the default on Android It does work as expected on Windows        h5.Steps to reproduce    # Add the above to an app.js and build for Windows  # Comment out startPoint and endPoint    h5.Actual    After commenting the values out the gradient disappears    h5.Expected    The gradient should stay the same after commenting the values out",Bug,Medium,Closed,"2017-09-08 09:59:47","2017-09-08 09:59:47",8
"The Titanium SDK ","Android: Scrolling with headerView causes app to crash","*Description:*  When a TableView contains a headerView, the app crashes when the headerView is scrolled out of view, and then scrolled back into view.    *Steps to Reproduce:*  1 Create a classic app that has a TableView with a headerView. Create enough rows of data so that you can scroll down far enough for the headerView to scroll out of visibility.  2. Scroll back up so that the headerView becomes visible again.  3. The app will crash when the headerView tries to reappear on the screen.    *Actual Results:*  The app will crash when scrolling back up to see the headerView    *Expected results:*  The app should not crash.     *Other relevant information:*  The crash occurs on an Android 7.1.2 device, but does not occur on an Android 6.0.1 device. This is also a regression. On Ti SDK 6.1.2.GA, the crash was not observed on an Android device. It does not crash with headerTitle, only headerView.  The test code I used is here:  https://gist.github.com/mukherjee2/9b433fe8054849b92d51646ab362dca4    ",Bug,None,Closed,"2017-09-07 21:36:49","2017-09-07 21:36:49",2
"The Titanium SDK ","Windows: touchstart and touchend do not fire for button","h5.Description    touchstart and touchend dont fire on a button        h5.Steps to reproduce    # Add the code above to an app.js and build for Windows  # Click the button    h5.Actual    No touchstart or touchend events    h5.Expected     Should see touchstart and touchend  ",Bug,High,Closed,"2017-09-07 15:05:35","2017-09-07 15:05:35",0
"The Titanium SDK ","Windows: Picker.setSelectedRow doesn't work","h5.Description    Calling setSelectedRow causes no change in the UI        h5.Steps to reproduce    1. Add the above code to an existing app.js  2. Build for Windows  3. Click 'Select Answer 6'    h5.Actual    On startup Answer 5 should be shown, after clicking the button home Answer 6 should be shown    h5.Expected    Picker remains blank",Bug,High,Closed,"2017-09-07 14:17:15","2017-09-07 14:17:15",5
"The Titanium SDK ","Windows: PickerColumn shrinks after reload","h5.Description    *This is a regression but I call it that lightly as in 6.1.2.GA the columns would already start small*    When calling reloadColumn the size of the column shrinks in width with each call        h5.Steps to reproduce  1. Add the code above to an existing app.js  2. Click reload multiple times    h5.Actual    Column shrinks in width    h5.Expected    Column width should stay constant",Bug,High,Closed,"2017-09-07 13:47:04","2017-09-07 13:47:04",5
"The Titanium SDK ","Windows: Calling picker.reloadColumn removes all other columns","h5.Description    When calling picker.reloadColumn, if there are multiple columns all other columns are removed        h5.Steps to reproduce    # Add the code above to an existing app.js  # Click reload    h5.Actual    two columns get removed    h5.Expected    No columns removed",Bug,High,Closed,"2017-09-07 13:35:21","2017-09-07 13:35:21",5
"The Titanium SDK ","iOS: Framework hook passes wrong data back to builder","The new framework hook passes data back to the builder so other hooks can make use of it. There is a property mix up that results in wrong data being passed back.     This does not affect the framework integration in anyway and only causes issues for hooks that want to consume the framework info data (of which there are currently none, because it's a new feature)",Bug,Medium,Closed,"2017-09-07 13:12:00","2017-09-07 13:12:00",1
"The Titanium SDK ","Windows: value prop for picker always returns undefined","h5.Description    Accessing the value property of using the getValue func of a picker always returns undefined        h5.Repro steps    # Add the code above to an existing app.js  # Build for Windows  # Select a value from the picker  # Click the button    h5.Actual    Undefined is logged from the change event and getValue and value prop    h5.Expected",Bug,High,Closed,"2017-09-07 11:32:14","2017-09-07 11:32:14",5
"The Titanium SDK ","Android: Ti.Network.createHTTPClient log 404 : Not Found error in application log","*Reproduce Step*  1. create an app  2. add these to {{index.js/app.js}}    3. run the app    *Actual Output*  iOS  HTTP error responses is returned to the onerror handler      *Android*  Following output is logged as an eror in the application log.      *Expected Result*  - Android should *not* log received HTTP response errors (such as 404) to the Android log. Providing the HTTP error response to the onerror() listener is enough, like iOS. (It's up to the app developer to decide to log it.)  - Android *should* set the readyState property to DONE after receiving HTTP response errors. This is to match our documentation and iOS behavior. (A response was successfully received after all, even though it might not be the response you wanted.)  ",Bug,Medium,Closed,"2017-09-07 00:08:33","2017-09-07 00:08:33",2
"The Titanium SDK ","Android: Improve incremental build times","While working on TIMOB-24829 i noticed a few more things in the android build that can be improved, resulting in a faster build time on incremental builds.    Compared to the iOS build, which only takes ~5s for incremental builds, the Android build is much slower with ~30-40 sek. Most of the time is spend on recompiling and dexer operations, which are unnecessary if nothing related changed.    The Android builder already contains a lot of comments about what can be skipped or cached, but contains no actual code that would do that. The actions in particular are:    - Compile java classes (only needs to be done when files in {{build/android/src}} or {{build/android/gen}} change  - Run Proguard (only needs to be done when any java classes changed)  - Run dexer (only needs to be done if any libraries changed, any files in {{build/android/bin/classes}} have changed or debugging/profiling was toggled. This alone will cut down the android build time by approximately one third.    \\  ----  *Final Result:*  Below are the performance improvements between Titanium 8.3.0 and 9.0.0 with [kitchensink-v2|https://github.com/<USER>kitchensink-v2] on a 15 MacBook Pro 2015 with a solid state drive.  ",Improvement,Medium,Closed,"2017-09-06 21:32:11","2017-09-06 21:32:11",3
"The Titanium SDK ","Windows: Problem with touchEnabled and styling on runtime","h5. Problem Description:  We were trying to edit an element during runtime that has a property of touchEnabled: false but the changes are not taking effect.    h5. Sample Application:    Attached.    h5. Steps to Reproduce:  1. Run the attached app.  2. click on the label  2. You will see, the second view changes it's color but first one does not(this view has touchEnabled: false property set in tss)    h5. Note: Testing it on iOS works fine.",Bug,High,Closed,"2017-09-06 19:56:16","2017-09-06 19:56:16",5
"The Titanium SDK ","Android: View with a border can cause a significant performance deficit","- A view with a border containing another view with a border will re-draw on every frame, causing significant UI performance hit.    *TEST CASE*  {code:js}  var win = Ti.UI.createWindow({backgroundColor: 'gray'}),      list = Ti.UI.createListView({          templates: {              template: {                  childTemplates: [                      {                          type: 'Ti.UI.View',                          properties: {                              left: 5,                              right: 5,                              top: 5,                              backgroundColor: 'blue',                              height: 90,                              bottom: 5,                              borderColor: 'orange',                              borderRadius: 10,                              borderWidth: 5                          },                          childTemplates: [                              {                                  type: 'Ti.UI.View',                                  bindId: 'item',                                  properties: {                                      left: 10,                                      right: 10,                                      height: 30,                                      backgroundColor: 'red',                                      borderColor: 'purple',                                      borderRadius: 5,                                      borderWidth: 3                                  }                              }                          ]                      }                  ]              }          },          defaultItemTemplate: 'template'      }),      section = Ti.UI.createListSection(),      items = [];    for (var i = 0; i < 48; i++) {      items.push({          item: {              width: '50%'          }      });  }    section.setItems(items);  list.setSections([section]);    win.add(list);  win.open();  {code}",Bug,Critical,Closed,"2017-09-06 19:37:48","2017-09-06 19:37:48",8
"The Titanium SDK ","Windows: Feature request - Ti.UI.Picker borderColor property","h5. Description:    Currently, borderColor property of Ti.UI.Picker is available only for Android and iOS.    Here is the AppC documentation link for this method - http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.View-property-borderColor  h5. Sample Application:    Attached the sample app to test.    h5. Runtime Issue:  In index.js borderColor applied to the picker has no effect on picker.","New Feature",Medium,Closed,"2017-09-06 19:28:17","2017-09-06 19:28:17",5
"The Titanium SDK ","Windows: Feature request -  Ti.UI.TEXT_ALIGNMENT_JUSTIFY","h5. Description:    Currently, Ti.UI.TEXT_ALIGNMENT_JUSTIFY property is available only for iOS.    Here is the AppC documentation link for this method - http://docs.<USER>com/platform/latest/#!/api/Titanium.UI-property-TEXT_ALIGNMENT_JUSTIFY    h5. Sample Application:  Attached the sample app to test.    h5. Runtime Issue:  textAlign property assigned to Label in index.xml has no effect on it.  ","New Feature",Medium,Closed,"2017-09-06 19:20:09","2017-09-06 19:20:09",3
"The Titanium SDK ","Windows: Feature request - Ti.UI.TextField setSelection method","h5. Description:  Currently,  setSelection method of Ti.UI.TextFields is available only for Android and iOS.  But it does not work for Windows.    Here is the AppC documentation link for this method - http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TextField-method-setSelection    h5. Sample Application:  Attached the sample app to test.    h5. Runtime Issue:  setSelection method call on TextField in index.js throws runtime error.","New Feature",Medium,Closed,"2017-09-06 19:05:39","2017-09-06 19:05:39",5
"The Titanium SDK ","Android: Ti.Filesystem.resourcesDirectory returns different list on device","*Reproduce Steps*  1. create a classic project  2. create {{testlib}} folder under {{Resources}}  3. add some js files under testlib  4. add this line to {{app.js}}    5. run the project on device and emulator.    *Actual Result*  Emulator      Device      *Expected result*  {{Ti.Filesystem.resourcesDirectory}} directory listing should return same result.",Bug,High,Closed,"2017-09-06 18:05:54","2017-09-06 18:05:54",5
"The Titanium SDK ","iOS: Automatic integration of resource bundles from frameworks","In 6.2.0 we introduce the automatic integration of frameworks from modules and from the apps {{platform/ios}} folder. To further ease the use of frameworks, the build should also be able to automatically integrate any resource bundles from frameworks with the Xcode project. This will remove the need to manually copy them to a module's {{Resources}} directory.",Improvement,Medium,Open,"2017-09-05 14:42:35","2017-09-05 14:42:35",5
"The Titanium SDK ","Xcode 9/10: Support using new build-system","Xcode 9 includes the preview of the new build system, written entirely in Swift. In can be enabled in the project-settings or - what's more relevant for us - using the xcodebuild flag {{-UseNewBuildSystem=YES}}.     We could introduce a new use-new-build-system property so users can try it out, input welcome!",Bug,Low,Closed,"2017-09-04 17:15:50","2017-09-04 17:15:50",13
"The Titanium SDK ","Android: Touch Id authentication issue","h5. Issue Description     When no finger prints are enrolled on the device, we are navigating the user to General Settings  screen of the device. After adding the finger prints to the device and coming back to our application, if user is trying to provide his finger print, module is returning the below error code when giving the wrong finger print :     when providing the valid finger print :     But when we kill the app and provide the valid finger print, it is working as expected.    ",Bug,None,Closed,"2017-09-04 16:56:34","2017-09-04 16:56:34",3
"The Titanium SDK ","Windows: Ti.Paint module makes the app crash on 6.2.0 RC","h5. Issue Description    Tested version 2.0.0 of this module with the RC of 6.2.0 (6.2.0.v20170901083635) and this error pops up when launching the app:    -- End application log -------------------------------------------------------    [ERROR] Error: Erroring running wstool (code 1)  Could not find version  of application com.propelics.blankApp in the registry. Is the application installed?        at C:\ProgramData\Titanium\mobilesdk\win32\6.2.0.v20170901083635\node_modules\windowslib\lib\winstore.js:279:15      at ChildProcess.<anonymous> (C:\ProgramData\Titanium\mobilesdk\win32\6.2.0.v20170901083635\node_modules\node-appc\lib\subprocess.js:60:3)      at emitTwo (events.js:87:13)      at ChildProcess.emit (events.js:172:7)      at maybeClose (internal/child_process.js:854:16)      at Process.ChildProcess._handle.onexit (internal/child_process.js:222:5)    Sample project: https://propelics.box.com/s/uz3zfarsnk8u5g9lgkrpjit3ssqhtybd    H5. Steps to reproduce  1) Try to compile and build the app  2) When app is launching the error described above will pop up and app won't launch successfully.    PLEASE NOTICE: this same sample app runs correctly in 6.1.2.GA    ",Bug,Critical,Closed,"2017-09-04 16:14:46","2017-09-04 16:14:46",3
"The Titanium SDK ","Android: ListView in front of other views (wrong z-order)","*Summary:*  When creating a ListView and adding a loading indicator (view + ActivitiyIndicator) after the ListView, the loading indicator is not visible with 6.2.0.RC    *Code:*      *Results:*  6.1.2.GA: Black View + ActivityIndicator shown in front of the ListView  6.2.0.RC: ListView stays in front; black view + ActivityIndicator not visible",Bug,Critical,Closed,"2017-09-01 15:56:27","2017-09-01 15:56:27",5
"The Titanium SDK ","Android: ImageView doesn't accept File","Summary:  In 6.2.0.RC getFile() returns a FileProxy that can't be shown in an ImageView    *Steps:*  * Create a default Titanium Classic project  * add this code:  {code}    var win = Ti.UI.createWindow({backgroundColor: 'grey'});  var f = Ti.Filesystem.getFile(assets/images/tab1.png);  if (f.exists()) {   console.log(file exists);   var img = Ti.UI.createImageView({    image: f,    top: 10   });   win.add(img);     var img2 = Ti.UI.createImageView({    image: f.nativePath   });   win.add(img2);  } else {   console.log(file does not exists at  + f.nativePath);  }  win.open();  {code}    *Output*    6.1.2.GA shows both images:   !612_ga_images.png|thumbnail!     6.2.0.RC only shows one image:   !6_2_0_rc_images.png|thumbnail!   and this error:      ",Bug,Critical,Closed,"2017-09-01 15:12:30","2017-09-01 15:12:30",3
"The Titanium SDK ","Android: FileNotFoundExceptions should not be inside the Titanium log","When referencing a file that does not exist (let's say in a Ti.UI.ImageView), we should only log one error message to say it does not exist - which we do, but we also log like 30 lines exception-logs and two additional warnings that do not help the developer in any case and only spams the console. To clean this little but annoying issue, we could just adjust the log by leaving out the 3rd parameter that uses the exception-log.     Example of a log:  ",Bug,Medium,Closed,"2017-09-01 13:54:05","2017-09-01 13:54:05",3
"The Titanium SDK ","DocumentViewer: Not working well only on iOS 8 devices","h6.Reproduce  1. Run the following simple code in a classic project on a iOS 8 device.      h6.Problem  Get empty screen without any done button    h6.Note  1. It is working well on iOS 9 and above device  2. It is working well on iOS 8.4 simulator.  3. Seems problem is only happened on iOS 8 real device.",Bug,High,Closed,"2017-09-01 02:46:04","2017-09-01 02:46:04",0
"The Titanium SDK ","Android: Native modules fail to load","- Native modules built with the current {{7.0.0}} build fails to load on device    ",Bug,Critical,Closed,"2017-08-31 14:44:32","2017-08-31 14:44:32",3
"The Titanium SDK ","Android: TouchFeedbackColor not working with borderRadius","The {{touchFeedbackColor}} that was introduced with 6.1.0.GA is not working if a button has a {{borderRadius}}:        The native button0 and button1 are showing the ripple effect. The last button2 with a {{borderRadius}} just shows the {{backgroundColor}} without a ripple effect.      SDK: 6.1.2.GA  Android: HTC A9 Android 7 / Moto G2 5.0.2        ",Bug,Critical,Closed,"2017-08-12 18:39:25","2017-08-12 18:39:25",1
"The Titanium SDK ","Make 8.1 unsupported in the CLI","h5.Description    *This task needs to go either hand in hand with or before TIMOB-25203 to ensure that the removal is tidy*    From the CLI we need to ensure the following    * 8.1 SDK is listed as unsupported  * 8.1 emulators are not shown  * An app cannot be built with a {{--win-sdk}} value of 8.1 for any target  * An app cannot be packaged with a {{--win-sdk}} value of 8.1 for any target  * Modules do not create 8.1 SDK projects on creation or when the {{--run-cmake}} flag is used",Sub-task,None,Closed,"2017-08-29 18:42:03","2017-08-29 18:42:03",5
"The Titanium SDK ","Android: Unable to use some native modules with 6.2.0","h5.Description    When attempting to use ti.barcode on 6.2.0 the app will crash with the below, the same code works fine in 6.1.2.GA        h5.Steps to reproduce    # Download ti.barcode from https://github.com/<USER>modules/ti.barcode/releases  # Grab the code and tiapp settings from https://gist.github.com/ewanharris/f524cf9758b0b2fac540c60c4f4acd1e  # Build to a device   # Tap get perms  # Tap scan code or scan image from gallery    h5.Actual    Crashes with the above error    h5.Expected    No crash    {code: title=Complete log from startup}  -- Start application log -----------------------------------------------------  [INFO]  TiApplication: (main) [0,0] checkpoint, app created.  [INFO]  TiApplication: (main) [37,37] Titanium 6.2.0 (2017/08/28 18:04 undefined)  [INFO]  MultiDex: VM with version 2.1.0 has multidex support  [INFO]  MultiDex: install  [INFO]  MultiDex: VM has multidex support, MultiDex support library is disabled.  [WARN]  TiAndroid: (main) [283,320] Application instance no longer available. Unable to get current activity.  [WARN]  TiAndroid: (main) [1,321] Application instance no longer available. Unable to get current activity.  [WARN]  TiAndroid: (main) [1,322] Application instance no longer available. Unable to get current activity.  [INFO]  TiApplication: (main) [26,348] Titanium Javascript runtime: v8  [WARN]  art: Before Android 4.1, method android.graphics.PorterDuffColorFilter android.support.graphics.drawable.VectorDrawableCompat.updateTintFilter(android.graphics.PorterDuffColorFilter, android.content.res.ColorStateList, android.graphics.PorterDuff$Mode) would have incorrectly overridden the package-private method in android.graphics.drawable.Drawable  [INFO]  TiRootActivity: (main) [0,0] checkpoint, on root activity create, savedInstanceState: null  [INFO]  TiRootActivity: (main) [0,0] checkpoint, on root activity resume. activity = com.testing.TestinappActivity@f3601a4  [DEBUG] AppTracker: App Event: start  [DEBUG] AppTracker: App Event: stop  [WARN]  TiUIScrollView: (main) [97,97] Scroll direction could not be determined based on the provided view properties. Default VERTICAL scroll direction being used. Use the 'scrollType' property to explicitly set the scrolling direction. [TRACE] BoostFramework: mAcquireFunc method = public int com.qualcomm.qti.Performance.perfLockAcquire(int,int[])  [TRACE] BoostFramework: mReleaseFunc method = public int com.qualcomm.qti.Performance.perfLockRelease()  [TRACE] BoostFramework: mAcquireTouchFunc method = public int com.qualcomm.qti.Performance.perfLockAcquireTouch(android.view.MotionEvent,android.util.DisplayMetrics,int,int[])  [TRACE] BoostFramework: mIOPStart method = public int com.qualcomm.qti.Performance.perfIOPrefetchStart(int,java.lang.String)  [TRACE] BoostFramework: mIOPStop method = public int com.qualcomm.qti.Performance.perfIOPrefetchStop()  [TRACE] BoostFramework: BoostFramework() : mPerf = com.qualcomm.qti.Performance@2b0a8fb  [TRACE] BoostFramework: BoostFramework() : mPerf = com.qualcomm.qti.Performance@5d69d18  [DEBUG] Window: Checkpoint: postWindowCreated()  [TRACE] BoostFramework: BoostFramework() : mPerf = com.qualcomm.qti.Performance@33548bb  [TRACE] BoostFramework: BoostFramework() : mPerf = com.qualcomm.qti.Performance@57b21d8  [DEBUG] AppTracker: App Event: start  [DEBUG] AppTracker: App Event: stop  [INFO]  Adreno: QUALCOMM build                   : 853a1ff, I9c435c2712  [INFO]  Adreno: Build Date                       : 01/10/17  [INFO]  Adreno: OpenGL ES Shader Compiler Version: XE031.09.00.04  [INFO]  Adreno: Local Branch                     :  [INFO]  Adreno: Remote Branch                    :  [INFO]  Adreno: Remote Branch                    :  [INFO]  Adreno: Reconstruct Branch               :  [INFO]  OpenGLRenderer: Initialized EGL, version 1.4  [DEBUG] OpenGLRenderer: Swap behavior 1  [DEBUG] AppTracker: App Event: start  [TRACE] BoostFramework: BoostFramework() : mPerf = com.qualcomm.qti.Performance@668204d  [WARN]  W/System.err: java.lang.NoSuchMethodError: No static method getAppCurrentActivity()Landroid/app/Activity; in class Lorg/<USER>titanium/TiApplication; or its super classes (declaration of 'org.<USER>titanium.TiApplication' appears in /data/app/com.testing-2/base.apk)  [WARN]  W/System.err:   at ti.barcode.BarcodeModule.capture(BarcodeModule.java:309)  [WARN]  W/System.err:   at org.<USER>kroll.runtime.v8.V8Object.nativeFireEvent(Native Method)  [WARN]  W/System.err:   at org.<USER>kroll.runtime.v8.V8Object.fireEvent(V8Object.java:62)  [WARN]  W/System.err:   at org.<USER>kroll.KrollProxy.doFireEvent(KrollProxy.java:921)  [WARN]  W/System.err:   at org.<USER>kroll.KrollProxy.handleMessage(KrollProxy.java:1144)  [WARN]  W/System.err:   at org.<USER>titanium.proxy.TiViewProxy.handleMessage(TiViewProxy.java:363)  [WARN]  W/System.err:   at android.os.Handler.dispatchMessage(Handler.java:98)  [WARN]  W/System.err:   at android.os.Looper.loop(Looper.java:154)  [WARN]  W/System.err:   at android.app.ActivityThread.main(ActivityThread.java:6290)  [WARN]  W/System.err:   at java.lang.reflect.Method.invoke(Native Method)  [WARN]  W/System.err:   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)  [WARN]  W/System.err:   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)  [ERROR] TiExceptionHandler: (main) [3948,4045] ----- Titanium Javascript Runtime Error -----  [ERROR] TiExceptionHandler: (main) [0,4045] - In /app.js:92,13  [ERROR] TiExceptionHandler: (main) [0,4045] - Message: Uncaught No static method getAppCurrentActivity()Landroid/app/Activity; in class Lorg/<USER>titanium/TiApplication; or its super classes (declaration of 'org.<USER>titanium.TiApplication' appears in /data/app/com.testing-2/base.apk)  [ERROR] TiExceptionHandler: (main) [0,4045] - Source:     Barcode.capture({  [TRACE] BoostFramework: BoostFramework() : mPerf = com.qualcomm.qti.Performance@241dc26  [TRACE] BoostFramework: BoostFramework() : mPerf = com.qualcomm.qti.Performance@2828067  [TRACE] BoostFramework: BoostFramework() : mPerf = com.qualcomm.qti.Performance@5df94b2  [TRACE] BoostFramework: BoostFramework() : mPerf = com.qualcomm.qti.Performance@32cbc03  [ERROR] V8Exception: Exception occurred at /app.js:92: Uncaught No static method getAppCurrentActivity()Landroid/app/Activity; in class Lorg/<USER>titanium/TiApplication; or its super classes (declaration of 'org.<USER>titanium.TiApplication' appears in /data/app/com.testing-2/base.apk)  [ERROR] V8Exception: No static method getAppCurrentActivity()Landroid/app/Activity; in class Lorg/<USER>titanium/TiApplication; or its super classes (declaration of 'org.<USER>titanium.TiApplication' appears in /data/app/com.testing-2/base.apk)  [WARN]  TiVerify: (Timer-0) [955,5000] Verifying module licenses...  [INFO]  DpmTcmClient: RegisterTcmMonitor from: org.apache.http.impl.conn.TcmIdleTimerMonitor  [DEBUG] NetworkSecurityConfig: No Network Security Config specified, using platform default  [INFO]  TiVerify: (Timer-0) [545,5545] Succesfully verified module licenses  [DEBUG] AppTracker: App Event: stop  -- End application log -------------------------------------------------------  {code}",Bug,None,Closed,"2017-08-29 13:30:32","2017-08-29 13:30:32",2
"The Titanium SDK ","Android: Support RefreshControl in Ti.UI.ScrollView","We've added refresh-control support to Android's ListView and TableView in 6.2.0.    We should also add support to {{Ti.UI.ScrollView}}, which we need for 100% parity with iOS.","New Feature",Medium,Closed,"2017-08-27 16:51:59","2017-08-27 16:51:59",5
"The Titanium SDK ","Android: Studio does not recognize currently running emulators; Always launches new emulator on Windows OS","When trying to build an Android app using Appc Studio, Studio is always trying to open a new emulator, even if the emulator is already open. In some cases the emulator will open and successfully install, run the application - but this also fails a majority of the time seemingly related to a timeout issue.    This is happening using both genymotion and Android emulators.    I'll try and gather more information from the user.    ",Bug,High,Open,"2016-03-01 06:19:36","2016-03-01 06:19:36",5
"The Titanium SDK ","Windows: Evaluating a null value from Hyperloop crashes the App","h5. Description   When evaluating a .NET's null value retrieved using Hyperloop (Windows; Hyperloop version 2.1.1) , the application crashes. Take for instance:      If no command was selected, the application crashes. Otherwise, it works as expected.",Bug,High,Closed,"2017-08-24 17:55:27","2017-08-24 17:55:27",5
"The Titanium SDK ","iOS: Preserve permissions when packaging module platform folder","Frameworks stored under the platform folder loose their executable permission when they are archived by the module build on iOS",Improvement,Critical,Closed,"2017-08-22 21:03:01","2017-08-22 21:03:01",3
"The Titanium SDK ","Android: Crash when clicking on label with SpannedString content","TiUILabel sometimes crashes (rare) in onTouchEvent when clicking on a html link.    The bug is that the code calls:  {{Layout layout = textView.getLayout();}}  there is no test for:  {{layout != null}}  getLayout() can return null as described in the documentation.    It's hard to reproduce because the content of the textView has to change right before the click.",Bug,Critical,Closed,"2017-08-22 10:15:12","2017-08-22 10:15:12",1
"The Titanium SDK ","Android: WebView using data will not load PDF","When attempted to render a PDF in a webview, if using the data property for the webview, the PDF will not display on Android. It will work on iOS>",Bug,Critical,Closed,"2017-08-21 20:13:14","2017-08-21 20:13:14",0
"The Titanium SDK ","Android: Tableview row title gets messed up after scrolling on android 7.0 & above ","*This is a regression. Not seen with SDK 6.1.2.GA.*    h5.Steps to reproduce:  1. Create an android app.  2. Use the code below in the app.js:      3. Build for android 7.0 & above device/emulator.  4. After the app launches scroll the tableview.    h5.Actual results:  1. The tableviewrow title get messed up after scrolling.   2. For the code above the you will see random title at random places as they are revealed after scrolling up & down.  3. Getting the index shows proper index for the row. Its just the title is messed up.    h5.Expected result:  1. The tableviewrow title should not get messed up.",Bug,None,Closed,"2017-08-22 01:38:36","2017-08-22 01:38:36",3
"The Titanium SDK ","Windows: Default language resource warning","h5.Description    When building an app that uses Hyperloop there is a warning in the console about no resources found for default language, we probably just need to remove the <DefaultLanguage> deceleration in this search https://github.com/<USER>hyperloop.next/search?utf8=%E2%9C%93&q=+%3CDefaultLanguage%3E&type=        h5.Steps  to reproduce    # Build a project    h5.Actual    Warning    h5.Expected    No warning",Bug,Medium,Closed,"2017-08-21 14:21:22","2017-08-21 14:21:22",5
"The Titanium SDK ","iOS: App fails to compile on any version of macOS using case sensitive journalling","When building for iOS (on simulator or device), on a Mac running a `Case-sensitive` journalling file format, Ti SDK 6.1.2.GA will fail to compile 100% of the time.    An example error can be seen below:    {code:bash}  [ERROR]         CompileC build/Intermediates/APPNAME.build/Debug-iphonesimulator/APPNAME.build/Objects-normal/i386/WatchSessionModule.o Classes/WatchSessionModule.m normal i386 objective-c com.apple.compilers.llvm.clang.1_0.compiler      Without this change, a developer using a file format like this is completely unable to build with the latest Titanium SDKs for iOS.",Bug,Critical,Closed,"2017-08-18 12:31:17","2017-08-18 12:31:17",1
"The Titanium SDK ","CLI: --default flag not respected if the SDK is already installed","h5.Description    {{--default}} flag is not respected when an SDK is installed    h5.Steps to reproduce    # {{ti sdk install -b master -d}}  # {{ti sdk select}} and choose something other than the one just installed  # {{ti sdk install -b master -d}}  # {{ti sdk}}    h5.Actual     SDK selected in step 2 is still selected    h5.Expected    SDK installed in 3 should be selected",Bug,None,Resolved,"2017-08-18 10:36:28","2017-08-18 10:36:28",3
"The Titanium SDK ","Windows : removeAllChildren() method of ScrollView does  not work","h5. Description:  When removeAllChildren() method of Ti.UI.ScrollView is called, contents of the ScrollView are not cleared in Windows.    h5. Steps to Replicate:  1. Run the attached sample Alloy project.  2. Click anywhere on the screen  3. Red block will keep adding to the view on every click.    On ScrollView click event, removeAllChildren method is called on ScrollView and a view with backgroundColor red is added to the ScrollView in index.js. Instead of removing the one that is already in the ScrollView, new View is being added on every click.    h5. Expected Result:  removeAllChildren() method should remove all child views of ScrollView container on click event.      ",Bug,High,Closed,"2017-08-16 23:29:26","2017-08-16 23:29:26",5
"The Titanium SDK ","Windows: Click on button in ListItem does not fire itemClick event ","h5. Description  In windows, if a ListItem has a button in it, clicking the button does not fire ListView's itemClick event.    h5. Steps to reproduce:   Run the attached Alloy project - TestListViewButton  Click on rows in ListView outside button. Log statment will be printed as '[INFO]  List View Item Click:::  itemContainer'  Click on buttons in ListView rows. No log statement will be printed.      ",Bug,High,Closed,"2017-08-16 16:41:45","2017-08-16 16:41:45",0
"The Titanium SDK ","Windows: Ti.UI.SIZE for height of ListView does not work as expected","h5. Descriptiob:  If the height of ListView is specified as Ti.UI.SIZE, it will take the height of one ListItem instead of having the height that fits all its ListItems.    h5. Steps to Replicate:  1. Run the attached Alloy project.  2. Only one ListItem will be visible since the height is set to Ti.UI.SIZE.    h5. Expected Result:  All ListItems should be visible when setting height as Ti.UI.SIZE for ListView.    ",Bug,High,Closed,"2017-08-16 00:32:13","2017-08-16 00:32:13",5
"The Titanium SDK ","Windows: applyProperties method throws exception on picker in windows","h5. Problem Description:  In Windows, when applyProperties method is called on a Picker, app throws Unknown Exception.    h5. Steps to Replicate:  1. Run the attached Alloy project TestPickerMethod  2. Clicking anywhere on the window will call applyProperties method on Picker and app will throw Unknown Exception.  3. Tried on iOS, it works fine and changes color to Red.    h5. Expected Result:  Border color should be changed to Red once click event is fired.    h5. Actual Result:  [ERROR] ----- Titanium Javascript Runtime Error -----  [ERROR] In undefined: undefined,undefined    ",Bug,Medium,Closed,"2017-08-15 23:33:39","2017-08-15 23:33:39",5
"The Titanium SDK ","Appc ti info intermittently does not show connected ios devices","Running {{appc ti info}} will not always show connected iOS devices. However, {{appc info -t ios}} seems to always show the connected devices correctly.    *Steps to reproduce*  1. Connect an iOS device to your machine  2. Run {{appc ti info}}    *Actual Results*  The connected device is not shown    *Expected Results*  The connected device is shown    *Notes*  Running {{appc ti info -t ios}} seems to always work as expected",Bug,High,Closed,"2015-06-01 20:51:10","2015-06-01 20:51:10",0
"The Titanium SDK ","Appcelerator Studio does not install properly on Window 10 machine.","After installing node.js(v0.10.37) if we install CLI using this two command   npm install -g <USER> and  appc setup -l trace we get this error       And if we write this command appc ti info  we get this following error      I tried to uninstall and install CLI and node.js again but not luck. When I login to the <USER>Studio and select Android path it shows [Android SDK Home] No Android SDKs... under the specified SDK location    Testign Environment:  ",Bug,Critical,Closed,"2015-09-15 07:25:27","2015-09-15 07:25:27",5
"The Titanium SDK ","Dexer Parse Error MethodHandle not supported","When I add the external library dagger-compiler-2.9.jar I get an error when the dexer is running:    [ERROR] :  Failed to run dexer:  [ERROR] :    [ERROR] :  PARSE ERROR:  [ERROR] :  MethodHandle not supported  [ERROR] :  ...while preparsing cst 016c at offset 00001ceb  [ERROR] :  ...while parsing com/google/googlejavaformat/java/JavaInput.class  [ERROR] :  1 error; aborting    I'm not sure if something this library does isn't supported by Hyperloop, or if it is a bug, but I've never had an issue with adding any other external libraries.    Console output (trace level) is attached. Download the project from here https://drive.google.com/open?id=0B8kIhHPumU-mYjN5eWpFSm11LVk and try to build/run it to test.",Bug,Critical,Closed,"2017-08-11 18:49:58","2017-08-11 18:49:58",1
"The Titanium SDK ","Windows: Building with VS2017 does not select 10.0.15063 SDK","h5.Description    When building using VS 2017, SDK 10.0.15063 will not be selected, we just need to switch [this|https://github.com/<USER>titanium_mobile_windows/blob/595bfe69de50983f555555738925425f22301eb6/package.json#L29] to <=  ",Bug,None,Closed,"2017-08-14 11:57:54","2017-08-14 11:57:54",1
"The Titanium SDK ","WebView html property always return null on Android","When loading a local html file using webview. Html attribute always return null even the content is populated successfully on the screen.    Sample: (tested with SDK 6.1.1.GA, 6.1.2.GA)  *  index.xml*    *  index.js*      It's linked to AC-5118 ticket as i didn't describe clearly in previous ticket therefore it was closed.",Bug,Critical,Closed,"2017-08-09 00:41:55","2017-08-09 00:41:55",1
"The Titanium SDK ","Windows: Mocha test Titanium.UI.Window window_position_is_read_only test failure","Titanium.UI.Window window_position_is_read_only please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,Medium,Closed,"2017-08-11 16:22:32","2017-08-11 16:22:32",5
"The Titanium SDK ","Windows: Mocha test Titanium.UI.Window window_size_is_read_only test failure","Titanium.UI.Window window_size_is_read_only please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,Medium,Closed,"2017-08-11 16:22:31","2017-08-11 16:22:31",5
"The Titanium SDK ","Windows: Mocha test Titanium.UI.View border test failure","Titanium.UI.View border please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,Medium,Closed,"2017-08-11 16:22:24","2017-08-11 16:22:24",5
"The Titanium SDK ","Windows: Mocha test Titanium.UI.TextField width test failure","Titanium.UI.TextField width please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,Medium,Closed,"2017-08-11 16:22:22","2017-08-11 16:22:22",8
"The Titanium SDK ","Windows: Mocha test Titanium.UI.TextField padding test failure","Titanium.UI.TextField padding please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,Medium,Closed,"2017-08-11 16:22:19","2017-08-11 16:22:19",5
"The Titanium SDK ","Windows: Mocha test Titanium.UI.Layout TIMOB-23305 test failure","Titanium.UI.Layout TIMOB-23305 please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,Medium,Closed,"2017-08-11 16:22:16","2017-08-11 16:22:16",8
"The Titanium SDK ","Windows: Mocha test Titanium.UI.Layout centerYPrecedence test failure","Titanium.UI.Layout centerYPrecedence please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,Medium,Closed,"2017-08-11 16:22:02","2017-08-11 16:22:02",8
"The Titanium SDK ","Windows: Mocha test Titanium.UI.Layout centerXPrecedence test failure","Titanium.UI.Layout centerXPrecedence please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,Medium,Closed,"2017-08-11 16:22:01","2017-08-11 16:22:01",8
"The Titanium SDK ","Windows: Mocha test Titanium.UI.Layout undefinedTop test failure","Titanium.UI.Layout undefinedTop please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,Medium,Closed,"2017-08-11 16:22:00","2017-08-11 16:22:00",8
"The Titanium SDK ","Windows: Mocha test Titanium.UI.Label height test failure","Titanium.UI.Label height please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,None,Closed,"2017-08-11 16:21:57","2017-08-11 16:21:57",3
"The Titanium SDK ","Windows: Mocha test Titanium.UI.Label maxLines test failure","Titanium.UI.Label maxLines please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,Medium,Closed,"2017-08-11 16:21:54","2017-08-11 16:21:54",3
"The Titanium SDK ","Windows: Mocha test Titanium.UI.Button border test failure","Titanium.UI.Button border please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,Medium,Closed,"2017-08-11 16:21:29","2017-08-11 16:21:29",5
"The Titanium SDK ","Windows: Mocha test Titanium.UI.AlertDialog cancel test failure","Titanium.UI.AlertDialog cancel please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,None,Resolved,"2017-08-11 16:21:28","2017-08-11 16:21:28",3
"The Titanium SDK ","Windows: Mocha test Titanium.Blob constructed from File.read() test failure","Titanium.Blob constructed from File.read() please investigate the failure.   Please use https://github.com/ewanharris/titanium-mobile-mocha-suite/tree/TIMOB-24816 to find the related test You can use https://github.com/ewanharris/mocha-test to quickly debug (most) mocha tests)",Bug,None,Closed,"2017-08-11 16:21:08","2017-08-11 16:21:08",0
"The Titanium SDK ","Android: Textarea scroll in tableview","h5. Issue Description  In a tableviewrow, if a textarea is defined with a fixed height in Android,  user cannot scroll the textarea to view the entire text entered. In iOS the scroll works fine.     h5. Steps to reproduce  # Download the sample code  # Replace the app folder in a new project  # Run the project   # Scroll on the table view rows  ",Bug,High,Closed,"2017-08-11 14:58:48","2017-08-11 14:58:48",21
"The Titanium SDK ","Android: Run on All Devices installs & launches app on emulators, if emulators are running","h5. Steps To Reproduce:  1. Make sure you have 2 android devices connected, genymotion emulator & an android emulator running.  2. Build an app for All Devices.    h5.Actual Results:  1. The app is build for all connected devices as well as the emulators running.      h5.Expected Results:  1. The app should be built only for all physical devices connected & not emulators.",Bug,Medium,Closed,"2015-05-13 18:36:33","2015-05-13 18:36:33",1
"The Titanium SDK ","Android: Uncaught TypeError: Cannot use 'in' operator to search for 'Resources/alloy' in null.","*Issue Description:*    With an app that has Webview on Android. When I close the app (window.close() or Titanium.Android.currentActivity.finish()). I open and close the app the same way again. The next time I click to open the app I get a Runtime error.    Location:ti:/module.js  Message: Uncaught TypeError: Cannot use 'in' operator to search for 'Resources/alloy' in null  Source:return filename in fileIndex;    *Steps to reproduce*:  1. Create an alloy app and replace with the test code below.  2. When you run it, then press back button on device to close the window. Wait a few seconds. Open again, then repeat. Then it should show the error.    *Test Code:*  Index.xml      index.js      index.tss      ",Bug,None,Closed,"2017-08-10 10:35:06","2017-08-10 10:35:06",3
"The Titanium SDK ","Windows: run cmake flag always defaults to Visual Studio 2015 generator","h5.Description    When using the {{--run-cmake}} flag with VS2017 the generator selected will always be {{Visual Studio 14 2015}} this is because the check [here|https://github.com/<USER>titanium_mobile_windows/blob/18d58eb3a3b123ac916017661b83635a28e8caec/templates/module/default/template/windows/plugins/hooks/windows.js#L41] needs to be data.windowsInfo.selectedVisualStudio    Below is the working code        h5.Steps to reproduce    You need VS2017 to test this  1. Grab https://github.com/<USER>archive/ti.paint  2. Overwrite ti.paint/windows/plugins/hooks/windows.js with the hook [here|https://github.com/<USER>titanium_mobile_windows/blob/18d58eb3a3b123ac916017661b83635a28e8caec/templates/module/default/template/windows/plugins/hooks/windows.js]  3. Make sure the path at ti.paint/blob/master/windows/CMakeLists.txt#L24, matches your selected  4. Build the module using {{appc run -p windows --build-only --run-cmake}}    h5.Actual    Errors out with         Checking  ti.paint\windows\Windows10.Win32\CMakeCache.txt shows CMAKE_GENERATOR:INTERNAL is Visual Studio 14 2015    h5.Expected    Should select VS2017 generator and build successfully (note that you might still see a failure due to it attempting to build 8.1)",Bug,None,Closed,"2017-08-09 13:25:20","2017-08-09 13:25:20",3
"The Titanium SDK ","iOS 11: Add new MapKit API's","MapKit in iOS 11 adds support for marker-annotations, annotation-clustering and more. We should add those API's to our existing Ti.Map module. Here are some important API's to cover:  - Marker annotations (MKMarkerAnnotationView)    - We need to find a way to integrate these into the current ti.map logic. What I thought about is to integrate a type property into our annotations, so that custom annotation, image annotations, pin-annotations, marker annotations (iOS 11 only) and cluster-annotations (iOS 11 only) have their specific types to identify    - Expose all related properties like glyphText, glyphTintColor and glyphImage  - Annotation clustering    - Includes many components: MKClusterAnnotation, MKAnnotationViewCollisionMode, MKMapViewDefaultClusterAnnotationViewReuseIdentifier, MKFeature*, etc    - Need to work out, what components are used in which context and how we can expose them in a clean and easy way to the developer  - New map-type! MKMapTypeMutedStandard    - Should be exposed as constant (does Android have something similar?), e.g. MAP_TYPE_MUTED_STANDARD","New Feature",High,Closed,"2017-08-08 19:56:19","2017-08-08 19:56:19",5
"The Titanium SDK ","Android. v8 LowMemoryNotification","v8 supports optional notification LowMemoryNotification. Call to this method causes proper garbage collection, so many object will be collected on both js and java sides.    In my experience IdleNotificationDeadline(now+0.1) is not enough to collect all objects and some times this could lead to huge memory leak (actually it is not leak, because memory in java heap will be freed after gc in v8, for example if I call js heap snapshot creation)    I suggest, that we should add LowMemoryNotification call in case of:  - Application.onLowMemory  - Application.onTrimMemory    Also maybe:  - in case OutOfMemoryError in classes, which already handles this exception  - preventive check free heap size (Runtime.getRuntime().freeMemory()) and call when it is low.",Improvement,Critical,Closed,"2017-08-07 12:39:08","2017-08-07 12:39:08",0
"The Titanium SDK ","Windows: Alert Dialog showing two titles","h5. Problem Description:  Windows Alert Dialog showing two titles while on iOS/Android there is only one title exist.     h5. Steps to Reproduce:  1. Run the below sample code with app build -p windows -T ws-local      3. Click on the screen anywhere.  4. An alert dialog will appear with the title displayed two times as  !Windows Alert Dialog.png|thumbnail! .  5. On iOS, it only shows single title and then message.    h5. Expected Result:  Title should appear only once. Windows doc also shows only single title on dialogs.    https://docs.microsoft.com/en-us/windows/uwp/controls-and-patterns/dialogs  ",Bug,None,Closed,"2017-08-08 01:03:31","2017-08-08 01:03:31",1
"The Titanium SDK ","Windows: Liveview not working for windows application","h5. Problem Description:  When we run windows application in LiveView, the application shows the splash screen and then crashes with no error log.    h5. Steps to Reproduce:  Run the attached project in LiveView - `ti build -p windows -T ws-local --liveview`    h5. Actual Result:  App crashes without logging anything on Console.    h5. Expected Result:  App should continue working on LiveView mode wiothout crashing.",Bug,High,Closed,"2017-08-08 00:00:18","2017-08-08 00:00:18",5
"The Titanium SDK ","Android: Appc ti info -t android shows **Not supported by Titanium** message for all android platforms less than 21 ","h5.Description:  1. Run appc ti info -t android.  2. Look at the Android Platforms section.    h5.Actual Results:  1. You will see  **Not supported by Titanium SDK 4.0.1.v20150529150210**  message for all platforms below android platform 21.  2. We need API 21 to build with SDK 4.0.0.GA but this does not mean we don't support platforms below 21.  3. The min is android -14 now.( Correct if I am wrong here ).  *NOTE*: Attached screenshot for reference.    h5.Expected Results:  1. We should see the message for the appropriate android platforms.",Bug,High,Closed,"2015-06-08 22:29:47","2015-06-08 22:29:47",5
"The Titanium SDK ","iOS: multiple nested views with labels inside do not appear to handle click events as expected","Running the latest SDK (6.1.2) - it appears that nesting *Label* elements multiple layers down within *View* elements can cause the label text tap / touch / click events to not bubble up to their parent elements in some scenarios. In effect, this causes a 'dead space' of the text in a given row being the only untouchable element.      ",Bug,Critical,Resolved,"2017-08-04 13:29:00","2017-08-04 13:29:00",5
"The Titanium SDK ","iOS: disable emoji keyboard","h5. Description:   Customer would like an option to disable the emoji keyboard for certain inputs. Since xcode 8.2.1 you are able to select keyboard type numbers and punctuation to use a keyboard without emojis    h5. Feature request:   enable a way to select other keyboard types in iOS. Please see attached screenshot.    h5. Additional information:   Customer has already implemented disallow custom keyboards. ","New Feature",High,Closed,"2017-08-04 21:17:00","2017-08-04 21:17:00",2
"The Titanium SDK ","Continuous scrolling in WebView causing app to crash and relaunch ","h5. Description:   When using webview to display privacy content, upon continuous scrolling, the app closes and relaunches. Issue is occuring on Nexus 7 with OS 6.0.0     h5. Reproduce issue:   Download app   click open web view  Scroll up and down 6-10 times * if using genymotion use arrows to scroll up and down*    h5. Additional information  issue first appears in SDK 6.0.3 and is present in latest release 6.1.2  App link placed in comments",Bug,High,Closed,"2017-08-04 20:31:11","2017-08-04 20:31:11",1
"The Titanium SDK ","Windows: Hyperloop does not pick DLL in lib folders","h5. Problem Description:    In Windows, we are trying to use Hyperloop to access some third-party DLLs and WinMDs, however, the DLLs are not picked up by the build <USER>when they are placed in the App's lib folder (WinMDs files located in that same folder are). I figured a workaround and it was to place the DLLs on %ProgramFiles%\Reference Assemblies\Microsoft\Framework\.NETCore\v5.0 however, this is not desired.    h5. Expected Results:  DLLs should be picked up from app's lib directory.",Improvement,Medium,Closed,"2017-08-03 23:02:56","2017-08-03 23:02:56",5
"The Titanium SDK ","Windows: Ti.UI.Button randomly renders with black border","h5. Issue Description   We've been working with buttons a lot and have noticed sometimes a black border will render around the button, even when there's NO border properties declared in the tss (no borderWidth, no borderColor), unfortunately, it's a random issue and we haven't been able to reproduce it reliably.     Here's a sample app with only 1 button on it: https://propelics.box.com/s/g80r235tbipgadu1lj3yl5itvq5pd76i    We can't really provide you with a set of steps, but advise you with running the app at least 10 times (yeah, awful). When doing this, you should be able to see the border appearing some times and other times not. We did several iterations like this (running the app 10 times in a row) and we were able to see the border appearing and disappearing at least 2 times per iteration. But we weren't able to identify a pattern.    Also, please notice that when the border appears, and the button gets clicked, the border goes away.    * This can be tested by deploying with -T ws-local  ",Bug,Medium,Closed,"2017-08-03 17:30:50","2017-08-03 17:30:50",5
"The Titanium SDK ","Build Android hyperloop against SDK 7.0.0 / v8 5.7+","We need to re-build the native module against the latest V8 version we'll have in SDK 7.0. Right now that is 5.7, but will eventually be 6.0 or greater.",Story,High,Closed,"2017-08-02 17:41:49","2017-08-02 17:41:49",3
"The Titanium SDK ","Add Hyperloop to pre-packaged native modules listing in the SDK","We should add hyperloop to the list of pre-packaged modules to include in the built SDK.",Story,High,Closed,"2017-08-02 17:21:26","2017-08-02 17:21:26",3
"The Titanium SDK ","Hyperloop: Support ES6 user code","We need to be able to handle es6 user code in hyperloop.    I don't know if we have any issues around using uglify for any of the hooks we use, but I do know that we have an issue around our {{require}} detection if users starts using {{import}} instead.    We currently do some ugly regexp searching of the code to look for native {{require}} calls. We need to modify that regexp to find native {{import}} calls as well (or even use a real JS parser like babylon).    We should also consider if we can ease use of the hyperloop wrappers by allowing nice ES6 imports of frameworks/packages. i.e. in Android you can require a Java package and access types off of the returned object. Do we need to do anything special to support something like this?  ",Improvement,High,Resolved,"2017-08-02 16:05:29","2017-08-02 16:05:29",13
"The Titanium SDK ","Windows: touchEnabled false not working when in controller","h5. Problem Description:    NOT to confound with what was reported on TIMOB-24328 , where the test case was much simpler (the whole test case UI was all in index.xml).    There seems to be an issue when placing a Ti.UI.Button with touchEnabled = false in a separated controller, and instantiating that controller in another whole different one. When doing this, for some reason, the touchEnabled = false property loses its effect.    h5. Steps to Reproduce:  1) Go to Sample project 2's source code and open index.xml - observe how there's only a Window there (mainContainer)  2) In the same project, go to index.js - observe how there's an instance of testController being added to mainContainer  3) In the same project, go to testController.xml - observe its UI structure: only a View (modal) and a Button (touchEnabledFalseButton) within it.  4) In the same project, go to testController.tss - observe touchEnabledFalseButton's style: touchEnabled property is set to false  5) In the same project, go to testController.js - observe the event listener added to touchEnabledFalseButton, which prints the event object in the console.  6) Run this sample project (can be done in a -T ws-local app)  7) A window with a red button on it will be shown  8) Click the red button  9) Observe how the event object gets printed on every click, despite the fact the button has touchEnabled = false on testController.tss  10) ALSO observe how Ti.UI.View.enabled property is deprecated. Please use touchEnabled. gets printed. - Why would this be printed? The project is NOT using the enabled property ...    h5. Note:  Again, this is a very specific scenario, since in it's been demonstrated the most simple possible scenario (Sample project 1) works fine.    ",Bug,High,Closed,"2017-08-02 07:12:01","2017-08-02 07:12:01",5
"The Titanium SDK ","TiAPI: Android/iOS ApplicationShortcuts parity","{quote}  If your app targets Android 7.1 (API level 25) or higher, you can define shortcuts to specific actions in your app. These shortcuts can be displayed in a supported launcher. Shortcuts let your users quickly start common or recommended tasks within your app.  {quote}    - Expose the {{setDynamicShortcut}} API from the {{ShortcutManager}}    [Documentation|https://developer.android.com/guide/topics/ui/shortcuts.html]","New Feature",Medium,Closed,"2017-08-01 15:49:45","2017-08-01 15:49:45",8
"The Titanium SDK ","Android O: Notifications","*Notification Channels*  {quote}  Android O introduces notification channels to provide a unified system to help users manage notifications. When you target Android O, you must implement one or more notification channels to display notifications to your users. If you don't target Android O, your apps behave the same as they do on Android 7.0 when running on Android O devices.  {quote}  [Documentation|https://developer.android.com/preview/features/notification-channels.html]    *Notification Badges*  {quote}  Android O introduces functionality for displaying notification badges on app icons in supported launchers. Notification badges show notifications associated with one or more notification channels in an app, which the user has not yet dismissed or acted on. Notification badges are also known as notification dots. Users can turn off badges for notification channels or apps from the Settings app.  {quote}    [Documentation|https://developer.android.com/preview/features/notification-badges.html]    *Other Notification Changes*  - Snoozing: users can snooze notifications to reappear at a later time.  - Timeouts: set a timeout when creating a notification  - Settings Text: You can call setSettingsText() to set text to appear when you create a link to your app's notification settings.  - Dismissal: the system now distinguishes whether a notification is dismissed by a user, or removed by an app.  - Background colors: You can now set and enable a background color for a notification.  - Messaging style: Notifications that use the MessagingStyle class now display more content in their collapsed form.    [Documentation|https://developer.android.com/preview/api-overview.html#notifications]",Story,High,Closed,"2017-08-01 08:30:03","2017-08-01 08:30:03",21
"The Titanium SDK ","Windows: touchEnabled: false wont work on Ti.UI.View","h6.Steps to reproduce:  1) Run the sample app project (can be a -T ws-local deploy)  2) A blank screen with two red views will appear (the one on top has touchEnabled = true, the one on the bottom has touchEnabled = false).  3) Click on both, observe the output in the alert (it prints e.source.id).    As the Ti.UI.View on the bottom has touchEnabled = false in tss file, the alert should not print touchEnabledFalseView.",Bug,High,Closed,"2017-08-01 05:41:45","2017-08-01 05:41:45",3
"The Titanium SDK ","Windows: Ti.Network.Cookie isValid() is missing","The method {{isValid()}} in Titanium.Network.Cookie is missing on Windows.    Test Case  {code:js}  var cookie1 = Ti.Network.createCookie({   domain: 'example.com',   name: 'test_cookie',   value: '12',   path: '/'  });    var cookie2 = Ti.Network.createCookie({   name: 'test_cookie',   value: '12',   path: '/'  });    console.log('is cookie valid: ' + cookie1.isValid());  console.log('is cookie valid: ' + cookie2.isValid());  {code}",Improvement,Critical,Closed,"2017-07-31 23:59:23","2017-07-31 23:59:23",5
"The Titanium SDK ","iOS: Xcode created provisioning profiles not working with 6.1.0","I have an App in the Appstore, which I recently created a watch for and I am not able to use the provisioning profiles for the Watch that were created in Xcode. I called Apple and they said they wouldn't delete or change the App IDs and Provisioning profiles that were Automatically created in Xcode. What is the solution to this problem? Is there a workaround?",Bug,Critical,Closed,"2017-06-14 00:04:20","2017-06-14 00:04:20",1
"The Titanium SDK ","(Windows) When SearchBar.showCancel Is used and the X is pressed text is removed but not X","When text is entered in to the search bar and you press X to delete the text the X remains even though the text has been removed.     *Test Steps:*  + Create a titanium project using 6.1.2.v20170727160839  + Add the following code to the {{app.js}}     + Enter text in the search bar  + Press X    *Actual result*  Text dissaperas but the X remains     *Expected result*  Text should disappear as well as the X    *Additional Issue*  When entering text the X only shows after the second character is entered, and only disappears after the hitting backspace again after removing the last character. (This only occurs on  when showCancel: true, with default behaviour issue is not seen)",Bug,Medium,Closed,"2017-07-31 21:39:11","2017-07-31 21:39:11",3
"The Titanium SDK ","Windows: Unable to build a module when using SDK 10.0.15063.0 and VS 2015","h5.Description    When building a module with 10.0.15063 the module build <USER>will error out with the below        Unlike TIMOB-24908 this issue is not resolved by setting a targetsdkversion    h5.Steps to reproduce    # Install SDK 10.0.15063 https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk  # Run {{appc new -t timodule --id com.foo -n myawesomemodule}}  # {{cd myawesomemodule/windows}}  # {{appc run -p windows --build-only}}    h5.Actual    Error above is thrown    h5.Expected    Should be able to build module",Bug,Medium,Closed,"2017-07-27 13:48:04","2017-07-27 13:48:04",5
"The Titanium SDK ","Android: Include Windows gperf binary with SDK","- {{gperf}} is required to compile the Titanium Android SDK and native Android modules  - We currently document that {{gperf}} is required for native module development ([Android Module Quick Start|http://docs.<USER>com/platform/latest/#!/guide/Android_Module_Quick_Start], [Android Module Project|http://docs.<USER>com/platform/latest/#!/guide/Android_Module_Project])  - {{gperf}} is not readily available for Windows    Since {{gperf-3.0.1}} is licensed under GPLv2 we can distribute the Windows binary as long as its source is accessible.    [GNU gperf|https://www.gnu.org/software/gperf/]  [GPLv2 License|https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html]",Improvement,High,Closed,"2017-07-27 12:51:18","2017-07-27 12:51:18",3
"The Titanium SDK ","iOS 11: Build warnings for legacy launch images using Xcode 9","Using Xcode 9 Beta 4 and the latest iOS 11 Beta 4, I noticed a couple of warnings when running the iOS build on the packaged SDK:      Some of the warnings are pretty self-describing and seem to be easy to fix:  {quote}  This launch image only applies to iOS 6.x and prior but the minimum deployment is 7.0 or later.  {quote}  Another one might be related to an issue I discovered earlier, where the Simulator could not save the sim-state and force-quite-relaunches the Sim on every build, causing huge build delays (15+ seconds more):  {quote}  CoreSimulatorService connection became invalid.  Simulator services will no longer be available.  {quote}  We should investigate the warnings, fix the icon-generation for legacy sizes and ensure the generated project works correctly.",Bug,High,Closed,"2017-07-26 20:20:47","2017-07-26 20:20:47",5
"The Titanium SDK ","Build: scons package errors out when node-ios-device is not hoisted to top node_modules","When node-ios-device isn't hosted to the top level node_modules dir the package scripts errors out. It needs to consider that node-ios-device can be under ioslib too.    This is why Jenkins is currently unhappy",Bug,Critical,Closed,"2017-07-26 14:21:54","2017-07-26 14:21:54",2
"The Titanium SDK ","Windows: Remove deprecated property Ti.UI.View.enabled","h5.Description    We deprecated the Ti.UI.View.enabled in 5.4.0 for parity reasons (TIMOB-23275). As it for parity reasons I propose that we remove it completely in 7.0.0 to prevent further usage.    I believe it might be used internally in the SDK (I'm sure I see deprecation warnings when using the click event listener) so we should be careful removing it",Bug,Medium,Closed,"2017-07-26 13:38:06","2017-07-26 13:38:06",3
"The Titanium SDK ","Scons: Cannot build SDK with npm@5.3.0","I just tried scons'ing master and received the following error:    Same happening for Jenkins and it's the reason all PR's against master currently fail. No big deal, but should be investigated :-).",Bug,None,Closed,"2017-07-26 11:53:48","2017-07-26 11:53:48",1
"The Titanium SDK ","Windows: BackgroundColor won't get applied when touchEnabled=false","It seems that if you try setting certain properties like backgroundColor in the controller and NOT in the tss file, these get ignored.    h6.Reproduce Steps:  1) Open example code attacheded in a alloy project.  2) Observe how $.square has no backgroundColor defined (commented out, line 26)  3) In index.js observe how $.square's backgroundColor is being set (to backgroundColorChecked, which is equal to red).  4) Compile and run app (can be done with -T ws-local)  5) When app launches, observe how $.square seems not to show, like it's not there. That's because the backgroundColor set in line 4 of index.js didn't really work  6) Also, observe how $.square.backgroundColorChecked=red and $.square.backgroundColorUnchecked=blue prints in the console, so the reference to the colors actually exists.  7) Go to index.tss and uncomment line #26 out.  8) Compile the app and run it again. Observe how the backgroundColor is indeed applied this time to $.square.  9) Also observe how width and height values set in lines 6 and 7 of index.js seem to be applied to $.square just fine, unlike backgroundColor.    h6.Note  Tested this with Android and iOS and it works there.    h6.Plus  Same EXACT behavior happens with the backgroundImage property of Ti.UI.View AND color property of a Ti.UI.Label.",Bug,Medium,Closed,"2017-07-26 02:50:38","2017-07-26 02:50:38",5
"The Titanium SDK ","Android: Unable to release weak global references","- Sometimes an application will crash when attempting to re-launch after closing.        *STEPS*  1. Create a basic application with {{exitOnClose}}  {code:js}  var win = Ti.UI.createWindow({backgroundColor: 'gray', exitOnClose: true});  win.open();  {code}  2. Launch application  3. Press back to exit the application  4. Quickly re-launch the application by pressing the application icon (you may want to add a shortcut to your homescreen)  5. This may take a few attempts    *EXPECTED*  - The application should not crash    *ACTUAL*  - The application crashes",Bug,Critical,Closed,"2017-07-25 18:07:48","2017-07-25 18:07:48",5
"The Titanium SDK ","Add Windows support to the test script","Windows support needs to be added to the test.js script. We need to consider support a little differently to iOS and Android as it will need to hit both ws-local and wp-emulator targets    At a high level here are the tasks    # Allow a user to pass in a target  ** As we allow a user to pass in multiple platforms we should just outright error if platforms.length >1 and target is defined  ** This target should then be used passed to the build phase  # When no target is defined select a default  ** In keeping with the other probably want to target wp-emulator when not defined  # Make sure it does not break Android and iOS usage  # Review https://github.com/<USER>titanium_mobile_windows/blob/66ccc0a080360d147dd2b59c748a075b87107233/Tools/Scripts/build/test.js to see whether there is any Windows specific logic we need to handle (device id, copying windows SDK across, specific name for each platform we target etc.)","Technical task",None,Closed,"2017-07-25 12:47:02","2017-07-25 12:47:02",5
"The Titanium SDK ","Windows: Allow a user to check the Windows 10 Device Family","h5.Description    This is mainly for the test suites but it seems like something that might be seen as nice from a users standpoint too. (Although in reality on UWP a developer should not be tying features to a device family but using the detecting API contracts https://blogs.windows.com/buildingapps/2015/09/15/dynamically-detecting-features-with-api-contracts-10-by-10/, which maybe we should also have an API for?)    Basically in the tests we have to skip some tests on a device family because they prompt, Geolocation primarily, currently this is skipped on emulator easily by checking the model but a device is harder to check. We could skip both in one go by doing a check like {{Ti.App.Windows.deviceFamily() === 'Windows.Mobile'}}    There is some demo code on how to do this here https://gist.github.com/wagonli/40d8a31bd0d6f0dd7a5d  but note that it looks the DeviceFamily prop isn't documented https://docs.microsoft.com/en-us/uwp/api/windows.system.profile.analyticsinfo      Personally I'm not sure whether this should be in core, maybe in a native module or HL module","New Feature",Low,Resolved,"2017-07-24 11:58:09","2017-07-24 11:58:09",1
"The Titanium SDK ","Windows: Setting button.image to a blob crashes the app","h5.Description    When setting the image property of a button to a blob the app will crash        h5.Steps to reproduce    # Add the above code to an existing app.js  # Build for an existing target    h5.Actual    App crashes    h5.Expected    App should not crash",Bug,High,Closed,"2017-07-24 11:11:39","2017-07-24 11:11:39",5
"The Titanium SDK ","Windows: Asserting the value returned from getPersonByIdentifier crashes an application","h5.Description    When performing a not null assertion on a person value returned from a getPersonByIdentifier call the application will crash, the second assertion where the person does not exist works fine      You can use https://github.com/ewanharris/mocha-test to test this, paste the code below and then click the blue label          h5.Steps to reproduce    # Paste the code above into the mocha-test app  # Run the app to a Windows target  # Tap the blue button    h5.Actual    App crashes    h5.Expected    App should not crash",Bug,Medium,Closed,"2017-07-24 10:53:34","2017-07-24 10:53:34",3
"The Titanium SDK ","Windows: Crash in mocha suite when checking instanceof against a blob","h5.Description     When running the mocha suite, the ti.blob - constructed from image test crashes the application,  it crashes on the {{should(blob).be.an.instanceof(Ti.Blob);}} check    You can use https://github.com/ewanharris/mocha-test to test this, just paste the code from the test suite it and it _should_ work    Interestingly, this is what the .instanceof assertion boils down to {{ Object(this.obj) instanceof constructor}} so I think this crash might happen in the should.js lib somewhere    h5.Steps to reproduce    # Grab the code from the link in environment  # Add to the test app provided at the git repo above  # Build for any Windows target    h5.Actual    App crashes    h5.Expected    App should not crash",Bug,High,Closed,"2017-07-24 10:43:12","2017-07-24 10:43:12",0
"The Titanium SDK ","TiAPI: Refactor screen-of-death","Our screen-of-death is nearly untouched since 6 years, so we spend some time to:  * Include stacktrace  * Refactor layout to be more descriptive  * -Resolve issue on main-thread, where the error-dialog is not shown with {{throwException}}- already done",Bug,None,Closed,"2017-07-23 05:23:25","2017-07-23 05:23:25",3
"The Titanium SDK ","nodejs build script: npm install failing on linux and windows","When trying to install the node packages with {{npm install}} on Linux and Windows. It will stop because it has a {{node-ios-device}} dependency.     The error when installing {{node-ios-device}} is:            SDK 6.0.0 (git 26.06.2016)  Fedora Linux  ",Bug,Critical,Closed,"2016-06-26 20:12:15","2016-06-26 20:12:15",1
"The Titanium SDK ","6_2_X branch not showing up at builds.appcelerator.com","The 6_2_X branch not showing up at builds.<USER>com.",Story,High,Closed,"2017-07-22 03:11:29","2017-07-22 03:11:29",3
"The Titanium SDK ","iOS: Deprecate Ti.UI.iOS.Toolbar, create parity with Android, change Alloy to handle both","As one of the engineering week decisions, we will move the iOS-only {{Ti.UI.iOS.Toolbar}} core-component to the unified {{Ti.UI.Toolbar}} namespace. We will combine it with the new Toolbar exposed by Android (TIMOB-17964). In addition, this ticket should also hold the PR for Alloy to remove the platform-specific handling of the {{<Toolbar>}} tag.",Bug,High,Closed,"2017-07-21 04:28:15","2017-07-21 04:28:15",13
"The Titanium SDK ","iOS: Deprecate Ti.UI.iOS.TabbedBar, move to own module Ti.TabbedBar","As one of the engineering week decisions, we will move the iOS-only {{Ti.UI.iOS. Stepper}} core-component to an own module in 7.0.0 and deprecate the core-component to remove it from the core in 8.0.0.",Bug,High,Closed,"2017-07-21 04:25:45","2017-07-21 04:25:45",13
"The Titanium SDK ","iOS: Deprecate Ti.UI.iOS.Stepper, move to own module Ti.Stepper","As one of the engineering week decisions, we will move the iOS-only {{Ti.UI.iOS. Stepper}} core-component to an own module in 7.0.0 and deprecate the core-component to remove it from the core in 8.0.0.",Bug,High,Open,"2017-07-21 04:23:49","2017-07-21 04:23:49",13
"The Titanium SDK ","iOS: Deprecate Ti.UI.iOS.FeedbackGenerator, move to own module Ti.FeedbackGenerator","As one of the engineering week decisions, we will move the iOS-only {{Ti.UI.iOS.FeedbackGenerator}} core-component to an own module in 7.0.0 and deprecate the core-component to remove it from the core in 8.0.0.",Bug,High,Open,"2017-07-21 04:22:57","2017-07-21 04:22:57",13
"The Titanium SDK ","iOS: Deprecate Ti.UI.iOS.MenuPopup, move to own module Ti.MenuPopup","As one of the engineering week decisions, we will move the iOS-only {{Ti.UI.iOS.MenuPopup}} core-component to an own module in 7.0.0 and deprecate the core-component to remove it from the core in 8.0.0.",Bug,High,Open,"2017-07-21 04:17:22","2017-07-21 04:17:22",13
"The Titanium SDK ","iOS: Deprecate Ti.UI.iOS.DocumentViewer, move to own module Ti.DocumentViewer","As one of the engineering week decisions, we will move the iOS-only {{Ti.UI.iOS.DocumentViewer}} core-component to an own module in 7.0.0 and deprecate the core-component to remove it from the core in 8.0.0.",Bug,High,Open,"2017-07-21 04:14:11","2017-07-21 04:14:11",13
"The Titanium SDK ","iOS: Deprecate Ti.UI.iOS.Animator, move to own module Ti.Animator","As one of the engineering week decisions, we will move the iOS-only {{Ti.UI.iOS.LivePhotoView}} core-component to an own module in 7.0.0 and deprecate the core-component to remove it from the core in 8.0.0. The following API's are part of this compontent and will be deprecated / moved as well:  * Ti.UI.iOS.AnchorAttachmentBehavior  * Ti.UI.iOS.CollisionBehavior  * Ti.UI.iOS.DynamicItemBehavior  * Ti.UI.iOS.GravityBehavior  * Ti.UI.iOS.PushBehavior  * Ti.UI.iOS.SnapBehavior  * Titanium.UI.iOS.ViewAttachmentBehavior",Bug,High,Open,"2017-07-21 04:09:48","2017-07-21 04:09:48",13
"The Titanium SDK ","iOS: Deprecate Ti.UI.iOS.LivePhotoView, move to own module Ti.LivePhotoView","As one of the engineering week decisions, we will move the iOS-only {{Ti.UI.iOS.LivePhotoView}} core-component to an own module in 7.0.0 and deprecate the core-component to remove it from the core in 8.0.0.",Bug,High,Open,"2017-07-21 04:07:46","2017-07-21 04:07:46",13
"The Titanium SDK ","iOS: Deprecate Ti.UI.iOS.BlurView, move to own module Ti.BlurView","As one of the engineering week decisions, we will move the iOS-only {{Ti.UI.iOS.BlurView}} core-component to an own module in 7.0.0 and deprecate the core-component to remove it from the core in 8.0.0",Bug,High,Open,"2017-07-21 04:07:15","2017-07-21 04:07:15",13
"The Titanium SDK ","CLI can't identify 'genymotion' as a -t parameter","I have genymotion installed in my system, but below command doesn't return the genymotion info      {code}  appc ti info -o json -t android,genymotion  {code}    Output should contain the below information:      {code:java}  genymotion: {      path: /Applications/Genymotion.app/Contents/MacOS,      executables: {          genymotion: /Applications/Genymotion.app/Contents/MacOS/genymotion,          player: /Applications/Genymotion.app/Contents/MacOS/player.app/Contents/MacOS/player,          vboxmanage: /usr/local/bin/VBoxManage      },      home: /Users/kondalkolipaka/.Genymobile/Genymotion,      avds: [],      issues: [],      virtualbox: 5.0.12r104815,      tisdk: 5.4.0.v20160321025856  },  {code}    I don't see 'genymotion' option also in the help.    {code:java}     -t, --types <value>    information types to display; you may select one or more  [all, os,                            nodejs, titanium, osx, jdk, haxm, android, iphone, ios]  {code}    But {{appc ti info -o json}} has genymotion info.",Bug,Critical,Closed,"2016-03-30 09:35:25","2016-03-30 09:35:25",1
"The Titanium SDK ","Investigate the skipped tests on Windows","There are around 500 skipped tests on Windows, the total number of tests is only around 1000 so half of them being skipped is not good and they almost definitely do not have ticket associated with them if they're skipped for bugs, I know I have skipped some of these in frustration when merging the suites.    Review the attached skipped list and then run through the tests, reviewing what can be unskipped as it now works, filing tickets as needed.    I don't think we'd be able to achieve a code coverage output so in my opinion we should have a mechanism where we require a percentage of tests to be run to allow us to measure this, while it's not a great metric it is something to aim for and stop the bulk skipping of tests",Sub-task,None,Closed,"2017-07-20 12:45:38","2017-07-20 12:45:38",5
"The Titanium SDK ","Windows: Support XAML style templates","New way to deal with [XAML style templates|https://docs.microsoft.com/en-us/windows/uwp/controls-and-patterns/xaml-styles] by directly editing XAML files in order to get much more flexibility.    Considering the case where developer wants to add define XAML styles to the controls:    {code:xml}  <ResourceDictionary      xmlns=http://schemas.microsoft.com/winfx/2006/xaml/presentation       xmlns:x=http://schemas.microsoft.com/winfx/2006/xaml>        <ResourceDictionary.ThemeDictionaries>          <ResourceDictionary x:Key=Light>              <SolidColorBrush x:Key=ButtonBorderBrush Color=MediumSlateBlue/>              <SolidColorBrush x:Key=ButtonBorderBrushPointerOver Color=Pink/>              <SolidColorBrush x:Key=ButtonBorderBrushPressed Color=Yellow/>          </ResourceDictionary>      </ResourceDictionary.ThemeDictionaries>            <Style x:Key=ButtonStyle TargetType=Button>          <Setter Property=BorderThickness Value=2 />      </Style>    </ResourceDictionary>  {code}    We could implement this as new Titanium Button property like {{Ti.UI.Button.backgroundPointerOver}}, but I think it won't be a good idea to do so because there should be a lot more other properties supported in XAML in various controls. I would think that we want a new way to deal with [XAML style templates|https://docs.microsoft.com/en-us/windows/uwp/controls-and-patterns/xaml-styles] by directly dealing with XAML format to get much more flexibility.    I mean I am thinking of new feature like below.    First, define component visual styles in XAML format:    {code:xml|title=Resource/Styles.xaml}  <ResourceDictionary      xmlns=http://schemas.microsoft.com/winfx/2006/xaml/presentation       xmlns:x=http://schemas.microsoft.com/winfx/2006/xaml>        <ResourceDictionary.ThemeDictionaries>          <ResourceDictionary x:Key=Light>              <SolidColorBrush x:Key=ButtonBorderBrush Color=MediumSlateBlue/>              <SolidColorBrush x:Key=ButtonBorderBrushPointerOver Color=Pink/>              <SolidColorBrush x:Key=ButtonBorderBrushPressed Color=Yellow/>          </ResourceDictionary>      </ResourceDictionary.ThemeDictionaries>            <Style x:Key=ButtonStyle TargetType=Button>          <Setter Property=BorderThickness Value=2 />      </Style>    </ResourceDictionary>{code}    And then apply this style in xaml (Note that the {{Ti.UI.Windows.createStyle}} will be the new feature)    {code:javascript|title=app.js}  var win = Ti.UI.createWindow({ backgroundColor: 'white' });    var button = Ti.UI.createButton({      title: 'BUTTON'  });    var style = Ti.UI.Windows.createStyle({ source: 'ms-appx:///Styles.xaml' });  style.apply(button, 'ButtonStyle');    win.add(button);  win.open();  {code}    By doing this, you are able to define any styles which XAML supports, not only for Buttons but also for all the other components.  ","New Feature",Medium,Closed,"2017-07-20 02:16:58","2017-07-20 02:16:58",8
"The Titanium SDK ","iOS/Android: Add zoomLevel to Ti.UI.WebView","Add the method {{zoomBy}} to Ti.UI.WebView to allow zooming the webpage.    ","New Feature",Critical,Closed,"2017-07-19 08:14:27","2017-07-19 08:14:27",5
"The Titanium SDK ","Android: .remove() TableView object with ImageViews crashes the app.","If I try to remove a TableView that has a TableViewRow with an ImageView the app will crash.  This bug affects sdk 6.1.1GA, I have tried to run this snippet on 6.0.4GA and it works without errors.        ",Bug,Critical,Closed,"2017-07-18 12:48:24","2017-07-18 12:48:24",1
"The Titanium SDK ","Allow babel plugins to be added via config.json","    There are a lot of features that can be added to Alloy by allow babel presets and plugins to be defined in config.json.  Currently, it is somewhat possible to add a preset by pushing them to {{sourceMapper.OPTIONS_OUTPUT.presets}} from inside alloy.jmk.   However, when adding plugins, they are removed because Alloy is overwriting all plugins here:  https://github.com/<USER>alloy/blob/master/Alloy/commands/compile/index.js#L1131-L1136    If instead it used {{_.defaults}} (or even better, a merge), it could preserve any changes to {{sourceMapper.OPTIONS_OUTPUT.plugins}} ",Improvement,High,Open,"2017-07-18 18:46:28","2017-07-18 18:46:28",8
"The Titanium SDK ","Windows: Disable maximize button","h5. Issue Description     Customer need a way to disable the maximize button and to prevent the user to resize the app window. ",Improvement,Medium,Closed,"2017-07-18 20:13:55","2017-07-18 20:13:55",3
"The Titanium SDK ","Windows: Crash when using a SearchBar where the autosuggestions box is oriented above the UI element","h5.Description    When using a SearchBar if the list of suggestions will be oriented *above* (i.e. the searchbar is in the bottom half of the screen) the searchbar then the app will crash when entering a search term.    This occurs when a SearchBar is added to a ListView or TableView    Error is thrown on the clear call here https://github.com/<USER>titanium_mobile_windows/blob/66ccc0a080360d147dd2b59c748a075b87107233/Source/UI/src/SearchBar.cpp#L62        h5.Steps to reproduce    # Add the above to an existing app.js and build for a Windows target  # Enter some text into the searchbar    h5.Actual    App will throw the below error        h5.Expected    App should not throw an error search should function as normal",Bug,Critical,Closed,"2017-07-18 18:06:29","2017-07-18 18:06:29",3
"The Titanium SDK ","Windows: SearchBar should show No Results text if there are no results in a search ","According to the UWP Design and Pattern guidelines for AutoSuggestBox, when there are no results shown there should be a single result shown saying 'No Results' (or something similar), currently we do not display anything, while that behaviour is different to our Android implementation (not sure on iOS), we should adhere to the platforms guidelines    https://docs.microsoft.com/en-us/windows/uwp/controls-and-patterns/auto-suggest-box (see Do's and Don'ts)    ",Improvement,Medium,Closed,"2017-07-18 09:46:09","2017-07-18 09:46:09",3
"The Titanium SDK ","Android: Update to support library 26.0.0","- Update our support library modules to version {{26.0.0}} with Android O release",Improvement,High,Closed,"2017-07-17 23:30:37","2017-07-17 23:30:37",8
"The Titanium SDK ","Windows: Ti.UI.SearchBar's showCancel=false is ignored","h5. Issue Description     The Ti.UI.SearchBar's showCancel=false is not returning the proper value     h5. Steps to reproduce  # Download the sample App https://drive.google.com/file/d/0BwTWo-c2a0b9eFJNTWIwek1tSmM/view?usp=sharing  # Launch the sample app (can be tested deploying with -T ws-local) - a search bar will appear on it.  # Type something on it and see how an X icon appears in the right side of the search bar.    **This works on Android and iOS.",Bug,Medium,Closed,"2017-07-17 21:47:22","2017-07-17 21:47:22",3
"The Titanium SDK ","Windows: Add scrollToTop() to ScrollView","Currently ScrollView has a {{scrollToBottom()}} method but no {{scrollToTop()}}. While this can be achieved with {{scrollTo(0,0)}} the new {{scrollToTop()}} uses FOCUS_UP to scroll to the top position in order to solve nested problems (see: https://stackoverflow.com/a/44046801/5193915)    Example:    {code:js}  var win = Ti.UI.createWindow({backgroundColor: '#fff'});  var view1 = Ti.UI.createView({width:20,height:20,backgroundColor:#f00,top:0});  var view2 = Ti.UI.createView({width:20,height:20,backgroundColor:#f0f,top:800});  var scrollView = Ti.UI.createScrollView({height:Ti.UI.FILL,width:Ti.UI.FILL});  var btn1 = Ti.UI.createButton({title:scrollUp,top: 10,left:0});  var btn2 = Ti.UI.createButton({title:scrollDown,bottom:10,left:0});    btn1.addEventListener(click,function(e){scrollView.scrollToTop()});  btn2.addEventListener(click,function(e){scrollView.scrollToBottom()});    win.add(scrollView);  win.add(btn1);  win.add(btn2);  scrollView.add(view1);  scrollView.add(view2);  win.open();  {code}  ","New Feature",Medium,Closed,"2017-07-16 08:29:08","2017-07-16 08:29:08",5
"The Titanium SDK ","Android - App Crashes on Resume ","When resuming the app from background the app crashes most of the times on device SM-G928G.     To replicate this install the default app when creating a new project (also attached) on the android device.     To trigger the app to go to background go to developer settings and put the option limit background <USER> to at most 1 <USER>.     Open the just installed app, go through multitasking to another app, then again through multitasking go back to the just installed app. The app will now crash.    A log we found around the crash:    ",Bug,Critical,Closed,"2017-07-14 15:23:12","2017-07-14 15:23:12",1
"The Titanium SDK ","Windows: Tooling does not detect winappdeploycmd when only SDK 10.0.15063.0 is installed","h5.Description    Historically the winappdeploycmd exe used for Windows 10 device detection, app installation and such would always be installed 'globally' in {{C:\Program Files (x86)\Windows Kits\10}\bin\x86}}. Since 10.0.15063.0 this appears to be no longer the case and it is packaged with the SDK, at {{C:\Program Files (x86)\Windows Kits\10\bin\10.0.15063.0\x86}}    Our tooling makes the assumption that winappdeploycmd is in this global space, we need to adapt the tooling to inspect an SDK for winappdeploycmd, I'm unsure whether if we detect one we assign it to the overall VS info, overriding one that exists or we keep a winappdeploycmd tied to an SDK.      Posted a question here to see whether this will be the <USER>from here    https://docs.microsoft.com/en-us/windows/uwp/packaging/install-universal-windows-apps-with-the-winappdeploycmd-tool",Bug,High,Closed,"2017-07-14 12:30:39","2017-07-14 12:30:39",5
"The Titanium SDK ","Windows: Unable to place XAML resource in project","Unable to place XAML Resource Dictionary file under Titanium project {{Resources/windows}} folder.    *Steps to reproduce: *    1. Place following file under {{Resources/windows/test.xaml}}    {code:title=Resources/windows/test.xaml}  <ResourceDictionary      xmlns=http://schemas.microsoft.com/winfx/2006/xaml/presentation       xmlns:x=http://schemas.microsoft.com/winfx/2006/xaml>    </ResourceDictionary>    [DEBUG] XamlTypeInfo.Impl.g.cpp  [ERROR] Generated Files\XamlTypeInfo.Impl.g.cpp(9): fatal error C1083: Cannot open include file: 'pch.h': No such file or directory  {code}",Bug,Medium,Closed,"2017-07-14 02:31:21","2017-07-14 02:31:21",3
"The Titanium SDK ","Windowslib: Unable to get product guid","h5.Description    When filing a PR for TIMOB-24683, the unit tests were failing on Jenkins, they passed fine locally. It looked like the script that gets the app identity name to launch the app when installed to device was failing to unzip and then copy the appxmanifest file to the directory which would then cause the wptool launch call to error out due to an invalid guid.    h5.Steps to reproduce    I am clueless as to how to reproduce this. That said to test the change didn't break anything we need to test building and launching to Windows 10 devices and emulator    h5.Actual    Script fails to obtain the guid    h5.Expected    Script should be able to get the guid    ",Bug,Medium,Closed,"2017-07-13 18:48:45","2017-07-13 18:48:45",5
"The Titanium SDK ","Upgrading CLI and SDK to 6.1.1.GA generates errors in appc ti info","While investigating this issue: AC-5069 - we are also hitting a secondary bug / warning message as part of upgrading to 6.1.1.GA (to investigate if the issue is resolved in this version).    Please see the attached screenshots - but it appears that either the compatibility matrix or the `appc ti info` CLI information is incorrect.    Please can you confirm exactly which versions of the Android SDKs are compatible with the latest Titanium / Appc SDK, and why this error is being seen.",Bug,Critical,Closed,"2017-07-05 09:06:25","2017-07-05 09:06:25",0
"The Titanium SDK ","Null Pointer Exceptions caused on Samsung Galaxy devices","I have attached a screenshot of the crash report log we are seeing from Google. Currently receiving thousands of crashes, pretty much entirely isolated to various Samsung Galaxy devices running Android 7.x    This is currently out in production and we are starting to see a trend as more customers are adopting Android N.     Is this issue known? Would upgrading the SDK solve this potentially (i.e. fixes for this problem)? Is it a case of bumping the Android build tools?    ",Bug,Critical,Closed,"2017-07-05 08:37:07","2017-07-05 08:37:07",0
"The Titanium SDK ","Support log formatting","- Log formatting is currently not supported on any platforms  - Our docs suggest our support is equivalent to node.js, which in this case is not true    {code:js}  console.log('%s', 'test'); // test  {code}",Improvement,Low,Open,"2017-07-10 15:51:54","2017-07-10 15:51:54",8
"The Titanium SDK ","Android: Duplicate '%' in log output","- Single {{%}} symbols print out as {{%%}} in log output    {code:js}  console.log('%'); // %%  {code}",Bug,Medium,Closed,"2017-07-10 15:46:28","2017-07-10 15:46:28",2
"The Titanium SDK ","Hyperloop: iOS - Cannot build iOS 11 API's","I am trying to implement the iOS 11 API {{DeviceCheck}} with Hyperloop, but it fails with 2.1.2 / 2.1.3 Beta 1 - The wrappers are simply not generated:  {code:js}  var DCDevice = require('DeviceCheck/DCDevice');    exports.generateToken = function(cb) {   if (!DCDevice.current.isSupported) {    Ti.API.info('iOS 11 DeviceCheck API not supported for this device, skipping ...');    return;   }      DCDevice.current.generateTokenWithCompletionHandler(function(token, error) {    if (error != null) {     cb({ success: false, error: error.localizedDescription });     return;    }        cb({ success: true, token: token });   });  }  {code}","New Feature",High,Closed,"2017-07-10 00:51:36","2017-07-10 00:51:36",1
"The Titanium SDK ","Ability to have 3rd party types as members in UWP module","h5. Description  When referencing a module in a Windows Titanium App whose include export files contain types from a third party library, the App fails to compile since the appropriate references are not added to the TitaniumWindows_Native project.     These references are added to the App package project; they should also be added to the TitaniumWindows_Native project.     Currently, we do have a workaround which is opening the solution in the User/.titanium/vsbuild folder and add those reference manually. At developing time, the time spent doing these manual steps do add up.     h5. other information  Customer tried it using SDK 6.2.0.v20170531081104 and was still unable to build and App directly from the CLI that references their module which contains references to types from 3rd party libraries. Those libraries are indeed included in the App's main executable project but not in the TitaniumWindows_Native one thus, causing the build error.",Improvement,High,Closed,"2017-07-06 20:14:52","2017-07-06 20:14:52",5
"The Titanium SDK ","Windows: Setting height to auto on a listview with many rows breaks scrolling","h5.Description    When setting height to auto on a listview with many rows, the scrolling will break        h5.Steps to reproduce    # Add the above to an existing app.js  # Build for a windows target    h5.Actual    When the height is set to auto scrolling breaks    h5.Expected    When the height is set to auto the scrolling should not break",Bug,High,Closed,"2017-07-06 12:35:24","2017-07-06 12:35:24",5
"The Titanium SDK ","Windows: App fails to install to device if newer VCLibs package exists","h5.Description    When  building to a device currently my build fails with {{A debug application is already installed, please remove existing debug application}} which is not the case. Running winappdeploycmd manually worked so I dug into it and logged the output, the install of VCLibs is failing because I have a newer on the device (I assume this is because I used the device for my VS2017 testing)        h5.Steps to reproduce  *The setup here is kinda difficult*  # Ensure you have VCLibs 14.0.25023.0 on your device (you can do this by building with VS2017  # Build an application to the device using a machine with VS2015    h5.Actual    Build <USER>errors with  {{A debug application is already installed, please remove existing debug application}}    h5.Expected    Build <USER>should either error telling a user to uninstall the VCLibs (not preferable as they didn't but them there, we did), or (preferably) we handle this error by ignoring the failure for VCLibs or only adding when needed (check if they exist before even installing)",Bug,Medium,Closed,"2017-07-05 13:38:26","2017-07-05 13:38:26",5
"The Titanium SDK ","Windows: Setting fullscreen property on window creation has no effect","h5.Description    Setting fullscreen on a window on creation has no effect when the window is opened        h5.Steps to reproduce    # Add the code above to an existing app.js  # Build for Windows  # Tap the button    h5.Actual    Application does not fullscreen when button is clicked    h5.Expected    Application should fullscreen when button is clicked",Bug,Medium,Closed,"2017-07-05 13:30:15","2017-07-05 13:30:15",3
"The Titanium SDK ","Windows: Building an app with hyperloop usage with VS 2017 fails ","h5.Description    Building an app with hyperloop usage will error with the below, it looks like the import no longer resolves correctly as on my machine with VS2017, searching I found it here    {{C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\Microsoft\WindowsXaml\v15.0\Microsoft.Windows.UI.Xaml.CSharp.targets}} , but based off the path I assume this will be different with all of the various versions of VS2017        h5.Steps to reproduce    # Add hyperloop to an existing project  # Add the following code      # Build for windows {{appc run -p windows -T ws-local}}    h5.Actual    Build <USER>errors with the above    h5.Expected     Build <USER>should not error out",Bug,Critical,Closed,"2017-07-03 14:53:38","2017-07-03 14:53:38",5
"The Titanium SDK ","Android: Prevent fireEvent when proxy has been released","- Prevent {{fireEvent}} taking place on a {{null}} proxy    *TEST CASE*  {code:js}  var win = Ti.UI.createWindow(),      a = Ti.UI.createView(),      b = Ti.UI.createView(),      c = Ti.UI.createView(),      row = Ti.UI.createTableViewRow(),      table = Ti.UI.createTableView({data: [row]}),      scrollableView = Ti.UI.createScrollableView({        views: [a, b, c]      }),      i = 0;    row.add(Ti.UI.createImageView());  c.add(table);    setInterval(function() {      scrollableView.currentPage = i++ % 3;  }, 1000);    win.add(scrollableView);  win.open();  {code}",Bug,High,Closed,"2017-07-03 14:26:34","2017-07-03 14:26:34",2
"The Titanium SDK ","Windows: Unable to build a module with VS2017","h5.Description    When building a module on Windows (after the fix for TIMOB-24923 is in) it will error our with the below, this error occurs when building from Visual Studio too        h5.Steps to reproduce    # appc new -t timodule --name myawesomemodule --id com.foo  # appc run -p windows --build-only    h5.Actual    Build errors out with the warning above    h5.Expected    Build should not error out",Bug,Critical,Closed,"2017-07-03 14:25:17","2017-07-03 14:25:17",5
"The Titanium SDK ","Windows: Add support for template.events","- Add support for setting template item events using the {{template.events}} property    *TEST CASE*  {code:js}  var win = Ti.UI.createWindow({ backgroundColor: 'white' }),      list = Ti.UI.createListView({          templates: {              template: {                  events: {                      click: onClick                  },                  childTemplates: [                      {                          type: 'Ti.UI.Label',                          bindId: 'title',                          properties: {                              left: '5dp',                              right: '5dp'                          }                      }                  ]              }          },          defaultItemTemplate: 'template'      }),      section = Ti.UI.createListSection(),      items = [];    function onClick(e) {      alert('CLICK!');  }    for (var i = 0; i < 5; i++) {      items.push({          title: { text: 'TEXT' }      });  }  section.setItems(items);  list.setSections([section]);    win.add(list);  win.open();  {code}",Bug,Medium,Closed,"2017-07-03 12:09:22","2017-07-03 12:09:22",3
"The Titanium SDK ","Android: Unnecessary resource classes are generated when building native modules","- Resource class files from our support modules {{cardview}} and {{appcompat}} are generated when building native modules.  - This prevents adding the modules to an application due to duplicate class files.",Bug,Critical,Closed,"2017-06-30 15:22:21","2017-06-30 15:22:21",5
"The Titanium SDK ","Hyperloops iOS - Allow protocols declared within other classes","I'm trying to use the Braintree SDK with Hyperloop and found an issue while trying to create a protocol bridge.        It happenes because of this:        I'm requiring this file in a controller and the error above pops up when building the project.  I think this issue is happening because the *BTDropInViewControllerDelegate* protocol is not declared in a file with the same name - and I guess that's what's Hyperloop expects.  This protocol is being defined inside the file *BTDropInViewController*.    I'm importing Braintree with Pods.        ",Bug,Critical,Resolved,"2016-09-22 23:22:33","2016-09-22 23:22:33",0
"The Titanium SDK ","iOS: Move Ti.Media.AudioPlayer to AVPlayer internally, remove external library-dependency","Right now, we use the (outdated and unmaintained) iOS library AudioStreamer for our Ti.Media.AudioPlayer API. Nowadays, modern iOS API's help us, especially the {{AVPlayer}} inside {{AVFoundation}}. This will also resolve a number of tickets with a high numbers of watchers:  - TIMOB-19519  - TIMOB-3375    The time-frame should be around SDK release 7.1.0 / 7.2.0 with 100 % backwards-compatibility.    See the [Ti.Media.AudioPlayer|http://docs.<USER>com/platform/latest/#!/api/Titanium.Media.AudioPlayer] docs for more infos.  ",Improvement,High,Closed,"2017-06-29 19:44:04","2017-06-29 19:44:04",8
"The Titanium SDK ","Windows: Get an Error device not found error now and again when building to an Android emulator","When building to an Android emulator on a Windows machine the following error is sometimes shown:        *Steps to reproduce:*  + Create an Alloy project  + Run the application to an Android emulator   + Run the application on the emulator multiple times until the error above is shown  ",Bug,High,Closed,"2017-06-28 17:29:28","2017-06-28 17:29:28",5
"The Titanium SDK ","Windows: Unable to add a ListView with no section to a window on 8.1 emulator","h5.Description    Adding a ListView to a Window with no sections errors out on Windows Phone 8.1 emulator, as of TIMOB-24760 being merged        h5.Steps to reproduce    # Add the above code to an existing app.js and build for Windows 8.1    h5.Actual    App crashes    h5.Expected    App should not crash",Bug,Low,Closed,"2017-06-28 14:08:28","2017-06-28 14:08:28",0
"The Titanium SDK ","Android: touchFeedback not working if borderRadius is set","The new touchFeedback and touchFeedbackColor are awesome but you can't use it when a view has borderRadius set. So is not possible to do a circle with the ripple effect =/  How to reproduce:    {code:js}  var win = Ti.UI.createWindow({backgroundColor: '#bebdda'}),      v = Ti.UI.createView({          width: 140,          height: 140,          backgroundColor: '#becedf',          touchFeedback: true,          touchFeedbackColor: '#7d93ab',          elevation: 20,          borderRadius: 70      });  win.add(v);  win.open();  {code}    Thanks!",Bug,Critical,Closed,"2017-06-28 10:59:38","2017-06-28 10:59:38",3
"The Titanium SDK ","Android: Unable to build to Android 8.0 devices or emulators","Android 8.0 preview is out when trying to build to my device I received the error below.    h4. Steps to reproduce:  # Create the default application {{appc new}}  # Build to an android device running 8.0 {{appc run -p android -T device -l trace}}    h4. Actual          h4. Expected  No error is shown and the build is successful",Bug,High,Closed,"2017-06-27 17:29:02","2017-06-27 17:29:02",5
"The Titanium SDK ","Android: setting view.borderRadius causes backgroundColor alpha to be ignored","The below code loosely simulates how I implemented an overlay tutorial in my app using backgroundColor transparency, set via hex triplets. mainview and label represent app content. containerview is an overlay containing tutorial information, and masking view represents a view that 'darkens' the content until it needs to be highlighted. In the example below, it toggles the highlighting by setting the maskingview backgroundColor  alpha to either 0 or 90% when you click the view.     Expected result is the alpha of the maskingview backgroundColor changes and the mainview content is visible or masked. Works on both Android and iOS using SDK 5.4.0.GA. Works on iOS using SDK 6.1.0.GA, but not Android. Commenting out setting borderRadius on the maskingview (issue is both at create or runtime) solves the problem on Android.    Steps to reproduce: uncomment the borderRadius setter below, build with 5.4.0.GA on Android. Expected result: clicking on view fades or shows the underlying Hello. Rebuild with 6.1.0.GA on Android, clicking on view complete hides the underlying view. Comment out borderRadius setter under 6.1.0.GA, works as expected again.    ",Bug,Critical,Closed,"2017-06-24 04:59:02","2017-06-24 04:59:02",3
"The Titanium SDK ","Windows: Ti.App.Properties.get* should all be able to return null","h5.Description    Following on from TIMOB-24838, all Ti.App.Properties.get* functions should be able to return null,        {code: title=Android and iOS}  [INFO]  null  [INFO]  null  [INFO]  null  [INFO]  null  [INFO]  null  [INFO]  null      h5.Steps to reproduce    # Add the above code to an existing app.js and build for Windows    h5.Actual    Output is as shown under the Windows header above    h5.Expected    Output should match Android and iOS",Bug,Medium,Closed,"2017-06-26 15:20:38","2017-06-26 15:20:38",3
"The Titanium SDK ","Windows: onreadystatechange should not be called on the UI thread","h5.Description    **The code below is a boiled down version of how LiveView makes http requests so it is crucial for this to work**    The following code below appears to freeze the application, I believe this is because HTTPClient is running things such as onreadystatechange on the UI thread which is being blocked by the while loop, the following diff appears to fix the issue but I am not sure whether the changes were required https://gist.github.com/ewanharris/f45cf4347759247a3965e02161342fde        h5.Steps to reproduce    # Add the above code to an existing app.js and build for Windows  # Click the HTTP GET button    h5.Actual    App appears to freeze (button stays in clicked position), failed alert appears    h5.Expected    App should not appear to freeze, no failed alert should show",Bug,High,Closed,"2017-06-26 14:15:52","2017-06-26 14:15:52",5
"The Titanium SDK ","CLI: ti setup check when run through appc cli returns incorrect node modules","h5.Description    When running {{appc ti setup check}}, the CLI dependencies listed in the output are for the appc cli and not the titanium cli, at first glance it appears to be due to the use of cwd in the lookup of the package.json [here|https://github.com/<USER>titanium/blob/b871ba474bc6f604f2681a2d850156503031c36b/lib/commands/setup.js#L669]    {code: title=Titanium CLI}  Titanium CLI Dependencies    √  adm-zip            up-to-date (v0.4.7)    √  async              up-to-date (v2.1.2)    √  colors             up-to-date (v1.1.2)    √  fields             up-to-date (v0.1.24)    √  fs-extra           up-to-date (v2.1.2)    √  humanize           up-to-date (v0.0.9)    √  longjohn           up-to-date (v0.2.11)    √  moment             up-to-date (v2.16.0)    √  node-appc          up-to-date (v0.2.41)    √  request            up-to-date (v2.79.0)    √  semver             up-to-date (v5.3.0)    √  sprintf            up-to-date (v0.1.5)    √  temp               up-to-date (v0.8.3)    √  winston            up-to-date (v1.1.2)        h5.Steps to reproduce    # Run {{ti setup check}}  # Run {{appc ti setup check}}    h5.Actual    Titanium CLI Dependencies is different between the two    h5.Expected    Titanium CLI Dependencies should be the same between the two",Bug,None,Resolved,"2017-06-26 10:36:50","2017-06-26 10:36:50",3
"The Titanium SDK ","iOS: Xcode 9 does not store Simulator state when having multiple installations, forces new Simulator launch at every build","When using the iOS 11 Simulator on Xcode 9, a new Simulator instance is created on every build. It does not cache the current state and instead kill the sim to launch it again. It takes around 15 seconds more than in a recurring build (e.g. Xcode 8).",Bug,Medium,Resolved,"2017-06-23 22:12:47","2017-06-23 22:12:47",2
"The Titanium SDK ","Update GCM documentation to mention FCM (Firebase Cloud Messaging)","Our GCM push dispatcher supports FCM (Firebase Cloud Messaging) which needs to be updated  and mentioned in the documentation",Story,Medium,Closed,"2017-06-23 19:27:32","2017-06-23 19:27:32",3
"The Titanium SDK ","Windows: Incorrect child view size when parent view has border","When parent {{View}} has border, child Views calculates its position and size based on parent border.        *Actual*   !actual.png|thumbnail!     *Expected (iOS)*     !expected.png|thumbnail!   ",Bug,Medium,Closed,"2017-06-23 04:06:19","2017-06-23 04:06:19",5
"The Titanium SDK ","Android: Label ellipsize modes START and MIDDLE don't work if autoLink is true","*Summary:*  When a Label is set up to autoLink its text which contains at least 1 URL, then ellipsize modes START and MIDDLE are not honored. The label will use ellipsize mode END instead.    *Code Example:*        *Result:*  Ellipsis are shown at the end instead of the start or middle.    *Reason:*  Android's Java TextView does not support displaying START or MIDDLE ellipsis while a MovementMethod (such as LinkMovementMethod in this case) is applied to it. Our existing TiUILabel.java code works-around this problem and applies an END ellipsis in this case instead.    *Suggested Solution:*  Android 5.0 and above supports URL taps without a MovementMethod, but Android 4.0 does not (I'm not sure which OS versions in the middle do support it). This is because Google's TextView.java code in its onTouchEvent() method handles URL taps for newer OS versions (see their code on github). So, the recommended solution here is to not set a MovementMethod in TiUILabel.java and for us to replicate what Google does in their TextView.onTouchEvent() in our TiUILabel code so that we can support URL taps on all Android OS versions.",Bug,Low,Closed,"2017-06-23 00:05:58","2017-06-23 00:05:58",3
"The Titanium SDK ","[Android] Unable to destroy activity when exiting application has a TableView","When Pressing the back button on an android application, the application crashes and displays the following error message:      *Steps to reproduce*  1. Create a new app.  2. Replace the contents of the app's app.js with the code below.  3. Run the app.            ",Bug,High,Closed,"2017-06-21 22:00:05","2017-06-21 22:00:05",2
"The Titanium SDK ","iOS: Add Support for Document Picker","Have access to external files via iOS native document picker.    https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/DocumentPickerProgrammingGuide/Introduction/Introduction.html","New Feature",Critical,Closed,"2017-06-08 07:53:57","2017-06-08 07:53:57",5
"The Titanium SDK ","Android: Reopening a closed window causes all components in the window to be lost","Environment: 6.1.1.v20170620103414   Device: OnePlus One (A0001)  Affected version: 6.1.1.v20170620103414    contents of window are lost whilst closing and reopening windows.    Related to: https://jira.<USER>org/browse/TIMOB-24839    Looks like the Proxy object it released even though there is a JS reference to it.    When closing the window while retaining the object, the window should just be taken out of the user's sight and brought back on re-open.    For correct behaviour we can refer to 6.0.4.GA    {code:js}  var a = Ti.UI.createWindow({backgroundColor: 'blue', title: 'Blue'}),   b = Ti.UI.createWindow({backgroundColor: 'red', title: 'Red'}),   lbl = Ti.UI.createLabel({text: 'THIS SHOULD BE VISIBLE!'});    a.addEventListener('click', function() {   b.open();   a.close();  });  b.addEventListener('click', function() {   a.open();   b.close();  });    a.add(lbl);  a.open();  {code}",Bug,Critical,Closed,"2017-06-21 04:20:03","2017-06-21 04:20:03",1
"The Titanium SDK ","Windows: ShowCamera should not write image to photoGallery by default","h5.Description    Currently when using Ti.Media.showCamera, the photo will be saved to the users photo gallery by default, regardless of the saveToPhotoGallery setting. By default the file should not be saved to the photo gallery        h5.Steps to reproduce    # Add the code above to an existing app.js  # Build for Windows  # Tap the show camera button and take a photo  # Add the following to your tiapp under the windows section    5. Rebuild and repeat the steps    h5.Actual    Without the capabilities, after taking the photo  the app will throw an access denied in the alert.    With the capabilities a photo will be added to the window, and to the devices photo gallery    h5.Expected    A photo should be added in both cases, neither should add the photo to the photo gallery",Bug,Medium,Closed,"2017-06-21 11:40:17","2017-06-21 11:40:17",3
"The Titanium SDK ","Android: Duplicate build steps during module builds","The 6_1_X branch currently has the {{processResources}} step twice for module builds and the master branch has the {{verifyBuildArch}} step twice. This won't affect the build result but is obviously unnecessary.    *Steps to reproduce the behavior*  # Run an android module build    *Actual behavior*  There are duplicate build steps, indicated by the following logs that appear twice during the build:  master: _Verifying build architectures_  6_1_X: _Processing Android module resources and assets_    *Expected behavior*  Each of those steps should only appear once during the module build.",Bug,High,Closed,"2017-06-21 10:48:30","2017-06-21 10:48:30",1
"The Titanium SDK ","Android: Setting a TextField's padding resets its alignment to left/center","*Summary:*  Setting the padding on a TextField wrongly resets its horizontal textAlign and verticalAlign properties to left and center respectively.    *Steps to reproduce:*  # Build and run the below code on Android.  # Tap the Set Padding button.  # Notice that the text alignment of the 3 fields change to left/center.        *Expected Result:*  Configured alignment should not change.    *Work-Around:*  Developers can work-around this issue by setting the textAlignment and verticalAlignment properties after setting the padding property.    *Cause:*  The Java TiUIText.setTextPadding() method is resetting the field's gravity to CENTER_VERTICAL when it shouldn't.  https://github.com/<USER>titanium_mobile/blob/master/android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUIText.java#L233  ",Bug,Medium,Closed,"2017-06-20 21:56:27","2017-06-20 21:56:27",3
"The Titanium SDK ","Windows: TableView.filterAttribute does not work","When searching in a TableView, the results are not displayed correctly if the tableviewrow does not have a title but is just made up of child elements, all that is shown is grey empty rows        h5.Steps to reproduce    # Add the above code to an existing app.js  # Build for Windows  # Search for something, (the search values will be numbers)    h5.Actual    Empty grey rows are shown in the search dropdown    h5.Expected    If possible the search dropdown rows should reflect the tableview rows, similar to iOS",Bug,High,Closed,"2017-06-20 15:24:00","2017-06-20 15:24:00",5
"The Titanium SDK ","Hyperloop: iOS - CocoaPods build error with Xcode 8.3.3 and iOS 10.3.1","*Steps to reproduce the behavior*  # Make sure Xcode 8.3.3 is selected  # Run https://github.com/<USER>hyperloop-examples on simulator    *Actual behavior*  The build fails with the following error      *Expected behavior*  The app builds without issues",Bug,High,Closed,"2017-06-20 14:46:41","2017-06-20 14:46:41",1
"The Titanium SDK ","Windows: Setting data before seperatorColor  on TableView errors out","h5.Description    Setting data before seperatorColor on a tableview causes the app to error out        h5.Steps to reproduce    # Add the above to an existing app.js  # Build for a windows target    h5.Actual    Application errors out, swapping the order of data and separatorColor prevents this    h5.Expected    Application should not error out",Bug,High,Closed,"2017-06-20 13:50:35","2017-06-20 13:50:35",5
"The Titanium SDK ","Android: NullPointerException on TiCompositeLayout","I'm getting occasional (1-2 per day) java.lang.NullPointerException errors in org.<USER>titanium.view.TiCompositeLayout from my users. How do I track this down. The only information I get from the users is that the application crashes. The google Play console reports:  ",Bug,Critical,Closed,"2017-06-19 23:27:30","2017-06-19 23:27:30",8
"The Titanium SDK ","Windows: TableViewRow defaults to horizontal layout","TableViewRow defaults to horizontal on Windows, this is evidenced by the below code where the labels are added next to the last label added rather than at the right hand side of the TableViewRow, and row.layout logging horizontal        h5.Steps to reproduce      h5.Steps to reproduce    # Add the above to an existing app.js  # Build for a windows target  # Click the button    h5.Actual    Label is added to the right of the last Label    h5.Expected    Labels should be added at the far end of the TableViewRow ",Bug,Medium,Closed,"2017-06-20 11:40:37","2017-06-20 11:40:37",5
"The Titanium SDK ","Windows: TableViewRow title should not show if the row has a child element","When setting title on a TableViewRow, if the row also has an element added to it then the title should not show, http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TableViewRow-property-title        h5.Steps to reproduce    # Add the above to an existing app.js  # Build for a windows target    h5.Actual    Row shows {{I am tableviewrow text I am labeltext}}    h5.Expected    Row should only show{{I am Label text}}",Bug,Medium,Closed,"2017-06-20 10:45:42","2017-06-20 10:45:42",0
"The Titanium SDK ","Windows: Implement bubbleParent property","When using the click event on a tableview, if the UI element clicked is a child of the tableview then the click event will not be fired        h5.Steps to reproduce    # Add the above to an existing app.js  # Build for a windows target  # Click the red button    h5.Actual    Click event is not fired    h5.Expected    Based off other platforms, click even should be fired",Improvement,Medium,Closed,"2017-06-20 10:25:48","2017-06-20 10:25:48",13
"The Titanium SDK ","Windows: Update module apiversion in manifest","The {{apiversion}} in module manifest template needs to be updated due to TIMOB-24786. It goes to {{3}}.   ",Improvement,Medium,Closed,"2017-06-20 02:26:22","2017-06-20 02:26:22",1
"The Titanium SDK ","Android: Deprecate Label wordWrap property (it's not needed)","*Summary:*  The {{Ti.UI.Label}} wordWrap property is Android only (ie: not portable). When set {{false}}, newline {{'\n'}} characters are ignored and the label is put into single-line mode.    This property is unnecessary and should be ignored/deprecated.    *Reason 1:*  If you want newline {{'\n'}} characters to be ignored, then you should remove them from the string yourself before applying them to the label. For example:      *Reason 2:*  If you want to limit a label's text to 1 line, then you should set the maxLines property to 1. This property is supported on all platforms and will show ellipsis (enabled by default) if the text does not fit within the label. It also honors newlines characters too and would show ellipsis where the line break occurs.      *Reason 3:*  Setting a width on a label implies a wrapping width already, making the wordWrap property redundant. And if you don't want to word wrap (and honor newlines), then you can set the label's width to {{Ti.UI.SIZE}} (the default setting) and put it into a horizontal {{ScrollView}}.  ",Improvement,Medium,Closed,"2017-06-19 19:44:58","2017-06-19 19:44:58",5
"The Titanium SDK ","Hyperloop: iOS - Error building project containing Aisle411 library","h5. description  When adding an iOS library to Titanium project using Hyperloop, I am getting the following compile-time error:      Hyperloop is generating the following files:    /hyperloop/ios/js/mapbundle/mapbundle.js  /hyperloop/ios/js/mapbundle/mapbundleparser.js  /hyperloop/ios/js/mapbundle/mapconroller.js    There is only one library that is imported (along with headers):  libMapSDK.a  Code is using:       Something is triggering it to look for 'MapController/MapController.js'    When the build fails, there is a file:  /hyperloop/ios/js/mapcontroller/mapconroller.m    h5. copy of project  [code sample|https://axwaysoftware-my.sharepoint.com/personal/<USER>axway_com/_layouts/15/guestaccess.aspx?guestaccesstoken=te41EupDaFiBN30%2b242yoNELLLvYniZn2yDwrTzInZo%3d&docid=2_125060abcaf404087bcef581c58453093&rev=1]",Bug,High,Closed,"2017-06-19 19:41:42","2017-06-19 19:41:42",21
"The Titanium SDK ","Android: ListView items with border would not render correctly when scrolling","- Sometimes items with {{borderWidth}} would not render correctly when scrolling fast down a ListView    {code:js}  var win = Ti.UI.createWindow({backgroundColor: 'gray'}),      list = Ti.UI.createListView({          templates: {              template: {                  childTemplates: [                      {                          type: 'Ti.UI.View',                          bindId: 'item',                          properties: {                              top: '5dp', bottom: '5dp',                              width: '200dp', height: '50dp',                              borderWidth: '8dp',                              backgroundColor: 'green'                          }                      }                  ]              }          },          defaultItemTemplate: 'template'      }),      section = Ti.UI.createListSection(),      items = [];    for (var i = 0; i < 24; i++) {      var colour = i % 2 ? 'green' : 'yellow';      items.push({          item: {              backgroundColor: colour,              borderColor: colour          }      });  }    section.setItems(items);  list.setSections([section]);    win.add(list);  win.open();  {code}",Bug,High,Closed,"2017-06-19 19:20:02","2017-06-19 19:20:02",5
"The Titanium SDK ","Windows: ListView template with left and right defined causes crash","- Creating a template View with {{left}} and {{right}} properties defined causes a crash when more than two items are added to the list    {code:js}  var win = Ti.UI.createWindow({ backgroundColor: 'white' }),      list = Ti.UI.createListView({          templates: {              template: {                  childTemplates: [                      {                          type: 'Ti.UI.Label',                          bindId: 'title',                          properties: {                              left: '5dp',                              right: '5dp'                          }                      }                  ]              }          },          defaultItemTemplate: 'template'      }),      section = Ti.UI.createListSection(),      items = [];    for (var i = 0; i < 3; i++) {      items.push({          title: { text: 'TEXT' }      });  }  section.setItems(items);  list.setSections([section]);    win.add(list);  win.open();  {code}",Bug,High,Closed,"2017-06-19 11:57:10","2017-06-19 11:57:10",5
"The Titanium SDK ","Windows: borderRadius does not work with text values","- Defining a {{borderRadius}} with a text value such as {{3dp}} causes an {{unexpected exception}}    {code:js}  var win = Ti.UI.createWindow(),      lbl = Ti.UI.createLabel({          text: 'TEST',          borderRadius: '3dp', // this causes a crash          borderWidth: '1dp'      });    win.add(lbl);  win.open();  {code}",Bug,High,Closed,"2017-06-19 11:29:35","2017-06-19 11:29:35",3
"The Titanium SDK ","Hyperloop: Android - Cannot use Google Play Services 11.x","I am trying to use Hyperloop to implement the brand new reCAPTCHA Android library for Titanium. It used the Play-Services 11.0.1 which were just released, the whole project including the module and required AAR files can be found [here|https://github.com/hansemannn/titanium-recaptcha].    When building the project, the metabase generation fails with this error:  {code:bash}  [TRACE] [Hyperloop] JS Wrapper for class com.google.android.gms.common.ConnectionResult created...  [TRACE] [Hyperloop] JS Wrapper for class com.google.android.gms.common.GoogleApiAvailability created...  [TRACE] [Hyperloop] JS Wrapper for class com.google.android.gms.common.api.Api created...  [TRACE] [Hyperloop] JS Wrapper for class com.google.android.gms.common.api.Api$ApiOptions created...  [TRACE] [Hyperloop] JS Wrapper for class com.google.android.gms.common.api.Api$ApiOptions$HasOptions created...  [TRACE] [Hyperloop] JS Wrapper for class com.google.android.gms.common.api.Api$ApiOptions$NoOptions created...  [TRACE] [Hyperloop] JS Wrapper for class com.google.android.gms.common.api.Api$ApiOptions$NotRequiredOptions created...  [TRACE] [Hyperloop] JS Wrapper for class com.google.android.gms.common.api.Api$ApiOptions$Optional created...    /Users/<USER>Library/Application Support/Titanium/plugins/hyperloop/2.1.1/node_modules/async/lib/async.js:319                      iterator(obj[key], key, only_once(function (err) {                      ^  TypeError: packageArray.push is not a function      at /Users/<USER>Library/Application Support/Titanium/plugins/hyperloop/2.1.1/hooks/android/metabase/generate.js:198:16      at /Users/<USER>Library/Application Support/Titanium/plugins/hyperloop/2.1.1/node_modules/async/lib/async.js:181:20      at replenish (/Users/<USER>Library/Application Support/Titanium/plugins/hyperloop/2.1.1/node_modules/async/lib/async.js:319:21)      at /Users/<USER>Library/Application Support/Titanium/plugins/hyperloop/2.1.1/node_modules/async/lib/async.js:326:29      at /Users/<USER>Library/Application Support/Titanium/plugins/hyperloop/2.1.1/node_modules/async/lib/async.js:44:16      at /Users/<USER>Library/Application Support/Titanium/plugins/hyperloop/2.1.1/hooks/android/metabase/generate.js:215:5      at /Users/<USER>Library/Application Support/Titanium/plugins/hyperloop/2.1.1/node_modules/fs-extra/node_modules/graceful-fs/graceful-fs.js:99:16      at /Users/<USER>Library/Application Support/Titanium/plugins/hyperloop/2.1.1/node_modules/fs-extra/node_modules/graceful-fs/graceful-fs.js:43:10      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/6.1.0.GA/node_modules/graceful-fs/graceful-fs.js:43:10      at FSReqWrap.oncomplete (fs.js:123:15)  {code}",Bug,High,Closed,"2017-06-17 18:10:29","2017-06-17 18:10:29",1
"The Titanium SDK ","Android: Setting opacity property using the view's object after creation does not work","*This is a regression. Works fine with SDK 6.0.4.GA. Does not work from 6.1.0.GA onwards.*    h5. Steps to reproduce:  1. Use the code below in your app.js.    2. Run on android device/emulator.  3. Tap on the blue view.    h5.Actual results:  1. The {{opacity}} of the view does not change.  2. I see that if the {{borderRadius}}, {{borderWith}} or the {{borderColor}} property is set during creation then it works fine.    h5.Expected results:  1. Clicking on the blue view should change the {{opacity}} to {{0.5}}.",Bug,Medium,Closed,"2017-06-16 21:24:42","2017-06-16 21:24:42",3
"The Titanium SDK ","Windows: Calling setData on a tableview that already has data errors out","h5.Description    *This is a regression from 6.0.4.GA to 6.1.0.GA*    When calling setData on a tableview that already has data, the app will crash    {code:js}  var win = Ti.UI.createWindow({layout:'vertical'});  var button = Ti.UI.createButton({title:'Add'});  var tableData = [{ title: 'Apples' }, { title: 'Bananas' }, { title: 'Carrots' }, { title: 'Potatoes' }];  var secondData = [{ title: 'Apples' }, { title: 'Bananas' }, { title: 'Carrots' }, { title: 'Potatoes' }];  var table = Ti.UI.createTableView({      data: tableData  });  button.addEventListener('click', function () {      table.setData(secondData);  });  win.add(button);  win.add(table);  win.open();  {code}    h5.Steps to reproduce    # Add the above code to an existing app.js  # Build for windows  # Click the button    h5.Actual    App crashes    h5.Expected    App should not crash",Bug,High,Closed,"2017-06-16 15:06:25","2017-06-16 15:06:25",3
"The Titanium SDK ","Android: Reopening a closed window crashes the app","Environment: 6.1.1.v20170615113917 Android 7.1.2 Device: OnePlus One (A0001)     Affected version 6.1.0    `  var egWindow = Ti.UI.createWindow({    width: Ti.UI.FILL,    height: Ti.UI.FILL,    backgroundColor: 'red'  });    $.addListener($.button, 'click', function(){    egWindow.open();  });  `    once the window is open, click the back button to close the window, and click the window again to open the window and the app crashes. This didn't use to be the case in 6.0.4.    Crash Log: https://s3-ap-southeast-1.amazonaws.com/uploads-ap.hipchat.com/56929/750866/TQ8ifcaui4kpuoU/Crash_Log.txt  ",Bug,Critical,Closed,"2017-06-16 03:50:20","2017-06-16 03:50:20",5
"The Titanium SDK ","Windows: Ti.App.Properties getList and getObject don't work properly when we set a default value.","h6.Reproduce  1. Run the following code in a default project.    2. It will return the following error       h6.Note  1. On Android and iOS it works properly  2. If we set List or Object first by ourself, not default one. It works well.  3. If try to use console.log('Hello3' + Ti.App.Properties.getList('User')); and the object does not exist.",Bug,High,Closed,"2017-06-16 00:17:32","2017-06-16 00:17:32",5
"The Titanium SDK ","Windows: Unable to call updateRow with an already existing row","h5.Description    Calling updateRow with a row that already exists in the tableview freezes the app        h5.Steps to reproduce    # Add the above to an existing app.js  # Build for a windows target    h5.Actual    App freezes    h5.Expected    Unsure, adding a UI element twice usually causes an error on Windows, could we pull properties from the existing one and create a new one based from that?",Bug,High,Closed,"2017-06-15 18:05:09","2017-06-15 18:05:09",5
"The Titanium SDK ","APM logHandledException causes runtime error on android","h5. Issue Description     When calling logHandledException on the apm module a runtime error occurs.    In the attached sample project, click on Hello, World and the runtime error will occur.",Bug,None,Closed,"2017-06-15 17:50:31","2017-06-15 17:50:31",1
"The Titanium SDK ","Android: Duplicate resource error with multiple app_name definitions","h5.Issue Description       When compiling an Titanium Hyperloop project for Android, I am getting the following error:        It seems that Hyperloop is generating a values.xml file for the library:  venuekit.aar  which defines an app_name property.    Is there a way to use the library as Titanium already defines app_name property  in strings.xml based on the value from Tiapp.xml?    h5. Steps to reproduce    # Download the project https://drive.google.com/file/d/0BwTWo-c2a0b9ellLN3lYbHNuMUU/view?usp=sharing  # Run ",Bug,High,Closed,"2017-06-15 17:16:03","2017-06-15 17:16:03",2
"The Titanium SDK ","Windows: Setting height to auto on a tableview with many rows breaks scrolling","h5.Description    When setting height to auto on a tableview with many rows, the scrolling will break        h5.Steps to reproduce    # Add the above to an existing app.js  # Build for a windows target    h5.Actual    When the height is set to auto scrolling breaks    h5.Expected    When the height is set to auto the scrolling should not break",Bug,High,Closed,"2017-06-15 17:00:45","2017-06-15 17:00:45",5
"The Titanium SDK ","Windows: Unable to set a footerView or headerView on a TableView after data has been set","h5.Description    Using the code below, when adding a footerView or headerView to a TableView after the rows data has been set they will not show        h5.Steps to reproduce    # Add the above to an existing app.js  # Build for a windows target    h5.Actual    View is not added    h5.Expected    View should be added",Bug,High,Closed,"2017-06-15 16:31:30","2017-06-15 16:31:30",5
"The Titanium SDK ","Windows: Layout does not seem to consider left and right properties","h5.Description    In the code below, when setting the left or right property on the label, this does not seem to be taken into consideration by the layout engine and the label text will therefore overflow the edges of the screen, playing with the text property and the left and right properties demonstrates this        h5.Steps to reproduce    # Add the above to an existing app.js  # Build for a windows target    h5.Actual    Left and right are not taken into consideration    h5.Expected    Left and right should be taken into consideration when laying them out",Bug,High,Closed,"2017-06-15 15:56:17","2017-06-15 15:56:17",5
"The Titanium SDK ","iOS: Cache module after the first require() call (regression to 5.x)","After adding NodeJS style require we have a regression with huge performance issue. Previously all modules were required() only once. Now every module including Alloy models, controllers, and widgets are looking for a lot of places on each require call.      simple replace of this code in KrollBridge.m    {code:objc}  else if ([path hasPrefix:@/]) {    module = [self loadAsFileOrDirectory:[[path substringFromIndex:1] stringByStandardizingPath] withContext:context];    if (module) {      return module;    }  }      makes an application ten times more responsive in case you have a lot Alloy.createModel or Alloy.createController.    and rid out logs like:  ",Bug,Critical,Closed,"2017-06-14 00:56:31","2017-06-14 00:56:31",8
"The Titanium SDK ","Hyperloop: Android - Slow Compile-time, too many JS-wrappers generated","When compiling an Android Hyperloop project it takes a long time to compile a project.  {quote}  [INFO]  Processing JavaScript files  {quote}    Takes a very long time (minutes!) and results in:  {quote}  [INFO]  Encrypting JavaScript files: /home/miga/.titanium/mobilesdk/linux/6.1.0.GA/android/titanium_prep.linux64 com.miga.calendarview /home/miga/dev/titanium/hyper.cal/build/android/assets alloy/CFG.js app.js alloy/backbone.js alloy/constants.js alloy/controllers/BaseController.js alloy/controllers/index.js alloy/styles/index.js alloy/sync/localStorage.js alloy/sync/properties.js alloy/sync/sql.js alloy/underscore.js alloy/widget.js alloy.js calendar-android.js hyperloop/android.accounts.Account.js hyperloop/android.accounts.js hyperloop/android.animation.Animator$AnimatorListener.js hyperloop/android.animation.Animator$AnimatorPauseListener.js hyperloop/android.animation.Animator.js hyperloop/android.animation.LayoutTransition$TransitionListener.js hyperloop/android.animation.LayoutTransition.js hyperloop/android.animation.StateListAnimator.js hyperloop/android.animation.TimeInterpolator.js hyperloop/android.animation.TypeEvaluator.js hyperloop/android.animation.ValueAnimator$AnimatorUpdateListener.js hyperloop/android.animation.ValueAnimator.js hyperloop/android.animation.js hyperloop/android.app.ActionBar$LayoutParams.js hyperloop/android.app.ActionBar$OnMenuVisibilityListener.js hyperloop/android.app.ActionBar$OnNavigationListener.js hyperloop/android.app.ActionBar$Tab.js hyperloop/android.app.ActionBar$TabListener.js hyperloop/android.app.ActionBar.js hyperloop/android.app.Activity.js hyperloop/android.app.ActivityManager$TaskDescription.js hyperloop/android.app.ActivityManager.js hyperloop/android.app.Application$ActivityLifecycleCallbacks.js hyperloop/android.app.Application$OnProvideAssistDataListener.js hyperloop/android.app.Application.js hyperloop/android.app.Dialog.js hyperloop/android.app.Fragment$InstantiationException.js hyperloop/android.app.Fragment$SavedState.js hyperloop/android.app.Fragment.js hyperloop/android.app.FragmentManager$BackStackEntry.js hyperloop/android.app.FragmentManager$OnBackStackChangedListener.js hyperloop/android.app.FragmentManager.js hyperloop/android.app.FragmentTransaction.js hyperloop/android.app.LoaderManager$LoaderCallbacks.js hyperloop/android.app.LoaderManager.js hyperloop/android.app.PendingIntent$CanceledException.js hyperloop/android.app.PendingIntent$OnFinished.js hyperloop/android.app.PendingIntent.js hyperloop/android.app.SharedElementCallback$OnSharedElementsReadyListener.js hyperloop/android.app.SharedElementCallback.js hyperloop/android.app.TaskStackBuilder.js hyperloop/android.app.VoiceInteractor$AbortVoiceRequest.js hyperloop/android.app.VoiceInteractor$CommandRequest.js hyperloop/android.app.VoiceInteractor$CompleteVoiceRequest.js hyperloop/android.app.VoiceInteractor$ConfirmationRequest.js hyperloop/android.app.VoiceInteractor$PickOptionRequest$Option.js hyperloop/android.app.VoiceInteractor$PickOptionRequest.js hyperloop/android.app.VoiceInteractor$Prompt.js hyperloop/android.app.VoiceInteractor$Request.js hyperloop/android.app.VoiceInteractor.js hyperloop/android.app.assist.AssistContent.js hyperloop/android.app.assist.js hyperloop/android.app.js hyperloop/android.content.BroadcastReceiver$PendingResult.js hyperloop/android.content.BroadcastReceiver.js hyperloop/android.content.ClipData$Item.js hyperloop/android.content.ClipData.js hyperloop/android.content.ClipDescription.js hyperloop/android.content.ComponentCallbacks.js hyperloop/android.content.ComponentName.js hyperloop/android.content.ContentProvider$PipeDataWriter.js hyperloop/android.content.ContentProvider.js hyperloop/android.content.ContentProviderClient.js hyperloop/android.content.ContentResolver.js hyperloop/android.content.ContentValues.js hyperloop/android.content.Context.js hyperloop/android.content.ContextWrapper.js hyperloop/android.content.DialogInterface$OnCancelListener.js hyperloop/android.content.DialogInterface$OnClickListener.js hyperloop/android.content.DialogInterface$OnDismissListener.js hyperloop/android.content.DialogInterface$OnKeyListener.js hyperloop/android.content.DialogInterface$OnMultiChoiceClickListener.js hyperloop/android.content.DialogInterface$OnShowListener.js hyperloop/android.content.DialogInterface.js hyperloop/android.content.Intent$FilterComparison.js hyperloop/android.content.Intent$ShortcutIconResource.js hyperloop/android.content.Intent.js hyperloop/android.content.IntentFilter$AuthorityEntry.js hyperloop/android.content.IntentFilter$MalformedMimeTypeException.js hyperloop/android.content.IntentFilter.js hyperloop/android.content.IntentSender$OnFinished.js hyperloop/android.content.IntentSender$SendIntentException.js hyperloop/android.content.IntentSender.js hyperloop/android.content.Loader$ForceLoadContentObserver.js hyperloop/android.content.Loader$OnLoadCanceledListener.js hyperloop/android.content.Loader$OnLoadCompleteListener.js hyperloop/android.content.Loader.js hyperloop/android.content.ServiceConnection.js hyperloop/android.content.SharedPreferences$Editor.js hyperloop/android.content.SharedPreferences$OnSharedPreferenceChangeListener.js hyperloop/android.content.SharedPreferences.js hyperloop/android.content.SyncInfo.js hyperloop/android.content.SyncRequest$Builder.js hyperloop/android.content.SyncRequest.js hyperloop/android.content.SyncStatusObserver.js hyperloop/android.content.js hyperloop/android.content.pm.ActivityInfo.js hyperloop/android.content.pm.ApplicationInfo$DisplayNameComparator.js hyperloop/android.content.pm.ApplicationInfo.js hyperloop/android.content.pm.ComponentInfo.js hyperloop/android.content.pm.InstrumentationInfo.js hyperloop/android.content.pm.PackageInfo.js hyperloop/android.content.pm.PackageInstaller$Session.js hyperloop/android.content.pm.PackageInstaller$SessionCallback.js hyperloop/android.content.pm.PackageInstaller$SessionInfo.js hyperloop/android.content.pm.PackageInstaller$SessionParams.js hyperloop/android.content.pm.PackageInstaller.js hyperloop/android.content.pm.PackageItemInfo$DisplayNameComparator.js hyperloop/android.content.pm.PackageItemInfo.js hyperloop/android.content.pm.PackageManager$NameNotFoundException.js hyperloop/android.content.pm.PackageManager.js hyperloop/android.content.pm.PermissionGroupInfo.js hyperloop/android.content.pm.PermissionInfo.js hyperloop/android.content.pm.ProviderInfo.js hyperloop/android.content.pm.ResolveInfo$DisplayNameComparator.js hyperloop/android.content.pm.ResolveInfo.js hyperloop/android.content.pm.ServiceInfo.js hyperloop/android.content.pm.js hyperloop/android.content.res.AssetFileDescriptor$AutoCloseInputStream.js hyperloop/android.content.res.AssetFileDescriptor$AutoCloseOutputStream.js hyperloop/android.content.res.AssetFileDescriptor.js hyperloop/android.content.res.AssetManager$AssetInputStream.js hyperloop/android.content.res.AssetManager.js hyperloop/android.content.res.ColorStateList.js hyperloop/android.content.res.Configuration.js hyperloop/android.content.res.Resources$NotFoundException.js hyperloop/android.content.res.Resources$Theme.js hyperloop/android.content.res.Resources.js hyperloop/android.content.res.TypedArray.js hyperloop/android.content.res.XmlResourceParser.js hyperloop/android.content.res.js hyperloop/android.database.CharArrayBuffer.js hyperloop/android.database.ContentObserver.js hyperloop/android.database.Cursor.js hyperloop/android.database.DataSetObserver.js hyperloop/android.database.DatabaseErrorHandler.js hyperloop/android.database.js hyperloop/android.database.sqlite.SQLiteClosable.js hyperloop/android.database.sqlite.SQLiteCursorDriver.js hyperloop/android.database.sqlite.SQLiteDatabase$CursorFactory.js hyperloop/android.database.sqlite.SQLiteDatabase.js hyperloop/android.database.sqlite.SQLiteProgram.js hyperloop/android.database.sqlite.SQLiteQuery.js hyperloop/android.database.sqlite.SQLiteStatement.js hyperloop/android.database.sqlite.SQLiteTransactionListener.js hyperloop/android.database.sqlite.js hyperloop/android.graphics.Bitmap$CompressFormat.js hyperloop/android.graphics.Bitmap$Config.js hyperloop/android.graphics.Bitmap.js hyperloop/android.graphics.BitmapFactory$Options.js hyperloop/android.graphics.BitmapFactory.js hyperloop/android.graphics.Canvas$EdgeType.js hyperloop/android.graphics.Canvas$VertexMode.js hyperloop/android.graphics.Canvas.js hyperloop/android.graphics.Color.js hyperloop/android.graphics.ColorFilter.js hyperloop/android.graphics.DrawFilter.js hyperloop/android.graphics.MaskFilter.js hyperloop/android.graphics.Matrix$ScaleToFit.js hyperloop/android.graphics.Matrix.js hyperloop/android.graphics.Movie.js hyperloop/android.graphics.Outline.js hyperloop/android.graphics.Paint$Align.js hyperloop/android.graphics.Paint$Cap.js hyperloop/android.graphics.Paint$FontMetrics.js hyperloop/android.graphics.Paint$FontMetricsInt.js hyperloop/android.graphics.Paint$Join.js hyperloop/android.graphics.Paint$Style.js hyperloop/android.graphics.Paint.js hyperloop/android.graphics.Path$Direction.js hyperloop/android.graphics.Path$FillType.js hyperloop/android.graphics.Path$Op.js hyperloop/android.graphics.Path.js hyperloop/android.graphics.PathEffect.js hyperloop/android.graphics.Picture.js hyperloop/android.graphics.Point.js hyperloop/android.graphics.PorterDuff$Mode.js hyperloop/android.graphics.PorterDuff.js hyperloop/android.graphics.Rasterizer.js hyperloop/android.graphics.Rect.js hyperloop/android.graphics.RectF.js hyperloop/android.graphics.Region$Op.js hyperloop/android.graphics.Region.js hyperloop/android.graphics.Shader$TileMode.js hyperloop/android.graphics.Shader.js hyperloop/android.graphics.SurfaceTexture$OnFrameAvailableListener.js hyperloop/android.graphics.SurfaceTexture$OutOfResourcesException.js hyperloop/android.graphics.SurfaceTexture.js hyperloop/android.graphics.Typeface.js hyperloop/android.graphics.Xfermode.js hyperloop/android.graphics.drawable.Drawable$Callback.js hyperloop/android.graphics.drawable.Drawable$ConstantState.js hyperloop/android.graphics.drawable.Drawable.js hyperloop/android.graphics.drawable.DrawableWrapper.js hyperloop/android.graphics.drawable.InsetDrawable.js hyperloop/android.graphics.drawable.ShapeDrawable$ShaderFactory.js hyperloop/android.graphics.drawable.ShapeDrawable.js hyperloop/android.graphics.drawable.js hyperloop/android.graphics.drawable.shapes.OvalShape.js hyperloop/android.graphics.drawable.shapes.RectShape.js hyperloop/android.graphics.drawable.shapes.Shape.js hyperloop/android.graphics.drawable.shapes.js hyperloop/android.graphics.js hyperloop/android.js hyperloop/android.media.AudioAttributes$Builder.js hyperloop/android.media.AudioAttributes.js hyperloop/android.media.MediaDescription$Builder.js hyperloop/android.media.MediaDescription.js hyperloop/android.media.MediaMetadata$Builder.js hyperloop/android.media.MediaMetadata.js hyperloop/android.media.Rating.js hyperloop/android.media.js hyperloop/android.media.session.MediaController$Callback.js hyperloop/android.media.session.MediaController$PlaybackInfo.js hyperloop/android.media.session.MediaController$TransportControls.js hyperloop/android.media.session.MediaController.js hyperloop/android.media.session.MediaSession$Token.js hyperloop/android.media.session.MediaSession.js hyperloop/android.media.session.PlaybackState$Builder.js hyperloop/android.media.session.PlaybackState$CustomAction$Builder.js hyperloop/android.media.session.PlaybackState$CustomAction.js hyperloop/android.media.session.PlaybackState.js hyperloop/android.media.session.js hyperloop/android.net.Uri$Builder.js hyperloop/android.net.Uri.js hyperloop/android.net.js hyperloop/android.os.BaseBundle.js hyperloop/android.os.Bundle.js hyperloop/android.os.CancellationSignal$OnCancelListener.js hyperloop/android.os.CancellationSignal.js hyperloop/android.os.Handler$Callback.js hyperloop/android.os.Handler.js hyperloop/android.os.IBinder$DeathRecipient.js hyperloop/android.os.IBinder.js hyperloop/android.os.IInterface.js hyperloop/android.os.Looper.js hyperloop/android.os.Message.js hyperloop/android.os.MessageQueue$IdleHandler.js hyperloop/android.os.MessageQueue$OnFileDescriptorEventListener.js hyperloop/android.os.MessageQueue.js hyperloop/android.os.Messenger.js hyperloop/android.os.Parcel.js hyperloop/android.os.ParcelFileDescriptor$AutoCloseInputStream.js hyperloop/android.os.ParcelFileDescriptor$AutoCloseOutputStream.js hyperloop/android.os.ParcelFileDescriptor$FileDescriptorDetachedException.js hyperloop/android.os.ParcelFileDescriptor$OnCloseListener.js hyperloop/android.os.ParcelFileDescriptor.js hyperloop/android.os.Parcelable$ClassLoaderCreator.js hyperloop/android.os.Parcelable$Creator.js hyperloop/android.os.Parcelable.js hyperloop/android.os.PatternMatcher.js hyperloop/android.os.PersistableBundle.js hyperloop/android.os.ResultReceiver.js hyperloop/android.os.UserHandle.js hyperloop/android.os.Vibrator.js hyperloop/android.os.js hyperloop/android.transition.PathMotion.js hyperloop/android.transition.Scene.js hyperloop/android.transition.Transition$EpicenterCallback.js hyperloop/android.transition.Transition$TransitionListener.js hyperloop/android.transition.Transition.js hyperloop/android.transition.TransitionManager.js hyperloop/android.transition.TransitionPropagation.js hyperloop/android.transition.TransitionValues.js hyperloop/android.transition.js hyperloop/android.util.AttributeSet.js hyperloop/android.util.DisplayMetrics.js hyperloop/android.util.Printer.js hyperloop/android.util.Property.js hyperloop/android.util.Size.js hyperloop/android.util.SizeF.js hyperloop/android.util.SparseArray.js hyperloop/android.util.SparseBooleanArray.js hyperloop/android.util.TypedValue.js hyperloop/android.util.js hyperloop/android.view.ActionMode$Callback.js hyperloop/android.view.ActionMode$Callback2.js hyperloop/android.view.ActionMode.js hyperloop/android.view.ActionProvider$VisibilityListener.js hyperloop/android.view.ActionProvider.js hyperloop/android.view.ContextMenu$ContextMenuInfo.js hyperloop/android.view.ContextMenu.js hyperloop/android.view.ContextThemeWrapper.js hyperloop/android.view.Display$Mode.js hyperloop/android.view.Display.js hyperloop/android.view.DragEvent.js hyperloop/android.view.Gravity.js hyperloop/android.view.InputDevice$MotionRange.js hyperloop/android.view.InputDevice.js hyperloop/android.view.InputEvent.js hyperloop/android.view.InputQueue$Callback.js hyperloop/android.view.InputQueue.js hyperloop/android.view.KeyCharacterMap$KeyData.js hyperloop/android.view.KeyCharacterMap$UnavailableException.js hyperloop/android.view.KeyCharacterMap.js hyperloop/android.view.KeyEvent$Callback.js hyperloop/android.view.KeyEvent$DispatcherState.js hyperloop/android.view.KeyEvent.js hyperloop/android.view.LayoutInflater$Factory.js hyperloop/android.view.LayoutInflater$Factory2.js hyperloop/android.view.LayoutInflater$Filter.js hyperloop/android.view.LayoutInflater.js hyperloop/android.view.Menu.js hyperloop/android.view.MenuInflater.js hyperloop/android.view.MenuItem$OnActionExpandListener.js hyperloop/android.view.MenuItem$OnMenuItemClickListener.js hyperloop/android.view.MenuItem.js hyperloop/android.view.MotionEvent$PointerCoords.js hyperloop/android.view.MotionEvent$PointerProperties.js hyperloop/android.view.MotionEvent.js hyperloop/android.view.SearchEvent.js hyperloop/android.view.SubMenu.js hyperloop/android.view.Surface$OutOfResourcesException.js hyperloop/android.view.Surface.js hyperloop/android.view.SurfaceHolder$BadSurfaceTypeException.js hyperloop/android.view.SurfaceHolder$Callback.js hyperloop/android.view.SurfaceHolder$Callback2.js hyperloop/android.view.SurfaceHolder.js hyperloop/android.view.TouchDelegate.js hyperloop/android.view.View$AccessibilityDelegate.js hyperloop/android.view.View$BaseSavedState.js hyperloop/android.view.View$DragShadowBuilder.js hyperloop/android.view.View$MeasureSpec.js hyperloop/android.view.View$OnApplyWindowInsetsListener.js hyperloop/android.view.View$OnAttachStateChangeListener.js hyperloop/android.view.View$OnClickListener.js hyperloop/android.view.View$OnContextClickListener.js hyperloop/android.view.View$OnCreateContextMenuListener.js hyperloop/android.view.View$OnDragListener.js hyperloop/android.view.View$OnFocusChangeListener.js hyperloop/android.view.View$OnGenericMotionListener.js hyperloop/android.view.View$OnHoverListener.js hyperloop/android.view.View$OnKeyListener.js hyperloop/android.view.View$OnLayoutChangeListener.js hyperloop/android.view.View$OnLongClickListener.js hyperloop/android.view.View$OnScrollChangeListener.js hyperloop/android.view.View$OnSystemUiVisibilityChangeListener.js hyperloop/android.view.View$OnTouchListener.js hyperloop/android.view.View.js hyperloop/android.view.ViewGroup$LayoutParams.js hyperloop/android.view.ViewGroup$MarginLayoutParams.js hyperloop/android.view.ViewGroup$OnHierarchyChangeListener.js hyperloop/android.view.ViewGroup.js hyperloop/android.view.ViewGroupOverlay.js hyperloop/android.view.ViewOutlineProvider.js hyperloop/android.view.ViewOverlay.js hyperloop/android.view.ViewParent.js hyperloop/android.view.ViewPropertyAnimator.js hyperloop/android.view.ViewStructure.js hyperloop/android.view.ViewTreeObserver$OnDrawListener.js hyperloop/android.view.ViewTreeObserver$OnGlobalFocusChangeListener.js hyperloop/android.view.ViewTreeObserver$OnGlobalLayoutListener.js hyperloop/android.view.ViewTreeObserver$OnPreDrawListener.js hyperloop/android.view.ViewTreeObserver$OnScrollChangedListener.js hyperloop/android.view.ViewTreeObserver$OnTouchModeChangeListener.js hyperloop/android.view.ViewTreeObserver$OnWindowAttachListener.js hyperloop/android.view.ViewTreeObserver$OnWindowFocusChangeListener.js hyperloop/android.view.ViewTreeObserver.js hyperloop/android.view.Window$Callback.js hyperloop/android.view.Window.js hyperloop/android.view.WindowId$FocusObserver.js hyperloop/android.view.WindowId.js hyperloop/android.view.WindowInsets.js hyperloop/android.view.WindowManager$BadTokenException.js hyperloop/android.view.WindowManager$InvalidDisplayException.js hyperloop/android.view.WindowManager$LayoutParams.js hyperloop/android.view.WindowManager.js hyperloop/android.view.accessibility.AccessibilityEvent.js hyperloop/android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction.js hyperloop/android.view.accessibility.AccessibilityNodeInfo$CollectionInfo.js hyperloop/android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo.js hyperloop/android.view.accessibility.AccessibilityNodeInfo$RangeInfo.js hyperloop/android.view.accessibility.AccessibilityNodeInfo.js hyperloop/android.view.accessibility.AccessibilityNodeProvider.js hyperloop/android.view.accessibility.AccessibilityRecord.js hyperloop/android.view.accessibility.AccessibilityWindowInfo.js hyperloop/android.view.accessibility.js hyperloop/android.view.animation.Animation$AnimationListener.js hyperloop/android.view.animation.Animation$Description.js hyperloop/android.view.animation.Animation.js hyperloop/android.view.animation.Interpolator.js hyperloop/android.view.animation.LayoutAnimationController$AnimationParameters.js hyperloop/android.view.animation.LayoutAnimationController.js hyperloop/android.view.animation.Transformation.js hyperloop/android.view.animation.js hyperloop/android.view.inputmethod.CompletionInfo.js hyperloop/android.view.inputmethod.CorrectionInfo.js hyperloop/android.view.inputmethod.EditorInfo.js hyperloop/android.view.inputmethod.ExtractedText.js hyperloop/android.view.inputmethod.ExtractedTextRequest.js hyperloop/android.view.inputmethod.InputConnection.js hyperloop/android.view.inputmethod.js hyperloop/android.view.js hyperloop/android.widget.FrameLayout$LayoutParams.js hyperloop/android.widget.FrameLayout.js hyperloop/android.widget.SpinnerAdapter.js hyperloop/android.widget.Toolbar$LayoutParams.js hyperloop/android.widget.Toolbar$OnMenuItemClickListener.js hyperloop/android.widget.Toolbar.js hyperloop/android.widget.js hyperloop/com.js hyperloop/com.prolificinteractive.js hyperloop/com.prolificinteractive.materialcalendarview.CalendarDay.js hyperloop/com.prolificinteractive.materialcalendarview.CalendarMode.js hyperloop/com.prolificinteractive.materialcalendarview.DayViewDecorator.js hyperloop/com.prolificinteractive.materialcalendarview.DayViewFacade.js hyperloop/com.prolificinteractive.materialcalendarview.MaterialCalendarView$LayoutParams.js hyperloop/com.prolificinteractive.materialcalendarview.MaterialCalendarView$SavedState.js hyperloop/com.prolificinteractive.materialcalendarview.MaterialCalendarView$SelectionMode.js hyperloop/com.prolificinteractive.materialcalendarview.MaterialCalendarView$ShowOtherDates.js hyperloop/com.prolificinteractive.materialcalendarview.MaterialCalendarView$State.js hyperloop/com.prolificinteractive.materialcalendarview.MaterialCalendarView$StateBuilder.js hyperloop/com.prolificinteractive.materialcalendarview.MaterialCalendarView.js hyperloop/com.prolificinteractive.materialcalendarview.OnDateSelectedListener.js hyperloop/com.prolificinteractive.materialcalendarview.OnMonthChangedListener.js hyperloop/com.prolificinteractive.materialcalendarview.OnRangeSelectedListener.js hyperloop/com.prolificinteractive.materialcalendarview.format.DayFormatter.js hyperloop/com.prolificinteractive.materialcalendarview.format.TitleFormatter.js hyperloop/com.prolificinteractive.materialcalendarview.format.WeekDayFormatter.js hyperloop/com.prolificinteractive.materialcalendarview.format.js hyperloop/com.prolificinteractive.materialcalendarview.js hyperloop/com.prolificinteractive.materialcalendarview.spans.DotSpan.js hyperloop/com.prolificinteractive.materialcalendarview.spans.js hyperloop/java.io.File.js hyperloop/java.io.FileDescriptor.js hyperloop/java.io.FileFilter.js hyperloop/java.io.FileInputStream.js hyperloop/java.io.FileOutputStream.js hyperloop/java.io.FilenameFilter.js hyperloop/java.io.FilterOutputStream.js hyperloop/java.io.IOException.js hyperloop/java.io.InputStream.js hyperloop/java.io.OutputStream.js hyperloop/java.io.PrintStream.js hyperloop/java.io.PrintWriter.js hyperloop/java.io.Reader.js hyperloop/java.io.Serializable.js hyperloop/java.io.Writer.js hyperloop/java.io.js hyperloop/java.js hyperloop/java.lang.AbstractStringBuilder.js hyperloop/java.lang.Appendable.js hyperloop/java.lang.Boolean.js hyperloop/java.lang.Byte.js hyperloop/java.lang.Class.js hyperloop/java.lang.ClassLoader.js hyperloop/java.lang.Double.js hyperloop/java.lang.Enum.js hyperloop/java.lang.Exception.js hyperloop/java.lang.Float.js hyperloop/java.lang.Integer.js hyperloop/java.lang.Iterable.js hyperloop/java.lang.Long.js hyperloop/java.lang.Number.js hyperloop/java.lang.Object.js hyperloop/java.lang.Package.js hyperloop/java.lang.Runnable.js hyperloop/java.lang.Short.js hyperloop/java.lang.String.js hyperloop/java.lang.StringBuffer.js hyperloop/java.lang.StringBuilder.js hyperloop/java.lang.Thread$State.js hyperloop/java.lang.Thread$UncaughtExceptionHandler.js hyperloop/java.lang.Thread.js hyperloop/java.lang.ThreadGroup.js hyperloop/java.lang.Throwable$PrintStreamOrWriter.js hyperloop/java.lang.Throwable.js hyperloop/java.lang.annotation.Annotation.js hyperloop/java.lang.annotation.js hyperloop/java.lang.js hyperloop/java.lang.reflect.AccessibleObject.js hyperloop/java.lang.reflect.AnnotatedType.js hyperloop/java.lang.reflect.Constructor.js hyperloop/java.lang.reflect.Executable.js hyperloop/java.lang.reflect.Field.js hyperloop/java.lang.reflect.Method.js hyperloop/java.lang.reflect.Type.js hyperloop/java.lang.reflect.js hyperloop/java.net.ContentHandler.js hyperloop/java.net.ContentHandlerFactory.js hyperloop/java.net.DatagramPacket.js hyperloop/java.net.DatagramSocket.js hyperloop/java.net.DatagramSocketImpl.js hyperloop/java.net.DatagramSocketImplFactory.js hyperloop/java.net.FileNameMap.js hyperloop/java.net.InetAddress.js hyperloop/java.net.NetworkInterface.js hyperloop/java.net.ProtocolFamily.js hyperloop/java.net.Proxy$Type.js hyperloop/java.net.Proxy.js hyperloop/java.net.ServerSocket.js hyperloop/java.net.Socket.js hyperloop/java.net.SocketAddress.js hyperloop/java.net.SocketImpl.js hyperloop/java.net.SocketImplFactory.js hyperloop/java.net.SocketOption.js hyperloop/java.net.URI.js hyperloop/java.net.URL.js hyperloop/java.net.URLConnection.js hyperloop/java.net.URLStreamHandler.js hyperloop/java.net.URLStreamHandlerFactory.js hyperloop/java.net.js hyperloop/java.nio.Buffer.js hyperloop/java.nio.ByteBuffer.js hyperloop/java.nio.ByteOrder.js hyperloop/java.nio.DoubleBuffer.js hyperloop/java.nio.FloatBuffer.js hyperloop/java.nio.IntBuffer.js hyperloop/java.nio.LongBuffer.js hyperloop/java.nio.MappedByteBuffer.js hyperloop/java.nio.ShortBuffer.js hyperloop/java.nio.channels.AsynchronousFileChannel.js hyperloop/java.nio.channels.Channel.js hyperloop/java.nio.channels.CompletionHandler.js hyperloop/java.nio.channels.DatagramChannel.js hyperloop/java.nio.channels.FileChannel$MapMode.js hyperloop/java.nio.channels.FileChannel.js hyperloop/java.nio.channels.FileLock.js hyperloop/java.nio.channels.NetworkChannel.js hyperloop/java.nio.channels.Pipe$SinkChannel.js hyperloop/java.nio.channels.Pipe$SourceChannel.js hyperloop/java.nio.channels.Pipe.js hyperloop/java.nio.channels.ReadableByteChannel.js hyperloop/java.nio.channels.SeekableByteChannel.js hyperloop/java.nio.channels.SelectableChannel.js hyperloop/java.nio.channels.SelectionKey.js hyperloop/java.nio.channels.Selector.js hyperloop/java.nio.channels.ServerSocketChannel.js hyperloop/java.nio.channels.SocketChannel.js hyperloop/java.nio.channels.WritableByteChannel.js hyperloop/java.nio.channels.js hyperloop/java.nio.channels.spi.AbstractInterruptibleChannel.js ....  {quote}  (I had to remove some of the output because of the max limit of JIRA)      * Test project: https://github.com/m1ga/Ti.CalendarView  * Hyperloop 2.1.1    Compile time at the end: Project built successfully in 4m 35s 88ms",Improvement,Critical,Closed,"2017-06-15 13:00:03","2017-06-15 13:00:03",15
"The Titanium SDK ","Windows: Unexpected layout for second UI element in a View","h5.Description    With the below code, the second TextField does not stretch the width of the view as expected, commenting left or right on the first TextField will make it stretch, this occurs for all UI elements        h5.Steps to reproduce    # Add the above to an existing app.js  # Build for a windows target    h5.Actual    Second TextField does not stretch the width of the view    h5.Expected    Second TextField should stretch the width of the view",Bug,High,Closed,"2017-06-15 13:58:08","2017-06-15 13:58:08",5
"The Titanium SDK ","Windows: TableView headerView does not size correctly when tableview has a smaller width","h5.Description    When a headerView has has a bigger width than the TableView it is added to, it does not seem to be sized correctly based off the behaviour of other platforms        h5.Steps to reproduce    # Add the above to an existing app.js  # Build for a windows target    h5.Actual    View overflows the tableview constraints    h5.Expected    Based off other platforms, should stick to the width of the tableview    ",Bug,High,Closed,"2017-06-15 13:27:25","2017-06-15 13:27:25",5
"The Titanium SDK ","Windows: TableView with Ti.UI.SIZE does not size to fit contents","h5.Description    A tableview set to Ti.UI.SIZE does not size itself correctly to fit the contents         h5.Steps to reproduce    # Add the above to an existing app.js  # Build for a windows target    h5.Actual    TableView does not size to fit the contents    h5.Expected    Based off other platforms, the TableView should size to fit the contents",Bug,High,Open,"2017-06-15 12:51:59","2017-06-15 12:51:59",5
"The Titanium SDK ","Windows: Ti.UI.View.center is incorrectly calculated","- The {{center}} property of {{View}} is incorrectly calculated, producing invalid positioning.    {code:js}  var window = Ti.UI.createWindow({backgroundColor: 'gray'}),      a = Ti.UI.createView({backgroundColor: 'red', width: 200, height: 200, top: 0, left: 0}),      b = Ti.UI.createView({backgroundColor: 'blue', width: 100, height: 100, center: {x: 150, y: 150}}),      btn_a = Ti.UI.createButton({title: 'TOP LEFT', bottom: 0, left: 0, width: '50%'}),      btn_b = Ti.UI.createButton({title: 'ZERO', bottom: 0, right: 0, width: '50%'});    btn_a.addEventListener('click', function(){      b.center = {x: '50%', y: '50%'};  });    window.add([btn_a, a, b]);  window.open();  {code}    Expected:  The center property is supposed to be relative to the parent's top-left corner.",Bug,Critical,Closed,"2017-06-15 01:24:43","2017-06-15 01:24:43",3
"The Titanium SDK ","Windows: Horizontal layouts do not behave correctly with 'right'","Views contained in a horizontal layout using {{right}} do not display correctly.    {code:js}  var win = Ti.UI.createWindow({title: 'TIMOB-24277', backgroundColor: 'gray', layout: 'horizontal'}),      a = Ti.UI.createView({          height: 100,          width: 100,          borderColor: 'red',          borderWidth: 5,          backgroundColor: 'blue',          right: 10      }),      b = Ti.UI.createView({       height: 100,       width: 100,       borderColor: 'purple',       borderWidth: 5,       backgroundColor: 'orange',       right: 10      });    win.add([a, b]);  win.open();  {code}",Bug,Critical,Closed,"2017-06-14 23:57:46","2017-06-14 23:57:46",5
"The Titanium SDK ","Android: TableView with sections will error on Android N","- TableView with sections will throw an error on Android N    {code:js}  var win = Ti.UI.createWindow({          backgroundColor: 'gray',          layout: 'vertical'      }),      tv = Ti.UI.createTableView({          headerTitle: 'TableView',          data: [              {                  title: 'Apples',                  hasChild: true              }, {                  title: 'Bananas'              }          ],          height: Ti.UI.SIZE      }),      ls = Ti.UI.createListSection({          headerTitle: 'ListView'      }),      lv = Ti.UI.createListView({          height: Ti.UI.SIZE      });    ls.setItems([      {          properties: {              title: 'Apples',              accessoryType: Ti.UI.LIST_ACCESSORY_TYPE_CHECKMARK          }      }, {          properties: {             title: 'Bananas',             accessoryType: Ti.UI.LIST_ACCESSORY_TYPE_DETAIL         }      }  ]);  lv.sections = [ls];    win.add(tv);  win.add(lv);  win.open();  {code}",Bug,Critical,Closed,"2017-06-14 21:50:39","2017-06-14 21:50:39",3
"The Titanium SDK ","Windows: Uncaught Error: undefined when a label is wrapped in a view that has a fixed width ","h6. description  Uncaught Error: undefined happens when a Label is wrapped in a View that has a fixed width.  - The wrapped Label has left: 0  - The wrapped Label has a text value set.  Having a Label with a left value of 0, a text value set and that it is contained in a View whose width is fixed (i.e. NOT Ti.UI.SIZE nor Ti.UI.FILL), will make the error to pop when the app launches.  If line 14 gets commented out from the index.tss file, the error will go away.    h6. error message  [ERROR] ----- Titanium Javascript Runtime Error -----  [ERROR] In undefined: undefined,undefined  [ERROR] Message: Uncaught Error: undefined    h6. Sample Code  [Sample Code|https://propelics.box.com/s/iyfl1ys9ib79fkgxvd8utwjt2vlo3q53]  ",Bug,High,Closed,"2017-06-14 16:43:50","2017-06-14 16:43:50",5
"The Titanium SDK ","Windows: Calling insertRow with a deleted row errors out application","h5.Description    When calling insertRow with an existing row, if the row has been deleted then the application will freeze and error out, this code works fine on Android, need to check iOS        h5.Steps to reproduce    # Add the code above to an application  # Build for Windows  # Tap a row    h5.Actual    Application freezes and errors out    h5.Expected    Application should not freeze or error out, ",Bug,Medium,Closed,"2017-06-14 10:44:58","2017-06-14 10:44:58",5
"The Titanium SDK ","Android: ListView item template support CommonJS modules","According to [http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.ListItem], the ListView item template only supports a limited set of view classes from the Ti.UI namespace. The {{type}} property sets the Ti.UI view to be used, i.e 'Ti.UI.Label'       Instead of composing the listview's UI repeatedly, I would like to be able to use a javascript module in list template, i.e:  {code:title=customRow.js}  function Controller() {      var $ = this;      $.__views.container = Ti.UI.createView({          layout: horizontal,          width: Ti.UI.SIZE,          backgroundColor: transparent      });      $.__views.rname = Ti.UI.createLabel({          text: row      });      $.__views.rimg = Ti.UI.createImageView({          image: 'img.png'      });      $.__views.container.add($.__views.rname);      $.__views.container.add($.__views.rimg);      _.extend($, $.__views);      _.extend($, exports);  }  module.exports = Controller;  {code}  ","New Feature",High,Closed,"2017-06-13 21:30:39","2017-06-13 21:30:39",8
"The Titanium SDK ","Automate AppSpider test","We need to test our APIs using AppSpider and upload the results    # Using the AppSpider Application, run a scan manually (https://axway.jiveon.com/docs/DOC-80884) against the REST endpoint for preproduction  ## URL: https://f4df0833a1352ef193633d85356e6e80ffcdcdb7.cloudapp-enterprise.<USER>com/arrow/swagger.json  ## Inside the AppSpider application, import the Swagger document  ## Configure the scan and run it once manually. Save the configuration.  # https://axway.jiveon.com/groups/product-security-group/blog/2016/10/14/automating-appspider-and-nessus-with-hakbot  ## Recommend copying the Fortify scans to run this nightly: https://github.com/<USER><USER>dsl/tree/master/fortify-jobs",Improvement,High,Closed,"2017-06-13 11:32:00","2017-06-13 11:32:00",5
"The Titanium SDK ","Windows: Label's width/height doesn't recalculate right when it contained in View with set width/height","h6.Problem  While building UI in Windows, we've came to notice that, when a Label's height and width are set to Ti.UI.SIZE AND it is contained in a View whose Width property is set (e.g. width: '50%', width: '500'), the size of the Label seems not to be recalculated correctly. This works fine in Android and iOS.    h6.Reproduce  1. Run the attached simple code in a empty alloy project.  2. Observe how the long text is cut off in both labels.    h6.Note  If the container view (in this case, wrapperLeft or wrapperRight) has a Ti.UI.SIZE or Ti.UI.FILL (or not fixed value), the issue disappears.",Bug,Medium,Closed,"2017-06-13 01:30:14","2017-06-13 01:30:14",5
"The Titanium SDK ","different sub-variable names for optionDialog ","I am using a simple optionDialog:    <OptionDialog id=selectOccupants  title=Select Occupant Count onClick=setOccupants />    when running on iOS, I get the following error:   message = undefined is not an object (evaluating 'e.source.options[e.source.selectedIndex].toString');    However, this works perfectly fine on Android.     It looks like on Android, selectedIndex is available, but when running on iOS, same parameter is named differently, 'index'.    attached are the screenshots from debugging for both android and ios.     This should be uniform across both platforms.  ",Bug,Critical,Closed,"2017-05-19 16:04:27","2017-05-19 16:04:27",3
"The Titanium SDK ","Build: Deprecation warnings in docgen scripts","h5.Description    Running the node build scripts with node.js >=8.0.0 produces the following deprecation warning, it's coming from docgen.js.     Deprecation warnings are related to async fs functions without a callback https://github.com/nodejs/node/blob/master/doc/api/deprecations.md#dep0013-fs-async-function-without-callback",Bug,None,Closed,"2017-06-12 10:21:21","2017-06-12 10:21:21",3
"The Titanium SDK ","iOS 11 / Android O: Add support for Password AutoFill","iOS 11 offers new feature Password AutoFill, that makes logging in easy by putting users password directly on keyboard in login UI. This can be done by supporting UITextContentType in UITextField and UITextView. For detail follow apple wwdc video : https://developer.apple.com/videos/play/wwdc2017/206 .","New Feature",High,Closed,"2017-06-12 03:25:55","2017-06-12 03:25:55",5
"The Titanium SDK ","Windows: Missing APIs in documentation","There are some APIs that are implemented but are not marked as implemented.    They are    * Titanium.UI.SearchBar  * Titanium.Network.Socket.TCP  * Titanium.Network.Socket.UDP    All that needs doing is the macro that defines unimplemented APIs being removed. Probably need to prune for any unsupported methods and properties as well",Story,Medium,Closed,"2017-06-11 17:22:02","2017-06-11 17:22:02",3
"The Titanium SDK ","iOS: Lint complete Xcode-project","The iOS-core has been around for a while now. We have moved from tabs to spaces over the years, moved to a unified code-style and are now formatting all methods and properties correctly during code-review.     We might want to use an automatic linting-solution that can be triggered via CLI, or regex-replace the issues. ",Story,High,Closed,"2017-06-11 09:55:51","2017-06-11 09:55:51",5
"The Titanium SDK ","Windows: ListView's scrollToItem scroll position","h6. Description  In iOS, if you call the scrollToItem function and you pass an animation parameter, you can indicate a 'position' (bottom, middle, none and top) which is the position to scroll the selected cell to. The issue is that with the implementation as is right now, when scrolling to items in different sections (with several list items on them), the scroll stops at a point in which the section is sometimes positioned in the middle or bottom of the screen, making difficult to the user to tell when does the last section ends and when does the section that they scrolled to begins.   h6. Video Example  [Video|https://www.screencast.com/t/w161OuvI6WEB]  h6. Feature Request  Parity in Windows  h6. Sample Project  [Sample Code|https://propelics.box.com/s/rdot2vvg8js18e0b0ow15vw4gc0jx3uh]    ","New Feature",Medium,Closed,"2017-06-09 18:31:36","2017-06-09 18:31:36",5
"The Titanium SDK ","iOS: Hybrid CommonJS and Native modules don't handle multiple js files","Hi, I tested this using 6.1.0.GA and it works only for a single commonjs file.  Suppose that you have a module called it.commonjs.test.module and in your assets folder you have two files called:  it.commonjs.test.module.js  another.module.js  In the second one you have:    In the first one you have:    You can successfully build the module but when you try to run an app that requires the it.commonjs.test.module module you get an error like:  {{[ERROR] Script Error Couldn't find module: it.commonjs.test.module/another.module for architecture: i386}}  If you try to build the module with 3.5.1.GA sdk everything is working fine.  On Android is working also with 6.1.0.GA.",Bug,High,Closed,"2017-06-08 17:48:05","2017-06-08 17:48:05",8
"The Titanium SDK ","Windows: Implement hintText for searchbar","h5.Description    Implement the hintText property for SearchBar. Demo code below        h5.Expected    # Two searchBars one without hintText one with  # Clicking 'Set the hintText via method ' should  update the hintText  # Clicking 'Set the hintText via prop ' should  update the hintText  # Clicking 'Get the hintText' should print the hintText twice (access property and getHintText)  ",Improvement,Medium,Closed,"2017-06-08 15:17:17","2017-06-08 15:17:17",5
"The Titanium SDK ","Android: Ti.UI.View.center is incorrectly calculated","- The {{center}} property of {{View}} is incorrectly calculated, producing invalid positioning.    {code:js}  var window = Ti.UI.createWindow({backgroundColor: 'gray'}),      a = Ti.UI.createView({backgroundColor: 'red', width: 200, height: 200, top: 0, left: 0}),      b = Ti.UI.createView({backgroundColor: 'blue', width: 100, height: 100, center: {x: 150, y: 150}}),      btn_a = Ti.UI.createButton({title: 'TOP LEFT', bottom: 0, left: 0, width: '50%'}),      btn_b = Ti.UI.createButton({title: 'ZERO', bottom: 0, right: 0, width: '50%'});    btn_a.addEventListener('click', function(){      b.center = {x: 50, y: 50};  });    btn_b.addEventListener('click', function(){      b.center = {x: 0, y: 0};  });    window.add([btn_a, btn_b, a, b]);  window.open();  {code}",Bug,Critical,Closed,"2017-06-07 15:23:51","2017-06-07 15:23:51",3
"The Titanium SDK ","Android: Horizontal layouts do not behave correctly with 'right'","Views contained in a horizontal layout using {{right}} do not display correctly.    {code:js}  var win = Ti.UI.createWindow({title: 'TIMOB-24277', backgroundColor: 'gray', layout: 'horizontal'}),      a = Ti.UI.createView({          height: 100,          width: 100,          borderColor: 'red',          borderWidth: 5,          backgroundColor: 'blue',          right: 10      }),      b = Ti.UI.createView({       height: 100,       width: 100,       borderColor: 'purple',       borderWidth: 5,       backgroundColor: 'orange',       right: 10      });    win.add([a, b]);  win.open();  {code}",Bug,Critical,Closed,"2017-06-07 15:14:30","2017-06-07 15:14:30",5
"The Titanium SDK ","iOS: HTTPClient - URL with invalid characters causes a crash","*Summary:*  The HTTPClient will cause a crash on iOS when given a URL containing invalid characters such as:  * Space ' ' character.  * Percent '%' sign not followed by a hex digit.  * Unicode character.    *Steps to reproduce:*  # Set up a Titanium project to use the attached JavaScript file.  # Build and run for iOS.  # Tap the Send HTTP Request button.    *Result:*  Crashes due to invalid characters in the URL.    *Expected Result:*  Should not crash. Should log a warning and/or invoke the onerror callback.    Even better, we should add autoEncodeUrl support to iOS for feature parity with Android and Windows Phone. By default, this property is set true. This way, invalid URLs will be automatically %-encoded.  http://docs.<USER>com/platform/latest/#!/api/Titanium.Network.HTTPClient-property-autoEncodeUrl    *Notes:*  * The attached project does not crash on Android. Invalid URLs are automatically encoded.  * Percent signs are the only characters that should not be automatically encoded. This is in case the given URL already contains %-encoded characters. If there is a lone percent sign without a hex value, then it should produce an invalid URL.",Bug,Medium,Closed,"2017-06-07 01:53:08","2017-06-07 01:53:08",1
"The Titanium SDK ","Windows: Request to support Visual Studio's  Debugger's Diagnostic Tools.","Thing is according to Microsoft's documentation ( https://msdn.microsoft.com/en-us/library/mt695328.aspx ) there's two ways of collecting profiling data: with or without the debugger. This guide we have now only covers the without the debugger piece, by using Visual Studio's Performance Profiler.     Now customer request to support the other way: support using Visual Studio's  Debugger's Diagnostic Tools for our app.     Related to TIMON-24682","New Feature",Low,Reopened,"2017-06-07 01:05:41","2017-06-07 01:05:41",13
"The Titanium SDK ","iOS: Scan core for possible background-thread issues","Xcode 9 comes with a runtime tool to detect background-thread-executions that belong to the main-thread (like UI-changes). We should scan our SDK for those warnings and fix them all together.",Improvement,High,Closed,"2017-06-06 21:57:15","2017-06-06 21:57:15",5
"The Titanium SDK ","iOS 11: Support for the ARKit API","[ARKit|https://developer.apple.com/documentation/arkit] - Integrate iOS device camera and motion features to produce augmented reality experiences in your app or game. Let's do a module for it! ","New Feature",High,Closed,"2017-06-06 12:29:38","2017-06-06 12:29:38",15
"The Titanium SDK ","iOS 11: Expose new API's to Ti.SafariDialog","iOS 11 offers new configuration methods for the Ti.SafariDialog module:  * barCollapsingEnabled: Decide whether or not you want to collapse the nav-bar during scrolling  * dismissButtonStyle: Different dismiss-styles for the nav-button (done, close, cancel).  * Expose {{AuthenticationSession}} API","New Feature",Medium,Closed,"2017-06-06 11:00:11","2017-06-06 11:00:11",5
"The Titanium SDK ","iOS: ListView item template support CommonJS modules","According to [http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.ListItem], the ListView item template only supports a limited set of view classes from the Ti.UI namespace. The {{type}} property sets the Ti.UI view to be used, i.e 'Ti.UI.Label'       Instead of composing the listview's UI repeatedly, I would like to be able to use a javascript module in list template, i.e:  {code:title=customRow.js}  function Controller() {      var $ = this;      $.__views.container = Ti.UI.createView({          layout: horizontal,          width: Ti.UI.SIZE,          backgroundColor: transparent      });      $.__views.rname = Ti.UI.createLabel({          text: row      });      $.__views.rimg = Ti.UI.createImageView({          image: 'img.png'      });      $.__views.container.add($.__views.rname);      $.__views.container.add($.__views.rimg);      _.extend($, $.__views);      _.extend($, exports);  }  module.exports = Controller;  {code}  ","New Feature",High,Closed,"2017-06-05 23:02:31","2017-06-05 23:02:31",8
"The Titanium SDK ","iOS 11: Add support for drag-and-drop","iOS 11 offers a native way to drag-and-drop items between views and even apps. The {{UIDragSession}} protocol is responsible for it and manages item in the {{UIDragItem}} class. ","New Feature",Medium,Closed,"2017-06-05 21:59:45","2017-06-05 21:59:45",21
"The Titanium SDK ","iOS: Add support for iOS 11 and Xcode 9","iOS 11 & Xcode 9 Beta have been released today. This epic provides basic information about the current SDK issues and breaking changes that need to be addressed until GA release n September 2017.",Epic,High,Closed,"2017-06-05 21:49:46","2017-06-05 21:49:46",0
"The Titanium SDK ","iOS: Incorrect badge display on Ti.UI.DashboardView (no background image)","When you display a badge on a DashboardItem (with a dashboardView),  the badge background is transparent whereas it should be red.    This does not happen with Ti SDK 6.0.4.GA.  ",Bug,Critical,Closed,"2017-06-02 09:28:41","2017-06-02 09:28:41",3
"The Titanium SDK ","iOS: Remove SBJSON dependency from SDK-core","We use the {{SBJSON}} library that was added in the Titanium SDK 0.9. It was never touched since then and nowadays we have the system-class {{NSJSONSerialization}} that does everything we needed from {{SBJSON}} (parse + stringify).    As we want to split out legacy code from the core to improve the build-time, removing this library is fundamental to getting started. The library is used in both the core and in TiVerify, so the changes will affect both repos.",Story,High,Closed,"2017-06-04 18:59:55","2017-06-04 18:59:55",8
"The Titanium SDK ","Android O: Allow Titanium.Media to support Picture-in-Picture","We need to optimize the {{Titanium.Media}} life-cycles to be compatible with Picture-in-Picture.    https://developer.android.com/training/tv/playback/picture-in-picture.html",Improvement,Medium,Open,"2017-06-02 13:20:14","2017-06-02 13:20:14",5
"The Titanium SDK ","Android O: Fonts","Android O allows for accessing downloadable fonts and also defining fonts in XML. We should utilise support library 26.0 when implementing this.    https://developer.android.com/guide/topics/ui/look-and-feel/downloadable-fonts.html  https://developer.android.com/guide/topics/ui/look-and-feel/fonts-in-xml.html","New Feature",High,Open,"2017-06-02 13:06:53","2017-06-02 13:06:53",13
"The Titanium SDK ","Android O: Autofill Framework","We need to add optimisations for the autofill framework by exposing {{autofillHints}} and {{setImportantForAutoFill}} on our Titanium input fields (TextField and TextArea).    https://developer.android.com/preview/features/autofill.html","New Feature",High,Closed,"2017-06-02 13:03:03","2017-06-02 13:03:03",8
"The Titanium SDK ","Android O: Pinning Shortcuts and Widgets","Android O allows shortcuts and widget pinning (https://developer.android.com/preview/features/pinning-shortcuts-widgets.html)    We should expose this functionality from [ShortcutManager|https://developer.android.com/reference/android/content/pm/ShortcutManager.html]","New Feature",High,Closed,"2017-06-02 12:56:15","2017-06-02 12:56:15",13
"The Titanium SDK ","Windows: List view performance affected","h5. Issue Description    We've been trying to load a ListView in Windows with 500 users (https://randomuser.me/api/?results=500&nat=us) and performance gets quite low when loading 200+ elements in a single ListView (with a custom ItemTemplate).     Here's a little bit of benchmarking we manually did by testing a blank application with only a Window with a ListView on it - App first requests for 500 users and when obtained, it renders them within the ListView and it's really the actual UI rendering which seems to be taking a lot of time, as the server response happens almost immediately after the request.    **Please note ALL of these tests have been performed in an actual Windows device (Surface 3).    100 users - 07.71s, minor blink issue when scrolling down/up (user image to the right disappears and reappears as the rows gain focus)  200 users - 13.35s, major blink issue in the list items when scrolling down/up (they completely disappear and are rendered with a delay)  300 users - 19.91s, same blinking issue as above  400 users - 25.51s, same blinking issue as above  500 users - 32.32s, same blinking issue as above    We'd also like to mention we replicated this (a single Windowed app with only a ListView on it and an HTTP requests that asks for a certain amount of users that will be rendered in the ListView...) and performance looks overwhelmingly better in the native side.    h5. Steps to reproduce.   # Download the attached app. https://drive.google.com/file/d/0BwTWo-c2a0b9LUhpc1Jha0JubWc/view?usp=sharing  # Run  # Scroll  # App is getting slower  ",Improvement,High,Closed,"2017-06-01 20:16:53","2017-06-01 20:16:53",13
"The Titanium SDK ","Windows: Implement `scrolling`, `scrollstart` y `scrollend`  events on Listview ","h5. Issue Description    Add the `scrolling`, `scrollstart` y `scrollend` events on the listview for windows. ",Improvement,Medium,Closed,"2017-06-01 19:42:53","2017-06-01 19:42:53",5
"The Titanium SDK ","Add NSP/retire.js to build process to check for security issues","Add Retire and NSP support to the build <USER> and upload those to ThreadFix.",Story,Medium,Closed,"2017-06-01 17:37:52","2017-06-01 17:37:52",5
"The Titanium SDK ","Android: Ti.UI.ImageView with images property causes crash","I'm getting this exception when running my application on Android with TI SDK 6.1.0. If the images property is set and start has been called, when the window closes you get the below errors. I have attached the controller, view, tss files    {quote}  [ERROR] :  TiApplication: (Thread-926) [5221,5221] Sending event: exception on thread: Thread-926 msg:java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.Object org.<USER>titanium.proxy.TiViewProxy.getProperty(java.lang.String)' on a null object reference; Titanium 6.1.0,2017/05/26 15:24,undefined  [ERROR] :  TiApplication: java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.Object org.<USER>titanium.proxy.TiViewProxy.getProperty(java.lang.String)' on a null object reference  [ERROR] :  TiApplication:  at ti.modules.titanium.ui.widget.TiUIImageView.getDuration(TiUIImageView.java:465)  [ERROR] :  TiApplication:  at ti.modules.titanium.ui.widget.TiUIImageView$Loader.run(TiUIImageView.java:406)  [ERROR] :  TiApplication:  at java.lang.Thread.run(Thread.java:818)  [DEBUG] :  Window: Window is closed normally.  [ERROR] :  TiApplication: (Timer-0) [51,5272] Sending event: exception on thread: Timer-0 msg:java.lang.NullPointerException: Attempt to invoke virtual method 'boolean org.<USER>titanium.proxy.TiViewProxy.fireEvent(java.lang.String, java.lang.Object, boolean)' on a null object reference; Titanium 6.1.0,2017/05/26 15:24,undefined  [ERROR] :  TiApplication: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean org.<USER>titanium.proxy.TiViewProxy.fireEvent(java.lang.String, java.lang.Object, boolean)' on a null object reference  [ERROR] :  TiApplication:  at org.<USER>titanium.view.TiUIView.fireEvent(TiUIView.java:1958)  [ERROR] :  TiApplication:  at org.<USER>titanium.view.TiUIView.fireEvent(TiUIView.java:1949)  [ERROR] :  TiApplication:  at ti.modules.titanium.ui.widget.TiUIImageView.fireChange(TiUIImageView.java:503)  [ERROR] :  TiApplication:  at ti.modules.titanium.ui.widget.TiUIImageView.access$1600(TiUIImageView.java:53)  [ERROR] :  TiApplication:  at ti.modules.titanium.ui.widget.TiUIImageView$Animator.run(TiUIImageView.java:553)  [ERROR] :  TiApplication:  at java.util.Timer$TimerImpl.run(Timer.java:284)  [INFO] :   Process: Sending signal. PID: 16778 SIG: 9{quote}",Bug,Critical,Closed,"2017-05-31 23:09:30","2017-05-31 23:09:30",3
"The Titanium SDK ","Android: Allow maxIdxNumber to be set","Allow control over the maximum references per multi-dex class file.    *tiapp.xml*  ",Improvement,Medium,Resolved,"2017-05-30 22:45:36","2017-05-30 22:45:36",3
"The Titanium SDK ","Windows: Cannot build for Android if Windows SDK is not installed","Unable to build Android projects if the Windows SDK is not installed.      ",Bug,Critical,Closed,"2017-05-30 18:29:58","2017-05-30 18:29:58",3
"The Titanium SDK ","Only configure platforms that are deployment targets","- When building an app all possible platforms are configured before each build, including ones that are not targeted  - We should only configure the platforms that are being targeted for that build",Improvement,High,Closed,"2017-05-30 17:29:22","2017-05-30 17:29:22",3
"The Titanium SDK ","Windows: Implement Ti.UI.ListView.marker event on windows","h5. Issue Description     https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.ListView-event-marker    Customer require this functionality (Included Add marker and set marker)","New Feature",Medium,Closed,"2017-05-30 16:57:24","2017-05-30 16:57:24",5
"The Titanium SDK ","Android: Cannot build CommonJS modules with multiple JS files","We fixed Android CommonJS modules for 6.1.0 in TIMOB-24654. Unfortunately, a community member reported that he still cannot build CommonJS modules, when those contain multiple JS files inside the {{assets/}} directory. The test-case can be used from the above ticket, with an additional JS file that is placed in the directory.",Bug,Critical,Closed,"2017-05-29 15:06:19","2017-05-29 15:06:19",3
"The Titanium SDK ","iOS: Error when using ES6 arrow function","When I have the following code in my controller:      {code:java}  // Some comments here  var toggleRight = e => {     $.rightmenu.zIndex = 500;   $.content.animate({    duration: 500,    left:     0,   });  };  {code}      I get this runtime error in iOS:            Android works as expected.    ",Bug,Critical,Closed,"2017-05-23 17:06:26","2017-05-23 17:06:26",1
"The Titanium SDK ","Android: Using transparent as a color crashes the app (Regression)","Received via the community on Slack:  {quote}  Hi all, on Android 7.1.1 if you set a backgroundColor  ( I think every property linked to Colour ) to “transparent” , the app wil crash with this error ->   [ERROR] :  KrollProxy: java.lang.IllegalArgumentException: Unknown color  [ERROR] :  KrollProxy:     at android.graphics.Color.parseColor(Color.java:163)  Anyone already knew it ?  {quote}  We did [many|https://jira.<USER>org/issues/?jql=fixVersion%20%3D%20%22Release%206.1.0%22%20AND%20text%20~%20%22android%20color%22] color-related fixes on Android in 6.1.0, so probably one of them caused this regression.    Full log:      Example code:  {code:js}  var win = Ti.UI.createWindow();    var tableRow = Ti.UI.createTableViewRow({   backgroundColor:'transparent'  });    var table = Ti.UI.createTableView({   data:[tableRow]  });    win.add(table);  win.open();  {code}",Bug,Critical,Closed,"2017-05-29 11:10:51","2017-05-29 11:10:51",3
"The Titanium SDK ","iOS - Unable to use Mapbox SDK (third-party framework) with Hyperloop","Hi,  I'm trying to use Hyperloop to integrate the mapbox framework to my app, but it is not working.    After following the <USER>s guide for include third-party framework to ios, when I run the app on the ios simulator, the app crashes and I got a crash report (see attachments).  step to reproduce :   -create a new project in <USER>using the default alloy project with hyperloop enabled.  -download the Mapbox iOS sdk at http://mapbox.s3.amazonaws.com/mapbox-gl-native/ios/builds/mapbox-ios-sdk-3.5.4-dynamic.zip  -Unzip and place the Mapbox.framework file in src folder in the project's root directory  -I add an appc.js file on the project's root directory with those lines :    -Add the MGLMapboxAccessToken key in the tiapp.xml  -Edit the index.js controler :      -run the app on iOS simulator  ",Bug,Critical,Closed,"2017-05-25 21:47:44","2017-05-25 21:47:44",1
"The Titanium SDK ","iOS: Close all Ti.UI.Tab windows at once","On iOS, the user can close all current windows that are opened in a tab window at once (instead of closing all manually). It is commonly used, so we should expose it as well.    Proposed API: {{Ti.UI.Tab.popToRootWindow}} (similar to TIMOB-23567).","New Feature",Medium,Closed,"2017-05-26 19:33:03","2017-05-26 19:33:03",2
"The Titanium SDK ","Android: Duplicate resources with .aar and Hyperloop enabled","*Steps to reproduce the behavior*  # Run the hyperloop-examples project with the 6.1.0 RC release    *Actual behavior*  The build fails with the following error while executing the aapt command:      *Expected behavior*  The build is successful and the app runs without crashing.    *Additional notes*  Hyperloop still has its own AAR handling which leads to those duplicate resources. This can be solved in a similar manner as the dexer issue in TIMOB-24446 by hooking into {{build.android.aapt}} and removing the changes Hyperloop made.",Bug,Critical,Closed,"2017-05-24 23:11:43","2017-05-24 23:11:43",2
"The Titanium SDK ","Android: Missing --no-version-vectors options for AAPT in during app builds","*Steps to reproduce the behavior*  # Run the example from TIMOB-24446 on an Android 4.4.4 device    *Actual behavior*  The app crashes with the following error:      *Expected behavior*  The app runs without crashing    *Additional notes*  This is caused by the missing {{--no-version-vectors}} option when we call AAPT, which is now required after updating the Android Support Libraries in TIMOB-24438 and using vector drawables. See https://developer.android.com/guide/topics/graphics/vector-drawable-resources.html",Bug,High,Closed,"2017-05-24 22:52:15","2017-05-24 22:52:15",1
"The Titanium SDK ","iOS: Resolve iOS 8 deprecations for willAnimateRotationToInterfaceOrientation","In SDK 6.0.0, we updated the default minimum iOS target to 8.0 as a result of the Xcode 8.x version that is now supported. Doing that, our iOS SDK core shows some deprecation-warnings regarding API's that should be replaced in iOS 8 and later.    Replace willAnimateRotationToInterfaceOrientation: (used in many places, migration required)    This is subset of ticket TIMOB-24335.",Story,High,Closed,"2017-05-24 04:26:43","2017-05-24 04:26:43",5
"The Titanium SDK ","iOS:  Remove old statements (e.g. ![TiUtils isIOS8OrGreater])","In SDK 6.0.0, we updated the default minimum iOS target to 8.0 as a result of the Xcode 8.x version that is now supported. Doing that, our iOS SDK core shows some deprecation-warnings regarding API's that should be replaced in iOS 8 and later.    Remove old statements (e.g. ![TiUtils isIOS8OrGreater])    This is subset of ticket TIMOB-24335.",Story,High,Closed,"2017-05-24 04:23:59","2017-05-24 04:23:59",3
"The Titanium SDK ","iOS: Resolve iOS 8 deprecations for ABPeoplePickerNavigationController","In SDK 6.0.0, we updated the default minimum iOS target to 8.0 as a result of the Xcode 8.x version that is now supported. Doing that, our iOS SDK core shows some deprecation-warnings regarding API's that should be replaced in iOS 8 and later.  Replace ABPeoplePickerNavigationController (in Ti.Contacts, replacement straight forward)    This is subset of ticket TIMOB-24335.",Story,High,Closed,"2017-05-24 04:14:18","2017-05-24 04:14:18",3
"The Titanium SDK ","Crash when closing a window with a TableView on Android","The app crash when closing a window that contain a TableView in a ScrollView.    ",Bug,Critical,Closed,"2017-05-23 20:56:21","2017-05-23 20:56:21",2
"The Titanium SDK ","Android: Module Build error with - exec returned: 2","h3. Steps to Reproduce Create new Module project for Android Right click on build.xml file Run as Ant    h3. Actual Result BUILD FAILURE /Users/ifox/Library/Application Support/Titanium/mobilesdk/osx/6.0.4.GA/module/android/build.xml:347: The following error occurred while executing this line: /Users/ifox/Library/Application Support/Titanium/mobilesdk/osx/6.0.4.GA/module/android/build.xml:302: exec returned: 2  h3. Expected Result BUILD SUCCESS",Bug,Critical,Closed,"2017-05-23 11:59:45","2017-05-23 11:59:45",0
"The Titanium SDK ","Android: Support V8 inspector API for debugging to replace legacy debugger protocol","As of V8 5.8, the ;legacy debugger protocol is deprecated (and may be removed). We need to update our debugger agent/shim to talk to the V8 inspector APIs. Additionally, we should move to using websockets as the carrying protocol (rather than the http-style header/byte payload legacy devtools protocol). This would allow us to use Chrome DevTools to debug our apps, separately from Studio.","New Feature",High,Closed,"2017-05-23 19:04:12","2017-05-23 19:04:12",13
"The Titanium SDK ","iOS: Resolve iOS 8 deprecations for UIAlertView and UIActionSheet ","In SDK 6.0.0, we updated the default minimum iOS target to 8.0 as a result of the Xcode 8.x version that is now supported. Doing that, our iOS SDK core shows some deprecation-warnings regarding API's that should be replaced in iOS 8 and later.  Remove old UIAlertView and UIActionSheet API's.  This is subset of ticket TIMOB-24335.",Story,High,Closed,"2017-05-23 07:55:50","2017-05-23 07:55:50",3
"The Titanium SDK ","iOS: Resolve iOS 8 deprecations for NSDayCalendarUnit","In SDK 6.0.0, we updated the default minimum iOS target to 8.0 as a result of the Xcode 8.x version that is now supported. Doing that, our iOS SDK core shows some deprecation-warnings regarding API's that should be replaced in iOS 8 and later.  Replace NSDayCalendarUnit with NSCalendarUnitDay etc. (search and replace, easy ones)  This is subset of ticket TIMOB-24335.",Story,High,Closed,"2017-05-23 05:05:03","2017-05-23 05:05:03",3
"The Titanium SDK ","Android: TableView does not render on 6.1.0.RC","The TableView does not render in 6.1.0.RC (please see attached screenshots with 6.0.3.GA vs 6.1.0.RC)  No changes were done to the code and the only special thing is that it's used with the `nl.<USER>pullToRefresh` widget.    Thank you.    **UPDATE**: I tested with 6.0.4.GA and the table renders ok too, so it's a 6.1.0 issue.    ",Bug,Critical,Closed,"2017-05-22 12:23:57","2017-05-22 12:23:57",1
"The Titanium SDK ","Android: V8 crashes on Android N","Hi,  With the Vitals panel activated I started to have a lot of reports of V8 crashing.    All of them are *ONLY* Android 7.0+    Crash logs attached.    Thank you.        and         and    ",Bug,Critical,Closed,"2017-05-19 08:25:59","2017-05-19 08:25:59",8
"The Titanium SDK ","Android: Unable to add ti.map to a ListView","{{mapView}} should be able to be added to an existing view without error.    {code:js}  var win = Ti.UI.createWindow({backgroundColor: 'gray', layout: 'vertical'});      btn = Ti.UI.createButton({title: 'ADD MAP', height: '40dp'}),      listView = Ti.UI.createListView(),      sections = [],        Map = require('ti.map'),      mapView = Map.createView({          mapType: Map.NORMAL_TYPE,          region: {              latitude: 37.3680, longitude: -121.9145,              latitudeDelta: 0.1, longitudeDelta: 0.1          }      });    var header = Ti.UI.createView({          backgroundColor: 'red',          width: Ti.UI.FILL, height: '200dp',      }),      numberSection = Ti.UI.createListSection({headerView: header}),      numberData = [          {properties: { title: 'One', color: 'white'}},          {properties: { title: 'Two', color: 'white'}},          {properties: { title: 'Three', color: 'white'}}      ];  numberSection.setItems(numberData);  sections.push(numberSection);  listView.sections = sections;    btn.addEventListener('click', function() {      header.add(mapView);  });    win.add(btn);  win.add(listView);  win.open();  {code}",Bug,High,Open,"2017-05-19 14:31:37","2017-05-19 14:31:37",8
"The Titanium SDK ","Android: Add video support to Ti.Media.openPhotoGallery()","Hello,    We have tried to open the videos from Android  gallery but its not opening.    *Testing Environment:*  Titanium SDK: 6.0.4.GA  <USER>Command-Line Interface, version 6.2.0  Android device: Samsung Galaxy Grand Prime(5.1.1)    *Test Code:*      Tiapp.xml        *Test Result:*  Just Opening the Photos from gallery but videos are not Opening.    *Expected Result:*  Open the videos also from Android App Gallery.    Photo gallery API shows videos too for iOS. Am I missing something or this is not available for Android? If not available for Android, Can we consider it for improvement? ",Improvement,Critical,Closed,"2017-05-18 15:51:38","2017-05-18 15:51:38",5
"The Titanium SDK ","Windows: info detection should list whether user has developer mode enabled","h5.Description    ws-local builds require 'Developer mode' to be enabled in Windows 10. Therefore this should be listed in {{appc ti info}}. There are 3 possible settings:    * Windows Store apps  * Sideload apps  * Developer mode    This could then lead into other enhancements such as erroring out or prompting a user to enable this when building for ws-local    References    {{explorer.exe ms-settings:developers}} opens the settings screen (We shouldn't open this unless a user asks, may only be useful from Studios perspective)    http://www.thewindowsclub.com/how-to-enable-developer-mode-in-windows-10    http://stackoverflow.com/questions/41231586/how-to-detect-if-developer-mode-is-active-on-windows-10",Improvement,Medium,Open,"2017-05-18 11:29:46","2017-05-18 11:29:46",8
"The Titanium SDK ","Windows: SDK does not handle TargetPlatformVersion being set to a decimal number","h5.Description    When setting {{<TargetPlatformVersion>10.0</TargetPlatformVersion>}} to 10.0 the CLI will error out with, error comes from [here|https://github.com/<USER>titanium_mobile_windows/blob/af913a22799abe89ec66e8adfbc480b3d7bd44d1/cli/commands/_build/generate.js#L212], reason is because {{typeof  this.targetPlatformSdkMinVersion}} === number        h5.Steps to reproduce    # Set {{<TargetPlatformVersion>10.0</TargetPlatformVersion>}} in the windows section of your tiapp  # Build    h5.Actual    Build will error out with the above error    h5.Expected     Build should not error out with no information. It should possibly warn about an invalid setting or error out with an informative error",Bug,Medium,Closed,"2017-05-18 11:00:26","2017-05-18 11:00:26",5
"The Titanium SDK ","Android: Missing R class for modules","*Steps to reproduce the behavior*  # Extract the test module {{com.appc.timob24703-android-1.0.0.zip}} and add it to a new Titanium app.  # Replace the content of {{app/controllers/index.js}} with:    # Build and run the app with {{appc run -p android -l trace}}    *Actual behvavior*  The app crashes upon start with the following error:      *Expected behavior*  The app starts without crashing and shows a simple Titanium label.",Bug,None,Closed,"2017-05-18 00:54:16","2017-05-18 00:54:16",2
"The Titanium SDK ","Android: Accessing 'size' & 'rect' button properties after activity.finish() crashes the app with java.lang.NullPointerException","h5. Steps to reproduce:  1. Use the code below in your app.js:    (there can be more properties but I have checked {{size}} & {{rect}} here).  2. Build the app for android device.  3. After the app launches, click on {{Close Me}} button.    h5.Actual Result:  1. The app crashes with below java.lang.NullPointerException:      h5.Actual Results:  1. The app should not crash. ",Bug,None,Closed,"2017-05-17 23:22:14","2017-05-17 23:22:14",5
"The Titanium SDK ","Android: ImageView.image fails when URL contains multiple question marks","when the imageView path that contains multiple '?' symbol it will not get be encoded properly on Android.    Sample Url:   [http://scontent.xx.fbcdn.net.rsz.io/v/t1.0-9/s720x720/17795851_419371511758070_7481565181564022529_n.jpg?oh=7772aea44d2f40fdbd42285ca61d7aac&oe=59771D60?mode=crop&width=333&height=250]    Notice there is 2 '?' in the url, the second one is encoded to %%3F by android as shown below:    [http://scontent.xx.fbcdn.net.rsz.io/v/t1.0-9/s720x720/17795851_419371511758070_7481565181564022529_n.jpg?oh=7772aea44d2f40fdbd42285ca61d7aac&oe=59771D60%%3Fmode=crop&width=333&height=250]    I tried using encodeUri but android still appends a % before the %3F symbol.    Steps:  1. Run sample code  2. Check image in the browser to verify the URL is valid.    Actual: Image does not appear  Expected: Image must appear        Logs:  [ERROR] :  TiDownloadManager: (pool-3-thread-1) [1302,1302] Exception downloading http://scontent.xx.fbcdn.net.rsz.io/v/t1.0-9/s720x720/17795851_419371511758070_7481565181564022529_n.jpg?oh=7772aea44d2f40fdbd42285ca61d7aac&oe=59771D60%%3Fmode=crop&width=333&height=250  [ERROR] :  TiDownloadManager: java.io.FileNotFoundException: http://scontent.xx.fbcdn.net.rsz.io/v/t1.0-9/s720x720/17795851_419371511758070_7481565181564022529_n.jpg?oh=7772aea44d2f40fdbd42285ca61d7aac&oe=59771D60%%3Fmode=crop&width=333&height=250  [ERROR] :  TiDownloadManager:  at com.android.okhttp.internal.huc.HttpURLConnectionImpl.getInputStream(HttpURLConnectionImpl.java:238)  [ERROR] :  TiDownloadManager:  at java.net.URL.openStream(URL.java:470)  [ERROR] :  TiDownloadManager:  at org.<USER>titanium.util.TiDownloadManager$DownloadJob.run(TiDownloadManager.java:135)  [ERROR] :  TiDownloadManager:  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)  [ERROR] :  TiDownloadManager:  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)  [ERROR] :  TiDownloadManager:  at java.lang.Thread.run(Thread.java:818)    ",Bug,Critical,Closed,"2017-05-14 11:39:19","2017-05-14 11:39:19",5
"The Titanium SDK ","Fork correct sdk broken due to missing tisdk3fixes hook","Turns out we need the {{tisdk3fixes.js}} hook that was recently removed.    We need this file because it monkey patches the correct ti sdk validation function which is fired from the {{--platform}} callback function. If the tiapp.xml {{<sdk-version>}} doesn't match the selected SDK, it forks the correct build command, then throws a GracefulShutdown exception which needs to be caught correctly and that's what the monkey patch does, apparently.",Bug,Critical,Closed,"2017-05-12 21:15:26","2017-05-12 21:15:26",2
"The Titanium SDK ","(Windows) Unable to build for Android on 6.0.4.GA ","When I try to run  an android application In 6.0.4.GA from the CLI I get the following error message even when I have the Correct SDK installed.       The error i get from studio:      *Test steps*  1. Using the old android SDK manager find Android 6.0 (Api 23) and remove it  2. Re install Android 6.0 (API 23)  3. Create a titanium application   4. Run the application on 6.0.4.GA for android emulator   5. should see an error message relating to Android SDK not being found   6. Run the application on 6.0.3.GA for android emulator   7. Application will run without and issues     *Actual result*  Error is thrown showing no suitable SDK is installed when running from 6.0.4.GA but when I try to run an android build from 6.0.3.GA the build is successful.     *Expected result*  No error should be thrown on both versions of the SDK.    *Log from the CLI is attached below and so are screenshots of my SDK manager*  ",Bug,Critical,Closed,"2017-05-12 20:58:29","2017-05-12 20:58:29",3
"The Titanium SDK ","childprocess.spawn() BAD ARGUMENT : problem with Windows Phone SDK","1- Remove everything about <USER> following these instructions :  https://medium.com/all-titanium/reinstalling-<USER>titanium-on-windows-from-scratch-f7c50e2161f3    2- del /s /q .<USER> didn't work because of nested node_modules creating a too long path that Windows 10 was unable to move or delete (same for .titanium)  Use 7-zip File Manager + shift+delete to delete these long paths.    3- Install <USER>studio, let it download third parties like node.     4- create a default mobile app for android only, launch on emulator or device    5- see attached logs on this ticket (and custom logs for more info) for complete result :     2017-05-10T18:19:57.879Z | DEBUG  | [PLUGIN-LOAD] 0ms C:\Users\user\.<USER>install\6.2.0\package\appc.js  2017-05-10T18:19:58.269Z | DEBUG  | [PLUGIN-LOAD] 390ms C:\Users\user\.<USER>install\6.2.0\package\node_modules\appc-cli-titanium\appc.js  2017-05-10T18:19:58.269Z | DEBUG  | run plugin: C:\Users\user\.<USER>install\6.2.0\package\node_modules\appc-cli-titanium  2017-05-10T18:19:58.269Z | DEBUG  | [PLUGIN-LOAD] 0ms C:\Users\user\.<USER>install\6.2.0\package\node_modules\arrow\appc.js  2017-05-10T18:19:58.269Z | DEBUG  | run plugin: C:\Users\user\.<USER>install\6.2.0\package\node_modules\arrow  2017-05-10T18:19:58.269Z | TRACE  | plugin arrow failed its when function check, skipping...  2017-05-10T18:19:58.269Z | TRACE  | loading plugin titanium for command run CLI options via function  2017-05-10T18:19:58.269Z | TRACE  | loading plugin titanium for command run CLI options via array  2017-05-10T18:19:58.269Z | TRACE  | executing command run with the following plugins:  [titanium]  2017-05-10T18:19:58.285Z | TRACE  | Attempting to load session info from config file  2017-05-10T18:19:58.285Z | TRACE  | check if session is invalidated  2017-05-10T18:19:58.519Z | TRACE  | refresh session expiry to:  1495045206737  2017-05-10T18:19:58.519Z | TRACE  | session expiry 1495045206737 false  2017-05-10T18:19:58.519Z | TRACE  | session already loaded in opts.session  2017-05-10T18:19:58.519Z | DEBUG  | Titanium Downloads Last Checked: 1494402944711  2017-05-10T18:19:58.597Z | TRACE  | No project alloy hook; skipping update to 1.0.0  2017-05-10T18:20:00.214Z | ERROR  | An uncaught exception was thrown!  Bad argument  2017-05-10T18:20:00.214Z | ERROR  | Bad argument  2017-05-10T18:20:00.214Z | TRACE  | TypeError: Bad argument      at TypeError (native)      at ChildProcess.spawn (internal/child_process.js:274:26)      at exports.spawn (child_process.js:362:9)      at winAppDeployCmdEnumerate (C:\ProgramData\Titanium\mobilesdk\win32\6.0.4.GA\node_modules\windowslib\lib\wptool.js:61:11)      at C:\ProgramData\Titanium\mobilesdk\win32\6.0.4.GA\node_modules\windowslib\lib\wptool.js:154:5      at C:\ProgramData\Titanium\mobilesdk\win32\6.0.4.GA\node_modules\windowslib\node_modules\async\lib\async.js:718:13      at async.forEachOf.async.eachOf (C:\ProgramData\Titanium\mobilesdk\win32\6.0.4.GA\node_modules\windowslib\node_modules\async\lib\async.js:233:13)      at _parallel (C:\ProgramData\Titanium\mobilesdk\win32\6.0.4.GA\node_modules\windowslib\node_modules\async\lib\async.js:717:9)      at Object.async.parallel (C:\ProgramData\Titanium\mobilesdk\win32\6.0.4.GA\node_modules\windowslib\node_modules\async\lib\async.js:731:9)      at C:\ProgramData\Titanium\mobilesdk\win32\6.0.4.GA\node_modules\windowslib\lib\wptool.js:151:9      at C:\ProgramData\Titanium\mobilesdk\win32\6.0.4.GA\node_modules\windowslib\lib\windowsphone.js:210:11      at C:\ProgramData\Titanium\mobilesdk\win32\6.0.4.GA\node_modules\windowslib\lib\utilities.js:49:3      at nextTickCallbackWith0Args (node.js:420:9)      at <USER>_tickCallback (node.js:349:13)  ---------------------------------------------      ---  Maybe related to this error, I am not able to configure windows as suggested in the dashboard (see attached screenshots)    Even when I try to select the Windows SDK location (see result on second screenshot)    So Windows is never green-checked on dashboard (see background in screenshots).    I don't understand why it searches for windows Phone SDK where I just want to build for android on this app though, and with registry keys that don't exist on my computer..",Bug,Critical,Closed,"2017-05-11 15:52:48","2017-05-11 15:52:48",3
"The Titanium SDK ","Android: Deprecate invalid proxy constants in 7.0.0","- Deprecate the invalid constants (see here: https://github.com/<USER>titanium_mobile/pull/9031/files)    *TEST CASE*  {code:js}  var audioPlayer = Ti.Media.createAudioPlayer(...);  audioPlayer.STATE_BUFFERING // this should be deprecated    Ti.Media.AudioPlayer.STATE_BUFFERING // this should be used instead  {code}",Bug,High,Closed,"2017-05-11 11:49:28","2017-05-11 11:49:28",2
"The Titanium SDK ","iOS: Only small size photo is uploaded to the server using HTTPClient.","h6.Description  The photo is not uploaded to the server if the data size is bit high. I have attached four photos, among them only first photo(37k) is uploaded to the server and rest of the photo call onerror function. But on android, all the photo is uploaded successfully.    h6.Steps to Reproduce  1. Create a new App  2. Run the following code to the device    {code:title=app.js}          var win = Ti.UI.createWindow({          backgroundColor: 'Green',          layout: vertical        });          // Create a Button.      var Gallery = Ti.UI.createButton({          title: 'Opne Gallery',          height: Ti.UI.SIZE,          width: Ti.UI.SIZE,          top: 50,        });        win.add(Gallery);        var ind = Titanium.UI.createProgressBar({          width: 200,          height: 50,          min: 0,          max: 1,          value: 0,          // style: Titanium.UI.ios.ProgressBarStyle.PLAIN,          top: 20,          message: 'Uploading image',          font: { fontSize: 12, fontWeight: 'bold' },          color: '#888'      });        win.add(ind);          Gallery.addEventListener('click', function(e) {            Titanium.Media.openPhotoGallery({              success: function(event) {                  //upload(event);                  ind.show();                  var xhr = Titanium.Network.createHTTPClient();                  xhr.onload = function(e) {                      Ti.UI.createAlertDialog({                          title: 'Success',                          message: 'status code ' + this.status                      }).show();                  };                    xhr.onerror = function(e) {                      Ti.API.info('post,E.ERROR:' + e.error);                      alert('post,E.ERROR:' + e.error);                  };                  xhr.onsendstream = function(e) {                      ind.value = e.progress;                      Ti.API.info('ONSENDSTREAM - PROGRESS: ' + e.progress);                    };                    xhr.open(POST, https://mobile.cycu.edu.tw/api/sos/panic/);                    xhr.send({                      app_id: '3',                      app_token: 'BEDF0C6702',                      access_id: '181',                      access_token: '181',                      coord: '',                      file: event.media                  });                  },              cancel: function() {                  // called when user cancels taking a picture                  // alert(cancel);              },              error: function(error) {                  // called when there's an error                  alert(error:  + error);              },              saveToPhotoGallery: false,              animated: true,              //overlay: true,              // allowEditing and mediaTypes are iOS-only settings              // allowEditing : false,              mediaTypes: [Ti.Media.MEDIA_TYPE_PHOTO] // Ti.Media.MEDIA_TYPE_VIDEO,          });        });    win.open();  {code}      Thanks",Bug,None,Resolved,"2017-05-11 06:38:27","2017-05-11 06:38:27",0
"The Titanium SDK ","Windows: Catch every exception within async operations","We should make sure to catch every exception that is happening within async operations.    Typically it's going to look like below.    ",Story,Medium,Closed,"2017-05-10 08:51:22","2017-05-10 08:51:22",8
"The Titanium SDK ","Windows: JS Callback in async should be done on UI thread","We should make sure all JavaScript callback that is in async operation is done on UI thread. Otherwise we saw crash when callback touches UI properties especially on Windows Store apps. We haven't usually see this problem on Windows Phone apps.    Typically we use {{TitaniumWindows::Utility::RunOnUIThread}}. It's going to look like below:      ",Story,Medium,Closed,"2017-05-10 08:44:37","2017-05-10 08:44:37",8
"The Titanium SDK ","Add Fortify to product build process","See epic for details. We need to add fortify on-demand scanning to the product build <USER>for Titanium Mobile SDK and upload it to the SDK project: http://fortify.axway.int/ssc/html/ssc/index.jsp#!/version/10244/fix?filterSet=a243b195-0a59-3f8b-1403-d55b7a7d78e6",Story,Critical,Closed,"2017-05-08 16:55:18","2017-05-08 16:55:18",13
"The Titanium SDK ","Windows: ti info should not list being unable to find VS2017 install DLL as an issue","h5.Description    When running ti info -t windows on a Windows machine without VS2017 installed the below will be flagged as an issue, I don't believe this should be flagged as an error, as it more than likely means they just dont have VS2017 installed (which provides the DLL)        h5.Steps to reproduce    # Make sure you do not have VS 2017 installed  # Run ti info -t windows    h5.Actual    The above error will be shown in the issues    h5.Expected    The above should not be shown as an error",Bug,Medium,Closed,"2017-05-08 15:57:01","2017-05-08 15:57:01",5
"The Titanium SDK ","Android: borderRadius doesn't clip the backgroundColor on android 4.1.x, 4.2.x on SDK 6+","Adding a borderRadius on a view won't clip the backgroundColor, so the result will be  a square with a circle behind instead of a bordered circle. Please see screenshot.    This happens on android 4.1.x and 4.2.x, on 4.4.4+ works ok.",Bug,Critical,Closed,"2017-05-08 11:19:53","2017-05-08 11:19:53",5
"The Titanium SDK ","Android: Fix inaccessible Ti.Media constants","- Constant values of proxy classes can only be accessed from instances of the proxy and not directly.    *TEST CASE*  {code:js}  Ti.API.info(      'Ti.Media.AudioPlayer.STATE_BUFFERING: ' + Ti.Media.AudioPlayer.STATE_BUFFERING + '\n' +      'Ti.Media.AudioPlayer.STATE_INITIALIZED: ' + Ti.Media.AudioPlayer.STATE_INITIALIZED + '\n' +      'Ti.Media.AudioPlayer.STATE_PAUSED: ' + Ti.Media.AudioPlayer.STATE_PAUSED + '\n' +      'Ti.Media.AudioPlayer.STATE_PLAYING: ' + Ti.Media.AudioPlayer.STATE_PLAYING + '\n' +      'Ti.Media.AudioPlayer.STATE_STARTING: ' + Ti.Media.AudioPlayer.STATE_STARTING + '\n' +      'Ti.Media.AudioPlayer.STATE_STOPPED: ' + Ti.Media.AudioPlayer.STATE_STOPPED + '\n' +      'Ti.Media.AudioPlayer.STATE_STOPPING: ' + Ti.Media.AudioPlayer.STATE_STOPPING + '\n' +      'Ti.Media.AudioPlayer.STATE_WAITING_FOR_DATA: ' + Ti.Media.AudioPlayer.STATE_WAITING_FOR_DATA + '\n' +      'Ti.Media.AudioPlayer.STATE_WAITING_FOR_QUEUE: ' + Ti.Media.AudioPlayer.STATE_WAITING_FOR_QUEUE  );    Ti.API.info(      'Ti.Media.Sound.STATE_BUFFERING: ' + Ti.Media.Sound.STATE_BUFFERING + '\n' +      'Ti.Media.Sound.STATE_INITIALIZED: ' + Ti.Media.Sound.STATE_INITIALIZED + '\n' +      'Ti.Media.Sound.STATE_PAUSED: ' + Ti.Media.Sound.STATE_PAUSED + '\n' +      'Ti.Media.Sound.STATE_PLAYING: ' + Ti.Media.Sound.STATE_PLAYING + '\n' +      'Ti.Media.Sound.STATE_STARTING: ' + Ti.Media.Sound.STATE_STARTING + '\n' +      'Ti.Media.Sound.STATE_STOPPED: ' + Ti.Media.Sound.STATE_STOPPED + '\n' +      'Ti.Media.Sound.STATE_STOPPING: ' + Ti.Media.Sound.STATE_STOPPING + '\n' +      'Ti.Media.Sound.STATE_WAITING_FOR_DATA: ' + Ti.Media.Sound.STATE_WAITING_FOR_DATA + '\n' +      'Ti.Media.Sound.STATE_WAITING_FOR_QUEUE: ' + Ti.Media.Sound.STATE_WAITING_FOR_QUEUE  );  {code}  *EXPECTED*  - Numerical values representing each constant    *ACTUAL*  - Undefined value",Bug,High,Closed,"2017-05-08 14:21:57","2017-05-08 14:21:57",5
"The Titanium SDK ","Android: Update bundled Android libraries to 25.3.1","Our current SDK release targets API level {{23}}. We should update to {{25.3.1}} for Android N support.",Improvement,High,Closed,"2017-05-08 09:42:54","2017-05-08 09:42:54",5
"The Titanium SDK ","iOS: Hyperloop: keys[num].indexOf is not a function with a module","When trying to compile an Hyperloop enabled project, if there is my charts module present it crash with this error.     See the attached Alloy project. It includes the build folder.",Bug,Critical,Closed,"2017-05-05 05:37:17","2017-05-05 05:37:17",3
"The Titanium SDK ","Android: openPhotoGallery is not working for downloads","{{content://com.android.providers.downloads.documents}} is currently not supported in {{TitaniumBlob.java}}, this prevents obtaining file information for images selected in the {{Downloads}} category of {{Titanium.Media.openPhotoGallery}}.    *TEST CASE*  {code:js}  var w = Ti.UI.createWindow({backgroundColor : 'grey'}),      b = Titanium.UI.createButton({          title : 'OPEN GALLERY',          top : '10dp'      }),      iv = Ti.UI.createImageView({          top : '65dp',          width : '95%'      }),      sp = 'android.permission.READ_EXTERNAL_STORAGE';    function openGallery() {      Ti.Media.openPhotoGallery({          mediaTypes : [Ti.Media.MEDIA_TYPE_PHOTO],          success: function(e) {              iv.height = e.media.height * (iv.rect.width / e.media.width);              iv.image = e.media;                alert('filename: ' + e.media.file.name);              alert('filesize: ' + e.media.length);          },          error: function(e) {              Ti.API.error(JSON.stringify(e));          }      });  }    b.addEventListener('click', function(e) {      if (Ti.Android.hasPermission(sp)) {          openGallery();      } else {          Ti.Android.requestPermissions([sp], function(e) {              if (e.success) {                  openGallery();              } else {                  Ti.API.info('ERROR: ' + e.error);              }          });      }  });    w.add(b);  w.add(iv);    w.open();  {code}",Bug,Critical,Closed,"2017-05-05 12:23:06","2017-05-05 12:23:06",5
"The Titanium SDK ","Android: Add support for the roundIcon attribute","Android 7.1 allow applications to show a circular icon in the launcher, for devices that supports them (ex. Pixel & Pixel XL).     Titanium should support the android:roundIcon attribute in AndroidManifest.xml.    {code:lang=xml}   <application android:icon=@mipmap/ic_launcher android:roundIcon=@mipmap/ic_launcher_round >  {code}    ",Improvement,Critical,Closed,"2017-05-05 00:40:23","2017-05-05 00:40:23",1
"The Titanium SDK ","Hyperloop: Android - How to instantiate native Android Drawable?","*Problem*  I am trying to reference an image file in Hyperloop to instantiate a native Android object (for example, a Drawable).    I am currently using Titanium Hyperloop to create a custom Android class that I wish to port over to my app built on <USER> From the Hyperloop documentation, I can reference the native Android Drawable with:        Now, I wish to instantiate a Drawable object through the native Drawable.createFromPath() constructor but my problem is that Titanium is not recognizing the path name to my image in my resources folder in my app directory. For example, the path to my image file is:    {my_app}/assets/images/myImage.png    Any paths I try to pass into the constructor give a No such file or directory exception. How do I work with Titanium Hyperloop to construct a native Android Drawable object?    *Test Case*        *Log*  No such file or directory exception    *Community Discussion*  [http://stackoverflow.com/questions/43726570/titanium-hyperloop-how-to-instantiate-native-android-drawable]  ",Story,Critical,Closed,"2017-05-04 16:24:29","2017-05-04 16:24:29",1
"The Titanium SDK ","Hyperloop: Android - Support to catch native exceptions","It would be interesting to catch exceptions thrown in the hyperloop proxy.    Example:    {code:javascript}  var Activity = require('android.app.Activity'),      activity = new Activity(Ti.Android.currentActivity);      var PackageManager = require('android.content.pm.PackageManager');      var pm = activity.getPackageManager();    var isInstalled = true;    var package = 'com.thisPackageNotExists';      try {      var packageInfo = pm.getPackageInfo(package, PackageManager.GET_ACTIVITIES); //Throws NameNotFoundException    } catch (error) {      //This block never is executed if the exception is thrown      isInstalled = false;      console.log('Exception PM : ' + JSON.stringify(error));    } finally {      alert(package + ' is installed: ' + isInstalled);    }  {code}    Exception Example:      ","New Feature",Critical,Closed,"2017-05-04 07:07:41","2017-05-04 07:07:41",5
"The Titanium SDK ","Windows: Failed to install app on device","Unable to install app on Windows 10 Mobile device. App deployment failed at install dependencies, but I found that we can actually skip the step and then deployment went well.             I suspect deployment behavior has been changed at some point of SDK update, so I would suggest adding new command line flag {{skipInstallDependencies}} to keep backward compatibility.    I would like to push this to 6.1.x because it's critical.    *Step to Test*        *Expected*    Deployment and app launch should not fail.  ",Bug,Critical,Closed,"2017-05-04 06:06:49","2017-05-04 06:06:49",5
"The Titanium SDK ","Android: Wrong rendering when using borderRadius and opacity on the same view element","I have narrowed the issue down to this. A view container:                <View id=x/>    with this TSS:    #x: {   left:100,   width:70,   height:70,   opacity:0.9,   backgroundColor:'blue',   borderRadius:35  }    ... will just show the lowest 10-20 % of the round box on Android API 22 and 21. Ok on iOS and Android API 23.    If I change opacity to 1.0 it will render correctly. If I comment out borderRadius then opacity works as expected.",Bug,Critical,Closed,"2017-04-30 14:53:38","2017-04-30 14:53:38",5
"The Titanium SDK ","Android: Hybrid CommonJS and Native Modules don't export the commonjs code","When I create a pure Javascript Module, any exported method is accessible.    In detail for the module I've:  # Created a new Mobile Module Project, from <USER>Studio, with id (for example) it.module.test  # Inside _assets_ folder, I've created a js file called _it.module.test.js_  # Into _it.module.test.js_ I have:       Now I package this module directly from <USER>Studio and install this module inside a Test Application.    Into this application I do:      And the result is *null*.    The problem is that the native module classes are being called instead of the CommonJS ones as per the docs.    __UPDATE__    After several tests, it seems that the problem is the Titanium SDK 4.0.0.  When I create the module project inside <USER>Studio and selecting a previous version of Titanium SDK (3.4.1 for example) all works perfectly with the same code. ",Bug,Critical,Closed,"2017-05-03 17:24:12","2017-05-03 17:24:12",8
"The Titanium SDK ","Windows: Hyperloop unable to compile generic collections","Unable to require generic collections. It causes compile error.        Expected: It should not cause compile error.    ",Bug,High,Closed,"2017-05-03 05:46:42","2017-05-03 05:46:42",3
"The Titanium SDK ","iOS: UI blocked + Network Indicator invisible during synchronous HTTP-Requests with run-on-main-thread","When using {{run-on-main-thread}}, synchronous HTTP requests are blocking the UI (and the internal status-bar network activity indicator). Using kroll-thread works fine. Noticed the issue when fixing TIMOB-24648.    Test-Case:  {code:js}  var win = Ti.UI.createWindow({      backgroundColor: '#fff'  });     var btn = Ti.UI.createButton({      title: 'Trigger'  });     btn.addEventListener('click', function() {      var url = https://httpbin.org/delay/2;      var client = Ti.Network.createHTTPClient({          // function called when the response data is available          onload : function(e) {              Ti.API.info(Received text:  + this.responseText);              alert('success');          },          // function called when an error occurs, including a timeout          onerror : function(e) {              Ti.API.debug(e.error);              alert('error');          },          async: false,          timeout : 15000  // in milliseconds      });      // Prepare the connection.      client.open(GET, url);      // Send the request.      client.send();  });     win.add(btn);  win.open();  {code}",Bug,None,Resolved,"2017-05-02 16:14:05","2017-05-02 16:14:05",2
"The Titanium SDK ","Android: Constructor values not set correctly in KrollRuntime","In some cases the initial value of a property will not be set correctly in KrollRuntime, even though they are correct in the Java.    {code:js}  var win = Ti.UI.createWindow({backgroundColor : 'gray', layout: 'vertical'}),      tf = Ti.UI.createTextField({          value: 'TEXT',          passwordMask: true      }),      btn = Ti.UI.createButton({title: 'passwordMask VALUE'});    btn.addEventListener('click', function() {      // passwordMask will be undefined      Ti.API.info('passwordMask: ' + tf.passwordMask);  });    win.add(tf);  win.add(btn);    win.open();  {code}",Bug,Low,Closed,"2017-05-02 14:37:27","2017-05-02 14:37:27",3
"The Titanium SDK ","Windows: Hyperloop List.Item (indexer) property does not work","Accessing [Item property \(indexer\) in Generic.List|https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1.item?view=netframework-4.7#System_Collections_Generic_List_1_Item_System_Int32_] throws exception. We would like to use an array-style syntax to access element of the collection like below.       ",Bug,Medium,Closed,"2017-05-02 03:00:04","2017-05-02 03:00:04",5
"The Titanium SDK ","Windows: Decouple Hyperloop logic and Ti SDK","Currently Hyperloop for Windows is highly coupled with Titanium SDK even after we modularize Hyperloop (TIMOB-24093). For instance, some Hyperloop-related code generation logic and templates are done in Titanium SDK. This situation is not ideal and we want to move all Hyperloop-related logic to Hyperloop module itself, that way we can update Hyperloop _without_ updating Titanium SDK.    For now I can find following parts that can be decoupled with Titanium SDK    - TItaniumWindows_Hyperloop code generation  - Hyperloop event handling code generation    We want to move these logic to Hyperloop plugin.  ",Story,Medium,Closed,"2017-04-29 14:15:41","2017-04-29 14:15:41",13
"The Titanium SDK ","Android: Support TextInputLayout","Support TextInputLayout : https://developer.android.com/reference/android/support/design/widget/TextInputLayout.html","New Feature",Medium,Closed,"2017-04-28 01:55:22","2017-04-28 01:55:22",8
"The Titanium SDK ","Windows Hyperloop: accessing generic collections throws exception","Accessing properties/functions on generic collections on Hyperloop throws exception.        *Expected:*    * This should show alert dialog with two buttons: \[OK\] \[Cancel\] when you click Show Alert  * When you click \[OK\] you should see `Pushed OK`  * When you click \[Cancel\] you should see `Pushed Cancel`  ",Bug,Medium,Closed,"2017-04-27 02:09:08","2017-04-27 02:09:08",5
"The Titanium SDK ","ArrowDB - User's stats for Photos and Storage always 0","A User uploads a Photo to ArrowDB;   When I query the User, the *stats* property for that User shows:        Regardless of the number of Photos uploaded (even processed:true), the stats always show 0 for Photos and Storage.",Bug,Critical,Reopened,"2017-04-26 13:01:19","2017-04-26 13:01:19",1
"The Titanium SDK ","(Windows) Unable to run a Windows application using the 6.1.0.v20170426072049 build","Using the latest 6.1.0 build (6.1.0.v20170426072049) I am unable to run any created applications to a Window Phone or Windows Emulator.     Enter {{appc ti sdk install -b master -d}} in the appc CLI to get the latest build.     Steps to reproduce:   1. Open <USER>Studio   2. Go to {{file}} -> {{New}} -> {{mobile app project}}   3. Select a classic default project and press {{next}}  4. Enter {{project name}} and {{app id}}  5. Press {{finish}} to create the application   6. Go to the {{tiapp.xml}} and change the SDK version to {{6.1.0.v20170426072049}}  7. Run the application to a device or emulator     *Expected result*  Application should run without any issues     *Actual result*  Following error is shown in the console:      Using a previous SDK build (6.1.0.v20170421082637) the application runs without any issues.",Bug,High,Closed,"2017-04-26 17:30:01","2017-04-26 17:30:01",3
"The Titanium SDK ","Cannot Build apk file due to Socket hang up","When attempting to build production version of an App the <USER>fails while executing C:\ProgramData\Titanium\mobilesdk\win32\5.5.0.GA\android\titanium_prep.win32.exe  command.  An uncaught exception is thrown and socket hang up message is displayed.  See attached Cintas-APPC-JobLog.txt file for details of the issue.",Bug,Critical,Closed,"2017-04-20 12:39:31","2017-04-20 12:39:31",1
"The Titanium SDK ","Android: Add wakeLock to NotificationManager","Add the possibility to add a wakeLock to {{Titanium.Android.Notification}} to switch on the screen when a Notification is fired      *Example:*  {code:javascript}  var win = Ti.UI.createWindow({});  var btn = Ti.UI.createButton({   title: click  });  win.add(btn);    btn.addEventListener(click, function() {   _.delay(function() {    var intent = Ti.Android.createIntent({     action: Ti.Android.ACTION_MAIN,     className: 'com.<USER>notificationsample.NotificationsampleActivity',     packageName: 'com.<USER>notificationsample'    });    intent.flags |= Ti.Android.FLAG_ACTIVITY_CLEAR_TOP | Ti.Android.FLAG_ACTIVITY_NEW_TASK;    intent.addCategory(Ti.Android.CATEGORY_LAUNCHER);      var pending = Titanium.Android.createPendingIntent({     intent: intent,     flags: Titanium.Android.FLAG_UPDATE_CURRENT    });      var notification = Titanium.Android.createNotification({     contentTitle: 'Something Happened',     contentText: 'Click to return to the application.',     contentIntent: pending,     wakeLock: 100    });    Titanium.Android.NotificationManager.notify(1, notification);   }, 4000);  });    win.open();  {code}    Add permission to tiapp.xml          * start the app  * click the button and lock the device  * notification will appear and screen turns on    It will stay on the {{wakeLock}} time (+normal screen on time)","New Feature",Critical,Closed,"2017-04-25 18:46:19","2017-04-25 18:46:19",3
"The Titanium SDK ","Windows: Hyperloop Collections support with Generics","On Hyperloop Windows, there's no way to handle collections with generics like {{IList<int>}}.    {code:title=C++/CX}  Platform::Collections::Vector<int>^ vec = ref new Platform::Collections::Vector<int>();  vec->Append(1);  vec->Append(2);    ",Improvement,Medium,Closed,"2017-04-26 04:05:19","2017-04-26 04:05:19",8
"The Titanium SDK ","Android: Change help text for --device-id to use id instead of name.","h5.Description:  Due to the new Android tooling changes from Google, the help text for --device-id in appc ti build -h command should be the id of the Android emulator ..... instead of the name of the Android emulator ..... .  ",Bug,Low,Closed,"2017-04-25 19:01:21","2017-04-25 19:01:21",1
"The Titanium SDK ","Hyperloop: iOS - Drop support for CocoaPods 0.39 and below","To reduce maintenance work we should drop the support for CocoaPods 0.39 and below in Hyperloop projects. CocoaPods 1.0 is almost around for a year now so it should be safe to move forward and only support this version, especially after http://blog.cocoapods.org/Sharding/.",Story,Medium,Closed,"2017-04-25 12:53:57","2017-04-25 12:53:57",3
"The Titanium SDK ","Fix Titanium SDK build and package process of Android on Windows","The current Titanium SDK build <USER>for Android is broken on Windows:    ",Story,Medium,Resolved,"2017-04-21 21:58:04","2017-04-21 21:58:04",5
"The Titanium SDK ","Windows -HTTPClient - responseText is not cleared between two requests","I use the HTTPClient to do a service request.  Doing simultaneous http request , the responseText holds values of the first request.  As a result the values gets duplicated.  Below is the code.        The response of the above as below  ----  [INFO] :   Server executed 1 time(s)  [INFO] :   {  [INFO] :     args: {},   [INFO] :     headers: {  [INFO] :       Accept-Encoding: gzip, deflate,   [INFO] :       Connection: close,   [INFO] :       Host: httpbin.org,   [INFO] :       User-Agent: <USER>Titanium/6.0.3.GA (Microsoft Virtual/6.3.9651.0; windowsphone; English_United States.1252;),   [INFO] :       X-Titanium-Id: 49c36bc6-4470-4689-9111-a81411c54643  [INFO] :     },   [INFO] :     origin: 182.75.8.94,   [INFO] :     url: https://httpbin.org/get  [INFO] :   }    [INFO] :   Server executed 2 time(s)  [INFO] :   {  [INFO] :     args: {},   [INFO] :     headers: {  [INFO] :       Accept-Encoding: gzip, deflate,   [INFO] :       Connection: close,   [INFO] :       Host: httpbin.org,   [INFO] :       User-Agent: <USER>Titanium/6.0.3.GA (Microsoft Virtual/6.3.9651.0; windowsphone; English_United States.1252;),   [INFO] :       X-Titanium-Id: 49c36bc6-4470-4689-9111-a81411c54643  [INFO] :     },   [INFO] :     origin: 182.75.8.94,   [INFO] :     url: https://httpbin.org/get  [INFO] :   }  [INFO] :   {  [INFO] :     args: {},   [INFO] :     headers: {  [INFO] :       Accept-Encoding: gzip, deflate,   [INFO] :       Connection: close,   [INFO] :       Host: httpbin.org,   [INFO] :       User-Agent: <USER>Titanium/6.0.3.GA (Microsoft Virtual/6.3.9651.0; windowsphone; English_United States.1252;),   [INFO] :       X-Titanium-Id: 49c36bc6-4470-4689-9111-a81411c54643  [INFO] :     },   [INFO] :     origin: 182.75.8.94,   [INFO] :     url: https://httpbin.org/get  [INFO] :   }      Please let me know if you need more information.  ",Bug,Critical,Closed,"2017-04-19 09:48:27","2017-04-19 09:48:27",5
"The Titanium SDK ","Windows: Native-like event handling syntax for Hyperloop","Currently we've been using Titanium-like {{addEventListener}} to handle native event, but we might want to use more native-like syntax for it.    {code:title=C++/CX}  click_event_ = component->Tapped += ref new TappedEventHandler([this, ctx](Platform::Object^ sender, TappedRoutedEventArgs^ e) {      // do something  });      *AFTER*        We might want to use {{+=}} just like native code does instead of {{=}}, because it clearly indicates we are adding something.  ",Improvement,Medium,Open,"2017-04-21 01:12:22","2017-04-21 01:12:22",5
"The Titanium SDK ","Windows: Reference 3rd party library with <SDKReference> & <PackageDependency>","H5. Issue Description     Our third party library requires the Microsoft Visual C++ 2013 Runtime Package for Windows Universal to be present in the Appx. For testing purposes, we open the App's solution file and manually add the Universal Windows Extensions in the references to the App's project. For what I have been able to tell, this adds an entry to the Project File:    <ItemGroup>      <SDKReference Include=Microsoft.VCLibs.120, Version=14.0 />    </ItemGroup>    This in turn, adds this to the manifest:    <Dependencies><PackageDependency Name=Microsoft.VCLibs.120.00.Debug.Universal MinVersion=12.0.30501.0 Publisher=CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US /></Dependencies>    And, package ucrtbased.dll but there might be other things happening.    Could AppC provide a way to add this reference to the generated project file?    ","New Feature",High,Closed,"2017-04-20 21:43:05","2017-04-20 21:43:05",8
"The Titanium SDK ","Android: respackage value in native module's manifest is ignored","Hi !     We are attempting to upgrade an Android module to SDK 6.0.     Here is our original source code:      We changed the following line:    to any one of the following substitutes:    None of which worked and in every case we got the following exception:    ",Bug,Critical,Closed,"2017-04-20 18:08:43","2017-04-20 18:08:43",5
"The Titanium SDK ","Android: Network connectivity change event is called initially when there is no change","Android: Network change event is called initially when there is no change. Change event should only show when a change occurs and not at application launch.",Bug,None,Closed,"2017-04-20 18:06:03","2017-04-20 18:06:03",1
"The Titanium SDK ","Android: Setting backgroundImage to a web URL causes a crash if JS is running on the UI thread","*Summary:*  Setting Android {{View}} property backgroundImage to a URL will cause a crash if tiapp.xml property run-on-main-thread is set to {{true}}.    _(This also happens with {{ImageView}} defaultImage property as well.)_    *Steps to reproduce:*  # Uninstall the app from the device if already installed. (Will delete cached web responses.)  # Make sure the Android device has Internet access.  # Set tiapp.xml file property run-on-main-thread to {{true}}.  # Build and run the below code.  # Notice that the app crashes/hangs on startup.    tiapp.xml  {code:xml}  <?xml version=1.0 encoding=UTF-8?>  <ti:app xmlns:ti=http://ti.<USER>org>   <property name=run-on-main-thread type=bool>true</property>  </ti:app>  {code}    app.js  {code:java}  var window = Ti.UI.createWindow();  window.add(Ti.UI.createView({   backgroundImage: http://raw.githubusercontent.com/recurser/exif-orientation-examples/master/Portrait_1.jpg,  }));  window.open();  {code}      ----  *Original Post:*  I am unable to set background image for an imageView using an external URL. It crashes the app, but only if ran via main thread.    *index.xml*  {code:xml}  <Alloy>   <Window>           <ImageView id=imageView />   </Window>  </Alloy>  {code}    *index.js*  {code:js}  var b = http://www.onlineinstruments.co.in/assets/images/Online%20Logo_PNG.png;  $.imageView.setBackgroundImage(b);  {code}",Bug,Critical,Closed,"2017-04-20 09:40:20","2017-04-20 09:40:20",7
"The Titanium SDK ","Windows: Remove all children is not working on windows devices","H5. Issue Description     Using Ti.UI.View.removeAllChildren on a View element on Windows devices results in no children being removed. There is a viable workaround in iterating through each child of a View and removing it individually. However, trying to use removeAllChildren then using this workaround results in nothing happening (it is possible that removeAllChildren is somehow removing items from the View.children array without affecting the UI).    h5. Steps to Reproduce    Here is a bare bones project that reproduces this issue: https://github.com/bbuehler-axway-support/windows-removeAllChildren    To use this example app, add children to the view by clicking the Add Child View button. Clicking the Remove All Children button does nothing. Kill and relaunch the app. Add more child views. Clicking Remove Each Child button removes all children. Add more child views. Clicking the Remove All Children button still does nothing; without killing and relaunching the app, add more child views and remove them with Remove Each Child. Child views added before clicking Remove All Children will remain while child views added afterward will be removed correctly.  ",Bug,High,Closed,"2017-04-19 21:52:22","2017-04-19 21:52:22",8
"The Titanium SDK ","Unable to build app due to being offline","H5. Issue Description     Unable to build sample applications due to the following error: You are offline but this is the first time you are building this application with this configuration. You must be online once with this build configuration and then you can do subsequent builds offline.     Customer is logged into the Studio and the correct proxy is entered. Internet connection is also connected.     Log Attached ",Bug,None,Resolved,"2017-04-19 21:09:42","2017-04-19 21:09:42",1
"The Titanium SDK ","Android: Ti.UI.SIZE doesn't work properly with horizontal layouts (regression)","Opening based on the (possible) regression caused by TIMOB-24243. The issue was introduced in 6.0.2 and persists on 6.0.3, 6.1.0 and master as well. It was only seen in one project so far that may used a workaround for the bug we fixed in TIMOB-24243, so it might be invalid. Keeping it for the case others run into it.",Bug,Critical,Resolved,"2017-04-19 17:19:56","2017-04-19 17:19:56",5
"The Titanium SDK ","Windows: Hyperloop addEventListener doesn't work","Use of Hyperloop {{addEventListener}} throws unknow exception.        *Expected*  Pushing PUSH button should show pushed dialog.    *Note*  After some investigation, I found that at some point of Titanium SDK update, we updated {{uglify-js}} but it looks like it contains breaking changes. Uglify-js doesn't resolve constructor ({{init}} property of {{AST_Symbol}} on its [scope analyzer|http://lisperator.net/uglifyjs/scope]. It looks like there was breaking changes there, maybe from uglify-js 2.8.x, because I saw uglify-js 2.7.x (Titanium SDK {{6.1.0.v20170315131319}}) worked fine.  ",Bug,Critical,Closed,"2017-04-19 05:58:20","2017-04-19 05:58:20",8
"The Titanium SDK ","Android: Loading images via HTTPS TLS 1.1 or newer fails on Android 4.x","*Summary:*  Images loaded via HTTPS from a server that uses a TLS 1.1 or TLS 1.2 certificate will fail to load on an Android OS version older than 5.0.    *Steps to reproduce:*  # Copy and paste the below code to a Titanium project.  # Run it on an Android 4.x device.  # Result: Notice that the image fails to load.  # Run it on an Android 5.x or newer device.  # Result: Image is successfully loaded and displayed.        *Reason:*  Android 5.0 and newer devices support TLS 1.0, 1.1, and 1.2 by default without any code changes, but older Android OS versions only support TLS 1.0 by default.    *Work-around:*  Developers can work-around this issue by download the image themselves via the HTTPClient API and then displaying the downloaded file. Titanium's HTTPClient supports TLS 1.1 and 1.2 on Android 4.1 and higher.",Bug,Medium,Closed,"2017-04-19 02:14:35","2017-04-19 02:14:35",5
"The Titanium SDK ","Use package-lock.json instead of checking in node_modules","We've long checked in our node_modules folder when we update our npm dependencies. I believe we've done so to avoid npm dependency resolution issues?    If so, we could move to using yarn and lock file to ensure the full tree of dependency versions matches on everyone's systems and builds - and avoid bloating the hell out of our repo size and history.",Story,High,Closed,"2017-04-18 15:55:45","2017-04-18 15:55:45",5
"The Titanium SDK ","Windows: Native view should use absolute position in Ti View","When Hyperloop native view is added to Titanium View, Titanium layout system should use native view's position.        *Expected*    Red box should be placed at position {{left=100, top=200}}    *Actual*    Red box is placed at center of the Window  ",Bug,Medium,Closed,"2017-04-17 06:53:19","2017-04-17 06:53:19",3
"The Titanium SDK ","Android: Navigation parity for a cross-platform Ti.UI.NavigationWindow","On iOS, we have the {{Ti.UI.iOS.NavigationWindow}} to handle a stack of windows that can be opened and closed. Unfortunately, on Android and Windows, we have to do that manually and it required the (Alloy) developer to either write custom (per platform) logic or use plugins like [xp.ui|https://github.com/FokkeZB/UTiL/blob/master/app/lib/xp.ui.js].    Proposed API-changes:  * iOS: Deprecate {{Ti.UI.iOS.NavigationWindow}} in favor of {{Ti.UI.NavigationWindow}}  * Android / Windows: Support NavigationWindow, add the native [back button|https://developer.android.com/training/implementing-navigation/temporal.html]  * Android / Windows: Expose the {{openWindow}}, {{closeWindow}} and {{popToRootWindow}} if possible  * Adjust Alloy to make the {{<NavigationWindow>}} tag available for all platforms","New Feature",High,Closed,"2017-04-16 18:32:58","2017-04-16 18:32:58",13
"The Titanium SDK ","Android: WebView: Support setMediaPlaybackRequiresUserGesture setting","Android WebView does not support [https://developer.android.com/reference/android/webkit/WebSettings.html#setMediaPlaybackRequiresUserGesture(boolean)] setting currently ",Improvement,Low,Open,"2017-04-16 08:12:54","2017-04-16 08:12:54",5
"The Titanium SDK ","iOS: SDK upgrade to 6.0.3.GA broke push notification registration","h6.Issue Detail    Building push notification enabled iOS app for enterprise distribution with TiSDK 6.0.3.GA produces this error when registering for push notifications:      h6.Note  Building with 6.0.1.GA works as expected.     h6.Reproduce    1. Add following code to default new project  2. Build for enterprise distribution  3. Install the generate ipa file on an iPhone  4. Launch the app  5. When prompted, allow push notifications  6. Observe the error in the alert no valid 'aps-environment' entitlement string found for application    ",Bug,Critical,Closed,"2017-04-14 01:44:55","2017-04-14 01:44:55",2
"The Titanium SDK ","Android AndroidManifest valid tokens","Recognise newer AndroidManifest attributes as valid tokens when input in tiapp.xml",Improvement,None,Closed,"2017-04-13 22:39:58","2017-04-13 22:39:58",1
"The Titanium SDK ","CLI - Building with deploy type flag is ignored when using Liveview","If I use {{\-\-liveview}} for building using the CLI, {{\-\-deploy-type}} gets ignored and the build will always be using the {{development}} “deploy-type”, no matter what.",Bug,Critical,Closed,"2017-04-06 11:22:21","2017-04-06 11:22:21",1
"The Titanium SDK ","iOS : Picker selectionIndicator is not visible","selectionIndicator of picker is not visible.   I try to set selectionIndicator = true in the creation of the picker, after adding the PickerRow, and after adding the picker to the window. Same result.    If i force an error (try button btn of the test code), the selectionIndicator appear.    Test code (from http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Picker , adding the button)  ",Bug,Critical,Resolved,"2017-04-12 13:34:38","2017-04-12 13:34:38",1
"The Titanium SDK ","Windows: Add support for Visual Studio 2017 (26403.03)","It's possible for {{vsInfo.vsDevCmd}} to use the long path with spaces {{C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\VsDevCmd.bat}} instead of the short path {{'C:\\PROGRA~2\\MICROS~2\\2017\\COMMUN~1\\Common7\\Tools\\VsDevCmd.bat'}}.    This prevents {{spawn}} from executing {{VsDevCmd.bat}}.",Bug,High,Closed,"2017-04-10 14:41:19","2017-04-10 14:41:19",3
"The Titanium SDK ","iOS: Require Swift 3.1 for watchOS templates, remove Swift 2.3 support","Looking at recent Apple changes, Xcode 8.3+ requires developers to use Swift 3. We still support Swift 2.3 although Xcode 8.3 is required for the latest Titanium SDK 6.0.3.GA, so we should align the Swift support to latest as well to align the tooling compatibility.    This will also be important for the upcoming Swift 4 release in September along with iOS 11 and Xcode 9, because Swift 4 will be backwards compatible with 3.1, so we won't have to mess around with Swift 2.3 there anymore - one thing less to struggle with during that time.",Improvement,High,Closed,"2017-04-08 14:00:44","2017-04-08 14:00:44",5
"The Titanium SDK ","iOS CLI: Improve the way dist-appstore build works","First some background. I created [TiFastlane|https://github.com/<USER>TiFastlane] as a way to be able to use [Fastlane|https://fastlane.tools/] with Titanium development. To be able to use Fastlane when archiving a build it needs to be into an .ipa archive, the way I used to do that is by a small hack, using {{dist-adhoc}} with an App Store profile. This worked until XCode 8.3 in which the Legacy API was disabled.    This puts me in the current situation to which I need some assistance.    The way I'm looking to solve it is to:  # Create the .archive: {{appc run -p ios -T dist-appstore}}  # Use the XCode exporter to export the archive into an ipa {{xcodebuild -exportArchive -archivePath ~/Library/Developer/Xcode/Archives/2017-04-06/My App 2017-04-06 10-24-57.xcarchive -exportPath ./dist -exportOptionsPlist ./build/iphone/Info.plist}}    I tested this manually and it works, but there are some issues I'm encountering to be able to have this work as real CLI option.    *Missing method export option in the plist*    The plist generated by the CLI is missing the method, which then has xcodebuild fail when doing the export because it defaults to development so the code signing is wrong. To fix this the correct method needs to be present in the plist:      This issue doesn't happen on 6.0.1.GA, only in the latest version.    *XCode Archiver Launch*    The other issue is that when the {{dist-appstore}} build finishes, it automatically tries to launch the XCode archive manager. This makes it necessary to have an extra human intervention in the step, which breaks the whole automatic <USER>    It would be great if we could have a way to override that feature, so that when the build finishes it doesn't do anything else.      I'm more than willing to help out in doing changes or tests on the CLI to achieve this, but this is my first time hacking the Ti CLI so I'm a bit lost on what goes where.    Aside from these fixes, it might be worth it to add a {{--export-ipa}} option on the build <USER>so that the CLI automatically does the second step of calling the exporter so we end up with an ipa ready to use for the App Store.    ",Improvement,Critical,Closed,"2017-04-07 14:20:56","2017-04-07 14:20:56",3
"The Titanium SDK ","UniversalWindowsApp: Ti.Network change event crashes the app","h5. Problem Description:    Whenever the change event is triggering, the app crashes with error:    h5. Steps to Reproduce:    1. Launch sample app (make sure you're online):Files are attached for creating sample Alloy app.    2. Run the command to launch the ws-local app:      appc ti build -p windows -T ws-local    3. Turn the internet connection off.  4. Observe crash and error in console.    h5. Expected Result:  App should not crash on network event change and should only print event message on console as per the index.js file.    h5. Actual Results:  Below Error message generated on console and app is crashing.    [ERROR] Application Error: Runtime Error: unknown exception  [ERROR] Error: unknown exception  [ERROR] Application Error: This API must be called from a thread with a CoreWindow or a window must have been set explicitly.  [ERROR] Error: unknown exception    h5. Observation: App does not crash when we tried it on Windows 10 Emulator , only logs below exception on console screen:    [ERROR] Application Error: Runtime Error: unknown exception  [ERROR] Error: unknown exception",Bug,High,Closed,"2017-04-05 23:04:12","2017-04-05 23:04:12",5
"The Titanium SDK ","Index is not refreshed on click of tableviewrow item in Android 7.0","h6. Issue  Problem getting the index and rowdata of the clicked row item. Whenever the table view row item is clicked, we are getting incorrect index and rowdata, always the last rows index and rowdata is returned.    h6. Expected outcome  Correct index and rowdata returned.     h6. Steps to recreate  Create a new classic project   replace app.js with attached app.js  run on AndroidN OS 7.x",Bug,High,Closed,"2017-04-05 18:24:05","2017-04-05 18:24:05",5
"The Titanium SDK ","iOS: XML unit tests crash for iOS intermittently on build machines","Our builds have suddenly started intermittently failing for iOS due to unit test crashes. Specifically, the XML tests are now crashing. Please find attached a number of crash reports from one of the build nodes.    Appears that there's some bad GC/dealloc of xml structures.",Bug,High,Closed,"2017-04-05 17:51:01","2017-04-05 17:51:01",1
"The Titanium SDK ","Allow environment specific settings for tiapp.xml","Use cases:  - defining a different name for the development build of your app  - Having a custom property in tiapp.xml (like gcm.senderid for https://github.com/caffeinalab/ti.goosh) with different values for development vs production  - Basically any property in tiapp.xml that should have a different value in production versus development or test    This improvement is directly related to https://jira.<USER>org/browse/TIMOB-24162.    Developers are currently limited to 3 environments which is development, test and production. Each of these environments seem to come with custom restrictions, for instance you cant seem to build a production environment on an Android Emulator (http://docs.<USER>com/platform/latest/#!/guide/Titanium_Command-Line_Interface_Reference).    One way to make this work, is a single *config/tiapp/* directory which hold files including `production.xml`, `development.xml`, `any_environment_you_need.xml` which extend of the base config file *tiapp.xml*. When compiling the app, the given *--deploy-type* should then select the correct file and put it on top of *tiapp.xml*.",Improvement,Critical,Resolved,"2017-04-04 14:27:22","2017-04-04 14:27:22",1
"The Titanium SDK ","Windows: Ti.UI.FILL resizes Label incorrectly","Setting {{Ti.UI.FILL}} for {{Label}} resizes Label incorrectly.    *Code to reproduce:*      *expected:*  !expected.png|thumbnail!    *actual:*  !actual.png|thumbnail!",Bug,High,Closed,"2017-04-04 02:02:02","2017-04-04 02:02:02",3
"The Titanium SDK ","Android: Build breaks if <icon> contains a non-[a-z0-9_.] character","When building an app for Android and the {{<icon>}} in the tiapp.xml refers to a filename with a character that doesn't match the regex {{a-z0-9_.}}, then the build fails with:        Workaround is to only use {{a-z0-9_.}} characters in the appicon filename.    This ticket is invalid if we get around to creating a universal asset management system.",Bug,None,Resolved,"2017-04-03 23:18:27","2017-04-03 23:18:27",5
"The Titanium SDK ","Hyperloop Android: Message: Uncaught TypeError: Cannot read property 'apiName' of null","Customers wanted to integrate Twilio Android SDK using Hyperloop. But when they try to call disconnect function its showing error.      h2. Steps to Reproduce:   1. Import attached project  2. Run in android device   3. Click on *Connect* button. Alert message will display when connected   4. Clicked on *disconnect* button   5. App will throw error          h2. *Test Project/Code *    Link: https://www.dropbox.com/s/91uizz6dj3jluew/TwilioTestAndroid.zip?dl=1      h2. Error Logs         ",Bug,Critical,Closed,"2017-04-03 06:40:20","2017-04-03 06:40:20",5
"The Titanium SDK ","TiAPI: Add support for Promises","The modern development world is highly asynchronous.    I agree, so we should add support for promises that can be used from the JS world to improve the general callback structure. On the native side, we should a new class TiPromise that can be used in the SDK, native modules and Hyperloop to allow promises.    I am not completely sure about the architecture so far, but we should definitely talk about it!",Epic,High,"In Review","2017-04-01 19:01:59","2017-04-01 19:01:59",0
"The Titanium SDK ","Android: Issue with SDK while accessing from API Gateway","While using generated SDK code from API Portal, unable to run the mobile application based on sdk code. After following steps mentioned in readme, We also tried couple of different ways to resolve it as suggested by SDK team, but it seems that alloy project is unable to recognize those files (of sdk code). Due to which we get error for module not found.    As of now we have followed each step given in readme but when trying to run it, application returns below error:    [ERROR] :  TiExceptionHandler: (main) [1074,1074] ----- Titanium Javascript Runtime Error -----  [ERROR] :  TiExceptionHandler: (main) [1,1075] - In ti:/module.js:303,2  [ERROR] :  TiExceptionHandler: (main) [1,1076] - Message: Uncaught Error: Requested module not found: ./studentcar/index  [ERROR] :  TiExceptionHandler: (main) [0,1076] - Source:     throw new Error(Requested module not found:  + request); // TODO Set 'code' property to 'MODULE_NOT_FOUND' to match Node?  [ERROR] :  V8Exception: Exception occurred at ti:/module.js:303: Uncaught Error: Requested module not found: ./studentcar/index    Expected Result: Using generated SDK code from mobile application user should be able to access APIs generated in Arrow and make respective calls.    ",Bug,High,Closed,"2017-03-31 23:20:07","2017-03-31 23:20:07",5
"The Titanium SDK ","TextAlign Mishandled on Win Surface on Labels with FILL Width","H5. Issue Description     Labels that have a width of Ti.UI.FILL and a textAlign of either Titanium.UI.TEXT_ALIGNMENT_LEFT or Titanium.UI.TEXT_ALIGNMENT_RIGHT do not appear correctly after opening their containing Window while the <USER>app is in split-screen with another application, then expanding the <USER>app to full size. Rather than the text moving all the way to the left or right (depending on alignment), it moves most of the way, leaving a sizable gap between the edge of the Label's view and the start or end (depending on alignment) of the Label's text. The width itself appears to be being calculated correctly, which is easily verifiable by adding a backgroundColor to the Label, but the alignment is aligning to the wrong location and appears to be respecting some kind of padding or margin that can't be interacted with. It appears (just from comparing the visual width of the split-screen version and the post-split-screen version) that the text alignment constants may not be being recalculated properly, instead retaining the original left and right limits as defined on the Window's opening. Please see attached screenshots.    This issue does not occur if the Window is loaded in full screen, then reduced down to split-screen, and then returned to full screen. We were able to reproduce this issue both in the affected project, and in a newly created project (which was created intentionally to reproduce the issue in an as-clean-as-possible environment and which was used for the attached screenshots).    h5. Steps to replicate   # Download the test case from  https://github.com/bbuehler-axway-support/surface-width  # Run   # Resize the window ",Bug,Medium,Closed,"2017-03-28 18:42:31","2017-03-28 18:42:31",5
"The Titanium SDK ","Hyperloop: Android - Unhandled CLI error thrown sometimes","When building Hyperloop for Android, sometimes one of the following errors is thrown:    or (twice now)    This happens randomly and can be resolved by doing a clean build. Even when not changing anything Hyperloop-related, this happens from time to time.     *EDIT*: Additional logs (only occurred once in trace-mode):  ",Bug,High,Closed,"2017-03-28 09:55:06","2017-03-28 09:55:06",1
"The Titanium SDK ","Hyperloop: Android - Use .aar handling from AndroidBuilder","In TIMOB-18565 the android build is updated to be able to <USER>Android Libraries from .aar files. This is currently also handled in the Hyperloop plugin but is redundant once the other ticket gets resolved, so it can be removed from the plugin. However, a few adjustments to the Android plugin for Hyperloop are are necessary:    * Remove .aar processing from plugin.  * Receive .jar list from builder instance. With TIMOB-18565 this list will already contain all .jar files from any .aar inside the project.",Improvement,Medium,Closed,"2017-03-24 14:20:15","2017-03-24 14:20:15",3
"The Titanium SDK ","Android: onBackPressed behaviour does not work correctly","Additional windows will close when the back button is pressed even when {{exitOnClose}} is not specified.    *TEST CASE*  {code:js}  var win = Ti.UI.createWindow({      backgroundColor: '#fff'  });    var lbl = Ti.UI.createLabel({   text:window 1  })    var btn = Ti.UI.createButton({   title:create,   bottom:10  });    btn.addEventListener(click,function(){   var win2 = Ti.UI.createWindow({       backgroundColor: '#fff'   });   var lbl2 = Ti.UI.createLabel({    text:Close to go to window 1, color:#000   });   win2.add(lbl2);   win2.open();  })    win.add(btn);  win.add(lbl);  win.open();  {code}",Bug,Critical,Closed,"2017-03-24 13:28:39","2017-03-24 13:28:39",3
"The Titanium SDK ","Android: Fails to load images that exceed GPU max texture size","*Summary:*  Android will fail to load an image or throw an exception if the image size:  * Exceeds the GPU's max texture size (aka: GL_MAX_TEXTURE_SIZE).  * Exceeds the canvas' max bitmap size of 100 MB (uncompressed, 32-bit color).    *Steps to reproduce:*  # Create a 10,000x10,000 pixel PNG and name it LargeImage.png.  # Copy the image to a Titanium project's Resources/assets/images directory.  # Run the below code on an Android device.  # Observe the Android log.        *Result:*  The image either fails to load and keeps running or it will crash with an exception.    If the app doesn't crash, then you'll see the following warning message in the Android log...  * Bitmap too large to be uploaded into a texture    If it crashes, then you may see one of the following exceptions in the Android log...  * OutOfMemoryException  * java.lang.RuntimeException: Canvas: trying to draw too large(Xbytes) bitmap.    *Recommended Solution:*  Titanium should automatically downscale/down-sample the image to a size that the GPU can display onscreen.    *Notes:*  This issue can commonly happen on devices whose camera takes pictures larger than what the GPU can display. That is, the camera megapixel count exceeds the GPU max texture size, preventing camera shots from being displayed on the same device unless the image has been downscaled/down-sampled firs.  This particular issue can be reproduced on the following devices:  * Samsung Galaxy Nexus  * Samsung Galaxy S4  ",Bug,High,Open,"2017-03-23 23:01:31","2017-03-23 23:01:31",13
"The Titanium SDK ","Android: Intents using FLAG_ACTIVITY_NEW_DOCUMENT can cause issues with KrollRuntime","Some applications specify the {{FLAG_ACTIVITY_NEW_DOCUMENT}} flag when launching applications (Gmail). This can cause event listeners to be overridden and fired in the incorrect activity instance.    *TEST CASE*  *tiapp.xml*      *app.js*  {code:js}  var win = Ti.UI.createWindow({          layout: 'vertical'      }),      bar = Ti.UI.createView({          layout: 'horizontal',          width: Ti.UI.FILL,          height: Ti.UI.SIZE      })      currentData = Ti.UI.createButton({          title: 'CURRENT DATA',          left: 0      }),      clear = Ti.UI.createButton({          title: 'CLEAR',          right: 0      }),      scrollView = Ti.UI.createScrollView({          layout: 'vertical',          height: Ti.UI.FILL,          backgroundColor: 'white'      });    // show current data  currentData.addEventListener('click', function (e) {      alert(Ti.Android.currentActivity.getIntent().data);  });    // clear intent log  clear.addEventListener('click', function (e) {      scrollView.removeAllChildren();  });    // launch intent  scrollView.add(Ti.UI.createLabel({      top: 10,      color: 'black',      text: 'LAUNCH INTENT ' + JSON.stringify(Ti.Android.currentActivity.getIntent()) + ' WITH DATA: ' + Ti.Android.currentActivity.getIntent().data  }));    bar.add(currentData);  bar.add(clear);  win.add(bar);  win.add(scrollView);  win.open();  {code}    1. Launch app via a link in Gmail: {{www.android.com/0}}  2. Press 'CURRENT DATA', should display {{www.android.com/0}}  3. Open recent apps menu and resume Gmail  4. Launch app via link in Gmail: {{www.android.com/1}}  5. Press 'CURRENT DATA', should display {{www.android.com/1}}  6. Open recent apps menu and resume Gmail  7. Launch app via a link in Gmail: {{www.android.com/0}}  8. Press 'CURRENT DATA', should display {{www.android.com/0}} but does not",Bug,High,Closed,"2017-03-23 14:35:48","2017-03-23 14:35:48",8
"The Titanium SDK ","ioslib: Error detecting simulators when Xcode is not installed","When running {{ti info}} or doing an Android build on macOS while Xcode is not installed, ioslib throws an error. It should not error and just return no simulators found if Xcode is not installed.",Bug,High,Closed,"2017-03-21 17:56:09","2017-03-21 17:56:09",5
"The Titanium SDK ","Android: Add APK signature scheme v2 support","*Summary:*  Titanium currently only supports signing with v1 signature scheme.    We should add v2 signing support, which can be verified on Android 7.0 and higher.  https://source.android.com/security/apksigning/v2    Note that an APK can be signed by both v1 and v2 at the same time. We still need v1 support for Android OS versions older than 7.0.    *Note 1:*  This can be signed manually via Android SDK build tool apksigner.  https://developer.android.com/studio/command-line/apksigner    *Note 2:*  The gradle build system automatically signs all built APKs with both v1 and v2. When we add gradle build support, then we get v2 signing for free.    *Testing:*  You can verify which versioning schemes an APK has been signed with at the command line by doing the following...  # Open the Mac Terminal.  # {{CD}} to directory: {{~/Library/Android/sdk/build-tools/<NewestVersion>}}  # Enter: {{./apksigner verify -v <PathToApk>}}  # The tool will output something like the below. Make sure v2 is flagged {{true}}.    ","New Feature",Low,Closed,"2017-03-20 20:26:14","2017-03-20 20:26:14",2
"The Titanium SDK ","Android N: Implement support for TV recording APIs","Records TV channel.","New Feature",Trivial,Resolved,"2017-03-20 20:26:12","2017-03-20 20:26:12",1
"The Titanium SDK ","Android N: Implement support for Data saver mode","Titanium app should check whether user has enabled data saver mode and make an effort to limit background and foreground data usage.","New Feature",Critical,Open,"2017-03-20 20:26:04","2017-03-20 20:26:04",5
"The Titanium SDK ","Android N: Implement support for Notification templates and customization","Custom notification templates can be used for notification messages. e.g. icon/avatar, title, message, content view.","New Feature",Critical,Closed,"2017-03-20 20:26:00","2017-03-20 20:26:00",1
"The Titanium SDK ","Android N: Implement support for Bundled notifications","Same app notification messages are bundled together.","New Feature",Medium,Closed,"2017-03-20 20:25:59","2017-03-20 20:25:59",5
"The Titanium SDK ","Android N: Implement support for Notification quick action","Notification message support quick actions without having to enter titanium app. e.g. quick reply to text message","New Feature",High,Closed,"2017-03-20 20:25:58","2017-03-20 20:25:58",5
"The Titanium SDK ","Android: Resuming app from intent does not provide EXTRA","1. Press CREATE SHORTCUT   2. Kill the app  3. Start the app via shortcut - observe correct behaviour (WITH EXTRA: TEST)  4. Move app into background  5. Resume the app using shortcut - observe invalid behaviour WITH EXTRA : null    {code:js}  var win = Ti.UI.createWindow({          layout: 'vertical'      }),      bar = Ti.UI.createView({          layout: 'horizontal',          width: Ti.UI.FILL,          height: Ti.UI.SIZE      })      createShortcut = Ti.UI.createButton({          title: 'CREATE SHORTCUT',          left: 0      }),      clear = Ti.UI.createButton({          title: 'CLEAR',          right: 0      }),      scrollView = Ti.UI.createScrollView({          layout: 'vertical',          height: Ti.UI.FILL,          backgroundColor: 'white'      });     // create homescreen shortcut  createShortcut.addEventListener('click', function (e) {      var currentIntent = Ti.Android.currentActivity.getIntent(),          shortcutIntent = Ti.Android.createIntent({              action: com.android.launcher.action.INSTALL_SHORTCUT,          });         currentIntent.setAction(Ti.Android.ACTION_MAIN);      currentIntent.putExtra(shortcut, TEST);      currentIntent.addCategory(Ti.Android.CATEGORY_HOME);         shortcutIntent.putExtra(Ti.Android.EXTRA_SHORTCUT_NAME, SHORTCUT);      shortcutIntent.putExtra(Ti.Android.EXTRA_SHORTCUT_INTENT, currentIntent);         Ti.Android.currentActivity.sendBroadcast(shortcutIntent);  });     // clear intent log  clear.addEventListener('click', function (e) {      scrollView.removeAllChildren();  });     // intent listener  Ti.Android.currentActivity.addEventListener('newintent', function (e) {      scrollView.add(Ti.UI.createLabel({          top: 10,          color: 'black',          text: 'INTENT ' + JSON.stringify(e.intent) + ' WITH EXTRA: ' + e.intent.getStringExtra('shortcut')      }));  });     // launch intent  scrollView.add(Ti.UI.createLabel({      top: 10,      color: 'black',      text: 'LAUNCH INTENT ' + JSON.stringify(Ti.Android.currentActivity.getIntent()) + ' WITH EXTRA: ' + Ti.Android.currentActivity.getIntent().getStringExtra('shortcut')  }));     bar.add(createShortcut);  bar.add(clear);  win.add(bar);  win.add(scrollView);  win.open();  {code}",Bug,Critical,Closed,"2017-03-17 15:12:30","2017-03-17 15:12:30",8
"The Titanium SDK ","textfield/textarea editable:false is not working on Android.","TextField and TextArea editable:false is not working on Android Emulator.    app.js  var win = Ti.UI.createWindow({      backgroundColor : 'white'  });    var textField = Ti.UI.createTextField({      borderStyle : Ti.UI.INPUT_BORDERSTYLE_ROUNDED,      color : '#336699',      top : 10,      left : 10,      width : 250,      height : 60,      value: 'edit me',      editable: false  });    win.add(textField);  win.open();       NOT tested on iOS yet.",Bug,High,Closed,"2017-03-17 04:34:34","2017-03-17 04:34:34",3
"The Titanium SDK ","Windows: LiveView is not working for Windows Phone 8.1.","Hello,    LiveView is not working for Windows Phone 8.1. We always got the following error on following the environment.    *Testing Environment:*  <USER>Command-Line Interface, version 6.1.0  SDK version: 6.1.0.v20170313171259 and 6.0.1.GA     Operating System    Name                        = Microsoft Windows 10 Pro and Microsoft Windows 8.1 Pro    Version                     = 10.0.10586    Architecture                = 32bit    # CPUs                      = 4    Memory                      = 11.9GB  Node.js    Node.js Version             = 4.7.2    npm Version                 = 2.15.11    Titanium CLI    CLI Version                 = 5.0.11    node-appc Version           = 0.2.39    *Test Code:*  I have used a simple code       *Step to reproduce:*  1. Just create a new default project and use any code   2. Enable liveView on the Studio  3. Run the app on windows phone 8.1 emulator    *Testing Result:*   -- Start application log -----------------------------------------------------  [INFO] :   Disconnected from app  -- End application log -------------------------------------------------------  [ERROR] :  The remote procedure call failed.  [ERROR] :  Error: The remote procedure call failed.      at ChildProcess.<anonymous> (C:\ProgramData\Titanium\mobilesdk\win32\6.0.1.GA\node_modules\windowslib\lib\wptool.js:765:10)      at emitTwo (events.js:87:13)      at ChildProcess.emit (events.js:172:7)      at maybeClose (internal/child_process.js:854:16)      at Process.ChildProcess._handle.onexit (internal/child_process.js:222:5)         *One more observation when I have changed anything on my app.js then the LiveView Triggered:*  [LiveView] Reload Triggered    REASON: File Changed    FILE: C:\Users\GSL-PC\Documents\<USER>Studio_Workspace\liveView\Resources\app.js",Bug,Low,Resolved,"2017-03-14 15:10:16","2017-03-14 15:10:16",8
"The Titanium SDK ","iOS: Unable to package with enterprise ad-hoc provision","h5. Description:  Based on some customer feedback I believe we have an issue packaging using enterprise adhoc provisions. We will get an enterprise developer account and validate as soon as possible.    I am unsure if this is limited to Studio builds and not the CLI as we don't have data to show it works from the CLI.    h5. Steps to reproduce:  1) Attempt to package a project with an enterprise adhoc provision    h5. Result:  Failure as seen in TIMOB-24444    h5. Expected Result:  Build completes successfully   ",Bug,Critical,Closed,"2017-03-13 23:54:06","2017-03-13 23:54:06",13
"The Titanium SDK ","Android: appc run based module builds fail due to double-namespaced classes in KrollGeneratedBindings.gperf","I know we'd like to make the full cut over to using the node-based module builds, but all of our existing modules are still built using ant and I just tried to use {{appc run}} to build the hyperloop module on a 6.0.0 SDK. It failed with:    ",Bug,Critical,Closed,"2017-03-13 15:17:07","2017-03-13 15:17:07",5
"The Titanium SDK ","Android: maxLines not working for Ti.UI.Label (regression)","Label's property maxLines seems not to work since SDK 6 on Android.  https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Label-property-maxLines    I've tested it on SDK 5.1.x and 5.5.x and it does work.  On 6.0.2.GA, or 6.1.0.v20170312111734 it DOES NOT work.  The funny thing is that it works correctly when the Label is inside a List Item template.    here is a test code:  {code:borderStyle=solid}  var win = Ti.UI.createWindow({     theme: Theme.AppCompat.Fullscreen,     backgroundColor: '#fff'  });    var longString = Welcome to the <USER>Platform! The <USER>Platform extends <USER>s Titanium platform to help you manage the entire lifecycle of the application with debugging, testing, deployment, crash monitoring and analytic data collection.;  var bigLabel = Ti.UI.createLabel({     text:longString,     color:'#4d4d4d',     width:'90%',     top:10,     lines:1  });  win.add(bigLabel);  bigLabel.setMaxLines(1);    var myTemplate = {     childTemplates: [        {           type: 'Ti.UI.Label',           bindId: 'info',           properties: {              color:'#4d4d4d',              left:0,              maxLines:1           }        }     ]  };    var listView = Ti.UI.createListView({     top:300,     width:'90%',     templates: { 'template': myTemplate },     defaultItemTemplate: 'template'  });  var sections = [];    var fruitSection = Ti.UI.createListSection();  var fruitDataSet = [     {        info: { text: longString }     },  ];  fruitSection.setItems(fruitDataSet);  sections.push(fruitSection);  listView.setSections(sections);  win.add(listView);    win.open();  {code}",Bug,Critical,Closed,"2017-03-13 12:06:51","2017-03-13 12:06:51",5
"The Titanium SDK ","Android: postlayout function is called twice when the app starts","postlayout calls the linked function twice when the app starts for the first time. when the view/window called/loaded the second time, postlayout function gets called only once.    This is also the same with titanium.",Bug,Medium,Resolved,"2017-03-12 23:46:10","2017-03-12 23:46:10",5
"The Titanium SDK ","Android: Update ti.admob for parity with iOS","{{ti.admob}} currently does not maintain API parity with iOS. iOS now uses {{adUnitId}} where Android still uses {{publisherId}} and implements {{adType}} for banner specification.",Improvement,High,Resolved,"2017-03-10 15:11:38","2017-03-10 15:11:38",5
"The Titanium SDK ","Android: Fails to build modules that contain additional java files inside plugins folder or test folders not intended to be in distributed module","Some modules (such as our own hyperloop.next module for Android) may contain *.java files not intended for distribution/compilation in the module. Specifically, I have a java source file in the plugins hook that gets compiled at runtime, but doesn't go in the module binary itself. I also have some text code in a test-src folder.    Our CLI currently scans the project directory for *all* java files, but really should only gather the src/**/*.java files and build/generated/**/*.java files.",Bug,High,Closed,"2017-03-09 20:00:47","2017-03-09 20:00:47",3
"The Titanium SDK ","Android: ImageView quality (gradient banding)","ImagesViews in my app have poor quality, seems that a reduced palette is used.  This didn't happen when the same image is used as backgroundImage.    Open attached banding_evidence.jpg at full size on a contrasted screen.      ",Bug,Critical,Closed,"2017-03-07 17:56:50","2017-03-07 17:56:50",3
"The Titanium SDK ","CRASH PLSqliteException: Error occurred calling next on a PLSqliteResultSet. SQLite error: 'disk I/O error' for 'select attempts from last_attempt'","Getting a lot of crashes in APM with the following:    CRASH PLSqliteException: Error occurred calling next on a PLSqliteResultSet. SQLite error: 'disk I/O error' for 'select attempts from last_attempt'",Bug,Critical,Resolved,"2017-03-07 22:50:45","2017-03-07 22:50:45",2
"The Titanium SDK ","Android: Can’t remove unused permissions from AndroidManifest.xml using Ti SDK 6.x","In an Alloy project I have a custom AndroidManifest.xml at app/platform/android without any tags <uses-permission>.    In app/controllers/index.js I have this only line:        On tiapp.xml I have:        and        When I build with SDK 5.5.1 the resulted AndroidManifest.xml at build/android folder has no tags <uses-permission> as expected.    But when a build using any SDK >= 6.0, the resulted AndroidManifest.xml at build/android folder has this unused permissions:        When I build for distribution, the three “ACCESS_” are removed from the manifest.    It will be very appreciated if we can choose one of two options, maybe whith a special tag in tiapp.xml:    1) Having only permissions needed automatically added to final AndroidManifest.xml    or    2) Indicating that we want to replace completely the final AndroidManifest.xml    But none of them are possible using SDKs 6.x.",Bug,Critical,Closed,"2017-03-07 01:00:59","2017-03-07 01:00:59",5
"The Titanium SDK ","Windows: Allow custom Extensions in manifest root","Following up from TIMOB-24282    In {{tiapp.xml}}, we should be able to define {{Extensions}} in {{App}}'s root, not under the {{Package}}'s root.    {quote}   it is mentioned that by modifying tiapp.xml, one can add Extensions and while it was tried, it seems those elements are copied inside the App's root and not the Package's. It needs to be in the latter.    With that being said, there is also a mention of using CMake to include files and it seems that this approach regenerates the solution file. That being so, if there is a way to use that approach such that the we can add compile-time references to some of the third-party binaries (that is, not just include them as resources), I believe Visual Studio will also add the appropriate elements to register the classes from the SDK in the Package's AppManifest.  {quote}  ",Improvement,Medium,Closed,"2017-03-06 00:54:21","2017-03-06 00:54:21",8
"The Titanium SDK ","Windows: Improve library integration with module","Following up from TIMOB-24282. We need better way to integrate 3rd party libraries with module other than dealing with CMake manually.    {quote}    In order to package 3rd party libraries with your module, dealing with {{CMakeLists.txt}} in your module project is needed to make sure the module includes required libraries since our build system is based on {{CMake}}. This will need some CMake commands like [target_link_libraries|https://cmake.org/cmake/help/v3.3/command/target_link_libraries.html], [target_include_directories|https://cmake.org/cmake/help/v3.3/command/target_include_directories.html] and so on. After updating CMakeList.txt, you can re-create Visual Studio project files by using {{--run-cmake}} option (See TIMOB-24331)    So CMake is very flexible tool but I guess the real problem there is that dealing with {{CMake}} is generally pain for the most of Titanium developers maybe? We might want to add simple commands or something to deal with those common tasks like this.    After some consideration about having easier way to package 3rd party library other than dealing with CMake manually, I'm planning to come up with following packaging ideas just like what Titanium Android module does for use of 3rd party JARs.     - Every \*.lib, \*.dll and \*.winmd files in *lib* folder will be packaged into module and also copied/linked during Ti app build.  - Every files in *platform* folder are packaged into module and copied into Ti app so module can overwrite files during Ti app build.  {quote}    *For the test case, refer to the [first comment below|https://jira.<USER>org/browse/TIMOB-24454?focusedCommentId=414164&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-414164]*",Improvement,Medium,Closed,"2017-03-06 00:49:34","2017-03-06 00:49:34",13
"The Titanium SDK ","iOS: Don't include metadata.json when no assets, utilize module version as a compiler flag","There are many use-cases where developers want the module version inside the module.xcconfig (e.g. when manually linking frameworks like [here|https://github.com/<USER>modules/ti.facebook/blob/master/ios/module.xcconfig#L12] or [here|https://github.com/hansemannn/ti.googlesignin/blob/master/iphone/module.xcconfig#L9]. Module developers usually bump the version in both the manifest and this file, which can easily cause problems when they forget it (I did twice as well).    Long story short, we would add the compiler flag {{TI_MODULE_VERSION}} to the generated {{module.xcconfig}}, so people can use the flag with {{$(TI_MODULE_VERSION)}}.    Another thing was that we should only generate the {{metadata.json}} when there are JS files to encrypt. Otherwise, it will generate an empty json file that isn't required and also not generated when using the old build.py (rot in hell).",Improvement,Medium,Resolved,"2017-03-05 16:24:01","2017-03-05 16:24:01",3
"The Titanium SDK ","Android: ListView Template get varying sectionCount and sections array when it is inside a ScrollableView","h6.Reproduce  1. Create a default alloy project  2. Simply add following file into view and controller folder  3. Run the app  4. Switch the cross the views by click the buttons  5. Notice the console output    h6.Problem  Did not add/remove/modify the list view. Inspire of that, the section count and sections are varying. (keep change between 0 and 1)  As a result of this, I am not able to add any items, whenever the sectionCount becomes 0 and the section array becomes empty while scrolling.",Bug,None,Closed,"2017-03-03 02:11:22","2017-03-03 02:11:22",3
"The Titanium SDK ","iOS: App not compiling due to Ti.Media.systemMusicPlayer","The app will not compile if  Titanium.Media.appMusicPlayer or the Titanium.Media.systemMusicPlayer are used in my app. However, it works fine in the simulator or when the iPhone is connected using the LiveView. The app will compile if I code out the line with Titanium.Media.appMusicPlayer.  ----                ",Bug,Critical,Closed,"2017-03-02 01:44:07","2017-03-02 01:44:07",5
"The Titanium SDK ","Android: Allow user to specify Android Support Library version","As of now we bundle a specific version of the Android Support Library with Titanium. Due to frequent updates to this library we should consider to allow users to use another version than our bundled one.    Some general thoughts on this:  - Build on-top of AAR handling introduced in TIMOB-18565 and make use of installed Support Libraries in {{${ANDROID_SDK}/extras/android/m2repository/com/android/support}}  - Allow users to override the bundled one via config option, e.g. {{android.supportLibrary.selectedVersion}} or on a per-project base?  - Utilize a hook to check if a custom version is set, extract into the build dir and integrate it. Cache on subsequent builds.    This ticket is for further evaluation of this topic.    *Additional Notes*  - Hyperloop contains a special case handling for the Android support library in the Android plugin hook",Improvement,Critical,Closed,"2017-03-02 02:01:00","2017-03-02 02:01:00",5
"The Titanium SDK ","Windows Phone: Progressbar not respect width and not resize","Given the width of the progressbar is not respected.  It is used the width of the message text as initial width and then is retained even if the text is updated with a longer one, making truncate the label displayed.      ",Bug,Critical,Closed,"2017-02-28 08:55:40","2017-02-28 08:55:40",8
"The Titanium SDK ","Android: Ti.UI.View.rect is not updated after animation","- {{Titanium.UI.View.rect}} {{x}} and {{y}} properties are not updated after a transform animation has taken place.    *TEST CASE*  {code:js}  var win = Ti.UI.createWindow({backgroundColor: 'gray'}),      view = Ti.UI.createView({          left: 0,          top: 0,          width: 100,          height: 100,          backgroundColor: 'red'      });    win.addEventListener('open', function() {      Ti.API.info('Initial');      Ti.API.info('  rect.x: ' + view.rect.x);      Ti.API.info('  rect.y: ' + view.rect.y);        view.animate({          top: 200,          left: 200,          duration: 1000      }, function() {          Ti.API.info('After Animation');          Ti.API.info('  rect.x: ' + view.rect.x);          Ti.API.info('  rect.y: ' + view.rect.y);      });  })  win.add(view);  win.open();  {code}",Bug,High,Closed,"2017-03-01 14:35:43","2017-03-01 14:35:43",5
"The Titanium SDK ","Firebase analytics integration ","h5. Issue Description    Customer need Firebase to track custom events, more specific with the method logEventWithName.     The final goal is to link it up with Google Tag Manager.  ","New Feature",None,Closed,"2017-02-28 22:26:44","2017-02-28 22:26:44",5
"The Titanium SDK ","Android: Update bundled Android libraries to 23.4.0","Our current SDK release targets API level 23. Some bundled libraries like the Android Support Library were not updated to also target API23.",Improvement,None,Closed,"2017-02-28 17:39:56","2017-02-28 17:39:56",3
"The Titanium SDK ","iOS: Unable to modify key of an Object property","- Properties which are writable Objects such as {{Point}} and {{Font}} cannot have their keys directly changed.    *TEST CASE #1*  {code:js}  var win = Ti.UI.createWindow({          title: 'TIMOB-24406',          backgroundColor: 'gray'      }),      lbl = Ti.UI.createLabel({          text: 'click me',          font: {              fontSize: 24          }      });    win.addEventListener('click', function(e) {      // direct access to fontSize      lbl.font.fontSize = lbl.font.fontSize + 4;  });    win.add(lbl);  win.open();  ",Bug,Medium,Open,"2017-02-27 15:25:51","2017-02-27 15:25:51",13
"The Titanium SDK ","iOS: Badge doesn't update when multiple push notification is received. ","I able to recevie the push notification but the badge number on the IOS app icon is not incease or update when the notification come in.     ",Bug,Critical,Closed,"2017-02-21 05:30:10","2017-02-21 05:30:10",0
"The Titanium SDK ","Android: Google Maps not loading if the parent view has border radius","h5. Issue Description     Google map is not loading if the parent has border radius. Otherwise, If the borderRadius of this element is changed to 0, map will load properly.    h5. Steps to replicate   # Download the attached project  # Run  # The Map is not correctly loaded  # Open the view   # Change the border radius to 0  # Run  # Map Works",Bug,High,Closed,"2017-02-24 16:03:39","2017-02-24 16:03:39",3
"The Titanium SDK ","Android: Titanium.UI.View.center setter does not work","i having the issue on getting the value from imageviewl.center.x or y from ti.sdk 6 and above on android project.  But when i try run my project on the ti.sdk 5 and it worked. please help.      *sample code for XML*  <Window class=Fcontainer >   <View id=croppedPhoto>    <ImageView id=previewImage onTouchstart=touchStart onTouchmove=touchMove onTouchend=touchEnd onPinch=pinch/>    </View>  </Window>    *sample code in controller*  $.Fcontainer.addEventListener('open', setup);    function setup() {   $.croppedPhoto.width = '400';   $.croppedPhoto.height = '400';   $.croppedPhoto.zIndex = 0;      $.previewImage.image = '/images/default_img/default_exhibitor.png';   $.previewImage.image.quality = '1.0';   centerPhoto();  }  s  function centerPhoto() {   console.log(centering the photo);      $.previewImage.center = {    x : $.croppedPhoto.width / 2,    y : $.croppedPhoto.height / 2   };  }    function touchStart(e){   console.log(center.x --------------------------+$.previewImage.center.x );   console.log(center.y --------------------------+$.previewImage.center.y );   }",Bug,Critical,Closed,"2017-02-08 03:10:18","2017-02-08 03:10:18",2
"The Titanium SDK ","Alloy app started from secondary activity fails horribly","We have a need to utilize multiple activities within our titanium/alloy application.  This is a very common paradigm for Android development.  However, the basic example is not able to work properly.  We have created a Stack Exchange issue (http://stackoverflow.com/questions/42376926/how-to-create-an-<USER>alloy-android-application-with-multiple-activities) as well as a github repo demonstrating the problem (https://github.com/DaKaZ/multiactive).    It would be possible to work around the problem IF titanium would update `Ti.Android.currentActivity.intent` if the activity is re-launched with a new intent.  That way we could the information on the extra keys in the current activity.",Bug,Critical,Closed,"2017-02-21 21:02:01","2017-02-21 21:02:01",13
"The Titanium SDK ","Remove Alert title from alert()","The current {{alert()}} function will display a dialog box with a fixed Alert title.  Since it is not really necessary to have this title and very confusing since you can't change or localize it it would be better to remove it and when you want to have a custom title you can create a custom AlertDialog.    Test code:        Current output: Alert dialog with title Alert and text Test  Changed output: Alert dialog with just the text Test",Improvement,Low,Closed,"2017-02-22 17:15:05","2017-02-22 17:15:05",1
"The Titanium SDK ","Windows Phone: TableViewRow and Label layout not respected","Label View and Table Row View do not respect the layout and horizontal positions required.  Table View Row seems to have a margin on the left and the right sides.  The width to 100% of the Label within the Rows seems to be greater than the total width of the screen.    *Test Code*    ",Bug,Critical,Closed,"2017-02-22 11:11:32","2017-02-22 11:11:32",8
"The Titanium SDK ","Windows: Deployment fails with violates pattern constraint of bms-resource","When attempting to install a Titanium app onto a Windows Phone 10 emulator (specifically Mobile Emulator 10.0.14393.0 WVGA 4 inch 512MB), the <USER>fails when trying to install the library dependency:        *Steps to reproduce;*  # Create a new alloy application {{appc new}}  # Build to device {{appc run -p windows -T wp-device}}",Bug,Critical,Closed,"2017-02-22 16:25:42","2017-02-22 16:25:42",8
"The Titanium SDK ","Windows Phone: OptionDialog undefined error","OptionDialog generates an undefined error calling the show() method with the view parameter.    *Console Log*      *Test code*        ",Bug,Critical,Closed,"2017-02-20 08:54:34","2017-02-20 08:54:34",5
"The Titanium SDK ","LiveView: App does not refresh after second time on android 7.0 & above","h5.Steps to reproduce:  1. Build an app to android 7.0 & above device/emulator with liveview enabled.  2. Let the app launch.  3. Change any text or color for a label etc & do a save.    h5.Actual Results:  1. See that for the first 2 times you change the UI & hit save the app refreshes to reflect the changes.  2. After the 2nd time the app does not refresh.    h5. Expected Results:  1. The app should refresh every time a change is made & saved.  ",Bug,None,Closed,"2017-02-17 19:01:05","2017-02-17 19:01:05",5
"The Titanium SDK ","Android: Listview not able to add accessibility label in the ListItem components","I want to apply the accessibiltiyLabel and values on the items in listview, so that when user clicks on listitem it will narrate the description of the item.     In listview template we added the views and labels inside the views. We are adding the accessibility labels and values in the views and labels runtime, while adding the list item. But the changes of the accessibility label not getting reflected in the app.     On another controller we have added the scrollview and there we are able to add the accessibility label on each view inside the scrollview.     I have attached the sample project with this ticket, can you please check this issue.       ",Bug,High,Closed,"2017-02-17 06:11:53","2017-02-17 06:11:53",3
"The Titanium SDK ","Android: Ti.TouchID crashes app on unsupported devices","Ti.TouchID causes a crash on Android devices that don't support fingerprint authentication, or where any fingerprint hasn't been added yet.  In such devices, the constructor for FingerPrintHelper throws an exception, and every subsequent reference to the object triggers an error of this kind:      *Steps to reproduce:*  - Create a Titanium app that requires ti.touchid  - Install on a Android device with no fingerprint added by the user  - Call any method of ti.touchid  ",Bug,Critical,Closed,"2017-02-17 08:46:56","2017-02-17 08:46:56",2
"The Titanium SDK ","Android: Improve Android 6.0 permission requirements","- improve how we handle the permission requirements of Android 6.0  - Permissions must be requested during run-time. We should do this automatically for Titanium APIs that need them.",Improvement,Critical,Closed,"2017-02-16 16:28:42","2017-02-16 16:28:42",13
"The Titanium SDK ","Android: calendarViewShown does not work on Lollipop and above","Using {{Ti.UI.PICKER_TYPE_DATE}} with {{calendarViewShown: false}} on Android Lollipop and above always creates a calendar view.    *TEST CASE*  {code:js}  var win = Titanium.UI.createWindow({          title: 'TIMOB-24407',          backgroundColor: 'gray'      }),      picker = Ti.UI.createPicker({          calendarViewShown: false,          type: Ti.UI.PICKER_TYPE_DATE      });    win.add(picker);  win.open();  {code}",Bug,High,Reopened,"2017-02-16 14:06:18","2017-02-16 14:06:18",2
"The Titanium SDK ","Android: Unable to modify key of an Object property","- Properties which are writable Objects such as {{Point}} and {{Font}} cannot have their keys directly changed.    TEST CASE  {code:js}  var win = Ti.UI.createWindow({          title: 'TIMOB-24406',          backgroundColor: 'gray'      }),      iv = Ti.UI.createView({          backgroundColor: 'red',          width: '320',          height: '480',          center: {              x: (Ti.Platform.displayCaps.platformHeight / 2) + 'px',              y: (Ti.Platform.displayCaps.platformWidth / 2) + 'px'          }      });    win.addEventListener('click', function(e) {      iv.center.x = (Ti.Platform.displayCaps.platformHeight / 2) - e.x;      iv.center.y = (Ti.Platform.displayCaps.platformWidth / 2) - e.y;      //iv.center = {x: e.x, y: e.y}; // workaround      Ti.API.info('center.x: ' + iv.center.x);      Ti.API.info('center.y: ' + iv.center.y);  });    win.add(iv);  win.open();  {code}",Bug,Medium,Open,"2017-02-16 04:55:28","2017-02-16 04:55:28",13
"The Titanium SDK ","TiAPI: Ti.App.Properties.getString() returns incorrect default value","    Ti.App.Properties.getString() allows you to pass in a second variable which determines the default value when the property cannot be found. However, when something is not defined, it should return the type *undefined* and not *null*.    This is likely also applicable to the functions: Ti.App.Properties.getObject(), Ti.App.Properties.getList(), Ti.App.Properties.getBoolean() etc.    While someone is at this, he/she might just as well implement https://jira.<USER>org/browse/TIMOB-24292 to clean up some bloat functions.",Bug,Critical,Closed,"2017-02-15 11:29:08","2017-02-15 11:29:08",1
"The Titanium SDK ","Windows: Building module for specific platform/architecture","When we build module, currently there's no way to limit target platform/architecture, like building ARM only module or Windows 10 only module etc. This may become a issue when developer have dependency libraries/binaries that is build against specific target.    --So we might want to add new command line option to specify target platform and architecture for module build command--      Steps:    1. Create your module project        2. Limit for Windows 10 only    Edit **YOUR_MODULE_PROJECT/windows/timodule.xml**        3. Limit forARM only    Edit **YOUR_MODULE_PROJECT/windows/manifest**    BEFORE      AFTER (Remove **ARM**)      4. Build it        This should create module zip that targets Windows 10 only. You can see there is {{win10}} folder and there's no {{phone}} and {{store}} folder. Also there should be no {{win10/ARM}} folder.  ",Improvement,Medium,Closed,"2017-02-15 05:58:26","2017-02-15 05:58:26",5
"The Titanium SDK ","Windows: View.visible=false does not work.","Hello,    View.visible=false is not working for windows phone.     *Testing Environment:*  <USER>Command-Line Interface, version 6.1.0  SDK: 6.0.1.GA  Windows emulator: 8.1 WVGA 4 inch 512MB    *Testing Code:*      *Testing Result:*  View.visible=false does not hide the View.    Thanks",Bug,High,Closed,"2017-02-14 14:56:03","2017-02-14 14:56:03",5
"The Titanium SDK ","Android: Download video and save it to the Device's Gallery","h5. Issue description:  We want to be able to download a video file from our servers to the device and save it on the gallery (upon user's approval). On iOS we accomplish this by this code:    h5. Expected Result:   Download videos into Android gallery/ file system upon users approval.","New Feature",None,Closed,"2017-02-13 17:24:49","2017-02-13 17:24:49",5
"The Titanium SDK ","Android: Ti.UI.WebView.html setter does not work","On Ti SDK 6.0.1.GA and Android,      On iOS both are work.",Bug,Critical,Closed,"2017-02-13 06:25:38","2017-02-13 06:25:38",3
"The Titanium SDK ","Correct NSP/Retire.js errors in node-appc","Note there is also an uglify error in jade (now pug) but that's a dev dependency, so we can ignore that.",Bug,Critical,Closed,"2017-01-27 16:38:18","2017-01-27 16:38:18",5
"The Titanium SDK ","iOS: WebView - load a webpage with request headers","*Problem*  Opening a webpage like https://www.whatismybrowser.com/detect/what-http-headers-is-my-browser-sending with request headers does not work.    _actual behavior_  # click on 'open web page'  # in the log is shown    # webpage is not loaded    _expected behavior_  # click on 'open web page'  # in the log is shown    # webpage is loaded    *Test case*  file index.js  ",Bug,Critical,Closed,"2017-02-10 12:58:26","2017-02-10 12:58:26",5
"The Titanium SDK ","PATCH method not working on Android platform","When sending PATCH request through the Titanium.Network.HTTPClient, it works properly on iOS platform, however when running same code on Android the app fails with the error that the method is unknown (test code, screenshots and logs are attached).",Bug,Medium,Closed,"2015-12-04 10:16:56","2015-12-04 10:16:56",1
"The Titanium SDK ","Hyperloop: iOS - Projects containing bitcode-enabled Cocoapods dependencies cause build-failure in Xcode 8.3 Beta","When running an app in Xcode 8.3 Beta, it works fine. But when I include a module that has Bitcode enabled (like Hyperloop and all new modules by default), I get a the following build error:    You can force a Xcode 8.3 build using {{appc run -p ios -I 10.3 --log-level trace}} which will select Xcode 8.3 to build the iOS 10.3 target app. I was able to reproduce this error using the [hyperloop-examples|https://github.com/<USER>hyperloop-examples] app, but not with Ti.Facebook so far - which still needs to investigated.    In general, this is no valid {{Bug}} so far, so it's marked as a {{Story}}. In case it get's validated to be one, here are some possible solutions:  - Enabled Bitcode in the Titanium SDK    - Question: Was there a reason that this wasn't enabled when we enabled it in modules?  - Disable Bitcode in all our code-modules    - Hopefully not, it would be a breaking change    Note: This is *not happening* on Simulator builds. Unfortunately, I didn't see many reports online so far, so it *may* be caused by the Beta version. But we're still in a very early Beta <USER>of Xcode 8.3, so we can investigate this without problems.    *UPDATE 1*: This is also *not happening* with other native modules like ti.facebook. So it may be related to the Hyperloop metabase compiler.  *UDPATE 2*: The build also *works* when including Hyperloop in a new project, so hyperloop-examples seems to be the only effected one so far. Maybe one of the Cocoapods dependencies is causing the issue.  *UPDATE 3*: Tracked it down to the Cocoapods dependencies. Manually disabling bitcode in the Podfile fixes it (as a workaround):  {code:ruby}  post_install do |installer|    installer.pods_project.targets.each do |target|      target.build_configurations.each do |config|        config.build_settings['ENABLE_BITCODE'] = 'NO'      end    end  end    post_install do |installer|    installer.pods_project.targets.each do |target|      target.build_configurations.each do |config|        cflags = config.build_settings['OTHER_CFLAGS'] || ['$(inherited)']        cflags << '-fembed-bitcode'        config.build_settings['OTHER_CFLAGS'] = cflags      end    end  end  {code}  *UPDATE 4*: I was now able to reproduce it with a different project as well, also using Hyperloop. It is attached in the first comment.  *UPDATE 5*: It does *not* fail the build when using a native project using Cocoapods and Bitcode disabled.",Bug,High,Resolved,"2017-02-09 13:32:01","2017-02-09 13:32:01",0
"The Titanium SDK ","iOS: Appcelerator Titanium App Crashes after some usage time","h5. Problem Description:  Titanium App Crashes after some Camera usage time.    h5. Steps to Reproduce:  - Use the attached app.js code in a classic app. tiapp.xml file is also attached.  - Touch open camera  - Take picture  - Touch Use Photo  - Repeat steps 30-35 times.    h5. Actual Result  App crashes during the <USER>of taking picture in above scenario.    h5.Expected Results:    App should work usual and should not crash.    h5. Some more details and question from customer:  Remarks:   - iOS 10.2 camera permission is set  - Happens once/twice a day.  - Not directly/always reproducible  - App closes and iOS springboard gets visible   - Fabric.io is configured for crash reporting, but no crashes are captured (seems that Fabric doesn't get the chance to capture the crash).    We couldn't get any logs of the issue due the fact production devices are not within reach.    Question: is it possible that iOS kills the app because the camera screen (iOS app) takes a lot of memory/resources?    ",Bug,None,Closed,"2017-02-09 05:03:20","2017-02-09 05:03:20",21
"The Titanium SDK ","Android: 'center' property for Label does not work well on Android","h5.Reproduce  1. Run the following code on Both iOS and Android devices      h5.Problem  In labelTxt the:    works in iOS but in Android. The Ti.API.info('Center: ' + labelTxt.getCenter().y); returns a valid number but we see no impact on the positioning of the label on Android.",Bug,None,Closed,"2017-02-09 02:24:34","2017-02-09 02:24:34",3
"The Titanium SDK ","Windows: Resize Label when Window is resized","{{Label}} should layout its content accordingly when parent {{Window}} is resized. Note that this only effective on Store apps because you can't resize Window on phone apps.    *Expected*    {{Label}} should resize its content when parent {{Window}} is resized.    *Actual*    {{Label}} is not resized.    ",Improvement,Medium,Closed,"2017-02-08 13:08:37","2017-02-08 13:08:37",5
"The Titanium SDK ","Windows: Ti.Network.Socket.TCP.readAsync() is not continuous","- When using {{Titanium.Stream.pump()}} - {{Titanium.Network.Socket.TCP.readAsync()}} does not stream data continuously to the callback. Only the first response is received.  - When a connection is terminated the error is not handled elegantly, causing the application to crash.    NOTE: The error parameters in the callbacks for both {{read}} and {{write}} should be updated accordingly.",Bug,None,Closed,"2017-02-08 12:13:28","2017-02-08 12:13:28",5
"The Titanium SDK ","Hyperloop: iOS - Build should detect Podfile changes and do a clean build","Ok, here is the use-case: Someone plays around with Cocoapods, adds the required dependencies after each other. After adding the first one, the app is ran, then the second Pod is added, the app wants to start again. The build fails due to classes not being found:      Podfile (before):  {code:ruby}  install! 'cocoapods',           :integrate_targets => false    platform :ios, '9.0'  target 'fbtest' do   pod 'FBSDKCoreKit'  # pod 'FBSDKShareKit'  # pod 'FBSDKMessengerShareKit'  end      Proposals:  - Watch the Podfile and force a clean build if it's changed. The Cocoapods post-install hooks do the same with native projects  - Validate that this also works for LiveView projects (when the reload blocker is resolved). Just so we don't forget it.    The workaround is very simple, so it's no high prio issue: Clean the project and run it again -> Works!",Improvement,Medium,Closed,"2017-02-08 08:36:58","2017-02-08 08:36:58",0
"The Titanium SDK ","Windows: Adding same component multiple times should not cause error","This is parity issue to align with behavior on iOS. We should accept logical error when developer tries to add one component multiple times onto same parent. For instance following code does not throw exception on iOS, but on Windows it causes exception with {{add: No installed components were detected. Element is already the child of another element}}. We should be able to ignore this type of logical errors to keep parity with iOS.      ",Improvement,Medium,Closed,"2017-02-08 01:56:44","2017-02-08 01:56:44",5
"The Titanium SDK ","Windows Module: integrating .NET code with C++/CX modules","h5. Description:     To develop a windows module in .net, there is no easy way to integrating .NET code with C++/CX modules. If customer wants to develop module in .net as requested by Propelics, we would need to provide this mechanism.     ",Story,Medium,Closed,"2017-02-07 06:28:36","2017-02-07 06:28:36",13
"The Titanium SDK ","Android: View Animation in ListView doesn't work ","h5. Issue description    Trying to animate view in ListView is working fine in iOS, whereas it is not showing any effect in Android.    h5. Steps to reproduce  # Download the testcase  # Run on device or simulator   # Click on the red box in the row   # The animation is not starting  ",Bug,None,Closed,"2017-02-06 18:08:05","2017-02-06 18:08:05",0
"The Titanium SDK ","npm node_modules are erroring out during build","*Reproduce Steps*  1. Create a ti classic app  2. Create a package.json file under Resources folder:    3. Run {{npm install}} under Resources folder  4. Build the project    *Expected Result*  The app builds without error    *Actual Result*  ",Bug,None,Resolved,"2017-02-04 03:57:50","2017-02-04 03:57:50",0
"The Titanium SDK ","iOS: Expose all missing MediaItem properties, allow Apple Music playback in Ti.Media.AudioPlayer","h5. Issue Description     The feature consists on use the Ti.Media.openMusicLibrary to pick a sound file or an object with the file and the path. ","New Feature",Medium,Closed,"2017-02-04 03:27:16","2017-02-04 03:27:16",5
"The Titanium SDK ","UniversalWindowsApp: Textfield's return event fires twice","h5. Problem Description:    Textfield's return event fires twice.    h5. steps to reproduce:     Sample project: https://propelics.box.com/s/yn402w8nzteymhevzu1tv4amson8bonq  1.- Launch app  2.- Type anything in the textfield  3.- Hit return in keyboard  4.- Observe console will print return event twice.    h5. Actual results:    In console log, we see two events being logged after we click on write text on textfield and click on return.    h5. Expected Result:    Single click on return on keyboard should fire only one event.        ",Bug,High,Closed,"2017-02-03 18:47:54","2017-02-03 18:47:54",3
"The Titanium SDK ","Universal Windows App (UWP): ScrollView doesn't scroll horizontally when the content is larger","Related to cases TIMOB-24222, only TIMOB-24222 fixed the vertical one. This case is created for horizontal.",Bug,High,Closed,"2017-02-03 06:17:28","2017-02-03 06:17:28",5
"The Titanium SDK ","Android: Going back to the tabgroup with android back button crashes app with java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.Object ti.modules.titanium.ui.TabGroupProxy.getProperty(java.lang.String)","This issue is probably due to TIMOB-24253.    h5.Steps to reproduce:  1. Use the code below in your app.js.      2.  Build for android device/emulator.  3. After the app launches click on {{I am blue window}} label.  4. A new window opens up.  5. Hit the android back button to close the window to return to the tab group.    h5.Actual results:  1. The app crashes with error:      h5. Expected results:  1. We should be able to return to the tabgroup with out a crash.",Bug,None,Closed,"2017-02-02 01:40:16","2017-02-02 01:40:16",3
"The Titanium SDK ","Windows: When using a windows device which is lower than Minimum Version target the error shown is not clear.","When a target version and minimum version target have been set for a Windows application (Windows 10) and the user uses a device below the minimum target version e.g. a 8.1 device; the error shown in the console is not clear. If the correct device is used everything seems to run fine without any crashes.      *Steps to reproduce*  1. Create a new application  2. Add the following to the {{tiapp.xml}}    3. Go to the project directory and use the following commands        *Result*  For the first command you should get the following error       And for the second command the following error is shown  (Also occurs in studio)       I think it would be better if more useful errors are shown instead.    ",Improvement,Medium,Closed,"2017-02-02 00:11:24","2017-02-02 00:11:24",8
"The Titanium SDK ","iOS: HTTP Client leaks memory during upload using kroll-thread, eventually causing a force close","I have a serious memory leak to report that only happens on uploading of a large amount of images. If you try to upload ~120 large images to a server with xcode instruments running you'll see the memory climb after each upload and eventually crash the app.    I've isolated out the area of the code into a sample app that proves the leak is with the HTTP client. This only has 10 images being uploaded, but if you watch the memory usage, it climbs from 20 to 100mb and never releases.     If you run the sample app, and have instruments on 'Allocations' and note the total starting memory and then click upload. After the 10 images upload, notice the memory usage.    Sample app: https://www.dropbox.com/s/c2gsab0jkot0n9w/Upload%20Leak%20Demo.zip?dl=0",Bug,Critical,Closed,"2017-02-01 15:11:29","2017-02-01 15:11:29",34
"The Titanium SDK ","Android: Prevent 'duplicate entry assets/README' error","Prevent {{README}} from being copied into native {{.jar}}, preventing:    ",Bug,High,Closed,"2017-02-01 15:35:30","2017-02-01 15:35:30",3
"The Titanium SDK ","iOS: Using rgb color values causing a false warning, Android: 2-digit float-values do not work","In TIMOB-23453 we fixed an issue where a warning log was thrown when using {{rgba()}} values. Unfortunately, this did not include rgb-values, so for {{rgb()}} values the {{[WARN] Hex color passed looks invalid: rgb(...)}} warning is still logged. This should be fixed!",Bug,Medium,Closed,"2017-01-31 20:42:25","2017-01-31 20:42:25",3
"The Titanium SDK ","Android: Cant clear TableView anymore","Populate a Ti.UI.TableView with some rows, and try to remove them using:        I've attached a screenshot of the error I'm getting through Android Monitor (this doesnt show up in my Titanium console since the app just instantly dies).    As stated, this is on Android only. I'm not having these issues with the same code on iOS.    I was hoping to provide a testcase, but I cant reproduce it with a blank table like:  ",Bug,Critical,Closed,"2017-01-18 10:28:58","2017-01-18 10:28:58",1
"The Titanium SDK ","iOS: Add missing animation transitions (top to bottom, bottom to top, cross-dissolve)","There are 3 missing animation transition options we should expose to have all possible animation transitions available in the SDK.","New Feature",Low,Closed,"2017-01-30 20:02:10","2017-01-30 20:02:10",3
"The Titanium SDK ","iOS: Add MaskedImage, BlurView, LivePhotoView and and ButtonBar API's to ListView template types","All of a sudden, I can't use MaskedImages inside a ListView template.    This has never been an issue earlier. This happened from no where. It works perfectly fine in the Simulator, but not when I build to the device.    It's super easy to replicate, just create a listview, put a template item which uses a MaskedImage.    {code:js}   var spaceTemplate = function() {       return {           properties: {               backgroundColor: transparent,               selectionStyle: Ti.UI.iOS.ListViewCellSelectionStyle.NONE,               height: 10           },           childTemplates: [{               type: 'Ti.UI.MaskedImage',               properties: {                   width: 20,                   height: 20,                   tint: '#FFFFFF',                   image: /path-to-image.png               }           }]       };   };  {code}    *EDIT* by [~hansknoechel]: Changing ticket to also include other API's that are not available for ListView templates so far. ",Bug,High,Closed,"2017-01-28 15:45:01","2017-01-28 15:45:01",3
"The Titanium SDK ","Unable to deploy apps on windows 10 phone ","When package apps for windows store with command:    *ti build -p windows -T dist-phonestore --wp-sdk 10.0*    I cannot specify MinVersion in tiapp.xml file (default generated MinVersion=10.0.14393.0) and i unable to deploy apps on my windows 10 phone because os version is 10.0.10586.107.    As reported on Microsoft documentation:    bq. MinVersion   bq. The minimum version of the device family that your app is targeting. Used for applicability at deployment time. If the device family version of the system is lower than MinVersion, then the app is not considered applicable.    I try to put in tiapp.xml file this settings but they are ignored during the build <USER>   bq. <windows>  bq. <manifest>  bq.      <Dependencies>  bq.         <TargetDeviceFamily Name=Windows.Universal MaxVersionTested=10.0.0.0 MinVersion=10.0.0.0/>  bq.      </Dependencies>  bq.    </manifest>  bq. </windows>",Bug,Critical,Closed,"2017-01-25 15:23:41","2017-01-25 15:23:41",1
"The Titanium SDK ","iOS: Ti.UI.AlertDialog Not Firing Events Consistently (run-on-main-thread)","Alert dialog boxes do not always fire an event. The problem seems exacerbated if one listener is supposed to create another dialog box -- although it has been observed with only one alert dialog. It does not seem to matter which option the user selects.     In the sample app below, the expected behavior is to have text output whenever the user selects an option for dialog A. The actual output is sometimes missing text because the event isn't always firing. Usually, after missing several events, the app completely crashes.    *index.js*      *index.xml*        *Sample Output*      ",Bug,Critical,Closed,"2017-01-25 21:55:48","2017-01-25 21:55:48",8
"The Titanium SDK ","Android: Get image frames at times out of local video ","h5. Issue Description     Customer want to get some thumbnails from a video in android using the function Titanium.Media.VideoPlayer.requestThumbnailImagesAtTimes, but it seems not being working with local videos.    Using this function with a remote video, it works just fine, trying with a local video on android and call this function and it just doesn't work.    h5.Steps to Reproduce   # Create a new Alloy Project   # Replace the index.js code for the next  {code:js}  var videoPlayer = null,      videoUri = null;    //ThumbSelector is a slider with values from 0 to selected video length  $.thumbSelector.addEventListener(change, function(e) {      if (videoPlayer && e.value > 0) {          videoPlayer.requestThumbnailImagesAtTimes([e.value], Titanium.Media.VIDEO_TIME_OPTION_CLOSEST_SYNC, function(thumbCallback) {              $.thumb.image = thumbCallback.image;          });      }  });    function durationavailable(e) {      $.thumbSelector.max = Math.floor(e.duration / 1000);      $.thumbSelector.show();  };    function openVideo() {      var intent = Ti.Android.createIntent({          action: Ti.Android.ACTION_PICK,          type: video/*      });      intent.addCategory(Ti.Android.CATEGORY_DEFAULT);      $.index.getActivity().startActivityForResult(intent, function(e) {          if (e.error) {              Ti.UI.createAlertDialog({                  title: Error,                  message: Loading error...              }).show();          } else {              if (e.resultCode === Titanium.Android.RESULT_OK) {                  var videoUri = e.intent.data;                    var closePlayerBtn = Ti.UI.createButton({                      title: Close,                      height: 40,                      width: 100,                      top: 15                  });                  // videoUri = source.nativePath;                  videoPlayer = Titanium.Media.createVideoPlayer({                      url: videoUri,                        scalingMode: Titanium.Media.VIDEO_SCALING_ASPECT_FIT,                      fullscreen: false,                      autoplay: true                  });                  videoPlayer.addEventListener(durationavailable, durationavailable);                    videoPlayer.add(closePlayerBtn);                    closePlayerBtn.addEventListener(click, function() {                      videoPlayer.hide();                      videoPlayer.release();                      videoPlayer = null;                  });                  $.vwPlayerWrapper.add(videoPlayer);              } else {                  Ti.UI.createAlertDialog({                      title: Error,                      message: Loading error...                  }).show();              };          };      });  };    $.index.open();  {code}  # replace the index.xml code to the next  {code:xml}  <Alloy>      <Window class=container>          <ScrollView top=0 bottom=0 width=Ti.UI.FILL layout=vertical>              <View height=Ti.UI.SIZE top=0>                  <Button onClick=openVideo>Open Video</Button>              </View>              <View id=vwPlayerWrapper height=300 width=Ti.UI.FILL backgroundColor=#000>                  <!-- HERE GOES THE VIDEO PLAYER -->              </View>              <View height=100 top=10 layout=horizontal >                  <Slider id=thumbSelector width=70% min=0 max=100 height=Ti.UI.SIZE visible=false top=5></Slider>                  <ImageView id=thumb height=40 width=40 borderColor=#000 top=5></ImageView>              </View>              <ImageView id=test backgroundColor=#000 width=200 height=Ti.UI.SIZE></ImageView>          </ScrollView>      </Window>  </Alloy>  {code}  # Run  # Load local video  # Try to get the image    Facts:  - This is not working with any local video on Android  - This work fine on iOS.   - By 'local video' we mean videos picked from the video gallery of the device  ",Bug,None,Closed,"2017-01-25 19:30:51","2017-01-25 19:30:51",8
"The Titanium SDK ","Android: hdpi is mapped to incorrect value 213 in DisplayCapsProxy.java","DisplayCapsProxy.getDensity() maps DisplayMetrics.densityDpi to density strings.    The value of 213 is incorrectly mapped to high.  In google's android docs, 213 is tvdpi, not hdpi.    This can cause layout errors in cases where we have to explicitly deal with pixels and you are using getDensity() to determine the ratio of dp to px.      For example, the ScrollView.scrollTo() function requires values in pixels.  To get pixels, we have to convert dp to px, and we use the density strings to perform this conversion.  If we get the value high, we multiply by 1.5.  But on a device that has a densityDpi of 213, we should be using 1.33 instead.    We need a different value for density on devices that use tvdpi, like the LG G Pad 8.0 LG-V480.",Bug,None,Closed,"2017-01-25 02:12:01","2017-01-25 02:12:01",1
"The Titanium SDK ","iOS: Using Ti.App.iOS.createSearchQuery without other UserActivity API's causes build to fail on device","h5. Issue Description     Unable to build an app  in device when Ti.App.iOS.createSearchQuery is used, I get this error below:      H5. Steps to reproduce  # Create a new Alloy projects  # Add Titanium 6.0.0 SDK on tiapp.xml.  # Execute this function below:       h5. Expected Result  The search query is created and ready to start. ",Bug,High,Closed,"2017-01-23 17:28:11","2017-01-23 17:28:11",2
"The Titanium SDK ","Windows: App crashes when Ti.Network.Socket.TCP fails to connect","{{Ti.Nework.Socket.TCP}} doesn't invoke {{error}} callback on {{connect()}} when it fails to connect to the server. App crashes instead.    Steps to reproduce: Run following code when server isn't up.    ",Bug,High,Closed,"2017-01-23 04:42:11","2017-01-23 04:42:11",3
"The Titanium SDK ","iOS: Resolve iOS 8 deprecations","In SDK 6.0.0, we updated the default minimum iOS target to 8.0 as a result of the Xcode 8.x version that is now supported. Doing that, our iOS SDK core shows some deprecation-warnings regarding API's that should be replaced in iOS 8 and later. A selection:    - Replace {{UISearchDisplayController}} with {{UISearchController}} (API migration required)  - Replace {{NSDayCalendarUnit}} with {{NSCalendarUnitDay}} etc. (search and replace, easy ones)  - Replace {{willAnimateRotationToInterfaceOrientation:}} (used in many places, migration required)  - Replace {{ABPeoplePickerNavigationController}} (in Ti.Contacts, replacement straight forward)  - Remove old statements (e.g. {{![TiUtils isIOS8OrGreater]}})  - Remove old {{UIAlertView}} and {{UIActionSheet}} API's    The first bunch of changes can be seen in [this branch|https://github.com/<USER>titanium_mobile/compare/master...hansemannn:TIMOB-24335?expand=1], I'm not sure when I can continue the outstanding issues, but the plan is either for 6.1.0 or 6.2.0.",Epic,High,Closed,"2017-01-22 22:05:27","2017-01-22 22:05:27",13
"The Titanium SDK ","Windows: Ability to re-run cmake for module project","Currently CMake configuration file (CMakeLists.txt) and Visual Studio project is created when you create Titanium Windows module project ({{appc new}}), but sometimes you need to update the VS project based on CMakeLists and re-run {{cmake}} manually in order to change project configuration (add files, add dependencies etc). Titanium CLI should be able to re-run {{cmake}} when necessary behind the scenes.    ",Story,Medium,Closed,"2017-01-20 07:38:05","2017-01-20 07:38:05",5
"The Titanium SDK ","UniversalWindowsApp: touchEnabled: false does not disable button","h5. Problem Description:    Setting touchEnabled with value false in a Ti.UI.Button doesn't disable the component in a universal windows app (Windows 10). This works as expected in Android and iOS    h5. Steps to Replicate:    1) Launch the app (https://propelics.box.com/s/tquvgq5ejldjslsb61rpzncgtdxjxia2)  2) Two buttons will show up.  3) Click on the touchEnabled true one (the one on the top). An alert will show up.  4) Click on the touchEnabled false one (the one on the bottom). Same alert will show up.    h5. Expected Result:  Click event shouldn't trigger in the button in the bottom, as it has its touchEnabled property set to false.      ",Bug,High,Closed,"2017-01-18 22:50:08","2017-01-18 22:50:08",5
"The Titanium SDK ","iOS: Implement AllowsMultipleSelectionWhenEditing  and getSelectedRow in ListView","Add AllowMultipleSelectionWhenEditing property and  getSelectedRows method for retrieving the selected ones.       reference: https://developer.apple.com/reference/uikit/uitableview/1614944-allowsmultipleselectionduringedi    PR: https://github.com/<USER>titanium_mobile/pull/8761",Improvement,Medium,Closed,"2017-01-18 16:33:25","2017-01-18 16:33:25",5
"The Titanium SDK ","Windows Phone: Window title is not showing","Hello,    We have tried to add a title on any window for windows phone but Window title is not showing for windows phone.    *Testing Environment:*  <USER>Studio, build: 4.8.0.201611121409  SDK: 6.0.1.GA  <USER>Command-Line Interface, version 6.1.0  Windows emulator: 8.1 WVGA 4 inch 512MB    *Testing Code*  index.xml      index.js      Although I have tried for TabGroup.    *Testing Result*  Window title is not showing for windows phone.         ",Bug,Medium,Closed,"2017-01-18 19:16:39","2017-01-18 19:16:39",3
"The Titanium SDK ","iOS: Build fails when using only Ti.Media.openMusicLibrary","When using {{Ti.Media.openMusicLibrary()}} without any other Ti.Media API, the build fails on 6.0.1.GA and 6.1.0.    Test-Case:  {code:js}  var win = Ti.UI.createWindow({      backgroundColor: '#fff'  });    var btn = Ti.UI.createButton({      title: 'Trigger'  });    btn.addEventListener('click', function() {      Titanium.Media.openMusicLibrary({       allowMultipleSelections : false,       mediaTypes : Titanium.Media.MUSIC_MEDIA_TYPE_MUSIC|Titanium.Media.MUSIC_MEDIA_TYPE_ANY_AUDIO,       success : function(event) {        // called when media returned from the MusicLibrary        console.log(Results:  + JSON.stringify(event));       },       cancel : function() {        alert(Aborting );       },       error : function(error) {        // called when there's an error        var a = Titanium.UI.createAlertDialog({         title : 'Music Library'        });        if (error.code == Titanium.Media.NO_MUSIC_PLAYER) {         a.setMessage('Please run this test on device.');        } else {         a.setMessage('Unexpected error: ' + error.code);        }        a.show();       }      });    });    win.add(btn);  win.open();  {code}",Bug,High,Closed,"2017-01-18 18:28:07","2017-01-18 18:28:07",3
"The Titanium SDK ","Windows 10: Kitchen sink app 2.0 errors","h5. Issue description     a) Navigation will only go forward  Steps to reproduce:  1.- Launch the app  2.- From the menu in the left, pick 'Controls'   3.- From the menu in the right, pick 'Views'   4.- From the menu in the right, pick 'Views'  5.- Observe how there's no way to go back in the navigation, therefore it's not possible to select any of the previous options in the menu unless you kill the app.  Note: these steps are an example of the case, but it's replicable on pretty much any option or menu in the app.    b) 3D touch options will lead to a red screen  Steps to reproduce:  1.- Launch the app  2.- From the menu in the left, pick 'Phone'  3.- From the menu in the right, pick '3D touch: Shortcut Items' or '3D touch: peek and pop  4.- Observe the red screen and click 'dismiss'. The app becomes unusable at this point.  If this is iphone only, these options should not be presented in windows.    c) Sound API test will lead to a red screen  Steps to reproduce:  1.- Launch the app   2.- From the menu in the left, pick 'Phone'  3.- From the menu in the right, pick 'Sound'   4.- From the menu in the right, pick 'Local'  5.- From the button controls in the center of the screen, pick 'Start'  6.- Observe the red screen and click 'dismiss'. The app becomes unusable at this point.    d) Network API change event will crash the app.  See: https://support.axway.com/en/case-center/view/id/INC0495354    e) Alert dialog API will lead to a red screen  Steps to reproduce:  1.- Launch the app  2.- From the menu in the left, pick 'Controls'  3.- From the menu in the right, pick 'Alert dialog'  4.- Click the 'Show alert dialog' button  5.- Click the either the 'Confirm', 'Delete' or 'Cancel' buttons in the alert dialog.  6.- An alert will show with a 'Close' button, click this 'Close' button.  7.- Click the 'Show alert dialog' button   8.- Observe the red screen and click 'dismiss'. The app becomes unusable at this point.",Bug,Medium,Closed,"2017-01-17 18:41:57","2017-01-17 18:41:57",5
"The Titanium SDK ","Windows App Certification Kit Failed","I package the app with <USER>Studio and i submit the package to windows store but the windows store certification <USER>failed with *2001 error code*.  I try to test the package with tool *Windows App Cert Kit* and the certification <USER>failed for this errors:  {quote}  *Error Found: The supported APIs test detected the following errors:*   This API is not supported for this application type Api=SuspendThread. Module=api­ms­win­core­processthreads­l11­2.dll. File=HAL.dll.   This API is not supported for this application type Api=ResumeThread. Module=api­ms­win­core­processthreads­l1­12.dll. File=HAL.dll.   This API is not supported for this application type Api=Sleep. Module=api­ms­win­core­synch­l1­2­0.dll. File=TitaniumWindows.dll.     *Impact if not fixed:* Using an API that is not part of the Windows SDK for Windows Phone Store apps violates the Windows Phone Store certification requirements.   *How to fix:* Review the error messages to identify the API that is not part of the Windows SDK for Windows Phone Store app. Please note, C++ apps that are built in a debug configuration will fail this test even if they only use APIs from the Windows SDK for Windows Phone Store apps.    [Alternatives to Windows APIs in Windows Phone Store apps.|http://go.microsoft.com/fwlink/?LinkID=324326]    {quote}    Can you help me?    Thank you in advance ",Bug,Critical,Closed,"2017-01-16 19:19:49","2017-01-16 19:19:49",5
"The Titanium SDK ","Android: Extend Ti.UI.View swipe gesture properties using ScaleGestureDetector","Extend more properties from ScaleGestureDetector to TiView pinch event    *ref:*  https://developer.android.com/reference/android/view/ScaleGestureDetector.html    *New properties:*  * getCurrentSpan, getCurrentSpanX, getCurrentSpanY  * getEventTime, getTimeDelta  * getFocusX, getFocusY  * getPreviousSpan, getPreviousSpanX, getPreviousSpanY  * isInProgress _always true, maybe bug_    *Example:*      Test: touch with 2 fingers, start pinch while you moving your fingers  Expected: the red point keep in the center between your fingers","New Feature",Low,Closed,"2017-01-17 12:04:44","2017-01-17 12:04:44",8
"The Titanium SDK ","Android: Can't get the right URL if app resume by URL for the second time","h5.Reproduce:    1. Run the attached app, (Simple app to check the URL which resumed the app)  2. Close the app.  3. Start test with following steps  4 Start app from the link (banking.meridiancu.ca/test_login) (from URL in email in this test)  5. Navigate to next page  6. Pause the app   7. Resume app using different link (banking.meridiancu.ca/security_login)  8.. Observe app resumes successfully. But when you click Check URL button It shows link with which the app was initially started. (banking.meridiancu.ca/test_login)    h6.Expect  The URL should be the exact one on resume or start the app.",Bug,High,Closed,"2017-01-17 01:13:57","2017-01-17 01:13:57",5
"The Titanium SDK ","iOS: Ti.UI.iOS.FeedbackGenerator crashes on kroll-thread","TIMOB-23891 brought us iOS 10 haptic engine support for the iPhone 7 and later. This is great! But unfortunately, it crashes when running on kroll-thread, because the methods require the main-thread internally. Since I caused this, I'll fix it :-)",Bug,High,Closed,"2017-01-16 18:58:52","2017-01-16 18:58:52",2
"The Titanium SDK ","Android: Log always shows non-titanium logs","Even with {{ti config cli.logLevel info}} I always see non-titanium related log messages like        and everything else Android logcat will show. In previous CLI versions it would only show app related output.     *Workaround:*  Create filters in Android Monitor to filter out non ti logs    *Test environment*  * Titanium 5.5.1, 6.0.0.v20161005072811  * CLI 5.0.10  * Android 6.0.1, Android 5    [Stackoverflow question|http://stackoverflow.com/questions/39072895/titanium-sdk-5-4-0-ga-is-showing-too-many-logs-at-console-on-android-platform/] with the same problem  ",Bug,Medium,Closed,"2016-10-12 17:20:00","2016-10-12 17:20:00",2
"The Titanium SDK ","iOS: TiLogServer started at the wrong app state","The {{TiLogServer}} introduced in 6.0.0 currently starts in {{application:didFinishLaunching}} or {{application:didFinishLauching:withOptions}} (when it launches from the background). By doing that, we are missing three logs:      This could be fixed by placing the {{[TiLogServer startServer]}} in the {{init}} of {{TiHost}} already. I worked during my tests and I see no downsides, but I'd be happy to have feedback!",Bug,Low,Resolved,"2017-01-14 11:15:04","2017-01-14 11:15:04",2
"The Titanium SDK ","Hyperloop: ios: Cannot find class with name: QBSettings","with hyperloop tryng to access any class returns this error:           tested with:           download the frameworks from: [https://quickblox.com/developers/Sample-webrtc-ios#Getting_Started_with_Video_Calling_API]      ",Bug,Critical,Closed,"2017-01-13 14:35:48","2017-01-13 14:35:48",1
"The Titanium SDK ","Android: Child view's percent width incorrect of horizontal layout parent view (6.1.0 regression)","This error occurred at Ti.SDK 6.1.0.v20170103224205, 6.1.0.v20170111010012, 6.1.0.v20170112013001, etc.  But, not occurred at Ti.SDK 6.1.0.v20161222061413  Of course, there is no problem with the GA version.    This code has problem.  https://github.com/<USER>titanium_mobile/pull/8720  ( https://jira.<USER>org/browse/TIMOB-24243 )    Sample Code    ",Bug,Critical,Closed,"2017-01-13 12:21:46","2017-01-13 12:21:46",3
"The Titanium SDK ","Android: Fetching Geolocation from background service causes crash on SDK > 22","File: android/modules/geolocation/src/java/ti/modules/titanium/geolocation/GeolocationModule.java    Method:  hasLocationPermissions()    The method checks permission on the current Activity, but it might be null when running in a service.    One solution is to change     Activity currentActivity  = TiApplication.getInstance().getCurrentActivity();  if (currentActivity.checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {    To    Context context = TiApplication.getInstance().getApplicationContext();  if (context.checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {",Bug,Critical,Closed,"2016-03-17 08:19:13","2016-03-17 08:19:13",3
"The Titanium SDK ","Hyperloop Android - Wrapper not generated for v4 class","How to reproduce:    * Import the attached *jars and aar* to your hyperloop project, under the *app/platform/android* folder.   * Add the following activity declaration in the *tiapp.xml* file:       * Create a *custom_theme.xml* file under */app/platform/android/res/values*. Put this in its content:          * Use the following code in any window:      * Build the project.  * An exception will be thrown:          The JS wrapper for this native class is not generated.  My native class extends from AppCompatActivity, which extends from FragmentActivity, which extends from BaseFragmentActivityJB, which extends from *BaseFragmentActivityHoneycomb*. The last are abstract classes. I believe Hyperloop doesn't generate JS wrappers for that.    I just want to launch my native activity without having to import all the support libraries with Hyperloop. Is there a way to achieve this without having to go through all this headache??",Bug,Critical,Resolved,"2016-12-07 11:56:32","2016-12-07 11:56:32",1
"The Titanium SDK ","iOS: Add ability to disallow custom keyboards (Data Leakage) via tiapp.xml","A security scan found a possible Information Leakage issue associated with this:    Apple introduces several new IPC (Inter Process Communication)/Extensions since the inception of iOS 8. One of the Extension Points is the ability for users to install Custom Keyboards. Custom Keyboards can operate in 2 Open Access modes (On and Off).    They observed that application allows custom keyboard. The use of custom keyboards can have security implications, if the user allows the custom keyboard to have internet connectivity. If the custom keyboard can connect to the internet, it can send any keystroke to the custom keyboard maker's server, leading to potential data leakage.  {code}    Can you ensure if is there a way we can ensure this warning won't show up when building the app?",Story,High,Closed,"2017-01-12 00:46:56","2017-01-12 00:46:56",2
"The Titanium SDK ","Universal Windows App (UWP): Unable to render different fonts","h5. Issue:   Tried different combinations in the fontFamily field in the tss (shown in the sample project) and none of them work.    App can be downloaded from : https://propelics.box.com/s/sznwb7l7t19gcl7wpmksz1qkz2qisqbk    h5. REPRODUCE  1. Create a simple app like attached : [https://propelics.box.com/s/sznwb7l7t19gcl7wpmksz1qkz2qisqbk]  2. Run it on Windows.  3.  You will not see the expected fonts at app launch.    h5. ACTUAL RESULT   Fonts are not shows as set in tss file for different labels.    h5. EXPECTED RESULT  The labels should be displayed with fonts set in the tss.    h5. Note:  Tried placing the font files in both:   - app/assets/windows   and   - app/assets/windows/fonts   but nothing worked.",Bug,High,Closed,"2017-01-11 22:07:44","2017-01-11 22:07:44",8
"The Titanium SDK ","Android native modules build is getting failed with Android NDK r13b","Cannot build an Android module with a blank, unedited template. Log below:    ",Bug,Critical,Closed,"2017-01-05 16:49:34","2017-01-05 16:49:34",13
"The Titanium SDK ","Rewrite Ti.App.Properties to a simpler form","Ti.App.Properties currently has a load of bloat functions which do not add anything but confusion.    I suggest using a plain function like:    `Ti.App.Properties.set('myKey', mixedValue)`;  `Ti.App.Properties.get('myKey');` (will then return either an object/array/string/number, depending on what you've set).    And discard all functions like `setList`, `setObject`, `setString`, `getList`, `getObject`, `getString`.    Also instead of having `Ti.App.Properties.removeAllProperties()`, we should aim for a concise naming like `Ti.App.Properties.clear()`. We are already in the Properties namespace so no need to repeat it in any of it's functions.",Improvement,Low,Closed,"2017-01-11 12:36:56","2017-01-11 12:36:56",0
"The Titanium SDK ","(IOS)Build fails with latest SDK build","When running the latest SDK build (6.1.0.v20170110083813) the following error is shown:       *Steps to reproduce*   1. Download the latest build (6.1.0.v20170110083813)  2. Launch <USER>studio   3. Go to {{File}} -> {{New}} -> {{Mobile App Project}}   4. Choose a Classic default project   5. Enter Details and create app   6. Go to the {{tiapp.xml}}  7. Set SDK to (6.1.0.v20170110083813)  8. Run app     *+Expected Result+*  Application should run without any errors.     *+Actual Result+*  Build error is shown.     Note: error only occurs on iOS devices. ",Story,High,Closed,"2017-01-10 18:57:22","2017-01-10 18:57:22",1
"The Titanium SDK ","Windows: Build fails when no target is specified","h5.Description    When building a Windows application without the -T option {{appc run -p windows}} the build <USER>errors out with the following        h5.Steps to reproduce    # Build an application with {{appc run -p windows}}    h5.Actual result    Build errors with the above    h5.Expected result    Build should not error and build to an emulator",Bug,None,Closed,"2017-01-08 21:08:24","2017-01-08 21:08:24",3
"The Titanium SDK ","UniversalWindowsApp(UWP): Ability to capture signature from user","h5. Problem Description:    We have received the following query about availability of third party module (ti.paint, titouchimageview, ti.imagefactory) for windows or any other way to achieve it.. Please find below the detailed info from customer:    bq. We've done this in the past for android and iOS, using 3rd party native modules (ti.paint, titouchimageview, ti.imagefactory), but we don't know how to do it in windows. Is there a way?        ",Story,None,Closed,"2017-01-07 06:18:56","2017-01-07 06:18:56",21
"The Titanium SDK ","Windows: Ability to expose a 3rd party SDK to Titanium","h5. Problem Description:    We have received the following query on exposing the third party SDK to Titanium. Please find below the detailed info from customer:    bq. We need a way to expose SAP's SMP SDK to Titanium in Windows.  bq. Background:  bq. --------------------  bq. We recently needed to do this for an Android app - What we did was to build a native module that interfaced with all methods from SMP we needed so that Titanium could consume them. This module was a native module, written in Java and Kroll APIs.  bq.   bq. We need to do something similar with Windows, but we know Kroll is not an option, so we're wondering if Hyperloop would be the right choice for accomplishing this. We need to somehow build something (for Windows) that interfaces with SAP's SMP SDK for Windows and be able to consume these methods from Titanium. As discussed in a call with the <USER>team the ability to do this is a go/no-go decision to use Titanium for Cintas.          ",Story,High,Closed,"2017-01-06 21:18:11","2017-01-06 21:18:11",8
"The Titanium SDK ","Android: ListView horizontal layout ignores 'right'","{{ListView}} items with {{layout: 'horizontal'}} do not display correctly.    *TEST CASE*  {code: java}  var win = Ti.UI.createWindow(),   items = [],   template = {    properties: {     accessoryType: Ti.UI.LIST_ACCESSORY_TYPE_NONE,     backgroundColor: 'white',     height: Ti.UI.SIZE,     layout: 'horizontal'    },    events: {     click: function(e) {      alert(e.source.customProperty);     }    },    childTemplates:    [     {      type: 'Ti.UI.Button',      bindId: 'bindButton',      properties: {       left: 10,       width: 100,       height: 40,       borderRadius: 20,       borderWidth: 1,       borderColor: '#dedede',       backgroundColor: 'green'      },     },     {      type : 'Ti.UI.Button',      bindId : 'bindButton2',      properties : {       right: 10,       width: 100,       height: 40,       borderRadius: 20,       borderWidth: 1,       borderColor: '#dedede',       backgroundColor: 'red'      }     }    ]   },   listView = Ti.UI.createListView({templates: {'template': template}}),   section = Ti.UI.createListSection();    for(var i = 1; i <= 10; i++){   items.push({    template: 'template',    bindButton: {       title: 'button a ' + i,       customProperty: i    },    bindButton2: {       title: 'button b ' + i,       customProperty: i    },    properties: {       itemId: i    }   });  }    section.setItems(items);  listView.sections = [section];    win.add(listView);  win.open();  {code}    *EXPECTED*  !ios.jpg|thumbnail!    *ACTUAL*  !android.jpg|thumbnail!",Bug,High,Closed,"2017-01-05 14:51:32","2017-01-05 14:51:32",5
"The Titanium SDK ","Universal Windows App (UWP) - Ability to display PDF in webview","h5. Problem Description:    When creating a WebView whose url property points to a PDF resource (like http://edis.ifas.ufl.edu/pdffiles/fe/fe57700.pdf or http://bdrconsultants.com/goalsetting.pdf ) the WebView is not even shown in the UI of the app, while, for instance, in iOS it'll display a WebView and the PDF within it.    h5. Steps to Reproduce:    1. Create a Alloy project and use the attached index.xml, index.tss and index.js files.  2. Run the app on Windows Emulator  2. WebView will not load upon launching  3. Tried with Titanium classic app and it does not work there as well. Please find the sample           h5. Current Behavior:  1. It works on iOS app and shows the pdf inside the WebView and works as expected.  2. On windows app it does not show anything.    h5. Expected Result:    Upon launching, WebView should open the pdf content for windows app similar to iOS.    Note: I tried with classic app and sample code is attached above and it does not work with that as well.  ",Bug,Medium,Closed,"2017-01-04 07:00:13","2017-01-04 07:00:13",5
"The Titanium SDK ","iOS: Change visible property sometimes change the center position of the view","I've 3 (loader, locker and debug view) hidden views (touchEnabled and visible set to false, and zIndex to 1) above the main view (zIndex = 2).    Each 'over' view has this method:        This screen has the 3 'over' views hidden:    !https://i.stack.imgur.com/tIChk.png!    Now, I'm opening the 'debug view', but, *SOMETIMES* it seems like it changes the positions (as if the center it's on the top left corner instead of the center of the device).    !https://i.stack.imgur.com/uetQz.png!    Instead of the required result:    !https://i.stack.imgur.com/JkvK4.png!    If I use the opacity instead of the visible property, it works properly.    This might be an SDK bug right?          All of these 4 views don't have width or height (so it uses the Ti.UI.FILL as default)    *<USER>stackoverflow answer:*    _I have noticed this too with a completely different implementation. I had just one view that I included in a window.    Apparently the left and top calculations were not done properly if the elements is hidden.    What I did to solve the issue is to hardcode the left/top position by calculating the left position using this:    *$.content.left = (Ti.Platform.displayCaps.platformWidth - 75) / 2;*    Where in my case 75 is the width the element has, so that'll be bigger in your case. You can do the same for height.    Now, this is an iOS only solution. On Android you will need to take DPI into consideration calculating it.    I do think it is a bug, though this solution works perfectly for me. I recommend looking at JIRA and see if it is a known issue, and if not, raise it with a very specific explanation of the problem, preferably with a reproducible case delivered as an app. Classic would help most. And if it is not reproducible in classic it might be an alloy issue._",Bug,Critical,Closed,"2017-01-03 11:10:33","2017-01-03 11:10:33",1
"The Titanium SDK ","Windows: Investigate - Use of HttpClient hangs UI tests","Enabling [ti.network.httpclient.test.js|https://github.com/<USER>titanium_mobile_windows/blob/master/Examples/NMocha/src/Assets/ti.network.httpclient.test.js] on our Jenkins causes freezes at some point on UI tests, especially we've been seeing hangs around [ti.ui.listview.test.js|https://github.com/<USER>titanium_mobile_windows/blob/master/Examples/NMocha/src/Assets/ti.ui.listview.test.js]. We suspect it has to be something leaking in {{HttpClient}} .",Story,High,Closed,"2017-01-03 07:53:15","2017-01-03 07:53:15",5
"The Titanium SDK ","iOS: Be able to receive native delegates from app to native modules / Hyperloop","We are currently lacking support for a non-hacky solution to ping native modules / hyerloop modules about global app delegates. Example use-cases:  - Push notification delegates  - Background service delegates  - URL opening delegates  - Lifecycle delegates    We could either achieve this by sending notifications using the {{NSNotificationCenter}} or by writing a delegate that is called by our core and implemented by other modules that want to use it. Both solutions require a core-SDK change, rather than CLI/Hyperloop changes. I would prefer the latter solution, since it's more transparent clear to the developer and easier to extend.    Before implementing anything of this, we should scope the impact on the current SDK and the required delegates to be exposed. ",Improvement,High,Closed,"2016-12-31 15:51:05","2016-12-31 15:51:05",8
"The Titanium SDK ","Android: Application can't recover from storage permission change","When changing the storage permissions to off (after the user already approved in the app), if the app is in background, it can't recover when the user select the app in the overview, it just crash.    I added a small example with only the permissions part    Steps:    * Build and install app in Android N  * Click in the label  * Accept storage permission  * Send app to background  * Open Settings  * Click Apps > Example App > Permissions  * Remove storage permission  * Try to go back to the example app, it will crash or get stuck in the splash screen  * Only way to recover from this is forcing the app to close and re-open it     Log for reference:      ",Bug,Medium,Closed,"2016-12-21 13:38:48","2016-12-21 13:38:48",5
"The Titanium SDK ","Windows: Investigate crash on HttpClient","We've been seeing that Windows 10 node on Jenkins tend to crash around UI tests (ListView etc) when we enable {{HttpClient}} test. We suspect something is leaking/blocking after use of {{HttpClient}}. We need to investigate why.  ",Bug,High,Closed,"2016-12-28 05:56:37","2016-12-28 05:56:37",5
"The Titanium SDK ","Android : Crash when Try to remove view from parents.","6.1.0.v20161222061413  click event has error, singletap is ok.    Test code      Error message    ",Bug,Critical,Closed,"2016-12-23 09:33:33","2016-12-23 09:33:33",3
"The Titanium SDK ","iOS: App rejected because of missing NSPhotoLibraryUsageDescription key","Although using 6.0.1.GA, [~<USER> experienced an issue with rejected apps because of the {{NSPhotoLibraryUsageDescription}} key. This was originally fixed by TIMOB-23925, but there seem to be another unwrapped code-snippet that needs to be wrapped by our precompile macros.     Fortunately, the workaround is simple by just adding the key to the plist (since it won't prompt anyway), but a fix should be in place for 6.1.0.",Bug,Critical,Closed,"2016-12-27 11:38:03","2016-12-27 11:38:03",2
"The Titanium SDK ","iOS: Multiple Webviews with same local URL does not inject Titanium XHR bridge properly","Yes, I know that this is an extreme case, but it happened to us (me and @Jei).    When you try to load multiple (1+) webviews at the same time with *same local URL*, the listeners provided by the XHR bridge (ti-injection) works *only for the first one instantiated*.    I debugged for hours, and finally realized why this happens.    The _LocalProtocolHandler_ class implemented in the Webview communication receives only the first URL to load; and this causes only one injection *with the same Ti.pageToken*.    In this screenshot you can see that the generated pageToken is the same:    !https://cl.ly/3H393n3C2a2D/Screen%20Shot%202016-12-24%20at%2012.29.07.png!    The solution would be to inject a new header that has a unique counter thats incremented every time a new local URL is set.",Bug,Critical,Closed,"2016-12-24 11:46:26","2016-12-24 11:46:26",2
"The Titanium SDK ","Android: openPhotoGallery is not working at all on SDK 6.0.0.GA,6.0.1.GA","I can't get openPhotoGallery to work on Android since upgrading to 6.0.0.    The gallery opens fine, but when an image is selected, and I try to read the blob, I'm getting the following error:      ",Bug,Critical,Closed,"2016-12-15 07:26:02","2016-12-15 07:26:02",8
"The Titanium SDK ","iOS: Audio recording functionality is not working. ","Audio recording is not working with Ti SDK 6.0.0.GA but works as expected 5.5.1.GA    Steps to Reproduce  1. Just run this code to the device and wait 10000ms time.  2. Add MicrophoneUsage permission to the tiapp.xml file.    Test Code      {code:title=tiapp.xml}  <key>NSMicrophoneUsageDescription</key>                  <string>Can we use your microphone?</string>      Thanks",Bug,Critical,Closed,"2016-12-21 18:34:29","2016-12-21 18:34:29",2
"The Titanium SDK ","Android: androidback event not working in Ti SDK 6.0.0.GA","h5.Issue Description     Hi,    To prevent window close on android hardware back click, customer have been using andoridback event.  This was working properly till 5.5.1.GA. With 6.0.0.GA, even though this event is fired, it is not preventing the window close.    h5. Steps to Replicate     # Download the attached project   # Make sure is running SDK 6.0.0GA (works on 5.5.1.GA)  # Run  # Click on Hello World to open a new screen  # Click the back button  # If the project is built with 5.5.1.GA, new screen will not close on hardware back click. But the new screen will close if the project is built with 6.0.0.GA.  ",Bug,Critical,Closed,"2016-12-21 15:40:33","2016-12-21 15:40:33",3
"The Titanium SDK ","Windows: touchEnabled property/method applied but without any effect","I've only tested in local app:    appc run -p windows -T ws-local    test project attached    *Classic code*    ",Bug,High,Closed,"2016-11-15 17:38:12","2016-11-15 17:38:12",5
"The Titanium SDK ","Android: TextField AUTOCAPITALIZATION_ALL property doesn't work with googles new keyboard: GBoard","*Issue description:*    Google has recently updated there keyboard to GBoard. I noticed that a text field which has the autocapitalization property set to Titanium.UI.TEXT_AUTOCAPITALIZATION_ALL is not working in android. Whereas this works fine with the previous of google keyboard.    *Steps to reproduce*:  1. Make sure your device's default Google Keyboard is updated to GBoard (New google keyboard)   2. Create a project and add the test code provided below  3. Test on any version of android above 4.4.x.   4. See the auto-capitalization property not taking place.    *Expected*: The typed text should automatically be capitalize  *Actual*: Text doesn't capitalize    Test code:      Related link: http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TextField-property-autocapitalization    Thanks  ",Bug,High,Closed,"2016-12-21 10:40:30","2016-12-21 10:40:30",5
"The Titanium SDK ","Ti.UI.iOS.LivePhotoView does not update it's layout when it's livePhoto property is updated","If a Ti.UI.iOS.LivePhotoView is instantiated without the livePhoto property set, and later it is set (ie, after an http request) , the view size remains at 0x0 pixels instead of updating.      The Titanium Classic example let's you reproduce the issue, allthough it is in Alloy where it becomes more relevant.  As a workaround you may reset the view width so that the relayout method is invoked on the view proxy.  The issue can be solved in the native sdk as follows:      or overriding and making public the relayout method on TiUIiOSLivePhotoViewProxy.h & TiUIiOSLivePhotoViewProxy.m and doing instead:    ",Bug,High,Closed,"2016-12-21 08:19:53","2016-12-21 08:19:53",1
"The Titanium SDK ","Android: Use SecureRandom for SSLContext","A [SecureRandom|https://developer.android.com/reference/java/security/SecureRandom.html] instance should be set in the constructor of  [SSLContext|https://developer.android.com/reference/javax/net/ssl/SSLContext.html], instead of the default implementation.",Bug,Critical,Closed,"2016-12-20 19:19:06","2016-12-20 19:19:06",2
"The Titanium SDK ","Windows: listview.scrollToItem not working","http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.ListView-method-scrollToItem    LIstView method scrollToItem does not work on the Windows platform.    Create a Default Allow Project and use the attached index.js file. Build and run. Select the Scroll To Item list item. Works in iOS but does nothing on the Windows platform.        ","New Feature",High,Closed,"2016-12-03 22:45:34","2016-12-03 22:45:34",5
"The Titanium SDK ","Android: Large file uploads fail with java.lang.OutOfMemoryError","h2. Problem    Summary: Uploading files larger than appx. 10 MB on older Android devices results in java.lang.OutOfMemoryError either called within httpclient.onerror, or as an uncaught exception viewable in LogCat before upload even starts.    Expected behavior: Being able to upload the attached 50 MB file with no errors. Perhaps it doesn't upload in chunks?    Actual behavior: httpclient.onerror is called with e.error: java.lang.OutOfMemoryError, or uncaught exception, depending on how much RAM device has.      h2. Test findings    I've done a lot of testing to narrow this down.   For simulators I exclusively used intel x86 images.  I've tested exclusively with no apps running in the background.      Here's my findings:      OK: No error - the file is uploaded OK.  Error 1: Out of memory error in httpclient.onerror  Error 2: Uncaught exception, error in LogCat (generel output at bottom of this post)    Android 4.1.2  {color:red}- Simulator, RAM: 200 MB RAM, Error 2  - Simulator, RAM: 768 MB RAM, Error 1  - Samsung Galaxy S3, RAM: 2GB, Error 1{color}    Android 4.2.2  {color:green}- Simulator, RAM: 768 MB RAM, OK{color}  {color:red}- Simulator, RAM: 600 MB RAM, Error 1  - Simulator, RAM: 200/400 MB RAM, Error 2{color}    Android 4.3.1 or 4.3  {color:red}- Galaxy Nexus, Android 4.3, RAM: 1GB, Error 2  - Samsung Galaxy S3, Android 4.3, RAM: 2GB, Error 1  - Simulator, RAM: 600 MB, Error 1  - Simulator, RAM: 400 MB, Error 2{color}    Android 4.4.2  {color:red}- Simulator, RAM: 400 MB, Error 1  - Simulator, RAM: 200 MB, emulator hangs completely on splash screen of app when launched{color}  {color:green}- Simulator, RAM: 768 MB, OK{color}    Android 5.0.1  {color:green}- Simulator, RAM: 400 MB, OK  - Simulator, RAM: 200 MB, OK{color}    Android 6.0  {color:green}- Simulator, Android 6.0, RAM: 200 MB, OK{color}    Android 7  {color:green}- OnePlus 3, Android 7, RAM: 6 GB RAM, OK  - Simulator, Android 7, RAM: 768 MB RAM, OK  - Simulator, Android 7, RAM: 200 MB RAM, OK{color}          h2. Test conclusion    On Android SDK versions below 5, for devices with little RAM, all uploads will fail with out of memory errors.      h2. Possible fix suggestion     Perhaps detect Android versions below 5 when sending large files via httpclient, and upload those files in chunks instead of reading it all to memory.  If httpclient is already using chunked uploads, maybe decrease chunk sizes.      h2. Test case  Compiled APK here: https://bitfabrikken.dk/testapp.apk  Test file for downloading here: https://bitfabrikken.dk/50mb_file.mp4 (just a linux dd-generated file with lots of dots)  {code:lang=javascript|title=app.js}  var win = Ti.UI.createWindow({      backgroundColor: black,  });  win.addEventListener('open',function listener(){      win.removeEventListener('open', listener);      testupload();  });      var progressLabel = Ti.UI.createLabel({      text: 0%,      color: white,      font: { fontSize: 50},      bottom: 10,      left: 10,  });  win.add(progressLabel);      win.open();      function testupload(){        //any resolvable hostname will do for this test, but I setup a simple php file that simply prints OK on any request      var url = https://bitfabrikken.dk/testupload.php;       var xhr = Ti.Network.createHTTPClient({    //various parameters below I've tried that don't work           //enableKeepAlive: false,          //keepAlive:  false,          //autoEncodeUrl: false,          //validatesSecureCertificate: true,          //timeout: 10000000,      });           xhr.onsendstream = function(e){          progressLabel.text = parseInt(e.progress * 100)+%;      };      xhr.onerror = function(e){          console.log(xhr.onerror:);          console.log(e);          alert(JSON.stringify(e));      };       xhr.onload = function(e){          //this.responseText should be OK          alert(SUCCESS!);          console.log(SUCCESS!);      };                  xhr.open(POST, url);             var file = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, 50mb_file.mp4);      if (!file.exists()){          alert(file not found);          return;       }            //various different headers I've tried, same error          //xhr.setRequestHeader(Connection,Close);          //xhr.setRequestHeader(Content-Type, application/x-www-form-urlencoded);          //xhr.setRequestHeader(enctype, multipart/form-data);            console.log(SENDING FILE, size: +(file.size/1024/1024)+ MB);            xhr.send({          file: file      });              }           Build log  {code:lang=none|title=build_log}  2016-12-20T09:36:55.012Z | TRACE  | set environment to {registry:https://software.<USER>com,security:https://security.<USER>com,baseurl:https://platform.<USER>com}  2016-12-20T09:36:55.013Z | TRACE  | checking credentials for existing session  2016-12-20T09:36:55.236Z | TRACE  | Attempting to load session info from config file  2016-12-20T09:36:55.240Z | TRACE  | check if session is invalidated  2016-12-20T09:36:56.102Z | TRACE  | registry result 200 application/json undefined undefined false undefined  2016-12-20T09:36:56.130Z | TRACE  | registry returned { expiry: 1482831414645 }  2016-12-20T09:36:56.130Z | TRACE  | refresh session expiry to:  1482831414645  2016-12-20T09:36:56.133Z | TRACE  | session expiry 1482831414645 false  2016-12-20T09:36:56.134Z | TRACE  | Arrow Cloud config file: C:\Users\<USER>.acs  2016-12-20T09:36:56.135Z | TRACE  | found Arrow Cloud login { mid: 'CENSORED',    publishPort: 443,    publishHost: 'https://admin.cloudapp-enterprise.<USER>com',    username: 'CENSORED',    cookie: [ 'connect.sid=CENSORED; Path=/; Expires=Tue, 03 Jan 2017 07:45:16 GMT; HttpOnly' ],    defaultEP:      { publishHost: 'https://admin.cloudapp-enterprise.<USER>com',       publishPort: 443 } } , checking nodeACSEndpoint= https://admin.cloudapp-enterprise.<USER>com  2016-12-20T09:36:56.137Z | TRACE  | Arrow Cloud cookie expiry [ 1483429516000 ]  2016-12-20T09:36:56.137Z | TRACE  | session already loaded in opts.session  2016-12-20T09:36:56.139Z | TRACE  | getCredentials() session:  {    ipaddress: 10.0.0.6,    username: CENSORED,    password: <OMITTED>,    session: <OMITTED>,    nonce: <OMITTED>,    environment: {      name: production,      isProduction: true,      acsBaseUrl: https://api.cloud.<USER>com,      acsAuthBaseUrl: https://secure-identity.cloud.<USER>com,      nodeACSEndpoint: https://admin.cloudapp-enterprise.<USER>com    },    token: <OMITTED>,    fingerprint: CENSORED,    fingerprint_description: Windows Machine ID: CENSORED,    org_id: 100008383,    expiry: 1482831414645  }  2016-12-20T09:36:56.140Z | TRACE  | loading plugins for command run  2016-12-20T09:36:56.181Z | TRACE  | run search paths:  [    C:\\Users\\<USER>\.<USER>\install\\6.1.0\\package,    C:\\Users\\<USER>\.<USER>\install\\6.1.0\\package\\node_modules,    C:\\Windows\\system32\\node_modules,    C:\\Windows\\node_modules,    C:\\node_modules,    C:\\Users\\<USER>\.<USER>\.npm\\lib\\node_modules  ]  2016-12-20T09:36:56.182Z | DEBUG  | [PLUGIN-LOAD] 0ms C:\Users\<USER>.<USER>install\6.1.0\package\appc.js  2016-12-20T09:36:56.407Z | DEBUG  | [PLUGIN-LOAD] 224ms C:\Users\<USER>.<USER>install\6.1.0\package\node_modules\appc-cli-titanium\appc.js  2016-12-20T09:36:56.407Z | DEBUG  | run plugin: C:\Users\<USER>.<USER>install\6.1.0\package\node_modules\appc-cli-titanium  2016-12-20T09:36:56.408Z | DEBUG  | [PLUGIN-LOAD] 0ms C:\Users\<USER>.<USER>install\6.1.0\package\node_modules\arrow\appc.js  2016-12-20T09:36:56.410Z | DEBUG  | run plugin: C:\Users\<USER>.<USER>install\6.1.0\package\node_modules\arrow  2016-12-20T09:36:56.413Z | TRACE  | plugin arrow failed its when function check, skipping...  2016-12-20T09:36:56.414Z | TRACE  | loading plugin titanium for command run CLI options via function  2016-12-20T09:36:56.414Z | TRACE  | loading plugin titanium for command run CLI options via array  2016-12-20T09:36:56.415Z | TRACE  | executing command run with the following plugins:  [titanium]  2016-12-20T09:36:56.416Z | TRACE  | Attempting to load session info from config file  2016-12-20T09:36:56.418Z | TRACE  | check if session is invalidated  2016-12-20T09:36:57.077Z | TRACE  | registry result 200 application/json undefined undefined false undefined  2016-12-20T09:36:57.078Z | TRACE  | registry returned { expiry: 1482831415635 }  2016-12-20T09:36:57.078Z | TRACE  | refresh session expiry to:  1482831415635  2016-12-20T09:36:57.080Z | TRACE  | session expiry 1482831415635 false  2016-12-20T09:36:57.080Z | TRACE  | session already loaded in opts.session  2016-12-20T09:36:57.105Z | DEBUG  | Titanium Downloads Last Checked: 1482225107758  2016-12-20T09:36:57.128Z | TRACE  | No project alloy hook; skipping update to 1.0.0  2016-12-20 10:37:00  Operating System    Name                        = Microsoft Windows 10 Pro    Version                     = 10.0.14393    Architecture                = 32bit    # CPUs                      = 8    Memory                      = 34270777344  Node.js    Node.js Version             = 4.5.0    npm Version                 = 2.15.9  Titanium CLI    CLI Version                 = 5.0.11  Titanium SDK    SDK Version                 = 6.0.0.GA    SDK Path                    = C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA    Target Platform             = android  Command    C:\Program Files (x86)\nodejs\node.exe C:\Users\<USER>.<USER>install\6.1.0\package\node_modules\titanium\lib\titanium.js build run --platform android --sdk 6.0.0.GA --log-level trace --project-dir C:\Dropbox\apps\testapp --deploy-type production --target dist-playstore --android-sdk C:\android --output-dir C:\Dropbox\apps\testapp --api-level 13 --alias tidev --keystore C:\Dropbox\apps\testapp\dev_keystore --store-password tirocks --key-password tirocks --no-colors --no-progress-bars --no-prompt --no-banner --prompt-type socket-bundle --prompt-port 60573 --username <EMAIL> --password khpcvnwr --config-file C:\Users\<USER>AppData\Local\Temp\build-1482226617081.json --no-banner --project-dir C:\Dropbox\apps\testapp  [INFO] :   Deploy type: production  [INFO] :   Building for target: dist-playstore  [INFO] :   Targeting Android SDK API: 23  [INFO] :   Building for the following architectures: armeabi-v7a, x86  [INFO] :   Signing with keystore: C:\Dropbox\apps\testapp\dev_keystore (tidev)  [INFO] :   Debugging disabled  [INFO] :   Profiler disabled  [INFO] :   Forcing rebuild: JavaScript files need to be re-encrypted  [INFO] :   JavaScript files need to be encrypted  [INFO] :   Processing JavaScript files  [INFO] :   Encrypting JavaScript files: C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\titanium_prep.win32.exe dk.bitfabrikken.testapp C:\Dropbox\apps\testapp\build\android\assets app.js _app_props_.json  [INFO] :   Writing C:\Dropbox\apps\testapp\build\android\bin\assets\app.json  [INFO] :   Extracting module resources: C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-analytics.res.zip  [INFO] :   Extracting module resources: C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-android.res.zip  [INFO] :   Extracting module resources: C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-filesystem.res.zip  [INFO] :   Extracting module resources: C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-app.res.zip  [INFO] :   Extracting module resources: C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-media.res.zip  [INFO] :   Extracting module resources: C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-locale.res.zip  [INFO] :   Extracting module resources: C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-network.res.zip  [INFO] :   Extracting module resources: C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-xml.res.zip  [INFO] :   No aidl files to compile, continuing  [INFO] :   Generating i18n files  [INFO] :   Generating C:\Dropbox\apps\testapp\build\android\res\values\theme.xml  [INFO] :   Packaging application: C:\android\build-tools\23.0.3\aapt.exe package -f -m -J C:\Dropbox\apps\testapp\build\android\gen -M C:\Dropbox\apps\testapp\build\android\AndroidManifest.xml -A C:\Dropbox\apps\testapp\build\android\bin\assets -S C:\Dropbox\apps\testapp\build\android\res -I C:\android\platforms\android-23\android.jar -F C:\Dropbox\apps\testapp\build\android\bin\app.ap_ --auto-add-overlay --extra-packages ti.modules.titanium.ui:android.support.v7.appcompat:android.support.v7.cardview -S C:\Users\<USER>AppData\Local\Temp\1161120-5884-1wr5l8w/res -S C:\Users\<USER>AppData\Local\Temp\1161120-5884-62j53h/res -S C:\Users\<USER>AppData\Local\Temp\1161120-5884-1t1lh48/res  [INFO] :   Building Java source files: c:\Program Files (x86)\Java\jdk1.8.0_111\bin\javac.exe -J-Xmx1024M -encoding utf8 -bootclasspath C:\android\platforms\android-23\android.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\kroll-v8.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-analytics.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\aps-analytics.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-android.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\jaxen-1.1.1.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\ti-commons-codec-1.3.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\kroll-common.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\titanium.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\android-support-multidex.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-filesystem.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-app.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-ui.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\nineoldandroids-appc-2.4.0.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-media.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-appcompat.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\android-support-v4.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\android-support-v7-appcompat.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-cardview.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\cardview-v7-23.0.1.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-locale.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-network.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-xml.jar;C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\lib\titanium-verify.jar;R.class;AssetCryptImpl.class;TestappActivity.class;TestappAppInfo.class;TestappApplication.class -d C:\Dropbox\apps\testapp\build\android\bin\classes -proc:none -target 1.6 -source 1.6 @C:\Dropbox\apps\testapp\build\android\java-sources.txt  [INFO] :   Running dexer: c:\Program Files (x86)\Java\jdk1.8.0_111\bin\java.exe -Xmx1024M -XX:-UseGCOverheadLimit -Djava.ext.dirs=C:\android\platform-tools -jar C:\android\build-tools\23.0.3\lib\dx.jar --dex --multi-dex --output=C:\Dropbox\apps\testapp\build\android\bin\dexfiles C:\Dropbox\apps\testapp\build\android\bin\classes C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\lib\titanium-verify.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\kroll-v8.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-analytics.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\aps-analytics.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-android.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\jaxen-1.1.1.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\ti-commons-codec-1.3.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\kroll-common.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\titanium.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\android-support-multidex.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-filesystem.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-app.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-ui.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\nineoldandroids-appc-2.4.0.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-media.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-appcompat.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\android-support-v4.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\android-support-v7-appcompat.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-cardview.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\cardview-v7-23.0.1.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-locale.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-network.jar C:\ProgramData\Titanium\mobilesdk\win32\6.0.0.GA\android\modules\titanium-xml.jar  [INFO] :   Creating unsigned apk  [INFO] :   Processing C:\Dropbox\apps\testapp\build\android\bin\dexfiles  [INFO] :   Processing C:\Dropbox\apps\testapp\build\android\src  [INFO] :   Writing unsigned apk: C:\Dropbox\apps\testapp\build\android\bin\app-unsigned.apk  [INFO] :   Using MD5withRSA signature algorithm  [INFO] :   Signing apk: c:\Program Files (x86)\Java\jdk1.8.0_111\bin\jarsigner.exe -sigalg MD5withRSA -digestalg SHA1 -keystore C:\Dropbox\apps\testapp\dev_keystore -storepass ******* -keypass tirocks -signedjar C:\Dropbox\apps\testapp\build\android\bin\testapp.apk C:\Dropbox\apps\testapp\build\android\bin\app-unsigned.apk tidev  [INFO] :   Aligning zip file: C:\android\build-tools\23.0.3\zipalign.exe -v 4 C:\Dropbox\apps\testapp\build\android\bin\testapp.apk C:\Dropbox\apps\testapp\build\android\bin\testapp.apkz  [INFO] :   Writing build manifest: C:\Dropbox\apps\testapp\build\android\build-manifest.json  [INFO] :   Packaging complete  [INFO] :   Package location: C:\Dropbox\apps\testapp\testapp.apk  [INFO] :   Project built successfully in 18s 889ms  ",Bug,Critical,Closed,"2016-12-20 11:34:21","2016-12-20 11:34:21",5
"The Titanium SDK ","Android-Ti.UI.SIZE doesn't work properly with horizontal layouts","h5. Problem Description:  When the parent is in horizontal layout and the right child's width is Ti.UI.FILL(occupying the available space left) with its height Ti.UI.SIZE to fit its content,  some of the content is getting chopped off.    h5. Steps to Reproduce:  Use the attached app (index.xml, index.js , index.tss) to reproduce the problem and see the behavior.    h5. Current Behavior:  You can see that the layout in items 2, 4, 6, 8 and 10 is distorted because of which ACKNOWLEDGE portion is chopped off.    Note: If 2 more characters are added to the text in these rows, layout will be adjusted properly. This says that the layout is getting distorted for specific number of characters.    h5. Expected Behavior:  The goal is:    -------------------------------  |Header1 | Label1 |  | | Label2 |  | | Label3 |  | | Label4 |  -------------------------------  |Header2 | Label1 |  | | Label2 |  | | Label3 |  | | Label4 |  -------------------------------    ",Bug,Critical,Closed,"2016-12-20 04:42:43","2016-12-20 04:42:43",8
"The Titanium SDK ","iOS: Building to dist-appstore does not add the application to Xcode.","This is a {color:red}Regression {color}. This does not occur with 6.0.0.GA.  When building for the Appstore, xcarchives are not viewable in the Xcode organizer.    h4. Steps to reproduce:  # Create an application  # Package for {{dist-appstore}} using either:  ## Studio  ## {{appc run -p ios -T dist-appstore}}    h4. Actual  The application Archive is added to {{/Users/<user>/Library/Developer/Xcode/Archives}} but does not show in Xcode Organizer.    h4. Expected  The application should show in Xcode and the output directory",Bug,Critical,Closed,"2016-12-19 18:17:11","2016-12-19 18:17:11",5
"The Titanium SDK ","Windows: zIndex property/method applied but without any effect","I've only tested in local app:    appc run -p windows -T ws-local    test project attached",Bug,High,Closed,"2016-11-18 17:08:25","2016-11-18 17:08:25",5
"The Titanium SDK ","iOS: Add backgroundSelectedColor property (Parity)","Hi,    There is no way of setting backgroundSelected Color for ios using <USER> And if i tried to do acheive same by using touchStart and touchEnd Listeners, it sowing some weird behavior. On the tap of left side corner of the device, backgroundSelected color is getting reflected little late. Listeners are getting called, but background color is not changing quickly on iPhone 7 Only.    Please help  Thanks  <USER>",Improvement,Critical,Closed,"2016-12-15 07:05:42","2016-12-15 07:05:42",3
"The Titanium SDK ","Android: Module build should not error when incompatible native libraries are in the 'libs' folder","Upon dropping support for {{armeabi}} from {{6.0.0.GA}} some older modules still contain a {{libs/armeabi}} folder. This prevents the module from compiling on {{6.0.0.GA}}.",Bug,High,Closed,"2016-12-16 11:32:08","2016-12-16 11:32:08",5
"The Titanium SDK ","Android: Clean module build folder appropriately","When building a module, files can be left over and cause issues with any subsequent rebuilds. This mainly happens when converting a {{5.5.1.GA}} module to build with {{6.0.0.GA}}.",Bug,High,Closed,"2016-12-16 11:27:35","2016-12-16 11:27:35",5
"The Titanium SDK ","Windows: Phone TCP Write Error","Hello  I need to develop a Windows Phone app that performs communication via TCP socket. Specifically, it is an extension of an already developed apps for iOS and Android platforms with Titanium SDK.  Seeing that the development of the TCP part is found only in the 6.1.0.x SDK version I have updated <USER>SDK and Studio to the latest versions.  The TCP client implementation is present and working but I encountered some problems with sending messages, specifically it seems that the second message sent creates an error that crashes the application.  I quote here the the error log and test the application code.  The TCP server is a simple nodejs echo script that responds with the message received.    *Studio Console Log*      *Test Code*        ",Bug,Critical,Closed,"2016-11-16 06:14:16","2016-11-16 06:14:16",3
"The Titanium SDK ","Android: close event is not fired when a window is closed","Closing a {{Titanium.UI.Window}} does not fire the {{close}} event.    *TEST CASE*  {code:js}  var b = Ti.UI.createWindow({backgroundColor: 'red'}),      w = Ti.UI.createWindow({backgroundColor: 'yellow'});    w.addEventListener('close', function () {      b.setBackgroundColor('green');  });  b.addEventListener('open', function () {      w.addEventListener('open', function() {          setTimeout(function () {              w.close();          }, 500);      });      w.open();  });    b.open();  {code}    *Actual*  - Window is red    *Expected*  - Window is green",Bug,Critical,Closed,"2016-12-14 15:58:35","2016-12-14 15:58:35",3
"The Titanium SDK ","Universal Windows App (UWP) not getting the correct source.id","h5. Issue:   When wrapping inner views inside an outer view and adding a click event listener in the outer view, the feedback gotten from the click event object in regards to what the source of the click is, is incorrect IN WINDOWS.    h5. REPRODUCE  1. Create a simple app like attached.  2. Run it on Windows, iOS and Android device.  3.  Click on any of the four red squares    h5. ACTUAL RESULT   See the console output prints _evt.source.id==win, even if you explicitly click within the red areas, whereas in iOS and Android, the console prints  _evt.source.id==innerWrapper1, _evt.source.id==innerWrapper2 _evt.source.id==innerWrapper3 and _evt.source.id==innerWrapper4, respectively.    h5. EXPECT RESULT  It should work well like it shows output  on Android and iOS",Bug,High,Closed,"2016-12-14 04:22:05","2016-12-14 04:22:05",8
"The Titanium SDK ","Universal Windows App (UWP): ScrollView doesn't scroll vertically when the content is larger then height","Issue: A ScrollView that contains larger content than its height (and its contentHeight is set to auto) won't scroll up and down On WINDOWS. On Android and iOS works as expected.    h6.Reproduce  1. Create a simple app like attached.  2. Run it on Windows, iOS and Android device.  3. Try to scroll down    h6.Actual Result  On Windows device, ScrollView doesn't scroll vertically.    h6.Expect Result  It should work well like ScrollBiew on Android and iOS",Bug,High,Closed,"2016-12-14 01:43:53","2016-12-14 01:43:53",5
"The Titanium SDK ","iOS: --device-family expects values other than help describes","When trying to specify a device family, the accepted values are different than expected and from what help indicates. Using the suggested values in help results in this error:  {{[ERROR] Invalid device family ipad}}    *Steps to reproduce issue*  1. Create a new project  2. CD to the project folder  3. Run the project with {{ti build --device-family ipad}} or {{appc run --device-family ipad}}    *Expected Results*  The project is built with the iPad device family    *Actual Results*  The ipad device family is not accepted and the user is prompted for a valid device-family    *Notes*  The error occurs with the values {{ipad}}, {{iphone}}, and {{universal}}.  The accepted values are {{iPad}}, {{iPhone}}, and {{\_\_universal\_\_}}  Help indicates that the values should be lowercase and not use underscores.",Bug,Critical,Closed,"2016-12-13 23:11:23","2016-12-13 23:11:23",5
"The Titanium SDK ","Android: Expose Keychain access in Ti.TouchID (Parity with iOS)","Now that iOS keychain functionality has been sorted out in TIMOB-20547, we would like someone to look into exposing Android Keychain functionality discussed in [https://developer.android.com/reference/android/security/KeyChain.html].     Currently, I believe Android TouchId module can only check for correct/incorrect fingerprint. We would like to actually save key/value pair and hopefully get some additional security features that native code provides.       ","New Feature",Critical,Closed,"2016-12-13 19:27:07","2016-12-13 19:27:07",21
"The Titanium SDK ","Android: VideoMaximumDuration and VideoQuality are not working using Android 6","h2 Issue Description    Trying to increase the limit size and quality of videos it's capturing is not working using:    works on iOS and Android 5, but not using 6.     Creating Intents is also not working:      h6. Steps to reproduce  # Download the attached zip https://drive.google.com/open?id=0BwTWo-c2a0b9UlJVdTRvQkI3VUU  # Run for android6   # Record video ",Bug,High,Closed,"2016-12-12 22:40:28","2016-12-12 22:40:28",1
"The Titanium SDK ","Android: run-on-main-thread - can not resume app","*Problem*  Using an empty application with   {{<property name=run-on-main-thread type=bool>true</property>}}  set in tiapp.xml. It does not handle the resume properly. The application freezes after a resume of the application by pressing the back button on the android device and starting it again.    _Actual behaviour_:   # Start the application  # Shows the startup screen   # Shows the label Hello world  # click on back button of the device  # Application goes in background state and closes it  # Start the application again  # Shows the startup screen (Red titanium / <USER>screen)  # Keeps showing the startup screen, the label Hello world is not shown    _Expected behaviour_:  # Start the application  # Shows the startup screen   # Shows the label Hello world  # click on back button of the device  # Application goes in background state and closes it  # Start the application again  # Shows the startup screen   # Shows the label Hello world    *Test case*  [^tiapp.xml]: includes  <ti:app     xmlns:ti=http://ti.<USER>org>  ...    <property name=run-on-main-thread type=bool>true</property>  ...  </ti:app>    [^index.js]:  var win = Ti.UI.createWindow();  var label = Ti.UI.createLabel({ text: Hello World });  win.add(label);  win.open();    *Community Discussion*  In Jira AC-4588 is the same topic described.",Bug,Critical,Closed,"2016-12-12 10:13:21","2016-12-12 10:13:21",2
"The Titanium SDK ","iOS: Support Ti.UI.TextArea padding (Parity)","In 6.0.0, we supported the {{padding}} value for the TextField and TextArea, but the TextArea one was not implemented for iOS so far. This ticket should change that.",Improvement,High,Closed,"2016-12-12 12:20:05","2016-12-12 12:20:05",5
"The Titanium SDK ","Docs: Ti.UI.TextArea docs are incorrect for iOS support of padding property","http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TextArea-property-padding shows Ti.UI.TextArea padding property is supported by Android and iOS. However on iOS setting this property does nothing. We should remove iOS from the supported platforms.",Bug,Medium,Closed,"2016-12-12 11:41:14","2016-12-12 11:41:14",1
"The Titanium SDK ","Android: <WebView> with link to video does not play after upgrade to TiSDK 6.0.0 (Regression)","After upgrading to TiSDK 6.0.0 videos in a webview did not show any more. I have discussed the matter with Hans and have created this ticket with the findings.    My original code looks like this:    *video.xml*        *video.js*        where the _format(..)_ method in _utils/util_ is a simple method:        .... and I call the _video_ controller like this:    *videos.js*        ... where videoList is inside a scrollview like this:    *videos.xml*        That all worked fine up to TiSDK 5.5 - but upgrading to TiSDK 6.0.0 broke it. It still worked on iOS but on Android the webview was simply not loaded. The title was visible - but nothing after that (per video).    After the discussion with Hans I first tried to do the webview in js-only code. That worked for Android - but for iOS I could not start the video. I tried to set the zIndex to 1000 and set touchEnabled to true (though it is default) on the webview - but still couldn't start the video by pressing on the play button. Nothing happened.    So I ended up implementing the previous model for iOS and the js-only for Android. Like this:    *video.js*        *video.xml*        And that seems to work as expected :-)",Bug,Critical,Closed,"2016-12-11 17:56:16","2016-12-11 17:56:16",5
"The Titanium SDK ","Android: GoogleMaps markers and routing are invisible in Ti.UI.WebView (Regression)","Hi,  Google map into webview with markers and routing are invisible on 6.0.0.GA but it working as expected on 5.5.0.GA.  Step to reproduce :  1. Find the [^WebViewGoogleMapTest.zip]  2. Build in android.  3. Markers  are invisible  on 6.0.0.GA [^6.0.0.GA.jpg]  4. Markers  are visible  on 5.5.0.GA [^5.5.0.GA.png]    Environment       Thanks ",Bug,High,Closed,"2016-12-11 13:13:05","2016-12-11 13:13:05",3
"The Titanium SDK ","iOS: Memory leaks after select camera or photo gallery with jscore framework","If {{<use-jscore-framework>false</use-jscore-framework>}} memory leaking happen after selecting image or capture picture from camera,  attached memory allocation after selecting 10 images from photo gallery, with true/false for {{run-on-main-thread}}, {{use-auto-layout}} and {{use-jscore-framework}}, I think the problem in last one.    {code:xml|title=tiapp.xml}   <property name=run-on-main-thread type=bool>true</property>   <ios>    <enable-launch-screen-storyboard>true</enable-launch-screen-storyboard>    <use-app-thinning>true</use-app-thinning>    <use-jscore-framework>false</use-jscore-framework>    <use-auto-layout>true</use-auto-layout>   <ios>  {code}    {code:javascript|title=app.js}  var win = Ti.UI.createWindow(),      button = Ti.UI.createButton({          title: 'Open Gallery',      });    button.addEventListener('click', function() {      Ti.Media.openPhotoGallery({          mediaTypes: Ti.Media.MEDIA_TYPE_PHOTO,          success: function(e) {              win.backgroundImage = e.media;          }      });  });    win.add(button);    win.open();  {code}",Bug,Critical,Closed,"2016-12-10 07:20:45","2016-12-10 07:20:45",21
"The Titanium SDK ","iOS: Ti.Media.CAMERA_AUTHORIZATION_* permissions are `undefined` in some 6.0.0.GA cases","The Ti.Media.CAMERA_AUTHORIZATION_* constants are no longer defined. They all return {{undefined}}. Code like the following worked in our app up till 5.5.x. Updating to 6.0.0.GA it fails to recognize that the user has already granted permission.        TIMOB-17812 shows a similar way to use these constants. Our app has been using them since iOS8 was first released. They are still documented in the Ti.Media pages. I see nothing in the 6.x release notes about them being removed.    The following code works, but is not equivalent. For example, it won't let me differentiate between a user who has not yet granted permissions and one who has explicitly denied permissions. That means I can't show them a custom app dialog to tell them what great features they're missing by having denied permissions.    ",Bug,Critical,Closed,"2016-12-09 19:49:18","2016-12-09 19:49:18",2
"The Titanium SDK ","Android: require() not working with Android if path has ../ after Titanium SDK 6.0.0+","Hi,  basecontroller with ../ was working till Titanium SDK 6, not it's working only with --liveview, so app not working on the production build.    error code      more info and workaround  https://github.com/FokkeZB/nl.<USER>form/issues/34    I think it's related to TIMOB-24011 or TIMOB-16078",Bug,Critical,Closed,"2016-12-08 17:02:23","2016-12-08 17:02:23",5
"The Titanium SDK ","Hyperloop: Android - Can't find requested module from .aar file in android","*Steps  to reproduce* :  1. Create a test project.  2. Enable Hyperloop.   3. Add [Third-party libraries|http://www.filedropper.com/video-android-100-beta4] on Platform > android   4. Add the following code in index.js      5. Build on android devices.    *Error Log* :      *Test Environment*  ",Bug,High,Closed,"2016-12-07 17:30:42","2016-12-07 17:30:42",5
"The Titanium SDK ","appc run with --build-only produces .app that can't be run in ios-sim","Running the following command:      This is what happens when I try to run with ios-sim of the resulting Endless-Aisle-App.app file        Contents of the resulting Endless-Aisle-App.app directory:      If I remove the --build-only from the appc run command then the simulator launches the app without a problem and this is the resulting directory    Command:      Contents of EndlessAisle.app      When I run it works with ios-sim  ",Bug,Critical,Closed,"2016-11-18 18:18:08","2016-11-18 18:18:08",0
"The Titanium SDK ","iOS: currentPage & views properties of Ti.UI.ScrollableView doesn't change after removing a view","Whenever we remove a view from ScrollableView, *currentPage* and *views* properties do not change immediately. It happens in different cases but not all.    *Javascript Test-Case:*      *Alloy Test-Case:*  {code:xml}  <Alloy>   <Window backgroundColor=black>    <ScrollableView id=SCROLLABLE_VIEW>     <View backgroundColor=red top=50 bottom=50 left=10 right=10><Button>All Good 0</Button></View>     <View backgroundColor=teal top=50 bottom=50 left=10 right=10><Button>All Good 1</Button></View>     <View backgroundColor=cyan top=50 bottom=50 left=10 right=10><Button>All Good 2</Button></View>     <View backgroundColor=pink top=50 bottom=50 left=10 right=10><Button>All Good 3</Button></View>    </ScrollableView>      <Button bottom=10 color=white onClick=remove>REMOVE PAGE</Button>   </Window>  </Alloy>  {code}    {code:javascript}  function remove() {      Ti.API.info('\nCurrent Page = ' + $.SCROLLABLE_VIEW.currentPage);      $.SCROLLABLE_VIEW.removeView(1);      Ti.API.info('Current Page = ' + $.SCROLLABLE_VIEW.currentPage);        setTimeout(function () {          Ti.API.info('Current Page = ' + $.SCROLLABLE_VIEW.currentPage);        }, 500);  }  {code}    To get the bug output, click on the button after swiping to last page (index 3). This output will be shown then:    {code:java}  [INFO] :   Current Page = 3  [INFO] :   Current Page = 3  [INFO] :   Current Page = 2  {code}",Bug,Critical,Closed,"2016-12-05 11:29:37","2016-12-05 11:29:37",0
"The Titanium SDK ","Can't build android module from studio, but CLI works well","h6.Reproduce  Customer facing following problem  They are not able to build android module through studio.  But using CLI to build is working well.    h6.Error  Attached screen shot of error, and the studio log when it happened.    h6.Note  Attached diagnostic Test log as well",Bug,Critical,Closed,"2016-11-30 01:27:08","2016-11-30 01:27:08",5
"The Titanium SDK ","Android: PickerRow.setColor is not a function","Android: PickerRow.setColor is not a function despite mentions in [docs|https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.PickerRow]. Issue is not seen in iOS.    *TEST CASE*    {code:JavaScript}  try {   var w = Ti.UI.createWindow({      exitOnClose: true,      layout: 'vertical',      backgroundColor: 'black'     }),     p = Ti.UI.createPicker({      top: 50     }),     apple = Ti.UI.createPickerRow({      title: 'apple',      color: 'red'     }),     grape = Ti.UI.createPickerRow({      title: 'grape',      color: 'purple'     }),     d = [apple, grape];      apple.setColor(green);      p.add(d);   p.selectionIndicator = true;   w.add(p);      w.open();  } catch (err) {   Ti.API.debug(test msg error  + err);  }  {code}    *EXPECTED*  _apple_ color set to green and _grape_ color set to purple.    *ACTUAL*  Error {{D/TiAPI:  test msg error TypeError: apple.setColor is not a function}} on Android and _apple_ color set to green and _grape_ color set to purple on iOS.    ",Bug,None,Closed,"2016-12-03 03:09:44","2016-12-03 03:09:44",3
"The Titanium SDK ","Windows: Add support for Visual Studio 2017","h5.Description    windowslib does not detect VS 2017 RC, this is because Microsoft has made VS more isolated so that multiple editions can coexist and now stores the key we look for (\VisualStudio\<VERSION>_Config) in a private registry that can be found under {{C:\Users\ewan\AppData\Local\Microsoft\VisualStudio\15.0_d5badba5}}, to inspect this registry:    # Open regedit  # Click on {{HKLM}} folder  # File->Load Hive  # Load the {{privateregistry.bin}} at the above location and give it a name  # File->Unload Hive when done    Reference http://www.visualstudioextensibility.com/2016/11/23/some-implications-of-the-new-modular-setup-of-visual-studio-2017-for-vsx-developers/","New Feature",High,Closed,"2016-12-02 00:17:37","2016-12-02 00:17:37",8
"The Titanium SDK ","Windows: console log not printing right arguments","h6.Reproduce  1. Create a simple default app.  2. Add following code into it    3. Run it on Windows device    h6.Expect  The output should be       h6.Actual  The output is      h6.Note  This works as expected on android and iOS, but not on windows",Bug,Medium,Closed,"2016-12-01 00:35:32","2016-12-01 00:35:32",5
"The Titanium SDK ","Windows Unable to build to Windows device with SDK 6.1.0","h5.Issue Description    I am not able to build an app on a windows phone with the SDK 6.1.0. I get this error:    [ERROR] :  Invalid --device-id value 0    If I try using the CLI, it says no device is connected.    However, it works with SDK 5.5.1, so I think this is a regression bug.        ",Bug,High,Closed,"2016-11-04 14:15:42","2016-11-04 14:15:42",8
"The Titanium SDK ","Parity: ListItem properties set to undefined/null have inconsistent results on iOS and Android","index.xml      index.js      On iOS, the properties fall back to the values set in the template. On Android, the properties fall back to the default values.    This is inconvenient for cross-platform development.",Bug,High,Closed,"2016-03-12 02:01:10","2016-03-12 02:01:10",8
"The Titanium SDK ","Android : TiHTTPClient / Request Length Expected Wrong (6.1.0 regression)","Ti SDK 6.1.0+ (6.1.0.v20161121162514) has error. But, 6.0.0.GA is ok    When using TiHTTPClient with Non-english language + POST json request, raised errors.  (No error in only english request)        This is sample code  First call raised error.  But second call is ok(english only).        Calc expected length functions related unicode string has problem.  인연 is 4+4=8byte. received 21 is right.  Maybe, string is claculateded 2+2=4byte, it is wrong.",Bug,Critical,Closed,"2016-11-21 04:59:59","2016-11-21 04:59:59",5
"The Titanium SDK ","Hyperloop: Android - JNI libs should be included in APK","Some Android libs use the Java Native interface (JNI). I've noticed that Hyperloop doesn't copy these external libs to the final APK. They're usually located inside .AAR's *lib* folder.    Take GoogleVR SDK, for example.    !Screen Shot 2016-11-25 at 10.14.12 am.png|thumbnail!    You can see that these libs are inside the *build* folder. All good!  Problem is, they're not copied to the final APK:    !Screen Shot 2016-11-25 at 10.16.02 am.png|thumbnail!    I can provide an example project via e-mail.  This exception will be thrown:        ",Bug,Critical,Closed,"2016-11-25 00:18:52","2016-11-25 00:18:52",5
"The Titanium SDK ","Hyperloop: Android - Can't get value from Editable class because toString method is overridden ","I'm currently implementing a Hyperloop lib that uses the native EditText widget.   The EditText widget holds its value in an instance of the *Editable* class. When you want to get this value, all you have to do is:        The problem that I'm facing is that the *Editable* implementation of *toString()* is not accessible with Hyperloop.      *Example:*  Create a Hyperloop enabled project and require the *android.text.Editable* class in any controller:        Build and run the project. Go to the */build/hyperloop/android/js* folder and look for the *android.text.Editable* file. You'll notice that the generated *toString()* method is not calling the native *toString()* function like this:        Instead, this is what's being generated:        This basically blocks you from using any widget/component that stores its data in an *Editable* instance, since the value of *toString()* will always be *[object android.text.Editable]*   ",Bug,High,Closed,"2016-11-25 06:46:59","2016-11-25 06:46:59",5
"The Titanium SDK ","Android: Update TableView/ListView accessory images, fix spacing","Adding DENSITY_XXXHIGH images and correcting the size of the other icons:  !tablview.png|thumbnail!    *Icon sizes:*  low: 36px  medium: 48px  high: 72px  xhigh: 96px  xxhigh: 144px  xxxhigh: 192px    PR will also fix setMinimumHeight of the TableViewRow :  https://github.com/<USER>titanium_mobile/blob/a8aceeaeee02ed9c8ea70c835a0e78960e254a55/android/modules/ui/src/java/ti/modules/titanium/ui/widget/tableview/TiTableViewRowProxyItem.java#L490  TiConvert.toTiDimension is not used on MIN_HEIGHT so the default rows are very small compared to iOS",Improvement,Critical,Closed,"2016-11-26 12:29:47","2016-11-26 12:29:47",3
"The Titanium SDK ","Can not customize Tab backgroundColor and backgroundFocusedColor","unable to add color to tab background using any of the available parameters via Alloy(XML) or TSS files.      *To Reproduce*  1. Create a classic app two tabs app  2. Edit {{Titanium.UI.createTab}} to include    3. Run the app    *Expected Result*  The color of the tab should be red when it is inactive, and yellow when it is focused.    *Actual Result*  Default color is used.  ",Bug,Medium,Reopened,"2016-11-04 06:14:51","2016-11-04 06:14:51",5
"The Titanium SDK ","iOS: AccessibilityLabel or AccessibilityValue does not work.","If you create an ImageView in an xml file and then in the controller try to set accessibilityLabel or accessibilityValue it will not take effect.  You can verify this with my example code attached and run the app with Accessibility Inspector turned on.  You can click on the text and see the accessibility label being set, but not the ImageView.  This is affecting our ability to run automated tests using the accessibility information.",Bug,Critical,Closed,"2016-11-09 17:48:15","2016-11-09 17:48:15",5
"The Titanium SDK ","Android: Unable remove action bar using custom theme when the window background color is transparent.","h6.Problem    Customer facing following problem    Using custom theme for android to remove action bar.  It is working fine in all the cases except when the window background color is transparent.    h6.Reproduce    Attached test case        ",Bug,None,Closed,"2016-11-23 01:32:21","2016-11-23 01:32:21",5
"The Titanium SDK ","Android: Module is not building ","h5.Issue description    Since the release of Ti SDK 6.0.0.GA requires rebuilding the old <USER>modules using the latest SDK, trying to rebuild an Android module with latest SDK.  After make changes to my manifest file and build.properties, the build <USER>is not working.    PFA the manifest, build.properties and error log files.    h5.Steps to reproduce    Download and import the project to the studio   build using SDK 6.0.0  Wild error log will appear",Bug,High,Closed,"2016-11-22 22:33:34","2016-11-22 22:33:34",5
"The Titanium SDK ","Allow custom environments in config.json","The current config.json file only allows a specific set of environments. According to the manual, some of these are tightly coupled to running on a 'device'  or running on an 'emulator'.    This setup restricts a lot of freedom for the developers. Nor does it provide ease of use, since we cant select a certain config for a certain build.    This might has to do with the {{titanium build -D/\-\-deploy\-type}} command, in how that selects the correct config.  The problem I'm having is that the `env:test` in my config.json is currently empty because I cant use it. `env:test` is bound to be used on testing on a device, while i actually want it to run unit tests no matter what target i deploy it onto.    https://wiki.<USER>org/pages/viewpage.action?pageId=35620077",Improvement,Critical,Resolved,"2016-11-17 11:17:29","2016-11-17 11:17:29",1
"The Titanium SDK ","Android: Ti.UI.AlertDialog.androidView doesn't work when borderRadius is set","The AndroidView property doesn't work with a simple view.    {code:js}Ti.UI.setBackgroundColor('white');    var win = Ti.UI.createWindow({   title : 'Click window to test',   backgroundColor : 'white',   exitOnClose : true,   fullscreen : false  });    win.addEventListener('click', function(e) {   var dialog = Ti.UI.createAlertDialog({    message : 'The file has been deleted',    ok : 'Okay',    title : 'File Deleted',    androidView : Titanium.UI.createView({     borderRadius : 10,     backgroundColor : 'red',     width : 50,     height : 50    })   });   dialog.show();  });  win.open();  {{[WARN] :   TiUIDialog: (main) [2917,2917] Context must have gone away: The specified child already has a parent. You must call removeView() on the child's parent first.  [WARN] :   TiUIDialog: java.lang.IllegalStateException: The specified child already has a parent. You must call removeView() on the child's parent first.  [WARN] :   TiUIDialog:  at android.view.ViewGroup.addViewInner(ViewGroup.java:3938)  [WARN] :   TiUIDialog:  at android.view.ViewGroup.addView(ViewGroup.java:3788)  [WARN] :   TiUIDialog:  at android.view.ViewGroup.addView(ViewGroup.java:3760)  [WARN] :   TiUIDialog:  at android.support.v7.app.AlertController.setupCustomContent(AlertController.java:610)  [WARN] :   TiUIDialog:  at android.support.v7.app.AlertController.setupView(AlertController.java:449)  [WARN] :   TiUIDialog:  at android.support.v7.app.AlertController.installContent(AlertController.java:214)  [WARN] :   TiUIDialog:  at android.support.v7.app.AlertDialog.onCreate(AlertDialog.java:240)  [WARN] :   TiUIDialog:  at android.app.Dialog.dispatchOnCreate(Dialog.java:373)  [WARN] :   TiUIDialog:  at android.app.Dialog.show(Dialog.java:274)  [WARN] :   TiUIDialog:  at ti.modules.titanium.ui.widget.TiUIDialog.show(TiUIDialog.java:298)  [WARN] :   TiUIDialog:  at ti.modules.titanium.ui.AlertDialogProxy$1.run(AlertDialogProxy.java:73)  [WARN] :   TiUIDialog:  at android.os.Handler.handleCallback(Handler.java:746)  [WARN] :   TiUIDialog:  at android.os.Handler.dispatchMessage(Handler.java:95)  [WARN] :   TiUIDialog:  at android.os.Looper.loop(Looper.java:135)  [WARN] :   TiUIDialog:  at android.app.ActivityThread.main(ActivityThread.java:5343)  [WARN] :   TiUIDialog:  at java.lang.reflect.Method.invoke(Native Method)  [WARN] :   TiUIDialog:  at java.lang.reflect.Method.invoke(Method.java:372)  [WARN] :   TiUIDialog:  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:905)  [WARN] :   TiUIDialog:  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:700)}}{code}",Bug,Critical,Closed,"2016-11-21 15:04:26","2016-11-21 15:04:26",5
"The Titanium SDK ","Android: Null pointer exception in destroyRunners() of Android.Service","When working with Android background services this error appears:         because the clear() method is called outside the null-check:  https://github.com/<USER>titanium_mobile/blob/a8aceeaeee02ed9c8ea70c835a0e78960e254a55/android/modules/android/src/java/ti/modules/titanium/android/TiJSIntervalService.java#L113      Example and PR will follow",Bug,Critical,Closed,"2016-11-20 13:59:08","2016-11-20 13:59:08",1
"The Titanium SDK ","Android: Ti.UI.TableViewRow not shown in 6.1.0 (Regression)","TableViewRow don't drawing on Ti SDK 6.1.0.v20161118021723    Ti SDK 6.0.0.GA is ok.        ",Bug,Critical,Closed,"2016-11-18 12:26:05","2016-11-18 12:26:05",5
"The Titanium SDK ","Windows: CLI doesn't run ws-local app","Titanium CLI freezes when you run Windows Store desktop app. It builds the app normally, but then it freezes when it tries to install the app while showing {{Press enter to continue…}}.      ",Bug,Critical,Closed,"2016-11-18 01:18:15","2016-11-18 01:18:15",5
"The Titanium SDK ","CLI: Lack of iOS adhoc provision warns with bad verbiage","h5. Description:  *This is not a regression*  When using {{appc info}} while I did not have any iOS adhoc certificates installed, I got an unexpected warning:      There are a few things wrong here:  1) The URL is bad (see screenshot)  2) Not sure what an Apple Download account is  3) login into could be improved    When visiting the URL,     h5. Steps to reproduce:  1) Remove any iOS adhoc provisions you have.  2) Run command {{appc info}}    h5. Result:  Warning as shown above with bad URL    h5. Expected Result:  Warning with info on how to go to the Apple site to get appropriate provisions        ",Bug,High,Closed,"2016-03-08 17:43:50","2016-03-08 17:43:50",1
"The Titanium SDK ","iOS: Add parity for Ti.UI.TextField.padding","We implemented the {{padding}} property in TIMOB-16512 for Android, but iOS still uses {{paddingLeft}} and {{paddingRight}}. We should update them for a better parity.",Improvement,Medium,Closed,"2016-11-16 19:21:28","2016-11-16 19:21:28",2
"The Titanium SDK ","Android: Remove redundant Ti.UI.Window url property code","There is still code that exists for handling the deprected and removed property {{url}} for {{Ti.UI.Window}}. Using this property will cause the application to crash.    {code:js}  Ti.UI.createWindow({      title: 'TEST',      url: 'preapproval.js',      backgroundColor: '#fff'  });  {code}",Bug,Low,Closed,"2016-11-16 08:00:08","2016-11-16 08:00:08",2
"The Titanium SDK ","Windows: Unable to new EasClientDeviceInformation ","Following up from initial Hyperloop PR, originally reported by [~<USER>.    Attempt to create instance from constructor for {{Windows.Security.ExchangeActiveSyncProvisioning.EasClientDeviceInformation}} fails. It ends up throwing {{null is not a constructor}} error.      ",Bug,Medium,Closed,"2016-11-15 13:00:52","2016-11-15 13:00:52",5
"The Titanium SDK ","iOS: Custom Ti.Facebook entitlements-file overrides CLI-generated entitlements","Ok, so in TIMOB-23908 we fixed the missing APS-environment key in our entitlements file by grabbing the correct keys from the provisioning profiles. And as of TIMOB-23897, we suggested to create a custom entitlements file to add the keychain access to the entitlements.    Unfortunately, those two are concurring, causing the generated entitlements to be overwritten by the own one (which is I guess the intended behavior like we used to do with our Info.plist).     So we need to come up with a solution that a) merged the two files properly or b) generates the {{keychain-access-groups}} key whenever the ti.facebook module is used. I could think of a CLI-hook that is part of the plugin, like we [recently did|https://jira.<USER>org/browse/MOD-2299] with the <USER>encrypteddatabase module.",Bug,High,Closed,"2016-11-12 10:05:30","2016-11-12 10:05:30",5
"The Titanium SDK ","iOS: TiBlob.imageAsResized resizing the Blob image but file size is very high (JPG)","'imageAsResized' however resizing the Blob image but resulting image size is very high.        Note: This issue is found with JPG images.However it is working fine in .png files.    ",Bug,Low,Closed,"2013-03-18 11:58:25","2013-03-18 11:58:25",5
"The Titanium SDK ","iOS: Ti.Media.audioSessionCategory not working with Ti.Media.Sound","Thanks to [~<USER>, he reported an issue via mail that indicates a problem with our {{Ti.Media.AUDIO_SESSION_CATEGORY_*}} constants. As of TIMOB-23925, we wrapped our Ti.Media constants and in [this line|https://github.com/<USER>titanium_mobile/pull/8456/files#diff-e19e566138e39044280d74cfee0d3b4eR217], I wrapped it to only be compiled when the {{Ti.Media.AudioPlayer}} API is defined. But as it turns out, you can also use them for the {{Ti.Media.Sound}} API, so we just need to add that statement as well.",Bug,High,Closed,"2016-11-11 17:05:52","2016-11-11 17:05:52",2
"The Titanium SDK ","iOS: App is crashed if it contain Button with backgroundImage property (regression)","Steps to reproduce:  1. Click Show window button  2. Click Back button  3. Click Show window button again  => window is crashed.    Remove the backgroundImage property of button, App is not crashed anymore.    SDK: 6 RC 6.0.0.v20161101155110  IOS simulator + device iPhone 5C  OSX 10.11.6  ",Bug,Critical,Closed,"2016-11-11 08:58:33","2016-11-11 08:58:33",2
"The Titanium SDK ","Android: TextField/TextArea should not receive focus by default when a window is opened","h2. Behavior    It seems that focus event doesn't work well on Android and this behavior cause awful user experience. To see the issue, run the test case below.    Scroll to the bottom, but don't touch text fields. You'll see in the console output that text field fired focus event and that keyboard has shown on the screen.    Also, scroll to the bottom, click Click me! button to open new window. Then, click Close me! button. ScrollView should be scrolled up to the text field that has focus (gained by a bug described above!), which creates awful user experience because user needs to scroll back to where he was before opening new window (ScrollView should not scroll after returning from newly created window).    h2. Test case    {code:lang=javascript|title=app.js}  var win = Ti.UI.createWindow({   backgroundColor: '#000',   modal: true,   navBarHidden: true,   layout: 'vertical'  });    function createItem() {   var view = Ti.UI.createView({    height: 100,    width: '100%',    layout: 'horizontal'   });      var label = Ti.UI.createLabel({    text: 'Testing ...',    width: '50%'   });      var checkbox = Ti.UI.createSwitch({    style: Ti.UI.Android.SWITCH_STYLE_CHECKBOX   });      view.add(label);   view.add(checkbox);      return view;  }    function createTextField() {      var view = Ti.UI.createView({    height: 100,    width: '100%',    backgroundColor: '#0ff',    layout: 'horizontal'   });      var label = Ti.UI.createLabel({    text: 'Text field ...',    width: '50%'   });      var textField = Ti.UI.createTextField({    width: '30%'   });      textField.addEventListener('focus', function() {    Ti.API.info('Focus fired');   });      view.add(label);   view.add(textField);      return view;  }    var scrollView = Ti.UI.createScrollView({   layout: 'vertical',   backgroundColor: '#f00',   showVerticalScrollIndicator: true,   height: '100%',   width: '100%',   contentHeight: 'auto',   contentWidth: 'auto',   top: 0  });    for (var m = 0; m < 3; ++m) {   for (var i = 0; i < 20; ++i) {    scrollView.add(createItem());   }   var view = createTextField();   scrollView.add(view);  }    for (var j = 0; j < 20; ++j) {   scrollView.add(createItem());  }    var button = Ti.UI.createButton({ title: 'Click me!' });    button.addEventListener('click', function() {   var context = Ti.UI.createWindow({    backgroundColor: '#000',    modal: true,    navBarHidden: true,    layout: 'vertical'   });      var closeButton = Ti.UI.createButton({ title: 'Close me!' });      closeButton.addEventListener('click', function() {    context.close();   });      context.add(closeButton);      context.open();  });    scrollView.add(button);    win.add(scrollView);    Ti.API.info('App runnning ...');    win.open();  {code}    ",Bug,High,Closed,"2016-11-11 05:36:04","2016-11-11 05:36:04",3
"The Titanium SDK ","iOS: Simulator won't install and launch app using Xcode 8.2 / iOS 10.2","Create a new Titanium app and try to run it with {{appc run}} or {{ti build}}. The build succeeds, but the app never starts:        I do have two active Xcode installations running as usual, so I specified {{-I 10.2}} to force running with Xcode 8.2. That does not help. Maybe it's just my environment, but if not, we should have it on our schedule between 6.0.0 and 6.1.0.    *EDIT*: Also tried to delete Xcode 8.1 to not have two Xcode-installs at the same time and additionally tried to rename {{Xcode-beta}} to {{Xcode}}, all the same behavior. I also changed the {{xcode-select}} path everytime to ensure the right one gets selected.",Bug,Critical,Closed,"2016-11-10 21:11:52","2016-11-10 21:11:52",13
"The Titanium SDK ","Windows: eventListener not maintained when a list is filtered based off a search","h5.Description    *This is a regression from 5.5.1.GA*    When a tableview is filtered based of a search performed via a searchbar eventListeners are not maintained         h5.Steps to reproduce    # Add the above code to an existing app.js and build for Windows Platform  # Search in the searchbar for something like 'third' and hit the return key  # Tap the row    h5.Actual result    Alert is not shown    h5.Expected result    Alert should be shown",Bug,High,Closed,"2016-11-10 18:03:34","2016-11-10 18:03:34",5
"The Titanium SDK ","Windows: tableview.data/getData does not return a tableviewsection ","h5.Description    When calling tableview.data/tableView.getData() on Windows it will return tableviewrows however on both iOS and Android it will always seem to return a tableviewsection regardless of if a tableviewsection has been added.        I'm unsure which is the preferential behaviour    h5.Steps to reproduce    # Add the above code to an existing app.js and build for windows platform  # Click update row  # Observe logs    h5.Actual result    The value returned is multiple tableviewrows     h5.Expected result    Unsure, but for parity with other platforms it should be a tableviewsection",Bug,High,Closed,"2016-11-10 17:36:03","2016-11-10 17:36:03",5
"The Titanium SDK ","Windows: touchmove event not fired on tableview","h5.Description    touchmove event does not fire on tableview, touchstart does fire however        h5.Steps to reproduce    # Add the code to an existing app.js, build for Windows Platform  # Touch the tableview, move your finger around    h5.Actual result    The touchmove event should fire when the finger is moved    h5.Expected result    touchmove event not fired",Bug,Medium,Closed,"2016-11-10 16:30:12","2016-11-10 16:30:12",5
"The Titanium SDK ","Windows: Labels in a tableviewrow are not sized correctly","h5.Description    When adding a label to a tableviewrow the label does not get sized correctly for the text        h5.Steps to reproduce    # Add the code above to an existing app.js and build for Windows  # Observe    h5.Actual result    Label is not correctly sized    h5.Expected result    Label should be correctly sized",Bug,Medium,Closed,"2016-11-10 15:57:45","2016-11-10 15:57:45",5
"The Titanium SDK ","Windows: Click event fired when clicking a tableView with touchEnabled set to false","h5.Description    When tapping a tableviewrow and the tableView has touchEnabled set to false then a click event will still be fired        h5.Steps to reproduce    # Add the above code to an existing app.js and build for Windows Platform  # Tap a row    h5.Actual result    Click event fired    h5.Expected result    Click event should not be fired",Bug,Medium,Closed,"2016-11-10 10:28:19","2016-11-10 10:28:19",5
"The Titanium SDK ","Android: Runtime disposed, cannot set property 'userAgent' warning in logs","h5.Steps to reproduce:  1. Create a default app for android.  2. Build it for android device/emulator.    h5.Actual results:  1. We see a warning in the logs after the app launches:    2. App builds fine with no issues.    h5.Expected results:  1. We should not see such warning.",Bug,Low,Resolved,"2016-11-10 01:48:53","2016-11-10 01:48:53",2
"The Titanium SDK ","Android: Expected 9683000 but found 9452000 error when using map module 3.0.1","*This is a regression. This issue is not seen in map module ver.3.0.0.*    h5.Steps to reproduce:  1. Setup your app to run android maps.  2. Use the code below in your app.js:    2. Build for android device.    h5.Actual results:  1. App crashes after launch with error:      h5.Expected results:  1. App should build & run successfully.",Bug,Critical,Closed,"2016-11-10 01:28:19","2016-11-10 01:28:19",1
"The Titanium SDK ","Windows: Adding a searchbar to a tableview or listview search property should also add it to the window","h5.Description    When setting a searchbar to the search property of a tableview or a listview Android and iOS will add the searchbar to the view for a user.        h5.Steps to reproduce    # Add the above code to an existing app.js  # Build for Windows platform    h5.Actual result    Searchview is not added to the view unless a developer explicitly does so    h5.Expected result    Searchview should be added to the view when added to a tableview/listview",Improvement,High,Closed,"2016-11-09 14:53:33","2016-11-09 14:53:33",5
"The Titanium SDK ","Windows: Calling insertRowBefore with an existing row causes application to freeze","h5.Description  When calling insertRowBefore with a row that has been taken from the table, not a dictionary or a newly created row, the application appears to freeze        h5.Steps to reproduce    # Add the code above to an existing app.js  # Build for Windows Platform  # Tap a row    h5.Actual result    Application appears to freeze on the row click    h5.Expected result    A duplicate of the row clicked should be added to the top of the tableview",Bug,High,Closed,"2016-11-09 14:20:01","2016-11-09 14:20:01",5
"The Titanium SDK ","Windows: Updating a tableView section with a headerView causes a layout issue","h5.Description    When calling update on a tableviewsection to include a headerView a layout issue occurs        h5.Steps to reproduce    # Add the code above to an existing app.js  # Tap the tableviewrow    h5.Actual result    The tableview is updated and headerView is now partially off screen    h5.Expected result    No layout errors should occur",Bug,High,Closed,"2016-11-09 12:05:43","2016-11-09 12:05:43",5
"The Titanium SDK ","Windows: Incorrect error message being thrown when deployment fails due to a higher minSDKVersion","h5.Description    When the situtation in TIMOB-23758 occurs, the error thrown is the below         This is misleading as it is not the real reason as to why the install <USER>has failed, the error returned from winappdeploycmd is the below, although this isn't exactly helpful we should still show the error message returned by winappdeploycmd        h5.Steps to reproduce    # On a machine with 10.0.14393 SDK installed build to a 10.0.10586 emulator    h5.Actual result    The error shown will be related to an existing debug application to be installed    h5.Expected result    The error message returned should be helpful to the user",Improvement,Medium,Open,"2016-11-09 11:42:01","2016-11-09 11:42:01",5
"The Titanium SDK ","Android: Fix ti.map and ti.admob modules duplicate entry error","Update the release zip files for both {{ti.map}} and {{ti.admob}} to prevent the {{duplicate entry}} error. Also update {{ti.map}} on {{titanium_mobile}}",Bug,Critical,Closed,"2016-11-08 17:04:16","2016-11-08 17:04:16",2
"The Titanium SDK ","Windows: TableView.headerView/headerTitle cannot be set after setting data","h5.Description     *This only occurs when the data property is set before the headerTitle/headerView property*      When attempting to set either a headerView or a headerTitle on a tableview the property is not reflected.        *Workaround*    Move the data property after the headerTitle/headerView    h5.Steps to reproduce    # Add the above code to an existing app.js  # Build for Windows Platform    h5.Actual result    headerTitle and headerView are not set    h5.Expected result    headerTitle  and headerView should be set",Bug,Medium,Closed,"2016-11-08 14:11:16","2016-11-08 14:11:16",5
"The Titanium SDK ","Windows: Incorrect size for tableview where height is set to Ti.UI.SIZE and rows have a set height","h5.Description    *This is a regression from 5.5.1.GA*    When setting the height of a tableview to Ti.UI.SIZE and also setting the height of tableviewrows the tableview will be incorrectly sized.        h5.Steps to reproduce    # Add the above code to an app.js  # Build for Windows platform    h5.Actual result    The tableview is sized to be the height of one tableviewrow    h5.Expected result    The tableview should be sized to fit the whole screen",Bug,High,Closed,"2016-11-08 11:00:54","2016-11-08 11:00:54",0
"The Titanium SDK ","Windows: Touch related events should contain the same data","h5.Description    When using an touch related event such as singletap and click, different data is returned for each one. For example take the below events from the attached code, on Windows and iOS. These two events are only examples, I would expect the same data to be available for all touch based events such as longpress, longclick etc    {code: title=singletap}  [INFO] :   x  [INFO] :   53.5  [INFO] :   y  [INFO] :   367  [INFO] :   source  [INFO] [object class TitaniumWindows::UI::TableView]  [INFO] :   type  [INFO] :   singletap      {code: title=iOS - click}  [INFO]  detail  [INFO]  0  [INFO]  row  [INFO]  [object TiUITableViewRow]  [INFO]  x  [INFO]  91.66665649414062  [INFO]  y  [INFO]  37.33332824707031  [INFO]  section  [INFO]  [object TiUITableViewSection]  [INFO]  searchMode  [INFO]  0  [INFO]  rowData  [INFO]  [object TiUITableViewRow]  [INFO]  index  [INFO]  0  [INFO]  bubbles  [INFO]  1  [INFO]  type  [INFO]  click  [INFO]  source  [INFO]  [object TiUITableViewRow]  [INFO]  cancelBubble  [INFO]  0        h5.Steps to reproduce    # Add the above code to an existing app.js  # Build for Windows platform  # Tap a tableviewrow    h5.Actual result    Events provide different event data    h5.Expected result    Events should provide the same event data",Bug,High,Open,"2016-11-07 16:49:51","2016-11-07 16:49:51",5
"The Titanium SDK ","iOS: Expose keyboardDisplayRequiresUserAction property in Ti.UI.WebView","When this property is set to true, the user must explicitly tap the elements in the web view to display the keyboard (or other relevant input view) for that element. When set to false, a focus event on an element causes the input view to be displayed and associated with that element automatically.    The default value for this property is true.","New Feature",Medium,Closed,"2016-11-07 10:36:00","2016-11-07 10:36:00",3
"The Titanium SDK ","Windows: The app is not launched everytime.","The app launches fine for the first time after installation. After that, it does not launch as expected every time and quit back to the app list screen.    *Test code*: [appxbundle|https://www.dropbox.com/s/1h2afswhyek0zwn/KennedysConnect_ARM.zip?dl=0]    *Test Environment:*    Operating System: Microsoft Windows 8.1 Enterprise  SDK-5.5.1.GA,Windows phone device(8.1)    *Test Steps:*    # Install the appx bundle on Windows 8.1  # Click on the app from app list screen and it will launched fine  # Close the app, launch again, it does not launch as expected every time and quit back to the app list screen.      *Test Results:* The app is not launching.  ",Bug,High,Closed,"2016-11-06 05:58:37","2016-11-06 05:58:37",5
"The Titanium SDK ","Android: App takes 2 taps to open from the recent apps list","Steps to reproduce:  1. Launch the app.  2. Close the app using the back button.  3. Go to the recent apps list & make sure you have only your app in it.  4. Tap on the app to open it.    Actual Results:  1. The app takes 2 taps to open it rather than one.    Expected results:  1. The app should open in just one tap.",Bug,High,Closed,"2016-11-04 21:30:40","2016-11-04 21:30:40",5
"The Titanium SDK ","Windows: appendrow does not work on a tableview with no data","h5.Description    appendRow on a tableview with no data does not append any data        h5.Steps to reproduce    # Add the above code to an existing app.js  # Build for Windows    h5.Actual result    No data in the tableview    h5.Expected result    There should be data in the tableview",Bug,High,Closed,"2016-11-04 15:56:35","2016-11-04 15:56:35",5
"The Titanium SDK ","Windows: Tabgroup disappears when navigating back from an opened window","h5.Description    *This is not a regression*    When using the code below and navigating back from the opened window, the tabgroup in the initial view disappears and only the green window remains        h5.Steps to reproduce    # Add the code above to an existing app.js  # Tap a tableview row  # Press the Windows back button    h5.Actual result    The tabgroup disappears    h5.Expected result    Tabgroup should not disappear",Bug,High,Closed,"2016-11-04 14:49:59","2016-11-04 14:49:59",5
"The Titanium SDK ","Windows: Native method resolution and casting","If a class has overloads for a method (multiple forms of the method with different signatures, but the same name), we need to attempt to match the correct method to invoke on the C# side by matching the passed in arguments to the closest match. Typically, this involves matching the name, number of arguments and the ability to convert the passed in arguments (in-order) to the method’s parameter types. We might want to slightly more liberal in accepting numeric primitives than typical method resolution due to the conversion of JS Numbers.     Also, sometimes interfaces define generic return types such as Object and you will need to cast them to a different type to then reference methods and properties of the class. You can pass along the object you want to wrap to the constructor of the type you want to wrap it in. ",Improvement,High,Closed,"2016-11-04 06:46:50","2016-11-04 06:46:50",8
"The Titanium SDK ","Windows: Ability to use 3rd-party native classes","Add ability to use third-party dependencies in your Hyperloop enabled project. This may be done by putting WinMD({{.winmd}}) or DLL ({{.dll}}) on certain place on your project.    *Steps to test*    1. Create Windows Runtime Component    Create Windows Runtime Component named {{WindowsRuntimeComponent1}} from Visual Studio. Compile it and you should get {{WindowsRuntimeComponent1.winmd}} somewhere under in your Visual Studio project folder.  You might want to use [^WindowsRuntimeComponent1.winmd] if you want to skip this step.     {code:title=Test.cs}  using System;    namespace WindowsRuntimeComponent1  {      public sealed class Test      {          public int SampleNumber { get; set; }            public static string SayHello(string str)          {              return String.Format(Hello, {0}!, str);          }            public string sayNumber()          {              return String.Format(SampleNumber is {0}., SampleNumber);          }      }  }  {code}    2. Copy your {{WindowsRuntimeComponent1.winmd}} file into {{lib/windows/win10/x86/}} folder under your Titanium app project folder.    {code:javascript|title=app.js}  var win = Ti.UI.createWindow({ backgroundColor: 'green' }),      Test = require('WindowsRuntimeComponent1.Test'),      test = new Test();    win.addEventListener('open', function() {      alert(test.SayHello('World!'));  });    win.open();  {code}    3. Place {{appc.windows.js}} directly under your Titanium project folder. Make sure it contains names of your Windows Runtime component under {{hyperloop.windows.thirdparty}} key. It should look like below.    {code:javascript|title=appc.windows.js}  /**   * Hyperloop configuration   */  module.exports = {   type: 'app',   group: 'titanium',   dependencies: {},   hyperloop: {    windows:    {     /**      * Optionally, you can bring in third-party or first-party Windows Runtime components.      * The 'key' is the root namespace of the component that will be used in the require.      * There's no values for now but we reserve them for future release.      *      * Place the library files into the lib/windows/(phone|store|win10)/(x86|ARM)/ folder under your app project.      * Hyperloop will pick up the winmd files and will generate necessary bindings and include the winmd in your app.       */     thirdparty: {      'WindowsRuntimeComponent1': {}     }    }   }  };  {code}  4. Make sure to enable hyperloop, and then run it using {{appc run -p windows --wp-sdk 10.0 --target ws-local -l trace}}.  5. Then you should see Hello, World!! dialog box in your Titanium app.",Improvement,High,Closed,"2016-11-04 06:38:01","2016-11-04 06:38:01",8
"The Titanium SDK ","Windows: Ability to define native custom class","Need ability to dynamically create your own WinRT classes at runtime. Once created, these classes can be used as normal in either Hyperloop or passed to native calls.    Here's how Hyperloop for iOS does:      Here's how Hyperloop for Android does:      FYI: [iOS Hyperloop Programming Guide|http://docs.<USER>com/platform/latest/#!/guide/iOS_Hyperloop_Programming_Guide] and [Android Hyperloop Programming Guide|http://docs.<USER>com/platform/latest/#!/guide/Android_Hyperloop_Programming_Guide]",Improvement,High,Open,"2016-11-04 06:22:17","2016-11-04 06:22:17",8
"The Titanium SDK ","Windows: Mix WinRT APIs with Titanium APIs","Mix and match Hyperloop WinRT APIs and Titanium APIs together. For instance calling Titanium APIs from a native event callback, or calling Native APIs inside a callback registered with Titanium APIs. Also, we might want to mix and match {{Titanium.UI.View}} and its subclasses with any WinRT API expecting a {{Windows.UI.Xaml.UIElement}}.      ",Improvement,Medium,Closed,"2016-11-04 00:37:52","2016-11-04 00:37:52",13
"The Titanium SDK ","Windows: Async native function calls","Some of the WinRT APIs return asynchronous return types, such as {{Windows.Foundation.IAsyncAction}}. For methods that return an asynchronous return type, the operation need be wrapped in a [JavaScript Promise|https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise] object.     ",Improvement,Medium,Closed,"2016-11-04 00:32:38","2016-11-04 00:32:38",13
"The Titanium SDK ","Windows: Native event handling","Event handling following JavaScript syntax by adding/removing event handlers with the {{addEventListener()}} and {{removeEventListener()}} methods rather than the C++/C# syntax.     In C++/CX, we used to do like below:        But in JavaScript, we want to do like this:        FYI: [Windows Runtime Direct API Access - Event Handling|http://docs.<USER>com/platform/latest/#!/guide/Windows_Runtime_Direct_API_Access-section-43315893_WindowsRuntimeDirectAPIAccess-EventHandling]    Test code:    ",Improvement,Medium,Closed,"2016-11-04 00:26:27","2016-11-04 00:26:27",8
"The Titanium SDK ","iOS: Removing webviews from parent views crashes app","When navigating from a view back to another view, if you try and remove a webview from the view you are leaving, the app freezes and then eventually crashes.    Test Case:      Process to create bug:    1) Click 'Get View' button  2) Click 'Get WebView' button  3) Click 'Go Back' button  4) Now, click 'Get View' button again and app will freeze and then eventually crash.    I cannot reproduce this issue on Android, only iOS.  ",Bug,Critical,Closed,"2016-10-17 19:03:40","2016-10-17 19:03:40",5
"The Titanium SDK ","Android: Cannot set HTML property in WebViews","I am unable to set my HTML code using the {{html}} property of WebViews. Using the {{.setHtml()}} method works, however. Both the property and method work as expected on iOS.    *Steps to reproduce issue*  1. Create a new app, using the code below  2. Build the app for your Android device    *Expected Results*  Both the blue and green boxes contain the string {{Here is my webstuff}}    *Actual Results*  Only the blue box (using {{.setHTML}}) contains the string. The green box (using {{.html}}) does not contain the string.    *Code*  ",Bug,Medium,Closed,"2016-11-03 16:27:37","2016-11-03 16:27:37",3
"The Titanium SDK ","Windows: Modularize Hyperloop","The [Windows Runtime Direct API Access|http://docs.<USER>com/platform/latest/#!/guide/Windows_Runtime_Direct_API_Access] is actually embedded into Titanium Windows SDK and it doesn't provide native API access through {{hyperloop}} module. It also provides access to only a part of Windows API because it does not use reflection unlike the other platform does (hyperloop for iOS and Android).    *Expected*    You should be able to use native API access by using {{hyperloop}} module. Currently Hyperloop is meant to be used by permitted account (<USER>Platform Pro, Enterprise account etc) only.  ","New Feature",High,Closed,"2016-11-03 00:19:52","2016-11-03 00:19:52",13
"The Titanium SDK ","Windows: Hyperloop module for Windows","h4. Steps to reproduce:  # Use the GA environment above.  # Create a new project {{appc new}}  # In the app.js add the line below or follow the docs tutorial.    h4. Docs  http://docs.<USER>com/platform/latest/#!/guide/Windows_Runtime_Direct_API_Access      h4. App.js        h4. Actual          h4. Expected  No error is shown and the application builds successfully.","New Feature",High,Closed,"2016-11-02 23:54:20","2016-11-02 23:54:20",21
"The Titanium SDK ","If you package for mobile web, then [ERROR] ENOENT: no such file or directory error is returned","*Details:* If you package your app for mobileweb, then {{[ERROR] ENOENT: no such file or directory}} error is returned.    *Note:* This is a regression from SDK 6.0.0.v20161028094725.    *Steps to reproduce:*  # Create a Titanium mobile project with {{appc new}}  # Package the mobile app for mobile web: {{appc run -l trace --platform mobileweb --deploy-type production}}    *Actual:* At the end of the <USER> you will not be able to package your app for mobile web:    *Expected:* You should be able to package your mobile app for mobile web, until 7.0.0.",Bug,Critical,Closed,"2016-11-01 22:22:33","2016-11-01 22:22:33",2
"The Titanium SDK ","Android TextField causing multiple issues with Listview","Below is the list of issues observed in the ListView with  Textfields as ListItems:     ·         We have multiple text fields as List Items in a list view .For android version 5.0.2, we cannot input anything for 2nd or 3rd textfileds onwards .(Textfileds which are at lower part of the screen). When we click on text Fields, the soft keyboard appears and disappears instantly.     ·         In Android, the application is crashing sometimes when user clicks on the Yes/No button of the list items. On Click of this Yes/No button the Childs question (Textfileds) are added and removed from the list section.     ·         In IPAD for question no 7b, which has got two child question (text fields), user cannot focus on 2nd question text filed to input data.     ·         Changing the style of Views in the templates at runtime causing application to hang(non responsive).    ----------  Thanks ",Bug,High,Open,"2016-09-21 09:19:27","2016-09-21 09:19:27",5
"The Titanium SDK ","Windows Phone : The scroll event for ScrollView does not have x/y cordinates","Hi,    I want to trigger an event when 50% of the scroll view has been scrolled. I am able to achieve this by adding event listener for scroll event for scrollview and fetching the y cordinate from the event object. But th value is null in case of windows phone.    Sample Code :  index.js  $.scrollView.addEventListener('scroll', function(e) {   Ti.API.info(e.y);   });  $.indexWindow.open();  index.xml  <Window id=indexWindow class='container'>   <ScrollView id=scrollView scrollType=vertical>  <View class=listView >   <Label text='L(title1)' class=label />   </View>   <View class=listView >   <Label text='L(title2)' class=label />   </View>   <View class=listView>   <Label text='L(title3)' class=label />   </View>   <View class=listView >   <Label text='L(title4)' class=label />   </View>   <View class=listView >   <Label text='L(title5)' class=label />   </View>   <View class=listView >   <Label text='L(title6)' class=label />   </View>   </ScrollView>   </Window>       index.tss  .listView :{   top : 0%,   align:center,   backgroundColor : white ,   width : '100%',   height : 110.5dp   }  .label:{   color: black,   left : 16.25dp,   width : 80%,   font: {   fontFamily:'Roboto-Light',   fontSize: '27.5dp'   },   textAlign:Ti.UI.TEXT_ALIGNMENT_LEFT,   verticalAlign : Ti.UI.TEXT_VERTICAL_ALIGNMENT_CENTER   }",Bug,High,Closed,"2016-08-24 10:39:49","2016-08-24 10:39:49",5
"The Titanium SDK ","iOS: Label doesn't fire link event correctly","Sometimes, don't know why, the Labels doesn't fire the link event.    I indagated in the code, and I found that the method to get the link is by finding the index from the clicked point in the Label.  The problem is that the index, is, sometimes, wrong.    I just re-implemented a more elegant version of the find index, taken from here: https://github.com/AliSoftware/OHAttributedStringAdditions/blob/master/Source/UILabel%2BOHAdditions.m    This is the demo of example that doesn't works and the one that works.    ZIP + MOV.  [tibugt.mov.zip|https://github.com/<USER>titanium_mobile/files/561573/tibugt.mov.zip]    PR: https://github.com/<USER>titanium_mobile/pull/8568",Bug,High,Closed,"2016-10-31 10:58:31","2016-10-31 10:58:31",5
"The Titanium SDK ","iOS: Add ability to style subtitle in native UITableViewCell templates","We have some really cool system list view item templates since 3.x that allow the user to use native styles for their cells, e.g.  - {{Ti.UI.LIST_ITEM_TEMPLATE_CONTACTS}}  - {{Ti.UI.LIST_ITEM_TEMPLATE_SETTINGS}}  - {{Ti.UI.LIST_ITEM_TEMPLATE_SUBTITLE}}    Although we can already tint the title of those using the {{color}} property that is mapped to it, the subtitle cannot be tinted, yet. Introducing a {{subtitleColor}} and  {{selectedSubtitleColor}} property along with the existing properties {{color}} and {{selectedColor}} would allow this through all system templates and would not influence any other API's, so it's save to implement.  ",Improvement,Low,Closed,"2016-10-30 10:30:20","2016-10-30 10:30:20",2
"The Titanium SDK ","iOS: removeAllChildren removes wrong views when running on kroll thread","When running on kroll thread, I just noticed a weird behavior that is causing the parent view to remove children that are added after calling {{removeAllChildren}} instead of just the ones that are children before the method is called.     This does not happen when running on main thread and I just noticed it in an Alloy application, so I need to isolate it first",Bug,High,Closed,"2016-10-29 12:43:38","2016-10-29 12:43:38",5
"The Titanium SDK ","Android - Support for the Android Design Support library","A long time ago Google released the [Android Design Support library|http://android-developers.blogspot.com.au/2015/05/android-design-support-library.html]. It allows the usage of Material Design components in all Android 2.1 or higher devices.     It's been more than two years since Material Design was released and we still don't have access to the components that make up the Android design, and the only way to solve that as of today is trying to replicate them with other Titanium components.   On the other hand, Titanium received updates to support new iOS features within weeks or even days over the past few years.",Improvement,Critical,Closed,"2016-10-16 11:36:06","2016-10-16 11:36:06",8
"The Titanium SDK ","Ti.Media.soundPlayer is not working on Android KitKat (4.4)","Hello,    Ti.Media.soundPlayer is not working on Android KitKat (4.4). The sound is not playing. Although its working fine on android 5.1.1.    *Testing Environment:*  Operating System    Name                        = Mac OS X    Version                     = 10.11.3    Architecture                = 64bit    # CPUs                      = 4    Memory                      = 4294967296  Node.js    Node.js Version             = 4.6.0    npm Version                 = 2.15.9  Titanium CLI    CLI Version                 = 5.0.9  Titanium SDK    SDK Version                 = 5.5.1.GA    SDK Path                    = /Users/GSLMAC3/Library/Application Support/Titanium/mobilesdk/osx/3.2.1.GA/mobilesdk/osx/5.5.1.GA  Android devices: Samsung Galxy tab 3 v 4.4.2, Samsung Galaxy Grand Prime (5.1.1)    *Test Code:*  app.js      *Testing Result:*  Ti.Media.soundPlayer is not working on Android KitKat (4.4).      ",Bug,Medium,Closed,"2016-10-28 19:40:04","2016-10-28 19:40:04",5
"The Titanium SDK ","iOS: Classic projects always invoke xcodebuild; Differential builds","When building a Classic project, I always see {{[INFO]  Invoking xcodebuild}} during the build, even when performing a subsequent build with no changes. The reason appears to be:  {{[INFO]  Forcing rebuild: image was updated, recompiling asset catalog}}    I also see that many files that should be skipped are getting copied/overwritten:      *Steps to reproduce issue*  1. Create a new Classic project  2. Build that project for iOS sim  3. Build the project again for the same iOS sim    *Expected Results*  Xcodebuild is skipped as there are no changes to the project    *Actual Results*  Xcodebuild is invoked on each build    *Notes*  I am attaching my full build log",Bug,High,Closed,"2016-10-25 18:42:20","2016-10-25 18:42:20",2
"The Titanium SDK ","iOS: Expose Ti.UI.Label maxLines (Parity)","Add support for numberOfLines property on UILabel component:  https://developer.apple.com/reference/uikit/uilabel/1620539-numberoflines?language=objc    It should be called *maxLines* to allow a better cross-platform implementation    PR: https://github.com/<USER>titanium_mobile/pull/8543    Example:      Expected: Changing the property maxLines, the label should expand accordingly the value",Improvement,Medium,Closed,"2016-10-25 15:18:00","2016-10-25 15:18:00",1
"The Titanium SDK ","iOS: Unable to build for Apple Watch Series 2 WatchOS 3.1 sim","When building using Xcode 8.1, for an iOS sim that has an Apple Watch Series 2 (WatchOS 3.1) sim, I get the below error:      *Steps to reproduce issue*  1. Select Xcode 8.1 {{sudo xcode-select -s <path_to_xcode_8.1>}}  2. Create a new project and add an Apple Watch App to it  3. Add a team ID to your tiapp.xml  4. Build the project for an iOS sim with Apple Watch Series 2 (v3.1)    *Expected Results*  The project builds/installs/runs without issue    *Actual Results*  The above error is encountered",Bug,Critical,Closed,"2016-10-24 22:55:04","2016-10-24 22:55:04",13
"The Titanium SDK ","iOS: Using `--build-only` forces Development team to be required for builds","Building project with {{--build-only}} throws a signing error for projects:      *Steps to reproduce issue*:  1. Create a new project  2. Build the project for iOS sim, with {{--build-only}}    *Expected Results*:  The app builds without issue    *Actual Results*  The build fails with the above error",Bug,High,Closed,"2016-10-21 21:18:00","2016-10-21 21:18:00",2
"The Titanium SDK ","Windows: Allow a developer to specify required capabilities in their timodule file","h5.Description    If a Windows Platform module requires specific capabilities to function then a module developer should be able to use the timodule.xml file (in a similar way to Android modules and permissions) to specify capabilities that are required. Then at build time these should be included with any capabilities a users app may need",Improvement,Medium,Closed,"2016-10-21 14:29:39","2016-10-21 14:29:39",5
"The Titanium SDK ","Windows: No logging being received from Windows 10 Mobile Emulators","h5.Description    When building to a Windows 10 Mobile emulator I am not receiving any logging, Windows Phone 8.1 emulators work fine. Not sure whether this issue in the Windows side of RN could be related https://github.com/ReactWindows/react-native-windows/issues/683    * The app does not even connect to the log relay as no {{Start application log}}  * This used to work in older versions of the SDK but now it is broken in all versions, which makes me believe it is similar to the above issue and not caused by a regression in Ti SDK but a behaviour change in the Windows emulators   * I have attempted to run on older emulators but have run into TIMOB-23758 will try master and see if I can get anymore logging  * Devices are not affected    h5.Steps to reproduce    # Build to a Windows 10 Mobile emulator {{appc run -p windows -T wp-emulator -C 10-0-1}}    h5.Actual result    No logging     h5.Expected result    There should be logging",Bug,High,Closed,"2016-10-21 14:08:45","2016-10-21 14:08:45",5
"The Titanium SDK ","Android: Different debug-log for incorrect CommonJS usage","When we want to require a CommonJS module without a / at the beginning, the debug-log is different on iOS and Android.    iOS:  {quote}  require called with un-prefixed module id: helper/test, should be a core or CommonJS module. Falling back to old Ti behavior and assuming it's an absolute path: /helper/test  {quote}  Android:  {quote}  require called with un-prefixed module id, should be a core or CommonJS module. Falling back to old Ti behavior and assuming it's an absolute file  {quote}    We should just unify them to display the actual bad boy, so the devs can migrate more easy.",Bug,Low,Closed,"2016-10-21 14:05:14","2016-10-21 14:05:14",1
"The Titanium SDK ","iOS crashing without any log on SDK 6.0.0","Hi guys.  My app has a listView that has 3 sections. Each section has a button to trigger a request that populates the list with specific data.  It was working fine on SDK 5.X.X, but now it is crashing kind of randomly without showing any logs on Titanium CLI using SDK 6.0.0 beta.  Attached is the log report I exported from Xcode, but logs are not symbolicated (it appears only titanium logs are not symbolicated).    Any help on this issue?  Thanks in advance!",Bug,Critical,Closed,"2016-10-20 21:41:43","2016-10-20 21:41:43",5
"The Titanium SDK ","Android: Update ti.cloud require to new require standards ","h5.Steps to reproduce:  1. In an android app make sure you have ti.cloud module required.  2. Build for android device/emulator.    h5.Actual results:  1. The app builds fine but we see lot of these debug logs:      h5.Expected results:  1. These should not be debug logs like these.  2. Need to update ti.cloud require to new require standards. ",Bug,Medium,Closed,"2016-10-21 00:21:15","2016-10-21 00:21:15",2
"The Titanium SDK ","Android: backgroundSelectedColor & backgroundSelectedImage property does not work for tableviewrow","*This a regression. It broke in 5.4.0.GA.Works fine in 5.3.1.GA.*    h5.Steps to reproduce:  1. Use the code below in your app.js & build for android device/emulator.    2. After the app launches press & hold on any of the tableviewrows.    h5.Actual results:  1. The background color for the tableview row does not turn red or if the the backgroundSelectedImage property is used image does not appear when you touch the table view row.    h5.Expected results:  1. The background color for the tableview row should turn red as long as you hold your finger on the screen.  2. As soon as you lift your finger the red color should go back to the default white or window background color.    Ref:   http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TableViewRow-property-backgroundSelectedColor  http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TableViewRow-property-backgroundSelectedImage       ",Bug,High,Closed,"2016-10-20 21:07:06","2016-10-20 21:07:06",5
"The Titanium SDK ","Hyperloop: iOS - Adapt native CocoaPods build behavior","*Current behavior*  The CocoaPods project is always built with the Release configuration and directly under {{build}} directory.     *Expected behavior*  Same as when CocoaPods integrates itself into an Xcode project. The build output dir is the same as for the app. Also the Pods are built with the current build configuration.    This is required to integrate the two helper shell scripts that will copy resources and embed frameworks into the app's Xcode project.",Improvement,High,Closed,"2016-10-20 16:54:34","2016-10-20 16:54:34",3
"The Titanium SDK ","Incompatible module com.appcelerator.apm on beta SDK 6.0.0","Hi guys.  I'm trying to build my app on SDK 6.0.0 and I'm getting the following error:        Error is happening ONLY when building for android platform.  Can you give us feedback on this?    Thanks in advance.    ",Bug,Critical,Closed,"2016-10-19 21:31:30","2016-10-19 21:31:30",5
"The Titanium SDK ","Android: Enabling push notifications crashes the app with latest 6.0.0.v20161019091022","*This is a regression.*    h5.Steps to reproduce:  1. Use the example app in the cloud module to check for push.  2. Make sure you are setup properly for push notifications.  3. Build the app for android device.  4. After the app launches login/create a user.  5. Go to Push Notifications -> Setting For This Device -> Enable.   6. Click on Enable.    h5.Actual Results:  1. The app crashes with logs:      h5.Expected Results:  1. The app should not crash when push notifications are enabled.  ",Bug,Critical,Closed,"2016-10-19 21:13:19","2016-10-19 21:13:19",5
"The Titanium SDK ","Android: passwordMask property cannot be changed after rendering (Regression)","When using the following JS and XML on 5.2.2GA, I am successfully able to toggle the passwordMask for both iOS and Android to show/hide the text in the TextField.    When I simply change my sdk to 5.5.1GA, iOS continues to work, *but Android no longer works*.  The mask never toggles.  It also appears it doesn't work for Android in 5.4.0GA either.    index.xml  ========  <Alloy>   <Window class=container>    <View layout=horizontal width=99% height=54>      <TextField id=password color=#000000 autocorrect=false hintText=password width=50% clearButtonMode=Titanium.UI.INPUT_BUTTONMODE_ALWAYS passwordMask=true />      <TextField value=show/hide color=#000000 id=passwordVisible width=49% editable=false touchEnabled=true  onClick=togglePasswordVisible />    </View>   </Window>  </Alloy>    index.js  ========  isPasswordVisible = false;    function togglePasswordVisible(){   if (isPasswordVisible){    $.password.passwordMask = true;    isPasswordVisible = false;   } else {    $.password.passwordMask = false;    isPasswordVisible = true;   }  }    $.index.open();",Bug,Critical,Closed,"2016-10-07 18:42:27","2016-10-07 18:42:27",3
"The Titanium SDK ","Android: Event-listeners in Ti.UI.TextArea not working when editable = false (Regression)","previously using Ti SDK 5.3    bellow code execute as expected        from Ti SDK 5.4 'click' event or 'longpress' or any event listener is not working unless I remove 'editable : false,' from text ares.     expected behaviour :: Textares event listeners should work even Textarea object define as 'editable : false '  ",Bug,Critical,Closed,"2016-09-13 02:58:12","2016-09-13 02:58:12",3
"The Titanium SDK ","Windows: Add the ability to remove all Ti.App.Properties at once ","h5.Description    TIMOB-23572 implemented Ti.App.Properties.removeAllProperties() for iOS/Android, it should also be implemented for Windows too. Demo code below    ",Improvement,Medium,Closed,"2016-10-19 08:53:26","2016-10-19 08:53:26",5
"The Titanium SDK ","Android: Be able to open particular application's system settings.","Customer want our SDK to support to open particular application's system settings.    Like in native code:      Trigger: https://jira.<USER>org/browse/TIMOB-17171?focusedCommentId=370519&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-370519","New Feature",Medium,Closed,"2016-10-19 00:25:22","2016-10-19 00:25:22",5
"The Titanium SDK ","Android: Window transition animations are not working as expected","h5.Issue Description    The activityExitAnimation and activityEnterAnimations parameters are not being honored on Ti.Window's close method. This causes windows to not animate when they close.    Customer is using custom animations, but that should not matter. They are properly defined in app/platform/android/res/anim. The code to really look at is in app/controllers/newWindow.js:    The open call animates as expected. The close call does not animate as expected on TiSDK versions newer than 5.3.1.GA.    h5.Steps to reproduce:     1) Build the test case to an Android device using TiSDK 5.4.0.GA or higher (with highest version currently being 5.5.1.GA)  2) Press the OPEN NEW WINDOW button  3) Observe the new window slide in from the left  4) Press the CLOSE ME! button on the new window  5) Observe the new window closing with no animation    h5. Expected behavior:  1) Build the test case to an Android device using TiSDK 5.3.1.GA  2) Press the OPEN NEW WINDOW button  3) Observe the new window slide in from the left  4) Press the CLOSE ME! button on the new window  5) Observe the new window slide out to the right    ",Bug,Critical,Closed,"2016-10-18 18:17:31","2016-10-18 18:17:31",5
"The Titanium SDK ","Android: App launches successfully but errors and warnings show in console log for Samsung devices","h5.Steps to reproduce:   1. Create default alloy app in Studio.  2. Build for Samsung device. (Ran on Samsung Galaxy S4 running android 4.4.4 and Galaxy Note II running android 4.3)    h5.Actual Result:  1. App launches successfully.  2. But we see build errors in the console log.    Attached are the log files for the ticket.    h5.Expected Result:  1. Should not see any errors in the console log.  ",Bug,Medium,Closed,"2016-10-17 20:59:32","2016-10-17 20:59:32",1
"The Titanium SDK ","iOS / Android: Creating and deleting calendars, recurrence rules","Added possibility to create and delete calendars",Improvement,Critical,Open,"2016-05-24 13:04:48","2016-05-24 13:04:48",13
"The Titanium SDK ","Include module hooks in packaged zip","We are able to place a {{hooks}} folder inside our native modules and place build-hooks in there that are picked up by the build system. Currently, it already works, but the directory is not copied over to the zip file after packaging it. We should change that.",Improvement,Medium,Closed,"2016-10-15 16:58:24","2016-10-15 16:58:24",1
"The Titanium SDK ","iOS: Set backgroundImage : '' for TI.UI.VIEW cause app crash After SDK 5.5.0.GA","h5.Reproduce    1. Create a default classic mobile project  2. Put attached two test code in it.  3. Run the app on iOS 10 device or simulator with SDK 5.5.1.GA  4. After the app running, click the open button. second window will open.  5. Click the close button, second window will close.  6. Click the open button again will cause the crash.    h5.Crash code      h5.Note  1. Same code is working well on TISDK 5.2.2.GA  2. If you comment out line 20 of ApplicationWindow.js (like following), it will working well on SDK 5.5.0 and 5.5.1.GA    3. If there is webview in second page, it will not crash at all.   ",Bug,Medium,Closed,"2016-10-15 07:33:57","2016-10-15 07:33:57",1
"The Titanium SDK ","Android: ti.map.PolylineProxy cannot be cast to ti.map.PolygonProxy when adding polyline to map","Can't say if this is a regression, I tried it with 5.5.1.GA, 5.5.0.GA, 5.4.0.GA along with appropriate map module version & I could reproduce this issue. I am pretty sure we ran this test for at least one of these releases & it worked fine but not sure why its failing now.    h5.Steps to reproduce:  1. Make sure your app is setup for android maps.  2. Use the code below in your app.js:    3. Build for android device.    h5.Actual Results:  1. A runtime error:      h5.Expected results:  1. Should not see any runtime error & code should run successfully.     There is also a stackoverflow post for this : http://stackoverflow.com/questions/39612680/titanium-error-adding-polyline-to-a-mapview-android",Bug,Critical,Closed,"2016-10-14 23:27:53","2016-10-14 23:27:53",3
"The Titanium SDK ","Android: Debugging not working with Hyperloop enabled","h5.Steps to reproduce:  1. Create an android project & set a breakpoint in the app.js.  2. Make sure you have hyperloop enabled & run-on-main-thread set to true.  3. From studio debug the project on android emulator/device.  4. Again debug the application but now with hyperloop enabled & run-on-main-thread set to false.    h5.Actual results:  1. With hyperloop enabled & run-on-main-thread set to true the breakpoint is not hit.  2. With hyperloop enabled & run-on-main-thread set to false the breakpoint is not hit.  3. If hyperloop is diabled & run-on-main-thread set to true or false the breakpoint is hit.    ||Hyperloop|||(/)||(x)||(/)||(x)  ||Run on main thread|||(/)||(/)||(x)||(x)  ||Debugging Working?|||No||Yes||No||Yes|    h5.Expected results:  1. Debugging should work with hyperloop enabled with run-on-main-thread set to true or false.",Bug,High,Closed,"2016-10-14 18:24:48","2016-10-14 18:24:48",1
"The Titanium SDK ","iOS: New logging system breaks differential builds - simulator builds only","The iOS Simulator shares ports with the host machine. The iOS build will select a log server port based on the {{<log-server-port>}} in the tiapp.xml or based on the hash of the app id using the following logic:        Because we only allow a possible 50,000 possibilities, the likelihood of a collision is high. In my tests, it's about 5%. The solution to the collisions is to just allow manual override by setting a {{<log-server-port>}} in the tiapp.xml.    The next problem is what if the app id hash port resolves a port number used by another piece of software? Say you have MongoDB installed and it's listening on port 27017. It's entirely possible Titanium will pick 27017.    The current iOS build logic tries to be smart. It starts a Node.js server listening on the selected port and if it can't bind to it, then that means some other app already has bound to the port. It will then select a random port. I knew at design time that random ports will break the differential build system, but figured it would only happen if there was a collision.    Turns out that's not quite accurate. If you build an app for the sim and then rebuild our app while leaving the previous build running in the sim, the iOS build will detect the desired port is not available because the iOS app is currently listening on it. This causes the iOS build to randomly select a port.    The port number gets written to the Xcode project. Since it will generate a new random port every build (as long as the sim and previous build is running), the iOS build detects the Xcode project is different and forces a full rebuild.    We have 5 solutions:    1. Don't select a random port. Just use the port regardless if it's in use. Cons: high chance of port collisions and false positives, the iOS app will fail to bind to it and there will be no logs and no warning.    2. Don't select a random port. If the port is already in use, try connecting to it and see if it's the app we're trying to build and if so, then proceed with the build. If the port is being used by something such as a web server, it will be expecting data, but because the log server clients do not send data, we end up in a stalemate. We would need to add a timeout. Cons: the timeout will pause the build by ~1 second.    3. Allow random ports if the desired port is unavailable. Pass the {{GCC_PREPROCESSOR_DEFINITIONS=TI_LOG_SERVER_PORT=XXXX}} directly into {{xcodebuild}} instead of baking it into the Xcode project. Cons: you will run in a loop where the build will alternate between the hashed port and a random one, we would need to force {{xcodebuild}} to re-compile using the new port value.    4. Write the port to a file (could be any file) and bundle it with the app. Avoids the Xcode project and {{xcodebuild}}. If the file does not exist or is empty, then logging is disabled. Cons: easy to accidentally ship with the app and enable logging in production.    5. Pass the port number in as an argument when we call {{simctl launch}}. We would still bake the {{DISABLE_TI_LOG_SERVER=1}} into the Xcode project for dist builds. Cons: ioslib currently does not support passing arguments into {{simctl launch}}, subsequent manually launching the app will not have the argument.    I think option 1 and 3 are not too good. Option 2 is not so great. Option 4 is not too bad. https://www.youtube.com/watch?v=vm-MrkoJPC8    Thoughts?",Bug,Critical,Closed,"2016-10-13 23:33:25","2016-10-13 23:33:25",5
"The Titanium SDK ","iOS: Cannot build with touchtest 2.0 with development deploy type","I am unable to build any project that use Touchtest module 2.0 with a development deploy type:      *Steps to reproduce issue*  1. Ensure you have com.<USER>test plugin version 8244.293.2 installed (get it from preprod)  2. Create a new project and enable test  3. Build that project for iOS    *Expected Results*  The project builds and runs normally    *Actual Results*  The above error is encountered    *Notes*  If I change the deploy-type for the module to be anything but development, the project will build.",Bug,Critical,Closed,"2016-10-13 16:55:48","2016-10-13 16:55:48",2
"The Titanium SDK ","iOS: Build errors out with Invalid <log-server-port> found in the tiapp.xml: undefined","h5.Description    When building a project for iOS device or simulator the build will fail with the following {{\[ERROR\] Invalid <log-server-port> found in the tiapp.xml: undefined}}, this happens when building for device or simulator.    *Workaround*    Add {{<log-server-port>12345</log-server-port>}} to the iOS section of your tiapp    h5.Steps to reproduce    # Create an app using {{appc new/ti create}}  # Build the app for iOS using {{appc run -p ios/ti build -p ios}}    h5.Actual result    Build errors out with the above    h5.Expected result    Build should not error out",Bug,Critical,Closed,"2016-10-13 11:23:39","2016-10-13 11:23:39",1
"The Titanium SDK ","Hyperloop: iOS - Provide migration help for new properties","We changed the API to access certain properties in TIMOB-23911. This breaking change will result in error messages like the following:    {{UIColor.redColor is not a function}}    To let the user know why this fails and to help them migrate their code, we can use the old list of properties that were used for the workaround in 1.2.8 to display a help message.    Something like this:    {{It looks like you used the function UIColor.redColor() in your code. Due to changes introduced in iOS 10 and Hyperloop 2.0.0 this method is now a property and must be used like this: UIColor.redColor.}}",Improvement,High,Closed,"2016-10-12 23:33:51","2016-10-12 23:33:51",5
"The Titanium SDK ","Packaging mobile app for iOS will fail with An uncaught exception was thrown! p is not defined","*Details:* Packaging mobile app for iOS will fail with An uncaught exception was thrown! p is not defined    *Steps to reproduce:*  # Create a mobile project with {{appc new}}  # Package mobile app to iOS: {{appc run -l trace -p ios -T dist-adhoc}}  *Note:* You do not need to specify the provisioning profile or distribution name.    *Actual:* Build will fail with:      Also, see attachment for logs.    *Expected:* Packaging mobile app should not fail.",Bug,Critical,Closed,"2016-10-12 22:48:16","2016-10-12 22:48:16",1
"The Titanium SDK ","Hyperloop: Android: Unable to instantiate hyperloop classes","When attempting to instantiate a native class in JS, we end up with a class cast exception about casting a String to Integer.",Bug,Critical,Closed,"2016-10-12 20:00:33","2016-10-12 20:00:33",5
"The Titanium SDK ","Hyperloop: Android: require of native class android.content.Intent fails on SDK 6+","Because we're still using legacy style require paths for hyperloop wrappers, we're running into issues with Hyperloop 2.0.0 and SDK 6+, just as we did on iOS in TIMOB-23971",Bug,Critical,Closed,"2016-10-12 19:57:55","2016-10-12 19:57:55",5
"The Titanium SDK ","Windows: Listitems do not maintain itemindex when filtered","h5. Issue Description     Listitems do not maintain item index on search filter    h5. Steps to reproduce  # Download and run the project   # Search by number 0-11 (the list should filter down to just that number)  # Click on the list item with the number (alert with itemindex should pop up)    Expected: the itemindex matches the item's position in the list  Actual: the itemindex is 0 because the list has been filtered down to one item.",Bug,Critical,Closed,"2016-10-11 22:45:40","2016-10-11 22:45:40",5
"The Titanium SDK ","iOS: Calling Titanium.Media.hasAudioPermissions() is crashing the app","h5.Reproduce  1. Create a new default mobile app and add following code to app.js    2. Run the app on iOS 10 device  3. Click the Test button    h5.Expect Result  It should alert whether the app have Audio permission    h5.Actual Result  App crashed and exit. ",Bug,Critical,Closed,"2016-10-12 03:08:33","2016-10-12 03:08:33",2
"The Titanium SDK ","iOS: Add support for headers to the log server","When a client connects to the log server in the iOS app, it would helpful for the server to immediately respond with information about the app including the app id, version, environment (sim/device), and deploy type.    The format can be simple and basically mimic how HTTP works. When a new connection is accepted, it would immediately write:        The client will interpret all lines prior to {{\n\n}} to be a header. Subsequent lines are to be interpreted as log lines.    We need this feature so that a client can validate it has connected to the correct log server. It's possible for two different apps to listen on the same work and a client may think it's connecting to one app's log server when in fact it's connecting to another app's log server.",Bug,High,Closed,"2016-10-11 23:19:51","2016-10-11 23:19:51",5
"The Titanium SDK ","Android: crashing trying to load non-existing JS resources inside native modules","Attempting to load a JS resource that does not exist underneath a native nodule will result in Android crashing. This is most obvious using Hyperloop where paths are generated like {{require('hyperloop/android.content.Intent')}} under the hood. We then attempt to load 'android.content.Intent' as a JS resource inside the native hyperloop module.    Using proper paths like: {{require('/hyperloop/android.com.Intent')}} works around this issue, but doesn't address the root bug. This bug appears to be an existing issue, not a regression.    h4. Steps to reproduce:  # Import the hyperloop example application [here|https://github.com/<USER>hyperloop-examples].  # Or use the app.js below.    h4. app.js        h4. Actual        h4. Expected  No error is thrown.",Bug,Critical,Closed,"2016-10-10 19:49:46","2016-10-10 19:49:46",8
"The Titanium SDK ","iOS: require fails to resolve paths like 'hyperloop/uikit/uilabel'","With the new require behavior, some old legacy-style require paths that used to work no longer do. Specifically, if the path has no leading '/', './', or '../' and the first segment of the path is a native module id - but the resources/js file doesn't exist in that module.    This was particularly noticeable with hyperloop on 2.0.0 where we'd generate paths like 'hyperloop/uikit/uilabel', which actually resided in the user's app resources and not in the native hyperloop module itself.",Bug,High,Closed,"2016-10-10 18:31:10","2016-10-10 18:31:10",5
"The Titanium SDK ","Android: Update Google Play services for ti.geofence","Update Google Play service libs for {{ti.geofence}} to maintain parity with {{ti.map}} and {{ti.admob}}",Bug,High,Closed,"2016-10-10 18:21:39","2016-10-10 18:21:39",3
"The Titanium SDK ","iOS: Selected color not available in Ti.UI.ListItem","We have the {{selectedColor}} property in the [{{Ti.UI.TableViewRow}}|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TableViewRow-property-selectedColor] and should also have it in the {{Ti.UI.ListItem}} to alloy custom theming of native cells without custom cell-templates.",Improvement,Medium,Closed,"2016-10-09 17:11:58","2016-10-09 17:11:58",1
"The Titanium SDK ","Android: Architectures - armeabi armeabi-v7a cause build error at compiling module","h5.Issue description     Customer is trying to build an Titanium Android module. The default manifest file contains architectures: armeabi armeabi-v7a x86. When customer removes the x86 from this list he get the following error:      Android module contains a shared object (.so) file that does not support the ABI x86 (why?).     h5.Steps to reproduce    # Create appc module running appc new command  # Change the architecture list in the manifest file:  Default:  architectures: armeabi armeabi-v7a x86  What customer want:  architectures: armeabi armeabi-v7a  # Looks like the issue is with the compilation of the module. When you run ant to compile the module I am getting the BUILD FAILED error.    ",Bug,Critical,Closed,"2016-10-07 19:31:38","2016-10-07 19:31:38",2
"The Titanium SDK ","Android: Parameter tlsVersion has no effect in version< 5.0","Issue https://jira.<USER>org/browse/TIMOB-20061 is not fixed.    Parameter *tlsVersion* (TLS_VERSION_1_2) is ignored on android < 5.0    *Sending a request ends with error:*     TiHTTPClient: (TiHttpClient-10) [3509,3509] HTTP Error (javax.net.ssl.SSLHandshakeException): javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb7e3d2b8: Failure in SSL library, usually a protocol error  [ERROR] TiHTTPClient: error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x96f79926:0x00000000)  [ERROR] TiHTTPClient: javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb7e3d2b8: Failure in SSL library, usually a protocol error  [ERROR] TiHTTPClient: error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x96f79926:0x00000000)  [ERROR] TiHTTPClient:  at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:448)  [ERROR] TiHTTPClient:  at com.android.okhttp.Connection.upgradeToTls(Connection.java:146)  [ERROR] TiHTTPClient:  at com.android.okhttp.Connection.connect(Connection.java:107)  [ERROR] TiHTTPClient:  at com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:294)  [ERROR] TiHTTPClient:  at com.android.okhttp.internal.http.HttpEngine.sendSocketRequest(HttpEngine.java:255)  [ERROR] TiHTTPClient:  at com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:206)  [ERROR] TiHTTPClient:  at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:345)  [ERROR] TiHTTPClient:  at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:296)  [ERROR] TiHTTPClient:  at com.android.okhttp.internal.http.HttpURLConnectionImpl.getHeaderField(HttpURLConnectionImpl.java:143)  [ERROR] TiHTTPClient:  at java.net.URLConnection.getHeaderFieldInt(URLConnection.java:544)  [ERROR] TiHTTPClient:  at java.net.URLConnection.getContentLength(URLConnection.java:316)  [ERROR] TiHTTPClient:  at com.android.okhttp.internal.http.HttpsURLConnectionImpl.getContentLength(HttpsURLConnectionImpl.java:182)  [ERROR] TiHTTPClient:  at ti.modules.titanium.network.TiHTTPClient.handleResponse(TiHTTPClient.java:159)  [ERROR] TiHTTPClient:  at ti.modules.titanium.network.TiHTTPClient.access$1200(TiHTTPClient.java:85)  [ERROR] TiHTTPClient:  at ti.modules.titanium.network.TiHTTPClient$ClientRunnable.run(TiHTTPClient.java:1207)  [ERROR] TiHTTPClient:  at java.lang.Thread.run(Thread.java:841)  [ERROR] TiHTTPClient: Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb7e3d2b8: Failure in SSL library, usually a protocol error  [ERROR] TiHTTPClient: error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:741 0x96f79926:0x00000000)  [ERROR] TiHTTPClient:  at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)  [ERROR] TiHTTPClient:  at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:405)  [ERROR] TiHTTPClient:  ... 15 more  ",Bug,High,Closed,"2016-08-03 09:28:36","2016-08-03 09:28:36",5
"The Titanium SDK ","iOS: Local .png and .jpg images do not display in WebView when App-Thinning is enabled","PNG and JPG images that exist locally (in the Resources dir) render as broken images in Titanium.UI.WebView components. Images are broken when displayed via both <img> tags and CSS. This is a regression in Ti SDK 5.5.x. Attached is a sample app.js to reproduce the issue. The console displays the following error:    [ERROR] :  Error loading /Users/slim/Library/Developer/CoreSimulator/Devices/F2DACFF8-2866-4B5A-8098-3D817716D753/data/Containers/Bundle/Application/58D9B4CD-13B4-4224-A694-8CD011FED83B/Test.app/KS_nav_ui.png    Note that remote images (PNG, JPG) seem to render correctly. Also, local GIF images (not tested extensively) and other common assets such as JS and CSS render. Only local PNG and JPG images seem to be affected.  ",Bug,Critical,Reopened,"2016-10-07 05:55:08","2016-10-07 05:55:08",8
"The Titanium SDK ","CLI: Building a module on Windows errors with 'Missing required manifest key name'","h5.Description    *This is not a regression*    When building certain modules on Windows the build will error out with the below, this only happens when building certain modules, I have reproduced it using [ti.facebook|https://github.com/<USER>modules/ti.facebook] and [av.imageview|https://github.com/AndreaVitale/imageview]        h5.Steps to reproduce    # Download either [ti.facebook|https://github.com/<USER>modules/ti.facebook] or [av.imageview|https://github.com/AndreaVitale/imageview]  # Build the module using {{ti build -p android --build-only}} or {{appc run -p android --build-only}}    h5.Actual result    The build will fail with the error above    h5.Expected result    Build should not fail",Bug,Critical,Closed,"2016-10-07 10:26:29","2016-10-07 10:26:29",3
"The Titanium SDK ","Windows: TableView scroll event doesn't fire","It looks like the scroll event has not yet been implemented for TableView on the Windows platform. This is a major issue that makes table paging impossible.    Can this please be resolved as a matter of urgency. ",Bug,Critical,Closed,"2016-09-30 13:04:09","2016-09-30 13:04:09",5
"The Titanium SDK ","iOS and Android revert incorrect CommonJS module changes","Both the Android and iOS build have a bug when resolving the main JS file in a CommonJS Titanium module. Normally the JS files are named {{<module id>.js}}, but if this doesn't exist, it should:    * See if there's a package.json  * If there is, read it in and find a {{main}} property  * Check that the file defined by {{main}} actually exists  * If exists, use it  * If not exists, look for an {{index.js}} file    As apart of TIMOB-23382 (PR https://github.com/<USER>titanium_mobile/pull/8004), the logic is bad. It will set the {{module.libFile}} to {{package.json}} or {{index.json}} which is technically incorrect. The good news is {{module.libFile}} for CommonJS modules is not used anywhere, however we should still fix it.",Bug,Low,Closed,"2016-10-07 06:18:43","2016-10-07 06:18:43",5
"The Titanium SDK ","Android: Using __filename in app.js errors with Can't find variable: __filename","h5.Description    *This is not a regression occurs using 5.5.1.GA stack*    When using {{__filename}} in an app.js file the following is thrown    *Using __filename in any file other than app.js works*        h5.Steps to reproduce    # In your app.js add {{console.log(__filename)}}  # Build for Android, iOS or Windows    h5.Actual result    The above error is thrown    h5.Expected result    __filename should be able to be used in app.js file",Bug,Medium,Closed,"2016-10-06 15:30:31","2016-10-06 15:30:31",3
"The Titanium SDK ","Android: Override contextual bar contents inside webview when selecting text","Initial proposal. We should look at our other APIs to see if we have something similar to use as basis for how we'd structure this.  {code:js}  var webView = Ti.UI.createWebView({      disableTextSelection: false,      disableContextMenu: true,      contextMenuItems: [{          title: Share,          identifier: share,          icon: myIcon.png, // Android-only      }]  });     webView.addEventListener(contextmenuclick, function(e) {      Ti.API.info(Clicked at item with identifier:  + e.identifier);  });  {code}    Some similar-ish APIs to consider:   - http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Windows.CommandBar  - http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.iOS.PreviewContext  - http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TabGroup","New Feature",Medium,Open,"2016-10-06 15:03:29","2016-10-06 15:03:29",13
"The Titanium SDK ","iOS: Disable context menu inside webview when selecting text","Hi...    In webView when selecting the content or text a default popup menu gets appeared with the options copy, define, share etc.    Is it possible to remove this option without blocking webview text selection? Also, add some new menu option?      ---    We should add a boolean property to disable the default set of context actions in the action bar. We may *also* want to allow disable text selection altogether.    {code:js}  var webView = Ti.UI.createWebView({      disableTextSelection: false,      disableContextMenu: true  });  {code}","New Feature",Critical,Closed,"2016-10-06 15:02:34","2016-10-06 15:02:34",2
"The Titanium SDK ","Android: Expose setProgress method in Ti.Android.Notification","Progress notification on Android allows to show/communicate progress of a <USER>work to an application user. ",Improvement,Critical,Closed,"2016-10-06 07:55:06","2016-10-06 07:55:06",2
"The Titanium SDK ","Android: Improve TypeConverter::jsValueToJavaObject() implementation","Quote from [~<USER> [GitHub|https://github.com/<USER>titanium_mobile/pull/8459#issuecomment-251833180]    {quote}  so clearly I think our existing behavior is basically flukey and happened by chance/luck more than anything. We should definitely revisit the behavior for jsValueToJavaObject, since order of comparisons clearly matters. The test failures on this past PR build should be pretty informative to see exactly what case broke by moving to a more explicit Number check. But I'd argue we should define the actual conversion order in a more formal way, likely trying explicit checks like IsNumberObject(), IsBooleanObject(), etc first, and if all of those fail, then moving down to the more forgiving checks (but again, what order we try those will still matter - not sure if there's any spec on that).    Looking at the code, it looks like this conversion is used when:  - we are trying to convert to a generic java.lang.Object  - we are trying to convert to a KrollProxy  - converting elements in varargs array  - the result of invoking a V8Function  - the result of calling a native property on a V8Object  - the result of nativeEvalString in V8Runtime  - converting js args into an Object[] (for each element)  - converting js array to java Object[] (for each element)  - converting keys and values in a JS Object (which this PR would fix to only be used for values)  - in jsObjectIndexPropsToJavaArray (which seems to be used only in some special edge case on creating a proxy object?)    I'm not sure if we can move away from using it so much and use more specific conversions where we know the target types in advance?    On another tangent, since we've updated V8 to ES6 compat, we should actually consider the new JS types that have been introduced and how to convert/handle those:  - Generators  - Promises  - Maps  - Sets  - Typed arrays (uint8, uint8 clamped, int8, uint16, int16, uint32, int32, float32, float64)    And I'm not sure we ever handled regexps. God knows how we'd handle those (we could convert to equivalent Patterns or something, but not sure how we'd handle state when doing matches or whatever).  {quote}",Improvement,Medium,Open,"2016-10-06 11:38:09","2016-10-06 11:38:09",13
"The Titanium SDK ","Android: When the back button is pressed on android it closes the app even if it is not the last window with SDK 6.0.0","This is a regression.    h5.Steps to reproduce:    1. Use the code below in the app.js    2. Click on the first window.  3. You should see the second window with the background color teal.   4. Press the android back button.    h5.Actual results:  1. The app closes.    h5. Expected results:  1. App should go back to the first window rather than closing.                   ",Bug,None,Closed,"2016-10-05 22:47:20","2016-10-05 22:47:20",5
"The Titanium SDK ","Windows: Failed to capture photo error thrown when taking a zoomed in photo","h5.Description    When taking a photo, if the user zooms in before taking the photo then when taking the photo an error will be thrown, {{code:-1,error:Failed to capture photo,success:false}}. There is another error thrown while capturing the photo but it displays too quick to be read and is not logged to the console.        h5.Steps to reproduce    # Add the above code to an existing app.js  # Build to Windows {{appc run -p windows -T wp-device}}  # Zoom in with the camera  # Take a photo    h5.Actual result    {{code:-1,error:Failed to capture photo,success:false}} is thrown    h5.Expected result    Photo should be taken",Bug,High,Closed,"2016-10-05 09:41:14","2016-10-05 09:41:14",5
"The Titanium SDK ","App is not installing on Genymotion emulator or intel86 CPU emulator.","Hello!    Windows 8: When we run App on Android genymotion emulator or intel*86 emulator it shows Waiting for emulator to become ready but it already opens. Please see the attachment image and all the info.    Thanks.",Bug,High,Closed,"2016-09-26 21:06:54","2016-09-26 21:06:54",5
"The Titanium SDK ","iOS Debugger: Breakpoint not hit for Alloy applications","During debug on iOS of an Alloy application the breakpoints are not hit.     This is a regression on SDK as the issue happens with the 6.0 SDK but does not happen with 5.5.1.GA version of SDK    * The issue happens only for Alloy apps. For classic apps the breakpoints are hit successfully  * The issue occurs on both device and simulator  * This issue was found while testing the debug with TiCore framework     Steps to reproduce issue  1. Create a new alloy project  2. Add a breakpoint  3. Debug the project on iOS device or sim    Expected Results  The breakpoints are hit    Actual Results  The breakpoints are not hit  ",Bug,Critical,Closed,"2016-10-04 07:09:13","2016-10-04 07:09:13",8
"The Titanium SDK ","Windows: Using Ti.Media.showCamera with saveToPhotoGallery throws access denied","h5.Description    When using Ti.Media.showCamera and setting saveToPhotoGallery to true an error will be thrown after the user has taken a photo. This is fixed by adding the following capabilities             h5.Steps to reproduce    # Add the code above to an existing app.js  # Build for Windows {{appc run -p windows -T wp-device}}  # Take a photo  # Tap the tick to save the photo    h5.Actual result    Error is thrown    h5.Expected result    Error should not be thrown",Bug,Medium,Closed,"2016-10-04 17:27:00","2016-10-04 17:27:00",5
"The Titanium SDK ","iOS Debug: The app crashes on launch during debug on iOS device without wifi connection","When trying to debug an application on an iOS device that does not have connectivity (the test device did not had sim so tested with no wifi) then the app crashes on launch    This is not a regression as the same behavior is seen in previous SDK versions as well.    * The issue happens for both alloy and classic apps  * This issue was found while testing the debug with TiCore framework    Steps to Reproduce:  1. Create a new project  2. Add a breakpoint  3. Debug the project on iOS device that is not connected to wifi  4. Once installed try to launch the app on device    Actual Result:  The app crashes. Below are the console logs. Also the crash report is attached.      ",Bug,High,Closed,"2016-10-04 08:57:55","2016-10-04 08:57:55",1
"The Titanium SDK ","_MACOSX folder present in touchtest plugin 8244.293.2 folder","*This is a regression. This is not see with plugin 8244.293.*    h5.Steps to reproduce:  1. Make sure you have touchtest plugin 8244.293.2 installed.  2. Go into the plugin folder.    h5.Actual results:  1. You will see a {{_MACOSX}} folder inside the plugin folder.    h5.Expected results:  1. There should not be any {{_MACOSX}} folder inside the plugin folder.",Bug,Low,Closed,"2016-10-03 20:29:11","2016-10-03 20:29:11",2
"The Titanium SDK ","Windows: Invalid value returned for Ti.App.getSessiondId","h5.Description    Calling Ti.App.getSessionId() or Ti.App.sessionId returns __SESSION_ID__, on Android it returns a UDID like {{2e348c7f-d254-4861-9a90-d8c61df26a5a}}    h5.Steps to reproduce    # Add {{console.log(Ti.App.getSessionId())}} to an existing app.js  # Build for Windows    h5.Actual result    Check logs, __SESSION_ID__ is logged    h5.Expected result    The current session id should be logged",Bug,Critical,Closed,"2016-10-03 15:59:40","2016-10-03 15:59:40",3
"The Titanium SDK ","Windows: Unable to build to a Windows 10 device if no Windows 10 emulators are installed","h5.Description    When building to a device from a Windows machine that has just the Windows SDKs installed, it has been seen that the build will fail with the following error, where the UDID is the UDID for the connected device. This appears to be intermittent for some and consistent for others.        [This|https://gist.github.com/ewanharris/989623790051330453ba35d22b9339a1] can be used to test this, be sure to change the project directory in the command before running, and also requires node 6    h5.Steps to reproduce    # Install only Windows 10 tools and SDKs  # Attempt to build to a Windows device    h5.Actual result    Build will fail    h5.Expected result    Build should not fail",Bug,High,Closed,"2016-10-03 09:46:43","2016-10-03 09:46:43",5
"The Titanium SDK ","Android: Add property to release space when hiding an object","On Android you can set 3 visible values: visible, invisible and gone. Currently gone is not supported in Titanum. With this setting you can free the space an object has when hiding it.     The screenshot shows two vertical layout views with the first three elements hidden. On the left side is the normal behaviour; on the right side I've used gone instead of invisible (the four bottom boxes move up).    The property is called `hiddenBehavior` and can control the behavior when hiding a view. When you set it to `true` and call `hide()` it will either release the space (new) or retain the space (default). Default value is still {{Ti.UI.VIEW_INVISIBLE}} so it behaves like normal when you don't change it.  When you show the object again it will take up the previous space again    *Current workaround to release the space:*  Hiding: save the current object height, hide the object, set the height to 0.  Showing: show the object, set the height to the saved value.    *Parity?*  Not sure if this is possible on iOS. Perhaps someone else can add this part","New Feature",Medium,Closed,"2016-10-02 09:57:50","2016-10-02 09:57:50",3
"The Titanium SDK ","iOS: Events on images inside ListViewItem templates not fired (regression)","I think I found an issue on images inside ListViewItem templates,  the event did not fire if we have  *+image+ property*.   Works just fine on 5.2.X and 5.3.X, but not on 5.4.GA and 5.5.GA.  Actually is very irregular.    *Not fire the event: (with +image=+ property)*      *Fired normally! ({color:red}without{color} +image=+ property)*          Also seams if I put run-on-main-thread  TRUE,  the event fires normally too, but I can't do that in our project.          In our project is comment out, like:          P.S. In our case we have 3 events, which they worked acceptably well on the 5.2.x and 5.3.x sdk.  We have this issues since the 5.4.GA, but just yesterday is that I've isolated the problem in detail.            There is any workaround until the fix? We need to release the app :)",Bug,Critical,Closed,"2016-09-28 21:36:04","2016-09-28 21:36:04",8
"The Titanium SDK ","iOS: BgService more than 10 minutes and show blue bar issue for Location.","Steps to Reproduce.    1. Create a classic project.  2. paste the following code to the corresponding file.  {code:title=app.js}  var win = Ti.UI.createWindow({   title : 'Background Services Example',   backgroundColor : '#4186cd',   modal : true  });    // Create a Button.  var bgService = Ti.UI.createButton({   title : 'StartService',   height : Ti.UI.SIZE,   width : Ti.UI.SIZE,   top : 20,    });      function bgServiceStart() {   Ti.API.info('Registering background services');   var service = Ti.App.iOS.registerBackgroundService({    url : 'bgservice.js'   });   Ti.API.info('*** Press home button to pause application ***');  }    // Listen for click events.  bgService.addEventListener('click', function() {   bgServiceStart();     alert('click bg service');  });    // Add to the parent view.  win.add(bgService);    win.open();        {code:title=tiapp.xml}  <key>UIBackgroundModes</key>  <array>  <string>location</string>  </array>  <key>NSLocationAlwaysUsageDescription</key>  <string>Specify the reason for accessing the user's location information.  This appears in the alert dialog when asking the user for permission to  access their location.</string>  <key>UISupportedInterfaceOrientations~iphone</key>  {code}  3. Run that code to the device  4. It does not work more that 10 minutes even below 10 minutes and don't  show blue bar.  5. It should work more that 10 minutes and show blue bar as well since I have added UIBackgroundModes key   - http://docs.<USER>com/platform/latest/#!/guide/tiapp.xml_and_timodule.xml_Reference-section-29004921_tiapp.xmlandtimodule.xmlReference-UIBackgroundModes",Bug,Medium,Closed,"2016-10-01 20:28:59","2016-10-01 20:28:59",3
"The Titanium SDK ","iOS: Add permissions-handling for photo-gallery access","Currently, we have all kind of permission-checks for likely every API that exposes it. Except for the {{Ti.Media.openPhotoGallery()}} API. Those are needed and should be implemented like the others.",Improvement,High,Closed,"2016-10-01 16:51:27","2016-10-01 16:51:27",2
"The Titanium SDK ","Android: Exiting an app by pressing back prevents the app from being resumed","Exiting an app by pressing the back button prevents the app from being resumed in the recent apps menu.",Bug,High,Closed,"2016-10-01 15:47:37","2016-10-01 15:47:37",5
"The Titanium SDK ","Android: problems in webview since 5.4.0","Our app shows 3D tours of flats/houses.    Next example is working fine on 5.3.0, but something was broken in 5.4.0 version of SDK, I don't understand what exactly! I don't see in release notes some specific stuff related to webview component. Please, shed some light on this issue. Any help/advice appreciated.     *index.js:*          P.S. I'm using this module: https://github.com/<USER>TiWebviewFragment  Because of webview doesn't work correctly by default.    P.P.S. issue: since 5.4.0 webview loads fine, but I don't see panorama (only gray screen)",Bug,Critical,Closed,"2016-09-20 09:05:22","2016-09-20 09:05:22",1
"The Titanium SDK ","Android: appc run based module builds fail due to double-namespaced classes in KrollGeneratedBindings.gperf","I know we'd like to make the full cut over to using the node-based module builds, but all of our existing modules are still built using ant and I just tried to use {{appc run}} to build the hyperloop module on a 6.0.0 SDK. It failed with:    ",Bug,Critical,Closed,"2016-09-29 15:12:12","2016-09-29 15:12:12",5
"The Titanium SDK ","Android: Unable to send a feature event with a number as the data objects key","h5.Description    When sending a feature event on Android, if a key in the data object is a number an error will be thrown. The code works find on iOS and Windows            h5.Steps to reproduce    # Add the above code to an existing app.js  # Build for android    h5.Actual result    An error will be thrown    h5.Expected result    No error should be thrown",Bug,Critical,Closed,"2016-09-29 11:41:54","2016-09-29 11:41:54",5
"The Titanium SDK ","Android: Ti.UI.Switch should default to false but is undefined","Jenkins PR builder is failing due to 1 unit test. Basically UI.Switch default value should be false, but is currently undefined. This is the mocha test:        You can refer to this ticket for a similar fix.  https://jira.<USER>org/browse/TIMOB-23499  ",Bug,Medium,Closed,"2016-09-29 07:34:49","2016-09-29 07:34:49",2
"The Titanium SDK ","iOS: Application crashes from background-notifications when delegate method is not implemented","Thanks to @rlepinski on Github:  {quote}  If you enable background notifications in iOS it crashes the application when a push is received. It looks like TiApp never implements the method that its forwarding on, so I am guessing its relying on a module to swizzle that method into place.  {quote}    The PR will check if the delegate is actually implemented and only calls it then.    Community PR: https://github.com/<USER>titanium_mobile/pull/8437    Testing steps:  1. Create a new app  2. Follow [this steps|http://docs.<USER>com/platform/latest/#!/guide/iOS_Background_Services-section-37539664_iOSBackgroundServices-SilentPush] to implement silent-push (aka background-notifications)  3. Trigger a notification from the server / arrow dashboard    Expected behavior: The app does not crash",Bug,High,Closed,"2016-09-28 16:47:18","2016-09-28 16:47:18",1
"The Titanium SDK ","Remove deprecated Python and unused files","The Python files in the Titanium SDK are deprecated and no longer maintained. They must be removed!    We will need to make sure that Jenkins and Studio are not broken.",Story,Medium,Closed,"2016-09-28 16:15:17","2016-09-28 16:15:17",5
"The Titanium SDK ","Hyperloop: Improve error handling for non-default Xcode installations","Currently we solely rely on the user having the correct Xcode Version under {{/Applications/Xcode.app}} as stated in the [Enabling Hyperloop|https://wiki.<USER>org/display/guides2/Enabling+Hyperloop]. This can easily lead to unexpected behaviour when different Xcode versions are installed. We should evaluate if it is possible to detected the libclang version that is loaded and then require a minimum version to avoid wrong metabase generation. Also when the user does not have Xcode installed in the above default directory the metebase generation will fail due to the hardcoded rpath. We should catch this error and tell the user what to do to fix it.",Improvement,Medium,Closed,"2016-09-28 07:34:14","2016-09-28 07:34:14",2
"The Titanium SDK ","iOS: Use AVCaptureDevice for Ti.Media.showCamera","We are currently using the {{UIImagePickerController}} to show the camera and take photos / videos. Apple has the {{AVCaptureDevice}} API to configure the camera more advanced. ",Improvement,Medium,Closed,"2016-09-24 13:27:11","2016-09-24 13:27:11",0
"The Titanium SDK ","Android: Creating a default alloy/classic project with only android as target created a _MACOSX folder in the project root with touchtest module in it.","*This is a regression.*    h5.Steps to reproduce:  1. Create a default alloy & classic app in studio with only {{android}} as target.  2. Expand the project to unhide the files inside.    h5.Actual Results:  1. You will see a {{_MACOSX}} folder at the root of the project having touchtest module 2.0 inside android folder.  Screenshots attached.    h5.Expected Results:  1. No {{_MACOSX}} folder containing touchtest module should get created in side the project root.",Bug,Critical,Closed,"2016-09-23 23:01:55","2016-09-23 23:01:55",2
"The Titanium SDK ","CLI: ti setup sdk doesn't work when setting latest","There's a bug in {{ti setup sdk}} when accepting the default of latest.        To reproduce:    ",Bug,Medium,Closed,"2016-09-22 17:25:51","2016-09-22 17:25:51",2
"The Titanium SDK ","iOS - SDK-Xcode-project: Disable automatic signing, disable unused capabilities, add common privacy-keys","When running an app on the device with Xcode 8, we always need to disable the automatic code-signing manually and disable some capabilities that are enabled by default in the Xcode project (note: This does not effect in the generated project, since capabilities are managed by the CLI and a local capabilities file).",Story,Medium,Closed,"2016-09-22 09:30:15","2016-09-22 09:30:15",1
"The Titanium SDK ","Android: Titanium crashes if back button is hit soon enough after app launch","Based on http://developer.<USER>com/question/180283/always-a-crash-race-condition-with-android-back-button    Summary - If you press back fast enough during app open Titanium apps will crash.  Looks like the android back event that causes the app to tear down can cause the root UI element to be null when adding the first Window of the project to it.    This happens on device for the bare minimum installs of Titanium project with or without Alloy.  Easier to repro on Alloy as it takes a bit longer for the app to launch.    TI 3.5.0.GA  Mac Yosemite  Samsung Galaxy S5 and Note3 (and others)    1.  ti create a new android project  2.  cd into root of project  3.  alloy create  4.  ti build -p android -T device --device-id <device>  5.  Important step:  On the device (not simulator), launch app AND IMMEDIATELY start pressing back button.     ** Keep closing and reopening app as fast as you can if you don't see it repro the first time in step 5  **** This happens when a Window is the default/first item created in the Activity as well    Expected -  App closes    Actual -   App crashes and closes    Stack -  01-27 13:32:08.269: E/AndroidRuntime(20104): FATAL EXCEPTION: main  01-27 13:32:08.269: E/AndroidRuntime(20104): Process: com.test, PID: 20104  01-27 13:32:08.269: E/AndroidRuntime(20104): java.lang.NullPointerException  01-27 13:32:08.269: E/AndroidRuntime(20104):  at android.content.ComponentName.<init>(ComponentName.java:77)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at android.content.Intent.<init>(Intent.java:4445)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at ti.modules.titanium.ui.WindowProxy.handleOpen(WindowProxy.java:127)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at org.<USER>titanium.proxy.TiWindowProxy.handleMessage(TiWindowProxy.java:88)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at ti.modules.titanium.ui.WindowProxy.handleMessage(WindowProxy.java:415)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at android.os.Handler.dispatchMessage(Handler.java:98)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at android.os.Looper.loop(Looper.java:146)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at android.app.ActivityThread.main(ActivityThread.java:5678)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at java.lang.reflect.Method.invokeNative(Native Method)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at java.lang.reflect.Method.invoke(Method.java:515)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1291)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1107)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at dalvik.system.NativeStart.main(Native Method)  ",Bug,High,Closed,"2016-09-21 22:05:40","2016-09-21 22:05:40",5
"The Titanium SDK ","iOS: Edited videos are not saved to photo gallery","If a recorded video is edited (by changing/dragging the start or end points) then the video is not saved to the photo gallery, even though {{saveToPhotoGallery}} is true.    *Steps to reproduce issue*  1. Create a new project and use the code below  2. Build the project for an iOS device  3. Click {{Open Camera}}  4. Record a video  5. Edit the start or end points of the video by dragging the bars at the edges of the timeline at the top of the screen  6. Click {{Use Video}}  7. Go the device's photo gallery    *Expected Results*  The edited video is present, as per our docs:  {quote}  saveToPhotoGallery (boolean) whether modified media should be saved back to the gallery, generally only useful with allowEditing=true  {quote}    *Actual Results*  The edited video is not present    *Notes*  If you do not edit the video, it is correctly saved to the photo gallery  If on {{iOS 10}} you need to add these keys to your tiapp.xml:      *Code*  ",Bug,Critical,Closed,"2016-09-21 20:44:20","2016-09-21 20:44:20",5
"The Titanium SDK "," Ti.Media.showCamera() with overlay  bug on iOS 10","h5.Issue Description  Ti SDK 5.5.0 and iOS 10 introduce new behaviors and expose a bug in Titanium using Ti.Media.showCamera() with an overlay    Using SDK 5.2.2, and setting allowEditing=false. Yet, users could still pinch to zoom and tap within the photo to set the exposure point. With iOS 10, app built with 5.2.2 and allowEditing set to false,  pinch & exposure no longer work.    Migrating to 5.5.x / Xcode 8 and testing the code with that environment with allowEditing=false, pinch & exposure don't work. (NSCameraUsageDescription key is added in tiapp.xml.)    Setting allowEditing=true, users can again pinch to zoom and set exposure, however, they can no longer tap on the buttons in the overlay. It's as if the camera preview is at a higher zIndex .. the overlay is visible however touch events go to the camera not the overlay.    As a result, users are stuck -- they can't tap on the overlay's Done button to close the camera and use the rest of the app. They have to force-quit the app.     h6. Steps to reproduce    # Donwload Test app at https://www.dropbox.com/s/ufsealzqfqdpytj/app.zip?dl=0    # Create a default Alloy project.   # Make sure to add the NSCameraUsageDescription to the tiapp.xml.    # Replace the app folder with the one linked above.   # Build to an iOS 10 device.   # Tap open camera.   # You can pinch to zoom and tap to set exposure, but the shutter button and Done buttons don't respond to taps.   # Edit the app/controllers/index.js to set allowEditing=false, rebuild.   # This time, you cannot pinch to zoom but you can tap the shutter or done buttons.     * Adjusting the zIndex on the overlay view has no effect.  ",Bug,Critical,Closed,"2016-09-21 19:09:24","2016-09-21 19:09:24",5
"The Titanium SDK ","iOS: Ti.Media.switchCamera() fails to switch camera.","Titanium.Media.switchCamera() fails to load the front-facing camera.    *Steps to Reproduce:*  1.Run Code      2. Click 'Switch' button for test.    *Expected Result:*    The front (facing the user, showing their face on the screen) camera should load.    *Actual Result:*    The back camera loads only.    *Note: It works on 5.3.1.GA version.*    Thanks.",Bug,High,Closed,"2016-09-21 18:22:56","2016-09-21 18:22:56",3
"The Titanium SDK ","iOS: The first view-children not firing click-events when using run-on-main-thread","Scenario :     - *Tableview* with n *TableViewRow*  - Every TableViewRow has a *view container*  - Every view container has n children (label / view)    Problem :     - Only the first children of the view container doesn't fire the *touchstart* event , but fire the *click* event. All the other children fire touchstart and click event.  Try to enabled the code commented , and disabled the code just above.     I edited an example found on the doc      ",Bug,Critical,Closed,"2016-09-21 09:26:11","2016-09-21 09:26:11",5
"The Titanium SDK ","Windows: Allow an event to be logged to the console for inspection","h5.Description    On Windows, when trying to inspect an event that is returned to an event listener a user will be faced with one of the two following results.    {code: title=app.js}  var win = Ti.UI.createWindow();  var label = Ti.UI.createLabel({    backgroundColor:'darkgray',    text: 'Your Test here',  });  win.add(label);  label.addEventListener('click', function(e) {   console.log(e.source);   console.log(JSON.stringify(e.source));  });  win.open();      {code:title=Windows: console.log(JSON.stringify(e))}  [ERROR] :  Application Error: Runtime Error: JSON.stringify cannot serialize cyclic structures.      {code:title=Android: console.log(JSON.stringify(e))}  [INFO] :   {wordWrap:true,textAlign:center,text:Your Test here,ellipsize:2,enabled:true,visible:true,touchEnabled:true,backgroundColor:darkgray,backgroundRepeat:false,size:{height:100,width:360,y:0,x:0},rect:{height:100,width:360,y:229,x:0},keepScreenOn:false,children:[],width:fill,height:100,bubbleParent:true,apiName:Ti.UI.Label,_events:{click:{}}}      {code:title=iOS: console.log(JSON.stringify(e))}  {horizontalWrap:true,visible:true,height:100,backgroundColor:darkgray,width:FILL,textAlign:center,text:Your Test here,touchEnabled:true}  {code}      h5.Steps to reproduce    # Add the code above to an exisiting app.js  # Build using {{appc run -p windows -T wp-emulator}}    h5.Actual result    When attempting to get information on the event returned from the event listener, either  # When attempting to use JSON.stringify an application error will be thrown as the JSON contains cyclic structures  # When logging just the event, the object type will be logged    h5.Expected result    In parity with other platforms and to aid a developer I would expect to be able to log an event to the console to inspect the properties returned in the JSON payload.  ",Improvement,Medium,Closed,"2016-09-20 11:15:34","2016-09-20 11:15:34",8
"The Titanium SDK ","Windows: ScrollView doesn't load complete data","ScrollView doesn't work properly according to sample code provided in the [API|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.ScrollView]   doc using SDK 5.5.0GA.  It does not scroll to show the rest of the data.        *Test Environment:*    Operating System Microsoft Windows 8.1 Enterprise  Node.js 0.12.7, npm Version  2.11.3  <USER>CLI Installer 4.2.4, Core Package 5.2.2   CLI Version  5.0.6,node-appc Version 0.2.31  SDK-5.5.0.GA,Windows phone device(8.1)    *Test code:*        *Test Steps:*    * Create a classic project  * Copy the sample code and run on Windows phone device(8.1)  * Scrollview is not working as expected and  does not scroll to show complete data.      Output: Check the [link|http://s12.postimg.org/l2i4hrbwd/wp_ss_20160920_0001.png].",Bug,High,Closed,"2016-09-20 04:34:48","2016-09-20 04:34:48",5
"The Titanium SDK ","orientationchange event problems","Hello,    There might be a problem with the event orientationchange : it is not triggered the first time, and is triggered just before the orientation change.  This happens since SDK 5.0.  I don't have this problem with SDK 3.5.2  To understand this behaviour, I have created a new Alloy Project, and added this code in alloy.js    {// The event listener  Ti.Gesture.addEventListener('orientationchange', function (e) {      Ti.API.info('w:' + Ti.Platform.displayCaps.platformWidth + ' h:' + Ti.Platform.displayCaps.platformHeight + ' isPortrait:' + e.source.isPortrait());  });    // An event-independant code to catch orienation change  var prevW = Ti.Platform.displayCaps.platformWidth, prevH = Ti.Platform.displayCaps.platformHeight;  setInterval(function () {      if (prevW != Ti.Platform.displayCaps.platformWidth || prevH != Ti.Platform.displayCaps.platformHeight) {          prevW = Ti.Platform.displayCaps.platformWidth;          prevH = Ti.Platform.displayCaps.platformHeight;          Ti.API.info('orientation changed? w:' + prevW + ' h:' + prevH);      }  }, 10);  }    And here is the log  * I was in portrait and I changed the orientation now to landscape, note the absence of the event log  [INFO] :   orientation changed? w:2560 h:1504  * I change the orientation again from landscape to portrait... the event log shows that we are in landscape... The interval log shows we are indeed in portrait !  [INFO] :   w:2560 h:1504 isPortrait:false  [INFO] :   orientation changed? w:1600 h:2464  * I change the orientation endly from portrait to landscape... the event log shows that we are now in portrait... The interval log is right the tablet is in landscape !  [INFO] :   w:1600 h:2464 isPortrait:true  [INFO] :   orientation changed? w:2560 h:1504  ",Bug,High,Closed,"2016-09-19 12:59:22","2016-09-19 12:59:22",0
"The Titanium SDK ","Hyperloop: Improve Ti SDK handling during CI builds","The Jenkins build job for Hyperloop sometimes chokes on a wrong Ti SDK. The CI build always trys to install the latest Ti SDK in conjunction with the {{-d}} flag to select it afterwards. If the latest Ti SDK is already installed this does nothing and we end up building with the Ti SDK that is currently selected on the build slave, which can be wrong.",Bug,Critical,Closed,"2016-09-19 15:25:10","2016-09-19 15:25:10",3
"The Titanium SDK ","iOS: App rejected because some <key> in the Info.plist aren't specified","From SDK 5.5.0.G.A Titanium require some new keys in the Info.plist file https://www.<USER>com/blog/2016/09/ga-release-for-titanium-sdk-5-5-0-<USER>cli-5-5-0-<USER>studio-4-7-1/        This is the (first) email that i received from iTunes Connect after the upload of an update of my app with *SDK 5.5.0.G.A*.  I haven't included any of the previous keys because the app not use any of that functionality.        Ok , after the first email i have update the Info.plist file adding the *NSPhotoLibraryUsageDescription* and the *NSMicrophoneUsageDescription* keys (i don't use any of this functionality). After the second upload , this is the email (second) that i received from iTunes Connect.        Ok , after the second email i have update the Info.plist file adding the *NSAppleMusicUsageDescription* key (i don't use this functionality). After the third upload all is ok.    So :   - Some keys seem to be required (NSMicrophoneUsageDescription and NSPhotoLibraryUsageDescription), even if the feature is not used  - Add in the docs (and in the article) this keys *NSAppleMusicUsageDescription*  ",Bug,Critical,Closed,"2016-09-19 08:55:51","2016-09-19 08:55:51",13
"The Titanium SDK ","iOS: Random app-rejection due to usage of non-public API","Hi. Recently my app got rejected from Apple. This was all right few weeks ago. I used 5.1.1.GA and I didn't change anything significant. I also tried to resubmit app with 5.5.0.GA but that didn't go through also.     Also, noticed this is not isolated issue as one more developer experienced the same issue.      Here is response from Apple:    Performance - 2.5.1          Your app uses or references the following non-public APIs:        focus:        The use of non-public APIs is not permitted on the App Store because it can lead to a poor user experience should these APIs change.        And more info about error in Ti SDK:    Thank you for your reply. Our team has re-reviewed this app to ensure our findings were accurate, we found this app contains references to the following selectors:    focus: was found in the method -[TiRootViewController manuallyRotateToOrientation:duration:]        Please take a look at this asap. Thanks.",Bug,Critical,Closed,"2016-09-19 11:16:15","2016-09-19 11:16:15",2
"The Titanium SDK ","iOS 10: Ti.Media.queryMusicLibrary crashes the app","in new OS 10 apple added new permission for access music library , my issue with Ti.Media.queryMusicLibrary, when i call this method the app crashes , Ive tried to search for condition to check if user already gives access or request access to Music library can't find them !    var musicList = Ti.Media.queryMusicLibrary({      mediaType : Ti.Media.MUSIC_MEDIA_TYPE_MUSIC  });  after upgrade to ios 10 and <USER>SDK to 5.5.0.GA , when u call the above method the app will crash !    any advices is very much appreciated",Bug,Critical,Closed,"2016-09-19 08:56:25","2016-09-19 08:56:25",3
"The Titanium SDK ","iOS: Ti.UI.Picker not working in Ti.UI.ListView on device","When using a Picker in a ListView template, it does work on the Simulator but fails on the device. It's the same issue as discussed in TIMOB-23616 and only requires a quick fix in the symbols-check.",Bug,High,Closed,"2016-09-18 23:57:47","2016-09-18 23:57:47",1
"The Titanium SDK ","ioslib: Introduce managed device pairs","ioslib lists all iOS and watchOS Simulators, but doesn't clearly list which iOS Simulators and watchOS Simulators can be paired. This is primarily due to the complexity because device pairs are per Xcode.    We could fix this by creating and owning our own device pairs. The pair would get its own UDID. Then Studio and the CLI would simply show all iOS Simulators and all device pairs. No need to display watchOS Simulators or valid permutations of all iOS and watchOS Simulators.",Improvement,Low,Closed,"2016-09-18 15:30:38","2016-09-18 15:30:38",1
"The Titanium SDK ","iOS: After taking picture from landscape mode showing white color on top and bottom portion.","h6.description   If I take a picture in the landscape, the result saved image show white color(top and bottom).    h6. Steps to Reproduce  1. Just run the following code on the device.  2. Take a picture in landscape mode.  3. Now see the image from the device gallery, show white color(top and bottom). This is the issue.      h6.Test case  {code:title=app.js}  var win = Titanium.UI.createWindow({   title : 'Tab 1',   backgroundColor : '#fff'  });    var camera = Ti.UI.createButton({   title : 'Open Camera',   height : 50,   width : 100,   top : 50,   left : 50  });    win.add(camera);    function openCamera() {   if (Ti.Media.isCameraSupported) {    //Ti.Media.setCameraFlashMode(Ti.Media.CAMERA_FLASH_ON);    //Ti.Media.setCameraFlashMode(1);    //alert(Ti.Media.getCameraFlashMode());    //check if this return 0 always      Titanium.Media.showCamera({     success : function(event) {      Ti.API.info('success caprured image saveToPhotoGallery');      Ti.Media.hideCamera();       },     cancel : function() {      // called when user cancels taking a picture     },     error : function(error) {      // called when there's an error      var a = Titanium.UI.createAlertDialog({       title : 'Camera'      });      if (error.code == Titanium.Media.NO_CAMERA) {       a.setMessage('Please run this test on device');      } else {       a.setMessage('Unexpected error: ' + error.code);      }      a.show();     },     saveToPhotoGallery : true,     //overlay : overlay,     allowEditing : true,     mediaTypes : [Ti.Media.MEDIA_TYPE_VIDEO, Ti.Media.MEDIA_TYPE_PHOTO],     showControls : true // always use to get the basic facility about camera.     //overlay:overlayview // do not use overlay to when you want to use the switching facility    });     }  }    camera.addEventListener('click', function() {   openCamera();  });    win.add(camera);  win.open();    {code}    Actual: If I take a picture in landscape, the result will be a portrait So some top of portion is showing white color.    Expected: If I take a picture in landscape, the result captured image should not show white color.",Bug,Critical,Closed,"2016-09-17 15:50:09","2016-09-17 15:50:09",2
"The Titanium SDK ","Hyperloop - iOS: UIImage.imageNamed returns null ","requesting an image placed in assets/images with       returns null when the expected result is a reference to the image. ",Bug,High,Resolved,"2016-09-15 15:01:09","2016-09-15 15:01:09",2
"The Titanium SDK ","Android: Selecting latest in tiapp.xml for modules, while having both modules with apiversion 2 & 3 & building gives error Found incompatible Titanium Modules ","h5.Steps to reproduce:  1. Make sure you have both modules with {{apiversion}} 2 & 3. ( e.g: I have module ver 2.0.0 & 1.2.7 for hyperloop).  2. In the {{tiapp.xml}} select {{latest}} for any module.  3. Build the app for android device/emulator.    h5.Actual results:  1. You will get error:    2. Basically it does not select the latest even though avaliable or somehow finds module with apiversion 2 & throws an incompatiblity error.    h5.Expected result:  1. If {{latest}} is selected in the tiapp.xml & SDK 6.0.0 is selected it should not matter if I have a module with apiversion 2, it should pickup one with apiversion 3 & build.",Bug,Critical,Closed,"2016-09-15 21:33:17","2016-09-15 21:33:17",5
"The Titanium SDK ","Hyperloop: iOS: Improve the way properties are generated","As per the discussion in TIMOB-23812 and in https://github.com/<USER>hyperloop.next/pull/65  SDK 6.0.0 and Hyperloop 2.0.0 should handle instance properties for UIColor. Ideally, the workaround introduced in the related ticket will be removed and a new API based on properties will be introduced.",Improvement,Critical,Closed,"2016-09-15 18:20:21","2016-09-15 18:20:21",8
"The Titanium SDK ","Ti.Facebook: Generate the iOS 10 keychain-entitlements from the CLI","We had a lot of struggle around Ti.Facebook and iOS 10 / Xcode 8 the last days. Now that everything works (by creating an entitlements file), I thought about how we can make the <USER>easier again.     And I came up with an approach where we hook into the (early) build-<USER>and check for the entitlements file. If it is not there, we generate it from here as we have the required information (app-name, app-identifier). The whole thing could be done with a plugin that is bundled with the module. Eventually we would version the plugin to 1.0.0 to be able to push plugin-updates if there are any in the future.",Improvement,High,Closed,"2016-09-15 09:38:59","2016-09-15 09:38:59",0
"The Titanium SDK ","Xcode 8: Builds with SDK 5.5.0 are missing APS-entitlements for push-notifications","Attached are two screen shots....1. With SDK 5.3 yesterday...2. With SDK 5.5 Today    Notice the IPA is identical except for the missing entitlement ",Bug,Critical,Closed,"2016-09-14 12:36:57","2016-09-14 12:36:57",3
"The Titanium SDK ","Hyperloop: Incomplete Metadata for forward declarations","The class SFSpeechRecognitionResult will be detected but does not include any metadata info about its properties or methods. This is due to the class being forward declared with {{@class}} and then being used as a block argument which is an argument to another method.    SFSpeechRecognizer.h:  {code:objective-c}  - (SFSpeechRecognitionTask *)recognitionTaskWithRequest:(SFSpeechRecognitionRequest *)request resultHandler:(void (^)(SFSpeechRecognitionResult * __nullable result, NSError * __nullable error))resultHandler;  {code}    This probably applies to other Classes that are also referenced like this.",Bug,High,Closed,"2016-09-15 06:45:42","2016-09-15 06:45:42",3
"The Titanium SDK ","Hyperloop: Android - UNEXPECTED TOP-LEVEL EXCEPTION: No such file or directory because relative path includes absolute prefix when jar or aar includes additional jar or aar in libs folder","In my project I include intercom-sdk-base-3.0.8.aar inside of /app/platform/android    Inside the archive is that additional dependency jar at libs/repackaged_dependencies.jar    The generated path to include this jar is incorrect causing the following error to be generated:    [ERROR] Failed to run dexer:  [ERROR]     [ERROR] UNEXPECTED TOP-LEVEL EXCEPTION:  [ERROR] java.io.FileNotFoundException: /Users/<USER>Documents/<USER>Studio_Workspace/Prspctr/build/hyperloop/android/intercom-sdk-base-3.0.8/classes.jar,/Users/<USER>Documents/<USER>Studio_Workspace/Prspctr/build/hyperloop/android/intercom-sdk-base-3.0.8/libs/repackaged_dependencies.jar (No such file or directory)  [ERROR]         at java.util.zip.ZipFile.open(Native Method)  [ERROR]         at java.util.zip.ZipFile.<init>(ZipFile.java:215)  [ERROR]         at java.util.zip.ZipFile.<init>(ZipFile.java:145)  [ERROR]         at java.util.zip.ZipFile.<init>(ZipFile.java:159)  [ERROR]         at com.android.dx.cf.direct.ClassPathOpener.processArchive(ClassPathOpener.java:244)  [ERROR]         at com.android.dx.cf.direct.ClassPathOpener.processOne(ClassPathOpener.java:166)  [ERROR]         at com.android.dx.cf.direct.ClassPathOpener.<USER>ClassPathOpener.java:144)  [ERROR]         at com.android.dx.command.dexer.Main.processOne(Main.java:672)  [ERROR]         at com.android.dx.command.dexer.Main.processAllFiles(Main.java:574)  [ERROR]         at com.android.dx.command.dexer.Main.runMonoDex(Main.java:311)  [ERROR]         at com.android.dx.command.dexer.Main.run(Main.java:277)  [ERROR]         at com.android.dx.command.dexer.Main.main(Main.java:245)  [ERROR]         at com.android.dx.command.Main.main(Main.java:106)  [ERROR] 1 error; aborting       ",Bug,High,Closed,"2016-09-15 03:07:46","2016-09-15 03:07:46",1
"The Titanium SDK ","Android: Update V8 runtime to 5.7.492.71","We should regularly update our Android runtime to track the latest stable V8 release: https://omahaproxy.appspot.com    When we plan to release SDK 7.0.0, we should consider including an update V8/runtime. It will cause breaking native module changes.","New Feature",High,Closed,"2016-09-14 18:17:50","2016-09-14 18:17:50",13
"The Titanium SDK ","Android: App stuck on splash screen when app run second time with analytics to true from tiapp.xml","Scenario is create a new app (alloy or classic no matter) with unchecking enabled cloud and install to Android device. It has launch without problem but when press back and close app then run app again from device it was stuck on splash screen.    Steps to Reproduce :  1. Create a new alloy or classic  apps.   2. Unchecking enabled <USER>services.  3. Run on android device.  4. It will launch without problem.  5. Press back button and close the app.  6. Run app again from device it will stuck on splash screen. (See screenshot).    *Environment*      *Log*        Thanks      ",Bug,Critical,Closed,"2016-09-14 14:39:36","2016-09-14 14:39:36",8
"The Titanium SDK ","ioslib: Tailing simulator log doesn't output initial contents","When running a Titanium app in the simulator where the {{app.js}} writes console log output, it will not be displayed because the {{always-tail}} library isn't properly outputting from the beginning of the log file.    ioslib is passing in a fromBeginning flag that appears to not exist, but a start option does. Despite start defaulting to zero, it doesn't take and it needs to be explicitly set.",Bug,Critical,Closed,"2016-09-13 17:07:27","2016-09-13 17:07:27",2
"The Titanium SDK ","Hyperloop: iOS - Swift metabase parser can't handle open access level keyword","When adding this swift file ([https://github.com/Ramotion/folding-cell]) in the src directory and referencing it in appc.js metabase fails to generate with the following error:      ",Bug,High,Closed,"2016-09-12 14:01:16","2016-09-12 14:01:16",3
"The Titanium SDK ","Android: Mime-type in Ti.Media.openPhotoGallery() is always image/bitmap","Out application depends on the mime type of the images retrieved through the gallery as it applies different operations based on that (like parsing EXIF and so on). This worked well until Titanium SDK 5.1.2.GA, but once we decided to upgrade to 5.4.0.GA we noticed problems with the images. Cause was wrongly set mime type with value (image/bitmap) although the actual content in the BLOB is image/jpeg.  We've done some further analysis and actually found the place in the code where this should be corrected. More precisely, if you look at TiBlob.java#blobFromImage() you will see:      You can notice that although compression (PNG/JPEG) might happen the mime type is hardcoded as image/bitmap which is wrong.  We have changed the code to look like:       and now the correct mime type is set.  In case you are interested, this problem occurred while resolving TIMOB-19910 (https://github.com/<USER>titanium_mobile/commit/2e10d9714b580caf6b9eff1e4436976a8e48cac7)    Please apply this fix in the next SDK release.",Bug,High,Closed,"2016-09-13 13:48:23","2016-09-13 13:48:23",5
"The Titanium SDK ","iOS: Support Ti.Facebook 5.2.5 on Titanium SDK < 5.5.0","Because of the changes in TIMOB-23890, we made major core-changes that required the module to run on Titanium SDK 5.5.0 or later. I can think of a fix to support it on Titanium SDK < 5.5.0 (down to 5.0.0) as well. That fix should be applied.",Bug,High,Closed,"2016-09-13 08:10:06","2016-09-13 08:10:06",2
"The Titanium SDK ","iOS: Add Ti.App.iOS handleurl event to handle incoming URL schemes","We should be able to get notified when a new URL scheme is handled by the application delegate.",Improvement,High,Closed,"2016-09-12 17:02:30","2016-09-12 17:02:30",3
"The Titanium SDK ","Windows: Improve error message when building to wp-device and no devices are connected","h5.Description    When building for Windows an there are no devices connected the build will fail with the below, compared to Android this could be improved            h5.Steps to reproduce    # Make sure you have no devices connected  # Build using {{appc run -p windows -T wp-device}}    h5.Actual result    The error message above is output    h5.Expected result    A more helpful and nicer message should be output",Improvement,None,Resolved,"2016-09-12 15:14:59","2016-09-12 15:14:59",3
"The Titanium SDK ","iOS: -I flag not acknowledged when selecting iOS9 and watchos2.2 using iOS sdk 10.0","  The current situation will cause issues if we do {{appc run -p ios -W 3E12A7A9-2E07-454B-8E18-07AE56E48507 -C A92248F9-1588-4CC7-809A-88DDA16096C9 -I 10.0 --launch-watch-app}} whereby we use iOS 9.3 simulator and watchOS 2.2 simulator built with iOS 10 SDK / Xcode 8, resulting in a swift error.     ",Bug,Critical,Closed,"2016-09-12 06:09:04","2016-09-12 06:09:04",13
"The Titanium SDK ","iOS 10: Support iPhone 7 Haptic Engine API ","iOS 10 exposes new API's for the iPhone 7 for generating feedback when an action happens through a new Haptic Engine API and {{UIFeedbackGenerator}}. This would be great to be exposed for all Ti users.     https://developer.apple.com/ios/human-interface-guidelines/interaction/feedback/    https://www.hackingwithswift.com/example-code/uikit/how-to-generate-haptic-feedback-with-uifeedbackgenerator","New Feature",High,Closed,"2016-09-09 23:48:28","2016-09-09 23:48:28",5
"The Titanium SDK ","iOS10: Facebook Login is not working","Facebook login using the latest FB Modules is not working anymore on devices running iOS 10.    We have catch this behavior on our production published app running the Facebook Module (5.2.0) and Ti SDK 5.3.0.    We have tested this behavior on Ti SDK 5.2.0.GA up to 5.5.0 RC and all present the same behavior.      *Steps to Reproduce*    * Use a button for Facebook login (using the fb.authorize method).  * The button opens the SafariView with the Facebook App Authorization site.  * Tap OK button.  * The SafariView gets a blank page and doesn't get dismissed.  * If you tap the DONE button, the view is dismissed but the is not logged in.      *Expected*  Normal FB login flow where you tap the OK button on the SafariViewController opened by the Facebook module, the SafariViewController gets dismissed, the login event is fired with the user logged in.    *Follows a very simple app using the Facebook Module displaying this issue.*          Please remember to setup the proper Facebook App ID parameters on tiapp.xml on the iOS section together with LSApplicationQueriesSchemes and NSAppTransportSecurity as per Facebook Ti module instructions.      This is critical since iOS 10 final is to be released next week and this completely breaks Facebook login.  ",Bug,Critical,Closed,"2016-09-09 23:42:06","2016-09-09 23:42:06",13
"The Titanium SDK ","iOS 10: UIApplication openURL has been deprecated","iOS 10 deprecates the usual {{[[UIApplication sharedApplication] openURL:@myurl]}} with a new API.     Replacement:    {code:objc}          if ([TiUtils isIOS10OrGreater]) {              [[UIApplication sharedApplication] openURL:newUrl options:@{} completionHandler:nil];          } else {              [[UIApplication sharedApplication] openURL:newUrl];          }  {code}    We need to replace it in certain places, but since it just has been deprecated, nothing will break.",Improvement,Medium,Closed,"2016-09-09 22:53:45","2016-09-09 22:53:45",3
"The Titanium SDK ","iOS: Attributed string link on a TextArea doesn't fire link event","I use non-editable textarea's for multi-line text sections in my app. For setting the value I use attributed strings because some parts are links. Visually the clickable parts look like they are processed correctly because they turn blue and underlined. But when I click on one of the links I expect  the 'link' event to be triggered but all it does is select the word I just clicked, the listener get's nothing.    When replacing textarea with label the link event works fine. Unfortunately labels are not an option for me because they do not handle Ti.UI.ATTRIBUTE_BASELINE_OFFSET, which I use to create a better looking line sacing, very well. Using that attribute on a label makes the it clip the text or unwanted ellipsis. ",Bug,High,Closed,"2016-07-30 11:15:01","2016-07-30 11:15:01",8
"The Titanium SDK ","Android WebView Video stays black sound only","Shows Homepage with videos, video stays black only sound.    var homepage = Titanium.UI.createWebView(              {                  url: 'http://sportclipone.at/',                  borderRadius: 1,                  modal:false,                  enableZoomControls: false,         scalesPageToFit: false,         scrollsToTop: false,         showScrollbars: false              });              if (isAndroid)              {                  homepage.pluginState = Titanium.UI.Android.WEBVIEW_PLUGINS_ON;                                }              else              {                  homepage.borderRadius = 0.9;              }              homepage.width = Ti.UI.FILL;              homepage.height = Ti.UI.FILL;                            var win1 = Titanium.UI.createWindow(              {                  title: 'Homepage',                  backgroundColor: '#ffffff',                  layout: 'vertical'              });                            win1.add(homepage);              win1.open();        [WARN] :   I/TiWebChromeClient.console(30462): (main) [15888,17877] Failed to execute 'play' on 'HTMLMediaElement': API can only be initiated by a user gesture. (16:http://sportclipone.at//plugins/hwdmediashare/player_mejs/assets/mediaelement-and-player.min.js)  [WARN] :   I/TiWebChromeClient.console(30462): (main) [968,18845] Uncaught (in promise) NotAllowedError: play() can only be initiated by a user gesture. (16:http://sportclipone.at//plugins/hwdmediashare/player_mejs/assets/mediaelement-and-player.min.js)  [WARN] :   E/OMX-VDEC-1080P(  189): Extension: OMX.google.android.index.storeMetaDataInBuffers not implemented",Bug,High,Closed,"2016-08-23 14:25:05","2016-08-23 14:25:05",8
"The Titanium SDK ","Android: Emulators created in Android Studio do not work","Android emulators that are created with Android Studio are not being recognized correctly. Because the Android Studio provides pretty fast emulators since a while, we might want to fix this issue.    Steps to reproduce:  1. Create a new emulator through Android Studio (e.g. Nexus 5, API level 23)  2. Check your environment with {{appc ti info}}  3. Note the android warning (also typo in Uknown):    4. Run a new android-project with {{appc run -p android}}    Expected behavior: The CLI finds the Android emulator, starts the app  Actual behavior: An error log is thrown:      I'm not sure if we ever supported the simulators from Android Studio, but I'm pretty sure we did in the past. And since Genymotion is not licensed for free non-private projects anymore, supporting the official one should be a good reason to check this issue. Thanks!    Full log:  ",Bug,High,Closed,"2016-09-09 17:27:43","2016-09-09 17:27:43",0
"The Titanium SDK ","Windows: Allow multiple architectures to be targeted when packaging for Windows 10","h5.Description    When a Windows 10 application in Visual Studio a developer is given the option to select the architectures they wish to package for, with the options of x86, x64 and ARM. The app is then built for all architectures and a universal app bundle is created.    When a developer packages a titanium application for Windows Platform they will only be able to package for one architecture at a time by choosing either {{dist-phonestore}} or {{dist-winstore}}, this means that in order to create a universal app a developer will have to package multiple times each release cycle, and also will not be able to package for x64 architecture.    I propose that we investigate the following possibilities:    * Add a new packaging option, {{dist-universal}}, when packaging for this it will create an appx that includes all architectures.   ** This fits in with the naming scheme of the current options, but is not immediately clear to a user what architectures will be targeted  * Replace the existing {{dist-*}} packaging options with a singular option, and then introduce a flag to allow a user to specify the architectures to be built, either defaulting to all or to prompt the user to select  ** This is a much larger effort that although it provides a better publishing flow the cost probably outweighs the benefit",Improvement,Medium,Closed,"2016-09-09 11:56:00","2016-09-09 11:56:00",13
"The Titanium SDK ","Android: Analytics not enabled when root activity is not launched","Analytics is not enabled when an intent launches a secondary activity if the app is not already running. Analytics is currently enabled by the root activity, launching a secondary activity bypasses analytics.    *STEPS*  1. Use the aps_test.zip alloy application to compile an alloy app.  2. Run the app and click the button, a shortcut on the home screen should appear.  3. Terminate the app from the app manager, make sure the app is not running.  3. Click the shortcut, you should see a grey screen, monitor the logs to see if _APS Service_ starts. (NOTE: This may take 30 seconds to start)    *Expected Result*  - {{APSAnalyticsService: Analytics Service Started}}    *Actual Result*  - APS Service does not start",Bug,Critical,Closed,"2016-09-09 08:30:20","2016-09-09 08:30:20",3
"The Titanium SDK ","Windows: Default classic app template does not show tabs","h5.Description    When building the default app template for Windows platform the tabs are not visible, this is because on Windows the default text colour is white and the background colour is set to white.    h5.Steps to reproduce    # Create a new app with {{appc new --type titanium --classic}}  # Build the app  using {{appc run -p windows -T wp-emulator}}    h5.Actual result    Tab text cannot be seen    h5.Expected result    Tab text should be able to be seen",Bug,None,Closed,"2016-09-08 16:49:59","2016-09-08 16:49:59",5
"The Titanium SDK ","Windows: Unexpected behaviour when rebuilding an app and app is already open on device","h5.Description    When building to a device with a Titanium app that is already open there is some unexpected behaviour. When the     h5.Steps to reproduce    # Build an app using {{appc run -p windows -T wp-device}}  # Once the app has launched, quit the <USER>and *leave the app open on device*  # Make an obvious change in the app, such as changing the background colour or label text  # Rebuild the app {{appc run -p windows -T wp-device}}  # Observe the app    h5.Actual result    While the build <USER>installs the app the app that is on the device will close and then restart, the app will not have changed and will be the same app from step 2    h5.Expected result    This behaviour should not happen",Bug,None,Closed,"2016-09-08 15:33:32","2016-09-08 15:33:32",5
"The Titanium SDK ","Windows: Log more information when building a module","h5.Description    Currently when building a Windows platform module there is very little logged in comparison to other platforms, it would be useful to a user if more information is logged, for example    * Log confirmation of all of the architectures being built rather than just the ones being skipped  * Log the architectures in an easier to understand format, such as {{Building <solution> for Windows 10 ARM}}  * If the timodule specifies a certain SDK version, log information regarding that  * Log the zip location so a user can find the packaged module easily    {code: title=Windows Logging}  --- WindowsModuleBuilder loginfo  [INFO] :   Visual Studio version: 14.0  [INFO] :   MSBuild version: 14.0.25420.1  [INFO] :   Project directory: C:\Users\ewan\Documents\<USER>Studio_Workspace\awesomeomodulewin\windows  [INFO] :   Skipping C:\Users\ewan\Documents\<USER>Studio_Workspace\awesomeomodulewin\windows\WindowsStore.ARM\ComAwesomeoWin.sln  [INFO] :   Creating zip: com.awesomeo.win-windows-1.0.0.zip  [INFO] :   Done.  [INFO] :   Project built successfully in 27s 377ms  ",Improvement,None,Resolved,"2016-09-08 13:15:08","2016-09-08 13:15:08",3
"The Titanium SDK ","Windows: Add Windows element to timodule.xml template","h5.Description    Windows modules now make use of the timodule.xml file, TIMOB-23557, because of this Windows should also be included in the file    h5.Steps to reproduce    # Create a new module using {{appc new -t timodule}}  # Open the timodule.xml file in the module project    h5.Actual result    There is no Windows element in the file    h5.Expected result    Windows uses the timodule.xml so it should be there",Improvement,None,Closed,"2016-09-08 10:27:27","2016-09-08 10:27:27",3
"The Titanium SDK ","Windows: Incorrect __filename value","h5.Description    When using the code below the logged value is set incorrectly to '/sub.js', it should be /'index.js'. In 5.4.0.GA the code returned the value 'index', although this value is different to the expected value, because it no longer refers to the correct file I am labeling this a *regression*    Removing {{require('./sub.js')}} makes the issue disappear so the error is probably caused by that require. This can also be confirmed by doing {{var filename = __filename}} before the require and then setting the filename property to this variable.    {code: title=app.js}    var test = require('./index');  console.log(test.filename);      {code: title=sub.js}  module.exports = {      name: 'sub.js',  };  {code}    h5.Steps to reproduce    h5.Actual result    Logging is '/sub.js'    h5.Expected result    The logging should be '/index.js'",Bug,None,Closed,"2016-09-07 15:34:01","2016-09-07 15:34:01",5
"The Titanium SDK ","Windows: unskip ti.network.httpclient 'POST multipart/form-data containing Ti.Blob' test","h5.Description    https://github.com/<USER>titanium_mobile_windows/blob/7ba8bb29b71cda392e54fa6a0818a588b0ddc62e/Examples/NMocha/src/Assets/ti.network.httpclient.test.js#L376 this test should not be skipped now that TIMOB-23575 is fixed.     This issue caused the test failure as a new Logo.png file was being generated by the CLI rather than the local copy in the directory when building with appc/ti    Reproduced fail case with 5.4.0.GA first and then retested with 6.0.0.v20160906221416 and the test case now passes",Story,None,Closed,"2016-09-07 14:18:54","2016-09-07 14:18:54",1
"The Titanium SDK ","Android: Template for Manifest needs updating","Default template for manifest in Android needs updating.",Bug,Medium,Closed,"2016-09-07 08:48:24","2016-09-07 08:48:24",1
"The Titanium SDK ","Enable android.mergeCustomAndroidManifest by default","When the Android build was rewritten for Node.js, a flaw was purposely ported from the old Python code. For iOS, {{<plist>}} overrides a custom {{Info.plist}} and a custom {{Info.plist}} overrides the default {{Info.plst}}. However with Android, if a custom {{AndroidManifest.xml}} is present, the {{<manifest>}} section of the {{tiapp.xml}} does NOT override the custom {{AndroidManifest.xml}} by default. To enable this behavior, you must set {{ti config android.mergeCustomAndroidManifest true}}.    We should set this flag to {{true}} so that Android's behavior is in parity with iOS.",Improvement,High,Closed,"2016-09-06 22:16:14","2016-09-06 22:16:14",2
"The Titanium SDK ","iOS: Safari/WebInspector Debugger crashes app when hitting breakpoint","When attempting to hit a breakpoint in a callback function (i.e. inside a setInterval function callback, or on a click event callback for a label), the Safari WebInspector debugger crashes the Titanium app.    Note you need to set the <use-jscore-framework> value to try in your tiapp.xml to test.    This uses the provided JSCore engine for Titanium apps. As such, we should be able to use standard iOS tooling to debug the app, like Safari's debugger. However, the way we set up on particular object in the JS world, our code doesn't handle it. Specifically e hang a Kroll object off the global and ave it wrap a single instance of our KrollContext class in Obj-C. But all our code for handling wrapped JS objects assume it _always_ a KrollObject inside. In tis case, it's a KrollContext. So our Kroll*Property functions in KrollObject need to check for and handle this special object.",Bug,Critical,Closed,"2016-09-06 14:39:03","2016-09-06 14:39:03",8
"The Titanium SDK ","Windows:  'The request is not supported' error thrown when using front camera and tapping view to focus","h5.Description    When using the code below, if the view is tapped in an attempt to focus the camera then the following error is thrown {{code:-1,error:The request is not supported.\r\n\r\nThe request is not supported.\r\n,success:false\}}        h5.Steps to reproduce    # Add the above code to your existing app.js  # Tap OPEN CAMERA  # Tap the screen    h5.Actual result    The above error will be thrown    h5.Expected result    No errors should be thrown",Bug,None,Closed,"2016-09-06 14:24:38","2016-09-06 14:24:38",5
"The Titanium SDK ","Windows: Ti.Media.takePicture usage does not include videosLibrary capability","h5.Description    When using the code below and not adding the videosLibrary capability, when the picture is taken the app will crash. If the videosLibrary capability is added then it will work as expected. From testing it appears that the generation of used capabilities by the CLI does not add the videosLibrary capability.        h5.Steps to reproduce    # Add the code above to an existing app.js  # Build for a device  # Click OPEN CAMERA  # Click TAKE PHOTO    h5.Actual result    The app will crash as the videosLibrary is not included    h5.Expected result    App should not crash, correct capabilities should be added",Bug,None,Closed,"2016-09-06 11:17:25","2016-09-06 11:17:25",2
"The Titanium SDK ","SDK 5.4.0.x.x Can't build to device","With SDK *5.4.0.v20160331065118*  I can't build to device, I re-checked my certificates and my iphone connection,  Soon I put back the *5.2.1.GA* the build was succeed!    Usually I *connect and disconnect the cable* and resolve the situation, but in this case did not happen.              *EDITED:*  I have preformed:  ",Bug,Critical,Resolved,"2016-04-01 13:13:33","2016-04-01 13:13:33",1
"The Titanium SDK ","Windows: uap capability included when building for 8.1","h5.Description    When the CLI generates capabilities from API usage if a user is building for {{--wp-sdk 8.1}} which is the default SDK version, then the build will fail with the below        This is because the {{uap:Capability}} is not valid for 8.1 SDK    h5.Steps to reproduce    # Add the following to your app,js {{Titanium.Media.openPhotoGallery(\{mediaTypes: \[Ti.Media.MEDIA_TYPE_PHOTO\]\});}}  # Build using Windows 8.1 SDK {{appc run -p windows -T wp-device --build-only}}    h5,Actual result    The build will error out with the above error    h5.Expected result    Build should not error out, correct capability should be used",Bug,High,Closed,"2016-09-05 13:43:26","2016-09-05 13:43:26",5
"The Titanium SDK ","iOS: iOS 10 sim with WatchOS 2 sim doesn't work","When I try to launch a WatchApp on simulator (iOS 10 phone sim, WatchOS 2 watch sim), I get the below error: There is no issue with the iOS 10 phone sim + WatchOS 3 watch sim  {code}  [ERROR] :  An error was encountered processing the command (domain=com.apple.CoreSimulator.SimError, code=161):  Unable to pair devices  The requested devices do not have OS versions that are compatible with eachother.  {code}      {code:java}  IITEM-AX40113:kk1 <USER> appc run -p ios --launch-watch-app --watch-device-id F3F5BB7A-0BC5-4DB7-B2B7-26283AF0E31E -l trace  <USER>Command-Line Interface, version 5.4.0  Copyright (c) 2014-2016, <USER> Inc.  All Rights Reserved.    2016-09-05T11:41:37.405Z | TRACE  | set environment to {registry:https://software.<USER>com,security:https://security.<USER>com,baseurl:https://platform.<USER>com}  2016-09-05T11:41:37.406Z | TRACE  | checking credentials for existing session  2016-09-05T11:41:37.630Z | TRACE  | Attempting to load session info from config file  2016-09-05T11:41:37.635Z | TRACE  | check if session is invalidated  2016-09-05T11:41:43.454Z | TRACE  | registry result 200 application/json undefined undefined false undefined  2016-09-05T11:41:43.464Z | TRACE  | registry returned { expiry: 1473680494034 }  2016-09-05T11:41:43.464Z | TRACE  | refresh session expiry to:  1473680494034  2016-09-05T11:41:43.466Z | TRACE  | session expiry 1473680494034 false  2016-09-05T11:41:43.466Z | TRACE  | Arrow Cloud config file: /Users/<USER>.acs  2016-09-05T11:41:43.469Z | TRACE  | found Arrow Cloud login { mid: '87d2b0b9eb3b3518fa6c2a16184cf800d60f6bb2',    publishPort: 443,    publishHost: 'https://admin.cloudapp-enterprise.<USER>com',    username: '<EMAIL>',    cookie: [ 'connect.sid=s%3AaSzUY%2FTopg6d1FAaO8EBkts4.h%2F5RHDszVkvwD8p2lCqYoWcr7298DHcRm8lo8mcKbCM; Path=/; Expires=Mon, 19 Sep 2016 06:36:52 GMT; HttpOnly' ],    defaultEP:      { publishHost: 'https://admin.cloudapp-enterprise.<USER>com',       publishPort: 443 } } , checking nodeACSEndpoint= https://admin.cloudapp-enterprise.<USER>com  2016-09-05T11:41:43.469Z | TRACE  | Arrow Cloud cookie expiry [ 1474267012000 ]  2016-09-05T11:41:43.470Z | TRACE  | session already loaded in opts.session  2016-09-05T11:41:43.471Z | TRACE  | getCredentials() session:  {    ipaddress: 10.148.171.21,    username: <EMAIL>,    password: <OMITTED>,    session: <OMITTED>,    nonce: <OMITTED>,    environment: {      name: production,      isProduction: true,      acsBaseUrl: https://api.cloud.<USER>com,      acsAuthBaseUrl: https://secure-identity.cloud.<USER>com,      nodeACSEndpoint: https://admin.cloudapp-enterprise.<USER>com    },    token: <OMITTED>,    fingerprint: 87d2b0b9eb3b3518fa6c2a16184cf800d60f6bb2,    fingerprint_description: Mac OSX Serial Number: C02RR1RMG8WP,    org_id: 100000328,    expiry: 1473680494034  }  2016-09-05T11:41:43.472Z | TRACE  | loading plugins for command run  2016-09-05T11:41:43.525Z | TRACE  | run search paths:  [    /Users/<USER>.<USER>install/5.4.0/package,    /Users/<USER>.<USER>install/5.4.0/package/node_modules,    /Users/<USER>Documents/runtime-Titanium-360/kk1/plugins,    /Users/<USER>Documents/runtime-Titanium-360/kk1/node_modules,    /Users/<USER>Documents/runtime-Titanium-360/node_modules,    /Users/<USER>Documents/node_modules,    /Users/<USER>node_modules,    /Users/node_modules,    /node_modules,    /Users/<USER>.<USER>.npm/lib/node_modules  ]  2016-09-05T11:41:43.526Z | DEBUG  | [PLUGIN-LOAD] 0ms /Users/<USER>.<USER>install/5.4.0/package/appc.js  2016-09-05T11:41:43.844Z | DEBUG  | [PLUGIN-LOAD] 313ms /Users/<USER>.<USER>install/5.4.0/package/node_modules/appc-cli-titanium/appc.js  2016-09-05T11:41:43.845Z | DEBUG  | run plugin: /Users/<USER>.<USER>install/5.4.0/package/node_modules/appc-cli-titanium  2016-09-05T11:41:43.847Z | DEBUG  | [PLUGIN-LOAD] 0ms /Users/<USER>.<USER>install/5.4.0/package/node_modules/arrow/appc.js  2016-09-05T11:41:43.850Z | DEBUG  | run plugin: /Users/<USER>.<USER>install/5.4.0/package/node_modules/arrow  2016-09-05T11:41:43.868Z | TRACE  | plugin arrow failed its when function check, skipping...  2016-09-05T11:41:43.869Z | TRACE  | loading plugin titanium for command run CLI options via function  2016-09-05T11:41:43.870Z | TRACE  | loading plugin titanium for command run CLI options via array  2016-09-05T11:41:43.876Z | TRACE  | executing command run with the following plugins:  [titanium]  2016-09-05T11:41:43.878Z | TRACE  | Attempting to load session info from config file  2016-09-05T11:41:43.878Z | TRACE  | check if session is invalidated  2016-09-05T11:41:47.444Z | TRACE  | registry result 200 application/json undefined undefined false undefined  2016-09-05T11:41:47.444Z | TRACE  | registry returned { expiry: 1473680498266 }  2016-09-05T11:41:47.444Z | TRACE  | refresh session expiry to:  1473680498266  2016-09-05T11:41:47.445Z | TRACE  | session expiry 1473680498266 false  2016-09-05T11:41:47.446Z | TRACE  | session already loaded in opts.session  2016-09-05T11:41:47.448Z | DEBUG  | Titanium Downloads Last Checked: 1473062416786  9/5/2016, 4:41:49 AM    Operating System    Name                        = Mac OS X    Version                     = 10.11.6    Architecture                = 64bit    # CPUs                      = 8    Memory                      = 17179869184    Node.js    Node.js Version             = 6.0.0    npm Version                 = 3.8.6    Titanium CLI    CLI Version                 = 5.0.9    Titanium SDK    SDK Version                 = 5.5.0.v20160904203801    SDK Path                    = /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/5.5.0.v20160904203801    Target Platform             = iphone    Command    /usr/local/bin/node /Users/<USER>.<USER>install/5.4.0/package/node_modules/titanium/lib/titanium.js build run -p ios --launch-watch-app --watch-device-id F3F5BB7A-0BC5-4DB7-B2B7-26283AF0E31E -l trace --config-file /var/folders/54/ygfgj59s2f98jtxjv9qt28fh0000gq/T/build-1473075707446.json --no-banner --project-dir /Users/<USER>Documents/runtime-Titanium-360/kk1    [TRACE] [ioslib] No iOS Simulator UDID specified, searching for best match  [TRACE] [ioslib] Validating Watch Simulator UDID F3F5BB7A-0BC5-4DB7-B2B7-26283AF0E31E  [TRACE] [ioslib] Found Watch Simulator UDID F3F5BB7A-0BC5-4DB7-B2B7-26283AF0E31E  [TRACE] [ioslib] Scanning Xcodes: 8.0:8S201h  [TRACE] [ioslib] Autoselected iOS Simulator: iPhone SE  [TRACE] [ioslib]   UDID    = 5B7DF50A-CB0A-4D01-A565-EC9E276291C3  [TRACE] [ioslib]   iOS     = 10.0  [TRACE] [ioslib] Selected WatchOS Simulator: Apple Watch - 38mm  [TRACE] [ioslib]   UDID    = F3F5BB7A-0BC5-4DB7-B2B7-26283AF0E31E  [TRACE] [ioslib]   WatchOS = 2.0  [TRACE] [ioslib] Autoselected Xcode: 8.0  [DEBUG] Detecting modules in /Users/<USER>Library/Application Support/Titanium/modules  [DEBUG] Detected android module: com.<USER>apm 1.1.5 @ /Users/<USER>Library/Application Support/Titanium/modules/android/com.<USER>apm/1.1.5  [DEBUG] Detected android module: facebook 5.2.0 @ /Users/<USER>Library/Application Support/Titanium/modules/android/facebook/5.2.0  [DEBUG] Detected android module: hyperloop 1.2.6 @ /Users/<USER>Library/Application Support/Titanium/modules/android/hyperloop/1.2.6  [DEBUG] Detected android module: ti.cloudpush 3.4.1 @ /Users/<USER>Library/Application Support/Titanium/modules/android/ti.cloudpush/3.4.1  [DEBUG] Detected android module: ti.map 2.3.10 @ /Users/<USER>Library/Application Support/Titanium/modules/android/ti.map/2.3.10  [DEBUG] Detected android module: ti.touchid 1.0.0 @ /Users/<USER>Library/Application Support/Titanium/modules/android/ti.touchid/1.0.0  [DEBUG] Detected commonjs module: ti.cloud 3.2.11 @ /Users/<USER>Library/Application Support/Titanium/modules/commonjs/ti.cloud/3.2.11  [DEBUG] Detected iphone module: com.<USER>apm 1.1.5 @ /Users/<USER>Library/Application Support/Titanium/modules/iphone/com.<USER>apm/1.1.5  [DEBUG] Detected iphone module: com.<USER>urlSession 2.0.0 @ /Users/<USER>Library/Application Support/Titanium/modules/iphone/com.<USER>urlSession/2.0.0  [DEBUG] Detected iphone module: facebook 5.2.0 @ /Users/<USER>Library/Application Support/Titanium/modules/iphone/facebook/5.2.0  [DEBUG] Detected iphone module: hyperloop 1.2.6 @ /Users/<USER>Library/Application Support/Titanium/modules/iphone/hyperloop/1.2.6  [DEBUG] Detected iphone module: ti.coremotion 2.0.0 @ /Users/<USER>Library/Application Support/Titanium/modules/iphone/ti.coremotion/2.0.0  [DEBUG] Detected iphone module: ti.map 2.7.1 @ /Users/<USER>Library/Application Support/Titanium/modules/iphone/ti.map/2.7.1  [DEBUG] Detected iphone module: ti.safaridialog 1.0.5 @ /Users/<USER>Library/Application Support/Titanium/modules/iphone/ti.safaridialog/1.0.5  [DEBUG] Detected iphone module: ti.touchid 1.2.2 @ /Users/<USER>Library/Application Support/Titanium/modules/iphone/ti.touchid/1.2.2  [DEBUG] Looking for Titanium module id=hyperloop version=latest platform=iphone deploy-type=development  [INFO]  Found Titanium module id=hyperloop version=1.2.6 platform=iphone deploy-type=development path=/Users/<USER>Library/Application Support/Titanium/modules/iphone/hyperloop/1.2.6  [DEBUG] Looking for Titanium module id=com.<USER>apm version=latest platform=iphone deploy-type=development  [INFO]  Found Titanium module id=com.<USER>apm version=1.1.5 platform=iphone deploy-type=development path=/Users/<USER>Library/Application Support/Titanium/modules/iphone/com.<USER>apm/1.1.5  [DEBUG] Looking for Titanium module id=ti.cloud version=latest platform=commonjs deploy-type=development  [INFO]  Found Titanium module id=ti.cloud version=3.2.11 platform=commonjs deploy-type=development path=/Users/<USER>Library/Application Support/Titanium/modules/commonjs/ti.cloud/3.2.11  [DEBUG] Detecting plugins in /Users/<USER>Documents/runtime-Titanium-360/kk1/plugins  [DEBUG] Detected plugin: ti.alloy @ /Users/<USER>Documents/runtime-Titanium-360/kk1/plugins/ti.alloy  [DEBUG] Detecting plugins in /Users/<USER>Library/Application Support/Titanium/plugins  [DEBUG] Detected plugin: com.<USER>test @ /Users/<USER>Library/Application Support/Titanium/plugins/com.<USER>test  [DEBUG] Detected plugin: hyperloop @ /Users/<USER>Library/Application Support/Titanium/plugins/hyperloop  [DEBUG] Looking for Titanium plugin id=ti.alloy version=1.0  [INFO]  Found Titanium plugin id=ti.alloy version=1.0   [DEBUG] Looking for Titanium plugin id=hyperloop version=latest  [INFO]  Found Titanium plugin id=hyperloop version=latest   [TRACE] Snapshotting build directory  [DEBUG] Titanium SDK iOS directory: /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/5.5.0.v20160904203801/iphone  [INFO]  Deploy type: development  [INFO]  Building for target: simulator  [INFO]  Building using iOS SDK: 10.0  [INFO]  Building for iOS Simulator: iPhone SE  [DEBUG] UDID: 5B7DF50A-CB0A-4D01-A565-EC9E276291C3  [DEBUG] Simulator type: iphone  [DEBUG] Simulator version: 10.0  [INFO]  Building for device family: universal  [DEBUG] Setting Xcode target to Debug  [DEBUG] Setting Xcode build OS to iphonesimulator  [DEBUG] Xcode installation: /Applications/Xcode-beta.app/Contents/Developer  [DEBUG] iOS WWDR certificate: installed  [INFO]  Minimum iOS version: 8.0  [INFO]  Debugging disabled  [INFO]  Profiler disabled  [INFO]  Set to copy files instead of symlinking  [INFO]  Initializing the build directory  [INFO]  Found Alloy app in /Users/<USER>Documents/runtime-Titanium-360/kk1/app  [INFO]  Executing Alloy compile: /usr/local/bin/node /Users/<USER>.<USER>install/5.4.0/package/node_modules/alloy/bin/alloy compile /Users/<USER>Documents/runtime-Titanium-360/kk1/app --config platform=ios,version=0,simtype=none,devicefamily=universal,deploytype=development,target=simulator  [DEBUG]        .__  .__                  [DEBUG] _____  |  | |  |   ____ ___.__.  [DEBUG] \__  \ |  | |  |  /  _ <   |  |  [DEBUG]  / __ \|  |_|  |_(  <_> )___  |  [DEBUG] (____  /____/____/\____// ____|  [DEBUG]      \/                 \/  [DEBUG] Alloy 1.9.1 by <USER> The MVC app framework for Titanium.  [DEBUG]     [DEBUG] ----- CONFIGURATION -----  [DEBUG] raw config = platform=ios,version=0,simtype=none,devicefamily=universal,deploytype=development,target=simulator  [DEBUG] platform = ios  [DEBUG] version = 0  [DEBUG] simtype = none  [DEBUG] devicefamily = universal  [DEBUG] deploytype = development  [DEBUG] target = simulator  [DEBUG] project path = /Users/<USER>Documents/runtime-Titanium-360/kk1  [DEBUG] app path = /Users/<USER>Documents/runtime-Titanium-360/kk1/app  [DEBUG]     [WARN]  Generated /i18n directory is not ignored by Git, please add it to your .gitignore  [WARN]  Generated /platform directory is not ignored by Git, please add it to your .gitignore  [DEBUG]     [DEBUG] ----- CONFIG.JSON -----  [DEBUG] dependencies = {}  [INFO]   [config.json] config.json unchanged, using cached config.json...  [DEBUG] {   [DEBUG]   dependencies: {},  [DEBUG]   sourcemap: true,  [DEBUG]   autoStyle: false,  [DEBUG]   adapters: [  [DEBUG]     localStorage,  [DEBUG]     properties,  [DEBUG]     sql  [DEBUG]   ]  [DEBUG] }   [DEBUG]     [DEBUG] ----- CLEANING RESOURCES -----  [DEBUG] Removing orphaned controllers ...  [DEBUG] Removing orphaned models ...  [DEBUG] Removing orphaned styles ...  [DEBUG] Removing orphaned sync adapters...  [DEBUG] Removing orphaned assets and libs...  [DEBUG]     [DEBUG] ----- BASE RUNTIME FILES -----  [TRACE] SRC_DIR=/Users/<USER>.<USER>install/5.4.0/package/node_modules/alloy/Alloy/lib  [TRACE] Copying SRC_DIR/alloy/sync/sql.js --> Resources/iphone/alloy/sync/sql.js  [TRACE] Copying SRC_DIR/alloy/sync/properties.js --> Resources/iphone/alloy/sync/properties.js  [TRACE] Copying SRC_DIR/alloy/sync/localStorage.js --> Resources/iphone/alloy/sync/localStorage.js  [TRACE] Copying SRC_DIR/alloy/controllers/BaseController.js --> Resources/iphone/alloy/controllers/BaseController.js  [TRACE] Copying SRC_DIR/alloy/widget.js --> Resources/iphone/alloy/widget.js  [TRACE] Copying SRC_DIR/alloy/underscore.js --> Resources/iphone/alloy/underscore.js  [TRACE]     [TRACE] Generating ../Resources/iphone/alloy.js  [TRACE] SRC_DIR=/Users/<USER>.<USER>install/5.4.0/package/node_modules/alloy/Alloy/common  [TRACE] Copying SRC_DIR/constants.js --> Resources/iphone/alloy/constants.js  [TRACE]     [TRACE] SRC_DIR=/Users/<USER>Documents/runtime-Titanium-360/kk1/app/assets  [TRACE]     [DEBUG] Resetting /Users/<USER>Documents/runtime-Titanium-360/kk1/platform/ios  [DEBUG]     [DEBUG] Resetting /Users/<USER>Documents/runtime-Titanium-360/kk1/i18n  [DEBUG]     [INFO]  ----- MVC GENERATION -----  [INFO]  [global style] loading from cache...  [INFO]  [index.xml] view processing...  [INFO]    style:      index.tss  [INFO]    view:       index.xml  [INFO]    controller: index.js  [TRACE] - Processing builtins module...  [TRACE] - Processing optimizer module...  [TRACE] - Processing compress module...  [INFO]    created:    Resources/iphone/alloy/controllers/index.js  [DEBUG]   map:        build/map/Resources/iphone/alloy/controllers/index.js.map  [INFO]    created:     Resources/iphone/alloy/styles/index.js  [INFO]     [INFO]  [app.js] using cached app.js...  [INFO]     [INFO]  ----- OPTIMIZING -----  [INFO]  - iphone/alloy.js  [TRACE]   processing builtins module...  [TRACE]   processing optimizer module...  [TRACE]   processing compress module...  [INFO]  - iphone/alloy/sync/localStorage.js  [TRACE]   processing builtins module...  [TRACE]   processing optimizer module...  [TRACE]   processing compress module...  [INFO]  - iphone/alloy/sync/properties.js  [TRACE]   processing builtins module...  [TRACE]   processing optimizer module...  [TRACE]   processing compress module...  [INFO]  - iphone/alloy/sync/sql.js  [TRACE]   processing builtins module...  [TRACE]   processing optimizer module...  [TRACE]   processing compress module...  [TRACE]     [TRACE] Benchmarking  [TRACE] ------------  [TRACE] [0.52595s] TOTAL  [INFO]     [INFO]  Alloy compiled in 0.52595s  [INFO]  Alloy compiler completed successfully  [INFO]  Hyperloop compiler works best with the built-in iOS JavaScript library.  [INFO]  Add the following to your tiapp.xml <ios> section to enable or disable this:  [INFO]     [INFO]          <use-jscore-framework>true</use-jscore-framework>  [INFO]     [INFO]  Using Titanium JavaScriptCore by default when not specified.  [DEBUG] Using Hyperloop library -> libhyperloop-ticore.a  [DEBUG] [Hyperloop] No CocoaPods file found  [TRACE] offline build file /var/folders/54/ygfgj59s2f98jtxjv9qt28fh0000gq/T/build-7da7d9faefbda7c19f425e2a3425b692187bf0be.json  [TRACE] online 1  [TRACE] optimizing build, last build was 11790.949 sec ago  [INFO]  Creating Xcode project  [TRACE] Removing pre-compile phase  [TRACE] Adding 2 native module libraries  [TRACE] Adding 1 iOS extension  [WARN]  WatchKit App detected, changing minimum iOS deployment target from 8.0 to 9.0  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/kk1.xcodeproj/project.pbxproj  [INFO]  Creating Entitlements.plist  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/kk1.entitlements  [INFO]  Creating Info.plist  [DEBUG] Checking for Splash Screen localization  [INFO]  Disabling ATS  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Info.plist  [INFO]  Creating main.m  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/main.m  [INFO]  Creating Xcode config files  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/project.xcconfig  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/module.xcconfig  [INFO]  Copying Titanium libraries  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/lib/libTiCore.a  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/lib/libtiverify.a  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/lib/libti_ios_debugger.a  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/lib/libti_ios_profiler.a  [INFO]  Copying Titanium iOS files  [TRACE] Skipping Classes/ApplicationRouting.m, it'll be processed later  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/kk1_Prefix.pch  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/kk1.xcodeproj/xcshareddata/xcschemes/kk1.xcscheme  [INFO]  Installing default LaunchScreen.storyboard  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/LaunchScreen.storyboard  [INFO]  Copying iOS extensions  [DEBUG] Copying watch3test  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/Contents.json => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/Contents.json  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit App/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit App/Base.lproj/Interface.storyboard => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit App/Base.lproj/Interface.storyboard  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit App/Info.plist  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit Extension/Assets.xcassets/README__ignoredByTemplate__ => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit Extension/Assets.xcassets/README__ignoredByTemplate__  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit Extension/ExtensionDelegate.swift => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit Extension/ExtensionDelegate.swift  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit Extension/Info.plist => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit Extension/Info.plist  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit Extension/InterfaceController.swift => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit Extension/InterfaceController.swift  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit Extension/NotificationController.swift => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit Extension/NotificationController.swift  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/extensions/watch3test/watch3test WatchKit Extension/PushNotificationPayload.apns => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/extensions/watch3test/watch3test WatchKit Extension/PushNotificationPayload.apns  [INFO]  Creating debugger and profiler plists  [DEBUG] Skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/debugger.plist  [DEBUG] Skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/profiler.plist  [INFO]  Analyzing Resources directory  [INFO]  Analyzing platform files  [INFO]  Analyzing module files  [INFO]  Analyzing localized launch images  [INFO]  Analyzing CommonJS modules  [INFO]  Creating asset catalog  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/Contents.json  [INFO]  Creating app icon set  [TRACE] Found generated 29x29 app icon: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/AppIcon.appiconset/appicon-Small.png  [TRACE] Found generated 58x58 app icon: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [TRACE] Found generated 87x87 app icon: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [TRACE] Found generated 40x40 app icon: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/AppIcon.appiconset/appicon-Small-40.png  [TRACE] Found generated 80x80 app icon: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [TRACE] Found generated 120x120 app icon: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [TRACE] Found generated 120x120 app icon: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [TRACE] Found generated 180x180 app icon: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [TRACE] Found generated 76x76 app icon: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/AppIcon.appiconset/appicon-76.png  [TRACE] Found generated 152x152 app icon: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [TRACE] Found generated 167x167 app icon: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/AppIcon.appiconset/<EMAIL>  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/AppIcon.appiconset/Contents.json  [INFO]  Creating launch logo image set  [TRACE] Found generated 320x320 launch logo: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchLogo.imageset/LaunchLogo~iphone.png  [TRACE] Found generated 374x374 launch logo: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchLogo.imageset/LaunchLogo@2x~iphone.png  [TRACE] Found generated 621x621 launch logo: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchLogo.imageset/LaunchLogo@3x~iphone.png  [TRACE] Found generated 384x384 launch logo: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchLogo.imageset/LaunchLogo~ipad.png  [TRACE] Found generated 1024x1024 launch logo: /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchLogo.imageset/LaunchLogo@2x~ipad.png  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchLogo.imageset/Contents.json  [INFO]  Creating launch image set  [DEBUG] Unsupported launch image Resources/iphone/Default.png, skipping  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/Contents.json  [INFO]  Creating assets image set  [DEBUG] Copying resources  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/platform/ios/alloy_generated => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/alloy_generated  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/<EMAIL>  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/<EMAIL>  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/<EMAIL>  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/Default-Landscape.png  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/Default-Landscape.png => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/Default-Landscape.png  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/<EMAIL>  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/<EMAIL>  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/Default-Portrait.png  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/Default-Portrait.png => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/Default-Portrait.png  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/<EMAIL>  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/<EMAIL>  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/<EMAIL> => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Assets.xcassets/LaunchImage.launchimage/<EMAIL>  [DEBUG] Copying CSS files  [INFO]  Processing JavaScript files  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/alloy/CFG.js => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/CFG.js  [DEBUG] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/CFG.js  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/app.js => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/app.js  [DEBUG] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/app.js  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/alloy/backbone.js => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/backbone.js  [DEBUG] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/backbone.js  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/alloy/constants.js => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/constants.js  [DEBUG] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/constants.js  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/alloy/controllers/BaseController.js => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/controllers/BaseController.js  [DEBUG] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/controllers/BaseController.js  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/alloy/controllers/index.js => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/controllers/index.js  [DEBUG] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/controllers/index.js  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/alloy/styles/index.js => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/styles/index.js  [DEBUG] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/styles/index.js  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/alloy/sync/localStorage.js => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/sync/localStorage.js  [DEBUG] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/sync/localStorage.js  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/alloy/sync/properties.js => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/sync/properties.js  [DEBUG] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/sync/properties.js  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/alloy/sync/sql.js => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/sync/sql.js  [DEBUG] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/sync/sql.js  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/alloy/underscore.js => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/underscore.js  [DEBUG] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/underscore.js  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/alloy/widget.js => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/widget.js  [DEBUG] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy/widget.js  [DEBUG] Overwriting /Users/<USER>Documents/runtime-Titanium-360/kk1/Resources/iphone/alloy.js => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy.js  [DEBUG] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/alloy.js  [DEBUG] Overwriting /Users/<USER>Library/Application Support/Titanium/modules/commonjs/ti.cloud/3.2.11/ti.cloud.js => /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/ti.cloud.js  [DEBUG] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/ti.cloud.js  [INFO]  Writing app properties  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/_app_props_.json  [DEBUG] Using default application routing  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Classes/ApplicationRouting.m  [INFO]  Writing i18n files  [DEBUG] Compiling localization files  [DEBUG] No i18n files to <USER> [INFO]  Processing Titanium symbols  [DEBUG] Processing Titanium namespace resources  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/modules/ui/images/badge.png  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/modules/ui/images/closeButton.png  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/build/Products/Debug-iphonesimulator/kk1.app/modules/ui/images/photoDefault.png  [TRACE] No change, skipping /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/Classes/defines.h  [INFO]  Removing files  [DEBUG] Removing /Users/<USER>Documents/runtime-Titanium-360/kk1/build/iphone/metabase-mappings-iphonesimulator-8.0.json  [DEBUG] Removing empty directories  [INFO]  Starting Hyperloop assembly  [INFO]  Skipping Hyperloop compile, no usage found ...  [TRACE] Symbol references up-to-date  [DEBUG] Skipping stub generation  [INFO]  Finished Hyperloop assembly in 0.01 seconds  [INFO]  Skipping xcodebuild  [INFO]  Finished building the application in 6s 862ms  [INFO]  Launching iOS Simulator  [TRACE] [ioslib] Found watchOS 3.0 app: com.appc.watchkitapp  [TRACE] [ioslib] Selected iOS Simulator: iPhone SE  [TRACE] [ioslib]   UDID    = 5B7DF50A-CB0A-4D01-A565-EC9E276291C3  [TRACE] [ioslib]   iOS     = 10.0  [TRACE] [ioslib] Selected WatchOS Simulator: Apple Watch - 38mm  [TRACE] [ioslib]   UDID    = F3F5BB7A-0BC5-4DB7-B2B7-26283AF0E31E  [TRACE] [ioslib]   WatchOS = 2.0  [TRACE] [ioslib] Autoselected Xcode: 8.0  [TRACE] [ioslib] Running: /Applications/Xcode-beta.app/Contents/Developer/usr/bin/simctl list pairs --json  [TRACE] [ioslib] Pairing iOS and watchOS simulator pair: F3F5BB7A-0BC5-4DB7-B2B7-26283AF0E31E -> 5B7DF50A-CB0A-4D01-A565-EC9E276291C3  [TRACE] [ioslib] Running: /Applications/Xcode-beta.app/Contents/Developer/usr/bin/simctl pair F3F5BB7A-0BC5-4DB7-B2B7-26283AF0E31E 5B7DF50A-CB0A-4D01-A565-EC9E276291C3  [ERROR] An error was encountered processing the command (domain=com.apple.CoreSimulator.SimError, code=161):  Unable to pair devices  The requested devices do not have OS versions that are compatible with eachother.       {code}  ",Bug,High,Closed,"2016-09-05 11:25:07","2016-09-05 11:25:07",5
"The Titanium SDK ","CLI: Build process does not exit if using an incompatible module based on apiversion","h5.Description    When building using a 6.0.0 SDK and an old module that is incompatible with this SDK i.e the apiversion of the module is 2 the build <USER>will not error out on the module check and the app will build and attempt to launch on device, but will not open.    *Notes*    The inverse of the situation does not happen as the CLI only enforces the minsdk value from the manifest and not the apiversion    h5.Steps to reproduce   *These steps assume you have the same versions on your machine, correct as needed*  # Edit the tiapp.xml modules section to include the following {{<module platform=android version=2.3.10>ti.map</module>}}  # Include ti.map in your project by adding {{var map = require('ti.map')}}  # Ensure you are building with a 6.0.0 SDK  # Build the project using {{appc run -p android -T device}}    h5.Actual result    The project will build successfully, the app will attempt to launch on device but fail    h5.Expected result    As the module is incompatible with 6.0.0, the build <USER>should fail",Bug,Critical,Closed,"2016-09-05 10:02:09","2016-09-05 10:02:09",3
"The Titanium SDK ","Android: Update Google Play services used by cloudpush module","The current {{google-play-services-base.jar}} used by [cloudpush|https://github.com/<USER>modules/cloudpush/tree/master/android/lib] is outdated and causes apps to be rejected when submitted to the play store.",Improvement,Critical,Closed,"2016-09-03 12:06:43","2016-09-03 12:06:43",3
"The Titanium SDK ","App created with 6.0.0 SDK & with hyperloop references fails to build with 5.5.0 SDK with error You cannot use the Hyperloop compiler with a version of Titanium older than 6.0.0","h5.Steps to reproduce:  1. Create a default app with hyperloop enabled using SDK 6.0.0. (App will get created with hyperloop module 2.0.0).  2. Now, change the SDK to 5.5.0 in the tiapp.xml, the hyperloop module to 1.2.6 & aca to 1.0.0.  3. Make sure you have references for hyperloop in the app.js e.g {{var View = require('android.view.View');}}  4. Build the app for android device/emulator.    h5.Actual Result:  1. The app fails to build with error:      2. My modules in tiapp.xml:      h5.Expected Results:  1. The app should build fine with 5.5.0 SDK & hyperloop 1.2.6, even if the app is created using SDK 6.0.0. ",Bug,Critical,Closed,"2016-09-02 01:01:26","2016-09-02 01:01:26",8
"The Titanium SDK ","iOS: getItems() on cleared Pasteboard errors and crashes","The getItems() method is throwing an error after data has been cleared or items in the Pasteboard are invalid:  {code}  [ERROR] :  2016-09-01 06:35:19.000 PasteboardCheck[12358:22821338] -[_NSZeroData boundBridge:withKrollObject:]: unrecognized selector sent to instance 0x79e63d80  [ERROR] :  Script Error {  [ERROR] :      column = 39;  [ERROR] :      line = 58;  [ERROR] :      message = -[_NSZeroData boundBridge:withKrollObject:]: unrecognized selector sent to instance 0x79e63d80;  [ERROR] :      stack = [native code]\n;  [ERROR] :  }  {code}    *Steps to reproduce issue*  1. Create a new project  2. Add the below lines to the code, preferably on a button press:  {code:javascript}  Ti.UI.Clipboard.clearData();  alert(Ti.UI.Clipboard.getItems());  {code}  3. Run the project and press the button or call the methods    *Expected results*  {{getItems()}} returns an empty array, without error    *Actual results*  The above error is thrown    *Notes*  This is stated in the docs for setItems(), but is there a way we can handle it better? Perhaps checking numberOfItems and using that to make sure the Pasteboard is not empty first?  Although a runtime error is thrown, you can see an empty array returned from getItems() if you dismiss the error and call it again. However, If you clear the data with clearData() and then call getItems() too many times (sometimes 2), then the app will crash with the below error:  {code}  [ERROR] :  The application has crashed with an uncaught exception 'NSInvalidArgumentException'.  [ERROR] :  Reason:  [ERROR] :  -[_NSZeroData unboundBridge:]: unrecognized selector sent to instance 0x79191700  [ERROR] :  Stack trace:  [ERROR] :    [ERROR] :  0   CoreFoundation                      0x06f851f0 __exceptionPreprocess + 160  [ERROR] :  1   libobjc.A.dylib                     0x065fae66 objc_exception_throw + 52  [ERROR] :  2   CoreFoundation                      0x06ffe3dc -[NSObject(NSObject) doesNotRecognizeSelector:] + 172  [ERROR] :  3   CoreFoundation                      0x06f0434c ___forwarding___ + 1052  [ERROR] :  4   CoreFoundation                      0x06f03f0e _CF_forwarding_prep_0 + 14  [ERROR] :  5   PasteboardCheck                     0x00061d6e -[KrollBridge unregisterProxy:] + 158  [ERROR] :  6   PasteboardCheck                     0x00070839 KrollFinalizer + 489  [ERROR] :  7   PasteboardCheck                     0x0042c42c _ZN2TI20JSCallbackObjectData8finalizeENS_6HandleINS_7UnknownEEEPv + 108  [ERROR] :  8   PasteboardCheck                     0x005fb4ae _ZN2TI9WeakBlock5sweepEv + 110  [ERROR] :  9   PasteboardCheck                     0x005fd358 _ZN2TI7WeakSet5sweepEv + 40  [ERROR] :  10  PasteboardCheck                     0x004eedbc _ZN2TI11MarkedBlock5sweepENS0_9SweepModeE + 28  [ERROR] :  11  PasteboardCheck                     0x003c08fa _ZN2TI18IncrementalSweeper7doSweepEd + 154  [ERROR] :  12  PasteboardCheck                     0x003c084b _ZN2TI18IncrementalSweeper6doWorkEv + 27  [ERROR] :  13  PasteboardCheck                     0x003bf566 _ZN2TI9HeapTimer12timerDidFireEP16__CFRunLoopTimerPv + 166  [ERROR] :  14  CoreFoundation                      0x06f115d6 __CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ + 22  [ERROR] :  15  CoreFoundation                      0x06f110ed __CFRunLoopDoTimer + 1213  [ERROR] :  16  CoreFoundation                      0x06f10bff __CFRunLoopDoTimers + 255  [ERROR] :  17  CoreFoundation                      0x06f086c0 __CFRunLoopRun + 2208  [ERROR] :  18  CoreFoundation                      0x06f07bab CFRunLoopRunSpecific + 395  [ERROR] :  19  CoreFoundation                      0x06f07a0b CFRunLoopRunInMode + 123  [ERROR] :  20  GraphicsServices                    0x08241b4c GSEventRunModal + 177  [ERROR] :  21  GraphicsServices                    0x082419c7 GSEventRun + 80  [ERROR] :  22  UIKit                               0x025480eb UIApplicationMain + 148  [ERROR] :  23  PasteboardCheck                     0x000462e8 main + 408  [ERROR] :  24  libdyld.dylib                       0x07d96799 start + 1  [ERROR] :  25  ???                                 0x00000001 0x0 + 1  [ERROR] :    [ERROR] :  2016-09-01 06:37:27.651 PasteboardCheck[12715:22825481] *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[_NSZeroData unboundBridge:]: unrecognized selector sent to instance 0x79191700'  [ERROR] :  *** First throw call stack:  [ERROR] :  (  [ERROR] :   0   CoreFoundation                      0x06f85212 __exceptionPreprocess + 194  [ERROR] :   1   libobjc.A.dylib                     0x065fae66 objc_exception_throw + 52  [ERROR] :   2   CoreFoundation                      0x06ffe3dc -[NSObject(NSObject) doesNotRecognizeSelector:] + 172  [ERROR] :   3   CoreFoundation                      0x06f0434c ___forwarding___ + 1052  [ERROR] :   4   CoreFoundation                      0x06f03f0e _CF_forwarding_prep_0 + 14  [ERROR] :   5   PasteboardCheck                     0x00061d6e -[KrollBridge unregisterProxy:] + 158  [ERROR] :   6   PasteboardCheck                     0x00070839 KrollFinalizer + 489  [ERROR] :   7   PasteboardCheck                     0x0042c42c _ZN2TI20JSCallbackObjectData8finalizeENS_6HandleINS_7UnknownEEEPv + 108  [ERROR] :   8   PasteboardCheck                     0x005fb4ae _ZN2TI9WeakBlock5sweepEv + 110  [ERROR] :   9   PasteboardCheck                     0x005fd358 _ZN2TI7WeakSet5sweepEv + 40  [ERROR] :   10  PasteboardCheck                     0x004eedbc _ZN2TI11MarkedBlock5sweepENS0_9SweepModeE + 28  [ERROR] :   11  PasteboardCheck                     0x003c08fa _ZN2TI18IncrementalSweeper7doSweepEd + 154  [ERROR] :   12  PasteboardCheck                     0x003c084b _ZN2TI18IncrementalSweeper6doWorkEv + 27  [ERROR] :   13  PasteboardCheck                     0x003bf566 _ZN2TI9HeapTimer12timerDidFireEP16__CFRunLoopTimerPv + 166  [ERROR] :   14  CoreFoundation                      0x06f115d6 __CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ + 22  [ERROR] :   15  CoreFoundation                      0x06f110ed __CFRunLoopDoTimer + 1213  [ERROR] :   16  CoreFoundation                      0x06f10bff __CFRunLoopDoTimers + 255  [ERROR] :   17  CoreFoundation                      0x06f086c0 __CFRunLoopRun + 2208  [ERROR] :   18  CoreFoundation                      0x06f07bab CFRunLoopRunSpecific + 395  [ERROR] :   19  CoreFoundation                      0x06f07a0b CFRunLoopRunInMode + 123  [ERROR] :   20  GraphicsServices                    0x08241b4c GSEventRunModal + 177  [ERROR] :   21  GraphicsServices                    0x082419c7 GSEventRun + 80  [ERROR] :   22  UIKit                               0x025480eb UIApplicationMain + 148  [ERROR] :   23  PasteboardCheck                     0x000462e8 main + 408  [ERROR] :   24  libdyld.dylib                       0x07d96799 start + 1  [ERROR] :   25  ???                                 0x00000001 0x0 + 1  [ERROR] :  )  [ERROR] :  libc++abi.dylib: terminating with uncaught exception of type NSException  [TRACE] :  [PasteboardCheck] -[_NSZeroData unboundBridge:]: unrecognized selector sent to instance 0x79191700  [TRACE] :  [PasteboardCheck] *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[_NSZeroData unboundBridge:]: unrecognized selector sent to instance 0x79191700'  {code}",Bug,High,Closed,"2016-09-01 21:16:03","2016-09-01 21:16:03",5
"The Titanium SDK ","iOS: Unable to package project. Provisioning Profile doesn't include signing cert","I am unable to package (adhoc or App Store build) my projects. I get the below error:      *Steps to reproduce issue*  1. Create a new project  2. Build that project for Adhoc or the App Store    *Expected Results*  The project is packaged without error    *Actual Results*  The above error is encountered    *Notes*  The signing certificate that the error says is not included in the profile is the development certificate, not the distribution certificate that I selected on build.    Xcode 7.3.1 is able to package without issue on the current 5.5.0 stack",Bug,Critical,Closed,"2016-08-31 22:09:08","2016-08-31 22:09:08",2
"The Titanium SDK ","Windows: terrible performance of listview","Creating and adding 50 simple rows to section takes a lot of time.       *index.xml:*          *index.js:*    ",Bug,Medium,Closed,"2016-08-01 09:25:25","2016-08-01 09:25:25",5
"The Titanium SDK ","VideoQuality - User is not able to set camera property to QUALITY_HIGH ","1. property is set only if value is not equal to 0.  file : MediaModule.m  ...   if (videoQuality != 0.0)  {       [picker setVideoQuality:videoQuality];  }  2. Default value is 1 (https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIImagePickerController_Class/#//apple_ref/c/tdef/UIImagePickerControllerQualityType)    3. So user is never able to set value to 0 and reach out the HIGH quality.    Please take a look on attached image.         ",Bug,Critical,Closed,"2016-08-31 12:39:10","2016-08-31 12:39:10",2
"The Titanium SDK ","Hyperloop module not supported by Titanium 5.4.0.GA","To Reproduce:  1- Started a new Alloy Project  2- Enabled Platform Services  3- Added in tiapp.xml <plugins>:  <plugin>hyperloop</plugin>  4- Added in <modules>:       <module platform=android>hyperloop</module>       <module platform=iphone>hyperloop</module>  5- Go to tiapp.xml overview & I see this alert message: “The Hyperloop module is not supported...",Bug,Critical,Closed,"2016-08-30 15:51:36","2016-08-30 15:51:36",1
"The Titanium SDK ","iOS10: Support new TabGroup API's","iOS 10 has the new {{UITab}} API {{badgeColor}} and the new {{UITabBar}} API {{unselectedItemTintColor}}. We should expose both.","New Feature",Medium,Closed,"2016-08-29 22:18:25","2016-08-29 22:18:25",3
"The Titanium SDK ","iOS10: Support UITableView data-source prefetching","iOS 10 offers a new way to prefetch items before they are visible in the actual visible area. This allows the developer to be notified when items are fetched so he/she can react on that beforehand (e.g. for preloading images already).    {quote}  The indexPaths are ordered ascending by geometric distance from the table view  {quote}    Along with that, the user can also be notified when items that previously qualified for prefetching were not actually displayed. For both cases, we can expose them using the events {{prefetch}} and {{cancelprefetch}}.","New Feature",Medium,Closed,"2016-08-29 21:24:28","2016-08-29 21:24:28",3
"The Titanium SDK ","Windows: Optimize windowslib usage","Optimize the usage of {{windowslib}} in order to save on deployment time (build and run) by reducing device detection calls. This can be accomplished by caching the results and removing unnecessary calls.",Story,None,Closed,"2016-08-27 03:41:58","2016-08-27 03:41:58",8
"The Titanium SDK ","Windows: Generate capabilities even when they are defined in tiapp.xml","h5.Description    In TIMOB-23156 the auto-generation of capabilities based on API usage. Currently, if a user uses an API that needs a capability but is not included in the API capability list in the SDK then they will have to add the capability to the tiapp.xml and then figure out all other capabilities they need, an example of this is TIMOB-23832.    To make the development workflow easier we should always generate the capability list even when the tiapp.xml already contains.",Improvement,None,Closed,"2016-08-26 18:52:31","2016-08-26 18:52:31",5
"The Titanium SDK ","Windows: Proximity sensor not included in auto-generated capabilties","h5.Description    When using the proximity sensor APIs introduced in TIMOB-19926, I would expect the corresponding capability (Proximity) to be added to the appxmanifest but it is not. It appears that it is not in the list    h5.Steps to reproduce    # Add {{Ti.App.setProximityDetection(true);}} to your app.js and make sure you have no capabilities specified in your tiapp.xml  # Build using {{appc run -p windows -T wp-emulator}}  # Check <project_dir>\build\windows\win10.x86\package.appxmanifest    h5.Actual result    Proximity capability is not set    h5.Expected result    Proximity capability should be set",Bug,None,Closed,"2016-08-26 17:30:48","2016-08-26 17:30:48",3
"The Titanium SDK ","Windows Phone : Internationalizing the app's name","Hi,    I would like my application name to change on changing the locale.    I followed your documentation at http://docs.<USER>com/platform/latest/#!/guide/Internationalization and added app.xml in app/i18n/ folder for both English and Spanish. But the application name would not change on changing the locale of the Windows 10 640 Lumia .    ",Bug,Critical,Closed,"2016-08-24 13:48:43","2016-08-24 13:48:43",3
"The Titanium SDK ","Android: Unable to build native module with name that starts with number","Can't build a module for Android with a name of 123abc. You can create it just fine. It builds just fine for iOS, however on Android, the name is used to declare the Java class for the module and class names in Java can't start with a number.",Bug,High,Open,"2016-08-26 05:07:15","2016-08-26 05:07:15",5
"The Titanium SDK ","iOS10: Support new CSSearchQuery APIs","In https://developer.apple.com/reference/corespotlight/cssearchquery, iOS 10 offers new API's for the CoreSpotlight framework. In detail, these are new attributes for the CSSearchQuery to query an attribute set by it's attribute name.     Proposed API:  ","New Feature",High,Closed,"2016-08-25 21:31:00","2016-08-25 21:31:00",5
"The Titanium SDK ","Android: Build fails using build tools higher than 24.0 and Java 1.7","h5.Description    When building with Android SDK Build-tools > 24.0 and Java < 1.8 the dexer step in the build <USER>bombs out with the below, these build tools seem to require 1.8 [link|http://stackoverflow.com/questions/39116095/android-studio-buildtools-24-0-1-requires-java-1-8-or-above]        *WORKAROUND*    Install Java 1.8    h5.Steps to reproduce    # Install Android SDK Build-tools > 24.0 and a Java version < 1.7  # Build for Android    h5.Actual result    Build will fail with the error above    h5.Expected result    Some help for the user in clarifying what's wrong",Bug,Critical,Closed,"2016-08-25 18:42:52","2016-08-25 18:42:52",1
"The Titanium SDK ","iOS: Using animationStyle will cause the app to crash","  *Expected Result:*  * App boots with a transition animation flip from left.    *Actual Result*  * App will crash",Bug,High,Closed,"2016-08-24 23:20:05","2016-08-24 23:20:05",3
"The Titanium SDK ","iOS: Error when device is disconnected while running a build","There is a bug in node-ios-device that occurs when you build an iOS app for device, then launch it. After the log output has been displayed, disconnect the device and the iOS build will detect the disconnection and shutdown the log relaying, however the new {{node-ios-device}} changes will now throw an error when trying to turn off syslog relaying for a device that isn't connected.        NOTE: the device was disconnected after the Application booted... line.",Bug,High,Closed,"2016-08-24 22:55:56","2016-08-24 22:55:56",5
"The Titanium SDK ","ioslib: Use simctl to get list of all simulators","It's possible for an iOS or WatchOS Simulator to be deleted, but the device directory to remain. The current ioslib only detects simulators by walking the filesystem. This leads to an inconsistent state.    Instead, we should just eat the cost of subprocessing simctl. I think we're still going to have to read each device's plist file to get additional info.",Story,None,Closed,"2016-08-24 21:19:34","2016-08-24 21:19:34",1
"The Titanium SDK ","Liveview: on classic apps Hyperloop requires in app.js does not trigger metabase generation","Hyperloop system frameworks requires in *app.js* does not trigger hyperloop metabase generation. This is because liveview replaces and renames the original app.js to execute liveview.js module wrapper.    *Steps to Reproduce*  1. Create a _classic_ mobile project with Hyperloop enabled  2. Modify _app.js_ to reference Hyperloop, i.e var UIView = require('UIKit/UIView');  3. Enable Liveview  4. Build the project for device or sim  5. Launch the app if building for device    *Actual Results*  The app freezes on the splash screen, and error on output      *Expected Results*  The project is able to run without error.",Bug,High,Closed,"2016-08-24 20:26:49","2016-08-24 20:26:49",5
"The Titanium SDK ","Hyperloop: Command to trigger metabase generation","Run a Hyperloop enable project with Liveview, modify project file with new Hyperloop requires will trigger a Liveview reload. If the required reference hasn't been generated on the first build, Liveview will spit out error,  i.e {{Couldn't find module: UIKit/UITableView for architecture: x86_64}}.    Liveview needs a way to trigger hyperloop metabase regeneration.     *Step to Reproduce*  1. Create a project with Hyperloop enabled, add {{var UIView = require('UIKit/UIView');}}  2. Enable Liveview, run the project  3. Modify the code to reference Hyperloop, add {{var UITableView = require('UIKit/UITableView');}}    *Actual Result*  {{Couldn't find module: UIKit/UITableView for architecture: x86_64}} error in the output.    If you look into {{<projectDir>/build/iphone/build/Products/Debug-iphonesimulator/<APPNAME>.app/hyperloop/uikit}} folder, you'll find {{uitableview.js}} file missing.      ","New Feature",High,Open,"2016-08-24 19:52:01","2016-08-24 19:52:01",5
"The Titanium SDK ","Windows: Unable to build to an 8.1 emulator","h5.Description    *This is a regression from 5.4.0.GA*    When building to a Windows Phone 8.1 emulator the following happens.    * An Windows 10 Mobile emulator is launched  * The build fails with the below, probably because the emulator is a Windows 10 Mobile emulator        *Notes*    When using 5.5.0 and 6.0.0 the device-id for the emulator launched is 8-1-1, in 5.4.0.GA it is 8-1-13. In previous SDKs (and 5.4.0.GA), 8-1-1 was a Windows 10 Mobile emulator which was removed from {{ti info}} output and emulator selection prompts TIMOB-19811, which explains why when selecting that option launches a Windows 10 emulator. I believe this change is the reason for the error outlined above    h5.Steps to reproduce    # Install either the latest 5_5_X or 6_0_X SDK. {{appc ti sdk install -b 5_5_X -d}} or {{appc ti sdk install -b 6_0_X -d}}  # Ensure that the installed SDK above is your selected SDK {{appc ti sdk select <sdk_version>}} and also the SDK in your tiapp.xml  # Build an application using {{appc run -p windows -T wp-emulator}}  # Select an 8.1 emulator in the prompt    h5.Actual result    A Windows 10 Mobile emulator will be launched and the build <USER>will fail with the above error    h5.Expected result    A Windows Phone 8.1 emulator will be launched, build <USER>should not fails",Bug,None,Closed,"2016-08-24 14:08:59","2016-08-24 14:08:59",5
"The Titanium SDK ","Hyperloop: UIColor type properties is not working with Xcode 8 beta ","In Xcode 8 beta 6 on the build of the application the instance of {{redColor}} is generated but not the class.    h4. Steps to reproduce:  # Download the Xcode beta   # Select to use the beta version of Xcode {{xcode-select -s <xcode beta location>}}  # Create a new application with hyperloop   # Use the app.js below in the application  # {{appc run -p ios}}  # Select to use the GA version of Xcode {{xcode-select -s <xcode GA location>}}  # {{appc run -p ios}}    h4. App.js            h4. Actual when using Xcode 8 beta 6        h4. Expected  The application runs as it does in Xcode 7.3.1  ",Bug,Critical,Closed,"2016-08-23 23:35:05","2016-08-23 23:35:05",7
"The Titanium SDK ","Hyperloop: iOS - Example application not building with Xcode 8 because of Swift-Error","h4. Steps to reproduce:  # Download the hyperloop sample application from [here|https://github.com/<USER>hyperloop-examples]  # Import the sample application.  # Run the application    h4. Actual iOS 10     h4. Actual iOS 9.3            h4. Expected  No error is shown and the application is built.      ",Bug,Critical,Closed,"2016-08-23 20:23:45","2016-08-23 20:23:45",5
"The Titanium SDK ","iOS: Issue with 'TAB' button click while using ListView and Scrollable Views","h2. Problem:  When user uses the external keyboard's 'tab' button to go the next input field while inputting text, the app is behaving weirdly(screen will be off-centered.) instead of going to the next text field.    h2. Steps to reproduce:  1. Run KeyTest app in iPad simulator.  2. Click on a TextField in the first screen with value View1 - Field00.  3. Click Tab in the Mac Keyboard or soft Keyboard.    Then the screen will be off-centered. Also, if we keep pressing it, it will be moving to next TextField in next page rather in same page.    If we remove the tag  <ScrollView height=Ti.UI.FILL id=scrollView> ....</ScrollView> from top, it will stop distorting the screen on Tab click but even though TAB click behavior is not correct. It keeps moving to next screen instead of going to TextField in same screen.    We tried to build the app on both 5.2.2.GA(customer Environment) and 5.4.0.GA(support Environment), and we see the same behavior.       h2. Expected Result:   Clicking on Tab should not distort the screen and Tab click should take the focus on next TextField in same Scrollable Page rather going to next page in Scrollable view.        ",Improvement,Medium,Closed,"2016-08-22 23:35:52","2016-08-22 23:35:52",13
"The Titanium SDK ","Windows: CLI hangs on install of app when a different app is installed","h5.Description    When building to a Windows Mobile device or emulator that already has a different Titanium application installed the CLI will hang on the install of the application, it appears that similar to TIMOB-23762 the error code/message has been changed in the new tooling.  Running winappdeploycmd manually gives me the below. Code appears to be {{2148734208}}        h5.Steps to reproduce    # Build an application to a Windows mobile device or emulator  # Without uninstalling the previous app, build a different app to a Windows mobile device or emulator    h5.Actual result    The CLI seems to hang on install    h5.Expected result    As with previous SDKs the CLI should log an error to the user telling them to uninstall the other app",Bug,None,Closed,"2016-08-22 17:49:31","2016-08-22 17:49:31",5
"The Titanium SDK ","iOS: Ti.UI.Clipboard.clearData() crashes when no MIME type is provided","Trying to clear all Pasteboard data with {{Ti.UI.Clipboard.clearData()}} (with no MIME type provided) crashes the app with the below error.  Either our documentation is incorrect or {{clearData}} should be able to handle 'no arguments'.    *Steps to reproduce issue*  1. Create a new project  2. Add {{Ti.UI.Clipboard.clearData()}} to the code  3. Run the project    *Expected Results*  The Pasteboard data is cleared without issue    *Actual Results*  The app crashes with the below error    *Error*      *Notes*  I also get an error when trying to clear a specific data, using a MIME type that I set the data with. For example: I can set data with {{Ti.UI.Clipboard.setData(colors, blue);}} but get the below error when trying to clear data with {{Ti.UI.Clipboard.clearData(colors);}}  ",Bug,High,Closed,"2016-08-22 15:51:52","2016-08-22 15:51:52",3
"The Titanium SDK ","iOS: Improve Pasteboard support","There are several features of Pasteboards described in https://developer.apple.com/reference/uikit/uipasteboard that we currently do not support: Named pasteboards (TIMOB-23799), localOnly, expiration time/date, etc.    Ideally, we would support these features (and avoid the deprecations introduced with iOS 10).",Improvement,High,Closed,"2016-08-22 05:18:41","2016-08-22 05:18:41",3
"The Titanium SDK ","node-ios-device: emitter error during process exit and uncaught exception","Running an iOS app on device from Ti CLI causes exception when quitting via CTRL-C.        I also noticed that node-ios-device would sometimes blow up due to an uncaught exception:    ",Bug,High,Closed,"2016-08-18 20:50:19","2016-08-18 20:50:19",5
"The Titanium SDK ","Android: Can't add android modules to project when using SDK 6.0.0.v20160817065403","*This is a regression. Not seen with SDK 5.4.0.GA*  h5.Steps to reproduce:  1. Create an android project using studio.  2. Enable services/hyperloop.  3. After the app is created add e.g ti.map module.  3. Look at the modules section in the tiapp.xml.    h5.Actual results:  1. The android modules versions are greyed out.  2. If you hover over soasta module version number for android you get message:  {{The com.soasta.touchtest module does not support android platform for 6.0.0.xx....}}  2. If you try to add modules e.g the ti.map module you don't get an option for android modules.  *NOTE:* Attached screenshots for reference.    h5.Expected Results:  1. You should be able to add android modules to your project & select the module version. Also, you should not get {{The com.soasta.touchtest module does not support android platform for 6.0.0.xx....}} message.",Bug,High,Closed,"2016-08-18 00:39:20","2016-08-18 00:39:20",3
"The Titanium SDK ","iOS10: Logs not working on iOS 10 devices.","h4. Steps to reproduce:  # Use the environment above.  # Create a new project {{appc new}}  # Use the app.js below.  # Run the application and click the button on the screen     h4. App.js      h4. Actual  No logs are shown after:             h4. Expected  This is what the iPhone 6 iOS 10 simulator shows:        ",Bug,Critical,Closed,"2016-08-17 16:45:55","2016-08-17 16:45:55",21
"The Titanium SDK ","Windows: Error thrown when updating list section item that doesn't exist ","h5.Description    When using the code below an error is thrown, to be in parity with other platforms an error should not be thrown and a warning should be logged, for example iOS logs {{\[WARN\]  ListView: Update item index is out of range}}        h5.Steps to reproduce    # Add the above code to an existing app.js  # Build for windows platform    h5.Actual results    An error is thrown    h5.Expected results    To maintain parity an error should not be thrown, a warning should be logged",Bug,None,Closed,"2016-08-17 15:47:00","2016-08-17 15:47:00",3
"The Titanium SDK ","iOS: Handoff continueactivity is not firing from iOS10 to iOS8","When attempting to handoff a titanium app from an iOS10 device to an iOS8 device, {{continueactivity}} does not fire. This issue does *NOT* occur between an iOS9 -> iOS8 or iOS10 -> iOS9.    *Note:* _It takes ~35 seconds for the iOS8 device to see the handoff app from the iOS10, this may be related to the iOS8 devices refresh time on Apple's side, but it may be worth investigating why it doesn't initially register the app as available for handoff, as it does between iOS9/8._    h3. TEST CODE:      h2. Steps to Reproduce  1. Ensure that both iOS8 / iOS9 devices are:  - Logged into the same iCloud account.  - Connected to the same WiFi Network.  - Bluetooth enabled.  2. Create a classic mobile application.  3. Apply the above test code to the app.js file.  4. Run the app to both devices.  5. Launch the app on the iO10 device.  6. Launch the app through Handoff on the iOS8 device either by:  - Swiping up from the app icon present on the lock screen.  - Double tapping the home button and selecting the app.    h2. Actual Result    iOS10: Activity moved to a different device.  iOS8: App Launches but continueactivity does not appear as an alert or in the console logs.    h2. Expected Result    iOS10: Activity moved to a different device.  iOS8: continueactivity was fired should appear as an alert & in the console logs.",Bug,High,Resolved,"2016-08-16 20:48:21","2016-08-16 20:48:21",1
"The Titanium SDK ","Hyperloop: iOS - Build should copy Cocoapods-provided Bundles into the app.","Some obj-c libraries require external bundles to work.  Google VR SDK is an example: if you download it with Cocoapods (*pod 'GVRSDK'*), you get all the necessary headers + a few *.bundle* files inside *Pods/<podname>/Resources*. If you try and run an app with it you'll see an error like this:        I've opened the location above and couldn't see any of the Bundles there.    *How to solve the issue:*  Manually copying the *.bundle* files to the */app/assets* folder solve this issue.  It would be nice if those bundles were automatically copied to the app to prevent these issues.    ",Bug,Critical,Closed,"2016-08-12 03:50:40","2016-08-12 03:50:40",3
"The Titanium SDK ","Windows: Investigate failing mocha tests on Jenkins","Investigate why certain tests fail on Windows Desktop, recently we have needed to disable a number of tests that have prevented the Jenkins builds from passing. We should investigate into why this is happening and try to re-enable the test cases that previously failed.",Story,High,Closed,"2016-08-15 16:23:56","2016-08-15 16:23:56",8
"The Titanium SDK ","Windows: Impose restrictions on feature events","Windows ticket following up on https://jira.<USER>org/browse/TIMOB-19826",Improvement,Critical,Closed,"2016-08-15 11:06:23","2016-08-15 11:06:23",5
"The Titanium SDK ","iOS10: Minor improvements for Xcode 8 support","- Team id is now required in the tiapp.xml when building an app with a watch extension and Xcode 8.  - Added build configuration settings for swift files in watch apps  Namely set the SWIFT_VERSION to 2.2, if it's not already set... all new Watch extension projects will have this set to 3.0  - Removed old watchos2 template in favor of existing watchos2-objc template.  - Set default min iOS SDK version to 8.0 if not explicitly set in the tiapp.xml and compiling using Xcode 8.  - Removed old maintainers from package.jsons.",Story,High,Closed,"2016-08-15 05:00:51","2016-08-15 05:00:51",2
"The Titanium SDK ","Windows: Wrong items returned on for-in loop","We have experienced wrong behavior on JavaScript for-in loop. I suspect JavaScriptCore has some issues with for-in loop, because this only happens on Windows Desktop (8.1 and 10.0) Jenkins.     See also:  https://github.com/<USER>titanium_mobile_windows/pull/817    *Test Code*    ",Bug,High,Closed,"2016-08-15 03:22:11","2016-08-15 03:22:11",8
"The Titanium SDK ","Windows: Use CMake property for DefaultLanguage ","Currently we are manipulating VS project file (.vcxproj) manually to update {{DefaultLanguage}} configuration at  [generate.js|https://github.com/<USER>titanium_mobile_windows/blob/master/cli/commands/_build/generate.js#L110], but we could let CMake to generate it by setting [VS_GLOBAL_variable|https://cmake.org/cmake/help/v3.0/prop_tgt/VS_GLOBAL_variable.html].",Story,Medium,Closed,"2016-08-15 00:08:26","2016-08-15 00:08:26",5
"The Titanium SDK ","iOS10: Support preview interactions","*strong text*In iOS 10, developers can build their own peek-and-pop transitions by implementing the {{[UIPreviewInteraction|https://developer.apple.com/reference/uikit/uipreviewinteraction]}} class. It provides delegates to handle the current <USER>and lets the user decide whether or not the user should commit from peek to pop or not (nice rhyme). ","New Feature",Medium,Closed,"2016-08-14 22:15:17","2016-08-14 22:15:17",7
"The Titanium SDK ","Windows: windowslib should detect installed Win10 SDK versions","In order to target specific Windows 10 SDK (TIMOB-23760), {{windowslib}} should be able to detect available Windows 10 SDK versions.    May be something like below:            Installed SDK versions can be found in following folders:    ",Improvement,High,Closed,"2016-08-12 04:34:26","2016-08-12 04:34:26",5
"The Titanium SDK ","Android: Default alloy & classic app crashes after launch with error : Requested module not found: ti.cloud, even though present","h5.Steps To Reproduce:  1. Create a default alloy/classic app with SDK mentioned in environment.  2. Build for android device/emulator.    h5.Actual Results:  1. The app crashes after launch with error:      h5. Expected Results:  1. The app should not crash & run successfully.",Bug,Critical,Closed,"2016-08-11 21:20:10","2016-08-11 21:20:10",5
"The Titanium SDK ","Windows: Direct API Access not working ","h4. Steps to reproduce:  # Use the GA environment above.  # Create a new project {{appc new}}  # In the app.js add the line below or follow the docs tutorial.    h4. Docs  http://docs.<USER>com/platform/latest/#!/guide/Windows_Runtime_Direct_API_Access      h4. App.js        h4. Actual          h4. Expected  No error is shown and the application builds successfully.",Epic,High,Closed,"2016-08-11 21:04:51","2016-08-11 21:04:51",21
"The Titanium SDK ","Default app created with 6.0.0 SDK comes pre populated with hyperloop 2.0.0 & in tiapp.xml & build fails as 2.0.0 is not downloaded","h5.Steps To Reproduce:  1. Create a new default app with 6.0.0 SDK mentioned in the environment.  2. Open the tiapp.xml.  3. You will see the tiapp.xml is set to hyperloop 2.0.0.  4. Build the app for android/ios.    h5.Actual Result:  1. The build fails as it can't find hyperloop 2.0.0. It is not downloaded when creating a new project.  2. Also, hovering over the hyperloop version in the tiapp.xml gives us message The hyperloop module does not support android platform for Titanium SDK 6.0.0.v20160810073036 & same for Iphone.  *NOTE*- Attached screenshot for reference.    h5.Expected Results:  1. The tiapp.xml should come pre populated with the supported version & not show any messages.",Bug,Critical,Closed,"2016-08-11 20:53:35","2016-08-11 20:53:35",1
"The Titanium SDK ","Windows: Install of app to Windows 10 Mobile device fails on second build of application ","h5.Description    When building an app to a Windows 10 Mobile device a second time the application fails to install with the below error.    The latest Universal tools are needed for this error to occur        This was already fixed in the cloned ticket but it appears the error code has now been changed to 2148734208    h5.Steps to reproduce    1. Build to a Windows 10 Mobile phone using {{appc run -p windows -T wp-device }}  2. Rebuild the app using {{appc run -p windows -T wp-device}}    h5.Actual result    The app fails to install, a developer will currently have to uninstall their app each build    h5.Expected result    The app should be reinstalled, a developer should not have to remove the same application each time they build",Bug,Critical,Closed,"2016-08-11 12:46:33","2016-08-11 12:46:33",5
"The Titanium SDK ","Windows: --wp-sdk option should handle actual Windows SDK versions","h5.Description    Currently, when using the {{--wp-sdk}} option it will only allow a user to use 8.1 and 10.0 for possible values. When attempting to pass in an actual value for the SDK i.e. 10.0.10240.0, 10.0.10586.0 the CLI will not accept it as valid.    This option should be made to accept valid versions of the Windows SDK, similar to the {{--ios-version}} option in ios-build    h5.Steps to reproduce    # Build a Windows project using {{appc run -p windows -T wp-device --wp-sdk 10.0.10586.0 --build-only}}    h5.Actual result    The build will error with        h5.Expected result    The CLI should accept a valid version of the SDK for the --wp-sdk option",Improvement,None,Closed,"2016-08-10 19:33:25","2016-08-10 19:33:25",5
"The Titanium SDK ","Windows: Allow a user to define a target Windows version and Minimum Version in the tiapp.xml","h5.Description    In TIMOB-23758 it was discovered that the minimum and target SDK versions for a project are set to the same version which is the highest version on the machine. This should be configurable by the user in the tiapp.xml in a similar way to iOS and Android, and similar to Android maintain as close to a native setting as possible. Below is a proposed example that matches the values found in a native project (.csproj or .vcxproj) file    {code:title=Proposed Windows}  <windows>      <TargetPlatformVersion>10.0.10586.0</TargetPlatformVersion>      <TargetPlatformMinVersion>10.0.10240.0</TargetPlatformMinVersion>  </windows>      {code: title=iOS}  <ios>      <min-ios-ver>4.3</min-ios-ver>  </ios>  {code}",Improvement,None,Closed,"2016-08-10 19:16:28","2016-08-10 19:16:28",5
"The Titanium SDK ","Windows: Unable to build to 10.0.10586 emulator after installing Windows SDK 10.0.14393","h5.Description    After installing Windows 10 SDK 10.0.14393 I can no longer build to a 10.0.10586 emulator.  The build fails on install with the error below. This is because in the apps solution file the minimum SDK is set to 10.0.14393, it should be set to one of the following.    # Lowest possible version of Windows 10, 10.0.10240.0  # Lowest version installed on development machine    I will file a separate ticket to allow these SDK values to be configured by the user in the tiapp.xml        *Notes*    I believe this is true for devices, but I do not have a device with an OS version lower than 10.0.14393 to test this theory.  Some information about these settings can be found [here|https://msdn.microsoft.com/library/windows/apps/mt590210.aspx?f=255&MSPPError=-2147217396]    h5.Steps to reproduce    # On a machine with 10.0.14393 SDK installed build to a 10.0.10586 emulator    h5.Actual result     The build will fail    h5.Expected result    The build should not fail",Bug,None,Closed,"2016-08-10 19:02:29","2016-08-10 19:02:29",8
"The Titanium SDK ","Android: TextField goes behind the keyboard when textAlign right position.","h6. Description  Just define TextField alignment to the right side and place it bottom of the window. Now touch on it for entering value and click back button then again touch it, now you will see the issue.    h6.Steps to Reproduce.    1. Click on the textbox then soft keyboard will appear and a textbox is able visible.   2. Click on the hardware back button, then the soft keyboard will disappear.   3. Again, click on the textbox box, then soft keyboard is appears, but text box is unable to visible.    Actual result : Unable see the textbox.    Expected result : Able see the textbox for entering the value.    Test Case:    Thanks.  ",Bug,Critical,Closed,"2016-08-10 18:47:13","2016-08-10 18:47:13",5
"The Titanium SDK ","iOS: Build fails if project name matches file/folder in built app","If the project name is the same as a file in the built app ({{build/Products/Debug-<target>/<project_name>.app}}), then the build will fail.    *Steps to reproduce issue*  1. Create a new project with a name that matches a file in the built app (see below for a list of failing names)  2. Run the project on an iOS device (simulators fail for some names, but device is more restrictive)    *Actual results*  The build fails with the below error(s)    *Expected results*  The build succeeds or you are notified that the name is invalid on creation/build    *Notes*  The names I have found that fail are:  Frameworks, Assets.car, Info.plist, modules, PkgInfo, _CodeSignature, LaunchScreen.storyboardc, hyperloop (if hyperloop is enabled/referenced in the project)    If the project name matches a folder in the build app then you will have the executable of that name, but not the folder.    *Errors*  One of the below is seen on failure:          ",Bug,High,Closed,"2016-08-10 18:32:45","2016-08-10 18:32:45",2
"The Titanium SDK ","iOS: Hyperloop - Cannot build Hyperloop project if Xcode is not in default location","If Xcode is not in the default location ({{/Applications/Xcode.app}}), Hyperloop projects fail to build (the metabase fails to generate).    *Steps to reproduce issue*  1. Ensure there is not an Xcode in the default location ({{/Applications/Xcode.app}})  2. Select your Xcode, not in the default location, using {{sudo xcode-select -s /path_to_xcode/Contents/Developer}}  3. Create a new project with Hyperloop  4. Change the code of the project to reference Hyperloop  5. Build the project for sim or device    *Actual Results*  The build fails with:      *Expected Results*  The build succeeds and the metabase is created    *Notes*  After the error I have the {{.h}} file in my {{build/hyperloop/ios}} folder, but the {{.json}} files and {{js}} folder are not populated. ",Bug,Critical,Closed,"2016-08-10 16:49:55","2016-08-10 16:49:55",5
"The Titanium SDK ","Android: Crash when adding Ti.Network event listener","This snippet of code:      Will result in a hard crash:  ",Bug,Critical,Closed,"2016-08-10 13:23:27","2016-08-10 13:23:27",8
"The Titanium SDK ","Windows: Async HTTPClient crashes on Win10 Desktop","Async HTTPClient (TIMOB-23678) introduces crash at NMocha test on Windows 10 Desktop. We disabled it temporary because it works well on mobile devices. We want to revisit it to find out why it crashes on desktop.",Story,Medium,Closed,"2016-08-10 08:49:30","2016-08-10 08:49:30",5
"The Titanium SDK ","Hyperloop iOS: Block callback arguments are null","*Details:* If you call {{LAContext.evaluatePolicyLocalizedReasonReply}}, null is returned for the success parameter instead of true or false.    *Steps to reproduce:*  # Create a classic app: {{appc new --classic}}  # In the {{Resources}} folder, add/replace the following code:  *app.js*    *ti.touchid.js*    # Install the app to an iOS device that is *touch id supported*; make sure the touch id is enabled first before installing  # Launch the app and press on the *authenticate* button  # Use your fingerprint to continue    *Actual:* In the console, success is null:      *Expected:* Success should either be true or false with the appropriate error message and error code. ",Bug,Critical,Closed,"2016-08-09 21:44:23","2016-08-09 21:44:23",5
"The Titanium SDK ","Windows: appc ti info does not list Windows Phone 8.1 emulators","{{appc ti info -p windows -o json}} does not list Windows Phone 8.1 emulators.     *Steps to reproduce*    {{appc ti info -p windows -o json}}    *Expected*    Windows Phone 8.1 emulators are listed as well as Windows 10 Mobile emulators.    *Actual*    ",Bug,High,Closed,"2016-08-09 10:02:12","2016-08-09 10:02:12",5
"The Titanium SDK ","Windows: Failed to connect to WP 8.1 device","Unable to connect to Windows Phone 8.1 device after updating to Microsoft Windows 10 SDK 10.0.14393. There's no problem building against Windows 10 Mobile device.    *Steps to reproduce*    # Install {{Windows 10 SDK 10.0.14393}} (See screenshot)  # {{appc ti build -p windows --target wp-device}}    *Expected*    Titanium project is built and installed to device    *Actual*    Titanium CLI shows {{Failed to connect to Lumia 630 Dual SIM (RM-978)}}  ",Bug,Critical,Closed,"2016-08-09 03:33:12","2016-08-09 03:33:12",8
"The Titanium SDK ","Android: Unable to Retrieve Detailed Calendar Information via Ti.Calendar.CalendarOS: Refactor default new app-projects","We are attempting to display the user's local calendars in an organized list (arranged by which account syncs the data). Just like in the image below, we can retrieve the individual calendars, but we cannot retrieve the individually-descriptive sources where the Calendars are coming from.  For example, we'd like to show iCloud, Facebook, Google, Other, and others as the sources of data where calendars are coming from.  None of that data is available through the Titanium API, it seems, but it is certainly available through the native SDK on both Android and iOS",Improvement,Medium,Open,"2016-08-08 21:40:02","2016-08-08 21:40:02",3
"The Titanium SDK ","Android: Crash using Math.random","trying to execute Math.random() in JS code will crash the app:      ",Bug,Critical,Closed,"2016-08-08 18:21:43","2016-08-08 18:21:43",8
"The Titanium SDK ","Android: Crash using Ti.Android.R values","When accessing Ti.Android.R values in your app, it causes a crash. Something as simple as:      ",Bug,Critical,Closed,"2016-08-08 18:14:28","2016-08-08 18:14:28",8
"The Titanium SDK ","Windows: WindowsOnly folder is ignored when generating parity report and documentation","The {{build/docs.js}} script needs amending to take into account the {{WindowsOnly}} folder when generating the parity report and {{api.jsca}} file used for documentation.",Story,Medium,Closed,"2016-08-05 22:27:55","2016-08-05 22:27:55",2
"The Titanium SDK ","Windows: Error thrown intermitently when building for device,Opening the package from location Preprodclassic_1.0.0.0_ARM_Debug.appxbundle failed","h5.Description    When building to Windows devices I intermittently see the error below. When rebuilding the error does not occur, the app is not installed to device.         h5.Steps to reproduce    There are no known steps to reproduce this issue easily. It is only seen intermittently when building an application to device.     h5.Actual result    An error is thrown when building to device intermittently, no helpful logging is shown to the user    h5.Expected    Error should not be thrown, if possible some helpful logging should be shown",Bug,Medium,Closed,"2016-08-05 19:01:06","2016-08-05 19:01:06",5
"The Titanium SDK ","Windows: section updateItemAt updates wrong item","affect version - 5_4_X 5.4.0.v20160802165655    *index.js:*      *index.xml:*        in 5_4_X 5.4.0.v20160802165655 updates 2nd elem instead of 1st.  in 5.3.0 working fine",Bug,Critical,Closed,"2016-08-04 09:39:49","2016-08-04 09:39:49",5
"The Titanium SDK ","MobileWeb:  Search button does not appear on iOS keyboard.","No Search Button on iOS keyboard.    h6.Steps:  1.Open Project  2.Run using Mobile Web Preview in Browser  3.With iOS Simulator, view the build in Safari  4.Click in Text field  5.Toggle Software Keyboard if necessary to show iOS keyboard in Simulator  6.Search key does not show where return key is, even though it is set in the Textfield parameter with returnKeyType=Titanium.UI.RETURNKEY_SEARCH    h6.Test Case      Thanks",Bug,None,Closed,"2016-08-04 21:02:02","2016-08-04 21:02:02",0
"The Titanium SDK ","Hyperloop: iOS: Local-embedded frameworks not working with TICORE","Just found out that local frameworks will get a build failure if <use-jscore-framework>false</use-jscore-framework>    You are going to need this framework and this tessdata.  https://github.com/gali8/Tesseract-OCR-iOS  https://github.com/tesseract-ocr/tessdata    or look for [~<USER>.    h4. Steps to reproduce    1. *appc new --classic*  2. install the packaged hyperloop module here: https://github.com/<USER>hyperloop.next/releases/tag/1.2.5  3. in tiapp.xml include    4. create a `src` folder and put TesseractOCR.framework in  5. add {{Lenore3.png}} to Resources/iPhone  6. add tessdata folder to Resources/iPhone  7. create a `appc.js` file, and use this as content     6. in {{Resources/app.js}}, use this      h4. Expected Result  app builds flawlessly    h4. Actual Result  ",Bug,Critical,Closed,"2016-08-04 09:41:35","2016-08-04 09:41:35",8
"The Titanium SDK ","Windows: Items missing in parity report","h5.Description    Based off comments in TIMOB-20350 the following are not listed as having Windows support in the parity report.    * Titanium.UI.ListItem  * Titanium.UI.AttributedString  * ti.cloud module (Modules.Cloud)",Bug,None,Closed,"2016-08-04 09:33:36","2016-08-04 09:33:36",5
"The Titanium SDK ","iOS: Debugger for Alloy project hangs on Device with run-on-main-thread enabled","Running an Alloy project in Debug mode to Device causes the app to hang on The Debugger is waiting for you to launch the app on your device.    *This is a Regression from 5.3.0.GA*  The hang does not occur on simulator.  The hang does not occur for a classic titanium mobile project.  The hang does not occur with run-on-main-thread disabled.    h2. Steps to Reproduce    1. Create a new Default Alloy Project.  2. Add breakpoints to the project, preferably in the index.js file.  3. Ensure that your iOS device and Computer are connected to the same WiFi Network.  4. Run the app to an iOS device in Debug mode.    h2. Actual Result    Device and Studio hangs on Waiting for Debugger to Connect    h2. Expected Result    Device and Studio should not hang.",Bug,Critical,Closed,"2016-08-04 00:19:53","2016-08-04 00:19:53",2
"The Titanium SDK ","Windows: ImageView width Ti.UI.SIZE not working","issue in  5_4_X 5.4.0.v20160802165655  working fine on 5.3.0, but not on  5_4_X 5.4.0.v20160802165655        ImageView width Ti.UI.SIZE not working.    *Test Code*        *Expected*    Image should be visible    ",Bug,Critical,Closed,"2016-08-03 20:14:16","2016-08-03 20:14:16",5
"The Titanium SDK ","Hyperloop: Classes that are unavailable on watchOS/tvOS are also not compiled on iOS","The {{CLBeaconRegion}} class and others (TIMOB-2377) do not work. -We need the reason why only certain classes do not work and what their pattern is-. The problem is that classes that have the unavailable-macro for watchOS/tvOS during the metabase AST-analysis.    In detail, these two bad boys produce the problems:  {code}  __TVOS_PROHIBITED __WATCHOS_PROHIBITED  {code}  So we need to check for them explicitly and only skip a class when {{__IOS_UNAVAILABLE}} occurs.    Example:   {code:javascript}  var CLBeaconRegion = require(CoreLocation/CLBeaconRegion);  var NSUUID = require(Foundation/NSUUID);    var uuid = NSUUID.alloc().initWithUUIDString(B9407F30-F5F8-466E-AFF9-25556B57FE6D);  var region = CLBeaconRegion.alloc().initWithProximityUUIDMajorMinorIdentifier(uuid, 1, 1, com.<USER>beacons);  {code}    *Expected behavior*: The initialization of the object works.  *Actual behavior*: The following log is thrown and the object is not initialized:  {code}  [ERROR] Script Error {  [ERROR]     column = 42;  [ERROR]     line = 12;  [ERROR]     message = undefined is not a function (evaluating 'CLBeaconRegion.alloc()');  [ERROR]     sourceURL = file:///Users/<USER>Library/Developer/CoreSimulator/Devices/765A790D-A9C5-4C7C-B3F7-15D024664D22/data/Containers/Bundle/Application/260A0F3D-2B17-4735-95ED-EBFB46671133/Hyperloop_Sample.app/alloy/controllers/beacons.js;  [ERROR]     stack = startDiscovery@file:///Users/<USER>Library/Developer/CoreSimulator/Devices/765A790D-A9C5-4C7C-B3F7-15D024664D22/data/Containers/Bundle/Application/260A0F3D-2B17-4735-95ED-EBFB46671133/Hyperloop_Sample.app/alloy/controllers/beacons.js:12:42;  [ERROR]   {code}",Bug,High,Closed,"2016-08-03 20:00:04","2016-08-03 20:00:04",3
"The Titanium SDK ","Android - CallBack for push notifications doesn't work when app is open in background","Hello,    I’m having a problem with push notifications in the Android version of the App we are developing.  Specifically, it seems like push notifications work differently if my app has been sent to background using the “back” or “home” button of the phone.    *1) FIRST CASE – background using back button*  When I receive a push notification, I click on it, the App opens and display the right page    *2) SECOND CASE - background using home button*  This time, when I receive a push notification and click on it, the App opens on the last page I was previously viewing, before I sent the app to background.  This is obviously not the right behavior.    It seems like the CallBack function for push notification is not called in this case; we are using Single Call Back.    Now, the interesting thing is that if I open the App again immediately, now the callback works and the first thing I see in the App is the content of the push notification.        ---  We are using SingleCallback.  This bug is on Android only; on iOS devices everything is ok.    Our code:    if (isAndroid) {  var CloudPush = require('ti.cloudpush');  CloudPush.setSingleCallback(true);  CloudPush.retrieveDeviceToken({  success: deviceTokenSuccess,  error: deviceTokenError  });  CloudPush.addEventListener('callback', pushCallbackAll);  }        ---  I've also made a short video to let you see what happens:  https://youtu.be/hiYwcY3vahY      Why does it happen? Any idea?  Thank you very much for your help,  Kind regards  <USER>",Bug,High,Closed,"2016-07-30 14:16:19","2016-07-30 14:16:19",3
"The Titanium SDK ","Windows: Ti.UI.ImageView.toImage() is executed before an image is loaded","5_4_X 5.4.0.v20160802165655    *CODE*      *RESULT*  [ERROR] :  Application Error: Windows.Graphics.Imaging: One or more pointer arguments are null.  [ERROR] :  Error: unknown exception      ",Bug,High,Closed,"2016-08-03 13:16:22","2016-08-03 13:16:22",5
"The Titanium SDK ","Windows: Front camera preview/image is upside down","As of TIMOB-23687 we can take a shot from front camera, but its preview and saved image is upside down.      ",Bug,High,Closed,"2016-08-03 09:09:36","2016-08-03 09:09:36",5
"The Titanium SDK ","Android: Memory leak when window has listView inside","Problem: After closing a window with a listView inside its activity never gets finished causing a memory leak. This occurs even if the listView has no elements or listeners in its template. Eventually all this leaked memory causes the application to crash.    Steps to reproduce:  1. Start the application (attached listViewMemoryLeak.js script)  2. Create a heap dump in DDMS  3. Tap the 'ListView' or 'ListView empty' buttons  4. Tap the back button  5. Cause GC  6. Create a second heap dump in DDMS  7. Do a comparison of the two heap dumps with Eclipse Memory Analyzer. The second heap dump has multiple new and living objects compared to the first heap dump. If you tap the 'View' or 'ScrollView' buttons instead and repeat the same <USER>you'll notice that this does not occur.",Bug,High,Closed,"2016-07-28 19:09:46","2016-07-28 19:09:46",8
"The Titanium SDK ","Windows: Calling Ti.Contacts.Group.members() errors with 'Can't find variable: memberIdentifiers'","h5.Description    When calling  Ti.Contacts.Group.members() it errors with 'Can't find variable: memberIdentifiers'.        h5.Steps to reproduce    # Copy the code above to an existing app.js  # Build for Windows platform    h5.Actual result    When group.members() is called the app will throw an error    h5.Expected result    Calling group.members() should return the members of a group",Bug,Medium,Closed,"2016-08-02 18:22:03","2016-08-02 18:22:03",5
"The Titanium SDK ","Android: TextField cursor before hintText when textAlign is RIGHT","When creating a TextField with alignment right and a hintText the cursor is placed on the left side of the text, which looks like it is actual text the user has to clear        on iOS the cursor is on the right side which looks better for the user.    Android 6  SDK 5.3.1.GA (and 5.4.0.v20160720201924)",Bug,Medium,Closed,"2016-07-26 07:10:42","2016-07-26 07:10:42",0
"The Titanium SDK ","Hyperloop: Fix the and create 1_2_X branch","With Titanium SDK 5.4.0 and 6.0.0 being different with respect to modules (especially Android), we need a better way to maintain the Hyperloop modules.    Creating a branch 1_2_X in Hyperloop Repo. This is for TiSDK 5.4.0+    Master branch in Hyperloop Repo will effectively be 2_0_X until it's needed to be branched. This is for TiSDK 6.0.0+",Story,Medium,Closed,"2016-08-01 05:09:29","2016-08-01 05:09:29",2
"The Titanium SDK ","Hyperloop: Android aar without asset folder fails compiling","Including an .aar file which doesn't have an assets folder fails compiling with the following error:        Used aar: Firebase-messaging 9.2.1 from the google sdk (/extras/google/m2repository/com/google/firebase/firebase-messaging/)    hyperloop 1.2.0.Beta  SDK 5.4.0  Android 6.0.1",Bug,High,Closed,"2016-07-30 14:21:45","2016-07-30 14:21:45",1
"The Titanium SDK ","Windows: Implement Titanium.Network.Socket","Implement {{Titanium.Network.Socket}} methods and properties.    http://docs.<USER>com/platform/latest/#!/api/Titanium.Network.Socket",Story,High,Closed,"2016-07-29 12:29:53","2016-07-29 12:29:53",8
"The Titanium SDK ","iOS: close() is applied to multiple window views with Storyboard enabled","*This is a regression from 5.3.1.GA*    It was found that when opening a second window within an app, calling the {{close()}} method will actually close both windows. *This only occurs when {{<enable-launch-screen-storyboard>}} is set to TRUE, which is the default configuration.*    h3. TEST CODE:      Background: *Black*  {color:#205081}Window 1: *Blue*{color}  {color:#14892c}Window 2: *Green*{color}      h2. Steps to Reproduce  1. Create a new Classic Mobile Project.  2. Copy above test code into app.js file.  3. Ensure that {{<enable-launch-screen-storyboard>}} is set to TRUE in the tiapp.xml.  4. Run App to device / sim.  5. Click on Open Window button, this will open a second green window.  6. Click on Close Window button, this will close the second green window.    h2. Actual Result    Both {color:#205081}win1{color} & {color:#14892c}win2{color} are closed, revealing the black background.    h2. Expected Result    Only {color:#14892c}win2{color} should be closed.",Bug,Critical,Closed,"2016-07-28 21:30:00","2016-07-28 21:30:00",3
"The Titanium SDK ","iOS Media.showCamera Temp file issue","h6. Issue Description     Video is recorded and saved to the Photos app successfully, but it apparently is also saved in the applicationDataDirectory. Looking at the physical iPhone > Settings > Usage > Storage, the size of the app increase the exact same amount of the video that was just recorded. After capture more videos, the app is bigger.    h6. Steps to reproduce  # Create a new classic app project  # Replace the code inside app.js to the next one    # Run  # Record a video  # Check the app size    h6. Expected results   App should flush the videos if they are not longer used after the app is killed",Bug,Critical,Closed,"2016-07-28 20:22:39","2016-07-28 20:22:39",2
"The Titanium SDK ","iOS: CFURLSetResourcePropertyForKey failed log appears when you use Ti.Filesystem.File.setRemoteBackup","*Details:* {{CFURLSetResourcePropertyForKey failed}} log appears when you use {{Ti.Filesystem.File.setRemoteBackup}}.    Here is a related stackover [link| http://stackoverflow.com/questions/12928509/cfurlsetresourcepropertyforkey-failed-when-disable-data-backup-on-nsdocumentdire], which seems to be done in this [PR|https://github.com/<USER>titanium_mobile/pull/8093/files#diff-7c1c034158d43375ccc8ec33c21f4257R513] for TIMOB-23141.    *Steps to reproduce:*  # Create a classic mobile project: {{appc new --classic}}  # In the app.js file, replace the code with this code:    # Install app to an iOS device  # Press the *Toggle remote backhup* button    *Actual:* The following log will appear:      *Expected:* No erroneous log should appear.",Bug,High,Closed,"2016-07-28 20:05:42","2016-07-28 20:05:42",3
"The Titanium SDK ","Hyperloop - Android - Dexer fails because of duplicated classes","I'm building a project with this .AAR: https://github.com/PaoloRotolo/AppIntro  Problem is, this project needs appcompatV7 underneath it. If i try and build my project with the appcompatV7 .JAR file, i get the following error when the dexer is run:        I guess that's happening because in the *Packaging application* part of the build <USER>you can see that the *android.support.v7.appcompat* lib is already included there by default, but the thing is... Hyperloop doesn't know / doesn't have access to it without without the Hyperloop wrappers that are generated beneath */build/hyperloop/js*.        Kiat asked me to try running the app with the latest 6.0.0 build, but the app won't even open:        ",Bug,Critical,Closed,"2016-07-28 07:51:51","2016-07-28 07:51:51",5
"The Titanium SDK ","Windows: Ti.App._restart() does not function correctly","LiveView requires {{Ti.App._restart()}} in order to function correctly. This should reload the application instead of exiting (like it does currently).    *TEST CASE*  ",Bug,High,Closed,"2016-07-28 08:50:26","2016-07-28 08:50:26",5
"The Titanium SDK ","Windows: setting a headerView/footerView for a tableview without a height set on the view makes the view oversized","h5.Description    When adding a headerView or footerView to a tableview, if the views do not have a height set then the headerView or footerView        h5.Steps to reproduce    # Using the code above build for Windows platform    h5.Actual result    The headerView and footerView will be bigger than they should be    h5.Expected    The headerView and footerView should be appropriately sized for the UI elements inside, as is the behaviour on iOS and Android",Bug,Medium,Closed,"2016-07-27 18:43:23","2016-07-27 18:43:23",5
"The Titanium SDK ","Windows: setting a headerView/footerView for a listview without a height set on the view makes the view oversized","h5.Description    When adding a headerView or footerView to a listView, if the views do not have a height set then the headerView or footerView        h5.Steps to reproduce    # Using the code above build for Windows platform    h5.Actual result    The headerView and footerView will be bigger than they should be    h5.Expected    The headerView and footerView should be appropriately sized for the UI elements inside, as is the behaviour on iOS and Android",Bug,Medium,Closed,"2016-07-27 18:31:04","2016-07-27 18:31:04",5
"The Titanium SDK ","iOS: Expose status-bar background-color","Added ability to change status bar background color","New Feature",Medium,Closed,"2016-07-27 15:20:32","2016-07-27 15:20:32",1
"The Titanium SDK ","Android: Google Analytics not working in Android 5.0 or later.","Android app crashes when run API 21 or up, using this google analytics module: [https://marketplace.<USER>com/apps/5081?restoreSearch=true#!overview]. In attached, follow the image with the warn that I receive.",Bug,High,Closed,"2015-11-20 14:21:25","2015-11-20 14:21:25",1
"The Titanium SDK ","Windows: Camera can default to front facing camera on some devices","On my Lumia 1020, the front facing camera is the default camera. However, I would expect the rear facing camera to be the default.    Investigating shows that neither the front or rear cameras of my device have the {{device->IsDefault}} flag set to {{true}}. In this case, we should determine the correct camera to use and default to that.    *Test Case*    Setting {{whichCamera: Titanium.Media.CAMERA_FRONT}} should show front camera preview.    ",Bug,High,Closed,"2016-07-26 18:14:34","2016-07-26 18:14:34",5
"The Titanium SDK ","Windows: Implement CameraOptionsType.whichCamera","Currently, it is not possible to specify which camera (front or rear) to use.    Use {{DeviceInformation::FindAllAsync(DeviceClass::VideoCapture)}} to find the {{Id}} of the specified camera and set the {{VideoDeviceId}} of {{MediaCaptureInitializationSettings}}    *Test Case*    Setting {{whichCamera: Titanium.Media.CAMERA_FRONT}} should show front camera preview.    ",Improvement,High,Closed,"2016-07-26 18:09:35","2016-07-26 18:09:35",5
"The Titanium SDK ","iOS: Expose missing iOS8 properties to hide NavigationBar","Expose the methods described above:     https://developer.apple.com/library/ios/documentation/UIKit/Reference/UINavigationController_Class/#//apple_ref/doc/uid/TP40006934-CH3-SW36",Improvement,Medium,Closed,"2016-07-26 16:27:28","2016-07-26 16:27:28",3
"The Titanium SDK ","Windows: Default to users OS version when building ws-local projects","h5.Description    When building a project for ws-local it seems that the Windows SDK used by default will be 8.1. Either the Windows SDK should be selected based off the OS version that the user is on or it should default to 10.0  ",Improvement,None,Closed,"2016-07-26 16:24:34","2016-07-26 16:24:34",5
"The Titanium SDK ","Windows: borderRadius for ProgressBar","Implement {{borderRadius}} for {{ProgressBar}}    ",Bug,Medium,Closed,"2016-07-26 06:18:35","2016-07-26 06:18:35",5
"The Titanium SDK ","Hyperloop: example application has a number of errors on the iPhone 5","h4. Observations    ||Page||iPhone 5||iPhone 5s / 6 / 6s||  |View Animation|{color:red}The end state in the animation is a blue square{color}|The end state in the animation is a blue circle|  |Custom Drawing|{color:red}Only one drawn image is showing{color}|Two drawn images a shown|  |Touches|{color:red}When either of the squares are moved they snap to the top right corner and can no longer be moved{color}|The Squares are able to be moved freely|  |Table View|{color:red}Only the headers are shown{color}|The headings are rows are shown|  |Collection view|{color:red}The view is blank{color}|Lots of multicoloured views are shown|  |Libraries/Calendar|{color:red}When a date is clicked the app crashes{color} TIMOB-23679|{color:red}When a date is clicked the app crashes{color} TIMOB-23679|  |Libraries/Charting|{color:red}The view is blank{color}|Three bar charts are shown|  |Donut Chart|{color:red}The chart is in the top right corner{color}|The chart is center|  |Shapes & Animation|{color:red}The Chart is in the top right corner{color}|the chart is center|  |Custom Classes|{color:red}The images are in the top right{color}|The images are center|  |Tinder UI|{color:red}When the image is moved it snaps above your finger to the right{color}|The images are able to be moved freely|    h4. Steps to reproduce:{color:red}{color}  # Download the Hyperloop example application from [here|https://github.com/<USER>hyperloop-examples/]  # Run the application on a iPhone 5 device and any newer device I ran it on a 6 plus and 5s  # Compare the results    h4. Actual  There are several inconsistencies as shown above     h4. Expected  The application should run the same on the iPhone 5 as on the 5s",Bug,Critical,Closed,"2016-07-25 22:33:44","2016-07-25 22:33:44",13
"The Titanium SDK ","Windows: Device is unable to connect to LiveView server","h5.Description    When attempting to build to device, the app will throw the below error when the app loads.        However    * The device and pc are on the same network  * I am able to access the LiveView server by going to http://192.168.2.2:8324 in edge on the device  * I am able to access the apps app.js by going to http://192.168.2.2:8324/app.js in edge on the device    h5.Steps to reproduce    # Ensure you disable the vEthernet switch as noted in TIMOB-23664  # Enable LiveView in Studio  # Build a project to Windows Phone Device  # Try accessing the ip listed in the LiveView error from edge, and also accessing <ip>/app.js    h5.Actual result    The device will not be able to connect to the LiveView server, but the LiveView server can be accessed using edge    h5.Expected result    The device should be able to connect to the LiveView server",Bug,High,Closed,"2016-07-25 16:59:17","2016-07-25 16:59:17",8
"The Titanium SDK ","Android: GCM is eventually being deprecated for FCM","GCM [https://developers.google.com/cloud-messaging/faq] is going to be eventually deprecated for FCM [https://firebase.google.com/docs/cloud-messaging/]    We should be prepared for this and look and identify what different projects/parts we need to update.",Story,High,Closed,"2016-07-25 13:52:45","2016-07-25 13:52:45",0
"The Titanium SDK ","iOS9: Support preferred alert action","iOS 9 offers a way to set a preferred action that is highlighted visually. It's the only alert-component we do not support, yet.","New Feature",Low,Closed,"2016-07-24 16:06:42","2016-07-24 16:06:42",1
"The Titanium SDK ","iOS  - Compilation error","I was working perfectly on iOS, when suddenly this error appeared without change any cody:          Now, I can't compile the app. ",Bug,High,Closed,"2016-05-26 14:36:20","2016-05-26 14:36:20",2
"The Titanium SDK ","Android: Hyperloop - A meaningful error message should appear If you try to stringify an object instance","*Details:* Currently with Android Hyperloop, if you try to stringify an object instance, a {{Uncaught RangeError: Maximum call stack size exceeded}} runtime error is thrown. This is expected, but the returned error message looks like this:      On iOS, if you stringify an object instance, you will get back a meaningful error message:      *Steps to reproduce:*  # Create a Hylperloop enabled project: {{appc new}}  # In the index.js, replace the code with this:    # Install the app to an Android device/emulator: {{appc run -p android}}    *Actual:* A {{RangeError: Maximum call stack size exceeded}} runtime error is thrown; see above for stack trace.    *Expected:* A meaningful message should appear for Android, similar to iOS.",Improvement,Medium,Open,"2016-07-21 20:42:25","2016-07-21 20:42:25",5
"The Titanium SDK ","Receiving Segmentation fault: 11 when trying to build after updating SDK to 5.4.0 from June 6 (or later)","h2. Problem  I'm receiving a seg fault when trying to use any of the latest (from the past 36 hours) Titanium SDKs. Even trying to call help is yielding a seg fault.    Using an older SDK (e.g. 5.4.0.v20160428075219) works just fine.    h2. Test case  {code:lang=none|title=console}  ti sdk install --branch master 6.0.0.v20160607075329  ti sdk select 6.0.0.v20160607075329  ti build -h    h2. Discussions  N/A",Bug,Critical,Closed,"2016-06-07 20:15:54","2016-06-07 20:15:54",34
"The Titanium SDK ","Windows: Install C++ Build Tools for Windows using npm","We recently found [C++ build tools installer for Windows using npm|https://github.com/felixrieseberg/windows-build-tools]. Does this mean it may be possible to setup dev enrivonment for Windows Phone without requesting Visual Studio installation?    Install C++ Build Tools for Windows using npm   https://github.com/felixrieseberg/windows-build-tools    Per dev thread:    {quote}  It's possible we may be able to install the pieces without Visual Studio. This seems to install the C++ build tools and python. We'd also need the SDKs/emulators  It may be useful to open a ticket looking into this. I see we can get the Windows Standalone SDK for Win 10 here: https://go.microsoft.com/fwlink/?LinkID=698771  And emulator here: https://go.microsoft.com/fwlink/?LinkId=698769  That'd be waaaay easier/faster if we could just grab these exes and run them for the user and it magically worked.... Visual Studio install is a pain in the ass. Of course it'd highlight the issues in setting up Win 10 emulators for dev mode that VS magically does for you.  {quote}  ","New Feature",Medium,Open,"2016-07-21 13:09:56","2016-07-21 13:09:56",13
"The Titanium SDK ","ListView Images are displaying incorrectly","I noticed that when building the Corporate Directory app with 5.4.0.Beta, that the images in the list view change unexpectedly when refreshing the ListView content.    Steps to reproduce.  - Open Studio  - Import Corporate Directory App  - Open tiapp.xml  - Change the current Ti SDK version to 5.4.0.v20160712013704  - Build the Corporate Directory app for iOS  - Once the app loads and displays the directory, swipe left on any contact and add that contact as a favorite    Notice that the images for contacts (driven by remote url) change unexpectedly.    Under the covers all that is happening, is that the data of the listView is refreshed ",Bug,High,Closed,"2016-07-21 12:17:37","2016-07-21 12:17:37",3
"The Titanium SDK ","iOS: Hyperloop - Differential build not working","It looks like differential build is not working when hyperloop is used.    h4. Steps to reproduce  1. Create a simple app with hyperloop enabled  2. appc run -p ios  3. change app.js  4. appc run -p ios    h4. Expected Result  trace will show Skipping Xcodebuild    h4. Actual Result  trace shows invoking xcodebuild  Forcing rebuild: Xcode project has changed since last build",Bug,High,Open,"2016-07-21 08:24:43","2016-07-21 08:24:43",8
"The Titanium SDK ","iOS: Hyperloop - Calling [object class] fails on device","Sample that call the {{NSObject}} class method {{class}} (e.g. {{UICollectionView}}) are not working on iOS device but do work well on simulator.    h4. Steps to reproduce  1. <USER>hyperloop-examples  2. Install hyperloop 1.2.3  3. *appc ti build -p ios -T device*  4. on device, choose CollectionView    h4. Expected Result  See lots of boxes of different colors    h4. Actual Result  This error appears:  ",Bug,High,Closed,"2016-07-21 03:22:58","2016-07-21 03:22:58",1
"The Titanium SDK ","iOS: Button setting remote backgroundImage doesn't appear to work","Setting the backgroundImage property with a remote image doesn't appear to be working.    *Demo Code:*      *Test Case:*  Run the app and take a picture.   *Expected Result:*  The two buttons should all have a backgroundImage  one containing a local image, another containing an image from a URL.  *Actual Results*  Passing in a url or local path doesn't work with setBackgroundImage. ",Bug,High,Closed,"2016-07-20 23:54:32","2016-07-20 23:54:32",1
"The Titanium SDK ","[Hyperloop] iOS: custom class is not added to Xcode project and compiled if no other frameworks are being used in the project","Creating a new project, enabling Hyperloop and adding a custom class does not work unless a Cocoa Touch framework is also referenced.    Steps:  * Create new project  * Configure the project for Hyperloop   * Add a custom Obj-C class '{{MyClass}}', declare it in {{appc.js}} and require it in {{index.js}} controller    Result:  * MyClass metabase JS file is generated  * MyClass is not added to the Xcode project and therefore not compiled  * No build-time error, run time error {{Cannot find class with name: MyClass}}    I have tracked down the cause:     Custom classes and frameworks are added to the Xcode project in the plugin {{updateXcodeProject}} function. This function makes this check for content in {{this.nativeModules}}: https://github.com/<USER>hyperloop.next/blob/master/iphone/plugin/hyperloop.js#L672. {{this.nativeModules}} is populated here: https://github.com/<USER>hyperloop.next/blob/master/iphone/plugin/hyperloop.js#L574.    I have attached an example project which demonstrates the error.",Bug,Critical,Closed,"2016-07-20 19:12:01","2016-07-20 19:12:01",5
"The Titanium SDK ","LiveView: vEthernet network connection is selected when building on a Windows system","h5.Description    When building on a Windows system that has Windows Phone Emulators installed LiveView seems to always pick the {{vEthernet (Internal Ethernet Port Windows Phone Emulator Internal Switch)}} network connection meaning that devices are unable to connect to the liveview server as this is an internal network connection used solely for emulators    *Note*    I believe that ipv4 address for this adapter is always 169.254.80.80    *Workaround*    To workaround this issue, disable the switch in Network and Connections.    # Go to Control Panel  # Open Network and Sharing Centre  # Click  Change adapter settings  # Right click vEthernet and click Disable    *This will mean you will not be able to build for Windows Phone Emulators, be sure to enable this when you are finished*    h5.Steps to reproduce    # Ensure you have Windows Phone Emulators installed and that you see the vEthernet switch in Network Connections  # Enable LiveView from Studio  # Build for Android  # Disable the vEthernet switch in Network and Connections  # Build for Android    h5.Actual result    At step 3 the LiveView connection will not be successful     At step 5 the LiveView connection will be successful    h5.Expected result    The LiveView connection should be successful in both cases",Bug,High,Closed,"2016-07-20 15:58:58","2016-07-20 15:58:58",0
"The Titanium SDK ","Hyperloop: metabase binary does not have execute permission","Hyperloop metabase generation fails with global Hyperloop module due to metabase command not having execute permission:    ",Bug,None,Resolved,"2016-07-20 14:28:37","2016-07-20 14:28:37",0
"The Titanium SDK ","Windows: can't detect Windows Phone SDK if no emulator installed","Studio and CLI can't find the windows phone SDK, even in a clean install.  Other user had the same problem and, installing the Windows Phone emulator the problem was solved.  My problem is that I cannot install WP emulator because my CPU is old and doesn't has support for SLAT.    In another modern PC with SLAT and emulator installed, WP SDK is detected correctly.    Some screenshots provided.    I need WP SDK to be detected to be able to build for WP.",Bug,Critical,Closed,"2016-07-20 14:23:14","2016-07-20 14:23:14",8
"The Titanium SDK ","Windows: Remove the concept of a selected Windows SDK in ti info","h5.Description    Currently when running {{appc ti info \-t windows}} the CLI will print out the below, showing a 'selected' SDK. This is confusing to a user as there is no way for them to actually select an SDK for it to be shown in the output, all selection is done during build time depending on the {{--wp-sdk}} value passed in or the OS version on the device/emulator. To stop this confusion  {{(selected)}} should be removed    ",Improvement,None,Closed,"2016-07-20 13:21:27","2016-07-20 13:21:27",3
"The Titanium SDK ","Windows: Implement Ti.UI.TableView separatorColor property","Implement {{separatorColor}} property for {{Ti.UI.TableView}}.    *Sample Code*    ",Improvement,Medium,Closed,"2016-07-20 04:47:20","2016-07-20 04:47:20",5
"The Titanium SDK ","Windows: Ti.UI.Label.border* properties do not work when not using width and height","{{Titanium.UI.Label}} disappears if any {{border*}} properties are used and {{width}} and {{height}} are not defined.    ",Bug,Medium,Closed,"2016-07-19 20:20:25","2016-07-19 20:20:25",5
"The Titanium SDK ","Windows: borderRadius does not work for some components","{{borderRadius}} is not implemented for the following components:    - Button  - ScrollView  - WebView  - TextField  - ScrollableView  - Switch  - TextArea  - SearchBar  - Slider    It is likely that these components need {{Windows::UI::Xaml::Controls::Grid^}} parents.    *TEST CASE*      - WebView      {{PickerColumn}} was not suitable to fix    *Before Fix*  - {{borderRadius}} would have no effect on the components    *After Fix*  - A {{borderRadius}} is displayed  ",Bug,Medium,Closed,"2016-07-19 20:15:13","2016-07-19 20:15:13",13
"The Titanium SDK ","Windows: Implement Ti.Media.requestCameraPermissions/hasCameraPermissionsmethods to match iOS and Android behaviour","h5.Description    As part of TIMOB-19479 the media permissions was rewritten to be consistent across iOS and Android and use Ti.Media.requestCameraPermissions/hasCameraPermissions. Windows should move to match iOS and Android. A code sample can be found below        h5.Steps to reproduce    # Run the code above on Windows Platform {{appc run -p windows }}    h5.Actual result    The app will throw an error as the methods are not implemented      h5.Expected result    You should be prompted to allow camera access    ",Improvement,High,Closed,"2016-07-19 18:31:17","2016-07-19 18:31:17",5
"The Titanium SDK ","Windows: Implement Ti.Geolocation.requestLocationPermissions/hasLocationPermissions methods to match iOS and Android behaviour","h5.Description    As part of TIMOB-19479 the Gelocation permissions was rewritten to be consistent across iOS and Android and use Ti.Geolocation.hasPermissions. Windows currently uses a different way to request permissions that can be seen in TIMOB-23389, however it should move to match iOS and Android. A code sample can be found below and a real world example found [in Geocoder|https://github.com/<USER>developer-relations/appc-sample-geocoder/blob/stable/app/lib/permissions.js#L59]        Additionally to this Ti.Geolocation.hasLocationPermissions should also be implemented to allow a user to check if permissions have already been granted    h5.Steps to reproduce    # Run the code above on Windows Platform {{appc run -p windows }}    h5.Actual result    You should be prompted to allow location    h5.Expected result    The app will throw an error as the methods are not implemented",Improvement,High,Closed,"2016-07-19 17:41:41","2016-07-19 17:41:41",5
"The Titanium SDK ","Windows: Animation returns to original opacity property when finished","h5.Description    When using the code below, when the animation is complete the opacity property will be what it was set to before the animation started.        *This a regression that first appears in 5.3.0.GA,*    *Workaround*    As a workaround add an eventListener for the complete event and then set the property as required like below          h5.Steps to reproduce    # Using the code above, build for Windows Platform {{appc run -p windows -T wp-emulator -C 10-0-1}}  # Click the screen      h5.Actual result    At the end of the animation the opacity of the image will return to the original value      h5.Expected    The value at the end of the animation should be what is defined in the animation",Bug,None,Closed,"2016-07-19 14:55:20","2016-07-19 14:55:20",5
"The Titanium SDK ","iOS10: Unable to build Hyperloop projects containing Swift sources","When using swift sources in iOS 10 with Hyperloop (e.g. the [hyperloop-examples|https://github.com/<USER>hyperloop-examples] project), the problem fails with the following log: https://gist.github.com/hansemannn/7645aad70c821557cc6a99802b4a59ad    The main error is  {quote}  [ERROR] <unknown>:0: warning: using sysroot for 'iPhoneSimulator' but targeting 'MacOSX'  {quote}    I guess it is a dynlib that is hardcoded somewhere and / or the renaming from MacOSX to macOS.    Steps to reproduce:  1. Download the latest Hyperloop version from [here|https://github.com/<USER>hyperloop.next/releases]  2. Include the module in the hyperloop-examples project  3. Run the project    Expected behavior:  The build finishes successfully and you can access the Swift example    Actual behavior:  The build fails with the above error",Bug,High,Closed,"2016-07-19 07:36:34","2016-07-19 07:36:34",8
"The Titanium SDK ","Use per-platform moduleAPIVersions in the SDK manifest.json","We need the ability to version the module API's at the platform level (and not globally). We updated Android/V8 so only need to bump the moduleAPIVersion to 3 there, but retain 2 on iOS. For the SDK, this involves using an object value for moduleAPIVersion property. I propose that the object have the platform ids as the keys and the api version as the value, like so:    ",Improvement,High,Closed,"2016-07-14 07:38:09","2016-07-14 07:38:09",3
"The Titanium SDK ","Android: Button source missing properties on bubbleParent event.","I have listview with button inside the items. I have set a click event function but it don't return custom button's properties. In iOS it works fine.            When I click on button in eventFunction I expect to find e.source.customProperty1 but e.source don't contain it. Why? In iOS I find the properties as expected. I have tried moving events param inside the button template but the result is the same.    Is it a bug?",Bug,High,Closed,"2016-07-03 09:02:50","2016-07-03 09:02:50",8
"The Titanium SDK ","Android: Ti.UI.ScrollView never fires postlayout event","Ti.UI.ScrollView should fire a postlayout event just like most of the other Ti.UI.View subclasses do. It never does, so any UI tests we have relying on post layout listeners time out on Android.    http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.ScrollView-event-postlayout",Bug,Critical,Closed,"2016-07-14 20:30:03","2016-07-14 20:30:03",2
"The Titanium SDK ","Windows: list section instertItemsAt not working","I want to add row to the top pf the list (0 index of row), but instead of this section adding row to the end.    index.xml:          index.js:           ",Bug,High,Closed,"2016-06-29 17:40:34","2016-06-29 17:40:34",5
"The Titanium SDK ","Windows: Updating a tableviewsection with the index of a deleted tableviewsection adds the deleted tableviewsection back","h5.Description    When calling updateSection for a tableviewsection with the index number that once referenced a deleted section, it appears that the deleted section is updated and readded to the tableview.    The code below does the following:    # Create a tableview with two sections  # When the window opens, delete the section at index 1 and append a new section  # When a tableviewrow is clicked, update the section at index    On Android and iOS this code works as expected, with the title of the 2 section being updated        h5.Steps to reproduce    1. Using the code above, build for Windows Platform using {{appc run -p windows -T wp-emulator}}  2. Tap one of the rows in the first section    h5.Actual result    There are now 3 sections Fruit, updateSection and newSection    h5.Expected result    There should only be 2 sections Fruit and updateSection ",Bug,Medium,Closed,"2016-07-14 17:15:25","2016-07-14 17:15:25",5
"The Titanium SDK ","Android: Unable to debug an application with newer V8","h5.Description    When debugging a project on Titanium SDK 6.0.0+ on Android, the debugger does not work at all.",Bug,Critical,Closed,"2016-07-14 14:31:27","2016-07-14 14:31:27",13
"The Titanium SDK ","Windows: Titanium object creation takes too long","I recently found that one the performance bottleneck of Titanium Windows is occurs during object creation ({{Ti.createXXX}} etc). On my Lumia 630 I observed it takes almost 1 second to create 100 proxy object, and it can be serious issue especially on app startup because Windows Phone tend to kill the app when app startup takes too long.    *Sample code*          ",Improvement,High,Closed,"2016-07-14 12:01:41","2016-07-14 12:01:41",8
"The Titanium SDK ","Failed watchOS pairing will silently fail appc run without error","Changing watch pairings within Xcode result in orphaned watchOS simulators which are still being reported as available by ioslib. When trying to build an app and run it on the simulator, `appc run` just silently fails, without reporting any error.     h4. Steps to reproduce  1. *appc new --classic*  2. Enter project root  3. *appc new -t applewatch*  4. Open Xcode and change the watch pairing for an iOS device under Window > Devices (e.g. remove the existing watch and add a new one)  5. *appc run -p ios -I 10.0 --launch-watch-app -l trace*    h4. Expected result  App launches successfully with both iOS and watch simulators    h4. Actual result  appc run exits without any error and no simulators are being launched    ",Bug,Low,Closed,"2016-07-13 22:00:48","2016-07-13 22:00:48",5
"The Titanium SDK ","iOS: Toolbar on TextField doesn't hide smoothly when calling blur","Setup:      >Textfield with a Ti.UI.IOS.Toolbar with one button.  >Click eventlistener on the button which calls .blur() on the textfield    The keypad slides down, leaving the Toolbar at the top.  When the keypad has slid off the page, only then does the Toolbar start to slide down.    Here's a slow-mo GIF: http://i.stack.imgur.com/x2zc2.gif     Sample code:    Causes a noticeable flash for the user.      <TextField id=txt_contactNumber class=txt_inputshort>            <KeyboardToolbar>                  <Toolbar id=numberToolbar bottom=0>                      <Items>                          <Button id=flexSpace systemButton=Ti.UI.iPhone.SystemButton.FLEXIBLE_SPACE />                          <Button id=cancelContact systemButton=Ti.UI.iPhone.SystemButton.DONE />                      </Items>                  </Toolbar>              </KeyboardToolbar>          </TextField>    $.cancelContact.addEventListener('click', function(){      $.txt_contactNumber.blur();  });",Bug,Medium,Closed,"2014-11-12 04:17:07","2014-11-12 04:17:07",5
"The Titanium SDK ","recent update to titanium_mobile breaks API change script","Changes made in https://github.com/<USER>titanium_mobile/commit/43f2dc8e17c184a7b5b0e50792ab9b0f3d9dcccd#diff-297c1fc19b7b017b4a6d8856e9184fcd breaks my script that generates API changes for the SDK release note. Error message:    ",Bug,Medium,Closed,"2016-07-13 17:08:21","2016-07-13 17:08:21",1
"The Titanium SDK ","Android: Unable to debug an application with run-on-main-thread set to true","h5.Description    When debugging a project with run-on-main-thread enabled the breakpoints will not be hit.    h5.Steps to reproduce    # Create an alloy application from Studio with services disabled  # Place a breakpoint in index.js on line 2  # Debug the application on device  # Press the 'Hello World' label  # Enable hyperloop for the project by clicking the 'Enable Services' button or add {{<property name=run-on-main-thread type=bool>true</property>}} to the tiapp.xml  # Debug the application  # Press the 'Hello World' label    h5.Actual result    The breakpoint is hit in step 4 but not in step 7    h5.Expected result    The breakpoint should be hit in step 4 and 7",Bug,High,Closed,"2016-07-12 17:51:53","2016-07-12 17:51:53",5
"The Titanium SDK ","Calendar, Contacts and Camera can crash on iOS 10 / Xcode 8","Apps built with iOS 10 and Xcode 8 can crash when the user accesses different API's (Camera, Calendar & Contacts). After some research, this is because iOS 10 and later required the following keys that have been introduced back in iOS 6:  - {{NSContactsUsageDescription}}  - {{NSCameraUsageDescription}}  - {{NSCalendarsUsageDescription}}  - {{NSMicrophoneUsageDescription}}    They are similar to the {{NSLocationWhenInUseUsageDescription}} and {{NSLocationAlwaysUsageDescription}} keys that need to be added to the plist. So this issue is more a docs ticket which we need to update and mention in the 6.0.0 release notes, so people know to add these keys.    Further links:   - https://developer.apple.com/library/prerelease/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html  - https://forums.developer.apple.com/thread/51239",Bug,Critical,Closed,"2016-07-12 12:46:24","2016-07-12 12:46:24",7
"The Titanium SDK ","Windows: Progressive loading for ListView/TableView","Currently {{TableView}} and {{ListView}} has performance issue where it can not load chunk of data at once because it requires a lot of CPU/memory resource. We might want to introduce UI virtualization or progressive data loading or something like that so that we can load data as many as possible.    Per comments in TIMOB-23411    {quote}  I'm guessing we need to do some deep looks into trying to optimize our usage of the ListView implementation under the hood to avoid these issues.    I'm guessing perhaps the way the controls are nested, we're hitting a use case where the phone's UI virtualization for the ListView is defeated. See https://msdn.microsoft.com/windows/uwp/debug-test-perf/optimize-gridview-and-listview     The critical portion being:  bq. The concept of a viewport is critical to UI virtualization because the framework must create the elements that are likely to be shown. In general, the viewport of an ItemsControl is the extent of the logical control. For example, the viewport of a ListView is the width and height of the ListView element. Some panels allow child elements unlimited space, examples being ScrollViewer and a Grid, with auto-sized rows or columns. When a virtualized ItemsControl is placed in a panel like that, it takes enough room to display all of its items, which defeats virtualization. Restore virtualization by setting a width and height on the ItemsControl.    Lots more links out there on GridView/ListView performance problems:    - https://blogs.msdn.microsoft.com/alainza/2014/09/03/listview-basics-and-virtualization-concepts/  - https://www.interact-sw.co.uk/iangblog/2014/07/15/phone-listview-grouping  - http://nanovazquez.com/2013/11/28/windows-8.1-gridview-and-listview-performance-improvements/  - http://stackoverflow.com/questions/28944705/multiple-listview-ui-virtualization  - http://mikaelkoskinen.net/post/winrt-xaml-gridview-performance-problems-on-windows-rt-tablets      Long story short? First make sure you explicitly set a size on the ListView impl and not let it FILL, or it'll never virtualize. Second, it looks like sometimes grouping can basically kill UI virtualization as well, as each group effectively becomes auto-scaled in size to contain it's items.  {quote}    We also want to tackle with performance difference between {{TableView}} and {{ListView}}, currently creating ListView data is 5x times slower than TableView. It is likely because ListView is relatively complex component with custom template support, but we'd like to close the gap as much as we can.    *TableView*        *ListView*      ",Improvement,Medium,Open,"2016-07-12 01:58:26","2016-07-12 01:58:26",13
"The Titanium SDK ","iOS: Ti.userAgent ignored for Ti.Network.HTTPClient operations","According to the documentation, we should be able to set the user agent string used by Titanium: http://docs.<USER>com/platform/latest/#!/api/Titanium-property-userAgent    iOS allows you to set the property value, but effectively ignores it. We use our own hard-coded value.    We should likely continue to use our own value internally for things like analytics/geolocation/etc, and use the user-supplied one for Ti.network.HTTPClient operations. Give that usage, we may want to even make Ti.userAgent read-only and have a userAgent property on Ti.Network.HTTPClient.",Bug,High,Closed,"2016-07-11 19:41:51","2016-07-11 19:41:51",8
"The Titanium SDK ","iOS: Ti.setUserAgent() doesn't exist","The documentation says that we can set Ti.userAgent via a setter method: http://docs.<USER>com/platform/latest/#!/api/Titanium-property-userAgent    That method does not exist on iOS.",Bug,High,Closed,"2016-07-11 19:40:26","2016-07-11 19:40:26",5
"The Titanium SDK ","Android: Unable to set Ti.userAgent","The documentation says that we can set Ti.userAgent: http://docs.<USER>com/platform/latest/#!/api/Titanium-property-userAgent    Android has no setUserAgent() method, and the property is not writable.",Bug,High,Closed,"2016-07-11 19:39:53","2016-07-11 19:39:53",5
"The Titanium SDK ","Windows: Improve error message when passing an invalid number of arguments to a function ","h5.Description    When calling a function that has a minimum required number of args, in the example provided I use the appendRow method with only 1 argument, the error below is printed out        However when building for Android the following error is thrown, which explains the reason for the error        Demo code        h5.Steps to reproduce    1. Using the code above build for Windows Platform using {{appc run -p windows -T wp-emulator}}    h5.Actual result    The first error will be shown, which gives the user no help in diagnosing the issue    h5.Expected result    An error similar to the Android error should be shown, informing the user why the error was thrown",Improvement,None,Closed,"2016-07-11 17:09:29","2016-07-11 17:09:29",5
"The Titanium SDK ","ioslib fails to choose a watch simulator under Xcode 8.0 Beta","Trying to build app and run it on the simulator errors out with watch app on Xcode 8.0 beta    h4. Steps to reproduce  1. *appc new --classic*  2. Enter project root  3. *appc new -t applewatch*  4. *appc run -p ios -I 10.0 --launch-watch-app -l trace*    h4. Expected result  App launches successfully with both iOS and watch simulators    h4. Actual result  Build fails with the following error:    ",Bug,High,Closed,"2016-07-11 15:58:02","2016-07-11 15:58:02",3
"The Titanium SDK ","Windows: Problem adding eventlistener twice to Ti.UI.ImageView ","1. Add eventListener to ImageView  2. Click ImageView  3. Remove eventListener  4. Add same eventListener again.  5. Click ImageView  6. Notice that the last click event will not be fired    index.xml      index.js  ",Bug,Critical,Closed,"2016-06-17 08:45:27","2016-06-17 08:45:27",5
"The Titanium SDK ","iOS10: Titanium with Swift Watch App fails to build on Xcode 8.0 Beta","Build Errors out when trying to build app with watchapp on Xcode 8.0 beta    h4. Steps to reproduce  1. *appc new --classic*  2. Enter project root  3. *appc new -t applewatch*  4. *appc run -p ios -I 10.0 --launch-watch-app -l trace*    h4. Expected result  App launches successfully with both iOS and watch simulators    h4. Actual result  Build fails with the following error:      *Note* It's likely to do with the support for the right swift versions, and the template we used to generate the watch extension should be updated (and remain backward compatible)  Also, if you can get past this and it fails with a different error related to Xcode 8.0 beta (https://jira.<USER>org/browse/TIMOB-23518) You can work around by commenting out this line:  https://github.com/<USER>titanium_mobile/blob/master/iphone/cli/commands/_build.js#L5938  temporarily    [~hansknoechel] please help if necessary.",Bug,Critical,Closed,"2016-07-05 04:05:04","2016-07-05 04:05:04",8
"The Titanium SDK ","Android: Improve Ti.Android.requestPermissions() documentation","There can be improvement in the documentation for Ti.Android.requestPermissions(). This ticket is to do that.",Improvement,Medium,Closed,"2016-07-04 04:45:29","2016-07-04 04:45:29",2
"The Titanium SDK ","Builds page doesn't list Windows Phone","The build page says the Windows Download includes Android and Mobile Web. It of course also includes Windows Phone, but it doesn't tell. It should be added.",Story,Critical,Closed,"2016-06-27 10:19:09","2016-06-27 10:19:09",2
"The Titanium SDK ","Windows: read-only properties incorrectly identify themselves as configurable","Properties like apiName on all proxies, or Ti.App.version are marked as read-only properties in our docs. That means the user should not be able to overwrite their values or delete them.On Windows, we cannot delete the property, but the common way of checking is to look at the configurable value of the property descriptor. That is oddly reporting true (which should mean it can be deleted).    ",Bug,Critical,Closed,"2016-07-01 20:38:32","2016-07-01 20:38:32",5
"The Titanium SDK ","Windows: View gets snapped back to center when animating using the right property","h5.Description    When animating a view and using the {{right}} property the view gets snapped back to the centre when the animation has completed.    This only happens for the right property, left, top and bottom work as expected.        h5.Steps to reproduce    # Using the code above build to Windows Emulator or device  # Click the red box    h5.Actual result    When the animation has finished the view will snap back to the centre of the screen    h5.Expected result      When the animation has finished the view should not snap back to the centre of the screen",Bug,None,Closed,"2016-07-01 15:21:28","2016-07-01 15:21:28",5
"The Titanium SDK ","Android: Update Module CI build scripts to build against 6.0.0 of SDK with newer V8/moduleApiVersion","Our current Module CI scripts assume building against an older SDK version with an older module API version for Android (something like 5.2.1.GA). We need to be able to build against master/6.0.0 builds of the SDK against the updated V8 APIs.",Story,High,Closed,"2016-07-01 15:08:30","2016-07-01 15:08:30",8
"The Titanium SDK ","Android: Recompile ti.urbanairship module against latest SDK","ti.urbanairship: https://github.com/<USER>modules/ti.urbanairship    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:59:38","2016-07-01 14:59:38",3
"The Titanium SDK ","Android: Recompile ti.touchid module against latest SDK","ti.touchid: https://github.com/<USER>modules/ti.touchid    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:58:57","2016-07-01 14:58:57",3
"The Titanium SDK ","Android: Recompile ti.paypal module against latest SDK","ti.paypal: https://github.com/<USER>modules/ti.paypal    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:58:31","2016-07-01 14:58:31",3
"The Titanium SDK ","Android: Recompile ti.omniture module against latest SDK","ti.omniture: https://github.com/<USER>modules/ti.omniture    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:58:10","2016-07-01 14:58:10",3
"The Titanium SDK ","Android: Recompile ti.moddevguide module against latest SDK","ti.moddevguide: https://github.com/<USER>modules/ti.moddevguide    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:57:51","2016-07-01 14:57:51",3
"The Titanium SDK ","Android: Recompile ti.map module against latest SDK","ti.map: https://github.com/<USER>modules/ti.map    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:57:09","2016-07-01 14:57:09",3
"The Titanium SDK ","Android: Recompile ti.ldap module against latest SDK","ti.ldap: https://github.com/<USER>modules/ti.ldap    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:56:40","2016-07-01 14:56:40",3
"The Titanium SDK ","Android: Recompile ti.imagefactory module against latest SDK","ti.imagefactory: https://github.com/<USER>modules/ti.imagefactory    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:56:22","2016-07-01 14:56:22",3
"The Titanium SDK ","Android: Recompile ti.geofence module against latest SDK","ti.geofence: https://github.com/<USER>modules/ti.geofence    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:56:03","2016-07-01 14:56:03",3
"The Titanium SDK ","Android: Recompile ti.facebook module against latest SDK","ti.facebook: https://github.com/<USER>modules/ti.facebook    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:55:22","2016-07-01 14:55:22",3
"The Titanium SDK ","Android: Recompile ti.crypto module against latest SDK","ti.crypto: https://github.com/<USER>modules/ti.crypto    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:55:05","2016-07-01 14:55:05",3
"The Titanium SDK ","Android: Recompile ti.compression module against latest SDK","ti.compression: https://github.com/<USER>modules/ti.compression    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:54:47","2016-07-01 14:54:47",3
"The Titanium SDK ","Android: Recompile ti.cloudpush.mqtt module against latest SDK","ti.cloudpush.mqtt: https://github.com/<USER>modules/ti.cloudpush.mqtt    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:54:26","2016-07-01 14:54:26",3
"The Titanium SDK ","Android: Recompile ti.admob module against latest SDK","ti.admob: https://github.com/<USER>modules/ti.admob    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:54:03","2016-07-01 14:54:03",3
"The Titanium SDK ","Android: Recompile cloudpush module against latest SDK","cloudpush: https://github.com/<USER>modules/cloudpush    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:53:15","2016-07-01 14:53:15",3
"The Titanium SDK ","iOS/Android: Recompile appcelerator.syncserver.client module against latest SDK","<USER>syncserver.client: https://github.com/<USER>modules/<USER>syncserver.client    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:52:54","2016-07-01 14:52:54",3
"The Titanium SDK ","Android: Recompile appcelerator.https module against latest SDK","<USER>https: https://github.com/<USER>modules/<USER>https    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:52:25","2016-07-01 14:52:25",3
"The Titanium SDK ","Android: Recompile appcelerator.encrypteddatabase module against latest SDK","<USER>encrypteddatabase: https://github.com/<USER>modules/<USER>encrypteddatabase    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:52:03","2016-07-01 14:52:03",3
"The Titanium SDK ","Android: Recompile appcelerator.apm module against latest SDK","<USER>apm: https://github.com/<USER>modules/<USER>apm    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:50:43","2016-07-01 14:50:43",3
"The Titanium SDK ","Android: Recompile appcelerator.aca module against latest SDK","<USER>aca: https://github.com/<USER>modules/<USER>aca    Generally this requires some minor changes to each module:  - bump the module's version up to the next major (i.e. 2.3.1 -> 3.0.0)  - bump the module's apiversion to 3 (for Android)  - bump the minsdk to 6.0.0 (for Android)  At a higher level, we'll need to update our CI build scripts for modules to use the master branch SDK to build against, and Android NDK r11c.",Story,High,Closed,"2016-07-01 14:50:17","2016-07-01 14:50:17",3
"The Titanium SDK ","Add support for iOS 9 Text Style additions","iOS 9 added additional styles (constants) to [Font.textStyle|http://docs.<USER>com/platform/latest/#!/api/Font-property-textStyle].  These should be added to the Ti SDK to allow complete support of accessibility features of iOS.    Missing constants:    * TEXT_STYLE_TITLE1  * TEXT_STYLE_TITLE2  * TEXT_STYLE_TITLE3  * TEXT_STYLE_CALLOUT",Improvement,High,Closed,"2016-07-01 14:19:29","2016-07-01 14:19:29",2
"The Titanium SDK ","iOS: on widget's controller WPATH doesn't work as expected","In a widget I used an ImageView with multiple images, loaded by WPATH. It worked until version 5.0.2.  In my widget I have images loading_x.png inside assets/images.    The widget is this one:  https://github.com/apra-informatica/Ti.ImageGallery/blob/master/controllers/widget.js    And the code:   spinnerImages = [    WPATH('/images/loading_1.png'),    WPATH('/images/loading_2.png'),    WPATH('/images/loading_3.png'),   ];   spinner = Ti.UI.createImageView({    'backgroundColor' : 'transparent',    'width' : '64dp',    'height' : '64dp',    'images' : spinnerImages   });    It writes:  [ERROR] :  couldn't load imageview image: /images/it.apra.tiimagegallery/loading_1.png at position: 0",Bug,Critical,Resolved,"2016-01-04 17:48:15","2016-01-04 17:48:15",5
"The Titanium SDK ","Module crashes when upgrading from 5.1.x to 5.2.x","I have a private iOS module, available on request. The module crashes on SDK > 5.2.x.     iOS only, Android module working fine. Related to Geolocation possibly.    Don't forget to request permissions in tiapp.xml.    1) Running in 5.1.1.GA you should see a blue dot on the device location.  2) Running 5.2.x app will crash immediately on (mapview.addLocationLayer()).",Bug,Critical,Closed,"2016-06-30 16:04:31","2016-06-30 16:04:31",3
"The Titanium SDK ","Android 4.3: Error - Handle double clicked on views. (android)","h6. Issue Description  If we do a double click on a button, it opens two windows. This only happens in Android ver 4.3 and API 18. We tested on latest version of Android and do not see any issue.    h6. Steps to Reproduce  1. Create a new <USER>alloy project for Android  2. Copy the view directory files into the new project created.(views.zip attached)  3. Copy the Controller directory files into the new project.(controllers.zip attached)  4. Copy the style directory files into the project.(styles.zip attached)      h6.  Expected Results  Clicking on button should create only single window",Bug,High,Closed,"2016-06-29 23:09:41","2016-06-29 23:09:41",5
"The Titanium SDK ","Windows: CLI does not check correct directories when detecting app icons","h5.Description    When building for Windows Platform currently the following is performed when generating app icons, [as seen in the code|https://github.com/<USER>titanium_mobile_windows/blob/master/cli/commands/_build/copy.js#L343-L344]    # Check for icon in <project_dir>\app\assets\windows  # Check for icon in <project_dir>\  # Check for presence of <project_dir>\DefaultIcon-windows.png and generate using this if it exists  # Check for presence of <project_dir>\DefaultIcon.png and generate using this if it exists    To be in parity with other platforms the locations should be changed to the following in this order:    # Check for icon in <project_dir>\Resources\windows\  # Check for icon in <project_dir>\Resources\  # Check for <project_dir>\DefaultIcon-windows.png and generate using this if it exists  # Check for <project_dir>\DefaultIcon.png and generate using this if it exists    h5.Steps to reproduce    # Build a classic Titanium project for the Windows Platform using {{appc run -p windows -T wp-device --build-only}}  # Copy the icons from {{<project_dir>\build\windows\Assets\}} to {{<project_dir>\Resources\windows\}}  # Build the project using {{appc run -p windows -T wp-device --build-only}}  #  Copy the icons from {{<project_dir>\build\windows\Assets\}} to {{<project_dir>\Resources\}}  # Build the project using {{appc run -p windows -T wp-device --build-only}}    h5.Actual result    In both step 3 and 5, app icons will be generated    h5.Expected result    In both step 3 and 5, app icons should not be generated as they are located in the correct locations",Bug,None,Closed,"2016-06-29 16:40:18","2016-06-29 16:40:18",5
"The Titanium SDK ","Windows: Support Ti.UI.ImageView.reverse","Add support for {{Titanium.UI.ImageView.reverse}} in image sequences.    ",Improvement,Medium,Closed,"2016-06-29 11:19:54","2016-06-29 11:19:54",3
"The Titanium SDK ","iOS/Android: Add the ability to remove all Ti.App.Properties at once","The user should be able to remove all {{Ti.App.Properties}} at once. On iOS, the method is even (partly) exposed, yet, but not to the public interface. On Android, we need to implement that method completely.",Improvement,Medium,Closed,"2016-06-29 04:48:43","2016-06-29 04:48:43",3
"The Titanium SDK ","Hyperloop: iOS - Support use_frameworks flag in Cocoapods","When use_frameworks! is included in Podfile, linking fails due to the framework being looked for in the wrong location.  Even if the framework is placed in the expected location, the app will crash upon execution.  Details provided below.    I discovered this issue while trying to use a swift Cocoapod, but it is easily reproduced using the Hyperloop_Sample app as well.  I will describe steps to reproduce for both cases.    1. For Hyperloop_Sample, simply add `use_frameworks!` to the beginning of Podfile and change the platform to 8.0 (frameworks only supported in iOS 8+).  Change the min-ios-ver to 8.0 in tiapp.xml as well.  As expected, instead of creating static libraries, frameworks for each pod are created instead.  These can be seen inside of `build/Release-iphonesimulator`.  The first issue comes during linking.  The framework is expected to be at `build/iphone/build/Products/Debug-iphonesimulator` as seen in the attached build log (see Sample.log), search for GLCalendarView to see the expected location of the framework on line 4466.  I then tried manually copying the 3 frameworks from `build/Release-iphonesimulator` to `build/iphone/build/Products/Debug-iphonesimulator` which allows the app to be built, but when it runs on the simulator, immediately crashes, see the attached crash log (Sample.crash).  I'm not real sure what the problem is, just that the error is Library not loaded for reason image not found.    2. Next, I created a new project, enabled hyperloop, then tried to use a swift cocoapod.  Swift pods require use of `use_frameworks!`, so without this issue being resolved, we will be unable to use any swift pods.  I've attached my Podfile (see Podfile).  I tried building without referencing the pod in the Podfile, just to test, and while the app builds, it crashes as well, see (swift.crash).",Bug,High,Closed,"2016-06-22 15:35:36","2016-06-22 15:35:36",8
"The Titanium SDK ","SDK Release containing 2 Bug Fixes","Hi there, I have 2 issues on my application and they are resolved on different versions:     1. webview upload error on android  BUG resolved: https://jira.<USER>org/browse/TIMOB-23229,    2. Google security alert  http://www.<USER>com/blog/2016/03/update-on-recent-google-security-alerts/  [appc] ti sdk install -b 4_1_X 4.1.1.v20160311104258     Is there any build that resolves these 2 bugs? I can't find any build that fix both issues.  ",Bug,Medium,Closed,"2016-06-13 14:17:39","2016-06-13 14:17:39",3
"The Titanium SDK ","Windows: JSON.stringify against Blob causes app freeze","{{JSON.stringify}} against {{Blob}} causes crash, or app freeze.      ",Bug,Medium,Open,"2016-06-28 03:43:55","2016-06-28 03:43:55",5
"The Titanium SDK ","iOS: Close all navigation windows at once","On iOS, the user can close all current windows that are opened in a navigation window at once (instead of closing all manually). It is commonly used, so we should expose it as well.    Proposed API: {{Ti.UI.iOS.NavigationWindow.popToRootWindow}}","New Feature",Medium,Closed,"2016-06-28 02:22:02","2016-06-28 02:22:02",2
"The Titanium SDK ","iOS: Support global tintColor","iOS offers a way to set a global {{tintColor}} to be inherited to all child-views. It's a very common concept to ease the branding of the UI and should be used in Titanium as well.    Proposed namespace: {{Ti.UI.tintColor}} - Setter: {{Ti.UI.setTintColor}}",Improvement,Medium,Closed,"2016-06-27 21:18:18","2016-06-27 21:18:18",2
"The Titanium SDK ","iOS: TintColor for ImageView (Parity)","Adding tintColor property to iOS using {{UIImageRenderingModeAlwaysTemplate}}    h2. Demo  ",Improvement,Medium,Closed,"2016-06-27 21:06:28","2016-06-27 21:06:28",2
"The Titanium SDK ","Windows: 'possible EventEmitter memory leak detected' warning when building Windows Platform module","h5.Description    When building a Windows Platform module the following warning is shown        This warning is shown when building with {{appc run}} or {{ti build}}, it is not shown when building an Android module    h5.Steps to reproduce    # Create a windows module using {{appc new -t timodule -n winmodule --id com.winmodule}}  # {{cd winmodule\windows}}  # Build the module using {{appc run -p windows --build-only}} or {{ti build -p windows --build-only}}    h5.Actual result    The warning shown in the description is printed out    h5.Expected result    No warning should be printed out",Bug,None,Closed,"2016-06-27 18:51:47","2016-06-27 18:51:47",5
"The Titanium SDK ","Windows: Setting images on ImageView will crash the app","When setting an array of images to an imageview the app crashes. Attached are array of images used. When the images array is stripped out and replaced by image and just the first image it will not crash but show the image.    This is code:          ",Bug,High,Closed,"2016-06-27 13:08:37","2016-06-27 13:08:37",8
"The Titanium SDK ","SDK no longer installed in uniquely named folder","h5.Description     When installing an SDK the SDK is no longer placed in a folder named using the unique named of the SDK. Instead, it is simply placed in a folder titled {{6.0.0}}.    h5.Steps to reproduce  # Install the latest master branch SDK {{ti sdk install -b master -d}}  # Check the SDK folder {{dir C:\ProgramData\Titanium\mobilesdk\win32}} or {{ls /Users/$USER/Library/Application\ Support/Titanium/mobilesdk/osx}}    h5.Actual result    The latest installed SDK from master branch will be in a folder named 6.0.0    h5.Expected result    The latest installed SDK from master branch should be in a folder named with it's unique name",Bug,High,Closed,"2016-06-27 10:50:19","2016-06-27 10:50:19",2
"The Titanium SDK ","Windows: target win sdk attribute in timodule.xml","Currently {{timodule.xml}} in Windows module project is not used at all. But in order to align with how it's used in other platforms, we may need to have a way to specify target Windows sdk version attribute in it.    To be specific, to align with other platform attributes, it would be {{<uses-sdk targetSdkVersion=10.0 />}}.        When {{targetSdkVersion}} is specified, Windows module build should take the value as target Windows sdk version. Currently Windows 10 support is built by default whenever Windows 10 sdk is available, but you should be able to remove it by explicitly specifying {{8.1}} for it.    *Steps*        Then update {{timodule.xml}} to explicitly specify {{8.1}}.        Then build the module and make sure packaged zip doesn't contain {{win10}} folder in it.      ","New Feature",Medium,Closed,"2016-06-27 06:58:28","2016-06-27 06:58:28",5
"The Titanium SDK ","Android: Update the Android package.json in the sdk to support Android build tools 24","h5.Description:  1. The Android build tools ver.24 are out of the preview channel & available for usage.  2. With Android build tools ver 24 installed build an Android app to device/emulator.    h5.Actual Result:  You will get warnings as below in the build logs:      h5.Expected Results:  1. No warnings are seen & the project builds fine with build tools 24.  ",Bug,Medium,Closed,"2016-06-24 17:46:16","2016-06-24 17:46:16",2
"The Titanium SDK ","Windows: Titanium.UI.UPSIDE_PORTRAIT does not take any effect","Setting {{Ti.UI.UPSIDE_PORTRAIT}} for {{orientationModes}} does not take any effect on mobile device.        Tested my Windows 10 Mobile device (FREETEL FTJ152E) UPSIDE_PORTRAIT doesn’t take any effect. I tried flipped orientation in pure native VS project but it does not take any effect too... So I would think it depends on the device if it supports the orieintation.     Maybe related: [Orientation PortraitFlipped never fired in Win10 mobile device, but works ok in Win 10 tablet|https://social.msdn.microsoft.com/Forums/vstudio/en-US/6e99251f-5fc2-49ac-9a60-fca08c22fbae/uwpwin10xaml-corientation-portraitflipped-never-fired-in-win10-mobile-device-but-works-ok?forum=wpdevelop]  ",Bug,Medium,Open,"2016-06-24 00:24:22","2016-06-24 00:24:22",5
"The Titanium SDK ","Android: Ti.apiName should == 'Ti'","On Android, Ti.apiName returns 'Ti.Module', but should return 'Ti'.    {code:js}  it('apiName', function () {    should(Ti).have.readOnlyProperty('apiName').which.is.a.String;    should(Ti.apiName).be.eql('Ti'); // equals 'Ti.Module' on Android, which is incorrect.   });  {code}",Bug,High,Closed,"2016-06-23 22:14:31","2016-06-23 22:14:31",3
"The Titanium SDK ","Android: Ti.userAgent shouldn't be read-only","According to our docs, Ti.userAgent should be a property we can overwrite and should have a setter:   http://docs.<USER>com/platform/latest/#!/api/Titanium-property-userAgent    On Android that is not the case.    {code:js}  it('userAgent', function () {    should(Ti.userAgent).be.a.String;      var save = Ti.userAgent;    Ti.userAgent = 'Titanium_Mocha_Test';    should(Ti.userAgent).be.eql('Titanium_Mocha_Test');    Ti.userAgent = save;    should(Ti.userAgent).be.eql(save);   });  {code}",Bug,High,Closed,"2016-06-23 22:10:57","2016-06-23 22:10:57",3
"The Titanium SDK ","Hyperloop: Android - Objects should have have a `className` parameter","There should be a way to determine the type of a Hyperloop Object in order to type check it if needed. This could be done using the {{.apiName}} concept used in Titanium or perhaps a {{className}} property on the object.",Improvement,High,Closed,"2016-06-23 00:44:52","2016-06-23 00:44:52",1
"The Titanium SDK ","CLI: Use platform-specific moduleApiVersions and enforce them in lookup of modules","As part of upgrading to latest V8, the native module API version should be bumped solely for android. We have the concept of a moduleApiVersion that gets written into the manifest.json of the SDK, but we don't appear to enforce that version whatsoever when we look up modules for packaging into the app. We also have no means of incrementing the module api version per-platform (so if we update V8 on Android, we can only bump Android's native module api version and not iOS' as well).",Improvement,High,Open,"2016-06-22 18:29:07","2016-06-22 18:29:07",8
"The Titanium SDK ","ioslib doesn't recognize global WatchOS simulators","Starting in Xcode 8, WatchOS simulators are installed to {{/Library/Developer/CoreSimulator/Profiles/Runtimes}} similar to iOS Simulators. ioslib doesn't detect global WatchOS sims, only the WatchOS sim that comes with Xcode.",Bug,Medium,Closed,"2016-06-22 16:03:23","2016-06-22 16:03:23",5
"The Titanium SDK ","iOS: Orientation issue when open the share dialog.","Faced orientation issue on Android as well as iOS device when we open the share dialog in the application.  I have created an application to share a text message with friends, using applications installed on  the device.  I have locked the application's orientation to portrait from tiapp.xml as well as a set the orientationModes of the window to [Ti. UI. PORTRAIT].  I have tried setting the screenOrientation for Android as a portrait as well as nosensor, but none of them work.  Facing orientation issue only after opening the share dialog.  For Android device, I have used intent to share text and for IOS device, I have used module to share text.  I have also created a native IOS application and did not face this issue in a native application.  Let me know your feedback on this issue.",Bug,Critical,Closed,"2016-06-17 14:11:52","2016-06-17 14:11:52",8
"The Titanium SDK ","Windows: Not all emulators shown when building with mismatched SDKs","h5.Description    When building an app with mismatched SDKs (tiapp and selected SDK are different) the emulator prompt will only show 8.1 emulators as the forked command will have {{--wp-sdk 8.1}} added to it. It appears that it is set on [this|https://github.com/<USER>titanium_mobile_windows/blob/master/cli/commands/_build/config/wpSDK.js#L23] line where the defaultTarget is set to the 'selected' Windows SDK, which on my machine is set to 8.1, even with {{windows.wpsdk.selectedVersion = 10.0}} in the ti config.    h5.Steps to reproduce    # Run {{appc ti sdk install -b 5_4_X -d}}  # Set your SDK inside the tiapp to an SDK different to the above, such as 5.3.0.GA  # Build using {{appc run -p windows -T wp-emulator}}    h5.Actual result    Only 8.1 emulators are shown in the prompt    h5.Expected result    All emulators should be shown in the prompt",Bug,Medium,Closed,"2016-06-21 17:50:08","2016-06-21 17:50:08",3
"The Titanium SDK ","Windows: Tap-to-focus for Camera","When {{overlay}} is specified for {{Ti.Media.showCamera}}, there is no Tap to Focus support now, which makes it difficult to focus at shooting.        ",Improvement,Medium,Closed,"2016-06-21 13:17:54","2016-06-21 13:17:54",8
"The Titanium SDK ","TiAPI: require implementation uses incorrect __filename values","Our require implementation uses different values for __filename than what may be expected from an implementation like NodeJS. Additionally, our values differ between platforms.    On Windows, we get the base name of the file ('filename'). On iOS and Android we get the filename with no path info ('filename.js').    To match Node, we should be giving the absolute path to the resolved file ('/path/to/filename.js').",Bug,High,Closed,"2016-06-20 16:09:41","2016-06-20 16:09:41",8
"The Titanium SDK ","Memory-leaks and warnings across the iOS-project","We have around 70 memory-leaks that lie in the Titanium source project since years. We should resolve them all, as well as fixing the additional warnings regarding casting, unused variables etc.",Bug,High,Closed,"2016-06-20 00:47:46","2016-06-20 00:47:46",15
"The Titanium SDK ","iOS: Refactor default new app-projects","For our Release 6.0.0, we should really refresh our default app templates that are used when we create a new project. We still have those iOS3-like icons with no retina etc. Same for Android: We should use our latest design for the splash-screens and ensure that we use 9-patch for that.    In Addition to that, Alloy and classic projects should both use the same assets and interface. So we need an Alloy PR as well to cover the Alloy templates.",Improvement,Critical,Closed,"2016-06-17 17:54:29","2016-06-17 17:54:29",5
"The Titanium SDK ","Windows: Improve handling of an unsupported Visual Studio version","h5.Description    Currently, when just Visual Studio 15 preview is installed attempting to build will fail with the below error, this should be handled better and a warning/error shown to the user when they attempt to use an SDK that does not support that version.        h5.Steps to reproduce    1. Install Visual Studio 15 Preview   2. Attempt to build for Windows Platform {{appc run -p windows -T wp-emulator}}    h5.Actual result    The build fails with an unhelpful error    h5.Expected result    The build should fail telling the user that the version of VS is unsupported in this version of the SDK",Bug,Medium,Closed,"2016-06-17 17:21:24","2016-06-17 17:21:24",5
"The Titanium SDK ","Windows: Update CMake to support for VS 15","h5.Description    The current bundled CMake does not support the next version of Visual Studio.    *The latest version of CMake does not support this yet also, see* https://gitlab.kitware.com/cmake/cmake/issues/16143     Once the above is updated then [this|https://github.com/<USER>titanium_mobile_windows/blob/master/cli/commands/_build/initialize.js#L58] will need to be updated also  ",Story,Medium,Closed,"2016-06-17 17:12:03","2016-06-17 17:12:03",3
"The Titanium SDK ","If you have LiveView enabled, then you cannot registerForPushNotifications on iOS","*Details:* If you have LiveView enabled, then you cannot registerForPushNotifications on iOS.    *Note:* To workaround this issue, turn off LiveView.     *Steps to reproduce:*  # Make sure you have a valid provisioning profile for iOS push   # Create a Titanium app with services enabled  # On platform.<USER>com, make sure to setup iOS push  # Next, download, unzip, and copy contents of Archive.zip into Titanium Resources directory  # Enable LiveView  # Install app to device  # Once the app is launched, go to *Push Notifications > Settings for This Device*  # Click the *Disabled* button to *Enable* push notification    *Actual:* Device token is not retrieved i.e. {{Ti.Network.registerForPushNotifications}} is not registering the {{success}} callback; go to {{Resources/windows/pushNotifications/pushManager.js}} and see line 76.    *Expected:* Device token should be retrieved from ACS; see attachment.",Bug,High,Resolved,"2015-05-08 22:50:05","2015-05-08 22:50:05",8
"The Titanium SDK ","Windows: Tab title color is not changed on selection","The currently viewed tab in an app will have the tab title highlighted, when switching the tabs, the current viewed tab highlight does not change appropriately.    h2. TEST CODE        h2. Steps to Reproduce  1. Create a new classic mobile project.  2. Apply Test Code to app.js file.  3. Launch App.  4. Click on tab 1, then click tab 2.    h2. Expected Result    Currently Viewed tab should have the title highlighted.    h2. Actual Result    Tab 1 is constantly highlighted despite the selected tab.",Bug,High,Closed,"2016-06-15 22:29:05","2016-06-15 22:29:05",5
"The Titanium SDK ","Hyperloop - IPHONEOS_DEPLOYMENT_TARGET of 7.0 despite value of min-ios-ver in tiapp.xml","I've set  `min-ios-ver` to 9.0 within tiapp.xml, and when running `appc ti build` I can see an INFO message of `Minimum iOS version: 9.0`    When it gets to the Hyperloop section, I see a TRACE message of       I believe this is leading to parameter of `-target x86_64-apple-ios7.0` being set during swift compilation, causing an error for the particular pod I am trying to use (ImagePicker)    One of the errors:        There are lots more like this in the logs    Recreating this error can be done by using a Podfile with the below contents:          I have copy/pasted the failing swift build command, replaced the `-target x86_64-apple-ios7.0` with `-target x86_64-apple-ios9.0` and it completes successfully.",Bug,Critical,Closed,"2016-06-10 15:05:23","2016-06-10 15:05:23",3
"The Titanium SDK ","iOS10: Support the UserNotifications framework","iOS 10 offers a way to setup interactive notifications by using the {{UserNotifications}} framework. We can configure notifications ({{UNNotification}}), define notification actions ({{UNNotificationAction}}), create notification content ({{UNNotificationContent}}), add an attachment to a notification ({{UNNotificationAttachment}}) and group them into categories ({{UNNotificationCategory}}).     In addition, we can also trigger notifications ({{UNNotificationTrigger}}) and manage notifications in the notification center ({{UNUserNotificationCenter}}).    While some of it could be migrated to the existing ones, we should think about a new interface that manages those notifications properly.","New Feature",High,Closed,"2016-06-14 23:50:40","2016-06-14 23:50:40",21
"The Titanium SDK ","Hyperloop: CocoaPods version 1.0.x is not supported by Hyperloop","Hyperloop does not currently support Cocoapods version 1.0.1     Steps to reproduce:  # Install Hyperloop using the guide http://labs.<USER>com/project/55f74a9f421c44837717716b/Hyperloop-Module  # Install the current version of cocoapods (1.0.1) using brew {{brew install cocoapods}}  # Run a project with hyperloop enabled     *Actual*          *Expected*  The project is built successfully.",Bug,Critical,Closed,"2016-06-14 23:21:35","2016-06-14 23:21:35",5
"The Titanium SDK ","Set Xcode 7.3 as the minimum supported Xcode version","For the release 6.0.0, we want to follow the way to use the previous version that is available before the most recent version. In this case, there will be Xcode 8 available for the Ti-SDK release 6.0.0 so we increase the minimum Xcode version from 7.0 to 7.3.",Story,High,Closed,"2016-06-14 22:39:19","2016-06-14 22:39:19",3
"The Titanium SDK ","iOS10: Support RefreshControl in Ti.UI.ScrollView","iOS 10 supports  the RefreshControl in the {{Ti.UI.ScrollView}}, we should add it the same way we currently do with our ListViews and TableViews.","New Feature",High,Closed,"2016-06-14 21:24:02","2016-06-14 21:24:02",3
"The Titanium SDK ","iOS10: Support Speech Recognition","iOS 10 exposes APIs to parse the spoken language and return it as a textual output. We can support both local and remote URLs as well as real-time speech-recognition using the microphone.    Proposed API:  ","New Feature",Medium,Closed,"2016-06-14 19:57:30","2016-06-14 19:57:30",15
"The Titanium SDK ","Android: Portrait images get rotated using HTTPClient.","Hi all,    I'm facing following issues using ImageView with XHR HTTPClient in Android.    * Portrait images in ImageView gets rotated, while the image is fetched using XHR HTTP call.  * If i don't make use of XHR call then the image is displayed perfectly.    I also made use of autorotate property in XHR call but its not working.          *Expected Result:*  Portrait Image shouldn't get rotated while making XHR call.    *Actual Result:*  Portrait image gets rotated.      *Steps:*    1) Make XHR call to retrieve image. (Image displayed incorrectly)  2) Comment XHR section & uncomment image line from ImageView. (Image displayed correctly)      Thanks.",Bug,High,Closed,"2016-06-07 14:44:07","2016-06-07 14:44:07",1
"The Titanium SDK ","Ti.Facebook - presentShareDialog does not open native app, only webview","The facebook module does not open the native share dialog, it only opens the web version in a webview.    It should open the sharesheet ie. https://developers.facebook.com/docs/sharing/ios    Code to reproduce is standard boilerplate from the docs:  fb.presentShareDialog({          link: 'https://<USER>com/',          title: 'great product',          description: 'Titanium is a great product',                              picture: 'http://www.<USER>com/wp-content/uploads/scale_triangle1.png'      });",Bug,Critical,Closed,"2016-06-06 07:55:02","2016-06-06 07:55:02",5
"The Titanium SDK ","iOS10: Expose new Ti.UI.Pasteboard APIs","iOS 10 exposes new APIs to check whether or not the pasteboard currently has images, colors or URLs. Those should be exposed from the beginning to offer the user a more convenient way to validate the current pasteboard content.","New Feature",High,Closed,"2016-06-14 16:51:58","2016-06-14 16:51:58",3
"The Titanium SDK ","iOS: Cannot build with Xcode 8.0","I receive errors when trying to build when using Xcode 8.0.  Building for simulators (iOS 8.4, 9.0, and 10), I get this:      And building to device, I see this:      *Steps to reproduce issue*  1. Create a new project: {{appc new}}  2. Run the project: {{cd <project_path>}}, {{appc run}}    *Expected Results*  The project builds and runs without issue    *Actual Results*  The above errors are encountered and the project will not run",Bug,Critical,Closed,"2016-06-14 16:49:24","2016-06-14 16:49:24",13
"The Titanium SDK ","Create Github PR builder for titanium_mobile","Now that we have a common tests suite that passes on iOS and Android, we need to set up a Pull Request builder for titanium_mobile jobs so that we can run our unit test suite as part of every PR.",Story,High,Closed,"2016-06-14 15:27:46","2016-06-14 15:27:46",5
"The Titanium SDK ","iOS10: Leave a note to check isSupported before calling openEmailDialog","iOS 10 allows the user to remove certain system-apps. In order to ensure that the developers do not forget that, we should leave an iOS 10 note in the docs so they know about that behavior when implementing the {{Ti.UI.EmailDialog}}.",Story,Medium,Closed,"2016-06-14 15:15:43","2016-06-14 15:15:43",1
"The Titanium SDK ","iOS10: Deprecate iAds","The whole iAd framework is deprecated in iOS10, we should leave a note for users to migrate their Ads to a different service until the next iOS release.     Docs: https://developer.apple.com/library/prerelease/content/releasenotes/General/iOS10APIDiffs/Objective-C/iAd.html",Improvement,Medium,Closed,"2016-06-14 04:11:00","2016-06-14 04:11:00",1
"The Titanium SDK ","iOS10: Support for new WatchConnectivity features","We have a few new properties regarding the WatchConnectivity framework in iOS10 that we should expose.","New Feature",High,Closed,"2016-06-14 03:45:46","2016-06-14 03:45:46",3
"The Titanium SDK ","Windows: relative require() from sub-directory fails","While writing the mocha test suite, I happened to uncover a bug in Windows require() without actually trying to test it!    Inside the test app, we have:      {{/utilities/assertions.js}} has a {{require('./utilities');}} which is failing to resolve. I believe we're not holding onto the path/dirname of a given module to use as the basis for resolving require calls inside it.    ",Bug,Critical,Closed,"2016-06-13 23:46:31","2016-06-13 23:46:31",8
"The Titanium SDK ","iOS10: Support SiriKit","iOS 10 finally exposed SiriKit, the public framework to interact with Siri. It allows the developer to send requests to Siri in order to fetch information from the following services:    - Audio or video calling  - Messaging  - Payments  - Searching photos  - Workouts  - Ride booking    Docs: https://developer.apple.com/library/prerelease/content/documentation/Intents/Conceptual/SiriIntegrationGuide/index.html    We should expose it as {{ti.siri}} with Hyperloop to access the {{Intents}} and {{IntentsUI}} framework. The big problem to solve here is, that Siri needs to be implemented inside a new target, which currently is only supported by creating a native target manually.",Story,High,Closed,"2016-06-13 23:01:55","2016-06-13 23:01:55",13
"The Titanium SDK ","iOS10: Support Cloud Sharing","In iOS 10, we have a new controller to share items through the cloud. The {{UICloudSharingController}} is responsible for handling those transactions. We should expose it as {{ti.cloudshare}} using Hyperloop.    Docs: https://developer.apple.com/reference/uikit/uicloudsharingcontroller","New Feature",High,Closed,"2016-06-13 22:56:15","2016-06-13 22:56:15",5
"The Titanium SDK ","iOS10: Expose new visual effects on Ti.UI.iOS.BlurView","There are two new properties in iOS 10 to change the blurring behavior:  - {{UIBlurEffectStyleProminent}}  - {{UIBlurEffectStyleRegular}}    We should expose them as part of our existing API {{Ti.UI.iOS.BlurView}}.  ","New Feature",High,Closed,"2016-06-13 22:44:12","2016-06-13 22:44:12",3
"The Titanium SDK ","iOS10: Enable iOS 10 development","iOS 10 is in the house! In order to start extending the current core as well as ensuring the builds run stable, we need to expose the new iOS 10 utilities and resolve some warnings that come from it.",Story,Critical,Closed,"2016-06-13 22:38:35","2016-06-13 22:38:35",1
"The Titanium SDK ","Windows: WebView local script doesn't work for hyperlink ","[WebView local script|https://wiki.<USER>org/display/guides2/Communication+Between+WebViews+and+Titanium] does work for the first page, but it doesn't work on the next page where you follow its hyperlink.         {code:html|title=Resources/WebViewTestPage.htm}  <html>  <head>      <script>          Ti.App.addEventListener(app:fromTitanium, function(e) {              Ti.API.info(e.message);          });      </script>  </head>  <body>      <h2><a href=ms-appx-web:///NextPage.htm>Follow this link and see if script works</a></h2>      <button onclick=Ti.App.fireEvent('app:fromWebView', { message: 'event fired from WebView, handled in Titanium' });>fromWebView</button>  </body>  </html>    ",Bug,High,Closed,"2016-06-13 07:14:37","2016-06-13 07:14:37",5
"The Titanium SDK ","Android: Duplicate entry: org/appcelerator/titanium/gen/bindings.json in custom module","h3. Steps to Reproduce  Build android custom modules. They both produce a  org/<USER>titanium/gen/bindings.json file. Then when signing the APK Duplicate entry: org/<USER>titanium/gen/bindings.json occurs. This issue is occurred before and is occurring now with other users: http://appcelerator287.rssing.com/browser.php?indx=18050476&item=2527  http://stackoverflow.com/questions/36953652/duplicate-entry-org-<USER>titanium-gen-bindings-json-in-custom-android-m    h3. Actual Result  Failed to sign APK    h3. Expected Result  Success to sign APK. This issue did not occur before. The modules have not changed, something in an update has broken it.",Bug,High,Closed,"2016-06-09 23:27:53","2016-06-09 23:27:53",5
"The Titanium SDK ","Android: Ti.UI.Label.ellipsize should default to TruncateAt.END, but is undefined","According to docs, it should default to false.  ",Bug,High,Closed,"2016-06-10 19:52:30","2016-06-10 19:52:30",2
"The Titanium SDK ","Android: Ti.UI.Label.wordWrap should default to true, but is undefined",,Bug,High,Closed,"2016-06-10 19:51:03","2016-06-10 19:51:03",2
"The Titanium SDK ","Windows: titleId/title should retain existing value if key not found","Any of the UI proxies (subclasses of Ti.UI.View) that have *id properties for translation keys need to retain their existing translations/values if the newly set key can't be found.    i.e. if we have a title of Title and set titled to 'key_that_wont_be_found', the title should stay 'Title' if no key could be found.    Test case:        *Classic app*    ",Bug,High,Closed,"2016-06-10 19:39:02","2016-06-10 19:39:02",5
"The Titanium SDK ","Android: Support indicatorColor and indicatorDiameter properties on Ti.UI.ActivityIndicator","Android is the only platform that doesn't support Ti.UI.ActivityIndicator's indicatorColor and indicatorDiameter properties. We should ideally support it for parity's sake.    http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.ActivityIndicator-property-indicatorDiameter",Improvement,High,Closed,"2016-06-10 19:29:01","2016-06-10 19:29:01",2
"The Titanium SDK ","TiAPI: Deprecate old Geolocation properties, add more parity","http://docs.<USER>com/platform/latest/#!/api/GeocodedAddress    Specifically, it is insane that we:   - have a postalCode property on Android, but zipcode on iOS/Windows.   - latitude and longitude are Numbers on iOS/Windows, but String on Android.   - have both country_code (on all platforms), and countryCode (only on Android) (we should likely have the same property, and given our naming scheme, it should be called countryCode)",Improvement,High,Closed,"2016-06-10 19:08:45","2016-06-10 19:08:45",8
"The Titanium SDK ","Android: Support #createFile() method on Ti.Filesystem.File","Android is the only platform that doesn't support Ti.Filesystem.File#createFile(). We should ideally support it for parity's sake.",Improvement,High,Closed,"2016-06-10 18:59:11","2016-06-10 18:59:11",5
"The Titanium SDK ","Android: Support #append() method on Ti.Filesystem.File","Android is the only platform that doesn't support Ti.Filesystem.File#append(). We should ideally support it for parity's sake.",Improvement,High,Closed,"2016-06-10 18:57:37","2016-06-10 18:57:37",5
"The Titanium SDK ","Windows: Parity issue with Ti.Geolocation.reverseGeocoder callback response","Ti.Geolocation.reverseGeocoder callback function should get a ReverseGeocoderResponse style object back: http://docs.<USER>com/platform/latest/#!/api/ReverseGeocodeResponse    On Windows, it appears we effectively return the equivalent of {{response.places[0]}} as the object.    Test case:  ",Bug,High,Closed,"2016-06-10 17:30:03","2016-06-10 17:30:03",5
"The Titanium SDK ","iOS: Hybrid CommonJS and Native modules don't export commonjs","When I create a pure Javascript Module, any exported method is accessible.    In detail for the module I've:  # Created a new Mobile Module Project, from <USER>Studio, with id (for example) it.module.test  # Inside _assets_ folder, I've created a js file called _it.module.test.js_  # Into _it.module.test.js_ I have:       Now I package this module directly from <USER>Studio and install this module inside a Test Application.    Into this application I do:      And the result is *null*.    The problem is that the native module classes are being called instead of the CommonJS ones as per the docs.    __UPDATE__    After several tests, it seems that the problem is the Titanium SDK 4.0.0.  When I create the module project inside <USER>Studio and selecting a previous version of Titanium SDK (3.4.1 for example) all works perfectly with the same code. ",Bug,Critical,Closed,"2015-06-16 22:03:31","2015-06-16 22:03:31",8
"The Titanium SDK ","iOS: read-only properties with no setter show as configurable: true","Properties like apiName on all proxies, or Ti.App.version are marked as read-only properties in our docs. That means the user should not be able to overwrite their values or delete them. However you currently can delete them (since the configurable property is true on the property descriptor):    ",Bug,Critical,Closed,"2016-06-09 23:46:24","2016-06-09 23:46:24",5
"The Titanium SDK ","Android: Add an option to handle AlertDialog box outside touch.","*Overview:*    In android, when I click outside the AlertDialog, AlertDialog box will close. I need to close AlertDialog only when I click on cancel button in AlertDialog.  [https://developer.android.com/reference/android/app/Dialog.html#setCanceledOnTouchOutside(boolean)]    h6.steps to reproduce  1. Just create a sample project  2. Paste the following code  3. Run it on device and click the button   4. Then touch outside the dialog   5. It dismisses, the customer wants to prevent that     h6.Test Code  {code:title=app.js}  var win = Ti.UI.createWindow({    });    var alertDialog = Ti.UI.createButton({   title : 'ShowDialog',   height : Ti.UI.SIZE,   width : Ti.UI.SIZE,    });    // Listen for click events.  alertDialog.addEventListener('click', function() {   var dialog = Ti.UI.createAlertDialog({    message : 'The file has been deleted',    cancel : 1,    buttonNames : ['Confirm', 'Cancel'],    message : 'Would you like to delete the file?',    title : 'Delete'     });   dialog.show();  });    // Add to the parent view.  win.add(alertDialog);    win.open();    {code}    Thanks","New Feature",High,Closed,"2016-06-09 09:17:54","2016-06-09 09:17:54",2
"The Titanium SDK ","windowslib: don't hard error when detecting devices if Visual Studio is not installed","windowslib uses a custom tool called wptool to detect connected Windows Phone devices. wptool uses assemblies that are distributed with Visual Studio and it was designed such that wptool is compiled before executing. This obviously requires Visual Studio. If VS is not installed, it returns the error:        While the device detection API may return an error, {{windowslib.detect()}} should ignore the error and return successfully.",Bug,High,Closed,"2016-06-08 17:34:17","2016-06-08 17:34:17",5
"The Titanium SDK ","Android: EmailDialog fails to attach files when using Outlook","I use createEmailDialog to send emails and attach locally created files to them.    On Android the attachment does not get added if the user selects to send the email via Outlook. Everything works correctly if the user selects to send the email via Gmail.    Please see screenshots in attachments    {code:title=code used to test}    var emailDialog = Ti.UI.createEmailDialog({});  emailDialog.subject = Test email with attachment;  emailDialog.toRecipients = [<EMAIL>];  emailDialog.messageBody = 'the file should be attached';    var file = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, test.txt);      emailDialog.addAttachment(file);     emailDialog.open();  {code}  ",Bug,Medium,Closed,"2016-06-07 08:50:43","2016-06-07 08:50:43",5
"The Titanium SDK ","Android/Aps_Sdk: Improve HTTP logging for APSAnalyticsService","Improve logging to output http response error code.",Improvement,None,Closed,"2016-06-07 19:53:09","2016-06-07 19:53:09",2
"The Titanium SDK ","CLI: Can't launch any app (Android, Mobileweb) on Windows 10 OS","h3. Steps to Reproduce Just install the application <USER>to try it o Windows 10 Import any project Run it   h3. Actual Result Failed with the same log, regardless of the emulator (web, android)  h3. Expected Result That the app runs ! I remove and re-install countless, no change. I don't make any change on the code, i'm just starting to try the product.",Bug,Critical,Closed,"2016-06-04 05:42:20","2016-06-04 05:42:20",5
"The Titanium SDK ","Windows: Local webview does not show any images, or opens other files.","Hello, I have a local webpage which I want to open in webview. This works fine, But, I have an image, inside my webpage, which does not show when the webview opens.    I am putting my html and image file in assets directory, which is not working. I even tried to put the files in lib directory, which also does not work.     I also tried with hyperlink inside my webpage, which will open another local webpage. I can see the hyperlink in webview but clicking on it does not open my webpage.     I am testing for both alloy and classic project. I am using SDK 5.2.2.GA and 5.3.0.GA.        I have tested in android without any problem. Thanks.",Bug,None,Closed,"2016-06-07 07:37:43","2016-06-07 07:37:43",8
"The Titanium SDK ","iOS: ScrollableView with embedded ScrollView freezes after zooming the scrollview","Seen on iOS only    We're attempting to replicate the photo-viewing experience of the native photos app. We use a ScrollableView, with embedded ScrollViews, each with an image so that the user can swipe between photos, then pinch-to-zoom on the photos. We reset the zoom scale to 1 if the user swipes to the next/previous photo.    However, we have found the ScrollableView freezes randomly. Using the sample code below, you can reproduce with the following steps:    # Swipe forward a photo or two  # Pinch to zoom in  # Swipe back to the previous photos (aka, to the left)  # Swipe forward / right  # Not every time, but frequently the ScrollableView is now stuck. You can't swipe to the next or previous image in the set. The view bounces a bit, but won't scroll. No log output or errors are seen in the console. It's as if the ScrollableView no longer receives the swipe gesture. Zooming in then out un-sticks it, which is not reasonable to expect our users to discover.  # If it doesn't freeze, repeat the steps above. It sometimes freezes if you swipe forward (to the right) after zooming a photo also.     ",Bug,Critical,Resolved,"2016-06-03 19:52:25","2016-06-03 19:52:25",13
"The Titanium SDK ","Android: constants are writable","Constants in Android are able to be overwritten. Things like Ti.App.EVENT_ACCESSIBILITY_ANNOUNCEMENT should be truly constant and the user shouldn't be able to overwrite the value or delete the property.    Currently you can overwrite the value:    '    I think the underlying cause here is actually different than TIMOB-23475. I Believe this is because we hang 'constants' on the prototype of the proxy (i.e. {{Object.getPrototypeOf(Ti.App);}}) while the global object living at {{Ti.App}} is an instance. So what's happening looks to be property shadowing where we're actually adding a new {{EVENT_ACCESSIBILITY_ANNOUNCEMENT}} property with our own value onto the instance of {{Ti.App}} that lives in the global namespace at {{Ti.App}}. This instance property shadows the original constant declared on the prototype.    To prove my point, calling Object.getPrototypeOf(Ti.App) gives:    You can clearly see the constants there.    It makes sense to hang the constants at the prototype level since they're supposed to be class-level/static constants and we shouldn't need to have every instance hold a copy. However, it looks like we're not preventing shadowing properly (even though it appears we're setting the constant property attributes to ReadOnly|DontDelete).    See https://github.com/getify/You-Dont-Know-JS/issues/91 for discussion on cases where there seems to be prevented shadowing.    One possible solution may be to do an Object.seal() on all our proxies after they're set up. This <USER>all properties as DontDelete and prevents new properties from being added.",Bug,Critical,Closed,"2016-06-03 19:01:06","2016-06-03 19:01:06",5
"The Titanium SDK ","Android: read-only properties with no setter are writable/delete-able","Properties like apiName on all proxies, or Ti.App.version are marked as read-only properties in our docs. That means the user should not be able to overwrite their values or delete them. However you currently can:    ",Bug,Critical,Closed,"2016-06-03 18:41:15","2016-06-03 18:41:15",5
"The Titanium SDK ","Android: Getting an error in the logs when using the Camera (Regression)","Resolving TIMOB-23230 brought attention to this error. Logs as follows:-    This was tested on an Android 6.0, Nexus 6.    Test code as follows:-  ",Bug,Medium,Closed,"2016-06-03 02:47:22","2016-06-03 02:47:22",3
"The Titanium SDK ","Hyperloop: Update npm dependencies","For the stable release, we should stick to best practices and not deliver new software that has deprecated dependencies. In our case, we currently use (both) wrench 1.5.8 and 1.5.9 as well as graceful 1.2.3        So proposal: Remove wrench with fs-extra (which has a 90 % same API) and upgrade graceful-fs to 4.0.0. We need to check the ocurrences and use-cases related to their calls, but it should not be too hard to replace.",Improvement,Medium,Closed,"2016-06-02 08:12:16","2016-06-02 08:12:16",3
"The Titanium SDK ","Windows: Ti.UI.View ignores click event","{{Ti.UI.View}} ignores {{click}} event.     *How to reproduce*        *Expected*    Clicking blue View should fire {{click}} event on both {{window}} and {{view}}.        *Actual*    Only {{[INFO] Window clicked}} is displayed.    This issue is introduced by TIMOB-23374.  ",Bug,Critical,Closed,"2016-06-01 06:56:12","2016-06-01 06:56:12",5
"The Titanium SDK ","Android: Local Reference Table Overflow with Xml DocumentProxy","Our mocha unit tests suite is reliably causing a hard crash on Android with a local reference table overflow. It appears to be generating way too many DocumentProxy instances and holding onto them.    In fact, looking at the crash output, it may be generating hundreds of references for the **same** underlying object:        About 16 tests into the suite, it barfs on the overflow. Attached is the log from the beginning of the suite until the crash.    ",Bug,High,Closed,"2016-05-31 18:53:53","2016-05-31 18:53:53",13
"The Titanium SDK ","Build command should include -d option or support its own flag for Android builds","Scenario:    Build an app for android (with ti build or appc run) to device. Switch git branches or take other actions that result in having tiapp.xml set a lower app version number. Try to build again, and you get the following failure:        Instead of forcing developers to update the tiapp (which adds complexity to git workflows, like when you're reviewing a co-worker's PR), the build/run command should either automatically include the {{-d}} (allow downgrade) on the {{adb install}} command it execs, or it should have its own flag to enable that adb option.",Story,Medium,Closed,"2016-05-27 13:16:19","2016-05-27 13:16:19",1
"The Titanium SDK ","Android: Support for requesting Audio Focus","It would be a great with a method for requesting [Audio Focus|https://developer.android.com/training/managing-audio/audio-focus.html] making it possible for the {{Ti.Media.AudioPlayer}} to grab focus from other audio sources.","New Feature",Medium,Closed,"2016-05-25 18:11:25","2016-05-25 18:11:25",5
"The Titanium SDK ","Windows: Implement Window.title and titleid","{{Window.title}} and {{titleid}} is not implemented on Windows. On phone apps title may not be visible but on Store App it should be visible.    Sample code:      Expected: On Windows, Window name + Application name ({{New Window 1 - Application Name}}) is set to the title of the Window.",Improvement,Medium,Closed,"2016-05-31 13:58:45","2016-05-31 13:58:45",5
"The Titanium SDK ","iOS: Warning Hex color passed looks invalid: rgba() thrown","Since ever, iOS throws a warning message when using {{rgba()}} for color-values:     While it is fully-supported, the color-utilities throw the warning because it fails validating it as a hex-color. To fix it, it needs to be ensured, that the color supplied to the hex-validation does not contain {{rgba}}.",Bug,Medium,Closed,"2016-05-28 14:59:13","2016-05-28 14:59:13",1
"The Titanium SDK ","SDK: Remove all deprecated API's with remove-version 6.0.0","This ticket include the changes being made to remove all deprecated API's across iOS and Android. On iOS, we have 106 API's that are marked to be removed by 6.0.0 (even API's from 1.8.0 and earlier), so it's time. On Android, we have 70 API's that are annotated with {{@Deprecated}}, without a remove-version. [~<USER> should decide which of them can be removed in 6.0.0.",Story,High,Closed,"2016-05-28 09:54:53","2016-05-28 09:54:53",5
"The Titanium SDK ","SDK: Set Node 4.X as minimum supported version","Update the minimum supported version of Node to 4.x. Make sure to check for and update any version checks in the code as well as updating the package.json file.",Improvement,High,Closed,"2016-05-27 16:00:01","2016-05-27 16:00:01",5
"The Titanium SDK ","Android: Optimize removeAllChildren()","The current implementation of [removeAllChildren()|https://github.com/<USER>titanium_mobile/blob/415bd6c66dcc55b1a59a59574f3babd3c3a84ede/android/titanium/src/java/org/<USER>titanium/proxy/TiViewProxy.java#L719] creates a copy of all views and removes each view in a while loop.  The people at Shockoe showed in a [blog post|http://<USER>com/development/profiling-titanium/] that it takes up to 24 seconds to remove 1000 views with       Changing the TiViewProxy method to use the native [ViewGroup.removeAllViews()|https://developer.android.com/reference/android/view/ViewGroup.html#removeAllViews%28%29] would bring down delay below 100ms!    *Test app:*  https://github.com/bpulley/titanium-profiling can be used to test the behavior. Just run the Remove views en masse test.            Ti SDK 5.2.2 = 4160ms (and listview.removeAllViews() is not working)  Patched Version = 333ms (listview will be empty)",Improvement,High,Open,"2016-05-27 12:04:55","2016-05-27 12:04:55",5
"The Titanium SDK ","Hyperloop: iOS: Error when built with TiCore","h4. Steps to reproduce  1. using the latest timob master and the latest hyperloop master. (see my env ^)  2. *appc new --classic*  3. install hyperloop module. configure tiapp.xml accordingly:     4. write this in app.js https://gist.github.com/hansemannn/3ea14512f894bc507a5cea57336b7f77  5. *appc run -p ios*    h4. Expected Result  App builds normally and shows 2 colored squares    h4. Actual Result  red screen of death. as attached.    If you include     it will work. if you set to false, same red screen of death.",Bug,Critical,Closed,"2016-05-27 07:14:04","2016-05-27 07:14:04",8
"The Titanium SDK ","iOS: Allow way to avoid the red error controller modal with build setting","Right now if the red error controller is displayed we block opening other modal dialogs or new windows/views. This causes an issue with our unit tests because it means one failed test can fail any of the UI tests. The code is written in a way that we won't show the error controller if the deploy type is set to production, but production is set as invalid value for a simulator or device launch.    Even if we could set deploy type to production, that doesn't seem like the right fix for this (we still want other flags set for development like not minifying or encrypting the JS).",Story,High,Closed,"2016-05-27 00:03:11","2016-05-27 00:03:11",5
"The Titanium SDK ","Android: Showing a DialogFragment throws Can not perform this action after onSaveInstanceState error","h2. Problem    Hi, I'm creating an Android and iOS module for Titanium which has a sendLog method which sends some arbitrary JSON data to a server and returns an URL if it matches some predefined filters. The URL should be opened in a modal Dialog with a webview.    I've written native iOS and Android libraries and wrapped them as Titanium modules. On iOS everything works fine but on Android I can't open the Dialog (see error stack trace below). Right now there's one log message that always triggers the same webpage for testing purposes. On Android it just fails silently.    h2. Test case    {code:lang=javascript|title=app.js}  var mupets = require(be.iminds.mupets);  mupets.initialize(wappr, http://tocker.iminds.be:3000/log/report.json, 1, 100, 3);  var esmLog = {    bar: foo  };  mupets.sendLog(es-test-01,JSON.stringify(esmLog));       Here is the Android code that's causing the error:    {code:lang=java|title=Android code}  Activity activity = (Activity) context;                  EsmDialogFragment esmDialogFragment = EsmDialogFragment.newInstance(new EsmDialogListener() {                      @Override                      public void submit(String type, JsonObject result) {                          Mupets.sendLog(type, result);                          esmShown = false;                      }                        @Override                      public void onCancel(JsonObject cancelled) {                          super.onCancel(cancelled);                          Mupets.sendLog(ESM_cancelled, cancelled);                          esmShown = false;                      }                  }, url, true);                  FragmentTransaction transaction = activity.getFragmentManager().beginTransaction();                  Fragment prev = activity.getFragmentManager().findFragmentByTag(EsmDialogFragment.ESM_DIALOG_FRAGMENT);                  if (prev != null) {                      transaction.remove(prev);                  }                  transaction.addToBackStack(null);                  Log.v(TAG, Pre-show fragment);                  esmDialogFragment.show(transaction, EsmDialogFragment.ESM_DIALOG_FRAGMENT);                  Log.v(TAG, Post-show fragment);  {code}    Does Titanium either not allow the use of Fragments/or require you to call Dialog.show() at a specific point? The error talks about ...after onSaveInstanceState but I don't see how I would call it before onSaveInstanceState if I'm not creating an activity and why the code works when I use it in a native Android app. I added the Android module and iOS module I use to this ticket.",Bug,Critical,Closed,"2016-05-23 15:16:44","2016-05-23 15:16:44",1
"The Titanium SDK ","Android CLI: Log messages sometimes get truncated arbitrarily","In attempting to set up an automated test suite for Android, I'm running into an issue whereby I cannot reliably spit the test results as JSON due to a number of issues. If I try to gather them all together and spit out on huge JSOn object, I run into TIMOB-23438 where it gets truncated around 4036 characters.    If I try to spit out JSON results after every test, I get intermittent truncated output, thereby breaking the JSON parsing.    When I do a manual {{adb logcat}} it always shows the full JSON output in the logs, however, the titanium CLI is truncating it for some reason.",Story,Medium,Closed,"2016-05-26 17:56:29","2016-05-26 17:56:29",5
"The Titanium SDK ","iOS: Dismiss keyboard on drag / interactively in ScrollView & ListView","Request from the Slack-community-member [~<USER>:  {quote}  I'm trying to dismiss the keyboard like the iMessage or Whastapp do, dragging the finger through it.  I found the UIScrollViewKeyboardDismissMode constant on UIScrollView and as the Titanium ListView is a subclass  of UIScrollView I thought that may be possible to achieve it.  I saw here http://stackoverflow.com/questions/5143873/dismissing-the-keyboard-in-a-uiscrollview that this is possible simple setting the scrollView.keyboardDismissMode to UIScrollViewKeyboardDismissModeInteractive.  Do you have an idea on how we can make it?  {quote}    Yes I do, we should expose it with a new property called {{keyboardDismissMode}} and allow the configuration of the three value none, ondrag and interactive, exposed as constants on the iOS-namespace.","New Feature",Medium,Closed,"2016-05-26 16:28:23","2016-05-26 16:28:23",2
"The Titanium SDK ","Android: Crash when using undefined value for separatorStyle","This is to address the issue in TIMOB-20258.  [~<USER> crash is with this line     This has nothing to do with the runtime warnings in TIMOB-20258.    This issue is created to address that crash.  A PR has already been created by [~<USER> to address the issue:-  https://github.com/<USER>titanium_mobile/pull/8020    Test code:       Expected results:  App should not crash when running on Android. Prior to this. It will crash.",Bug,Medium,Closed,"2016-05-26 04:10:39","2016-05-26 04:10:39",3
"The Titanium SDK ","Windows: Ti.Contacts permission methods need to renamed be to match iOS and Android","h5.Description    Currently, Windows uses {{Ti.Contacts.requestAuthorization()}} to request authorization, this should be changed to match iOS and Android which use {{Ti.Contacts.requestContactsPermissions()}} this was implemented in TIMOB-19479        iOS and Android also use {{Ti.Contacts.hasContactsPermissions()}} to detect whether permissions are accepted for the app or not.    h5.Steps to reproduce    1. Using the code above build to a Windows device or emulator    h5.Actual result    The application will throw the error        h5.Expected result    The same method should be used across all platforms",Bug,High,Closed,"2016-05-26 02:45:22","2016-05-26 02:45:22",3
"The Titanium SDK ","Windows: JS Errors thrown in async callbacks don't show red screen of death","This is a parity issue. When running our mocha suite, we have a number of assertions inside JS callback functions. When an assertion fails on other platforms like iOS/Android, we show a red screen of death (on Android, it's more like an ugly red dialog of death). On Windows, we don't appear to do the same and the assertion error sort of gets squashed. We end up instead getting timeouts on the tests.",Story,High,Closed,"2016-05-25 21:03:39","2016-05-25 21:03:39",5
"The Titanium SDK ","Android: Logs get truncated after 4036 characters","If you attempt to spit out a log to Ti.API.info (or other levels), the output gets truncated. Running a mocha test suite and spitting out a long JSON.stringify version of the results ends up getting it truncated at 4036 characters (ignoring the [INFO]   prefix).    Looks to be a logcat issue: http://stackoverflow.com/questions/8888654/android-set-max-length-of-logcat-messages    We may want to consider making Ti.API.log chunk up very long strings to avoid this.",Bug,Medium,Reopened,"2016-05-25 19:45:56","2016-05-25 19:45:56",5
"The Titanium SDK ","Hyperloop: iOS Memory Leak","This impacts version 1.2.0 as well as earlier versions of HL for iOS.    SEE :https://www.dropbox.com/sh/ym28ctdtki1il6m/AADZWstALxykj62oYXUJspcja?dl=0    Specifically the leaks I am talking about are in the LEAK-AS-OF-MAY19-2016 folder:    All I did was run the hyperloop-examples program (from master) and click on auto layout and then hit the back arrow and then hit View Animation. As you can see each time I invoke hyperloop objects I got 51 new leaks between those two actions. I got 19 leaks upon initialization of the app.    I think this is the same leak behavior I observed back in February.     I had to custom compile a version of titanium since master is currently broken. see https://jira.<USER>org/browse/AC-3640    I built <USER>titanium_mobile master at has aafdb83   I mention this just to document it, but I don't think this is an important detail.",Bug,Critical,Closed,"2016-05-19 18:56:56","2016-05-19 18:56:56",21
"The Titanium SDK ","Android: Background service loses activity context and properties when restarted","For a long time we have been using a background service backed up with a alarm manger to implement a reoccurring service that runs some code and talks to a backend. This is a very common thing to do. To develop this feature according to google guide lines the use of a alarm manager is required to avoid having the service die due to different Android SDK limitations in power schemes and standby. Over time (2 years) I have seen Android 4, 5 and now 6 implement harsher and more restricted limitations on services.     Too make sure a service is kept alive after a shutdown of the app for what ever reason you use the START_STICKY option to make the service restart. This is to make sure the service restarts if the main app (activity) is shut down by the user or by the system. The START_STICKY option makes the service restart regardless of the main app (activity)    Along with this setting the Alarm manager will make sure to reenable/ restart the service if for any reason the Android system shut down the service for battery or other standby / doze reasons.    For the moment we have a service running as expected when it comes to these settings and issues, however for a long time we have seen that the service that are restarted loses its original inheritance from the main app. For instance if you make an app and a service (see your own docs) the service can access the Alloy.Globals properties as long as the service is not restarted. This is most probably due to the fact that the service (thread) inherits the main apps memory area. This is at least how a Linux system would work. So far all good, but now if the service is restarted from a START_STYCKY setting, making sure that the service stays aline even if the main app (activity) is killed the service can no longer use the Alloy.Globals.     We have of course worked around this by require the Alloy framework, however that will not solve the variables to come back, we also have to reinitiate them and set them again to make sure they are available everytime the service is restarted.    Over time we have however found a problem we cannot solve without having to patch your SDK every time and at all code lines where you use it.    In many many places in your code of the SDK you use something like:    public boolean hasLocationPermissions()   {    if (Build.VERSION.SDK_INT < 23) {     return true;    }    Activity currentActivity  = TiApplication.getInstance().getCurrentActivity();    if (currentActivity.checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {     return true;    }     return false;   }    this is found in the file: and at the latest nightly builds    android/modules/geolocation/src/java/ti/modules/titanium/geolocation/GeolocationModule.java    As you can see you are using the : Activity currentActivity  = TiApplication.getInstance().getCurrentActivity();    the problem is this is available when the service is still alive and inherited from main context, then the service is restarted the .getCurrentActivity is not available anymore, instead you have to use:    .getApplicationContext    So for every API that you have and use the TiApplication.getInstance().getCurrentActivity(); it means that the service in Android will crash, we have made some initial searches i your SDK and you use the TiApplication.getInstance().getCurrentActivity(); everywhere.     To make the service remain working using the common APIs that can be run in a background service like location above you have to change all these lines of code into .getApplicationContext    Now this is a CRITICAL VERY HIGH PRIO problem as this means (unless we are wrong) that no service in android can remain active when the main app is shut down and using START_STICKY is very common and the right way to use a service in the background, as well as using Alarm manager.    We also found the same problem here: ndroid/modules/platform/src/java/ti/modules/titanium/platform/PlatformModule.java  also an API that is a must in the background service, that one uses : Activity a = getActivity();    There are more.    We have had to patch EVERY API to have our Service continue service after the more and more common doze and standby along with limitations from the system. This is a none wanted situation and should be quite critical to you too making sure the community and professionals can use the backgrund service continually.     The last problem we encountered was that you probably use the same lines of code in your Analytics proprietary module making the Analytics to effectively crash in the service when used after a restart of the service, this also is a BIG problem as you want the analytics to report as well as not crashing the app. Here we havd to go into the SDK and remove the call to the Analytics module.. since we cant patch that code.    Can we PLEASE have some attention to this serious bug in Android and sort this thing out.    I do not have the time to make a example app of this right now but may help you later, just make sure to make a background service that uses START_STICKY and then kill the main app in the monitor (DDMS) observe the service restart (you do not have to use Alarm Manager as well) and then make sure you use one API that uses that getCurrentActivity call and you will see the service stop running...",Bug,Critical,Closed,"2016-05-25 07:02:21","2016-05-25 07:02:21",1
"The Titanium SDK ","Android N: Multi-Window support","Android N adds support for displaying more than one app at the same time. On handheld devices, two apps can run side by side or one on top of the other in split-screen mode. Android N also adds new features to support apps that run in multi-window mode. We can implement said features.    https://developer.android.com/preview/features/multi-window.html","New Feature",High,Closed,"2016-05-24 18:42:45","2016-05-24 18:42:45",1
"The Titanium SDK ","Windows 10: Ti.UI.Switch default position is not centered","When positioning is not specified for a switch, it should be centered by default. This is the case for Windows 8.1 devices, however not for Windows 10 devices. _(see screenshots)_      h3. DEMO CODE:      h2. Steps to Reproduce  1. Create a classic mobile project.  2. Include the demo code in the app.js.  3. Build to windows 10 mobile device or emulator.    h2. Actual Result    Switch is positioned to the left, not centered.    h2. Expected Result    Switch should be positioned in center by default.",Bug,None,Closed,"2016-05-24 17:55:41","2016-05-24 17:55:41",3
"The Titanium SDK ","Android N: File Permissions","Android N introduces more restrictions to file system permissions. Some of these are breaking changes. We need to test it on our current implementation and modify if needed. Please refer to this for more info: https://developer.android.com/preview/behavior-changes.html","New Feature",Critical,Closed,"2016-05-24 17:50:57","2016-05-24 17:50:57",8
"The Titanium SDK ","Windows: Camera controls are not showing","h6.Issue Description    Trying to check the camera feature in Windows Platform but the default camera controls are not shown an also front camera is opened. We are unable to capture a picture. Even tried placing the overlay didn't help. We are using titanium SDK 5.2.2.GA. Please find the attached screen shot and code.       h6.Test Case    ",Bug,High,Closed,"2016-05-24 17:15:26","2016-05-24 17:15:26",5
"The Titanium SDK ","Windows: Ti.Blob.imageAs* methods crash the application when using a blob that does not represent an image","h5.Description    When using the Ti.Blob.imageAs methods if they are given a blob that does not represent an image then the application will crash, based off the documentation and other platforms they should not crash but just return null [docs|http://docs.<USER>com/platform/latest/#!/api/Titanium.Blob-method-imageAsResized]      h5.Steps to reproduce    1. Using the code above build to a windows device or emulator    h5.Actual result    Application will crash    h5.Expected result    Application should not crash, methods should return null",Bug,High,Closed,"2016-05-23 18:07:12","2016-05-23 18:07:12",3
"The Titanium SDK ","Android: Add rotation, rotationX, rotationY, scaleX, scaleY to view","Allow to set rotation (x,y,z) and scaling (x,y) to a view without the need of 2dmatrix. Similar to the existing translationX(), translationY() (with a small bugfix allowing to use views with borders, too).    With these settings it is possible to do smooth rotation/scaling in a drag event.  GIF comparing 2dmatrix vs setters: http://migaweb.de/matrix.gif    Reference:  https://developer.android.com/reference/android/view/View.html#setRotation%28float%29    Example:      ",Improvement,Critical,Closed,"2016-05-21 14:09:10","2016-05-21 14:09:10",3
"The Titanium SDK ","Windows: Submission of files/images is broken on Windows 8.1 & Windows 10","h2. Problem    When using Ti.Network.createHTTPclient to submit files Windows sends non-nonsensical repeating combination of %00%00%00%00%00%00%00%00%00% for the file instead of blob/base64 file. Other values appear to be corrupted as well. iOS & Android perform as expected and submit a parse-able muli-part form data. This issue is stopping us from going live on windows...    h2. Test Case    {code:lang=javascript|title=app.js}  var url = 'https://wul06jzgd0yn.runscope.net'; //use favorite inspector here...    function go() {      Titanium.Media.showCamera({            mediaTypes: [Ti.Media.MEDIA_TYPE_PHOTO],          success: function(event) {                if (event.mediaType == Ti.Media.MEDIA_TYPE_PHOTO) {                    var newId = new Date().getTime();                  var newName = 'HEY_YOU_GUYS_WAIT_FOR_ME-' + newId;                  var fileName = newName + '.jpg';                  var imageFile = Ti.Filesystem.getFile(Ti.Filesystem.applicationDataDirectory, fileName);                  imageFile.write(event.media);                  console.log(imageFile.nativePath);                    var client = Ti.Network.createHTTPClient({                      onload: function(e) {                          alert('success');                      },                      onerror: function(err) {                          alert('error');                      }                  });                    client.open(POST, url);                    var f = {                      name: newName,                      attachment: imageFile.read(imageFile)                  };                  client.send(f);              }            },          cancel: function() {              console.log('camera cancel');          },          error: function(error) {              console.log('camera error');          }        });    }    go();    {code}    h2. Discussions    Expect windows to perform as iOS & Android do.   ",Bug,Critical,Closed,"2016-05-12 21:06:06","2016-05-12 21:06:06",8
"The Titanium SDK ","Windows Phone: Support changing orientation (PORTRAIT , LANDSCAPE, ...)","Please, Have this features available for Windows platform.     Titanium.UI.LANDSCAPE_LEFT  Titanium.UI.LANDSCAPE_RIGHT  Titanium.UI.PORTRAIT  Titanium.UI.UPSIDE_PORTRAIT    thanks.",Improvement,Critical,Closed,"2016-05-20 09:07:00","2016-05-20 09:07:00",8
"The Titanium SDK ","Hyperloop: iOS: App crashes on startup when <use-jscore-framework> element non-existent","h4. Steps to reproduce  1. *appc new --classic*  2. include hyperloop module and plugin in local project  3. update tiapp.xml with:    4. *appc run -p ios*    h4. Expected Result  app builds and appears    h4. Actual Result  app crashes on launch    Note: If you include the <use-jscore-framework> element in tiapp.xml, be it true or false, it will launch successfully.",Bug,Critical,Closed,"2016-05-20 06:02:06","2016-05-20 06:02:06",5
"The Titanium SDK ","Hyperloop: Remove Beta Warning","Currently, if you build apps with Hyperloop, this warning will appear:  {quote}  [WARN]  Hyperloop is currently available in Beta and should not be used for production applications.  {quote}  We have to remove it for GA release.",Improvement,Critical,Closed,"2016-05-20 05:56:15","2016-05-20 05:56:15",2
"The Titanium SDK ","iOS: titanium_mobile master is broken","When I download from http://builds.<USER>com/#master and try to install this OSX build from http://builds.<USER>com/mobile/master/mobilesdk-5.4.0.v20160517164706-osx.zip    or when I <USER>down <USER>titanium_mobile and run scons ( my environment is set up correctly)    in both cases I get:    ti build --platform=iphone  SyntaxError: missing ) after argument list      at exports.runInThisContext (vm.js:53:16)      at Module._compile (module.js:373:25)      at Object.Module._extensions..js (module.js:416:10)      at Module.load (module.js:343:32)      at Function.Module._load (module.js:300:12)      at Module.require (module.js:353:17)      at require (internal/module.js:12:17)      at /Users/andrewmcelroy/Library/Application Support/Titanium/mobilesdk/osx/5.4.0.v20160517164706/node_modules/titanium-sdk/lib/titanium.js:86:14      at /Users/andrewmcelroy/Library/Application Support/Titanium/mobilesdk/osx/5.4.0.v20160517164706/node_modules/async/lib/async.js:718:13      at async.forEachOf.async.eachOf (/Users/andrewmcelroy/Library/Application Support/Titanium/mobilesdk/osx/5.4.0.v20160517164706/node_modules/async/lib/async.js:233:13)  ---------------------------------------------      at Object.run (/usr/local/lib/node_modules/titanium/node_modules/node-appc/lib/subprocess.js:59:8)      at find (/usr/local/lib/node_modules/titanium/node_modules/node-appc/lib/subprocess.js:96:14)      at /usr/local/lib/node_modules/titanium/node_modules/async/lib/async.js:945:13      at Immediate.q.<USER>(/usr/local/lib/node_modules/titanium/node_modules/async/lib/async.js:913:25)      at processImmediate [as _immediateCallback] (timers.js:383:17)  ---------------------------------------------      at Object.setImmediate (/usr/local/lib/node_modules/titanium/node_modules/async/lib/async.js:200:9)      at _insert (/usr/local/lib/node_modules/titanium/node_modules/async/lib/async.js:861:19)      at Object.q.push (/usr/local/lib/node_modules/titanium/node_modules/async/lib/async.js:888:17)      at Object.findExecutable (/usr/local/lib/node_modules/titanium/node_modules/node-appc/lib/subprocess.js:113:8)      at resolveNode (/usr/local/lib/node_modules/titanium/lib/titanium.js:97:34)      at /usr/local/lib/node_modules/titanium/lib/titanium.js:74:5      at Object.<anonymous> (/usr/local/lib/node_modules/titanium/lib/titanium.js:80:2)      at Module._compile (module.js:409:26)      at Object.Module._extensions..js (module.js:416:10)      FYI, Master is currently broken.",Bug,Critical,Closed,"2016-05-19 18:24:03","2016-05-19 18:24:03",2
"The Titanium SDK ","Windows: After app crash app is unable to boot.","Currently our app (Roamler) is unable to boot after a crash has occured. This has been discussed with <USER>and Kiat and I was asked to raise a ticket here.     This has been tested with `5.3.0.v20160415121959`.    I can send the app code privately as also discussed with <USER>and internally here.",Bug,Critical,Closed,"2016-05-19 10:35:54","2016-05-19 10:35:54",8
"The Titanium SDK ","iOS debugger: crash with use of {attribute} in view xml file","I have attached a sample project that demonstrates this problem.  When you run the app in Run mode the app works fine.  When you run the app in Debug mode the app will crash at startup.    The crash is a result of this line of code in underscore.js:        render = new Function(settings.variable || 'obj', '_', source);    Here is the stack trace for the breakpoint I set and stepping over or into the line will crash the app.      I have attached the crash log as well and here is the useful parts.  ",Bug,Critical,Closed,"2016-05-12 13:08:50","2016-05-12 13:08:50",3
"The Titanium SDK ","Android: onsendstream progress is wrong","This is a continuation of TIMOB-20483.    The fix in that ticket will indeed fix the issue the bug but there is an underlying issue that needs investigating. The miscalculation of totalLength might be the root issue and this needs to be checked out.",Bug,High,Closed,"2016-05-19 02:20:57","2016-05-19 02:20:57",5
"The Titanium SDK ","Windows: Corporate Directory App Contact Icons aren't centered horizontally","Layout issue at directory view on [Corporate Directory App|https://github.com/<USER>se/corporate-directory]. It happens both Windows Phone 8.1 and Windows 10.    The 3 custom icons are not properly centered. I've attached a screenshot which demonstrates the misalignment of the 3 custom buttons. Note that the Red lines represent the positioning of the buttons, and the black line represents the absolute center.",Bug,Medium,Closed,"2016-05-18 18:53:27","2016-05-18 18:53:27",3
"The Titanium SDK ","iOS/Android: Add 'scrolling' event to ListView to track scroll direction (up or down)","At the moment is not possible to determine the scroll direction of a ListView natively and as the view is scrolling. Very common effects such as the hiding of the navigation bar when scrolling (like on the  Facebook app) become impossible to achieve without cumbersome workarounds.  I will send a PR with a modification to the SDK core.  Probably some modifications like coding style and naming will be necessary (By no means I am an Objective C dev).  Most of the code I took straight from Stackoverflow [link Stackoverflow|http://stackoverflow.com/a/21263997/436785]    ",Improvement,Medium,Closed,"2016-05-18 16:25:43","2016-05-18 16:25:43",3
"The Titanium SDK ","Windows: Ti.Platform.version returns an unexpected value ","Ti.Platform.version returns an unexpected value on windows.    *Steps to reproduce:*   # Use the app.js below   # Run the application and check either the logs or the window     *app.js*      *Actual :*        *Expected:*  ",Bug,None,Resolved,"2016-05-17 23:11:51","2016-05-17 23:11:51",5
"The Titanium SDK ","Windows parity: App name is not sourced from app.xml in folders suffixed with ISO 3166-1 Alpha-2 code","h5.Description    On Android when building an application, if there is an app.xml file in i18n/en-GB then the application name will be sourced from this file, on Windows it is not. If the application name is placed into strings.xml in this folder then it is sourced with no problems.    *Workaround*    Place your application name string into string.xml    h5.Steps to reproduce    # Download the attached zip file  # Build the application to device or emulator *Note it is setup for en-gb so you will have to localize as needed*    h5.Actual result    The app name is not sourced from en-gb    h5.Expected      The app name should be sourced from en-gb to maintain parity with other platforms",Bug,High,Closed,"2016-05-17 21:40:29","2016-05-17 21:40:29",5
"The Titanium SDK ","iOS: Debug exception when calling moment.locale(Ti.Locale.currentLocale)","This is the line of code the exception is happening and name variable is en-US, but we also use french as well and is the reason why we are calling moment.locale.              require(alloy/moment/lang/ + name);        In Run mode this works fine and our date displays correctly for the locale.  The example doesn't display date, but out app does.    I have attached example code to demonstrate this issue.  Run the app in Debug mode.",Bug,Critical,Closed,"2016-05-12 13:54:32","2016-05-12 13:54:32",1
"The Titanium SDK ","Analytics: Add data element to JSON payload for windows phone parity","h5. Description:  Currently the windows phone JSON payloads for ti.background have no data element. The other platforms have this structure. There are improvement tickets in place to update the structure of the existing structure of the payload for both Android and iOS. Based on the status of those (linked) tickets, adding parity for windows should be done to reflect the other platform's payloads at the time of implementation.    Current example:        h5. Steps to reproduce:  1) Install a titanium project on a windows phone device  2) Launch the app  3) Use either - a) point device to staging via DNS setting, check logs. b) Use get last event api c) If you have backend access, check the raw event on AWS.  4) Examine any of the ti.background event types.    h5. Result:  There is no data element    h5. Expected Result:  There is a data element, in parity with the other platforms",Improvement,High,Closed,"2016-05-17 20:06:37","2016-05-17 20:06:37",3
"The Titanium SDK ","Analytics: Implement nettype property for Windows platform ","When comparing the payloads for the Windows platform to Android, it was found that {{nettype}} was returning as {{nettype: UNKNOWN}}. This also occurs when evaluating the data returned from {{Ti.Network.networkTypeName}}.     h2. Steps to Reproduce    1) Install a titanium project on a windows phone device  2) Launch the app  3) Use either - a) point device to staging via DNS setting, check logs. b) Use get last event api c) If you have backend access, check the raw event on AWS.  4) Alternatively, include {{Ti.Network.networkTypeName}} in a log statement in the app.js, and build to a Windows phone device.   5) Examine any of the standard event types.      h2. Actual Result    {{nettype}} returns as UNKNOWN for Windows Device.    h2. Expected Result    {{nettype}} should return an appropriate value, consistent with the other platforms.",Improvement,None,Closed,"2016-05-17 17:41:26","2016-05-17 17:41:26",5
"The Titanium SDK ","Analytics: SDK version format on Windows phone should match other platforms","When comparing the payloads for the Windows platform to android / iOS, it was found that the {{sdkver}} is not consistent with the other platforms:    *Windows:*  {{sdkver: 5.3.0.v20160516040258}}  *Android / iOS:* {{sdkver: ti.5.3.0}}    h2. Steps to Reproduce    1) Install a titanium project on a windows phone device  2) Launch the app  3) Use either - a) point device to staging via DNS setting, check logs. b) Use get last event api c) If you have backend access, check the raw event on AWS.  4) Examine any of the standard event types.    h2. Actual Result    Windows {{sdkver}} returns the full sdk version format.    h2. Expected Result    Windows {{sdkver}} should return the shortened sdk version format, to be consistent with the other platforms.",Improvement,High,Closed,"2016-05-17 17:34:22","2016-05-17 17:34:22",3
"The Titanium SDK ","Windows: Ti.Platform.ostype always returns same value as Ti.Platform.architecture","h5. Description:  The analytics payloads produced by Windows phones lists ostype as arm. The osarch is also arm. For comparison:    iOS:  ostype:64bit  osarch:arm64    Android:  ostype: 32bit  osarch:ARMv7 Processor rev 0 (v7l)    Windows:  ostype: arm  osarch: arm    h5. Steps to reproduce:  1) Install a titanium project on a windows phone device  2) Launch the app  3) Use either - a) point device to staging via DNS setting, check logs. b) Use get last event api c) If you have backend access, check the raw event on AWS.  4) Examine any of the standard event types.    h5. Result:  The ostype field has arm    h5. Expected Result:  The ostype field should not be redundant, and should reflect information about the OS type",Bug,High,Closed,"2016-05-17 17:19:23","2016-05-17 17:19:23",5
"The Titanium SDK ","Analytics: Timestamp for Windows payloads are inconsistent with other platforms","When comparing the payloads for the Windows platform to android / iOS, it was found that the {{timestamp}} is not consistent with the other platforms:    *Windows:*  {{ts: 2016-05-16T18:51:13.488Z”}}  *Android / iOS:* {{ts: 2016-05-13T21:32:50.228+0000”}}    Phones were verified to have the correct time configured prior to obtaining the payloads.    h2. Steps to Reproduce    1) Install a titanium project on a windows phone device  2) Launch the app  3) Use either - a) point device to staging via DNS setting, check logs. b) Use get last event api c) If you have backend access, check the raw event on AWS.  4) Examine any of the standard event types.    h2. Actual Result    Windows timestamp is different from other platform timestamps.    h2. Expected Result    Windows timestamp should be consistent with the other platform timestamps.",Improvement,High,Closed,"2016-05-17 17:18:10","2016-05-17 17:18:10",3
"The Titanium SDK ","TIAPI: Cannot paginate Ti.Contacts.getAllPeople()","The Ti.Contacts.getAllPeople() method allows for a limit to be set on the number of people to retrieve in one call, but it does not allow for an offset, or page, number to be provided in order to grab the next set of the same size.    For example, if I want to grab 200 contacts at a time, I would do Ti.Contacts.getAllPeople(200). Currently, I am unable to iterate over the contacts in sets of 200, because that would require the capability to provide a parameter like: Ti.Contacts.getAllPeople(200, 1);  Ti.Contacts.getAllPeople(200, 2);  Ti.Contacts.getAllPeople(200, x);    According to @<USER>in the related bug (https://jira.<USER>org/browse/TIMOB-20279), see https://github.com/<USER>titanium_mobile/blob/415bd6c66dcc55b1a59a59574f3babd3c3a84ede/android/modules/contacts/src/java/ti/modules/titanium/contacts/ContactsApiLevel5.java#L224-L235 for more info on this issue.    Resolve this bug would provide a workaround for resolving TIMOB-20279.",Improvement,Critical,Closed,"2016-05-14 18:55:06","2016-05-14 18:55:06",3
"The Titanium SDK ","Windows: Ti.Geolocation does not prompt location permission","[~<USER> reported there's no prompt to ask for location permission on Windows 10 Mobile.    ",Bug,Medium,Closed,"2016-05-17 13:53:45","2016-05-17 13:53:45",5
"The Titanium SDK ","Windows: autoLink URLs support for Ti.UI.Label","{{autoLink}} with URLs for {{Ti.UI.Label}} is not implemented on Windows. See https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Label-property-autoLink for details.        Expected: Words with {{http://}}, {{tel:}} and {{mailto:}} scheme should have hyperlinks.","New Feature",Medium,Closed,"2016-05-17 07:57:22","2016-05-17 07:57:22",5
"The Titanium SDK ","Windows: ScrollView is draggable even when content is small","{{ScrollView}} can be draggable (scrollable) even when scrollview content is small enough to fit {{ScrollView}} on Windows. On iOS/Android it's locked.    ",Improvement,Medium,Open,"2016-05-17 07:20:33","2016-05-17 07:20:33",5
"The Titanium SDK ","iOS: Vertical View of width Ti.UI.SIZE does not scale to fit contents correctly","According to http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.View    _Titanium.UI.SIZE specifies that the view should adjust this size to fit its contents, such as a label's text or a view's children._    However, this test code shows the view {{width}} scaling to fit its parent.    ",Bug,High,Open,"2016-05-16 19:43:47","2016-05-16 19:43:47",8
"The Titanium SDK ","Parity: Titanium CommonJS modules cannot require relative files","Titanium CommonJS modules have a hard limit to effectively all be contained in a single JS file whose base name matches the module.id.  If you have a CommonJS module, not only does it have to have an entry file matching the module id(TIMOB-23382), but that file will fail to require any other files relative to it.    For a simple example, I have a {{modules/commonjs/ti.commonjs.require/1.0.0}} folder and inside is:  - {{ti.commonjs.require.js}}  - {{main.js}}    I can do {{require('ti.commonjs.require');}} from my Titanium app, and it'll load the {{modules/commonjs/ti.commonjs.require/1.0.0/ti.commonjs.require.js}} file (regardless of whether I have a package.json pointing to another file or an index.js file there). But if that file has a {{require('./main');}} it'll throw a Runtime error that it's unable to load the main.js module.",Bug,Critical,Closed,"2016-05-16 17:21:03","2016-05-16 17:21:03",5
"The Titanium SDK ","Parity: Cannot require directory as done in NodeJS","If you attempt to require a directory, NodeJS has well-defined behavior: https://nodejs.org/api/modules.html#modules_all_together    Namely:  - try to load {{dir/package.json}} and grab the {{main}} property, load the file pointed to by that.  - try to load {{dir/index.js}} as JS  - try to load {{dir/index.json}} as JSON    Trying this on Android and iOS, it just throws a runtime error that the requested module was not found.  ",Bug,Critical,Closed,"2016-05-16 17:13:43","2016-05-16 17:13:43",8
"The Titanium SDK ","Parity: Titanium CommonJS modules require'd differently than NodeJS require spec","We have a long-standing issue with how Titanium CommonJS modules are require'd.    One would assume they'd follow typical NodeJS conventions with requires, so when you do:      I would expect that it should attempt to load up {{modules/commonjs/module.id/<version>}} as a directory as per TIMOB-23382    Instead, our Android and iOS implementation looks for {{modules/commonjs/module.id/<version>/module.id.js}}, and ignore any package.json, index.js, or index.json in that directory.  ",Bug,Critical,Closed,"2016-05-16 16:57:54","2016-05-16 16:57:54",8
"The Titanium SDK ","Windows:Ti.UI.Picker does not work properly in windows"," Unable to change the options in the picker after the first time. It only works once. This is happening on windows device Microsoft Windows 8.1 Enterprise and  emulator 8.1 WVGA 4 inch 512MB.      *Test Code:* reporter’s sample code.    *index.js*        *index.xml*          *Test Environment:*    Device: Microsoft Windows 8.1 Enterprise,Emulator: Emulator 8.1 WVGA 4 inch 512MB  Node.js Version             = 0.12.7  npm Version                 = 2.11.3   SDK Version                 = 5.4.0.v20160404231726,5.2.2.GA  <USER>Command-Line Interface, version 5.2.0    *Test Steps:*    * Import the app.  * Run the project on windows device/emulator.  * Try to select the picker options,it is getting selected for the first time. After that unable to select any picker options.    *Test Results:*    See attachments.",Bug,Critical,Closed,"2016-05-15 05:18:03","2016-05-15 05:18:03",5
"The Titanium SDK ","Windows OS: Appcelerator is not compatible with McAfee antivirus.","When <USER>is running in a PC with McAfee antivirus installed, Running a project leads to An uncaught exception was thrown! EPERM, operation not permitted error.",Bug,Low,Closed,"2016-05-14 06:47:02","2016-05-14 06:47:02",1
"The Titanium SDK ","Windows: Label does not clip borderRadius","When a borderRadius is set, the Label will render through the radius.    ",Bug,High,Closed,"2016-05-14 03:18:37","2016-05-14 03:18:37",8
"The Titanium SDK ","Windows: Label with both left and right in ScrollView always shows scroll bar","{{Label}} with both {{left}} and {{right}} specified in {{ScrollView}} always shows horizontal scroll bar.     **Expected**    Following example should not show horizontal scroll bar.    ",Bug,High,Closed,"2016-05-13 14:39:27","2016-05-13 14:39:27",8
"The Titanium SDK ","Windows: Label backgroundColor cut through border with radius","{{Label}} doesn't render {{backgroundColor}} correctly when use with {{borderRadius}}. It's like background cut through the border (see screenshot).        **actual**    !Actual.PNG|thumbnail!  ",Bug,High,Closed,"2016-05-13 03:39:44","2016-05-13 03:39:44",5
"The Titanium SDK ","Windows: Label with height should render text vertically centered","{{Label}} with {{height}} should set label height accordingly and render text vertically center by default.        *actual*    !Actual.PNG|thumbnail!  ",Bug,High,Closed,"2016-05-13 03:32:25","2016-05-13 03:32:25",5
"The Titanium SDK ","Windows: Layout with left & right break layout","Specifying both {{right}} and {{left}} doesn't work with {{horizontal}} layout. For example, following example should show {{this is test text}} text with yellow background, but it doesn't.        *expected*    !Expected.PNG|thumbnail!    *actual*    !Actual.PNG|thumbnail!",Bug,High,Open,"2016-05-13 03:02:15","2016-05-13 03:02:15",8
"The Titanium SDK ","Windows: Only report a device when one has been detected","h5.Description    When building to a Windows Phone Device if multiple devices are connected then the two devices are displayed along with Device 0        When building , for me, selecting any of the above devices the build errors out for me.    As we are unable to support multiple devices due to the tooling we use then this should be handled better.    h5.Steps to reproduce    1. Connect multiple devices  2. Build using {{appc run -p windows -T wp-device}}    h5.Actual result    Multiple devices are shown    h5.Expected result    Multiple devices should not be shown, user should be informed of the support for only one device",Improvement,Medium,Reopened,"2016-05-12 22:26:23","2016-05-12 22:26:23",5
"The Titanium SDK ","Windows: Log the Windows SDK version being built with","h5.Description    The SDK version being built with is logged for both iOS and Android, it would be nice to also log this for Windows Platform, currently it can inferred from some related logging but having it explicitly logged would be better.    Android logs {{Targeting Android SDK API: 23}} and iOS logs {{Building using iOS SDK: 9.3}} for example.",Improvement,None,Closed,"2016-05-12 21:25:19","2016-05-12 21:25:19",2
"The Titanium SDK ","Expose/support hyphenationFactor & hyphenationFrequency for Attributed Strings","iOS and Android both support hyphenation in native land. There is no option to use this in a Titanium app. (afaik)  It would be very convenient to have this functionality in Ti.UI.Label. Especially in our case for German apps.    Implementing this in Swift is extremely easy:  {code:swift}  let paragraphStyle = NSMutableParagraphStyle()  paragraphStyle.hyphenationFactor = 1.0      let attributedString = NSAttributedString(string: text, attributes: [NSParagraphStyleAttributeName:paragraphStyle])      label.attributedText = attributedString  {code}    *iOS*, hyphenationFactor: https://developer.apple.com/library/ios/documentation/Cocoa/Reference/ApplicationKit/Classes/NSMutableParagraphStyle_Class/#//apple_ref/occ/instp/NSMutableParagraphStyle/hyphenationFactor    *Android*, hyphenationFrequency:  http://developer.android.com/reference/android/widget/TextView.html#attr_android:hyphenationFrequency    *Extra info:*  https://en.wikipedia.org/wiki/Hyphen",Improvement,Medium,Closed,"2016-05-11 10:56:27","2016-05-11 10:56:27",8
"The Titanium SDK ","Windows: Hardware back button exits app instead of closing window inside tab","Looking at other Windows apps the expected behaviour when using {{Ti.UI.Tab.open()}} to open a child Window and then  pressing the device back button should close the child Window, revealing the previous Window again.    Example for all of this:    {code:js}  var colors = ['blue', 'gray', 'red'];    function createWindow(depth) {        var win = Ti.UI.createWindow({          layout: 'vertical',          backgroundColor: colors[depth % colors.length]      });        win.add(Ti.UI.createLabel({          text: 'Depth ' + depth      }));        var openBtn = Ti.UI.createButton({          top: 20,          title: 'Open Child'      });        openBtn.addEventListener('click', function () {          tabA.open(createWindow(depth + 1));      });        win.add(openBtn);        if (depth > 0) {          var closeViaWinBtn = Ti.UI.createButton({              top: 20,              title: 'Close via Window'          });            closeViaWinBtn.addEventListener('click', function () {              win.close();          });            win.add(closeViaWinBtn);            var closeViaTabBtn = Ti.UI.createButton({              top: 20,              title: 'Close via Tab'          });            closeViaTabBtn.addEventListener('click', function () {              tabA.close(win);          });            win.add(closeViaTabBtn);            var backViaWinButton = Ti.UI.Windows.createAppBarButton({              icon: Ti.UI.Windows.SystemIcon.BACK          });            backViaWinButton.addEventListener('click', function () {              win.close();          });            var backViaTabButton = Ti.UI.Windows.createAppBarButton({              icon: Ti.UI.Windows.SystemIcon.BACKTOWINDOW          });            backViaTabButton.addEventListener('click', function () {              tabA.close(win);          });            win.add(Ti.UI.Windows.createCommandBar({              items: [backViaWinButton, backViaTabButton]          }));      }        return win;  }    var tabA = Ti.UI.createTab({      title: 'Tab A',      window: createWindow(0)  });    var tabB = Ti.UI.createTab({      title: 'Tab B',      window: Ti.UI.createWindow({          backgroundColor: 'green'      })  });    Ti.UI.createTabGroup({      tabs: [tabA, tabB]  }).open();  {code}",Bug,Medium,Closed,"2016-05-12 15:32:44","2016-05-12 15:32:44",5
"The Titanium SDK ","Windows: Alloy, Unable to Bind to Visible Tag on Windows 8.1 & Windows 10","h2. Problem    In iOS & Android applications we bind to the visible tag on tables, table view rows, labels, buttons, textfields, textareas, views etc. This does not work on Windows 8.1 or Windows 10. When attempting to bind to the visible tag the items always show.     h2. Test case    Example code is attached. Will output a table as displayed below:  !http://i.imgur.com/dtKSrK6.png!    h2. Discussions    I would expect the same functionality as iOS & Android on Windows.         ",Bug,Critical,Closed,"2016-05-09 20:56:54","2016-05-09 20:56:54",8
"The Titanium SDK ","Windows: textAlign property of Button does not work in 8.1 or 10. ","h2. Problem    The textAlign property of Button does not work in Windows 8.1 or 10. It appears to be working for other elements like label though.     h2. Test case  !http://i.imgur.com/UgfR2yw.png!    {code:lang=xml}  <Alloy>      <Window class=container>          <TableView id=exampleTable>              <TableViewRow class=exampleRow >                  <Button class=leftC   title=LEFT Button />                  <Button class=centerC   title=CENTER Button />                  <Button class=rightC   title=RIGHT Button />              </TableViewRow>              <TableViewRow class=exampleRow >                  <Label class=leftC   text=LEFT Label />                  <Label class=centerC   text=CENTER Label />                  <Label class=rightC   text=RIGHT Label />              </TableViewRow>          </TableView>      </Window>  </Alloy>      h2. Logs    h2. Discussions    Expect the same functionality as iOS & Android. I was using the CLI to build for 8.1 & 10.0:  appc titanium build --platform windows --target ws-local --wp-sdk 8.1  appc titanium build --platform windows --target ws-local --wp-sdk 10.0   ",Improvement,Critical,Closed,"2016-05-10 14:51:59","2016-05-10 14:51:59",5
"The Titanium SDK ","Hyperloop: Android: Support overriding constructors in subclasses","Hyperloop Android does not support overriding constructors when extending classes in Javascript.",Improvement,High,Open,"2016-05-11 14:47:58","2016-05-11 14:47:58",13
"The Titanium SDK ","Hyperloop Android: Support method calls that use reference parameters/explicitly assign to args","Some methods in Android use reference parameters where the method is expected to modify the arguments explicitly rather than return a return value.    Specifically, methods like:  - http://developer.android.com/reference/android/view/View.html#getLocationOnScreen(int[])  - http://developer.android.com/reference/android/view/View.html#getLocationInWindow(int[])  - http://developer.android.com/reference/android/view/View.html#dispatchNestedPreScroll(int,%20int,%20int[],%20int[])  - http://developer.android.com/reference/android/view/View.html#dispatchNestedScroll(int,%20int,%20int,%20int,%20int[])    Right now, I don't believe we properly support this sort of method. We'll need to find some way to be able to transform the passed in JS array's contents from the modifications made on the Java converted array. We may just have to special case these methods to return the modified contents rather than void and then hack the JS side.    Note that this isn't possible for typical Java primitives, but _is_ possible for arrays.",Bug,High,Open,"2016-05-10 23:47:29","2016-05-10 23:47:29",13
"The Titanium SDK ","Windows: blur is not supported on Windows warning. ","*app.js*            *Steps to reproduce:*   # Create a new project with the ENV and app.js above  # Run the application  # Switch between the tabs    *Actual :*  A warning is shown           *Expected:*  No warning is shown. ",Bug,Low,Closed,"2016-05-10 20:41:17","2016-05-10 20:41:17",2
"The Titanium SDK ","Windows: Failed to start emulator 10-0-X","Both via CLI and Studio does it find and properly start the emulators but once the app has been built and the emulator finished booting, it fails saying:        Building to device works fine.",Bug,None,Resolved,"2016-05-10 10:40:55","2016-05-10 10:40:55",1
"The Titanium SDK ","Windows: ScrollView click event always has ScrollView as source, not the actual view clicked on","On iOS and Android, when you add a {{click}} event listener to a {{Ti.UI.ScrollView}} the {{source}} property will have the actual (child) view you tapped on. On Windows, you always get the ScrollView as the following sample demonstrates:    {code:js}  var win = Ti.UI.createWindow();    var scrollView = Ti.UI.createScrollView({   backgroundColor: 'green'      // FIXME: https://jira.<USER>org/browse/TIMOB-23350   , width: Ti.UI.FILL, height: Ti.UI.FILL  });    scrollView.addEventListener('click', function(e) {   alert('e.source.apiName: ' + e.source.apiName);  });    scrollView.add(Ti.UI.createView({   width: 100,   height: 100,      backgroundColor: 'red'  }));    win.add(scrollView);    win.open();  {code}",Bug,High,Closed,"2016-05-10 10:13:31","2016-05-10 10:13:31",5
"The Titanium SDK ","Windows: ScrollView width/height should default to Ti.UI.FILL","As the [docs|http://docs.<USER>com/platform/latest/#!/guide/Layouts,_Positioning,_and_the_View_Hierarchy-section-29004895_Layouts,Positioning,andtheViewHierarchy-AutoSizeBehaviors] and Android and iOS have, {{Ti.UI.ScrollView}} should default to FILL.    The following example demonstrates it does not:    {code:js}  var win = Ti.UI.createWindow();    win.add(Ti.UI.createScrollView({   // width: Ti.UI.FILL, height: Ti.UI.FILL,   backgroundColor: 'green'  }));    win.open();  {code}    Remove the comments to see the expected behavior.",Bug,None,Closed,"2016-05-10 09:57:53","2016-05-10 09:57:53",3
"The Titanium SDK ","Windows: Closing Windows opened via Ti.UI.Tab.open() does not work as expected","Looking at other Windows apps the expected behaviour when using {{Ti.UI.Tab.open()}} to open a child Window should be:    * That the Tabs stay visible (/)  * That the content of the current tab is replaced by the child Window (/)  * That pressing the device back button should close the child Window, reveiling the previous Window again (x)  * That calling {{Ti.UI.Tab.close()}} passing the child window should do the same (x)  * That calling {{Ti.UI.Window.close()}} on the child window should do the same (x)    The last three are broken and need to be fixed:    * Pressing the device back button will close the app.  * Calling close on the Window or via the Tab doesn't do anything.    In addition, when the child window has a CommandBar, the CommandBar will be dismissed when you first call {{Ti.UI.Window.close()}}.    Example for all of this:    {code:js}  function createWindow(depth) {     var win = Ti.UI.createWindow({    layout : 'vertical'   });     win.add(Ti.UI.createLabel({    text : 'Depth ' + depth   }));     var openBtn = Ti.UI.createButton({    top : 20,    title : 'Open Child'   });     openBtn.addEventListener('click', function() {    tabA.open(createWindow(depth + 1));   });     win.add(openBtn);     if (depth > 0) {    var closeViaWinBtn = Ti.UI.createButton({     top : 20,     title : 'Close via Window'    });      closeViaWinBtn.addEventListener('click', function() {     win.close();    });      win.add(closeViaWinBtn);      var closeViaTabBtn = Ti.UI.createButton({     top : 20,     title : 'Close via Tab'    });      closeViaTabBtn.addEventListener('click', function() {     tabA.close(win);    });      win.add(closeViaTabBtn);      var backViaWinButton = Ti.UI.Windows.createAppBarButton({     icon : Ti.UI.Windows.SystemIcon.BACK    });      backViaWinButton.addEventListener('click', function() {     win.close();    });      var backViaTabButton = Ti.UI.Windows.createAppBarButton({     icon : Ti.UI.Windows.SystemIcon.BACKTOWINDOW    });      backViaTabButton.addEventListener('click', function() {     tabA.close(win);    });      win.add(Ti.UI.Windows.createCommandBar({     items : [backViaWinButton, backViaTabButton]    }));   }     return win;  }    var tabA = Ti.UI.createTab({   title : 'Tab A',   window : createWindow(0)  });    var tabB = Ti.UI.createTab({   title : 'Tab B',   window : Ti.UI.createWindow({    backgroundColor : 'green'   })  });    Ti.UI.createTabGroup({   tabs : [tabA, tabB]  }).open();  {code}",Bug,Critical,Closed,"2016-05-10 09:41:23","2016-05-10 09:41:23",8
"The Titanium SDK ","Windows: apiName should use Ti instead of Titanium namespace","{{apiName}} should use the {{Ti.\*}} namespace and not {{Titanium.\*}}    See:    * Reference: http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.View-property-apiName  * iOS: https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/TiViewProxy.m#L68  * Android: https://github.com/<USER>titanium_mobile/blob/415bd6c66dcc55b1a59a59574f3babd3c3a84ede/android/modules/ui/src/java/ti/modules/titanium/ui/ViewProxy.java#L42",Bug,Medium,Closed,"2016-05-10 08:54:27","2016-05-10 08:54:27",5
"The Titanium SDK ","Windows : Map annotations do not handle click events","Windows has support for the map namespace and according to API parity and looking at the code in the github repo almost all APIs are in, one thing we can´t get working is the annotation (or map) click event, there is in fact a click event, but the event is not returning and useful data, we do not know the e.source for instance or some similar data sp we can parse it and use it to know which annotation was clicked...    Can we expose the annotation some how so we can know what annotation was clicked by attaching to the proxy object and add a native handler?    ",Bug,Critical,Closed,"2016-05-09 14:01:34","2016-05-09 14:01:34",8
"The Titanium SDK ","Windows: Allow configuring deploy timeout","We are running a fairly complex Windows app and we are experiencing timeouts in the deploy <USER>to the device every now and then.. (50% at least of the times we build consecutive)    I have seen that specifically when one app needs to be removed as well as installed easy takes more than 60 sec... can we change this somehow?    The workaround I have now is that I  need to deinstall the existing app every time AND clean the project, this takes time.. can I change this timeout easily?    ",Improvement,High,Closed,"2016-05-09 13:57:44","2016-05-09 13:57:44",5
"The Titanium SDK ","Exception on iPhone: no row found for index. in -TiUITableViewProxy insertRowAfter","When you are trying to add numerous rows to a TableView using insertRowAfter it randomly causes exceptions: no row found for index. in -TiUITableViewProxy insertRowAfter:;    It looks line some code lines have been commented out for unknown reason and causing issues on the UI thread. Please see this commit:  https://github.com/<USER>titanium_mobile/commit/040cb9ab4350e6f3bd6eb5e22770f76ec9791b5e    And see this issue on the forum:  http://developer.<USER>com/question/129708/obj-c-fix-for-error-on-tableview-insertrowbefore--insertrowafter    This line should be back on those methods:  ENSURE_UI_THREAD(insertRowAfter,args);",Bug,Critical,Closed,"2012-10-18 12:29:48","2012-10-18 12:29:48",3
"The Titanium SDK ","Android http client sets the Content Type header on all requests verbs, causing some servers to time out when expecting a request body ","This is a bug found when attempting to connect to a backend running Hunchentoot (Clisp web server), and the CLisp web framework Lucerne.  Most other application servers I have experience with wouldn't mind, but this server expects to parse a request body when the Content Type is set. The Android http client, contrary to the iOS one, sets the content type not only on Post/Put/Patch as per the documentation, but actually on all http verbs.  The issue can be easily fixed by changing :      to       on itanium_mobile/android/modules/network/src/java/ti/modules/titanium/network/TiHTTPClient.java    I could send a pull request if you want.  Cheers  Richard",Bug,High,Closed,"2016-05-06 22:22:15","2016-05-06 22:22:15",2
"The Titanium SDK ","Windows: Ti.UI.Button - Color property sets background color instead of text color","According to http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Button-property-color the color property should set the text color of a button. Currently it sets and overrides any previously set backgroundColor.    Example:    index.xml      index.tss      index.js  ",Bug,Critical,Closed,"2016-05-03 12:38:56","2016-05-03 12:38:56",3
"The Titanium SDK ","Android: Titanium WebView fails at authentication","    DESCRIPTION:  When trying to login to Instagram via Facebook using webview, the authentication <USER>never gets completed but remain stuck forever halfway into the <USER>    On normal browser and other apps(not written on titanium) using the same webview android component, this is never the case. The authentication <USER>and everything went all well as expected and successfully takes the user to the Instagram homepage.    So obviously, this is a bug associated only with Titanium or otherwise similar other apps would behave similarly as was the with the titanium webview.    I have only tested on IG at the moment, but I'm sure this problem can occur to a lot of other sites too, thus hampering the development of webview based app to a lot of extent.    STEP to reproduce:  1. Copy the pasted code above into the app.js and run the app.  2. Now, login to your Instagram account using Facebook.  3. the authentication <USER>never successfully went through but stuck somewhere into the middle.    On careful examination, a warning message is generated that tells something like this produced -        Not sure if the warning has got to do anything with it.  ",Bug,Critical,Closed,"2016-04-27 19:46:24","2016-04-27 19:46:24",3
"The Titanium SDK ","Windows: Support font property on Ti.UI.TextField","SDK 5.4.0.v20160426000033    Setting fontSize on a TextField in Windows Phone does not work, it keeps the default size no matter what is set.    See example:    index.xml        index.tss      ",Improvement,High,Closed,"2016-04-28 17:56:45","2016-04-28 17:56:45",5
"The Titanium SDK ","Windows: Ti.UI.TextField textAlign does not affect hintText","The hinttext is always aligned to the left    SDK 5.4.0.v20160426000033",Bug,Medium,Closed,"2016-04-28 18:12:10","2016-04-28 18:12:10",5
"The Titanium SDK ","Android: Attempt to invoke virtual method 'void android.view.OrientationEventListener.disable()' on a null object reference Crash","We get the following crash frequently:    java.lang.RuntimeException: Unable to destroy activity {com.myapp/org.<USER>titanium.TiActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'void android.view.OrientationEventListener.disable()' on a null object reference  at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:3821)  at android.app.ActivityThread.handleDestroyActivity(ActivityThread.java:3839)  at android.app.ActivityThread.access$1400(ActivityThread.java:162)  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1403)  at android.os.Handler.dispatchMessage(Handler.java:102)  at android.os.Looper.loop(Looper.java:135)  at android.app.ActivityThread.main(ActivityThread.java:5431)  at java.lang.reflect.Method.invoke(Native Method)  at java.lang.reflect.Method.invoke(Method.java:372)  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:914)  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:707)  Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'void android.view.OrientationEventListener.disable()' on a null object reference  at org.<USER>titanium.TiBaseActivity.onDestroy(TiBaseActivity.java:1477)  at org.<USER>titanium.TiActivity.onDestroy(TiActivity.java:29)  at android.app.Activity.performDestroy(Activity.java:6235)  at android.app.Instrumentation.callActivityOnDestroy(Instrumentation.java:1141)  at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:3808)  ... 10 more     It is happening when android os terminates app to save memory at onDestroy method. (This happens quite a lot since our users usually keep app open for long periods) This is not happening at 4.0 sdk (we got those after upgrading from 4.0 to 5.2.2)    After searching changes history this change seems to have caused this behavior :     https://github.com/<USER>titanium_mobile/commit/2b12ad61775920f8045e168ae678ce123dfa14b4 seems to have caused the issue  ",Bug,Critical,Closed,"2016-04-29 20:24:48","2016-04-29 20:24:48",2
"The Titanium SDK ","Windows: Fix Ti.Contacts.getAllPeople unit test","Our Windows 10 unit tests sometimes crash out on Ti.Contacts.getAllPeople, causing the builds to be unstable.",Story,High,Closed,"2016-05-05 19:26:45","2016-05-05 19:26:45",5
"The Titanium SDK ","Windows: Implement Ti.UI.TableView filter properties","Implement {{filterAttribute}}, {{filterAnchored}} and {{filterCaseInsensitive}} properties for {{Ti.UI.TableView}}.        *Expected:*    * Typing `A` with `filterCaseInsensitive: true` & `filterAnchored:false` should list all items  * Typing `A` with `filterCaseInsensitive: false` & `filterAnchored:false` should show only ` Apple`  * Typing `A` with `filterAnchored:true` should show only `Apple`  * Typing `Za` with `filterAttribute`, `filterCaseInsensitive: true` & `filterAnchored:false`  should show `Apple` and `Carrots`  * Typing `Za` with `filterAttribute`, `filterCaseInsensitive: true` & `filterAnchored:true` should show only `Carrots`  ",Improvement,Medium,Closed,"2016-05-05 14:15:42","2016-05-05 14:15:42",5
"The Titanium SDK ","Windows: Implement Ti.UI.TableView border properties","Implement {{borderColor}}, {{borderWidth}}, {{borderRadius}} for {{Ti.UI.TableView}}.    *sample code*      *Expected*    !Capture.PNG|thumbnail!  ",Improvement,Medium,Closed,"2016-05-05 14:11:10","2016-05-05 14:11:10",5
"The Titanium SDK ","Windows: Implement Ti.UI.TableViewRow.hasChild","Investigate if Windows ListView supports child element for its row and implement {{hasChild}} property for {{Ti.UI.TableViewRow}} if possible. ",Improvement,Medium,Open,"2016-05-05 14:09:13","2016-05-05 14:09:13",8
"The Titanium SDK ","Windows: Implement Ti.UI.TableViewRow.font","Implement {{font}} property for {{Ti.UI.TableViewRow}}",Improvement,Medium,Open,"2016-05-05 14:05:03","2016-05-05 14:05:03",5
"The Titanium SDK ","Windows: Implement Ti.UI.TableViewRow.hasCheck","Implement {{hasCheck}} property for {{Ti.UI.TableViewRow}}",Improvement,Medium,Open,"2016-05-05 14:03:41","2016-05-05 14:03:41",5
"The Titanium SDK ","Windows: Ti.Platform.openURL does not open some media files","Currently, {{Ti.Platform.openURL}} will attempt to open the a URI using {{LaunchUriAsync}}. However, certain file types won't open.    Should we allow the content-type to be specified? We could also use https://msdn.microsoft.com/en-us/library/windows/apps/hh701471.aspx    ",Bug,Medium,Closed,"2016-05-05 06:20:42","2016-05-05 06:20:42",8
"The Titanium SDK ","iOS app rejected because Invalid Swift Support - The SwiftSupport folder is missing","On [Stack Overflow|http://stackoverflow.com/questions/36833477/invalid-swift-support-the-swiftsupport-folder-is-missing] a user reports his app was rejected with the following message:    {quote}  Dear developer,    We have discovered one or more issues with your recent delivery for xxxxxxxxxxx. To <USER>your delivery, the following issues must be corrected:    Invalid Swift Support - The SwiftSupport folder is missing. Rebuild your app using the current public (GM) version of Xcode and resubmit it.    Once these issues have been corrected, you can then redeliver the corrected binary.  {quote}    My guess is that since 7.3 we need {{EMBEDDED_CONTENT_CONTAINS_SWIFT = YES}} for the watch app extension target as well, not just the watch app (which was what Xcode did before).    https://github.com/<USER>titanium_mobile/blob/master/templates/applewatch/watchos2-swift/template/%7B%7BExtName%7D%7D.xcodeproj/project.pbxproj.ejs#L327-L386",Bug,Critical,Closed,"2016-05-04 11:42:41","2016-05-04 11:42:41",8
"The Titanium SDK ","Errant hard coded version reference in TiUIEmailDialogProxy.m","These debug messages should not have the version hard coded in them.    https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/TiUIEmailDialogProxy.m#L60    https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/TiUIEmailDialogProxy.m#L87    https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/TiUIEmailDialogProxy.m#L89",Story,Low,Closed,"2016-05-03 22:43:47","2016-05-03 22:43:47",1
"The Titanium SDK ","Android: Upgrade v8 and rebuild it with NDK 11","Merge this branch with master: https://github.com/<USER>titanium_mobile/tree/v8-update  Testing steps: Run scons with NDKr11c.",Story,High,Closed,"2016-05-03 19:53:00","2016-05-03 19:53:00",34
"The Titanium SDK ","Android: pdf and xls files with response headers  (Content-Type →application/octet-stream) not opening with Ti sdk 5.0.0,5.1.1, 5.2.0","h3. Steps to Reproduce Download the Sample Pdf Viewer Code from 'https://gist.github.com/<USER>fa5195aba08d1b5e8fa0' Replace the url in line no 66, index.js file with 'http://dev-cms-molpower.trafficmanager.net/ServiceProfileFileHandler.ashx?svc=CMI&file=FirstSchedule.pdf' for pdf. On clicking the URL button . We get an alert 'This document cannot be opened'.  The same works with Ti SDK 4.0.0.  h3. Actual Result Pdf / Xls not getting opened  h3. Expected Result The pdf should be opened successfully",Bug,Critical,Closed,"2016-04-26 10:20:46","2016-04-26 10:20:46",3
"The Titanium SDK ","Windows: Implement support for scrollingEnabled in Ti.UI.ScrollableView","Ti.UI.ScrollableView: scrollingEnabled is not supported by the Windows platform.    Since this works in both Android and iOS it would be nice to be able to programmatically disable scrolling sideways. We use this in a scenario where the user has to accept EULA before the scrolling is enabled.",Improvement,High,Closed,"2016-05-03 05:19:43","2016-05-03 05:19:43",5
"The Titanium SDK ","Windows: Localized strings in strings.xml don't handle \n newlines","SDK: 5.4.0.v20160426000033    When setting the text property of a Ti.UI.label object to something containing '\n' to represent new line, the '\n' is printed in the UI instead of inserting a new line.    ",Bug,Critical,Closed,"2016-04-28 11:15:17","2016-04-28 11:15:17",5
"The Titanium SDK ","Windows: Ti.UI.Label width is not updated when setting new text","SDK 5.4.0.v20160426000033    Test code:    index.xml      index.tss      index.js        When clicking the label you can see that the label is divided into 2 rows with a newline. Expected behaviour based on Android/iOS is that the label width is recalculated to fit the new text.",Bug,Medium,Closed,"2016-05-03 08:29:20","2016-05-03 08:29:20",5
"The Titanium SDK ","iOS: Today extension doesn't show any content","You can't see the changes made to the MainInterface.storyboard in the today extension project. The reason why this happens is that the Linked Frameworks and Libraries of the extension target is somehow not referenced properly when combined with the main app.     See example app: https://github.com/cheekiatng/titaniumToday    The work around now is to open the Xcode project in the build folder, select the titaniumToday extension target, and manually add NotificationCenter.framework in Linked Frameworks and Libraries. ",Bug,Critical,Closed,"2016-05-03 04:38:05","2016-05-03 04:38:05",13
"The Titanium SDK ","Windows: Update Boost library version to latest stable in setup script","The current version of the Boost library we use is out of date. We should update our setup NodeJS script to use the latest stable to avoid all the Unknown compiler version warnings during the build. This may require creating our own specialized subset of the library in a zipfile on S3, since the typical library has so many files it becomes a huge performance issue on initial setup (one-time).",Story,High,Closed,"2016-05-02 14:13:50","2016-05-02 14:13:50",3
"The Titanium SDK ","Windows: Ti.API.log doesn't handle single argument","Hello,  I have found that {{Ti.Locale.setLanguage}} works on Android but not on Windows Phone.  *Steps:*  1. Create a default classic project.  2. Replace app.js code with following.    3. Build and run the app.  4.On Android following console log is produced.     But on Windows Phone the app fails to run and following error log is produced.    Thanks    *Environment*:    *Device info:* Nexus7 (android 6.0.1) , Microsoft Lumia 640 (Windows Phone 8.1)  *Node.js Version:* 0.12.7  *npm Version:* 2.11.3  *Titanium SDKs:* 5.2.2.GA and 5.2.1.GA  *Java Development Kit Version:* 1.8.0_73  *Titanium CLI Version:*  5.0.5  *<USER>CLI Version:*  5.2.2  *<USER>Studio:* 4.5.0",Bug,Critical,Closed,"2016-05-02 13:39:49","2016-05-02 13:39:49",3
"The Titanium SDK ","Update pre-packaged Ti.Facebook to 5.2.0","v5.2.0 Updated Facebook API to 4.11.0 in iOS  - Support `loginBehavior` on iOS and Android [MOD-2242]  - Support new parameters in `logCustomEvent` on iOS and Android [MOD-2248]  - Support `logPurchase` on iOS and Android [MOD-2244]    For the QE: Please ensure the above tickets have been tested, as well as the Facebook KitchenSink integration.",Improvement,High,Closed,"2016-05-01 08:49:57","2016-05-01 08:49:57",1
"The Titanium SDK ","Module Error during App startup with Ti SDK 5.2.1.GA and 5.2.2.GA but works on 5.1.2.","h6.description  We have a custom module that uses IBM's Trusteer SDK to perform some device checks during app startup.     We were notified by Google that our app built with SDK version 5.1.2.GA has a security vulnerability. <USER>support recommended upgrading to 5.2.1.GA.     During upgrade, we found that the Trusteer custom module failed to load during startup causing app crash. See below for the error log. We found that the issue exists in version 5.2.2.GA as well.     Since it's working with 5.1.2.GA, we assume that something changed in the newer SDK versions broke the module.     h6.Steps to Reproduce  1. Create a sample Alloy or Classic App.  2. Paste the below code into the app.js file.  3. Add the attached module.  4. Run on iOS device or simulator.      h6. Expected behaviour  Since it works on Ti SDK - 5.1.2. It should works on later version.      h6. Test code  {code:title=app.js}  var win = Ti.UI.createWindow({   backgroundColor : Red  });    // Create a Button.  var ShowData = Ti.UI.createButton({   title : 'ShowData',   height : 100,   width : 100,    });    // Listen for click events.  ShowData.addEventListener('click', function() {     Ti.API.info(Loading Trusteer module...);   var TrusteerModule = require('com.comerica.trusteer');     var trusteerResponse = TrusteerModule.getRiskAssessment();   alert(JSON.stringify(trusteerResponse));    });    // Add to the parent view.  win.add(ShowData);    win.open();        Thanks  ",Bug,Critical,Closed,"2016-04-29 20:21:02","2016-04-29 20:21:02",5
"The Titanium SDK ","Calling Ti.App.getArguments() crashes app when launched via new App Shortcuts","I am testing out the new support for Application Shortcuts as described here:  http://www.<USER>com/blog/2015/11/ios-9-3d-touch-sample-app/    I have the shortcuts showing when I press on the app icon - perfect.    However as soon as the app launches it crashes. And the reason is that when the app is launched or resumed I perform some checks for incoming parameters using the Ti.App.getArguments().    And it seems that whenever the app is *launched* using a App Shortcut, then any subsequent call to Ti.App.getArguments() crashes the app.    The crash error message is:        I will attach a sample project which has a App Shortcut set in the tiapp.xml file as follows:    {code:xml}  <key>UIApplicationShortcutItems</key>  <array>    <dict>      <key>UIApplicationShortcutItemIconType</key>      <string>UIApplicationShortcutIconTypeSearch</string>      <key>UIApplicationShortcutItemTitle</key>      <string>Search</string>      <key>UIApplicationShortcutItemType</key>      <string>search</string>      <key>UIApplicationShortcutItemUserInfo</key>      <dict/>    </dict>  </array>  {code}    And a very simple app.js using native code:    {code:javascript}  var win = Ti.UI.createWindow({     backgroundColor: 'blue'  });  win.open();    Ti.App.getArguments();  {code}    Make sure the app is force closed. Then launch the app via the App Shortcut (not the app icon). It will crash with the above error.    Tested on my iPhone 6S Plus.",Bug,Critical,Closed,"2016-03-29 23:44:48","2016-03-29 23:44:48",5
"The Titanium SDK ","Windows: Implement Ti.Locale.setLanguage","Both iOS and Android supports Ti.Locale.setLanguage, however the function is not documented.    Is it supposed to be supported or is it deprecated?    *Test code*        {code:title=i18n/en/strings.xml}  <?xml version=1.0 encoding=UTF-8?>  <resources>    <string name=this is my key>this is my value</string>  </resources>    ",Improvement,High,Closed,"2016-04-20 07:12:35","2016-04-20 07:12:35",5
"The Titanium SDK ","Windows: Support backgroundColor for Ti.UI.Picker","The color of the PickerRows seems to always be white",Improvement,High,Closed,"2016-04-29 09:57:35","2016-04-29 09:57:35",5
"The Titanium SDK ","Windows: Corporate Directory App layout issue","Layout issue at directory view on [Corporate Directory App|https://github.com/<USER>se/corporate-directory]. It happens both Windows Phone 8.1 and Windows 10.",Bug,Critical,Closed,"2016-04-29 06:40:05","2016-04-29 06:40:05",5
"The Titanium SDK ","Windows: Random Values while trying to decrypt value using AES encryption on device","I am trying to implement encryption in my app for Windows Phone 8.1, it successfully encrypts the value but when I try to decrypt the same value it is generating random values every time.    Below is the code I am using for encryption and decryption.          P.S  : When I run this app on emulator it is correctly decrypting the vales but when I try same app on device I am facing the above stated problem.",Bug,High,Closed,"2016-04-12 15:17:16","2016-04-12 15:17:16",8
"The Titanium SDK ","Unable to build for Android and iOS using node 6.0 with 5.2.2.GA & latest 5.3.0 components","h5.Steps to reproduce:  1. Install node 6.0 & use components mentioned in the environment.  2. Using studio build an android or ios app to device & emulator/simulator.    h5.Actual Results:  1. The build fails with logs below:    2. Same issue is seen with latest components & SDK.    h5.Expected Results:  1. The build should not fail.",Bug,Critical,Closed,"2016-04-28 00:21:13","2016-04-28 00:21:13",5
"The Titanium SDK ","Windows: ProgressBar Ti.UI.FILL does not display the bar correctly","Setting the ProgressBar width property to {{Ti.UI.FILL}} does not display the same behaviour on Windows Phone, as it does on iOS / Android.    *This affects both device & emulator.*    h3. TEST CODE:      h2. Steps to Reproduce  1. Create a classic mobile application.  2. Apply test code to app.js file.  3. Deploy app to Windows 10 phone device / emualator.  4. Launch app    h2. Actual Result    _see windows phone screenshot_  Progress Bar is aligned to the left, and does not fill the width of the window.  h2. Expected Result    _see iPhone screenshot_  Progress Bar should fill the entire width of the window.",Bug,Medium,Closed,"2016-04-27 21:06:14","2016-04-27 21:06:14",5
"The Titanium SDK ","Search Bar: search results listview  background color change","I have a window with backgroundImage and a listView with backgroundColor transparent and labels of all item white.  When I click on searchBar and start typing the backgroundColor of listView became white and the results are unreadable because item's labels have the same color of background.    Android work fine with the same component Ti.UI.createSearchBar",Improvement,Medium,Closed,"2015-12-09 15:27:48","2015-12-09 15:27:48",5
"The Titanium SDK ","Windows: Omit invalid devices from wptool detection","wptool.js always reports a device, even if there is not one connected        The wptool binary does not omit any invalid devices, this is reported when no device is connected or when two devices are connected.  ",Bug,High,Closed,"2016-04-27 02:21:35","2016-04-27 02:21:35",5
"The Titanium SDK ","Windows: Ti.Map does not use the region when specified on Windows 10","Windows 10 does not use region where as Windows 8.1 does     *App.js*          *tiapp.xml*          *Steps to reproduce:*   # Use the app.js above and insert the map token in the tiapp.xml  # Run the application    *Actual :*  Windows 10 mobile does not use the region values.    *Expected:*  The same results as Windows 8.1.",Bug,Critical,Closed,"2016-04-26 21:36:45","2016-04-26 21:36:45",5
"The Titanium SDK ","Windows: Unable to change titleColor/activeColor of Ti.UI.Tab","I believe it's not possible to change te color of the Tab title. Can't find anything in the documentation. I have tried things that work for Android and iOS, but that didn't work for Windows.    index.xml      index.tss  {code:tss}  'TabGroup': {   backgroundColor: '#E6E6E6'  }  'TabGroup[platform=ios]': {   tintColor: 'red'  }  {code}  ",Improvement,Medium,Closed,"2016-04-08 09:22:08","2016-04-08 09:22:08",5
"The Titanium SDK ","Windows: Deprecate Ti.UI.View.enabled, rename to touchEnabled","While reviewing a windows ticket, implementing the enabled property for view elements, it was found that it was not implemented for iOS. This should be fixed to achieve parity between android & windows.     *TEST CODE:*        h2. Steps to Reproduce  1. Create a default classic mobile project.  2. Apply test code above to app.js file.  3. Deploy app to iOS simulator / device.  4. After launching the app, click / tap on left view.  5. Click / tap on right view.    h2. Actual Result  Left view *enabled* property is set to {{true}} : Alert appears when clicked.  Right view *enabled* property is set to {{false}} : Alert appears when clicked.      h2. Expected Result.  Left view *enabled* property is set to {{true}} : Alert *should* appear when clicked.  Right view *enabled* property is set to {{false}} : Alert *should NOT* appear when clicked.",Improvement,Medium,Closed,"2016-04-26 18:28:42","2016-04-26 18:28:42",2
"The Titanium SDK ","Windows: No warn logging from internal TITANIUM_LOG_WARN","h5.Description    While [~<USER> was closing TIMOB-19946 he was told that when attempting to use the below code it should print out a warning on Windows 10 Mobile and Windows Phone 8.1, informing the user that alertDialoghide() is unsupported on those platforms.     {code: title=Example 1}  var a = Ti.UI.createAlertDialog({title: 'Alert', message: 'This will hide in 3 seconds'});  a.show();    // hide alert after 3 seconds  setTimeout(function () {      a.hide();  }, 3000);    // show alert after another 3 seconds  setTimeout(function () {      a.show();  }, 6000);      h5.Steps to reproduce    1. Using example 1 build to a Windows 10 Mobile device or emulator  2. Using example 2 build to any Windows target    h5.Actual result    No warning logs are printed in either case    h5.Expected result    1. {{AlertDialog::hide() is not supported on Windows Phone}} or {{AlertDialog::hide() is not supported on Windows 10 Mobile}} should be logged depending on the os  2. {{HTTPClient::send: Data found during a GET request. Method will be changed to POST.}} should be logged ",Bug,High,Closed,"2016-04-25 22:05:09","2016-04-25 22:05:09",3
"The Titanium SDK ","Windows: Cannot set Blob as image on ImageView","When trying to get media from the Photo Gallery, I cannot set any blob to an ImageView, no matter how I try it. This is my code in the controller        $.imageView is of course an ImageView. It is visible before this is set (300 high, 200 wide) using https://unsplash.it/200/300/?random as image.",Bug,High,Closed,"2016-04-25 16:11:41","2016-04-25 16:11:41",5
"The Titanium SDK ","Windows: Tooling for initial pairing/setup of Windows 10 device/emulator","Currently, it is a pain in the butt to deal with a device that has not yet been paired. The user needs to install an app to the device/emulator through Visual Studio to have it set up the pairing/developer mode for the user. But even then, we don't really inform the user that's the best/easiest course of action to get started.    It'd be nice to add additional tooling to be able to walk a user through manually pairing a device/emulator outside Visual Studio. Or informing them how to get setup once with a blank app in VS.    For manual setup:  1. connect device  2. Ask user to go to Settings > Personalization > Lock Screen > set to 5 mins+ (so phone doesn't lock mid-build/deploy)  3. Walk user through Settings > Update & Security > Change to 'developer mode'. (to enable app installs)  4. Click Pair button (for emulators, don't need to pair for device over USB)  5. Ask user to enter the pair code in our CLI, we deploy a simple blank app to device to get initial pairing done.  6. No more access denied/etc!  ",Improvement,High,Open,"2016-04-25 13:59:11","2016-04-25 13:59:11",8
"The Titanium SDK ","Android: ActionBar not available for TabGroup","I tried to hide the action bar by following the doc here:  http://docs.<USER>com/platform/latest/#%21/guide/Android_Action_Bar-section-36735509_AndroidActionBar-HidingtheActionBar    As the doc says: *To automatically hide the action bar when opening a window or tab group, you need to modify the theme to hide the action bar.*    But modifying the theme when opening a tabgroup results following error:  [ERROR] :  TabGroupProxy: (main) [315,315] ActionBar not available for TabGroup    *Reproduction:*  1. Create a classic app and replace app.js with the sample code  2. Add custom theme and modify tiapp.xml  3. Run the app    Expected: No action bar should be visible  Actual:  [ERROR] :  TabGroupProxy: (main) [315,315] ActionBar not available for TabGroup    *Test Case:*  app.js    *tiapp.xml*    *custom_theme.xml*    ",Bug,High,Closed,"2016-04-25 11:38:05","2016-04-25 11:38:05",5
"The Titanium SDK ","Hyperloop: Android - Unable to call method accepting byte[] argument","    results in:       See http://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html#setValue(byte[])  ",Bug,High,Closed,"2016-04-22 14:32:33","2016-04-22 14:32:33",5
"The Titanium SDK ","Android: Hyperloop: Allow requiring java package to access types","Currently, when we want to use a {{View}} with Hyperloop, we need to require it the following way:  *Android*:    Now if we want to use another class from the {{android.view}} package e.g. {{Menu}}, we need to do:      The approach is to make it possible to require frameworks like we do it in Swift/Objective-C and expose the available classes automatically:      Or using ES6 syntax:  ",Improvement,High,Closed,"2016-04-22 13:22:44","2016-04-22 13:22:44",8
"The Titanium SDK ","Cannot access Appcelerator AWS storage from Android httpclient request","h6. Issue Description    Mark files as private (s3_acl:private) in the <USER>cloud storage is returning 403:forbidden response from AWS in Android when user try to download the file.     h6. Steps to replicate  1. App queries cloud to get a list of files   2. User selects a file from generated list   3. App queries cloud to get temporary URL for selected file   4. returned url is used in httpclient to download the file (A pdf in this case)   5. file is displayed     On iOS this works fine, however on Android is returning a 403:forbidden response from AWS when I try to download the pdf. Before setting the files to private, this solution worked fine and I was able to download and display the files on both OS's     h6. Additional notes  All of the calls to the cloud are done through an ArrowDB app hosted on node.js and I've tried using the sessionCookie from that login, but with no luck - though I'd assume that once the URL has been retrieved it is temporarily available to anyone and doesn't require further authentication - can't find much in the way of documentation around the differences of setting s3_acl to private. ",Bug,Critical,Closed,"2016-04-06 15:36:34","2016-04-06 15:36:34",3
"The Titanium SDK ","Windows: Unable to load CommonJS module with no package.json or index.js","When trying to load a CommonJS module (in my case http://github.com/Topener/To.ImageCache) it complained it couldn't find it even though it works on Android/iOS    I had to move the js file to the lib folder for it to work again.     We need to support the legacy pattern of looking for moduleid/moduleid.js in Titanium CommonJS modules. Right now we require spec-compliant CommonJS directories: a package.json pointing to main; an index.js or an index.json.",Bug,High,Closed,"2016-04-21 15:16:17","2016-04-21 15:16:17",5
"The Titanium SDK ","Windows: Opening camera launches a view overlay instead of a full screen window where the user can take a photo","In the attachment you can see the test screen of the Windows Phone Simulator Camera. In both Android and iOS, when you open up the camera you get a full-screen windows instead of just a view like this.    The overlay view is the result of:    ",Bug,High,Closed,"2016-04-21 20:41:16","2016-04-21 20:41:16",8
"The Titanium SDK ","Windows: Error when adding capabilities in wrong order","When I have capabilities in this order:        I get an error:      However, when I put them in this order all works fine:        This sounds like a bug",Improvement,Medium,Closed,"2016-04-21 14:46:57","2016-04-21 14:46:57",5
"The Titanium SDK ","Windows: Logs don't appear from background/async threads","Once index.js has been executed the following is shown in the log:    [INFO] :   Finished launching the application  [INFO] :   Waiting for app to connect to log relay  -- End application log -------------------------------------------------------    This means that no asynchronous events in the code will be printed and debugging is quite hard to say the least.",Bug,Critical,Closed,"2016-04-20 07:08:19","2016-04-20 07:08:19",5
"The Titanium SDK ","Windows: Build errors when building to device and selecting second option in device prompt","h5.Description    When building to wp-device and selecting the second option in the prompt, the build will fail with {{\[ERROR] Unable to find an Windows Phone device with the UDID undefined}}. Although this second option is more user friendly as it contains information about the device being built to, rather than just {{Device}},we should not present the option if it will fail the build    *To workaround this issue just select the first option*    h5.Steps to reproduce    # Build a project using {{appc run -p windows -T wp-device}} and select option 2    h5.Actual result    # The build will fail with {{\[ERROR] Unable to find an Windows Phone device with the UDID undefined}}    h5.Expected result    The build should not fail, we should no present the second option if it will fail the build",Bug,Critical,Closed,"2016-04-20 21:40:50","2016-04-20 21:40:50",5
"The Titanium SDK ","iOS: Hyperloop sample app not working. ","h3. we tried hyperloop sample app with SDK 5.2.2 GA & 6.0.0.v20160107190008 PFA(logs). ",Improvement,Critical,Closed,"2016-04-18 07:25:55","2016-04-18 07:25:55",1
"The Titanium SDK ","Windows: Modules do not build with 'appc run'","Modules do not build when using {{appc run}}        ",Bug,Critical,Closed,"2016-04-20 20:03:20","2016-04-20 20:03:20",5
"The Titanium SDK ","Windows: module project cmake generator should select VS version accordingly","Currently if you need to create module project for VS 2013, you need to run {{ti create -p windows -t module --wp-sdk 8.1}} . Unfortunately {{appc new --wp-sdk 8.1 ...}} doesn't work in this case. But basically Titanium CLI should be able to select appropriate VS version accordingly without demanding user input.    So on {{appc new}} or {{ti create}}, CLI should select VS version accordingly:    - When user installs VS 2013 only, cmake VS 2013 generator should be selected  - When user installs VS 2015 only, cmake VS 2015 generator should be selected  - When user installs both VS 2015 and VS 2013, cmake VS 2015 generator should be selected because it's newer    ",Bug,Critical,Closed,"2016-04-20 13:58:07","2016-04-20 13:58:07",5
"The Titanium SDK ","CLI: ti clean does not work for native module projects","{{ti clean}} failed when you run it under the native module project directory. It could cause issue when CMake fails and leaves broken cache files. There's no way to remove it from Titanium CLI now.      ","New Feature",High,Closed,"2016-04-20 11:43:21","2016-04-20 11:43:21",8
"The Titanium SDK ","Windows: Unable to create Module project","*Summary*    Creating module project doesn't work when Visual Studio 2015 is not installed.     *Steps to Reproduce*    Run {{appc new -n test --id com.example.test}} under the environment where Visual Studio 2015 is not installed.    *Expected Result*      - When user installs VS 2013 only, it shoud generate VS 2013 module project  - When user installs VS 2015 only, it should generate VS 2015 module project  - When user installs both VS 2015 and 2013, it should generate VS 2015 module project because it's newer    -------------------------------    Following the docs on creating a module (to be able to use background service or similar features) do not work. The error is that the module cannot be created due to this error:    This was not a problem when I tried crating a module poor to the new SDK 5.4.0.v20160419xxxxxx    Then again I did not use the same module create command, but this proposed method does not work. I want to ask you why the system complains about the when I indeed have Phone 8.1 installed. I create this bug on your request since this is stopping me to test the background service features you have added and is critical to us!    This is my setup:    I create the module with: {{appc new -n test --id com.example.test}}    Docs:  https://wiki.<USER>org/display/guides2/Windows+Background+Service+Quick+Start#WindowsBackgroundServiceQuickStart-WindowsModulePrerequisites    Is there something wrong here? Do remember I build both my old module with old SDK 20160406 and I also build my app like that, but anything newer does not work.. and as stated here I am not even able to create a new module. I was hoping that using SAME working module but build with latest SDK and also build then in App with latest SDK would work, at least, but not even that.    Please help    thanks",Bug,Critical,Closed,"2016-04-20 11:18:36","2016-04-20 11:18:36",5
"The Titanium SDK ","Windows: Building a module with latest 5.4.0 SDK cannot be used in app","Related to the ticket regarding building a windows module and not packaging it right, trying to copy over the folder structure is no problem, however when I then try to build the app with the new module I get strange errors in the module detection part:    It complains about cyan and the module is the SAME module exactly as I used with the old SDK 5.4.0.v20160406 , I did use the same SDK with the newer build so I use the 20160419 both building the module and using it in the app...    2016-04-20T09:56:33.289Z | ERROR  | An uncaught exception was thrown!  Cannot read property 'cyan' of undefined  2016-04-20T09:56:33.291Z | ERROR  | Cannot read property 'cyan' of undefined  2016-04-20T09:56:33.291Z | TRACE  | TypeError: Cannot read property 'cyan' of undefined      at C:\Users\jorgenbuder\Library\Application Support\Titanium\mobilesdk\win32\5.4.0.v20160419234222\node_modules\node-appc\lib\timodule.js:485:120      at Array.forEach (native)      at C:\Users\jorgenbuder\Library\Application Support\Titanium\mobilesdk\win32\5.4.0.v20160419234222\node_modules\node-appc\lib\timodule.js:456:34      at Array.forEach (native)      at C:\Users\jorgenbuder\Library\Application Support\Titanium\mobilesdk\win32\5.4.0.v20160419234222\node_modules\node-appc\lib\timodule.js:452:33      at Array.forEach (native)      at C:\Users\jorgenbuder\Library\Application Support\Titanium\mobilesdk\win32\5.4.0.v20160419234222\node_modules\node-appc\lib\timodule.js:448:30      at C:\Users\jorgenbuder\Library\Application Support\Titanium\mobilesdk\win32\5.4.0.v20160419234222\node_modules\async\lib\async.js:52:16      at Object.async.forEachOf.async.eachOf (C:\Users\jorgenbuder\Library\Application Support\Titanium\mobilesdk\win32\5.4.0.v20160419234222\node_modules\async\lib\async.js:236:30)      at Object.async.forEach.async.each (C:\Users\jorgenbuder\Library\Application Support\Titanium\mobilesdk\win32\5.4.0.v20160419234222\node_modules\async\lib\async.js:209:22)  ---------------------------------------------      at Object.exports.execFile (child_process.js:821:9)      at exports.exec (child_process.js:649:18)      at C:\Users\jorgenbuder\.<USER>install\5.2.2\package\node_modules\titanium\node_modules\node-appc\lib\environ.js:267:3      at C:\Users\jorgenbuder\.<USER>install\5.2.2\package\node_modules\titanium\node_modules\async\lib\async.js:697:13      at C:\Users\jorgenbuder\.<USER>install\5.2.2\package\node_modules\titanium\node_modules\async\lib\async.js:52:16      at C:\Users\jorgenbuder\.<USER>install\5.2.2\package\node_modules\titanium\node_modules\async\lib\async.js:272:32      at C:\Users\jorgenbuder\.<USER>install\5.2.2\package\node_modules\titanium\node_modules\async\lib\async.js:44:16      at C:\Users\jorgenbuder\.<USER>install\5.2.2\package\node_modules\titanium\node_modules\async\lib\async.js:694:17      at C:\Users\jorgenbuder\.<USER>install\5.2.2\package\node_modules\titanium\node_modules\async\lib\async.js:173:37  ---------------------------------------------      at Object.exports.execFile (child_process.js:821:9)      at exports.exec (child_process.js:649:18)      at C:\Users\jorgenbuder\.<USER>install\5.2.2\package\node_modules\titanium\node_modules\node-appc\lib\environ.js:255:6      at C:\Users\jorgenbuder\.<USER>install\5.2.2\package\node_modules\titanium\node_modules\async\lib\async.js:689:13      at iterate (C:\Users\jorgenbuder\.<USER>install\5.2.2\package\node_modules\titanium\node_modules\async\lib\async.js:265:13)      at async.forEachOfSeries.async.eachOfSeries (C:\Users\jorgenbuder\.<USER>install\5.2.2\package\node_modules\titanium\node_modules\async\lib\async.js:284:9)      at _parallel (C:\Users\jorgenbuder\.<USER>install\5.2.2\package\node_modules\titanium\node_modules\async\lib\async.js:688:9)      at Object.async.series (C:\Users\jorgenbuder\.<USER>install\5.2.2\package\node_modules\titanium\node_modules\async\lib\async.js:710:9)      at Object.getOSInfo (C:\Users\jorgenbuder\.<USER>install\5.2.2\package\node_modules\titanium\node_modules\node-appc\lib\environ.js:223:8)",Bug,High,Closed,"2016-04-20 10:00:42","2016-04-20 10:00:42",5
"The Titanium SDK ","Windows: Module building cannot package zip file when Win 10 targets are used","*Summary*    Creating Windows 10 module failed on Windows 8.1, or under the environment where Visual Studio 2015 is not installed.     *Steps to Reproduce*    Run {{appc new -n test --id com.example.test}} under the environment where Windows 8.1, or Visual Studio 2015 is not installed.    -------------    I am using modules for Windows at the moment (as you know) and I compiled my old module with the SDK 5.4.0.v20160406002717 and this SDK created a fully functioning zip archive that I could copy over to project root and the run, decompress and use successfully (still not doing background service at this point).    After updating my appc ti sdks list and make sure I select the latest 5.4.0.v20160419234222 and go back, clean my module build folder AND the temp folder in AppData and them rebuild the build goes though BUT when it tried to package the app it tries to package some Windows 10 targets, targets that I do not have since I use Windows 8.1 OS and Phone 8.1 I do not have Win 10 at all, also I use the visial studio 2013, so there are no Win 10 targets or folders yet it tries to package this into the zip file, the script dies and do not continue to package the rest. Effectively I end up with a zip file = 0 bytes and unuseable...    Time Elapsed 00:00:11.81  [INFO]  Skipping Z:\Users\jorgenbuder\Documents\<USER>Studio_Workspace\gwsmodules\extendwindows\windows\Windows10  .ARM\GwsExtendwindows.sln  [INFO]  Skipping Z:\Users\jorgenbuder\Documents\<USER>Studio_Workspace\gwsmodules\extendwindows\windows\Windows10  .Win32\GwsExtendwindows.sln  [DEBUG] Skipping Z:\Users\jorgenbuder\Documents\<USER>Studio_Workspace\gwsmodules\extendwindows\windows\WindowsSt  ore.ARM  [DEBUG] Skipping Z:\Users\jorgenbuder\Documents\<USER>Studio_Workspace\gwsmodules\extendwindows\windows\Windows10  .ARM  [DEBUG] Skipping Z:\Users\jorgenbuder\Documents\<USER>Studio_Workspace\gwsmodules\extendwindows\windows\Windows10  .Win32  [INFO]  Creating zip: gws.extendwindows-windows-1.0.0.zip  Error: ENOENT, open 'C:\Users\jorgenbuder\.titanium\vsbuild\extendwindows\WindowsPhone.ARM\Release\GwsExtendwindows.dll'    at Error (native)",Bug,Critical,Closed,"2016-04-20 09:53:54","2016-04-20 09:53:54",5
"The Titanium SDK ","Windows: Ti.UI.createAnimation does not support % in the width property","Example:    var animateRight = Ti.UI.createAnimation({   left : 85%,    curve : Ti.UI.ANIMATION_CURVE_EASE_OUT,   duration : Alloy.Globals.Animation.animeDuration  });    I get crash building for Windows Phone 8.1, if I exchange it to a absolute value like 250  it works",Bug,High,Closed,"2016-04-20 09:37:17","2016-04-20 09:37:17",8
"The Titanium SDK ","iOS: AppleWatch 3rd party compatibility","h6.Issue Description  Trying to add analytics to an Apple Watch app, which is integrated with a Titanium app.     We are able to open the Watch App project and add the SDK, creating the necessary library dependencies. It builds successfully.     But when we try to build via <USER>Studio (or command line), the project gets altered when it is integrated into the dynamically-generated Xcode project. The folder with the Flurry SDK is not present in the <USER>built project. The library references we've made in the original project show up as ghost references.     *See attached screenshots for a comparison of the projects.     Due to the missing files, compilation fails with     /Users/USER/svn/source/wral/applications/mobile/wralnews/build/iphone/extensions/WRAL/WRAL WatchApp Extension/Home.m:10:9: fatal error: 'FlurryWatch.h' file not found     #import FlurryWatch.h     h6.Steps to replicate   # Download the project from here: https://drive.google.com/file/d/0BwTWo-c2a0b9SW02VjNoQmR4cEU/view?usp=sharing  # Copy the GUID key from any other created project  # Replace it Guid key on the imported project  # Run    h6. Expected behavior   Titanium watch app should recognize 3rd party modules like Flurry",Bug,High,Resolved,"2016-04-19 23:21:05","2016-04-19 23:21:05",5
"The Titanium SDK ","Windows: logging from native module doesn't work","The C++ macros for logging ({{TITANIUM_LOG_DEBUG}} etc) shows nothing when you launch the app from Titanium CLI. That's because {{TITANIUM_LOG_DEBUG}} prints out to standard out but Titanium CLI uses different protocol (log relay: listening sockets and relays it to CLI).  ",Bug,High,Closed,"2016-04-19 22:51:10","2016-04-19 22:51:10",5
"The Titanium SDK ","Windows: list items not receiving click events","h6.Issue description    In a ListView with multiple sections the first items of sections after the first section do not receive click events.     For example (as in the test case and video attached) if there are three list sections, item 0 of section 0 will receive a click event, but item 0 of section 1 and item 0 of section 2 will not.     h6.Steps to replicate  # Create a new Titanium Alloy Simple project with the latest 5.4.X SDK  # Replace the Index.js , Index.tss and Index.xml with the files attached  # Run on a Lumia 1520 device     h6. Expected behavior   All clicks responding",Bug,Critical,Closed,"2016-04-19 20:50:07","2016-04-19 20:50:07",1
"The Titanium SDK ","Windows: Inconsistencies in Ti.API.log","h5.Description    *This is not a regression*    When using Ti.API.log there are some inconsistencies with other platforms. Firstly, by default it appears that it will log at the debug level when the specified log level is not recognised rather than info, with the log message prefixed with the unrecognised string    Also it appears that any logging performed using Ti.API.log will always take on the log level of the last statement, so if I log Ti.API.error('log') and then Ti.API.log('info, 'log') the Ti.API.log statement will be printed out at the error logging level. See below for an example        {code: title=Logging on Windows Platform}  [DEBUG] I am default log  [ERROR] logging to change other Ti.API.log statements  [ERROR] I am error from log  [ERROR] I am debug from log  [ERROR] I am info from log  [ERROR] I am trace from log  [ERROR] I am warn from log      h5.Steps to reproduce    1. Using the code above build to a Windows emulator using {{appc run -p windows -T wp-emulator}}  (This also happens with wp-device and ws-local)    h5.Actual result    # All logging takes place at the DEBUG level by default   # A log can change the log level for logs that follow it  # An unrecognised level is not logged as [INFO] [level] <msg>    h5.Expected result    #The logging should take place at the level specified in the code  # An unrecognised level should be logged as [INFO] [level] <msg>  # A log should not be able to change the log level of logs that follow it",Bug,High,Closed,"2016-04-19 18:02:40","2016-04-19 18:02:40",5
"The Titanium SDK ","Windows: Splash screen on Win 10 mobile doesn't look right - horizontal bands of mismatched color above/below","h2. Description    When launching an app on win 10 mobile with a classic project, the default SplashScreen.png from our templates is used. However, this uses a landscape image on a vertical screen and results in the image looking both too small to read and having large black horizontal bars on top and bottom (letterbox TV style).    Ideally the splash screen should have our logo centered and the red color filling the screen.",Bug,High,Closed,"2016-04-19 14:49:22","2016-04-19 14:49:22",8
"The Titanium SDK ","Windows: Ti.App.Properties.hasProperties is not working","The Properties API is according to parity List suppose to work, but we never get a success on the hasPropertie call, every time we start the app the properties does not exist, and same thing if we try to just set a string, then exit the app, restart, the string is not set or do not exist and with bool it is never true..     ",Bug,Critical,Closed,"2016-04-19 11:19:25","2016-04-19 11:19:25",5
"The Titanium SDK ","iOS,Android: An event for the camera has been opened successfully.","h6.description  Suppose we have an app that automatically takes photos. At the moment what I do is invoke Ti.Media.showCamera then wait 2 seconds and then invoke Ti.Media.takePicture.     But some devices take some time to open the camera. So the app is crashed when Ti.Media.takePicture is called before opening the camera.    So the better way to know if the camera has been opened successfully using an event?     I am not sure about the native behaviour.","New Feature",Medium,Closed,"2016-04-18 18:13:03","2016-04-18 18:13:03",5
"The Titanium SDK ","ANDROID: Support to Photo upload from remote webpage in webview","In one of the my <USER>Project there is one functionality like,    We are showing a remote webpage in webview and in that webpage there is Photo Upload Browse button.    By clicking on that button Option dialog comes that ask to choose photo from Camera or Photo Gallery and we can select the photo.    That functionality is works fine in iOS but in android Titanium SDK has not support to choose and upload a photo from remote web page which is loaded on webview.    Earlier we are using a modified Titanium SDK. Can you please modified latest Titanium SDK(5.2.X Onwards) that support this feature.    Modified SDK (https://www.dropbox.com/s/j2csab3dhy6w3u2/4.1.0.GA_For_Correction_Camera_Web_upload.zip?dl=0) which allow to select photo from gallery or camera and this working fine in iOS and Android so the same change I need for latest version of Titanium SDK (5.2.X Onwards)    If you know, what changes we have to do in Titanium SDK to support this feature so can you suggest me in which file of Titanium SDK we need to do changes and what changes we have to write Titanium SDK files ?.",Story,High,Closed,"2016-04-18 10:09:04","2016-04-18 10:09:04",5
"The Titanium SDK ","Android: tiverify.so fails to load on arm64 device","From http://stackoverflow.com/questions/36616521/compile-module-for-64-bits-android-devices-with-titanium-<USER>36654045?noredirect=1#comment60938165_36654045    ",Bug,Critical,Closed,"2016-04-18 16:44:48","2016-04-18 16:44:48",1
"The Titanium SDK ","Windows: Ti.UI.SIZE is not working properly on Windows Phone on a container with child views.","Ti.UI.SIZE is not working properly on Windows Phone on a container with child views.    index.xml      index.tss  {code:tss}  Window : {   backgroundColor: white  }  #imageContainer : {   height: Ti.UI.SIZE, width: Ti.UI.FILL  }  #large : {   image: 'images/large.png',   height: Ti.UI.SIZE, width: Ti.UI.FILL  }  #large[platform=android] : {   image: '../../images/large.png'  }  #small : {   top: 0, right: 0,   image: 'images/small.png',   height: Ti.UI.SIZE, width: 100  }  #small[platform=android] : {   image: '../../images/small.png'  }  {code}  ",Bug,Critical,Closed,"2016-04-08 10:02:07","2016-04-08 10:02:07",5
"The Titanium SDK ","Windows: Investigate lower-level View click event","Related to TIMOB-20386    {quote}  Is it possible we need to explore a lower-level event than Tapped to improve response? According to the MS docs, Tapped is a higher-level event that may combine multiple lower events. Maybe we need to investigate using PointerPressed?  {quote}  ",Story,Medium,Open,"2016-04-16 08:03:38","2016-04-16 08:03:38",5
"The Titanium SDK ","Windows: Ti.Codec.decodeNumber crashes when reading from buffer","The following code makes the app crash in the for-loop.  When decreasing the number of loops to run the risk of getting the crash decreases. (i<200 often works, but i<2048 crashes most of the time).      ",Bug,Critical,Closed,"2016-03-31 06:46:21","2016-03-31 06:46:21",5
"The Titanium SDK ","iOS crash on databinding when debugging in studio with SDK 5.2.X","When debugging my iOS-app in Studio it crashes right after startup.  The issue appears to be connected to the databinding.  Removing the {title}-construction resolves the crash but obviously is no solution.    <TableViewRow class=row>   <Label class=rowTitle text={title}/>   <ImageView class=rowImage image={image}/>  </TableViewRow>    Running the app in run-mode (or using the CLI) does not present the issue only when running in debug-mode things go wrong.  Debugging with SDK 5.1.2 works fine. Debugging with SDK 5.2.X, 5.3.X or 5.4.X presents the issue.    Steps to reproduce:  From the repo https://github.com/<USER>alloy create a test app with *jake*  using *models/binding_tableview*.  Import the created app in Studio and run in debugmode.    Logging generated:  [TRACE] :  [ioslib] iPad Air 2 Simulator successfully focused  [TRACE] :  [ioslib] Running: /Applications/Xcode.app/Contents/Developer/usr/bin/simctl install D656B771-40D0-4047-90E3-EB31B3F9B59B /Users/alexander/Documents/<USER>alloy_git/alloy/test/projects/Harness/build/iphone/build/Products/Debug-iphonesimulator/Harness.app  [TRACE] :  [ioslib] App installed  [TRACE] :  [ioslib] Running: /Applications/Xcode.app/Contents/Developer/usr/bin/simctl launch D656B771-40D0-4047-90E3-EB31B3F9B59B com.<USER>AlloyHarness  [TRACE] :  [ioslib] App launched  [TRACE] :  [Harness] assertion failed: 15E65 13E230: libxpc.dylib + 57882 [66C28065-C9DB-3C8E-926F-5A40210A6D1B]: 0x7d  [TRACE] :  [ioslib] Found application log file: /Users/alexander/Library/Developer/CoreSimulator/Devices/D656B771-40D0-4047-90E3-EB31B3F9B59B/data/Containers/Data/Application/2270187D-B86F-4B0C-8B86-68A2F96F0EB5/Documents/030c307c-f628-4f21-9333-fec752b99382.log  -- Start simulator log -------------------------------------------------------  [DEBUG] :  libc++abi.dylib: terminating with uncaught exception of type std::out_of_range: basic_string  [TRACE] :  [ioslib] Detected crash file: /Users/alexander/Library/Logs/DiagnosticReports/Harness_2016-04-12-113622_Alexanders-MacBook-Pro.crash  -- End simulator log ---------------------------------------------------------      The issue is mentioned in (with the request to create a new ticket)  https://jira.<USER>org/browse/TIMOB-20271  ",Bug,Critical,Closed,"2016-04-12 10:16:33","2016-04-12 10:16:33",5
"The Titanium SDK ","Windows: Parity: Cannot set HTML property on a webview","When trying to set html or a local url to a webview in Windows Phone, it fails.    Example code:    {code:js}  $.webview.html = <b>Test</b>  {code}",Bug,High,Closed,"2016-04-15 13:44:26","2016-04-15 13:44:26",5
"The Titanium SDK ","Android: OutOfMemoryError in ImageView.toBlob","I got OutOfMemory with this code.    Steps to reproduce:  1. Create default Alloy project  2. Load and save big image to the assets  3. Add this test code to the click event handler  4. Click several times to the view with click event attached  5. See result in log    Image: https://static.pexels.com/photos/479/landscape-nature-sunset-trees.jpg          {code:text|title=error log}  [ERROR] TiDrawableReference: (KrollRuntimeThread) [6078,6078] Unable to load bitmap. Not enough memory: Failed to allocate a 23887884 byte allocation with 8219096 free bytes and 7MB until OOM  [ERROR] TiDrawableReference: java.lang.OutOfMemoryError: Failed to allocate a 23887884 byte allocation with 8219096 free bytes and 7MB until OOM  [ERROR] TiDrawableReference:  at dalvik.system.VMRuntime.newNonMovableArray(Native Method)  [ERROR] TiDrawableReference:  at android.graphics.BitmapFactory.nativeDecodeAsset(Native Method)  [ERROR] TiDrawableReference:  at android.graphics.BitmapFactory.decodeStream(BitmapFactory.java:609)  [ERROR] TiDrawableReference:  at org.<USER>titanium.view.TiDrawableReference.getBitmap(TiDrawableReference.java:348)  [ERROR] TiDrawableReference:  at org.<USER>titanium.view.TiDrawableReference.getBitmap(TiDrawableReference.java:300)  [ERROR] TiDrawableReference:  at ti.modules.titanium.ui.widget.TiUIImageView.toBlob(TiUIImageView.java:947)  [ERROR] TiDrawableReference:  at ti.modules.titanium.ui.ImageViewProxy.toBlob(ImageViewProxy.java:93)  [ERROR] TiDrawableReference:  at org.<USER>kroll.runtime.v8.V8Object.nativeFireEvent(Native Method)  [ERROR] TiDrawableReference:  at org.<USER>kroll.runtime.v8.V8Object.fireEvent(V8Object.java:62)  [ERROR] TiDrawableReference:  at org.<USER>kroll.KrollProxy.doFireEvent(KrollProxy.java:918)  [ERROR] TiDrawableReference:  at org.<USER>kroll.KrollProxy.handleMessage(KrollProxy.java:1141)  [ERROR] TiDrawableReference:  at org.<USER>titanium.proxy.TiViewProxy.handleMessage(TiViewProxy.java:356)  [ERROR] TiDrawableReference:  at android.os.Handler.dispatchMessage(Handler.java:98)  [ERROR] TiDrawableReference:  at android.os.Looper.loop(Looper.java:148)  [ERROR] TiDrawableReference:  at org.<USER>kroll.KrollRuntime$KrollRuntimeThread.run(KrollRuntime.java:118)  {code}    ",Bug,Critical,Closed,"2016-04-08 06:06:38","2016-04-08 06:06:38",1
"The Titanium SDK ","Windows: Packaging for dist-winstore with 8.1 SDK fails","h5.Description    When attempting to package an app for dist-winstore using the 8.1 Windows SDK the build will fail with the error below        *This is a regression from 5.2.2.GA*    h5.Steps to reproduce    1. Package an application using {{appc run -p windows -T dist-winstore}} or {{appc run -p windows -T dist-winstore --wp-sdk 8.1}}    h5.Actual result    The app fails to package with the error above    h5.Expected result    The app should successfully package",Bug,Critical,Closed,"2016-04-14 18:24:54","2016-04-14 18:24:54",2
"The Titanium SDK ","Windows: Data binding: returning false displays false","I have data binding set up on a ListSection with a transform function. When my transform function return false (not a string, but a boolean) as a variable the databinding actually displays a string false instead of nothing like it does on iOS and Android",Bug,Low,Open,"2016-04-14 16:09:40","2016-04-14 16:09:40",5
"The Titanium SDK ","Windows: Data binding: Using attribute in ListItem that is not in data crashes view","I have a ListView with Data Binding set up. I have a transform function attached to the binding of a ListSection. But if my transform function doesn't return data the ListItem expects, it crashes the view/window or throws an error which is unusable (unknown error).    So for example    But transform doesn't give the variable labelText, or (not 100% confirmed yet) it returns null/empty result. In this case it goes wrong.    Happens with Alloy coupled with 5.2.0 and 5.2.1 and 5.3.0",Bug,High,Closed,"2016-04-14 16:07:46","2016-04-14 16:07:46",13
"The Titanium SDK ","Windows: raulriera/XHR doesn't work with HTTPClient implementation","Need to investigate, but I heard a report that this https://github.com/raulriera/XHR wasn't working on Windows Phone for them. They just tried a simple get and it silently failed at send().",Bug,High,Closed,"2016-04-14 15:42:18","2016-04-14 15:42:18",5
"The Titanium SDK ","Hyperloop: Android doesn't convert char/char[]/Character","We have no conversion of char/char[]/Character in our Kroll/V8 bridge - and we don't handle this special in our hyperloop code - so I assume right now it'll try to wrap in a hyperloop proxy and fail miserably.    From discussion on https://github.com/<USER>hyperloop.next/pull/16      Ideally I think we should:  - accept a JS String for any argument/field that accepts Character/char/char[]  - if the string is for a single char/Character and has more than one character, we should take the first char of the string and spit out a nasty warning in the log.  - When a method/field returns a char/char[]/Character, convert it into a Java String and the bridge will convert that to a JS string for us.",Bug,Critical,Closed,"2016-04-14 14:53:48","2016-04-14 14:53:48",5
"The Titanium SDK ","Hyperloop: iOS: Sizing in examples does not work anymore (Autolayout)","Using the latest Hyperloop build (1.1.2), most of the iOS examples do not work anymore. It looks like the layouting is broken, since all Views trying to size at x:0,y:0. I attached some screenshots for more information.    UPDATE: It only happens when you enabled {{<use-autolayout-/>}} so it's related to the Core.",Bug,High,Closed,"2016-04-14 10:59:55","2016-04-14 10:59:55",1
"The Titanium SDK ","Windows: Improve handling of view animations on multiple presses","h2. Description  Using a sample app that animates a view's position on press, subsequent presses during an animation are not handled properly. each press seems to initiate the animation sequence on the same view from the current position, at the same time of the original animation. This is handled differently with iOS, in which a warning message is returned to the console for any additional presses of the view during an animation:      A suggestion regarding this issue would be to achieve parity with iOS.    h2. Steps to Reproduce  1. Create a classic mobile project on *Windows*  2. replace app.js with following sample code:     3. Build to Windows Phone device / emulator 10.0  4. Launch app  5. Press the red view, and press repeatedly as the animation is occurring.    h2. Expected Result  subsequent presses of the element should not initiate additional animations at the same time, and should be ignored.     h2. Actual Result  subsequent presses of the element initiates additional animations to the same view, at the same time. ",Improvement,Medium,Closed,"2016-04-13 22:25:02","2016-04-13 22:25:02",8
"The Titanium SDK ","iOS: Unable to Retrieve Detailed Calendar Information via Ti.Calendar.CalendarOS: Refactor default new app-projects","We are attempting to display the user's local calendars in an organized list (arranged by which account syncs the data). Just like in the image below, we can retrieve the individual calendars, but we cannot retrieve the individually-descriptive sources where the Calendars are coming from.    For example, we'd like to show iCloud, Facebook, Google, Other, and others as the sources of data where calendars are coming from.    None of that data is available through the Titanium API, it seems, but it is certainly available through the native SDK on both Android and iOS.",Improvement,Medium,Closed,"2016-04-13 01:15:07","2016-04-13 01:15:07",3
"The Titanium SDK ","Windows: Background service extension by native module (C++/CX).","Relates to TIMOB-18952    After lots of investigation & trial, I almost came up with a conclusion that it is _not_ possible to enable JavaScript/Ti context in background service. It's obviously too much to have two JavaScript/Ti instances at once (foreground & background), and the platform does not allow it. It's too much enough to screw up things (app freeze / device forced to restart, etc).    We have one more choice so far then: which is    *Implement background trigger extension by native module (C++)*.    This should enable native module to react when background trigger is fired. Because it's a native module, you should be able to do anything you need. This means you need to code with C++ instead of JS (too bad) but at least we have last resort to implement custom logic.","New Feature",High,Closed,"2016-04-13 00:31:34","2016-04-13 00:31:34",13
"The Titanium SDK ","Hyperloop: Android can't access fields with primitive array types","When trying to instantiate BluetoothGattDescriptior                 the following error log appears :       Other issue is related with BluetoothGattCharacteristic, when trying to access it's methods, instantiate or cast the following error shows up:                  ",Bug,Critical,Closed,"2016-04-12 15:25:30","2016-04-12 15:25:30",3
"The Titanium SDK ","iOS: Add validation to PickerRow.title","Setting the PickerRow title to a number causes a crash , as there is no field validation.   Classic App code to re-produce :   ",Bug,None,Closed,"2016-04-12 16:48:02","2016-04-12 16:48:02",3
"The Titanium SDK ","Windows: Change target specific build options into target agnostic build options","h5.Description    Currently in the CLI we have a couple of options that are target specific in their naming, namely *\--wp-sdk* and *\--ws-cert*, these options should become target agnostic in their naming as the usage has changed with the introduction of support for Windows 10 and they are no longer specific to a certain target, for example --wp-sdk can be used to change the SDK for a ws-local build, and a cert can be passed into a phone build",Improvement,High,Closed,"2016-04-12 04:26:27","2016-04-12 04:26:27",5
"The Titanium SDK ","Windows: Prompt for selecting wp-sdk option contains unsupported 8.0","h5.Description    If an invalid value is passed in for --wp-sdk then the CLI will prompt the user to select an SDK, the prompt is below and 8.0 which is unsupported        *Note*     If 8.0 is selected then the build will fail with       or         depending on the chosen target  h5.Steps to reproduce    # Run {{appc run -p windows -T ws-local --wp-sdk 10}}    h5.Actual result    You will be prompted to choose a valid SDK, with 8.0 in as a possible value which is unsupported    h5.Expected result    Unsupported versions should not be in the prompt",Bug,None,Closed,"2016-04-12 04:11:02","2016-04-12 04:11:02",3
"The Titanium SDK ","iOS: Non-string PickerRow titles (integer,bool, ..) causing crash","Steps to reproduce    1. Create a Picker with 2 columns  2. PickerRow title set to 0 in XML (or 1, 2, etc)  3. App crashes immediately    Setting the PickerRow title to 0 in the controller js works fine. Android either method works fine.    *index.xml*    *index.js*  {{$.index.open();}}  ",Bug,Critical,Closed,"2016-04-11 21:00:51","2016-04-11 21:00:51",5
"The Titanium SDK ","iOS: Support Ti.UI.OptionDialog property tintColor","iOS offers a way to tint the OptionDialog. Since its not inherited by a normal UIView, the default tintColor is always used and the {{tintColor}} property is ignored. That should be changed in both code and docs.",Improvement,Low,Closed,"2016-04-11 22:23:59","2016-04-11 22:23:59",1
"The Titanium SDK ","Windows: Implementation of search functionality using searchText property in  listview ","list view search is not working correctly.Using the *searchableText* property on a listitem and the *searchText* property on the listview through text entered in a text field: the text Search Results appears with no search results below, even though the entered text should match with some list items. Are there any plans to return this functionality to the searchText property of the listview in upcoming releases?",Improvement,High,Closed,"2016-04-11 09:42:36","2016-04-11 09:42:36",8
"The Titanium SDK ","Android: Webview request send out beforeload event is excuted on Webview","Just load any HTML url in webview and call the webview.stoploading in beforeload event of webview. Customer has blocked the terms of use and privacy policy links in beforeload event of the web view. The webView stops loading but the link is traced in Proxy.    *Test code:* Sample code is attached.    *Test steps:*     * Import the app.  * Click on terms of use and privacy policy” links and see the requests on proxy.       *Expected Behavior :*  Webview.stoploading should have prevented the request for the link clicked.     *Actual  Behavior :*  By clicking on terms of use and privacy policy” links, requests are sent out on proxy(by the IP address)",Improvement,High,Closed,"2016-04-11 08:41:54","2016-04-11 08:41:54",8
"The Titanium SDK ","TiAPI: Remove Ti.include and advertise workaround","Ti.include has been deprecated since 3.3.0. We should remove it in 6.0.0 since it has certain issues, and isn't supported with Alloy projects. See details here:  https://jira.<USER>org/browse/TIMOB-16984    Clients who are using this should consider a workaround like this:      When removing, be sure to address this doc:  https://github.com/<USER>titanium_mobile/blob/master/apidoc/Titanium/Titanium.yml#L61    If a better alternative method can be devised, another JIRA ticket should be created.",Improvement,High,Closed,"2016-04-11 03:24:49","2016-04-11 03:24:49",3
"The Titanium SDK ","iOS Non-public API usage: The app references non-public symbols in <APPLICATION NAME> : _ptrace","After upgrading to the latest <USER>featuring Release 5.2.1, we are no longer able to submit App to the App Store for Test Flight because after Apple server has processed our build, it complaint of     Non-public API usage: The app references non-public symbols in <APPLICATION NAME> : _ptrace    We believed this is something to do with the following bug fix which fixed the ios crash when we build using the jailbreak-detect property. However in our case, we did not use jailbreak-detect property. Even removing jailbreak-detect and appc-security-debugger-detect from the tiapp, Apple still rejects with an email showing the above error.    https://jira.<USER>org/browse/CLI-928      When we use Sublime to search for ptrace in the build directory, it found many ptrace string in build/iphone/ModuleCache/<random string>/Darwin-<random string>.pcm    When we switch to use <USER>SDK 5.1.0 to build our app (we switch from the command line), our app gets through to Test Flight normally. So we can conclude that the new <USER>version has major problem!    We want to use appc-security-debugger-detect this property, so please tell us what is happening with the current <USER>version?",Bug,Critical,Closed,"2016-03-31 14:58:45","2016-03-31 14:58:45",8
"The Titanium SDK ","Windows: Install of app to Windows 10 Mobile device fails on second build of application ","h5.Description    When building a app to a Windows 10 Mobile device a second time the application fails to install with the below error        It seems that we should either increment the packages version number each build or handle the fail case accordingly and uninstall and reinstall the app.     I tried to use {{WinAppDeployCmd update}} to update the app, but that command failed with {{Windows cannot update package com.prod.classic_1.0.0.0_neutral_~_d7c8pgvss6ysm because the previous version is not installed. Install package com.prod.classic_1.0.0.0_neutral_~_d7c8pgvss6ysm instead of updating it.}}, despite me using the same file as the install command used.    h5.Steps to reproduce    1. Build to a Windows 10 Mobile phone using {{appc run -p windows -T wp-device --wp-sdk 10.0}}  2. Rebuild the app using {{appc run -p windows -T wp-device --wp-sdk 10.0}}    h5.Actual result    The app fails to install, a developer will currently have to uninstall their app each build    h5.Expected result    The app should be reinstalled, a developer should not have to remove the same application each time they build",Bug,Critical,Closed,"2016-04-09 00:00:48","2016-04-09 00:00:48",5
"The Titanium SDK ","Hyperloop: Android - Java primitives arrays are wrapped in hyperloop proxies improperly","This fails:      The error reported says something about being unable to require a model, with a name of something like L[String@ergsdgf;    Basically, it looks like we're wrapping this primitive String array in a hyperloop proxy, rather than just letting the bridge handle the conversion for us.    Right now our code to determine when to wrap isn't specific enough to allow this to pass through:  ",Bug,High,Closed,"2016-04-08 18:00:46","2016-04-08 18:00:46",5
"The Titanium SDK ","VideoPlayer.setCurrentTime() does not actually set current time","While trying to create frame-advance functionality, found that setting current time on iOS does not work as expected.    To reproduce, try the following:  *Alloy*  {code}  <Alloy>    <Window title=Player id=vidPlayerWindow>      <View class=container id=view>        <VideoPlayer id=theVideoPlayer autoplay=true url=[insert URL of your video here] />        <View id=controlPanel>          <Button id=btnPlayPause />          <Button id=btnFrameAdvance />        </View>      </View>    </Window>  </Alloy>  {code}    Titanium Controller  {code}  var frameRate = 240.0; // frames per second - Also try 30 and 24 and 15,   var msPerFrame = 1000.00 / frameRate; // how many MS per frame    Ti.API.debug (Frame advance will advance by  + msPerFrame + ms);    $.btnPlayPause.addEventListener('click',function(e){    //Pseudocode    // if $.theVideoPlayer.isPlaying, $.theVideoPlayer.pause();    // Or if not, .play()  });    $.btnFrameAdvance.addEventListener('click',function(e){      var currentTime = $.theVideoPlayer.getCurrentPlaybackTime();      var newTime = currentTime + (msPerFrame);      Ti.API.debug('current Time ' + currentTime + 'ms to new time ' + newTime + 'ms');      $.theVideoPlayer.setCurrentPlaybackTime(newTime);  });  {code}    And finally output log:      I open video player and then about a second later hit pause. Then I hit the advance button.    ",Bug,Critical,Closed,"2016-04-08 13:49:33","2016-04-08 13:49:33",1
"The Titanium SDK ","Android: AVDs created in Android Studio work from there but not via Titanium","Android Studio 2 is has a much better developer experience for keeping the SDK/NDK up to date and creating AVDs based on actual devices.    However, when I create an AVD in Android Studio I can successfully launch it from there, but they are not visible in <USER>Studio and when I run {{ti info -t android}} I get:        The same errors (of course) show when I run {{android list}} directly.    When I open the stand-alone AVD manager via {{android avd}} the AVDs are listed but cannot be started. When I open _Edit_ them it displays an error _No device selected_ and _CPU/ABI_ has _No system images installed for this target._    Once I've started an AVD via Android Studio {{ti info -t android}} (and <USER>Studio) will show the emulator as a connected device:        I can then successfully build to this emulator.",Bug,High,Closed,"2016-04-08 15:06:37","2016-04-08 15:06:37",1
"The Titanium SDK ","Warning Android Build Tools X are too new should not replace < with <=","I'm using SDK 5.2.2.GA which is [known to work|https://github.com/<USER>titanium_mobile/blob/5_2_X/android/package.json#L20] with {{>=17 <23.x}}.    I'm using Android Build Tools 23.0.0 so as expected I get a warning when I run {{ti info -t android}}.    But, for some reason we [replace|https://github.com/<USER>titanium_mobile/blob/master/node_modules/titanium-sdk/lib/android.js#L445] {{<}} with {{<=}} so the warning is:        This is confusing since the version I have meets {{<=23.x}}.    We should not replace {{<}} with {{<=}}.",Bug,Medium,Closed,"2016-04-08 14:12:07","2016-04-08 14:12:07",1
"The Titanium SDK ","Android NDK r11c unsupported because of missing RELEASE.txt","Android NDK r11c installed via Android Studio or dowloaded [separately|http://developer.android.com/ndk/downloads/index.html] no longer contains the {{RELEASE.txt}} file we look for in these two scripts:    * https://github.com/<USER>titanium_mobile/blob/master/node_modules/node-appc/lib/android.js#L81  * https://github.com/<USER>titanium_mobile/blob/master/node_modules/titanium-sdk/lib/android.js#L949    As consequence you cannot use it:        It does have a {{source.properties}} file which has the build version (not the named one):        None of the 53k files seems to have the named version.",Bug,High,Closed,"2016-04-08 14:02:57","2016-04-08 14:02:57",2
"The Titanium SDK ","Default min-ios-ver and default enable-launch-screen-storyboard combination rejected by Apple","Templates default to {{<enable-launch-screen-storyboard>true</enable-launch-screen-storyboard>}} since 5.2.0 (TIMOB-19694) but the default {{<min-ios-ver>}} is [still 7.1|https://github.com/<USER>titanium_mobile/blob/master/iphone/package.json#L21].    This causes an error when you try to upload your app with this default combination to Apple:    !Screen Shot 2016-04-05 at 16.48.40.png|thumbnail!    We should default {{<min-ios-ver>}} to 8.0, or at least force it to be 8.0 when a Storyboard is used as launch image, like we do when the app has a WatchOS app:    https://github.com/<USER>titanium_mobile/blob/master/iphone/cli/commands/_build.js#L1688-L1693",Bug,High,Closed,"2016-04-08 06:36:32","2016-04-08 06:36:32",3
"The Titanium SDK ","Cannot package Alloy app for dist-winstore ","*Details:* Cannot package Alloy app for dist-winstore.    This is a *regression* from SDK 5.2.2.GA.    *Steps to reproduce:*  # Create a default Alloy project with {{appc new}}  # Package the Alloy project for dist-winstore: {{appc run --log-level trace --platform windows --target dist-winstore --ws-cert C:\Users\qe\Documents\generated.pfx --pfx-password tester --output-dir C:\Users\qe\Desktop}}    *Actual:* You will not be able to package the Alloy app for dist-winstore:      *Expected:* Should be able to package for the dist-winstore.",Bug,None,Closed,"2016-04-08 00:18:29","2016-04-08 00:18:29",5
"The Titanium SDK ","If you launch the default Alloy app on Windows 8.1 emulator, [ERROR] [object CallbackObject] appears in the console","*Details:* If you launch the default Alloy app on Windows 8.1 emulator, \[ERROR\] \[object CallbackObject\] appears in the console.    This is a *regression* from SDK 5.2.2.GA.    *Steps to reproduce:*  # Create a default Alloy project with {{appc new}}  # Launch the Alloy project on a Windows emulator 8.1: {{appc run -l trace -p windows --device-id 8-1-1}}  # Wait for Alloy app to launch on the emulator.    *Actual:*  \[ERROR\] \[object CallbackObject\] appears in the console:      *Expected:* No errors should appear when launching the default Alloy app on Windows emulator.",Bug,High,Closed,"2016-04-07 23:52:58","2016-04-07 23:52:58",5
"The Titanium SDK ","Windows: Animations are not animating correctly on iterations or bucles","h6.Issue Description  When an animation is inserted inside a iteration or bucle, the animation is running just the first time.     h6.Steps to Replicate    # Create a new <USER>alloy project for windows  # Open Index.xml and replace the code with the next:    # Open Index.js and replace the code with the next:    # Run  # The box is just animating once    h6.Expected Behavior  The animations should repeat. ",Bug,Medium,Closed,"2016-04-07 22:47:43","2016-04-07 22:47:43",5
"The Titanium SDK ","Android: Add Ti.UI.Button tintColor","Add {{Ti.UI.Button.tintColor}} on Android (https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Button-property-tintColor) to have the same feature on both platforms (iOS is available)        {code:css}  Button {tintColor:ff0000;}  {code}    {code:xml}  <Button tintColor=ff0000/>  {code}","New Feature",High,Closed,"2016-04-07 17:56:20","2016-04-07 17:56:20",5
"The Titanium SDK ","iOS: Setting the configuration on an app to only iPhone doesn't restrict to be available for iPad un the appstore","h6.Issue Description    After configure the application only for iPhone when the app is released if user search for the app in the appstore from an iPad, the application is available for download.     h6. Steps to replicate     # Create a new app just for iphone  # Release the app on the appstore  # Search for the app in appstore from an iPad  # App is available for download    h6. Expected behavior    App should be available only from the iphone appstore  ",Bug,Critical,Closed,"2016-04-07 19:30:01","2016-04-07 19:30:01",8
"The Titanium SDK ","Hyperloop: Android Anonymous interface implementations need to have default implementations of equals/hashCode/toString","Trying to implement BLE scanner the following error is returned:        and Code to reproduce:          ",Bug,Critical,Closed,"2016-04-07 09:41:28","2016-04-07 09:41:28",5
"The Titanium SDK ","Windows: Unit test failed for View.animate for UWP 10 app"," Win 10 Store unit tests are consistently failing:    Windows10.Store.Titanium.UI.View.TIMOB-20598  Windows10.Store.Titanium.UI.View.animate (left)  Windows10.Store.Titanium.UI.View.animate (top)    Currently we just skip those tests but we should figure out why.  https://github.com/<USER>titanium_mobile_windows/pull/611  ",Bug,Medium,Closed,"2016-04-07 13:25:20","2016-04-07 13:25:20",5
"The Titanium SDK ","Windows: Activity Window opens with black background","I am trying to implement an Activity Indicator for our App. The code I am running is as follows :        And then I am calling the following events from another page :        The Activity windows opens up with a Black background instead of a transparent one (see screenshot attached). The same code works on Android, iOS and Web though.",Bug,Critical,Closed,"2016-04-01 05:16:28","2016-04-01 05:16:28",0
"The Titanium SDK ","Hyperloop: Android: Support inner classes","We currently dont support inner classes in Android (which we need for example when creating the builtins to check the target API level).",Improvement,Critical,Closed,"2016-04-06 15:55:10","2016-04-06 15:55:10",5
"The Titanium SDK ","Windows: Use of native module for UWP 10.0 fails","Enabling native module for Windows 10 app ({{--wp-sdk 10.0}}) causes build error. It is because Titanium CLI tries to link {{win10\x86|arm\XXX.lib}} but we don't build native module for {{win10}} target.    Let say you have created and installed your custom module named {{com.<USER>TIMOB23148}}.        This causes error when you build against {{--wp-sdk 10.0}}      ",Bug,Critical,Closed,"2016-04-06 09:32:33","2016-04-06 09:32:33",8
"The Titanium SDK ","Windows: Building native module using appc ti fails","Building native module using {{appc ti build}} fails with uncaught exception. Building with {{ti build}} went through.    ",Bug,Critical,Closed,"2016-04-06 06:57:58","2016-04-06 06:57:58",5
"The Titanium SDK ","Windows: Automatically add required Capabilities to Manifest based on API usage","With TIMOB-18995 the user can now define Capabilities, as explained in [this guide|http://docs.<USER>com/platform/latest/#!/guide/tiapp.xml_and_timodule.xml_Reference-section-29004921_tiapp.xmlandtimodule.xmlReference-Windows-specificsection].    Just like we do for most of Android and iOS it would be great if we would automatically add the required Capabilities based on API usage. So if you use {{Ti.Media.showCamera}} in your code, it would automatically add the _microphone_ and _webcam_ Capabilities.    h5. Test Case        And then build it        h5. Expected    PROJECT_ROOT/build/windows/win10.ARM/Package.appxmanifest    ","New Feature",None,Closed,"2016-04-06 06:22:05","2016-04-06 06:22:05",13
"The Titanium SDK ","Hyperloop: iOS: Delegate issue crashes app","In the Hyperloop examples app when you try to test Donut Chart,Gravity or TableView example the app crashes with the following (or similiar) error log https://gist.github.com/anonymous/1dd160ab32b6b1e91e29b0de84962a43    the gist is for Gravity example. ",Bug,Critical,Closed,"2016-04-05 15:53:33","2016-04-05 15:53:33",5
"The Titanium SDK ","EventListener issues in ScrollableView for IOS.","Hello,    Inside ScrollableView, i have added two views including some views & images. Their is a TableView & its rows in which scrollview is added.    Also i have added some EventListener's on images which are not executed in case of IOS. It's working perfectly on Android.           Attached some screenshots & files below.    *Versions Used:*  SDK 5.2.1.GA  CLI 5.2.1    Thanks.      Note:  I gave a try by removing TableView & row from above code.  Problem lies with ScrollableView where Listeners are not getting called on click of any image. Scroll & other Listener events are working fine.        ",Bug,High,Closed,"2016-04-04 08:11:34","2016-04-04 08:11:34",5
"The Titanium SDK ","Android Parity: Add editing support to ListView","We have editing support on ListViews for iOS and we should add parity support for Android. On Android you longpress items to select/deselect. The List Item image mostly changes so show the selection, although this seems to differ per app. The ActionBar title shows the number of selected items and the actions appear in the ActionBar menu.    See the attached movie for examples of Google Hangouts and Gmail.    The [Material Design Specs|http://www.google.com/design/spec/components/lists.html] for Lists do not include actions.",Story,High,Open,"2016-04-05 12:54:57","2016-04-05 12:54:57",13
"The Titanium SDK ","Windows: Native module How-To documentation","There's no documentation about how to create native module on Windows. Related: [How to call a method added to the windows native module of Appelerator Platform|http://stackoverflow.com/questions/36213930/how-to-call-a-method-added-to-the-windows-native-module-of-appelerator-platform]  ",Story,Medium,Closed,"2016-04-05 12:22:32","2016-04-05 12:22:32",5
"The Titanium SDK ","iOS/WatchOS: Installing to Simulators hangs since Xcode 7.3","[~<USER> [~<USER> and myself can't get the [Titanium 5.2.0 Sample|https://github.com/<USER>developer-relations/appc-sample-ti520] to install the WatchOS2 app to the Simulator anymore.    This was also reported on [TiSlack|https://ti-slack.slack.com/archives/general/p1459847345001026] by <USER>Storli and he found that downgrading Xcode to 7.2.1 resolved it. So something changed in 7.3 that breaks ioslib.    When you build the [Titanium 5.2.0 Sample|https://github.com/<USER>developer-relations/appc-sample-ti520] using {{ti build -p ios --launch-watch-app}} it will hang at _Waiting for Watch App to install_:    ",Bug,Critical,Closed,"2016-04-05 09:16:01","2016-04-05 09:16:01",5
"The Titanium SDK ","Enable run-on-main-thread by default for new projects","The plan is to have hyperloop integrated as part of 5.4.0, and hyperloop requires main-thread enabled to run.     Therefore as a first step, we should edit all new project templates to have {{<property name=run-on-main-thread type=bool>true</property>}} in tiapp.xml by default.     We want people on existing projects to make a conscious effort to include this if they wish to enable hyperloop.     Only consider this as enabled full time in 6.0.0 as a breaking change.","New Feature",Critical,Closed,"2016-04-05 08:33:22","2016-04-05 08:33:22",1
"The Titanium SDK ","Hyperloop iOS - Example project crashing on device","Swift files not compiling for device, if ignored, the app will crash on one of the examples.",Bug,Critical,Closed,"2016-04-04 21:46:53","2016-04-04 21:46:53",5
"The Titanium SDK ","Windows: Lock orientation mode (Ti.UI.Window.orientationModes)","h6. Issue Description   Actually in windows there is no way to lock the orientation mode in portrait or landscape.    h6. Expected Behavior   Have a property in the window to lock the orientation.  ","New Feature",Critical,Closed,"2016-04-04 20:11:36","2016-04-04 20:11:36",5
"The Titanium SDK ","iOS: Ti.Filesystem.File.remoteBackup = true doesn't (re)include file to be backed up","If you never use the Ti.Filesystem.File.remoteBackup property or Ti.Filesystem.File.setRemoteBackup method, then files are properly included in iTunes/iCloud backups as default. So far, so good.    If however, like I did in my project, you manually set remoteBackup = true or call setRemoteBackup(true) on a file to doubly make sure it gets backed up, it actually becomes excluded.    I've had reports from users that their copy of my app (live on the App Store) was not fully restoring their data from a backup. The files I'd set the flag = true on were some .png's in /Documents and a SQLite database in /Library/Private Documents, but I think the problem is evident for any files.    I delved into the SDK code for 5.2.1 and located remoteBackup in TiFilesystemFileProxy.m - after a bit of Googling I noticed that how the method works by calling   {code:java}  setxattr()  {code}   is now obsolete. Apple states that from iOS 5.1 you should be doing it this way: [https://developer.apple.com/library/ios/qa/qa1719/_index.html]    I modified my copy of TiFilesystemFileProxy.m to work this way and next time I called setRemoteBackup(true) the file was properly marked for backup, i.e. {{NSURLIsExcludedFromBackupKey}} is set to {{NO}}.    I tested this against a local iTunes backup. You can check the contents of an iTunes backup using the Terminal command:       Prior to my temporary Obj-C code fix my files were not listed in the backup. After adding my fix the files were listed in the backup correctly.  ",Bug,Critical,Closed,"2016-04-02 18:53:56","2016-04-02 18:53:56",3
"The Titanium SDK ","Android: Add lineSpacing property to Label","Add        to Label    !http://migaweb.de/linespacing.png!    Android doc: http://developer.android.com/reference/android/widget/TextView.html#setLineSpacing%28float,%20float%29    *Example:*  ","New Feature",Critical,Closed,"2016-04-02 15:52:00","2016-04-02 15:52:00",1
"The Titanium SDK ","Parity: On Android require() tries current folder first","Take the following app:    *Resources/app.js*    {code:js}  Ti.UI.createWindow().open();  console.log(require('folder/foo').whoami);      *Resources/foo.js*    {code:js}  exports.whoami = 'Resources/foo.js';    [DEBUG] Loading: /Users/<USER>Library/Developer/CoreSimulator/Devices/C7ECC4A2-E0F1-4248-B51E-5873696E719E/data/Containers/Bundle/Application/080A078B-81C0-4C7B-95FD-C994909390C0/req.app/app.js, Resource: app_js  [DEBUG] Loading: /Users/<USER>Library/Developer/CoreSimulator/Devices/C7ECC4A2-E0F1-4248-B51E-5873696E719E/data/Containers/Bundle/Application/080A078B-81C0-4C7B-95FD-C994909390C0/req.app/folder/foo.js, Resource: folder/foo_js  [DEBUG] Loading: /Users/<USER>Library/Developer/CoreSimulator/Devices/C7ECC4A2-E0F1-4248-B51E-5873696E719E/data/Containers/Bundle/Application/080A078B-81C0-4C7B-95FD-C994909390C0/req.app/foo.js, Resource: foo_js  [INFO] Resources/foo.js  [INFO] Resources/folder/foo.js    [DEBUG] Module: Loading module: folder/foo -> Resources/folder/foo.js  [INFO]  Resources/folder/foo.js  [INFO]  Resources/folder/foo.js  {code}    The [documentation|http://docs.<USER>com/platform/latest/#!/api/Global-method-require] does mention that only on Android you can use absolute and relative paths, but it does not say that it will always try to resolve relative to the current directory first.    I'd expect Android to work as iOS and *not* attempt to resolve relative to the current directory first.    Ideally we'd resolve this as part of TIMOB-16078",Bug,High,Closed,"2016-04-02 09:26:31","2016-04-02 09:26:31",5
"The Titanium SDK ","iOS: Deprecate TiJScore / Kroll-Thread in SDK-Core","The Titanium SDK on iOS should only be using the built in JavaScriptCore engine for general builds and the main-thread for UI-execution.  This ticket is to deprecate the Titanium's JSCore engine and the kroll-thread in 7.0.0 and will follow with the removal in 8.0.0",Improvement,High,Closed,"2016-04-01 18:46:18","2016-04-01 18:46:18",8
"The Titanium SDK ","Android: ScrollableView crashed when setViews([])","I cant clear views through setViews([])    Error:      {code}  [ERROR] :  TiApplication: (main) [7060,7060] Sending event: exception on thread: main msg:java.lang.IllegalStateException: The application's PagerAdapter changed the adapter's contents without calling PagerAdapter#notifyDataSetChanged! Expected adapter item count: 3, found: 0 Pager id: ffffffff Pager class: class ti.modules.titanium.ui.widget.TiUIScrollableView$1 Problematic adapter: class ti.modules.titanium.ui.widget.TiUIScrollableView$ViewPagerAdapter; Titanium 5.2.1,2016/03/18 22:51,23e1c7d    [ERROR] :  TiApplication: java.lang.IllegalStateException: The application's PagerAdapter changed the adapter's contents without calling PagerAdapter#notifyDataSetChanged! Expected adapter item count: 3, found: 0 Pager id: ffffffff Pager class: class ti.modules.titanium.ui.widget.TiUIScrollableView$1 Problematic adapter: class ti.modules.titanium.ui.widget.TiUIScrollableView$ViewPagerAdapter    [ERROR] :  TiApplication: at android.support.v4.view.ViewPager.populate(ViewPager.java:1000)    [ERROR] :  TiApplication: at android.support.v4.view.ViewPager.populate(ViewPager.java:952)    [ERROR] :  TiApplication: at android.support.v4.view.ViewPager.onMeasure(ViewPager.java:1474)    [ERROR] :  TiApplication: at android.view.View.measure(View.java:15518)    [ERROR] :  TiApplication: at org.<USER>titanium.view.TiCompositeLayout.constrainChild(TiCompositeLayout.java:398)    [ERROR] :  TiApplication: at org.<USER>titanium.view.TiCompositeLayout.onMeasure(TiCompositeLayout.java:278)    [ERROR] :  TiApplication: at android.view.View.measure(View.java:15518)    [ERROR] :  TiApplication: at org.<USER>titanium.view.TiCompositeLayout.constrainChild(TiCompositeLayout.java:398)    [ERROR] :  TiApplication: at org.<USER>titanium.view.TiCompositeLayout.onMeasure(TiCompositeLayout.java:278)    [ERROR] :  TiApplication: at android.view.View.measure(View.java:15518)    [ERROR] :  TiApplication: at org.<USER>titanium.view.TiCompositeLayout.constrainChild(TiCompositeLayout.java:398)    [ERROR] :  TiApplication: at org.<USER>titanium.view.TiCompositeLayout.onMeasure(TiCompositeLayout.java:278)    [ERROR] :  TiApplication: at android.view.View.measure(View.java:15518)    [ERROR] :  TiApplication: at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4825)    [ERROR] :  TiApplication: at android.widget.FrameLayout.onMeasure(FrameLayout.java:310)    [ERROR] :  TiApplication: at android.support.v7.internal.widget.ContentFrameLayout.onMeasure(ContentFrameLayout.java:124)    [ERROR] :  TiApplication: at android.view.View.measure(View.java:15518)    [ERROR] :  TiApplication: at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4825)    [ERROR] :  TiApplication: at android.support.v7.internal.widget.ActionBarOverlayLayout.onMeasure(ActionBarOverlayLayout.java:393)    [ERROR] :  TiApplication: at android.view.View.measure(View.java:15518)    [ERROR] :  TiApplication: at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4825)    [ERROR] :  TiApplication: at android.widget.FrameLayout.onMeasure(FrameLayout.java:310)    [ERROR] :  TiApplication: at android.view.View.measure(View.java:15518)    [ERROR] :  TiApplication: at android.widget.LinearLayout.measureVertical(LinearLayout.java:847)    [ERROR] :  TiApplication: at android.widget.LinearLayout.onMeasure(LinearLayout.java:588)    [ERROR] :  TiApplication: at android.view.View.measure(View.java:15518)    [ERROR] :  TiApplication: at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4825)    [ERROR] :  TiApplication: at android.widget.FrameLayout.onMeasure(FrameLayout.java:310)    [ERROR] :  TiApplication: at com.android.internal.policy.impl.PhoneWindow$DecorView.onMeasure(PhoneWindow.java:2176)    [ERROR] :  TiApplication: at android.view.View.measure(View.java:15518)    [ERROR] :  TiApplication: at android.view.ViewRootImpl.performMeasure(ViewRootImpl.java:1874)    [ERROR] :  TiApplication: at android.view.ViewRootImpl.measureHierarchy(ViewRootImpl.java:1089)    [ERROR] :  TiApplication: at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1265)    [ERROR] :  TiApplication: at android.view.ViewRootImpl.doTraversal(ViewR    [ERROR] :  TiApplication: at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:4351)    [ERROR] :  TiApplication: at android.view.Choreographer$CallbackRecord.run(Choreographer.java:749)    [ERROR] :  TiApplication: at android.view.Choreographer.doCallbacks(Choreographer.java:562)    [ERROR] :  TiApplication: at android.view.Choreographer.doFrame(Choreographer.java:532)    [ERROR] :  TiApplication: at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:735)    [ERROR] :  TiApplication: at android.os.Handler.handleCallback(Handler.java:725)    [ERROR] :  TiApplication: at android.os.Handler.dispatchMessage(Handler.java:92)    [ERROR] :  TiApplication: at android.os.Looper.loop(Looper.java:137)    [ERROR] :  TiApplication: at android.app.ActivityThread.main(ActivityThread.java:5041)    [ERROR] :  TiApplication: at java.lang.reflect.Method.invokeNative(Native Method)    [ERROR] :  TiApplication: at java.lang.reflect.Method.invoke(Method.java:511)    [ERROR] :  TiApplication: at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:793)    [ERROR] :  TiApplication: at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:560)  {code}        Test code:     index.xml  {code:xml}  <Alloy>   <Window class=container>    <ScrollableView id=scrollableView>     <View><Label>1</Label></View>     <View><Label>2</Label></View>     <View><Label>3</Label></View>    </ScrollableView>    <View height=Ti.UI.SIZE top=0 layout=vertical>    <Button onClick=doClear>Clear</Button>      </View>   </Window>  </Alloy>  {code}    index.js  {code:javascript}  function doClear(e) {      $.scrollableView.setViews([]);  }    $.index.open();  {code}    ",Bug,Critical,Closed,"2016-04-01 14:49:43","2016-04-01 14:49:43",5
"The Titanium SDK ","Hyperloop: Blocks crashing","When using https://gist.github.com/hansemannn/39d732b87b7db6e329d0, the app crashes after interacting with the dialog.  ",Bug,High,Closed,"2016-04-01 16:11:41","2016-04-01 16:11:41",5
"The Titanium SDK ","iOS: TableViewRow.title crashes app if it is not set to a string","On iOS only (didn't test Windows, but Android works) the app will crash if you pass a number to {{TableViewRow.title}}. This is a problem because since ALOY-1355 [Alloy will convert|https://github.com/<USER>alloy/pull/756/files#diff-ace298e00a3d12d9898391056d0c0b47R228] a string {{true|false}} to boolean and valid integers and floats to number. So if in XML you have {{<TableViewRow title=1 />}} it will become a number and crash.    Unless we can resolve ALOY-1355 in a different way (as suggested: only cast if you leave away quotes around the attribute) easily/soon, we should probably just make sure {{TableViewRow.title}} can work with boolean and number values as well.    *app.js*    {code:js}  var win = Ti.UI.createWindow();  win.add(Ti.UI.createTableView({    top: 20,    data: [{      title: 1         // crashes      // title: true      crashes      // title: '1'       works    }]  }));  win.open();    [DEBUG] 2016-03-31 21:15:16.508 numtitle[78308:2391163] -[__NSCFNumber isEqualToString:]: unrecognized selector sent to instance 0xb000000000000015  [ERROR] The application has crashed with an uncaught exception 'NSInvalidArgumentException'.  [ERROR] Reason:  [ERROR] -[__NSCFNumber isEqualToString:]: unrecognized selector sent to instance 0xb000000000000015  [ERROR] Stack trace:  [ERROR]  [ERROR] 0   CoreFoundation                      0x000000010afbcd6d __exceptionPreprocess + 141  [ERROR] 1   libobjc.A.dylib                     0x000000010a98adeb objc_exception_throw + 48  [ERROR] 2   CoreFoundation                      0x000000010afc5d3d -[NSObject(NSObject) doesNotRecognizeSelector:] + 205  [ERROR] 3   CoreFoundation                      0x000000010af0bcfa ___forwarding___ + 970  [ERROR] 4   CoreFoundation                      0x000000010af0b8a8 _CF_forwarding_prep_0 + 120  [ERROR] 5   UIKit                               0x00000001073f6df1 -[UITableViewLabel setText:] + 119  [ERROR] 6   numtitle                            0x00000001051aa45e -[TiUITableViewRowProxy configureTitle:] + 110  [ERROR] 7   numtitle                            0x00000001051ad06a -[TiUITableViewRowProxy initializeTableViewCell:] + 122  [ERROR] 8   numtitle                            0x00000001050fc062 -[TiUITableView tableView:cellForRowAtIndexPath:] + 482  [ERROR] 9   UIKit                               0x00000001070ac4f4 -[UITableView _createPreparedCellForGlobalRow:withIndexPath:willDisplay:] + 766  [ERROR] 10  UIKit                               0x00000001070ac62c -[UITableView _createPreparedCellForGlobalRow:willDisplay:] + 74  [ERROR] 11  UIKit                               0x0000000107080d4f -[UITableView _updateVisibleCellsNow:isRecursive:] + 2996  [ERROR] 12  UIKit                               0x00000001070b5686 -[UITableView _performWithCachedTraitCollection:] + 92  [ERROR] 13  UIKit                               0x000000010709c344 -[UITableView layoutSubviews] + 224  [ERROR] 14  UIKit                               0x0000000107009980 -[UIView(CALayerDelegate) layoutSublayersOfLayer:] + 703  [ERROR] 15  QuartzCore                          0x0000000109a02c00 -[CALayer layoutSublayers] + 146  [ERROR] 16  QuartzCore                          0x00000001099f708e _ZN2CA5Layer16layout_if_neededEPNS_11TransactionE + 366  [ERROR] 17  QuartzCore                          0x00000001099f6f0c _ZN2CA5Layer28layout_and_display_if_neededEPNS_11TransactionE + 24  [ERROR] 18  QuartzCore                          0x00000001099eb3c9 _ZN2CA7Context18commit_transactionEPNS_11TransactionE + 277  [ERROR] 19  QuartzCore                          0x0000000109a19086 _ZN2CA11Transaction6commitEv + 486  [ERROR] 20  QuartzCore                          0x0000000109a197f8 _ZN2CA11Transaction17observer_callbackEP19__CFRunLoopObservermPv + 92  [ERROR] 21  CoreFoundation                      0x000000010aee1c37 __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ + 23  [ERROR] 22  CoreFoundation                      0x000000010aee1ba7 __CFRunLoopDoObservers + 391  [ERROR] 23  CoreFoundation                      0x000000010aed77fb __CFRunLoopRun + 1147  [ERROR] 24  CoreFoundation                      0x000000010aed70f8 CFRunLoopRunSpecific + 488  [ERROR] 25  GraphicsServices                    0x000000010cad1ad2 GSEventRunModal + 161  [ERROR] 26  UIKit                               0x0000000106f4ef09 UIApplicationMain + 171  [ERROR] 27  numtitle                            0x0000000105053fc6 main + 310  [ERROR] 28  libdyld.dylib                       0x000000010c3d592d start + 1  [ERROR]  [ERROR] 2016-03-31 21:15:16.528 numtitle[78308:2391163] *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[__NSCFNumber isEqualToString:]: unrecognized selector sent to instance 0xb000000000000015'  [ERROR] *** First throw call stack:  [ERROR] (  [ERROR]         0   CoreFoundation                      0x000000010afbcd85 __exceptionPreprocess + 165  [ERROR]         1   libobjc.A.dylib                     0x000000010a98adeb objc_exception_throw + 48  [ERROR]         2   CoreFoundation                      0x000000010afc5d3d -[NSObject(NSObject) doesNotRecognizeSelector:] + 205  [ERROR]         3   CoreFoundation                      0x000000010af0bcfa ___forwarding___ + 970  [ERROR]         4   CoreFoundation                      0x000000010af0b8a8 _CF_forwarding_prep_0 + 120  [ERROR]         5   UIKit                               0x00000001073f6df1 -[UITableViewLabel setText:] + 119  [ERROR]         6   numtitle                            0x00000001051aa45e -[TiUITableViewRowProxy configureTitle:] + 110  [ERROR]         7   numtitle                            0x00000001051ad06a -[TiUITableViewRowProxy initializeTableViewCell:] + 122  [ERROR]         8   numtitle                            0x00000001050fc062 -[TiUITableView tableView:cellForRowAtIndexPath:] + 482  [ERROR]         9   UIKit                               0x00000001070ac4f4 -[UITableView _createPreparedCellForGlobalRow:withIndexPath:willDisplay:] + 766  [ERROR]         10  UIKit                               0x00000001070ac62c -[UITableView _createPreparedCellForGlobalRow:willDisplay:] + 74  [ERROR]         11  UIKit                               0x0000000107080d4f -[UITableView _updateVisibleCellsNow:isRecursive:] + 2996  [ERROR]         12  UIKit                               0x00000001070b5686 -[UITableView _performWithCachedTraitCollection:] + 92  [ERROR]         13  UIKit                               0x000000010709c344 -[UITableView layoutSubviews] + 224  [ERROR]         14  UIKit                               0x0000000107009980 -[UIView(CALayerDelegate) layoutSublayersOfLayer:] + 703  [ERROR]         15  QuartzCore                          0x0000000109a02c00 -[CALayer layoutSublayers] + 146  [ERROR]         16  QuartzCore                          0x00000001099f708e _ZN2CA5Layer16layout_if_neededEPNS_11TransactionE + 366  [ERROR]         17  QuartzCore                          0x00000001099f6f0c _ZN2CA5Layer28layout_and_display_if_neededEPNS_11TransactionE + 24  [ERROR]         18  QuartzCore                          0x00000001099eb3c9 _ZN2CA7Context18commit_transactionEPNS_11TransactionE + 277  [ERROR]         19  QuartzCore                          0x0000000109a19086 _ZN2CA11Transaction6commitEv + 486  [ERROR]         20  QuartzCore                          0x0000000109a197f8 _ZN2CA11Transaction17observer_callbackEP19__CFRunLoopObservermPv + 92  [ERROR]         21  CoreFoundation                      0x000000010aee1c37 __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ + 23  [ERROR]         22  CoreFoundation                      0x000000010aee1ba7 __CFRunLoopDoObservers + 391  [ERROR]         23  CoreFoundation                      0x000000010aed77fb __CFRunLoopRun + 1147  [ERROR]         24  CoreFoundation                      0x000000010aed70f8 CFRunLoopRunSpecific + 488  [ERROR]         25  GraphicsServices                    0x000000010cad1ad2 GSEventRunModal + 161  [ERROR]         26  UIKit                               0x0000000106f4ef09 UIApplicationMain + 171  [ERROR]         27  numtitle                            0x0000000105053fc6 main + 310  [ERROR]         28  libdyld.dylib                       0x000000010c3d592d start + 1  [ERROR] )  [ERROR] libc++abi.dylib: terminating with uncaught exception of type NSException  [TRACE] [numtitle] -[__NSCFNumber isEqualToString:]: unrecognized selector sent to instance 0xb000000000000015  [TRACE] [numtitle] *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[__NSCFNumber isEqualToString:]: unrecognized selector sent to instance 0xb000000000000015'  {code}",Bug,Medium,Closed,"2016-03-31 19:24:01","2016-03-31 19:24:01",3
"The Titanium SDK ","iOS: Add missing local notification properties","There are missing two properties inside the {{Ti.App.iOS.scheduleLocalNotification}}:  * alertTitle: The title of the alert being displayed (alertBody already covered)  * region: The region in which the notification can be triggered    ",Improvement,Medium,Closed,"2016-03-31 11:05:38","2016-03-31 11:05:38",3
"The Titanium SDK ","Windows: Ti.Network.HTTPClient.setRequestHeader is crashing","the setRequestHeader of the HTTP obj is not working, when used the send() crashes all the time    If I remove the setRequeestHeader and handle the type by default in the back then the send() works again..    We need of course this feature in windows..    Example code:  ",Bug,Critical,Closed,"2016-03-31 07:53:08","2016-03-31 07:53:08",8
"The Titanium SDK ","Windows: getting photo from gallery fails","It's affected 5.2.0    Error code: -1;  Error message: 'Failed to load content from file'    *index.js:*  {code:javascript}  function onTest() {   Titanium.Media.openPhotoGallery({     mediaTypes: [Ti.Media.MEDIA_TYPE_PHOTO],    success: function(e) {     $.imageView.image = e.media;    },    error: function(error) {        Titanium.UI.createAlertDialog({      title: error.code,      message: error.error,      ok: 'ok'     }).show();    }   });  }    $.win.open();  {code}    *index.xml:*  ",Bug,Critical,Closed,"2016-03-24 14:24:04","2016-03-24 14:24:04",5
"The Titanium SDK ","iOS: Autolayout does not work with latest master / Build fails","Nothing more to say. Copy {{<use-app-thinning>true</use-app-thinning>}} in the {{<ios>}} section of your tiapp.xml and run the project. Make sure you use a 5.4.0 build (scons'd or from the build server).    The build will fail with the following error:      It can be traced to here:      Which is suspicious, because the related code is only generated if the `#ifdef TI_USE_AUTOLAYOUT` is added and it *is* added by our build CLI.    As it's related to the ScrollableView, it might already be obsolete, because [~<USER> is working on major bugfixes & improvements in that class. But we should leave it here to be tracked.",Bug,Critical,Closed,"2016-03-30 13:25:16","2016-03-30 13:25:16",2
"The Titanium SDK ","Android: Using Hyperloop module, App stuck on splash screen after closing and re-opening","h6.Reproduce Steps:  1. Download the example code from [<USER>Lab|http://labs.<USER>com/project/55f74a9f421c44837717716b/Hyperloop-Module]  2. Import the example to studio.  3. install the Hyperloop module.  4. Run the app to device or emulator.  5. Tap back button to close the app, then re-open it.    h6.Actual Result  App hangs on the splash screen.     h6.Expect Result  Should work well.",Bug,Critical,Closed,"2016-03-30 02:37:30","2016-03-30 02:37:30",8
"The Titanium SDK ","Hyperloop: Android: Support calls to super-class","Hyperloop Android (not sure if it works in iOS) currently cannot call the superclass inside a Hyperloop-based subclass. We should support that in order to match a common OOP-pattern.",Improvement,High,Closed,"2016-03-28 19:05:24","2016-03-28 19:05:24",8
"The Titanium SDK ","Windows: ImageView.image doesn't handle Ti.File/Blob","It's affected 5.2.0. Tested on  emulator and on real device (same behaviour)    What doing this sample app: copy .png file from Resources folder to dataDirectory and try to set copied image to imageView;    *index.js:*  {code:javascript}  var directory = (Ti.Filesystem.isExternalStoragePresent()) ? Ti.Filesystem.externalStorageDirectory : Ti.Filesystem.applicationDataDirectory;  var fileIndex = 0;  var toFile;    function listFiles() {      if(OS_WINDOWS) {       alert(Ti.Filesystem.getFile(directory).getDirectoryListing());      } else {       console.warn(Ti.Filesystem.getFile(directory).getDirectoryListing());       }      }    function copyFile() {   fileIndex++;   var fromFile = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, test.png);   toFile = Ti.Filesystem.getFile(directory, '' + fileIndex + '.png');   toFile.write(fromFile.read());  }  function onImageClick() {   $.imageView.image = toFile;          // below another approaches          // $.imageView.image = toFile.read();          // $.imageView.image = toFile.nativePath;          // $.imageView.image = directory + '/' + fileIndex + '.png';  }    $.win.open();  {code}    *index.xml:*      ----    BUT, I found the way when it's working on windows phone(emulator and device).    *index.js:*    ",Improvement,High,Closed,"2016-03-27 04:51:29","2016-03-27 04:51:29",5
"The Titanium SDK ","iOS: Fonts issues on iOS 9","h3. I'm using the latest SDK but this issue has been there since the release of San <USER>font. First of all, the semibold weight doesn't work, it renders a normal (regular) font (I think it would be a good idea for Titanium to support more weights, this is very limited for people who care a lot about UI)  Second thing, the system font on iOS (San francisco) is a dynamic font, it uses custom tracking for different font sizes, this is also not working, the tracking is always 0. Even when I try to embed the font and use it as a custom font, all font weights work but none of the tracking is applied which causes a not so good font display.   I don't know if this helps, but if you want to see the difference between properly rendered fonts and wrongly rendered ones, you can try using any constant of the textStyle, they render perfectly well. ",Bug,High,Closed,"2016-03-26 05:09:25","2016-03-26 05:09:25",8
"The Titanium SDK ","iOS: App rejected by Apple due to use of the nativeObject API","My app got rejected by Apple due to use of the nativeObject API. I've researched it a bit and the TiViewProxy.m contains nativeObject on line 168. I think this is the problem because uploading an app build with SDK 5.1.2 didn't give me any problems and the 5.1.2 TiViewProxy.m class doesn't contain nativeObject.    The issue affects iOS versions starting at 9.3, because Apple disallow's private API usage in iOS 9.3.",Bug,Critical,Closed,"2016-03-25 09:22:48","2016-03-25 09:22:48",3
"The Titanium SDK ","Parity: Combine unit tests for SDKs into common suite/repo","Windows SDK uses a mocha test suite for unit testing it's APIs, currently living at https://github.com/<USER>titanium_mobile_windows/tree/master/Examples/NMocha/src/Assets    iOS/Android use a suite living at https://github.com/<USER>titanium_mobile/tree/master/ti_mocha_tests    We should combine our test suites into a common repository so that any new tests we add will be performed across all the OSes and we can easily pick up parity issues. It would involve updating our build scripts to grab the test suite from it's new location, and would likely involve more explicit attention to party issues or OS specific tests. (Meaning we'll need to know if a test case isn't intended to work on a particular platform and would have to code it into the test to skip it)",Story,High,Closed,"2016-03-25 13:14:47","2016-03-25 13:14:47",13
"The Titanium SDK ","iOS: The application has crashed with an uncaught exception 'org.voya_crash.TiUITabProxy'","Following the steps below causes the app to crash with:    The application has crashed with an uncaught exception 'org.voya_crash.TiUITabProxy'.  Reason:  Invalid type passed to function    1) Create a classic Titanium app for iOS  2) Replace the Resources with the ones from the attachment  3) Run in iOS Simulator  4) Click on the 'Welcome' message  5) Click on 'tab2'  6) Click on 'welcome2'  7) Click on tab1  8) Click on 'welcome1'  9) Background the app and close it from the Multitasking screen  10) App crashes    Console output of crash:  ",Bug,High,Closed,"2016-03-24 16:08:26","2016-03-24 16:08:26",5
"The Titanium SDK ","Windows: Titanium.UI.ProgressBar 'color' property has no effect on text","The 'color' property of Titanium.UI.ProgressBar does not effect the text. The text stays white and thus invisible to a white background. The 'color' property only effects the color of the bar itself.",Bug,High,Closed,"2016-03-24 00:09:06","2016-03-24 00:09:06",8
"The Titanium SDK ","Android: Annotation.pincolor can't be changed if annotation added to mapView.","I am not sure if it is a bug or it needs improvement.    If annotation is created than changing it's pincolor by    won't change annotation color unless it is removed and added again to mapView.",Bug,Critical,Closed,"2016-03-21 21:23:04","2016-03-21 21:23:04",5
"The Titanium SDK ","Windows: App crash on click eventlistener of appended row of tableview","I have a table view and I am appending rows to it.  When I click the default values of the table, the click listener is working fine but when I try to click the appended row item, it is exiting the app without any error or log.  I have tried adding the event listener to the append row separately but it is also not working.    Below is my code         ",Bug,Critical,Closed,"2016-03-22 11:15:22","2016-03-22 11:15:22",5
"The Titanium SDK ","iOS: Crittercism module causes memory leak","Seems like Crittercism is causing memory leaks and eventual crashes in iOS app.    Reproduce by:  1) Creating a new iOS app   2) Enable Platform Services  3) Set up apm module as per our documentation      Alloy.Globals.apm = require(com.<USER>apm);      Alloy.Globals.apm.init();  4) Use Xcode Instruments Leak tool and let it run    For me it takes about 40 seconds until I get the leak shown in the attached screenshot.    It may be related to this from the apteligent support site:  http://community.apteligent.com/questions/1115/memory-leaks-at-crittercism-setusernameusername.html    Would be good to upgrade the version of Crittercism to see if it fixes this leak.    ",Bug,Critical,Closed,"2016-03-22 17:34:42","2016-03-22 17:34:42",5
"The Titanium SDK ","Windows: postlayout events not firing","An event listener is added for a postlayout event on a view, and then a property on the view is changed (eg height or top). The callback for the event listener does not get executed.    *Test Code:* reporter’s sample [code|https://www.dropbox.com/s/s4iev5w66vmct5a/accessCase%20%281%29.zip?dl=0].    *Test Environment:*    <USER>Command-Line Interface; 5.2.0  Operating System: Microsoft Windows 8.1 Enterprise  Node.js: 0.12.7  npm: 2.11.3    <USER>CLI    Installer                   = 4.2.3    Core Package                = 5.2.0    Titanium CLI:5.0.6  TI SDK:5.4.0.v20160307212310      *Test Steps:*    * Import the app  * Run it in a windows device  * Click the blue box ,it is getting changed and check that the callback for the event listener(post layout) does not get executed    *Test Results:*      ",Bug,High,Closed,"2016-03-22 05:37:32","2016-03-22 05:37:32",8
"The Titanium SDK ","Windows: Inform user of the need to open the app manually on device when building to Windows 10 mobile","h5.Description    When building to a Windows 10 Mobile device the app no longer open automatically as it did when building for 8.1, we should therefore inform the user of the need to open the app themselves similar to iOS    h5.Steps to reproduce    1. Build to a Windows 10 mobile device using {{appc run -p windows -T wp-device -S 10.0}}    h5.Actual result    The following will be logged, the user will not be informed of the need to open the app themselves        h5.Expected result    We should inform the user of the need to open the app on the device, similar to iOS",Improvement,Medium,Closed,"2016-03-22 00:45:17","2016-03-22 00:45:17",3
"The Titanium SDK ","Windows: ImageView.image doesn't handle Windows-style path","It's affected 5.2.0. Tested on  emulator and on real device (same behaviour)    What doing this sample app: copy .png file from Resources folder to dataDirectory and try to set copied image to imageView;    *index.js:*  {code:javascript}  var directory = (Ti.Filesystem.isExternalStoragePresent()) ? Ti.Filesystem.externalStorageDirectory : Ti.Filesystem.applicationDataDirectory;  var fileIndex = 0;  var toFile;    function listFiles() {      if(OS_WINDOWS) {       alert(Ti.Filesystem.getFile(directory).getDirectoryListing());      } else {       console.warn(Ti.Filesystem.getFile(directory).getDirectoryListing());       }      }    function copyFile() {   fileIndex++;   var fromFile = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, test.png);   toFile = Ti.Filesystem.getFile(directory, '' + fileIndex + '.png');   toFile.write(fromFile.read());  }  function onImageClick() {   $.imageView.image = toFile;          // below another approaches          // $.imageView.image = toFile.read();          // $.imageView.image = toFile.nativePath;          // $.imageView.image = directory + '/' + fileIndex + '.png';  }    $.win.open();  {code}    *index.xml:*      ----    BUT, I found the way when it's working on windows phone(emulator and device).    *index.js:*    ",Bug,Critical,Closed,"2016-03-20 09:01:29","2016-03-20 09:01:29",5
"The Titanium SDK ","Add config files jsbeautify, etc that match Appcelerator's coding style","As a developer,  I want to be able to to format code submissions to <USER>s open source projects,  So that the added code format matches the coding standards set by <USER>    Could you include the .files for jsbeautify and similar libraries to help in contributing?  ",Improvement,Critical,Closed,"2016-03-07 20:43:51","2016-03-07 20:43:51",13
"The Titanium SDK ","Windows: Move Source/Ti/src/Properties.cpp to Source/Ti/src/App/Properties.cpp","The files just lives in the wrong place on the filesystem compared to it's header and namespace.",Story,Low,Closed,"2016-03-21 13:41:02","2016-03-21 13:41:02",1
"The Titanium SDK ","Windows: view.center not working","Windows: view.center not working    *Steps to reproduce:*  - Create an alloy project with the reporter's provided test case  - Run the app  - Change the value of the x and y axis of the center and run again  - Observe that no change takes effect    It's affected 5.2.0    *index.js:*  {code:javascript}  function onClick(e) {      $.testView.center = {       x: '50dp',       y: '50dp'      };  }  $.win.open();  {code}    *index.xml:*  ",Bug,High,Closed,"2016-03-18 14:42:39","2016-03-18 14:42:39",8
"The Titanium SDK ","Hyperloop: Build doesn't work with 5.4.0","Currently, Hyperloop does not work with the latest master, because we moved the <run-on-main-thread/> flag from the <ios> section to the root level of the tiapp.xml.     Because we will make the main-thread enabled by default and people won't have the flag in new projects, we need to remove the check from the CLI hook.",Bug,High,Closed,"2016-03-20 15:26:24","2016-03-20 15:26:24",8
"The Titanium SDK ","Windows: Support bindId property on ListView","It's affected 5.2.0. On windows phone event.bindId always 'undefined' in itemclick handler. So I need opportunity to determine when user clicks specific elements inside listview item.  It's working fine on ios and android:    *index.js:*  {code:javascript}  $.section.setItems([   { info: { text: 'edit' }}  ]);    function onItemclick(e) {      if(e.bindId == 'editButton') {       alert('editButton');      } else {          alert('something else...');      }  }    $.win.open();  {code}    *index.xml:*  ",Bug,High,Closed,"2016-03-16 11:21:45","2016-03-16 11:21:45",8
"The Titanium SDK ","Windows: close window throws unknown exception","It's affected 5.2.0.     Use case (working on ios/android):    Window_1 opens Window_2 -> Window_2 opens Window_3 -> Window_3 closes Window_2 -> App throws unknown exception.    *index.js:*  {code:javascript}  function onClick(e) {      var c = Alloy.createController('second', {       prevWin: $.win      });       var w = c.getView();      w.open();  }  $.win.open();  {code}    *index.xml:*      ----    *second.js:*  {code:javascript}  var args = $.args;  function onClick() {    var c = Alloy.createController('third', {       prevWin: $.win      });    var w = c.getView();   w.open();  }  {code}    *second.xml:*      ----    *third.js:*  {code:javascript}  var args = $.args;  function onClick() {   args.prevWin.close();  }  {code}    *third.xml:*          ",Bug,Critical,Closed,"2016-03-18 13:25:57","2016-03-18 13:25:57",5
"The Titanium SDK ","Windows: picker updating data throws unknown exception","It's affected 5.2.0.     How to reproduce:      ",Bug,High,Closed,"2016-03-16 11:44:43","2016-03-16 11:44:43",8
"The Titanium SDK ","Windows: views not animating correctly","To reproduce:  -Start with a view with a left value of 10 (Position 1)  -Animate the view to left 50 (Position 2)  -Animate the view again to left 100 (Position 3)    Expected: view animates from Position 1 to Position 2, and then from Position 2 to Position 3  Actual: view animates from Position 1 to Position 2, then jumps to Position 1 and animates to Position 3    ",Bug,Critical,Closed,"2016-02-22 14:10:09","2016-02-22 14:10:09",5
"The Titanium SDK ","iOS: Allow editing contacts in iOS9 and above","In >= iOS 9 we are not allowing to edit contacts, thought this is editable in iOS 8. The TiContactsPerson object being returned in immutable because of which attempting to edit a contact will result in crash. ","New Feature",High,Closed,"2016-03-18 06:26:25","2016-03-18 06:26:25",5
"The Titanium SDK ","iOS: Log messages are not always displayed on compile time","The first Ti.API.info message will not be displayed every time the app is launched. Its inconsistent and will be displayed sometimes when the app is cleaned and launched but very rarely. If Ti.API.info is called after being compiled, everything is logged as expected. This issue only persists if running through studio  , all works as expected through Xcode    ",Bug,Medium,Resolved,"2016-03-17 21:58:53","2016-03-17 21:58:53",3
"The Titanium SDK ","IOS9: Ti.UI.SIZE is not working well for WebView inside a ScrollView","h5.Reproduce Step  1. Simply run the example following      h5.Expect Result  The webView should display well inside scrollView.    h5.Actual Result  There will be a large while blank space on the bottom of the page    h5.N.B.  1. If you comment out the height: Ti.UI.SIZE from webview properties, everthing will work well.  2. If you ONLY display the webview in screen, NO any scrollView, it will work well too.    Also customer mentioned that it was not happening on iOS 8.",Bug,Medium,Closed,"2016-03-17 04:38:12","2016-03-17 04:38:12",1
"The Titanium SDK ","Parity: backgroundColor, backgroundImage, backgroundGradient","Behaviors for backgroundColor, image and gradient are different for Android and iOS.  Android: 3 layers with color -> gradient -> image. Everything is bundled up and whatever is on top shows.  iOS: prioritize image over gradient over color, ultimately only displays one.    ",Improvement,Medium,Closed,"2016-03-16 22:26:36","2016-03-16 22:26:36",5
"The Titanium SDK ","Android : Crashing when we are at two map view in scrollable view and click go back","In this new window I have one button called go back and pressing this button will close this window and taking you to the first map view to the scrollable view.But this is crashing here when we are at 2 map view in scrollable view and click go back.  Please find the attached test project .    Environment     Thanks",Bug,Critical,Resolved,"2016-03-16 20:22:15","2016-03-16 20:22:15",5
"The Titanium SDK ","Android: TiHTTPClient.getAllResponseHeaders() throws NullPointerException on timeout","Being on 2G my http request will timeout and bringing up the following error message:          The problem is here:  https://github.com/<USER>titanium_mobile/blob/dcd73f54156cdd0a9f40ae9a2339ccb68e8c216e/android/modules/network/src/java/ti/modules/titanium/network/TiHTTPClient.java#L615  responseHeaders is null so isEmpty() can't be called    Test code:    I've changed to 2G and went into a room with bad reception to force the timeout",Bug,Critical,Closed,"2016-03-14 08:04:16","2016-03-14 08:04:16",2
"The Titanium SDK ","Windows: Ti App Properties Crashes while storing large data","Ti.App.Properties.setString crashes when I try to store a large string with more than 2048 characters on Windows Phone. The same thing works fine on iOS and Android where I am able to store and retrieve strings with more than 4096 characters.    Steps to Reproduce :  1. Create a mobile app project  2. Add the code from below text file into app.js  http://ctrlv.it/txt/4925/1177307313  3. Run the app    Expected Result  Prints the strings onto the console  (Tested on iOS and Android)    Actual Result  Error in console :    Check attachment for Screenshot of App screen.",Bug,High,Closed,"2016-03-14 11:08:39","2016-03-14 11:08:39",5
"The Titanium SDK ","Windows: can't address to parent on windows phone","Hi,  on windowsphone children views can't address parent view function  Works fine on android and ios  defined as null on windowsphone",Bug,Medium,Closed,"2016-03-03 07:15:43","2016-03-03 07:15:43",5
"The Titanium SDK ","Windows: Support Notifications sent while in background","I looked at the parity API list form the nightly builds and I am not able to find any way to receive push notifications to a windows phone app, this is a much needed component to be able to increase usage and alert users of the app state and things to take action against.    (I was also not able to find any local notifications to use as work around)    This is needed in Windows Phone 8.1 and should be compatible with Win 10 mob ..    Much appreciated...;)    ","New Feature",High,Closed,"2016-03-16 12:34:47","2016-03-16 12:34:47",13
"The Titanium SDK ","Windows: App crashes when calling fetch() on any collection that has data","Creating a collection, and calling fetch if it is emtpy doesn't crash. Create 1 model and save it, then re-fetch the collection the app crashes in the emulator. This is a pretty serious issue if you can't fetch any data?!    Not sure what version this dates back to as we're new to windows dev in Titanium. We're adding windows support to longstanding iOS/Android Ti apps.    Index.js:      Model:  ",Bug,Critical,Closed,"2016-03-09 16:54:52","2016-03-09 16:54:52",8
"The Titanium SDK ","Windows: no way to hide listview's section header and section header catch itemclick event","1. On android and ios if you don't set section header's title, then header is invisible. But not on Windows phone. Section header takes its place on screen as empty rectangle.  2. This rectangle catches 'itemclick' event with e.itemIndex == -1.",Bug,Critical,Closed,"2016-03-15 17:52:52","2016-03-15 17:52:52",5
"The Titanium SDK ","Windows: Windows 10 Mobile device is listed as available to build to when not connected by USB","h5.Description    When a device is not connected to a PC but its on the same network as the PC, when building a project for wp-device then it will still show up as available. This is because the utility used to obtain the device information, WinAppDeploy, supports deployment of an app over wifi and therefore will detect devices on wifi. See the below output for the differences between the output.    However, I believe that for this to happen the device needs to have 'Device Discovery' in 'For Developers' enabled. I am not sure whether this is enabled by default.    It is possible to deploy to a device over the network, but as far as I know this is not supported yet so for now we should filter devices that are displayed by the tool but appear to be connected over the network.    {code: title=Connected via USB}  C:\Users\ewanh>C:\Program Files (x86)\Windows Kits\10\bin\x86\WinAppDeployCmd.exe devices  Windows App Deployment Tool  Version 10.0.0.0  Copyright (c) Microsoft Corporation. All rights reserved.    Discovering devices...  IP Address      GUID                                    Model/Name  127.0.0.1       00000015-4e57-1877-0000-000000000000    Lumia 930 (RM-1045)      h5.Steps to reproduce    1. Connect a device by USB and run {{C:\Program Files (x86)\Windows Kits\10\bin\x86\WinAppDeployCmd.exe devices}}  2. Run {{appc run -p windows -T wp-device}}  3. Disconnect the USB and ensure the device is on the same network as your PC  4. Run {{appc run -p windows -T wp-device}}    h5.Actual result    2. The device will be shown  4. The device will be shown    h5.Expected result    The device should only be shown when the device is able to be built to, ie connected by USB",Bug,None,Closed,"2016-03-16 02:25:40","2016-03-16 02:25:40",5
"The Titanium SDK ","Windows: Improve the detection of the Windows SDK used to build a project","h5.Description    Currently when building a project the default SDK used will be 8.1, this means that if a user simply runs {{appc run -p windows -T wp-emulator}} then they will only be shown Windows 8.1 emulators, in order to be shown Windows 10 mobile emulators a user must run {{appc run -p windows -T wp-emulator -S 10.0}}. The CLI should show a user all possible emulators and then determine which Windows SDK is needed to build based off the choice made by the user.     h5.Steps to reproduce    1. Run {{appc run -p windows -T wp-emulator}}    h5.Actual result    You will be prompted to select from only 8.1 emulators    h5.Expected reult    You should be prompted to select from all possible emulators",Improvement,High,Closed,"2016-03-15 20:21:39","2016-03-15 20:21:39",13
"The Titanium SDK ","Windows: View visible property doesn't seem to work on Windows phone","I can't hide a view with visible property  set property to false,  tried hide() method.  Working fine on iOS and Android  ",Bug,High,Closed,"2016-02-29 18:02:32","2016-02-29 18:02:32",8
"The Titanium SDK ","Hyperloop: Allow class usage with only the framework being required","Currently, when we want to use a {{UILabel}} with Hyperloop, we need to require it the following way:  *iOS*:    Now if we want to use another class from the {{UIKit}} framework e.g. {{UIView}}, we need to do:      The approach is to make it possible to require frameworks like we do it in Swift/Objective-C and expose the available classes automatically:    In addition, Alloy does a similar kind of pre-processing to expose variables like {{OS_IOS}} and {{arguments}} in new controllers.",Improvement,High,Closed,"2016-03-15 12:49:12","2016-03-15 12:49:12",0
"The Titanium SDK ","Windows: Building to a Windows 10 mobile device errors with 'Failed to conect to emulator'","h5.Description    When building to a Windows 10 mobile device the build errors out with the following  {{[ERROR] Failed to conect to emulator}}. Full logs are attached as logs.txt.     When running both the {{test-device}} and {{test-wptool}} suites in windowslib the tests pass with no errors.    h5.Steps to reproduce     1. Build a project to a Windows Mobile 10 device using {{appc run -p windows -T wp-device -S 10.0}}    h5.Actual result    The project will error out with {{[ERROR] Failed to conect to emulator}}    h5.Expected result    The build should not fail and the app should be deployed to the device",Bug,Critical,Closed,"2016-03-14 21:35:17","2016-03-14 21:35:17",8
"The Titanium SDK ","Android: java.lang.NoSuchMethodError: android.app.Activity.startActivity","Can't run application on device *Lenovo A630 Android 4.0.4* due error:        Steps to reproduce:    Create default alloy project and run it on device.    SDK 5.1.2.GA works without error.  ",Bug,Critical,Closed,"2016-03-13 08:55:03","2016-03-13 08:55:03",3
"The Titanium SDK ","Android: A button will fire an event listener for the button and the window  ","A button will fire an event listener for the button and the window      *Steps to reproduce:*     # Use the app.js bellow    *Actual :*     Both events are fired when the button is clicked    *Expected:*     Only the button event is fired when the button is clicked and only the window event is fired when the window is clicked     *App.js:*           ",Bug,Medium,Closed,"2016-03-11 23:45:41","2016-03-11 23:45:41",3
"The Titanium SDK ","CLI does not accept --pp-uuid as option","When doing a build for iOS, if I use the option:      It will prompt me for which provisioning profile I want to use with the build.  If I use the option:      It builds with no prompts.  ",Bug,Trivial,Closed,"2016-02-29 17:31:15","2016-02-29 17:31:15",1
"The Titanium SDK ","Android N: Add Multi-Window Support","Android just announced [Multi-Window Support|http://developer.android.com/preview/features/multi-window.html] for Android N.    This feature can enabled via {{tiapp.xml}}, but there are some [methods and events|http://developer.android.com/preview/features/multi-window.html#running] that will allow the developer to respond to the app going in and out of multi-window mode.","New Feature",Critical,Closed,"2016-03-11 12:24:34","2016-03-11 12:24:34",1
"The Titanium SDK ","iOS : Screen Loses Responders after AlertDialog","Currently in master starting with build 5.4.0.v20160309142224 I'm running into an issue where all of the controls on a window lose focus after an AlertDialog is raised.    ",Bug,Critical,Closed,"2016-03-11 03:30:51","2016-03-11 03:30:51",3
"The Titanium SDK ","Windows: Implement DOM Level 3 for Ti.XML","Implement [DOM Level3 API|https://www.w3.org/TR/DOM-Level-3-Core/core.html] for {{Ti.XML}} such as XPath API support.",Improvement,Medium,Open,"2016-03-11 01:04:32","2016-03-11 01:04:32",13
"The Titanium SDK ","Android x86 emulator is detected as a device by appc CLI with android SDK tools 25.0.9 rc10","h5.Steps to reproduce:  1. Make sure you have android SDK tools 25.0.9 rc10 installed.  2. Build for android x86 emulator (5.1.1 or 6.0.0).    h5.Actual Results:  1. The emulator launches but studio keeps on waiting for the emulator to be ready.  2. On looking inside run targets/android device in studio you see the emulator as a device.(screenshot attached ).  3. Running appc ti info -t android you see the emulator in devices list.(screenshot attached).  4. Running appc ti info -t android with SDK tools 24.4.1 you do not see the emulator in devices list.(screenshot attached).  5. This is only seen for 5.1.1 x86 & 6.0.0 x86 emulators    h5.Expected Results:  1. The emulator should not be detected as a device.",Bug,Critical,Closed,"2016-03-10 22:24:09","2016-03-10 22:24:09",5
"The Titanium SDK ","iOS: Add Keychain-access to Ti.TouchID, add passcode-fallback mode, expose new iOS 10 TouchID API's","Customers are unable to secure a key-value pair in the Keychain and then unlock it using Touch Id or passcode.     Here is a talk by Apple at WWDC 2014 that describes what users are looking to do.   https://developer.apple.com/videos/play/wwdc2014/711/","New Feature",Medium,Closed,"2016-03-10 19:22:46","2016-03-10 19:22:46",21
"The Titanium SDK ","Align permission methods Ti.Media.AudioRecorder with the others","To request permission for using the currently iOS and Windows only Ti.Media.AudioRecorder you need [Ti.Media.requestAuthorization()|http://docs.<USER>com/platform/latest/#!/api/Titanium.Media-method-requestAuthorization]    To achieve parity and consistency with other new permission APIs we need:    * To deprecate {{Ti.Media.requestAuthorization()}}  * To add {{Ti.Media.requestRecorderPermission()}} for iOS and Windows    While we're at it we should also resolve TIMOB-1028 to bring Ti.Media.AudioRecorder to Android    Reported on SO:  http://stackoverflow.com/questions/35890378/titanium-studio-audio-recording-request-permission-on-android-6-0",Bug,Medium,Closed,"2016-03-10 12:32:34","2016-03-10 12:32:34",8
"The Titanium SDK ","Regression: Alloy-themed i18n and platform folders no longer work since Ti 5.2.0.GA","Android 9 patch splash images not showing with Ti SDK 5.2.0  The same splash images fine with Ti SDK 5.1.2, but disappear when switch to 5.2.0.  Instead it shows default <USER>splash image instead of client splash.    To test:  - Use http://ticons.<USER>nl to generate Android 9 patch splash images for a client image.  - compile with Ti.SDK.5.2.0  - error result, shows <USER>default splash instead of client Android 9 patch splash.  - When switch back to 5.1.2 client 9 patch splash shows.    Further notes:  - I'm using theme folders in Alloy.",Bug,Critical,Closed,"2016-02-29 23:16:20","2016-02-29 23:16:20",13
"The Titanium SDK ","Android: Services enabled app crashes with error Didn't find class ti.modules.titanium.network.NonValidatingSSLSocketFactory when built with 3.5.2 & 4.0.1 SDK","h5.Steps to reproduce:  1. Create a defaut alloy or clasic app. Make sure you have services enabled.  2. Using the components & SDK in the description build for android device/emulator.  3. Let the app launch.    h5.Actual Results:  1. The app crashes 2-3 seconds after launch with error:      2. This might be due to the fact that the NonValidatingSSLSocketFactory class is removed as a part of the google security fix.  3. When built with SDK 3.5.1.GA & 4.0.0.GA this issue is not seen.    h5.Expected Results:  1. The app should not crash.  ",Bug,High,Closed,"2016-03-08 23:14:24","2016-03-08 23:14:24",3
"The Titanium SDK ","Ti.Android.Intent is not working properly","h3. Steps to Reproduce      h3. Actual Result  .putExtra() and .putExtraUri() is not working properly because EXTRA_TEXT, EXTRA_TITLE, EXTRA_STREAM is not showing in app - fields (text, title) are blank, and shared image is blank (Facebook, Messages - 1. shared.png) or application is returning message that it was impossible to read image.    It's a new bug (AS 4.5.0) because this function was working properly in earlier version.    Everything is fine with image because it is showing in the app. (1. screen.png)    h3. Expected Result  Removing bug. It is blocking whole share functionality",Bug,High,Closed,"2016-03-08 09:39:25","2016-03-08 09:39:25",8
"The Titanium SDK ","Android (Tooling): Support setting source for the default strings","The Titanium CLI always assumes English ({{en}}) as the default language for an app. When using a {{i18n}} folder, you must always have {{en/strings.xml}} as well, or the default {{build/android/res/values/strings.xml}} will only contain {{app_name}} and thus give errors reporting missing strings when running the app on a non-Dutch system.    In iOS you can set the default language using:        For Android, it would be nice to have a {{ti.android.defaultLanguage}} property so you can determine the language where the CLI will look for strings for {{build/android/res/values/strings.xml}}.    Steps to reproduce:    1. Create a new Android project: {{ti create -p android -n strings --id test.strings -d .}}  2. Create a Dutch i18n strings.xml at {{i18n/nl/strings.xml}}            3. Build the project: {{ti build -p android -b}}  4. Check out {{build/android/res/values/strings.xml}} and {{build/android/res/values-nl/strings.xml}} and see the first only contains {{app_name}}.","New Feature",Medium,Open,"2014-02-02 18:51:41","2014-02-02 18:51:41",13
"The Titanium SDK ","iOS Module: metadata.json file is written outside iphone module folder","h6. Steps to reproduce  1. build an ios module outside the module folder: {{ti build -p ios -d ./iphone -b}}    h6. Actual Result  The {{metadata.json}} file is created under the current working directory    h6. Expected Result  The {{metadata.json}} file should be created under the iphone module folder",Bug,High,Closed,"2016-03-07 20:54:58","2016-03-07 20:54:58",1
"The Titanium SDK "," Android: Webview with Hardware Acceleration, software rendering doesn't work.","h6.Issue Description  Webview with Hardware Acceleration within Android doesn't work on specific devices (Motorola Moto G with Android 5 and Galaxy S4 with Android 5, Android Devices HTC, samsung galaxy note 2, Samsung Device SM-J500FN)   When put on Software Acceleration, it works. But the Hardware accelerated webview doesn't work on those specific devices.     h6.Test Case  {code:title=app.js}  var webview = Titanium.UI.createWebView({      url : 'http://www.promobutler.be/nl/folders/hubo?fid=64007&embedded=true',      height : '100%',      width : '100%',      borderRadius:1  });    var window = Titanium.UI.createWindow();  window.add(webview);  window.open();      h6.Additional Info    -Tried in Native Android with a Native Webview with Hardware Acc, on those devices, it worked:   ",Bug,High,Closed,"2016-03-07 18:59:41","2016-03-07 18:59:41",13
"The Titanium SDK ","FusedLocationProvider on Android","As described in this article, the current implemented solution for Ti.GeoLocation with LocationManager is not recommended:  [http://developer.android.com/reference/android/location/package-summary.html]    Instead there is a FusedLocationProviderApi, part of Google Location Services API / Google Play services:  [https://developers.google.com/android/reference/com/google/android/gms/location/FusedLocationProviderApi]  An Example usage: [http://javapapers.com/android/android-location-fused-provider/]    I've been using a closed-sourced 3rd party Module for quite some time now, and the update of Fused Location is clearly much faster, identical to Google Maps App location updates. Ideally this feature should be part of Titanium's Geolocation for Android. On another note, using that closed-sourced 3rd party module, creates issues now with Ti 5.2.0.GA, as indicated in this ticket: [https://jira.<USER>org/browse/TIMOB-20377]","New Feature",High,Closed,"2016-03-05 13:06:58","2016-03-05 13:06:58",21
"The Titanium SDK ","'--project dir .' causes module build to fail","When specifying {{--project-dir .}} when trying to build a module, the build will fail.    *Steps to reproduce issue*  1. Try to build a module with {{ti build -p ios --project-dir . -b}}    *Actual Results*  The build fails with:  {{[ERROR] Unable to find undefined module}}    *Expected Results*  The build succeeds",Bug,High,Closed,"2016-03-04 22:10:57","2016-03-04 22:10:57",2
"The Titanium SDK ","iOS: Activity indicator label cut off when auto layout is enabled","h4. Steps to reproduce  1. create a new titanium app  2. use this code    3. In tiapp.xml, include this property      h4. Expected result  indicator spinning with text Loading    h4. Actual result  indicator spinning with text Loading cut off.     Compare attached screenshots",Bug,High,Closed,"2016-03-04 06:56:32","2016-03-04 06:56:32",3
"The Titanium SDK ","iOS: TableView touchend and touchstart event property index is null after upgrading to 5.2.0 SDK","Noticed something odd with my table rows not clickable after building in 5.2.0 SDK on one of my apps.    It seems like e.index is returning null on the event listener callback for touchend.    Steps to Reproduce:   * Create new Mobile App  * Apply the index.js  * Compile in 5.1.2 SDK and run  * Console.log should return the index.  * Recompile in 5.2.0 SDK and run  * Console.log returns <null>    Touch events such as singletap do return the index. I did not see this documented anywhere on 5.2.0 so I am creating this issue as a bug.",Bug,Critical,Closed,"2016-02-29 00:52:08","2016-02-29 00:52:08",5
"The Titanium SDK ","iOS: Ti.App.Properties.setList failes when array element is object with null property","When trying to set a list, via Ti.App.Properties.setList, with an object that has a null value property, I get an Application Error:  Attempt to insert non-property list          This error does not happen on Android 6.0.1.    *Note:* This issue seems similar to [TIMOB-13127]",Bug,Critical,Closed,"2016-03-02 00:21:01","2016-03-02 00:21:01",2
"The Titanium SDK ","iOS: Inconsistent behavior with various UI components when toggling autolayout","Some UI components has inconsistent layout behaviors when auto-layout property is toggled on/off.  Components include:  TiMediaVideoPlayer  TiUIActivityIndicator  TiUIButton  TiUIButtonBar  TiUICanvasView  TiUIImageView  TiUILabel  TiUIListView  TiUIMaskedImage  TiUINavBarButton  TiUIPicker  TiUIProgressBar  TiUIScrollView  TiUIScrollableView  TiUISearchBar  TiUISlider  TiUISwitch  TiUITabGroup  TiUITableView  TiUITextField  TiUITextWidget  TiUIWebView  TiUIiOSAdView  TiUIiOSCoverFlowView  TiUIiOSLivePhotoView  TiUIiOSToolbar  TiUIiPadSplitWindow  ",Story,High,Closed,"2016-03-03 05:26:41","2016-03-03 05:26:41",13
"The Titanium SDK ","debugging not working for IOS or Android on my machine","h3. Steps to Reproduce -place breakpoints -click debug view -select 'debug' from dropdown menu next to green execute button  h3. Actual Result application executes all the way through without stopping at any breakpoints  h3. Expected Result appliction should stop at breakpoint and not continue until specified",Bug,Critical,Closed,"2016-03-02 16:18:57","2016-03-02 16:18:57",0
"The Titanium SDK ","Using Android shortcut to start new activity fails to detect Alloy.","h6.Issue Description  We have created a sample app that has a button which creates a shortcut. That shortcut is supposed to open test.js controller.     Two scenarios are possible here - an app is already running when the shortcut is pressed or app is being started via shortcut.     The first scenario works exactly the way we desire.     In the second scenario, it seems that Alloy that is being loaded is not the same as the one we define. To showcase it we have put a label in test.js controller which is supposed to have a value of TEST STRING in the successful scenario.     h6.Steps to Reproduce:  # Run attached sample code.   # Press Hello World button to create a shortcut.   # Pause the app via home button   # Click shortcut. Test controller should load and a string with a value of TEST STRING is present.   # Kill the app   # Restart the app via shortcut   # Observe empty string     h6.Expected Behavior*  - Being able to open different controllers from sample.js and being able to load proper Alloy instance ",Bug,High,Closed,"2016-03-02 17:27:03","2016-03-02 17:27:03",5
"The Titanium SDK ","Android: App relaunches when resumed from background","h2. Problem    This issue occurs in an app that I have made but is also occurring in the 5.2.0 Sample app ( https://github.com/<USER>developer-relations/appc-sample-ti520 ).    This issue occurs when the app is launched and put in to the background, after multiple other apps are used if the app is launched from the android launcher or by selecting the app from the back-grounded app list the splash screen for the app will briefly show followed by what looks like the app closing and then re-opening.    All state for the app is lost and while the relaunch is happening the user sees their launcher icons as if the app has crashed.    This may be happening due to the app being paused or closed due to memory management but ideally the main window should show while the relaunch happens and not the launcher icons.    h2. Test case    # Build the 5.2.0 Sample app (https://github.com/<USER>developer-relations/appc-sample-ti520)  # Install on device  # Open the sample app  # Background the sample app  # Open other applications and switch between them until some of them start to relaunch on resume  # Foreground the sample app and the bug should be recreated    h2. Video showing relaunch behaviour    https://streamable.com/x4th",Bug,Critical,Closed,"2016-02-26 12:15:44","2016-02-26 12:15:44",13
"The Titanium SDK ","Android: Deprecate activity*Animation","With TIMOB-19580 we've implemented {{activity*Transition}} for {{Ti.UI.Window}}. This makes {{activity*Animation}} for {{Ti.UI.Window.open|close()}} obsolete.    Because these cause confusion we should deprecate and remove them asap.    Also take note of TIMOB-20451.",Story,High,Open,"2016-03-02 14:10:39","2016-03-02 14:10:39",3
"The Titanium SDK ","Windows: Badge icon needed with background task for Windows Store","Enabling background task requires badge icon when building for Windows Store. It is required to package the app even when badge is not actually used.    {code}  04:26:48   C:\Users\<USER>.titanium\vsbuild\mocha\store.x86\Package.appxmanifest(45,8):   error APPX1675: App manifest declares background task of type timer, control channel,   push notification, or location without enabling lock screen notifications.   [C:\Users\<USER>.titanium\vsbuild\mocha\store.x86\Mocha.vcxproj]  {code}    FYI: Enabling background task (tiapp.xml)  {code:xml}  <windows>    <manifest>      <Extensions>          <Extension Category=windows.backgroundTasks EntryPoint=TitaniumWindows_Ti.BackgroundServiceTask>            <BackgroundTasks>              <Task Type=timer />            </BackgroundTasks>          </Extension>      </Extensions>    </manifest>  </windows>  {code}",Story,High,Closed,"2016-03-02 02:20:11","2016-03-02 02:20:11",5
"The Titanium SDK ","iOS: Build error caused by missing define statements","Currently master is broken.  This is a result of the following commit https://github.com/<USER>titanium_mobile/commit/9e209ca9ef3541ab23a0975627be2bc487464cbe#diff-2c9944d65132833cd5df17dcdd3ebc3a    The reason is my code doesn't use any attrributed strings, which means the below define statements are not applied    #if defined (USE_TI_UIATTRIBUTEDSTRING) || defined(USE_TI_UIIOSATTRIBUTEDSTRING)    If these statements are not defined, you are unable to compile the code.  You get the following error from Studio.  If I remove the define statements I'm able to compile without any issues.    [ERROR] :  ** BUILD FAILED **  [ERROR] :  The following build commands failed:  [ERROR] :   CompileC build/Intermediates/myProject.build/Release-iphoneos/myProject.build/Objects-normal/armv7/TiUILabel.o Classes/TiUILabel.m normal armv7 objective-c com.apple.compilers.llvm.clang.1_0.compiler  [ERROR] :  (1 failure)",Bug,Critical,Closed,"2016-03-01 23:41:32","2016-03-01 23:41:32",3
"The Titanium SDK ","Console stops working with HL","* Console logs stops working as soon the ios simulator is launched, only when Hyperloop is included in the project.  * The above behaviour is found when app is launched from Studio & CLI *(appc run)*.",Bug,Critical,Closed,"2016-03-01 17:32:04","2016-03-01 17:32:04",1
"The Titanium SDK ","iOS: ScrollableView fire events only for the first two views","Using SDK 5.1.2 there is a problem on the ScrollableView element. Only the first two views can fire up events.  All the other views cannot fire events, so no _click_ event are captured, no _postlayout_, ..  The problem is relevant only for *iOS + SDK 5.1.2*.    I switched back to SDK 5.1.1 and everything works fine :) .",Bug,Critical,Closed,"2016-02-18 09:00:23","2016-02-18 09:00:23",8
"The Titanium SDK ","Android: Apps should be able to open/resume and respond to intents","As a developer, I want my app to be able to open or resume (from background) in response to intents like launcher shortcuts (TIMOB-20459) or custom URL schemes (TIMOB-15253) and receive that intent so I can perform logic depending on the intent.    h4. Primary user stories    * If my app is not running it should be opened and I should be able to get the intent form {{Ti.App.Android.launchIntent}}.  * If my app is already running it should be brought to the foreground and fire an event ({{Ti.App.Android:intent}}?) that has a reference to the intent. {{Ti.App.Android.launchIntent}} should also be updated to reference the new intent. (TIMOB-20459)    h4. Secondary technical stories    * If my app is already running (in another stack) no new instance should be created and pushed the current stack (that fires the intent). Instead the existing stack must be brought to the foreground with the activity on top. (TIMOB-15253)  * If my app is already running and several new Activities (windows) have opened over the original Activity (window) I must still be able to receive the event ({{Ti.App.Android:intent}}?) for the new intent and not be required to add listeners to the activity of every single window I open ({{Ti.UI.Window.activity:newintent}}).  * Opening my app via an URL scheme should not require any [additional flags or the intent scheme|https://jira.<USER>org/browse/TIMOB-15253?focusedCommentId=271897&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-271897].    h4. Test scenarios    In all of these make sure both apps are several Activities (windows) deep.    * Create two apps where one opens the other using an intent  * Create an app that creates an additional launch shortcut to open itself (TIMOB-20459)  * Register a custom URL scheme and open that via email (TIMOB-15253)    Let's discuss if I forget something before we solve this once and for all.",Bug,High,Closed,"2016-03-01 09:30:37","2016-03-01 09:30:37",21
"The Titanium SDK ","LivePhoto: Proxy should override apiName","When I read {{Ti.UI.iOS.LivePhoto.apiName}} it return {{Ti.Proxy}} and logs:        Which comes from:  https://github.com/<USER>titanium_mobile/blob/bdfbe4d530e81caf440b595351bc84bef79f27d4/iphone/Classes/TiProxy.m#L1310    ",Bug,High,Closed,"2016-02-29 13:59:21","2016-02-29 13:59:21",1
"The Titanium SDK ","Hyperloop: iOS: Local-embedded frameworks not working","Local-embedded frameworks in the /src/ folder are not working - like {{.m}} and {{.swift}} files. We should find a way to recognize local-embedded frameworks correctly.    Project to reproduce: https://github.com/hansemannn/hyperloop-robot  Framework talking about: https://github.com/orbotix/Sphero-iOS-SDK/tree/master/frameworks/RobotKit.framework    The metabase seems to be generated, but the required (proof of concept) method does not work:      The generated metabase for the framework is attached.    *{color:red}EDIT{color}*: The problem happens with every other local-embedded framework as well. Using the attached Serenity.framework and the following demo code doesn't work as well. This very critical for the GA release.    ",Bug,Critical,Closed,"2016-02-29 13:07:35","2016-02-29 13:07:35",13
"The Titanium SDK ","Android HTTPClient onsendstream progress is wrong","I've noticed that the progress callback of TiHTTPClient under Android reaches a value of 1 way before the upload is completed. This can be seen on slow link speeds. I believe this bug also exists on normal speeds but is less apparent there.    This might be related to [https://jira.<USER>org/browse/TC-5837]    I've tested this with Titanium SDK 5.1.2 & 5.2.0 on Android 4, 5 and 6 devices. For testing I limited my wireless link speed with dd-wrt to 64kbits. This is also reproducable with slow mobile EDGE speeds.    The example code uses a 1 MB testfile from here: [http://cachefly.cachefly.net/speedtest/]    {code:javascript}     var win = Ti.UI.createWindow();   var progress = Ti.UI.createProgressBar({    width:200,    min:0,    max:1,    value:0,    });   win.add(progress);     var timestamp = Date.now();   var file = Ti.Filesystem.getFile('1mb.test');     win.addEventListener('open', function() {    var xhr = Ti.Network.createHTTPClient({     onload: function() {      var time_passed =  Math.floor((Date.now()-timestamp)/1000);      Ti.API.info(time_passed + ' SUCCESS');     },     onsendstream: function(e) {      var time_passed =  Math.floor((Date.now()-timestamp)/1000);      Ti.API.info(time_passed + ' PROGRESS ' + e.progress);      progress.setValue(e.progress);     }    });    xhr.open('POST', 'http://www.example.org/post.php');    xhr.send({data: file})   });   win.open();    {code}    *What should happen:*  The link speed IS constant, so the progress log should be liniear. Assuming a BLANK response, the onload event should get called quickly after progress reached the value of 1.    *What actually happens:*  Progress goes up to value 1 very quickly (in 1-2 seconds). It's not possible to upload 1MB in ~1 second with the available bandwidth. The progress is not fired anymore after it reached the value of 1 although the upload is still in progress. After ~138 seconds the onload event fires correctly. The time of the onload event is consistent with the available bandwith. Router bandwith logs show also that a upload is in progress until the onload event is fired.        ",Bug,Medium,Closed,"2016-02-24 12:40:23","2016-02-24 12:40:23",8
"The Titanium SDK ","iOS: WebView converting spaces into extra lines","h3. I am loading content into a WebView container using both setUrl and setHtml. Both methods seem to be adding additional lines based on the number of spaces found (seems to be inconsistent). A workaround was to convert the spaces to &nbsp, but then word wrap did not work correctly.  Attached zip containing examples.  ",Bug,High,Closed,"2016-02-27 01:21:01","2016-02-27 01:21:01",5
"The Titanium SDK ","Windows: Support l10n application name","Support localization for application name.    See also: [Windows 8.1 Store apps: Localize the information that describes your app to users|https://msdn.microsoft.com/en-us/library/hh454044.aspx]  ",Bug,Medium,Closed,"2016-02-29 06:53:02","2016-02-29 06:53:02",5
"The Titanium SDK ","Windows: Implement missing Ti.Locale functions","Implement missing {{Ti.Locale}} properties.    - Ti.Locale.getCurrencyCode  - Ti.Locale.getCurrencySymbol  - Ti.Locale.getLocaleCurrencySymbol  - Ti.Locale.formatTelephoneNumber  ",Bug,Medium,Closed,"2016-02-29 06:50:21","2016-02-29 06:50:21",5
"The Titanium SDK ","Windows: Implement missing Ti.Locale properties","Implement missing {{Ti.Locale}} properties.    - Ti.Locale.currentCountry  - Ti.Locale.currentLanguage  - Ti.Locale.currentLocale  ",Bug,Medium,Closed,"2016-02-29 06:46:34","2016-02-29 06:46:34",5
"The Titanium SDK ","Android: TableView content hidden on rows that are not screen visible (android)","I've a calendar widget, that is a TableView rotated -90 degrees, after set the TableView data, I add a View rotated 90 degrees the TableViewRows, and set to those Views the new height and width.    On 'scrollend' event, if this reach the TableView limits, at the end of the TableView I push another 20 rows to the end of the TableView data, and at the beginning I unshift 20 rows to the beginning of the TableView data.    This works perfectly on iOS, but on android there is a issue that I can't understand why: all the screen visible TableViewRows are fine (5), but when I scroll to the other TableViewRows it's children are hidden until a 'click' event on the TableView.    * Start of the TableView (with 20 rows):    !http://i.stack.imgur.com/ad83i.png!    * Scrolled a little bit to see the next rows (starting on nº6):    !http://i.stack.imgur.com/wucDQ.png!    * After a click on TableView:    !http://i.stack.imgur.com/PXkrk.png!    Stackoverflow: [https://stackoverflow.com/questions/35433035/tableview-content-hidden-on-rows-that-are-not-screen-visible-android|https://stackoverflow.com/questions/35433035/tableview-content-hidden-on-rows-that-are-not-screen-visible-android]    Test project added (without assets)  ",Bug,High,Closed,"2016-02-18 10:29:15","2016-02-18 10:29:15",8
"The Titanium SDK ","Android 6.0 (Post 5.2.0 SDK): java.io.FileNotFoundException: open failed: ENOENT (No such file or directory)","h3. Steps to Reproduce I played around with the latest 5.2.0 SDK and Nexus 6P... for the most part everything seems to work except for one case with runtime permission.  if I use Ti.Filesystem.tempDirectory as my storage and created the permission checks, this still fails on first try even if you accept the Permission.  Log: [INFO] : Permission granted? true [ERROR] : TiFileProxy: (KrollRuntimeThread) [66154,66154] IOException encountered [ERROR] : TiFileProxy: java.io.FileNotFoundException: /storage/emulated/0/Android/data/com.apptest.tempdirperm/cache/_tmp/GettingStartedTitanium_Linux.pdf: open failed: ENOENT (No such file or directory) [ERROR] : TiFileProxy: at libcore.io.IoBridge.open(IoBridge.java:452) [ERROR] : TiFileProxy: at java.io.FileOutputStream.<init>(FileOutputStream.java:87) [ERROR] : TiFileProxy: at org.<USER>titanium.io.TiFile.getOutputStream(TiFile.java:273) [ERROR] : TiFileProxy: at org.<USER>titanium.io.TiFile.open(TiFile.java:336) [ERROR] : TiFileProxy: at org.<USER>titanium.io.TiFile.write(TiFile.java:382) [ERROR] : TiFileProxy: at org.<USER>titanium.TiFileProxy.write(TiFileProxy.java:290) [ERROR] : TiFileProxy: at org.<USER>kroll.runtime.v8.V8Object.nativeCallProperty(Native Method) [ERROR] : TiFileProxy: at org.<USER>kroll.runtime.v8.V8Object.callProperty(V8Object.java:73) [ERROR] : TiFileProxy: at org.<USER>kroll.KrollProxy.handleMessage(KrollProxy.java:1155) [ERROR] : TiFileProxy: at android.os.Handler.dispatchMessage(Handler.java:98) [ERROR] : TiFileProxy: at android.os.Looper.loop(Looper.java:148) [ERROR] : TiFileProxy: at org.<USER>kroll.KrollRuntime$KrollRuntimeThread.run(KrollRuntime.java:118) [ERROR] : TiFileProxy: Caused by: android.system.ErrnoException: open failed: ENOENT (No such file or directory) [ERROR] : TiFileProxy: at libcore.io.Posix.open(Native Method) [ERROR] : TiFileProxy: at libcore.io.BlockGuardOs.open(BlockGuardOs.java:186) [ERROR] : TiFileProxy: at libcore.io.IoBridge.open(IoBridge.java:438) [ERROR] : TiFileProxy: ... 11 more [INFO] : ALERT: (KrollRuntimeThread) [41,66195] File exist? false}}  Steps to recreate: Create new Mobile App Project and paste in code to index.js Compile and run, make sure it is a clean install on device Click the 'Hello, World' to trigger the download and permission. Accept the permission on popup. Accessing the file in temporary directory fails. (alert will say file does not exist) Close the app Check permission in settings > app permission (storage should be enabled) Restart the app Click 'Hello, World' again to trigger download. Alert will now say file exists.  Workaround:  If I switch the Ti.Filesystem.tempDirectory to Ti.Filesystem.applicationDataDirectory, I do not run into the issue of having to restart the app to open the file. But I have to make sure those files are deleted after use. It would be best to use temporary directory so that the files are automatically removed after app is closed.  h3. Actual Result File does not exist in tempDirectory when permission is enabled on RunTime.  h3. Expected Result File should exist in tempDirectory.",Bug,Critical,Closed,"2016-02-24 22:13:19","2016-02-24 22:13:19",3
"The Titanium SDK ","Hyperloop is re-writing source JS then failing subsequent clean builds","I posted this first (at length) with all the info and how to reproduce over on SO here :     http://stackoverflow.com/questions/35663301/hyperloop-is-re-writing-source-js-then-failing-subsequent-clean-builds    I've just updated to the latest 5.2.0.GA and am trying a simple Hyperloop test app.    Building the app causes references to hyperloop code in the source JavaScript to be re-written. Then it will fail the next rebuild due to Skipping Hyperloop compile, no usage found ... error, since JS code was re-written...    ",Bug,Critical,Closed,"2016-02-27 00:33:29","2016-02-27 00:33:29",8
"The Titanium SDK ","Android: Titanium.UI.ProgressBar 'color' property has no effect on text","The 'color' property of Titanium.UI.ProgressBar does not effect the text. The text stays white and thus invisible to a white background. The 'color' property only effects the color of the bar itself.",Bug,High,Closed,"2016-02-24 19:51:51","2016-02-24 19:51:51",8
"The Titanium SDK ","Android: TableViewRow title fails to display on android","The assigned value for tableViewRow.title property, in this case a date string, displays correctly in ios simulator and device. It does not display at all in android emulator or device. Run the files attached to this ticket in a test app to demonstrate this bug.",Bug,High,Closed,"2016-02-25 18:22:27","2016-02-25 18:22:27",1
"The Titanium SDK ","iOS: Support keypressed event","h3. Would be great to have the keypressed event (only available now for Android, Windows) for IOS accessible in order to get the e.keyCode pressed on the hardware keyboard.  or just being able to get the keyCode from the source onChange would suffice. ",Improvement,Critical,Closed,"2016-02-25 18:31:48","2016-02-25 18:31:48",1
"The Titanium SDK ","iPad: Events fired by Slide Over and Split Window not clear/documented","With TIMOB-19691 we have added support for Split View and Slide Over.    When the app Slides Over or changes to/from Split View, the {{Ti.App:resumed}} and in one occasion {{Ti.App:resume}} events are fired. We have not documented this, but I'm filing this in TIMOB because we might want to find out if there are ways/reasons we should split this out into specific events for Split View and Slide Over.    For a list of events in which {{resume}} and {{resumed}} are fired see the 5.2.0 Sample Source:  https://github.com/<USER>developer-relations/appc-sample-ti520/blob/master/app/alloy.js#L37-L55    The {{resumed}} event actually covers pretty much all scenarios, except for one AFAIK. When your app is on the left side of a Split View and moves back to fullscreen because the other app closes or switches to Slide Over you will not get notified. It would be great if we can somehow detect this as well.",Bug,Medium,Closed,"2016-02-25 11:21:48","2016-02-25 11:21:48",1
"The Titanium SDK ","Windows: ScrollableView does not respect `top` property on views","{{ScrollableView}}  should respect {{top}} property on child views.    ",Bug,Medium,Closed,"2016-02-25 10:12:53","2016-02-25 10:12:53",5
"The Titanium SDK ","Android newintent event not fired","With TIMOB-19679 users can now create additional launcher shortcuts. If the app is already open in the background, you should be able to listen to the {{newintent}} to be notified. However, it seems that this even does not work. This not only makes this new addition less useful, it might hurts other use cases where a running app needs to know if it was brought to the foreground with a specific intent, like when using URL schemes.    The following sample demonstrates:    # Run the app  # Press the button to create a launcher shortcut  # Force quit the app  # Use the shortcut (named _Gallery_) to open the app  # Confirm it logs _LAUNCH INTENT .. WITH EXTRA: gallery_ as expected (/)  # Move the app to the background  # Use the shortcut again  # Confirm it does *not* log _NEW INTENT .. WITH EXTRA: gallery_ as expected (x)    *tiapp.xml*        *app.js*    {code:js}  var win = Ti.UI.createWindow({    layout: 'vertical'  });    var btn = Ti.UI.createButton({    title: 'Create Shortcut'  });    btn.addEventListener('click', function(e) {    var currentIntent = Ti.Android.currentActivity.getIntent();    currentIntent.setAction(Ti.Android.ACTION_MAIN);      // Add custom metadata to read when your App is launched from the shortcut.    currentIntent.putExtra(shortcut, gallery);      // Create an Intent    var shortcutIntent = Ti.Android.createIntent({      action: com.android.launcher.action.INSTALL_SHORTCUT,    });      // Title that will appear with the shortcut    shortcutIntent.putExtra(Ti.Android.EXTRA_SHORTCUT_NAME, Gallery);      shortcutIntent.putExtra(Ti.Android.EXTRA_SHORTCUT_INTENT, currentIntent);    shortcutIntent.putExtra(duplicate, false);      // Set the icon for the shortcut    var iconImage = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, appicon.png).read();    shortcutIntent.putExtra(Ti.Android.EXTRA_SHORTCUT_ICON, iconImage);      // Adds the shortcut to the home screen.    Ti.Android.currentActivity.sendBroadcast(shortcutIntent);  });    win.add(btn);    win.add(Ti.UI.createLabel({    top: 10,    text: 'LAUNCH INTENT ' + JSON.stringify(Ti.Android.currentActivity.getIntent()) + ' WITH EXTRA: ' + Ti.Android.currentActivity.getIntent().getStringExtra('shortcut')  }));    Ti.Android.currentActivity.addEventListener('newintent', function(e) {      win.add(Ti.UI.createLabel({      top: 10,      text: 'NEW INTENT ' + JSON.stringify(e.intent) + ' WITH EXTRA: ' + e.intent.getStringExtra('shortcut')    }));    });    win.open();  {code}",Bug,Critical,Closed,"2016-02-25 09:26:01","2016-02-25 09:26:01",13
"The Titanium SDK ","iOS: Video is not displaying on iOS after resuming to app.","h3. Steps to Reproduce           h3. Actual Result  If user during video play press Home button and then get back to application than very often video is not visible anymore but it's playing (sound can be heard). If user change the orientation than video is visible again.  Sometimes video reapers if pausing and resuming app is repeated for few times.  The problem is not connected with size of the file because same problem occurs with very small videos (800KB) and very big ones (60MB).    h3. Expected Result  Video should not dissapear and should be always visible.",Bug,Critical,Resolved,"2016-02-24 17:31:10","2016-02-24 17:31:10",0
"The Titanium SDK ","iOS: gradient percentage units are not accurate","h6.Issue Description  Gradient angles calculated incorrectly when start/endpoint specified as %    h6.Steps to replicate  # Create a new alloy default application  # open views/index.xml  # replace the code with the next:    # open styles/index.tss  # replace the code with the next:    # Run  # The gradient is not from the left corner to the right corner (image attached)    h6. Expected result  The gradient should be from the left corner to the right corner   ",Bug,Medium,Closed,"2016-02-24 18:31:15","2016-02-24 18:31:15",1
"The Titanium SDK ","5.3.0 Regression: rendering artifact between launch image and first view","With TIMOB-19694 we have implemented support for Storyboard Launch Files.    This causes a regression that even if you do *not* use Storyboard Launch Files you now see a rendering artifact between after the Launch Image is dismissed and the first view of the app opened. This is in particular visible in apps that need to do some heavy stuff before they open the first view.    The following sample and attached [video|https://jira.<USER>org/secure/attachment/58387/artifact.mov] demonstrates:    {code:js}  var win = Ti.UI.createWindow({    backgroundColor: 'green'  });    // simulating a delay when you need to do heavy stuff before opening the first window  setTimeout(function() {    win.open();  }, 3000);  {code}    If you *do* use Storyboard Launch Files you see similar behaviour, which TIMOB-20497 deals with.",Bug,Critical,Closed,"2016-02-24 12:51:27","2016-02-24 12:51:27",5
"The Titanium SDK ","Window.close should use new activity*Transition instead of activity*Animation or default","With TIMOB-19580 we have introduced {{activity*Transition}} properties for {{Ti.UI.Window}}.    We also still have {{activity*Animation}} properties for {{Ti.UI.Window.open()}} and {{Ti.UI.Window.close()}}.    h4. The Issue    This is confusing, but also seems to not always work as expected:    If you try the _Activity Transitions_ example in the [Ti 5.2.0 Sample App|https://github.com/<USER>developer-relations/appc-sample-ti520] and set all {{activity*Transition}} properties to {{TRANSITION_NONE}} you will see that if you use the system navigation bar (or hardware) back button in Window B it will indeed close without animation. But if you use the Action Bar Level Up icon (which simply calls {{Ti.UI.Window.close()}}) it will fade out.    h4. Solution    We should:    1. Make sure that if I call {{Ti.UI.Window.close()}} without {{activityEnterAnimation}} and {{activityExitAnimation}}, it will honour {{Ti.UI.Window.activityReturnTransition}}.    2. Deprecate and in 6.0 remove the {{activity*Animation}} properties.    h4. Source    Related code:    https://github.com/<USER>titanium_mobile/blob/a67afc862cd344bf1293b16142317aad0b5ee122/android/modules/ui/src/java/ti/modules/titanium/ui/WindowProxy.java#L135-L184",Bug,Medium,Closed,"2016-02-24 12:22:51","2016-02-24 12:22:51",3
"The Titanium SDK ","Android: Font in textfield isn't vertically aligned properly so it will fall off screen with a bigger font","I have a textfield with 28dp height, and the fontSize of the textfield is 14dp. (14sp gives same result)    Attached is a screenshot of the result. It doesn't align properly and you can't see the top part of the string",Bug,Critical,Closed,"2016-02-19 12:20:41","2016-02-19 12:20:41",1
"The Titanium SDK ","Custom Database Path (Android) Does Not Create New DB with Ti.Database.open","In iOS I can open (or create if doesn't exist) a database in the applicationDataDirectory and it works fine:        However in Android I get errors. It doesn't seem like it will even try to create a database.        also tried this:       Neither work for Android    I have created a PR and Fix for this here:  https://github.com/<USER>titanium_mobile/pull/7607",Bug,Critical,Closed,"2016-01-04 03:28:31","2016-01-04 03:28:31",1
"The Titanium SDK ","GitHub: Release tags marked as pre-release since 5.0.2.GA","The releases on GitHub are marked as pre-release since 5.0.2.GA, which makes 5.0.1.GA still marked as latest release:    https://github.com/<USER>titanium_mobile/releases",Story,Low,Closed,"2016-02-23 07:51:39","2016-02-23 07:51:39",3
"The Titanium SDK ","Android: Implement TimePicker with `minuteInterval` property","Android TimePicker should have the property `minuteInterval`.  For more information, refer to TIMOB-17998",Improvement,Medium,Closed,"2016-02-23 05:34:50","2016-02-23 05:34:50",3
"The Titanium SDK ","Android: Using camera bloats app storage","During our testing we have realized that continuously taking camera images bloats app size. There is currently no way for us to check what is being stored.    1) Problem Description - taking a bunch of pictures (without saving them) bloats up app internal storage size.    2) Exact steps to reproduce:  Download the app [here|https://c.na10.content.force.com/servlet/servlet.FileDownload?file=00PF000000WBSKA].  - install supplied test app  - in application manager: note the size of the app and storage space used  - load supplied app  - press Open Camera Pictures  - press Take  - press Retake  - repeat 10 times  - kill the app  - go back to application manager and note size difference    3) Expected Behavior - no data to be saved. (Image saving is turned off by default according to docs)    4) Number of users affected - all Android users ",Bug,High,Closed,"2016-02-22 15:12:09","2016-02-22 15:12:09",3
"The Titanium SDK ","iOS: Change documentation on TableViewCellSelectionStyle","The documentation still redirects to Ti.UI.iPhone.TableViewCellSelectionStyle, but that needs to be Ti.UI.iOS.TableViewCellSelectionStyle.    http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TableViewRow-property-selectionStyle",Bug,Medium,Closed,"2016-02-19 16:20:36","2016-02-19 16:20:36",1
"The Titanium SDK ","Kitchen Sink Crashes on initial install ","*Description*    When installing a fresh version of the kitchen sink from the stable branch on github, The first install on the phone crashes,     if you change the SDK to the 5.1.2 GA and run it works.  if you change the Facebook module to the 4.0.5 and run it works.    After either of these it also works on 5.2.0.v20160219124528 SDK aswell    *{color:red}This is a Regression.{color}*        *Steps to reproduce:*   # Download a fresh install of the stable kitchen sink   # Change targetSdkVersion to 23   # add Android config code below to the tiapp.xml  # Run the application with the 5.2.0.v20160219124528 SDK and 5.0.0 Facebook module       *Actual :*  The application crashes     *Log*      *GA :*    The application runs    *Expected:*  The application runs",Bug,Critical,Closed,"2016-02-20 00:56:34","2016-02-20 00:56:34",3
"The Titanium SDK ","LaunchLogo asset catalog should also be created if custom storyboard is found","With TIMOB-19694 the user can now either use our Storyboard with {{LaunchLogo.png}} or provide a custom Storyboard.    Chances are, that when the user wants to use a custom Storyboard he just wants to make some adjustments to ours.    Unfortunately, when we detect a custom storyboard we no longer create an Asset Catalog for {{LaunchLogo.png}}. So then the user is required to rename the LaunchLogo, enable app thinning, figure out the hash for that path and use that in the Storyboard.    We can simplify this a lot by always generating the LaunchLogo Asset Catalog if {{LaunchLogo.png}} is found. If the user doesn't need it, he simply deletes that file.",Improvement,Low,Closed,"2016-02-18 14:29:42","2016-02-18 14:29:42",0
"The Titanium SDK ","Main Thread: Ti.Stream undefined when enabled and run via LiveView","When setting <run-on-main-thread>true</run-on-main-thread> and running the app in iOS emulator with LiveView turned on, it throws:    undefined is not an object (evaluating 'Ti.Stream.pump') at app.js (line 231).    [ERROR] :  Script Error {  [ERROR] :      column = 16;  [ERROR] :      line = 231;  [ERROR] :      message = undefined is not an object (evaluating 'Ti.Stream.pump');  [ERROR] :      sourceURL = file:///Users/ophir/Library/Developer/CoreSimulator/Devices/046ECC44-60EC-4D29-B67E-A3370829EEE7/data/Containers/Bundle/Application/FC02DDCE-6E69-488E-BE43-BCFE5C27F7C3/Memoriez.app/app.js;  [ERROR] :  }      These are my iOS settings:             <enable-launch-screen-storyboard>true</enable-launch-screen-storyboard>          <use-app-thinning>true</use-app-thinning>          <run-on-main-thread>true</run-on-main-thread>          <use-jscore-framework>true</use-jscore-framework>      If I just set run-on-main-thread to false then it will not show the error message and LiveView will work.",Bug,Critical,Closed,"2016-01-28 20:23:12","2016-01-28 20:23:12",5
"The Titanium SDK ","Support for Github pull request & issue templates","Github recently published a new feature to create issue- and PR-templates for community contributions.     In our case, we would be able to inform the user about the coding guidelines for extending the SDK, the CLA link, the necessary docs etc. For issues, we could mention to create a JIRA ticket first, attach build logs and provide the environment.    The required files ({{PULL_REQUEST_TEMPLATE}} and {{ISSUE_TEMPLATE}}) are placed inside a .github directory.     More information: https://github.com/blog/2111-issue-and-pull-request-templates",Story,Low,Closed,"2016-02-18 08:17:21","2016-02-18 08:17:21",3
"The Titanium SDK ","iOS: KeyboardToolbar is not working well when there are more then one textfield","h6.Reproduce Step:    1. Simply Run the code below  2. You will notice that when focus first textfield, the keyboardToolbar is not displaying, only a blank took bar.  3. But the second one works well.  4. If there is only one textfield, it works well too.        Is there something wrong with test code? or a bug?  ",Bug,High,Closed,"2016-02-18 03:14:17","2016-02-18 03:14:17",5
"The Titanium SDK ","Hyperloop: Expose ObjC-macros in Javascript","A lot of important type validations during both SDK- and module-development are currently realized by using macros we provide. These are for example:  - ENSURE_TYPE(): Validate arguments to be from a specific type  - ENSURE_SINGLE_ARG_OR_NIL(): Validates the argument length or provides a fallback  - NUMINT/NUMFLOAT/NUMBOOL: Converts native types to proxy-readable NSNumbers  - DEPRECATED_REPLACE: Logs a warning for deprecated API's, commonly used inside the SDK  - RELEASE_TO_NIL: Does the common cleanup of allocated objects    The proposal would be, to bridge those macros into Javascript-methods that are pre-processed and available without any requirement, or be part of the bridged TiUtils which is discussed in TIMOB-20417.",Bug,Medium,Closed,"2016-02-17 12:50:43","2016-02-17 12:50:43",1
"The Titanium SDK ","Hyperloop: Expose builtin utilities","To support Hyperloop modules, developers need to access common Ti-utilities like we already do with {{TiApp}}. Common used classes:  - TiUtils  - WebColor  - WebFont    Problem to discuss is also: What do we do for existing modules that want to be migrated to Hyperloop? They often rely on existing proxies (although not recommended).",Story,High,Closed,"2016-02-17 12:43:36","2016-02-17 12:43:36",8
"The Titanium SDK ","Android: HttpClient Basic Auth: Infinite loop with bad credentials","h3. Steps to Reproduce - Set bad credentials on Basic Auth  Run attatched project with Android and you can see in console readyState = 1. In our log server we register infinite requests and the request never ends.  request => response 401 => request => response 401  With no error callback.  In iOS its OK.  h3. Actual Result Infinite Loop with no callback to 401 http error.  h3. Expected Result Error callback with 3 attempts like browsers or like iOS.",Bug,High,Closed,"2016-02-16 13:27:19","2016-02-16 13:27:19",5
"The Titanium SDK ","Bump master to 5.4.0 and change already merged 6.0.0 features to 5.4.0 in docs","The master branch has been 6.0.0 all along. Now that the roadmap has changed, we have to change the version to 5.4.0, and the docs for already merged tickets that were marked 6.0.0 to since: 5.4.0  ",Story,High,Closed,"2016-02-17 04:35:48","2016-02-17 04:35:48",2
"The Titanium SDK ","iOS: Add rest of stylus properties to 3D touch events","Add the azimuthAngleInView and azimuthUnitVectorInView. The properties only being available if using a stylus.",Improvement,Medium,Closed,"2016-02-16 18:00:33","2016-02-16 18:00:33",2
"The Titanium SDK ","iconInsets: Weird behaviour when not repositioning but also enlarging icon","Using the new property introduced by TIMOB-18515 you get strange behaviour when you play with {{iconSets}} to not only reposition but also enlarge the icon:        The icon resizes when you select/unselect the tab. And when you repeatedly tap on the icon it will continue to grow. See the attached video. While the behavior is native, we should only allow the {{top}} and {{left}} property to calculate the negative {{bottom}} and {{right}} automatically.",Bug,High,Closed,"2016-02-15 14:12:17","2016-02-15 14:12:17",3
"The Titanium SDK ","iOS: ProgressBar gets clipped in parent with height Ti.UI.SIZE","While building samples I noticed that if a ProgressBar is wrapped in a parent that has its height set to {{Ti.UI.SIZE}} it will be clipped as the following code and attached screenshot shows.    {code:js}  var win = Ti.UI.createWindow({    backgroundColor: 'white'  });    win.add(Ti.UI.createProgressBar({    width: 250,    value: 0.5,    message: 'Half way there'  }));    var view = Ti.UI.createView({    top: 100,    height: Ti.UI.SIZE,    backgroundColor: '#eee'  });  win.add(view);    view.add(Ti.UI.createProgressBar({    width: 250,    value: 0.5,    message: 'Half way there'  }));    win.open();  {code}",Bug,Medium,Closed,"2016-02-15 13:31:55","2016-02-15 13:31:55",5
"The Titanium SDK ","WWDR certificate can not be found in keychain other than system","With the WWDR certificate expired this weekend, users run into issues replacing it. When they add it to the login (which for me is default) keychain Titanium does not find it. It must be in the System keychain to be found.    This Stack Overflow user found out where the bug is:  http://stackoverflow.com/a/35400143/4626813    I've tested this and indeed this fixes it.  PRs are attached.    This is critical due to the WWDR expiration and must be merged for 5.2.0    I've added a note to this blog post:  http://www.<USER>com/blog/2016/02/experiencing-ios-certification-issues-check-your-wwdr-intermediate-certificate/#build",Bug,Critical,Closed,"2016-02-15 09:05:09","2016-02-15 09:05:09",3
"The Titanium SDK ","iOS: Main-Thread: Cannot create proxies in callbacks","Not sure how to proper name this ticket, but it's something with the <run-on-main-thread/> going wrong. So whenever we want to create a {{Ti.UI.iOS.*}} proxy e.g. {{Ti.UI.iOS.Toolbar}} or {{Ti.UI.iOS.LivePhotoView}} inside a callback of a {{Ti.Media.openPhotoGallery}} (and probably other async callbacks), the proxy cannot be found and it throws the attached error. Example:        The example will crash as soon as the callback is invoked. If we call it directly, the app wont crash. Note: The warning {{\[WARN\] Creating \[object TiUIiOS\] in a different context than the calling function.}} is logged before the crash. So it might be related to TIMOB-20397, although the {{TiUIiOSProxy}} gets initialized correctly with {{\[\[TiUIiOSProxy alloc\] _initWithPageContext:\[self executionContext\]\];}}. ",Bug,Critical,Closed,"2016-02-13 13:21:32","2016-02-13 13:21:32",3
"The Titanium SDK ","iOS: Ti.Utils.base64encode is not encoding unicode correctly","h6.Issue Description    Trying to encode the string using Ti.Utils.base64enocde method as below,     It returns the encoded string :   VGVzdOWun+mok+WupA==     But trying to encode the same string in https://www.base64encode.org/   returns the encoded string : VGVzdOWun+mok+WupOOBmOOBo+OBkeOCk+OBl+OBpA==     Ti.Utils.base64encode method encodes the partial string only.        h6.Steps to reproduce/Testcase    # Create a new classic default application  # open the app.js file  # replace the code     #Run    The return string don't match with the https://www.base64encode.org/ string",Bug,Low,Closed,"2016-02-12 19:41:21","2016-02-12 19:41:21",15
"The Titanium SDK ","iOS: Launch Image Set leaves out required sizes if no (>=8.0) minimum iOS version is set","When I build an app without setting a minimum iOS version it defaults to 7.1. In that case, I noticed launch images for iPhone 6+ were missing.    This is caused by the following commit:  https://github.com/<USER>titanium_mobile/commit/105a1fdf72e8f349f71ba10c08c738d9160910ec#diff-f430483233aa01af5b10df8390f9635dR4931    Which is related to the storyboard ticket TIMOB-19694    I don't get the logic for this validation of {{minIosVer}}. If that is the minimum iOS version the launch image is supported on, then surely it should be removed when you'd set a *max* iOS version (which I don't even think you can't). If you build to support iOS 7+ then of course the launch images for 8+ *should* be included, right?",Bug,High,Closed,"2016-02-12 14:16:03","2016-02-12 14:16:03",2
"The Titanium SDK ","iOS: Listview delete event sends wrong itemId","In TiUIListView.m code has been refactored a couple of months ago (?) to fire edit events in 1 place. For delete this is causing quite a big problem because now the order of events has changed.    TiUIListView.m, around line 1045  - (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath      Before the change:  - A reference to the deleted item was stored  - The actual delete was performed on the listview  - The event for the JS client was build and sent using the previously stored itemId    After the change:  - The item is actually deleted from the listview.  - The fireEditEventWithName method is called to trigger the JS event.    The problem:  The fireEditEventWithName gets a reference to the item (and thus the itemId) at a section index and itemindex, but since the item was already deleted it gets the wrong or no item.    If my findings are correct you have created quite a big invisible bug deleting wrong items all over the world...    {code:title=Sample.JavaScript|borderStyle=solid}  //FirstView Component Constructor  function FirstView() {   //create object instance, a parasitic subclass of Observable   var self = Ti.UI.createView();     var listView = Ti.UI.createListView({    editing: true,    allowsSelection: true   });   var sections = [];      var fruitSection = Ti.UI.createListSection({ headerTitle: 'Fruits'});   var fruitDataSet = [       {properties: { itemId: apple, title: 'Apple', canEdit: true}},       {properties: { itemId: banana, title: 'Banana', canEdit: true}},   ];   fruitSection.setItems(fruitDataSet);   sections.push(fruitSection);      var vegSection = Ti.UI.createListSection({ headerTitle: 'Vegetables'});   var vegDataSet = [       {properties: { itemId: carrots, title: 'Carrots', canEdit: true}},       {properties: { itemId: potatoes, title: 'Potatoes', canEdit: true}},   ];   vegSection.setItems(vegDataSet);   sections.push(vegSection);      listView.sections = sections;   self.add(listView);      var fishSection = Ti.UI.createListSection({ headerTitle: 'Fish'});   var fishDataSet = [       {properties: { itemId: cod, title: 'Cod', canEdit: true}},       {properties: { itemId: haddock, title: 'Haddock', canEdit: true}},   ];   fishSection.setItems(fishDataSet);   listView.appendSection(fishSection);      listView.addEventListener(delete, function(e) {    alert(e.itemId);   });     return self;  }    module.exports = FirstView;  {code}",Bug,Critical,Closed,"2016-02-07 20:31:40","2016-02-07 20:31:40",8
"The Titanium SDK ","Windows: View based click event are not working consistently","Customer is reporting that View based click events are not reliable. Occasionally do not fire.  ",Bug,Critical,Closed,"2016-02-10 23:46:24","2016-02-10 23:46:24",8
"The Titanium SDK ","Windows: ScrollView does not respect `top` property on views","View content laying out in the center of the view, despite the fact that a `top` property is specified.    Adding a View to another view with property top=20, view still aligns centered despite top property setting.",Bug,High,Closed,"2016-02-10 23:08:12","2016-02-10 23:08:12",8
"The Titanium SDK ","Windows: Custom iconic fonts do not render properly.","When leveraging custom fonts, particular one that is a icon font (such as font awesome), the first time you reference the font / icon it works. Subsequent calls to create a Label with a font icon does not work, and a blank box is displayed.    See screen shot.    This is demonstrated in the latest version of Corporate Directory App. To reproduce:    * Open <USER>Studio  * Import the Corporate Directory Sample App  * Build the app for Windows Phone  * Once the application is runnig navigate the profile details screen",Bug,Critical,Closed,"2016-02-10 22:44:57","2016-02-10 22:44:57",5
"The Titanium SDK ","iOS: Support Dynamic Libraries for module development","h6.Issue Description  We're trying to use a third party framework from Wowza to extend our application with video recording functionality. Release shows now be 64-bit compatible but upon module building works for armv7, i386, and arm64 but not x86_64.     Architectures were added to manifest according [module development guide|http://docs.<USER>com/platform/latest/#!/guide/iOS_Module_64-bit_Support-section-43291229_iOSModule64-bitSupport-Modulebuildingforarmv7,i386,andarm64butnotx86_64].       h6.Stack Trace      h6.Steps to reproduce  1) Get module attached and extract it   2) Run ./build.py  3) Unzip generated module put into app/modules/iphone/   4) Run sample app having attached the module  5) Notice stack trace ",Bug,High,Closed,"2016-02-10 19:35:47","2016-02-10 19:35:47",5
"The Titanium SDK ","Android: Views height / width properties are not respected inside ScrollableView ","When adding Views to a ScrollableView on Android, the views are not rendering inside the ScrollableView properly. This appears to be the result of the height and width parameters not being respected and defaulting to Ti.UI.FILL. As such setting the ScrollableView to have a height of Ti.UI.SIZE does nothing.    The expectation is that the internal Views would scale based on height and width parameters, and as such the ScrollableView would have a dynamic height based on the Ti.UI.SIZE declaration. In the attached screenshots you can see how this works on iOS (expected result) and on Android (incorrect result)    Code Example:  https://gist.github.com/grantges/ffbb0771adf091d15941",Bug,Critical,Closed,"2016-02-10 16:49:25","2016-02-10 16:49:25",5
"The Titanium SDK ","Windows Phone: Cannot read property 'split' of undefined","Whe i try to build for Windows Phone the sdk can't complete the build and dies with exit code 1, the only error i can see is part (i think) of the sdk for windows phone    ",Bug,Critical,Closed,"2015-12-17 14:52:50","2015-12-17 14:52:50",5
"The Titanium SDK ","Android: KitchenSink update for Facebook ","Updating KitchenSink code for Facebook due to TIMOB-19577  PR: https://github.com/<USER>KitchenSink/pull/88",Improvement,Low,Closed,"2016-02-10 03:10:04","2016-02-10 03:10:04",2
"The Titanium SDK ","Android: Longpress event on ScrollView doesn't fire","On Android the longpress event don't fire when longpress is performed directly on the ScrollView.  In the example below the longpress event is performed when long pressing on the red View in the ScrollView but don't fire when long pressing below the View directly on the green ScrollView.    If I change onLongpress with onClick the click event fires as expected.    {code:title=index.xml}  <Alloy>   <Window backgroundColor=white>    <ScrollView  backgroundColor=green onLongpress=onLongPress>     <View height=100 top=0 backgroundColor=red></View>    </ScrollView>   </Window>  </Alloy>  ",Bug,High,Closed,"2016-02-09 06:58:15","2016-02-09 06:58:15",5
"The Titanium SDK ","Windows: Running desktop app doesn't show logs in console","If you run a Windows 10 app on desktop {{{-T ws-local}}} it'll require some user input (Enter) to set up the first time.  But after that, it goes automatically. In both cases, the CLi basically just exits after the app gets launched, and I see no logs from the app whatsoever.    Additionally, I've seen the first few times the app seemed to just close/crash without fully running (this was the mocha unit test app, didn't see any activity before app disappeared).",Bug,Critical,Closed,"2016-02-08 16:30:47","2016-02-08 16:30:47",5
"The Titanium SDK ","Android: TiHTTPClient leaking files when response > 512K","The problem begins in *TiHTTPClient.java*, {{handleEntityData()}}.    If the response size > 512K ({{totalSize > maxBufferSize}}) it calls {{createFileResponseData(true)}} and a temporary data file is created ({{outFile = TiFileFactory.createDataFile(tihttp, tmp)}}).    This file is never deleted and remains in the appdata directory.",Bug,High,Closed,"2016-02-04 11:51:14","2016-02-04 11:51:14",3
"The Titanium SDK ","Android: CardView can't display child view","Where is red line?          My result:  !CardView_bug.png|thumbnail!  ",Bug,Critical,Closed,"2016-02-06 21:30:53","2016-02-06 21:30:53",0
"The Titanium SDK ","Android: 9-patch padding box area ignored for Button backgroundImage","From doc [Nine-patch|http://developer.android.com/intl/ru/guide/topics/graphics/2d-graphics.html#nine-patch]:    {code}  The pink rectangle in the bottom image identifies the region in which the contents of the View are allowed.   If the contents don't fit in this region, then the image will be stretched so that they do.   {code}    But it ignored:    {code:xml}  <Button backgroundImage=/images/alert_button.png>Блокировать</Button>  {code}    Result:  !2016-02-04 00-57-18 Genymotion for personal use - Google Nexus 4 - 4.2.2 - API 17 - 768x1280 (768x1280, 320dpi) - 192.168.5.png|thumbnail!    xhdpi Image source:  !alert_button.9.png|thumbnail!    ",Bug,Critical,Open,"2016-02-03 22:00:11","2016-02-03 22:00:11",8
"The Titanium SDK ","Windows: Support Ti.Blob.imageWith* methods","Support:  http://docs.<USER>com/platform/latest/#!/api/Titanium.Blob-method-imageWithAlpha  http://docs.<USER>com/platform/latest/#!/api/Titanium.Blob-method-imageWithRoundedCorner  http://docs.<USER>com/platform/latest/#!/api/Titanium.Blob-method-imageWithTransparentBorder","New Feature",High,Open,"2016-02-05 14:26:24","2016-02-05 14:26:24",8
"The Titanium SDK ","Android: Implement support for Camera2 API","Our current Camera implementation still uses android.hardware.camera, which is deprecated last year. We need to implement android.hardware.camera2 and use them on API  21+  Link: http://developer.android.com/intl/zh-cn/reference/android/hardware/camera2/package-summary.html","New Feature",High,Open,"2016-02-04 23:25:33","2016-02-04 23:25:33",21
"The Titanium SDK ","Windows: Update parity report generation/docs to show support for missing items","I'm not sure if this is a doc issue or a problem with the scripts we use to generate the parity report.    In any case, looking at http://builds.<USER>com/mobile/master/mobilesdk-6.0.0.v20160203193439-parity.html I'm seeing some APIs listed as unsupported though they really are:    - Global  - Modules.Cloud* (?)  - Titanium.BlobStream  - Titanium.BufferStream  - Titanium.Filesystem.FileStream  - Titanium.Map  - Titanium.Map.Annotation  - Titanium.Map.View  - Titanium.Module  - Titanium.Proxy  - Titanium.UI.AttributedString  - Titanium.UI.ListItem  - Titanium.UI.ListSection  - Titanium.UI.Picker  - Titanium.XML.CDATASection  - Titanium.XML.Comment  - Titanium.XML.DocumentFragment  - Titanium.XML.EntityReference  - Titanium.XML.Text",Story,High,Closed,"2016-02-04 17:16:05","2016-02-04 17:16:05",5
"The Titanium SDK ","Parity: enabling run-on-main-thread","Both iOS and Android enables run-on-main-thread in tiapp.xml  However, the properties are placed in different locations.  We should modify iOS to be in parity with the current implementation for Android (moving it out of the <iOS> section.  See related ticket.",Improvement,High,Closed,"2016-02-04 07:03:24","2016-02-04 07:03:24",3
"The Titanium SDK ","Create Jenkins build machine for titanium_mobile build and unit testing","Travis CI has been doing well for build and unit testing on the titanium_mobile repo. However, several issues occur when using newer versions of Xcode > 6.4, including performance and other fails. To be able to have a more configurable environment, it'll be better to build a <USER>machine instead that can vet every PR ready to be merged into the repo.",Story,High,Closed,"2016-02-04 03:56:41","2016-02-04 03:56:41",13
"The Titanium SDK ","Android: Provide generic requestPermission(s) method","We need a generic method to request permissions that our own APIs do not use.    I know we've discussed this and thought this was best to leave this to the modules that require them, but there are multiple reasons for having a generic one instead:    * So that module doesn't come up with different ways (method name, method arguments, callback/event response and payload)  * So that developers don't need to rely on maintainers of 3rd party modules to update their modules to support Android 6.0 runtime permissions    Also see the discussion in TIMOB-20144",Improvement,High,Closed,"2016-02-03 17:22:12","2016-02-03 17:22:12",3
"The Titanium SDK ","iOS: Weird behavior after crop the image captured from camera","h6.Description  Simply run the following code in a default mobile app.  Basically, the test case is 1. open a camera 2. capture a image 3. crop the image from step 2 (based on the layout of UI).    h6.Expect Result:  The result image should be the same like inside the red rectangle area    h6. Actual Result:  The result image is not as expected, and the orientation is wrong as well.     h6. Code  ",Bug,Critical,Closed,"2016-02-03 12:47:50","2016-02-03 12:47:50",5
"The Titanium SDK ","Windows: Make use of an LRU cache for cached property values","Kota made great strides in eliminating a large source of memory hogging going on: storing all constant property values in fields of the enclosing type. We'd not only store them for the class definition but also for every instance! Now that we store them in an unordered_map and generate them on-demand they're only cached once per class. But it'd be a good improvement to move to something like an LRU cache to evict older constants out of the in-memory cache if we ever need to free some memory.   It'd be good to have more details on just how much memory these are taking up and what the speed/perf overhead of always generating them on-demand would be (or if that'd even be feasible whether the constants would be considered equal when regenerated).",Story,Medium,Resolved,"2016-02-02 17:51:50","2016-02-02 17:51:50",8
"The Titanium SDK ","Windows: Support for Localization / i18n","Add support for Localization for Windows Phone",Epic,High,Closed,"2016-02-02 16:16:56","2016-02-02 16:16:56",0
"The Titanium SDK ","Windows: Add support for shadow* properties on Ti.UI.Label and Button","Add support for Shadows for Windows Phone    This is a vague request but most shadow API's are not supported in Windows    http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Label-property-shadowOffset  http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Button-property-shadowOffset    shadowColor, shadowOffset and shadowRadius.    Also note that these properties are not supported on iOS Button; and shadowRadius isn't supported on iOS Label.",Improvement,None,Closed,"2016-02-02 16:12:04","2016-02-02 16:12:04",13
"The Titanium SDK ","Windows: Add support for Calendar View","Add support for Native Calendar for Windows Phone    In client's app, the calendar view is used to select the date in Search and Payment Details Screen. Currently Calendar (http://docs.<USER>com/platform/latest/#!/api/Titanium.Calendar) is not supported on Windows Phone  ",Improvement,Medium,Reopened,"2016-02-02 15:17:14","2016-02-02 15:17:14",13
"The Titanium SDK ","iOS: Support showing and hiding the toolbar in Ti.UI.Window","There is a [community PR|https://github.com/<USER>titanium_mobile/pull/6816] to support hiding and showing the toolbar on iOS (toolbars are not available on Android, yet).    Currently the docs and example code are missing, I will assist the community member to cherry-pick his changes and add the docs and test case in a new PR.","New Feature",Medium,Closed,"2016-02-02 10:22:37","2016-02-02 10:22:37",3
"The Titanium SDK ","Memory lack using scrollableview and many buttons. Buttons event don't works.","With sdk 5.1.2 I try the code in new project on iPad2 simulator without LiveView and it works fine but not in my real project. Now, in the new project, I have tried with 90 iterations and clicks works for first 18 buttons, in 5.1.1 works fine in all buttons.        http://stackoverflow.com/questions/35103130/multiple-buttons-dont-fire-clicks-event-5-1-2-memory-lack/35103813#35103813",Bug,Critical,Closed,"2016-01-30 16:30:19","2016-01-30 16:30:19",1
"The Titanium SDK ","Windows: Prevent MSBuild from locking resources after builds","MSBuild seems to lock resources after builds; preventing subsequent builds from completing.    This can be resolved by disabling node reuse:  http://stackoverflow.com/questions/3919892/msbuild-exe-staying-open-locking-files    This could also fix the previous problems of building in parallel?",Story,Critical,Closed,"2016-02-02 00:21:35","2016-02-02 00:21:35",3
"The Titanium SDK ","Windows: Build errors out with 'mix is not a function'","h5.Description    When building a project using 5_2_X SDK, the build fails with the following, this happens when building for any platform.    *This only happens when using 5_2_X SDK* The mix function appears to be missing the 5_2_X windowslib https://github.com/<USER>titanium_mobile/blob/5_2_X/node_modules/windowslib/lib/utilities.js        h5.Steps to reproduce    1. Create a project using {{appc new --type titanium --name preprodclassic --id com.appc.test--classic}}  2. {{cd}} into the project location  3. Build the project using any of {{appc run -p windows -T wp-emulator}}, {{appc run -p android -T device --build-only}}    h5.Actual result    The build fails with {{ERROR  | mix is not a function}}    h5.Expected result    The build should not error out",Bug,Critical,Closed,"2016-02-01 21:59:53","2016-02-01 21:59:53",3
"The Titanium SDK ","Hyperloop: Couldn't find iOS CocoaPods third-party-modules with -","Coming from here: http://stackoverflow.com/questions/35038739/loading-openwebrtc-sdk-in-<USER>hyperloop-through-cocoa-pods/35084788#35084788    github from framework causing issues: https://github.com/EricssonResearch/openwebrtc-ios-sdk    In attachments you can find my Podfile,the build log and also a screenshot from my Pod directory. ",Bug,High,Closed,"2016-02-01 08:28:32","2016-02-01 08:28:32",2
"The Titanium SDK ","iOS - KrollObject forgetKeylessKrollObject","Recently we have received a crash on one of our application with the following stack trace:          Dashboard suggests that the crash has happened at forgetKeylessKrollObjject method. From the stack trace it seems that during a view removal, this incident happened. There are many places in the code where we have added and removed view. As there is no definite place defined in the log and nor we have the test case, we went through the framework code and saw that there is no null handling inside the method as TiProxy.m --> krollObjectForBridge function can return nil.    Again, in the javascript code, if we do something like:        We too can see that TiViewProxy remove is called, but the application does not crash due to ENSURE_ARGS check I guess. Hence does it mean that the issue is occurring due to scenario where the UI has been garbage collected but not set to null for which it is trying to clean it.    Also this issue does not occur everyday, rather 3-5 times a week across several iOS devices with majorly running iOS 9. We do not have a test case, we only get the same stack trace from the dashboard.",Bug,Critical,Closed,"2016-01-29 17:59:56","2016-01-29 17:59:56",1
"The Titanium SDK ","iOS: Support SearchBar button title","Hi guys,  can you please implement new feature - abbility to change/localize SearchBar Cancel button title? It can be done in Swift/ObjC via child views of searchbar, but it's not  implemented in <USER>Ti SDK.  I wrote a post to StackOverflow [link here:|http://stackoverflow.com/questions/35046988/ios-<USER>studio-how-to-translate-cancel-button-on-searchbar/35095589#35095589]  Thank you","New Feature",Low,Closed,"2016-01-31 00:20:59","2016-01-31 00:20:59",3
"The Titanium SDK ","iOS: Resolve Xcode compiler warnings","For the upcoming Titanium Mobile 5.4.0 release, we need to get rid of the warnings we currently have when building the SDK (as well as deploying Titanium Apps).    This is a similar effort as TIMOB-16697 did in the past.",Improvement,Medium,Closed,"2016-01-31 17:38:02","2016-01-31 17:38:02",3
"The Titanium SDK ","Android missing Titanium.Database.DB.getFile()","On Android the Titanium.Database.DB.getFile() method is missing.    http://docs.<USER>com/platform/latest/#!/api/Titanium.Database.DB-method-getFile    Ticket to create PR.",Improvement,Medium,Closed,"2016-01-31 00:14:49","2016-01-31 00:14:49",3
"The Titanium SDK ","Android: Push Notification Payload Null","h6.Issue Description  While sending push notifications from aws dashboard or my api, android doesnt detect any payload received. And if the application is in background the application crashes with the following stacktrace:        h6.Information  we tried the following structure for sending notifications:    Suggested By <USER>but not working       h6.AWS DEFAULT  BUT NOT WORKING:          h6.WORKING ONE  But when we tried this, if app is in foreground it shows the message, but in background it crashes again :  ",Bug,High,Closed,"2016-01-06 12:15:44","2016-01-06 12:15:44",1
"The Titanium SDK ","Windows: Ti API in WebView content is not implemented","{{Ti.UI.WebView}} on Windows doesn't support Titanium API in the HTML as known as local script as described in the [API doc|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.WebView]. Especially {{Ti.App.addEventListener}}, {{Ti.App.fireEvent}} and {{Ti.API}} logging functions are not available.    See also: https://wiki.<USER>org/display/guides2/Communication+Between+WebViews+and+Titanium",Bug,High,Closed,"2016-01-29 04:20:06","2016-01-29 04:20:06",8
"The Titanium SDK ","Windows: File.write can't handle UTF-8 string","{{Ti.Filesystem.File.write}} writes wrong UTF-8 data. For instance following code doesn't show the string correctly.    ",Bug,High,Closed,"2016-01-29 02:00:20","2016-01-29 02:00:20",5
"The Titanium SDK ","Support getElementById method to lookup views by ID","To facilitate a common web pattern (such as JQuery $ or DOM selector getElementById), we should support a simple selector like syntax or at a minimum getElementById-like API.    My suggestion would be something like Ti.UI.getViewById which would return the view object or null if not found.  ","New Feature",High,Closed,"2016-01-28 17:48:57","2016-01-28 17:48:57",5
"The Titanium SDK ","Android - CloudPush - callback is called but notification isn't cleared","My setup is like the following:        tiapp.xml      If I receive a notification but leave it there without clicking it. Instead I launch my app from launcher. Then the callback function is called but the notification isn't cleared. If later I click the notification, it will launch the app but no callback is called.    This is confusing to users. Preferable behavior would be: Once the callback is called, the corresponding notification should be cleared and the group message number should be reset.    Or, like the iOS, the callback should never be called unless users click the notification or the app is in the foreground.",Bug,Critical,Closed,"2015-07-31 19:57:46","2015-07-31 19:57:46",3
"The Titanium SDK ","Android: Function insertAt on Scroll Views causes crash","insertAt works as expected with Windows and Views, but with Scroll View it causes the application to crash with an error like  dalvikvm: threadid=1: thread exiting with uncaught exception (group=0x40bb0378)    Ex.  ",Bug,Critical,Closed,"2016-01-27 10:59:11","2016-01-27 10:59:11",5
"The Titanium SDK ","Facebook iOS Module 5.0.0 crashes on resume on iOS 8.4","The new version of FB module 5.0.0 crashes on iOS 8.4    When the module is connected as described (app id and everything), and there is only a require and no other fb-related javascript code, the app crashes on resume on iOS 8.4. On iOS 9, it does not happen.     From what I have figured out, the crash source is in this line:   {code:objc}  NSString* annotation = [launchOptions objectForKey:UIApplicationOpenURLOptionsAnnotationKey];  {code}    Update: as it has been proven yesterday, mysterious crashes on startup on the device of my coworker were also due to this bug. After I wrapped it into version more than 9.0 statement, the crashes were fixed",Bug,Critical,Closed,"2016-01-26 14:37:09","2016-01-26 14:37:09",3
"The Titanium SDK ","Windows: ProgressBar default layout should be SIZE, not FILL","According to [Transitioning to the New UI Layout System|http://docs.<USER>com/platform/latest/#!/guide/Transitioning_to_the_New_UI_Layout_System], the default layout of {{ProgressBar}} should be {{Ti.UI.SIZE}}, not {{Ti.UI.FILL}}. For instance following example should show green background only under the progress bar & text, and it should not fill parent view.      ",Bug,Medium,Closed,"2016-01-28 05:16:52","2016-01-28 05:16:52",5
"The Titanium SDK ","Windows: Implement enabled property for View","Implement {{View.enabled}} property. It's undocumented property but Android has it, and it makes sens to make {{backgroundDisabledColor/Image}} property work.    ",Improvement,Medium,Closed,"2016-01-28 05:02:26","2016-01-28 05:02:26",8
"The Titanium SDK ","Easier way to bump version","Instead of having to change the version manually on various files, we can use a different method to update all at once.  Refer to this closed PR and create a new one.  https://github.com/<USER>titanium_mobile/pull/6702",Story,Trivial,Open,"2016-01-28 00:40:06","2016-01-28 00:40:06",1
"The Titanium SDK ","Android: Ti.Contacts.getAllPeople() crashes with overflow on Android < 6","I am getting the “[ERROR] dalvikvm: JNI ERROR (app bug): local reference table overflow (max=512)” issue when simply calling Ti.Contacts.getAllPeople(). Literally, that ONE line of code is causing the error.    * I have 2900 contacts (and I know plenty of people with more), so I am not an abnormal use case.  * I know it is this one line because I have removed any other code around it (after the permissions of course), and the call works on Android 6.0+, but does not work on versions prior to Android 6.0.  * It works perfectly fine when I run it against an emulator with 0 contacts, or even 5 contacts. I suspect that it is not releasing the memory when it iterates over the contacts that it is retrieving.    The environments that I tested this on were:  1. Multiple Android emulators, but they all follow the same specs (besides the screen size) as the attached image shows  2. On a Galaxy S4 running Android 4.4.2    Here is a snippet of the code:    ",Bug,Critical,Closed,"2016-01-27 18:39:42","2016-01-27 18:39:42",2
"The Titanium SDK ","Android: java.lang.IllegalArgumentException when ti.map and ti.geofence modules were added","h6.Steps to reproduce  1) Create a sample app   2) Attach both modules  3) Run through CLI: $ appc run -p android -T device  4) Monitor console output    h6.Stack Trace      h6.Work around  Downgrading ti.map to 2.3.1 instead of 2.3.4  ",Bug,High,Closed,"2016-01-27 23:51:42","2016-01-27 23:51:42",3
"The Titanium SDK ","Hyperloop: Support Blur effect example","We have an android example of bluring a view, we should add the iOS equivalent, too.",Story,None,Closed,"2016-01-27 21:51:37","2016-01-27 21:51:37",3
"The Titanium SDK ","Found incompatible Titanium module error does not actually say wat the problem is","When you are using a module that requires a different Titanium SDK version than the one your app is set to it will say:        There's a few things unclear about this:    * None of these messages tell you what the actual problem is.  * The one who could is at debug-level and will not be visible to most users.  * That same one originates from the validation of the module's minsdk, but its messages has a lot of (version) info, but not about what SDK version is required. So it still doesn't give the user any clue on how to resolve.    Suggested fix:    * There should be a clear message at the warn/error level that tells the user what SDK the module requires and why these requirements are not met (by showing the app's SDK version).",Bug,Low,Closed,"2016-01-26 21:48:52","2016-01-26 21:48:52",5
"The Titanium SDK ","Hyperloop: Plugin fails if the source does not contain HL references","As found by [~<USER> and reported on [Stack Overflow|http://stackoverflow.com/questions/34999704/hyperloop-compilation-error] the Hyperloop plugin fails when the source of the app does not actually use Hyperloop. It will crash with:        PR incoming",Bug,High,Closed,"2016-01-26 21:39:19","2016-01-26 21:39:19",2
"The Titanium SDK ","iOS: DB error after adhoc export in Xcode","h6.Issue Description    The applications is working fine once running with <USER>but the xcode build generated by <USER>causing problems in application submission to appstore.   If you create the adhoc distribution package from Xcode, then 2 thins can happen:     # Get the app.js not found error(  xcode_adhoc_applicaitonerror.PNG  attached for your reference)  # All styles,Images are not appearing in the application (xcode_adhoc_missing styles images overlapping error.png attached for your reference)    If you create the adhoc distribution package from Studio, then when this things can happen:   # DB alert error (  sqllite_databaseInstallfailed-error.png attached for your reference)   # The application is not installing correctly and can't be launched after sync from iTunes     h6. Steps to reproduce   # Download the test-case here: https://drive.google.com/file/d/0BwTWo-c2a0b9ZnpaRGhhQzlGbWs/view?usp=sharing  # Run for simulator  # Open the solution in xcode   # Product --> Archive   # go to Organizer --> select the Archive that is created --> export as AD-Hoc Distribution (don't use Production provision profiles)  # ipa will be created.   # Put the ipa file in itunes and install the application on iphone.   # After these steps application will be installed on the device and you can see the database installation error and the Image disappearance and Layout distortion.     //From Studio    # Package the app as Distribute AdHoc / Enterprise  # Import to Itunes the generated ipa  # Sync to the iphone  # Try to open the app  # After these steps application will not be correctly installed on the device or if it get installed the the DB error will appear.     ",Bug,Critical,Closed,"2016-01-26 17:34:18","2016-01-26 17:34:18",1
"The Titanium SDK ","iOS: Interactive notifications with activationMode background don't work when app is not already in memory","For interactive notifications to work you have to listen for event 'localnotificationaction' (and/or remotenotificationaction for push notifications). I have an action set to activationMode: Ti.App.iOS.USER_NOTIFICATION_ACTIVATION_MODE_BACKGROUND which should allow execution of some code without launching the app to foreground. This only seems to work when the app is already/still in memory.    Expected behavior would be that it always works even if the app has never been started yet. This works fine with WhatsApp for example. Looking at the ObjC code (mainly in TiApp.m) for this and placing some debug logging here and there I don't see how this can work. The code in TiApp.m triggers the fireevent but at that time the JS part of the app has not fully loaded yet, causing the event to be missed in JS because the listener could not be setup yet.    Another issue that will cause this not to work is that when handling an interactive notification in the background is that the full app is loaded (at least attempted). This will fail because UI interaction is not allowed when in background.    Code in TiApp.m that should handle this:        and      ",Bug,Critical,Closed,"2016-01-12 17:04:47","2016-01-12 17:04:47",15
"The Titanium SDK ","iOS: Uncaught exception NSInvalidArgumentException loading XIB file","h6.Issue Description  When creating an <USER>module the first XIB file was loaded. However, no tap/gesture were detected and we are unable to move/navigate to the next XIB file.     h6.Steps to reproduce   1) iOS native project which has 2 XIB files. On clicking Button you will move to the next XIB page with text Label   2) Grab <USER>module   3) Test Project with first page from <USER>view having text load XIB. On click it will load the first page of native XIB. On clicking Button it crashes. See please logs below.    h6.Stack Trace  ",Bug,High,Closed,"2016-01-25 18:46:11","2016-01-25 18:46:11",1
"The Titanium SDK ","Android: Slider track not show under transaprent image","Slider track is not show under transparent thumbImage:    *How to reproduce*:  var slider = Ti.UI.createSlider({     min: 1,     max: 51,     value: 51,     backgroundImage: 'background.png',     thumbImage: 'thumb.png'  });    *Expected behaviour*:  Track should be visible under transparent image. It was working in past version.    *Actual behavior*:  The track is not showed under image no matter if it is transparent or not.  !Zrzut ekranu 2016-01-18 o 21.19.42.png|thumbnail!",Bug,High,Closed,"2016-01-18 20:31:00","2016-01-18 20:31:00",2
"The Titanium SDK ","Android: ListView with attributed strings are not rendering sometimes","h6. Issue Description  When the user scroll very fast some attributed strings are missing (See attached screenshots), this is not happening on normal labels and if you scroll back slowly the attributed strings are showed.    h6. Steps to Reproduce   # Create a new default alloy project   # replace the views/index.xml with the next code:    # Replace the controllers/index.js code with the next code:     # Replace the code inside styles/index.tss with the next code:    # Run  # Scroll fast and stop",Bug,High,Closed,"2016-01-22 05:44:27","2016-01-22 05:44:27",5
"The Titanium SDK ","Windows: Run unit tests on CI builds for Desktop/Store apps","We currently run our unit test suite only on Windows Phone emulator (for both 8.1 and 10.0). We should also run the suite against a Windows Store/desktop app (target of ws-local).",Story,High,Closed,"2016-01-21 17:10:48","2016-01-21 17:10:48",8
"The Titanium SDK ","First button in the toolbar does not show any visual feedback on click","When creating a simple application with a rightNavButton at the top and a toolbar at the bottom, the first button on the left shows no visual feedback when clicked.    *Steps to reproduce:*   # Use the app.js file below.    *Actual :*  The first button shows no visual feedback when clicked    *Expected:*  The pop-up appears withe the option for an alloy app. (see image)    *App.js*  ",Bug,Low,Closed,"2016-01-20 23:56:19","2016-01-20 23:56:19",0
"The Titanium SDK ","Android: If you run a mobile project on Android < 5.0, then WindowProxy errors will appear in logcat","*Details:* If you run a mobile project on Android < 5.0, then WindowProxy errors will appear in logcat.    *Notes:*  * This is a *regression* from SDK 5.1.2.GA.  * *However*, the errors appear to be benign on Android < 5.0 i.e. default app does not throw any runtime errors or does not crash.    *Steps to reproduce:*  # Create a default Alloy app  # Run app on Android device/emulator less than 5.0  # Wait app to be launched  # Check logcat    *Actual:* WindowProxy errors will appear in logcat:      *Expected:* No errors should appear regarding the WindowProxy.",Bug,Medium,Closed,"2016-01-20 21:42:51","2016-01-20 21:42:51",8
"The Titanium SDK ","Windows: Support Ti.Blob.imageAs* methods","On windows phone I have to make some image manipulation, in my case I want to resize/reduce quality of an image before upload it on my server. On Android/iOS I use [ti.imagefactory|http://gitt.io/component/ti.imagefactory] and everything works as expected with this function that I made for a little manipulation on the image before upload it:    but on windows phone I haven't ti.imagefactory library. As a workaround I could use [Titanium.Blob.imageAsResized|http://docs.<USER>com/platform/latest/#!/api/Titanium.Blob-method-imageAsResized] but this function is not supported on Windows Phone.    Is it possible to include in future update a compatibility with Windows Phone for the function used to manipulate images? The best in this case will be ti.imagefactory also for Windows Phone.","New Feature",High,Closed,"2016-01-20 13:51:30","2016-01-20 13:51:30",8
"The Titanium SDK ","Windows: Reduce memory consumption at TitaniumKit startup","According to [Application Verifier|https://msdn.microsoft.com/en-us/library/windows/hardware/ff538115%28v=vs.85%29.aspx] for Windows Phone, bad memory allocation due to heap corruption and out of memory error has been observed. This may be a root cause of crash at application startup (TIMOB-20197). I'm observing that one of out of memory error occurs at {{Titanium::ApplicationBuilder}} constructor. Because we are instantiating every Titanium object in there, we may have a chance to reduce memory consumption by delaying instantiation of them. We might be able to instantiate them on demand.     ",Story,Critical,Closed,"2016-01-20 12:37:37","2016-01-20 12:37:37",13
"The Titanium SDK ","Windows: Windows 10 SDK is not detected","h5.Description    When using 5_2_X SDK the Windows 10 SDK is not detected. This means that you are unable to build to a Windows 10 Mobile Emulator as it will error out with the below        *This works fine using an SDK from master branch*    *Replacing the windowslib in a 5_2_X SDK with windowslib from a master branch SDK fixes the issue*    h5.Steps to reproduce    1. Install the latest 5_2_X SDK {{appc ti sdk install -b 5_2_X -d}}  2. Run {{appc ti info -t windows}}  3. Build to a Windows Mobile Emulator using {{appc run -p windows -T wp-emulator -C 10-0-6 -S 10.0}}    h5.Actual result    2. Windows 10 SDK is not shown in {{appc ti info -t windows}}  3. The build errors out with         h5.Expected result    2. The Windows 10 SDK should be shown in {{appc ti info -t windows}}  3. The build should not error out",Bug,Critical,Closed,"2016-01-19 23:30:58","2016-01-19 23:30:58",5
"The Titanium SDK ","Android 6.0: java.io.FileNotFoundException: open failed: ENOENT (No such file or directory)","h6.Issue Description  While trying to write the attachment content in the file and the directory used is temp_directory. As per the use case we have to save the content passed from the cloud server to the file and file is opened by using the intents. This approach is working fine for the os version upto Android 5.0 (lollipop) but on the Android 6.0 (Marshmallow) it’s failing.     h6.Steps to reproduce  1) Get sample attach to run on Android 5 device  2) Monitor and watch logs. App works fine  3) Get sample attach to run on Android 6 device  4) Monitor and watch logs. App won't load file as expected.    h6.Stack Trace  ",Bug,High,Closed,"2016-01-19 22:53:16","2016-01-19 22:53:16",5
"The Titanium SDK ","Hyperloop: Cannot remove a HyperloopViewProxy from a TiViewProxy","We added support for adding a {{HyperloopViewProxy}} to the Titanium view hierarchy, but not for removing them again. We should do a similar check like [here|https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/TiViewProxy.m#L191] to get the {{TiViewProxy}} correctly.    The thrown error: {{Invalid type passed to function. expected: TiViewProxy, was: HyperloopClass -\[TiViewProxy remove:\] (TiViewProxy.m:266)}}",Story,High,Closed,"2016-01-19 22:27:35","2016-01-19 22:27:35",5
"The Titanium SDK ","Windows: generate_project.js does not set MSBuild version","The {{-m, --msbuild}} parameter is ignored by {{generate_project.js}}",Bug,High,Closed,"2016-01-17 21:06:03","2016-01-17 21:06:03",3
"The Titanium SDK ","Hyperloop: Should not compile platform-specific folders for other platforms","If you download the example app linked form the body of http://labs.<USER>com/project/55f74a9f421c44837717716b/Hyperloop-Module and run it for iOS straight away ({{appc new --import --no-services && appc ti build -p ios}} the Hyperloop compile will fails with:        h2. Cause    Hyperloop should not compile JavaScript files in {{Resources}} that are in platform-specific folders for other platforms then the one you build for.",Bug,Critical,Closed,"2016-01-11 09:19:11","2016-01-11 09:19:11",5
"The Titanium SDK ","Hyperloop: Hyperloop stubs should be generated in platform specific folders","Hyperloop generates its stubs in {{Resources/hyperloop}}.    # Download the examples project from http://labs.<USER>com/project/55f74a9f421c44837717716b/Hyperloop-Module  # Clean the project  # Run for iOS: {{appc new --import --no services && appc ti build -p ios}}  # Check {{Resources}}     Hyperloop should generate its stubs in platform specific folders, e.g. {{Resources/iphone/hyperloop}}.",Bug,High,Closed,"2016-01-17 07:59:27","2016-01-17 07:59:27",2
"The Titanium SDK ","Windows: Implement Ti.UI.View.convertPointToView( point, destinationView )","convertPointToView( point, destinationView ) : Point  Translates a point from this view's coordinate system to another view's coordinate system.    Returns null if either view is not in the view hierarchy.    Keep in mind that views may be removed from the view hierarchy if their window is blurred or if the view is offscreen (such as in some situations with Titanium.UI.ScrollableView).    If this view is a Titanium.UI.ScrollView, the view's x and y offsets are subtracted from the return value.    http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.View-method-convertPointToView    - https://github.com/<USER>titanium_mobile/blob/707baf65702530b957513651af4987a9f6a0fd56/android/titanium/src/java/org/<USER>titanium/proxy/TiViewProxy.java#L1149  - https://github.com/<USER>titanium_mobile/blob/bc85170157d3bebc5de1d61a9fe6e34bce84a8c9/mobileweb/titanium/Ti/_/UI/Element.js#L274  - https://github.com/<USER>titanium_mobile/blob/8e5f028f5995389cb31a35b217ebf033d230fc65/iphone/Classes/TiViewProxy.m#L667    https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.uielement.transformtovisual.aspx",Improvement,High,Closed,"2016-01-15 12:14:20","2016-01-15 12:14:20",5
"The Titanium SDK ","Android: Webview chromium: [ERROR:buffer_manager.cc(313)]","h6. Issue Description  Trying to load this url: https://credodonations.com the url is not loaded and this error is showed:     This is only happening on Android, iOS is working correctly      h6. Steps to replicate:   # Create a new default application project  # Open app.js  # Replace the code inside with this:    # Run",Bug,High,Closed,"2016-01-15 02:18:55","2016-01-15 02:18:55",3
"The Titanium SDK ","Build Server Zip files to not unzip on download or Finder","Hello,    Recently none of the zip files downloaded from http://builds.<USER>com.s3.amazonaws.com/index.html unzip via browser download or from Finder.  They do unzip from terminal using the unzip command.    The issue seems to be related to Ti.SafariDialog/.git/COMMIT_EDITMSG not containing an end of stream entry.    To recreate:  1) Use Safari or Chrome on mac and download the latest zip from Master. Please note I've only tested the OS X download  2) Once downloaded you will receive an error that your browser was not able to decompress the file.  3) Try to unzip using Finder and you will get a generic message that the file or folder does not exist.    To find the issue:  1) Open terminal in the directly you've downloaded the file  2) Run the below statement. Please note I renamed the file to avoid typing  $ zip -FF download.zip --out test.zip    3) You will see the following printed  Fix archive (-FF) - salvage what can   Found end record (EOCDR) - says expect single disk archive    4) If you scroll to the end of the output you will see the failure.   copying: modules/iphone/ti.touchid/1.2.0/module.xcconfig  (452 bytes)   copying: Ti.SafariDialog/  (0 bytes)   copying: Ti.SafariDialog/.git/  (0 bytes)   copying: Ti.SafariDialog/.git/branches/  (0 bytes)   copying: Ti.SafariDialog/.git/COMMIT_EDITMSG    zip warning: no end of stream entry found: Ti.SafariDialog/.git/COMMIT_EDITMSG   zip warning: rewinding and scanning for later entries",Bug,Critical,Closed,"2016-01-14 12:39:28","2016-01-14 12:39:28",3
"The Titanium SDK ","Windows: Downloaded image not show in ImageView","I create a simple alloy app and I download some remote image with this function         in another controller I load the downloaded image and I put them in a tableview with this code, and I want the image as a background  (I included in the code all the test that I've done)    ",Bug,Critical,Closed,"2016-01-12 11:39:57","2016-01-12 11:39:57",8
"The Titanium SDK ","Android 6.0: requestStoragePermission is needed for various use cases","In Android 6.0, loading remote images requires storage permission. It doesn't need camera permissions.    A separate permission is required just for requesting storage permission. Example of use case is TIMOB-19899.","New Feature",High,Closed,"2016-01-14 05:05:32","2016-01-14 05:05:32",3
"The Titanium SDK ","Streaming Audio not working on Android Marshmallow with Alloy","As mentioned in ticket: TIMOB-20140 reported by [~<USER>    {quote}I did try a nightly build about a week ago and again today and found that although some of my Shoutcast streams now played under Android 6.0 (on a Nexus 7), others did not and produced our old friend error (1, -2147483648)  Examples:  Won't play: http://sc2.radiocaroline.net:10558  Will play: http://sc2.radiocaroline.net:8000  The error starts at: E/NuCachedSource2(16101): source returned error -1, 10 retries left  In a further test using 'Classic' Ti the stream that would not play in an Alloy build now plays and we see the following printed in the Console, which I have never seen in an Alloy implementation:  AAS: Asking for stream handler for protocol: 'http'  Audio in Android seems to be a bit of a lottery - if it works great. If it does't we're stuffed as nobody seems to be able to say what the cause is!{quote}    {quote}As far as I can tell both of the above Shoutcast streams are the same protocol as they come from the same server (Shoutcast 1.9.8), be it different ports. But read on as I spent some time testing this yesterday and my conclusion is that there is some difference between the way the 'Classic Ti' implements AudioPlayer behind the scenes and the way Alloy does. I can run the same very simple test (below) and get two different results, depending on if it was built with Alloy or not and version of Android the test is run under.  Test code built with Ti. SDK 6.0.0.v20160112093414 and targeting Android API 23    Test 1:  Alloy build - run on Nexus 7 Tablet Android 6.0.1 - It doesn't play and throws error (1, -2147483648)  Classic build - run on Nexus 7 Tablet Android 6.0.1 - streams plays  Test 2:  Alloy build - run on Lenovo Tablet Android 4.2.2 - streams plays  Classic build - run on Lenovo Tablet Android 4.2.2 - streams plays  Observations: When it works we see this printed in the Ti Console:  [DEBUG] : AAS: Asking for stream handler for protocol: 'http'  [DEBUG] : MediaPlayer: setSubtitleAnchor in MediaPlayer  When it doesn't work we get:  [ERROR] : MediaPlayer: error (1, -2147483648)  And when it does work, in the Android log we see:  01-12 07:48:55.722: D/audio_hw_primary(16101): enable_audio_route: apply and update mixer path: low-latency-playback  01-12 07:48:55.988: E/NuCachedSource2(16101): source returned error -1, 10 retries left  Conclusion: There is something in an Alloy build, when run under Android 6.0, that is causing NuCachedSource2 to error and the stream never plays.{quote}",Bug,Medium,Closed,"2016-01-14 02:23:04","2016-01-14 02:23:04",3
"The Titanium SDK ","ti.SafariDialog module folder exists outside the modules/iphone folder in the titanium folder along with rogue _MACOSX folder after installing SDK 5.2.0.v20160111111831","h5.Steps To Reproduce:  1. Install SDK 5.2.0.v20160111111831.  2. Go to your titanium folder.    h5.Actual Results:  1. You see Ti.SafariDialog & a rogue folder _MACOSX in the titanium folder.   *NOTE: The original module exists inside modules/iphone folder*    h5.Expected Results:  1. The Ti.SafariDialog module should be inside titanium/modules/iphone/  2. The _MACOSX folder should not exist.  ",Bug,Critical,Closed,"2016-01-13 22:44:56","2016-01-13 22:44:56",3
"The Titanium SDK ","Ti UI Window docs are wrong","See here:  http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Window    Not showing anything except that its for Windows Phone",Bug,Low,Closed,"2016-01-13 22:03:50","2016-01-13 22:03:50",2
"The Titanium SDK ","Windows: Support handling differing capabilities between Windows 8.1/10","The list of capabilities specified in the appxmanifest has changed from 8.1 to 10. Some of them apply only to one version or the other, and some of the new ones require the tags be namespaced.    Right now our support is basically to allow a passthrough of XML from trap.xml to the manifest to add more capability tags. But I'm not sure if we say use the new {{<uap:Capability Name=contacts/>}} tag for Windows 10, if that will break a build for Windows 8.1. We may need to be smarter to filter out bad values for certain versions.  Windows 10: https://msdn.microsoft.com/en-us/library/windows/apps/dn934783.aspx  Windows 8.1: https://msdn.microsoft.com/en-us/library/windows/apps/dn423259.aspx  Windows Phone 8.1?: https://msdn.microsoft.com/library/windows/apps/hh464936.aspx#domain_credentials",Improvement,High,Closed,"2016-01-13 20:45:24","2016-01-13 20:45:24",5
"The Titanium SDK ","Android: Titanium.Network.Cookie API is not Working.","We tried to setup  cookie on a web view using this method createCookie, addHTTPCookie and addSystemCookie. But it does not work it only reads the default cookies but not set the cookie. Please take a look my sample code.    *Steps to reproduce*  1. Just run this sample code then check the consol log.  {code:title=app.js}  var win = Ti.UI.createWindow({   layout : 'vertical'  });  var url = 'http://www.<USER>com/'; //Or any html file  var reload = Ti.UI.createButton({   title : 'reload',   height : 50,   width : 100,   top : 5,  });    reload.addEventListener('click', function() {   web.url = url;  });    win.add(reload);    var web = Ti.UI.createWebView({   url : url,   width : Ti.UI.FILL,   top : 100,   height : Ti.UI.FILL,    });    win.add(web);  var i = 1;    web.addEventListener('load', function(e) {     var d = new Date();   d.setTime(d.getTime() + (2 * 24 * 60 * 60 * 1000));      // You can try this(addHTTPCookie,  addSystemCookie) insted of createCookie     var cookie = Ti.Network.createCookie({    name : 'helloWorld',    domain : url,    value : testCoockie,    expiryDate : d,     });     Ti.API.info(createCookie ->  + JSON.stringify(cookie));     var cookies = web.evalJS(document.cookie).split(;);   Ti.API.info(# of cookies ->  + cookies.length);   for ( i = 0; i <= cookies.length - 1; i++) {    Ti.API.info(cookie ->  + cookies[i]);   }    });    win.open();      {code}    Thanks.    ",Bug,Critical,Closed,"2016-01-13 09:10:42","2016-01-13 09:10:42",5
"The Titanium SDK ","Set Xcode 7.0 as minimum requirement for titanium build","As part of the major release 6.0.0, we should set the minimum Xcode version from 6.4 to 7.2 and remove the {{IS_XCODE_6}} macros to cleanup the code base.",Story,Low,Closed,"2016-01-13 06:00:35","2016-01-13 06:00:35",1
"The Titanium SDK ","iOS 9.3: Support new WatchConnectivity features","iOS 9.3 introduces some new API's of the WatchConnectivity framework:    - WCSession.activationState  - \[WCSessionDelegate session:activationDidCompleteWithState:error:]  - \[WCSessionDelegate sessionDidBecomeInactive:]  - \[WCSessionDelegate sessionDidDeactivate:]  - WCSessionActivationState  - WCSessionActivationStateActivated  - WCSessionActivationStateInactive  - WCSessionActivationStateNotActivated    That will simply result in new events to be used to check the session state from the main application.","New Feature",High,Closed,"2016-01-12 10:48:42","2016-01-12 10:48:42",8
"The Titanium SDK ","Windows: Investigate crash dump analysis library","Investigate crash analysis library for Windows Store/Phone, equivalent for Crittercism, KSCrash and so on.    per TIMOB-20150    {quote}  To sum things up, the sdk team has decided to use these 2 libraries KSCrash and ACRA for iOS and Android respectively. The next step is to determine in detail the protocol for these libs with the crash-server endpoint. So PEM team please take a look at above comments and proposal, and we can determine how to move forward in replacing the crittercism client lib.    Things to note and consider:  1. do we need to achieve cross-platform parity in the data posted at client? or let the crash-server <USER>each platform's unique crash report and insert accordingly to the database?  2. additional information to append to the data, such as app guid or key.  3. windows platform will be considered at a later phase, with priority placed on iOS and Android.  4. Possibility to fork these 2 repos if in depth modifications are required.  {quote}  ",Story,Medium,Closed,"2016-01-12 07:58:33","2016-01-12 07:58:33",5
"The Titanium SDK ","Android: cannot list files on lib directory with Filesystem.getFiles - getDirectoryListing","Under lib directory I created a repositories dir, and under this dir I put some kind of commonjs modules I would like to load dinamically.  On iOS I do this and it works:     requirePath = repositories/;     repositoriesDir = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory + requirePath);     repositoriesFiles = repositoriesDir.getDirectoryListing();     // requires and other operations with those files    On Android apparently I cannot read files contained inside that directory.  I've found one guy with the same problem on your old forum, but now it's closed and there isn't an answer:  https://developer.<USER>com/question/179048/where-are-my-alloy-lib-files-in-the-filesystem-on-android",Bug,Critical,Closed,"2015-12-16 18:05:03","2015-12-16 18:05:03",5
"The Titanium SDK ","Windows: Error while createcollection on Windows Phone","I create a simple alloy app project but in my alloy.js if i put this line        when the app starts I see in the console this error    {code}  [ERROR] :  Application Error: {  [ERROR] :    line: 2,  [ERROR] :    column: 10,  [ERROR] :    message: Error while require(/app) Error while require(alloy/models/Category) unknown exception,  [ERROR] :    native_stack: [  [ERROR] :      JSExportClass<class Titanium::GlobalObject>::CallNamedFunction  [ERROR] :    ]  [ERROR] :  }  {code}    everything works if a run the app on Android and iOS, but it crash if i run it in Windows Phone Simulator.  This is my model category.js    {code:javascript}  exports.definition = {   config: {    columns: {              id: INTEGER PRIMARY KEY AUTOINCREMENT,              name: TEXT,              counter: INTEGER,              default_image: TEXT          },          defaults: {              name: TEXT,              counter: INTEGER,              default_image: TEXT          },    adapter: {     type: sql,      tablename: category,     collection_name: category,     db_file: /db.sqlite,     db_name: category,     idAttribute: id,     remoteBackup: false    }   },   extendModel: function(Model) {          _.extend(Model.prototype, {              // extended functions and properties go here          });             return Model;      },      extendCollection: function(Collection) {          _.extend(Collection.prototype, {              // extended functions and properties go here          });             return Collection;      }  };  {code}",Bug,High,Closed,"2016-01-11 12:18:28","2016-01-11 12:18:28",8
"The Titanium SDK ","Android: Remove deprecated properties and methods pre-5.0.0","We should probably just remove all deprecated methods and properties pre 5.0.0",Story,Low,Closed,"2016-01-12 03:56:44","2016-01-12 03:56:44",5
"The Titanium SDK ","iOS: Ti.App.iOS.continueactivity not being fired","h6.Issue Description  In a manner similar to Handoff (https://wiki.<USER>org/display/guides2/Handoff+User+Activities), using the Ti.App.iOS.UserActivity API to implement Universal Links in an app. This was to connect my website with the app. Basically this was to allow Safari users to open thea app via a link on the website.     In the app there is following event handler:       This would listen for the continueactivity event to be fired by iOS and capture the URL from the UserActivity in the function parameters. Then it would display relevant content based on the URL.     This all worked fine on SDK 5.0.2. But after switching to SDK 5.1.1 it seems as though the 'continueactivity' event is never being fired.    ",Bug,Critical,Closed,"2016-01-11 22:03:14","2016-01-11 22:03:14",5
"The Titanium SDK ","Android: HTTPClient not working with http redirected to https","If the request url is from http redirected to https, HTTPClient downloads garbage instead. On iOS it's working fine.    In the following example, http://audio.forerunner.cc/test.pdf is permanently redirected to https://audio.forerunner.cc/test.pdf    Examine the downloaded file and see it's just garbage. Replace the url with https://audio.forerunner.cc/test.pdf. It will then download the file correctly.    index.js        http.js  ",Bug,Critical,Closed,"2016-01-07 20:31:03","2016-01-07 20:31:03",5
"The Titanium SDK ","iOS: Ti.Geolocation.hasGeolocationPermission()  and Ti.Geolocation.getCurrentPosition() are not working on IOS 7","h6.Issue Description   Geolocation popup permission is not triggered by Ti.Geolocation.hasGeolocatinPermission()  Ti.Geolocation.hasGeolocatinPermission() does not work on iOS 7. It returns true before permission has been determined. Once it is determined it does not return the right value.  Ti.Geolocation.requestLocationPermissions() never calls the callback on iOS 7.    h6.TestCase  # Create a new Alloy default Application  # Open views/index.xml  # Replace the inside with the next code:    # Open controllers/index.js  # Replace the inside with the next code:    #open the tiapp.xml file and add the next lines inside ios/plist/dict    # Run    h6.Steps to Reproduce    # Press Check Location Permission button which calls Ti.Geolocation.hasLocationPermissions(). It should return true and you should see APP HAS PERMISSION output.   # Press Request Geolocation Permission which calls Ti.Geolocation.requestLocationPermissions() You should see REQUESTING PERMISSION in your output.  # Third button calls Ti.Geolocation.getCurrentPosition() to get users current position which is what triggers geolocation permission popup to show. If you grant permission in the popup then press Check Location Permission button again and you should see APP DOES NOT HAVE PERMISSION followed by REQUESTING PERMISSION. This also happens if you refuse permission. ",Bug,Critical,Closed,"2016-01-09 01:36:09","2016-01-09 01:36:09",3
"The Titanium SDK ","iOS: Contacts methods deprecated in iOS9 return vague descriptions","h5. Description:  This ticket is related to https://jira.<USER>org/browse/TIMOB-19002.    Upon investigating the listed Deprecated methods under {{Ti.Contacts}} , it was found that when running an app to an iOS9 device with deprecated methods, returned deprecated messages were vague in their description. Here are the following findings:    getGroupByID, getPersonByID: This method is removed for iOS9 and greater.  'saveImage' , 'created' , 'modified' person property: No deprecated messages returned in Xcode or Studio console logs.    *Attached to this ticket is the demo code to test these methods*  *Note: Additional issues were found regarding {{Ti.Contacts.revert()}} & {{Ti.Contacts.save()}} . Related tickets are included under linked issues.*    h5. Steps to reproduce:  1. Create a classic app and run demo code on iOS9 device.  2. Click Create Test Group 1, find Group by ID, Create Contact, Modified, Created.  3. Observe Xcode Console & Studio Console for each step.    h5. Result:  Vague deprecated messages that do not state the method in question, or no deprecated message at all.  h5. Expected Result:    Deprecated messages should provide the method name in question, and include missing deprecated messages for person properties.",Bug,None,Closed,"2016-01-09 00:38:46","2016-01-09 00:38:46",0
"The Titanium SDK ","Android: KS/Platform/XHR/cookies returns 404 ","This is not a regression.    h5.Steps To Reproduce:  1. In KS go to platform/xhr/cookies test.  2. Enter the details for the google account.  3. Click on Test Login Cookie.    h5.Actual Results:  1. We get a 404 Not found error.      This can be because client login is depricated & removed : https://developers.google.com/identity/protocols/AuthForInstalledApps    h5.Expected results:  1. We should get success & the details of the login cookie.  ",Bug,Medium,Closed,"2016-01-08 23:43:37","2016-01-08 23:43:37",1
"The Titanium SDK ","iOS: app crash when closing the active window while searchbar in listview is focused","h5. Steps to Reproduce  1. Create a titanium app  2. Replace {{app.js}} with the attached file  3. Run the app on iOS sim  4. Click  _Open New Win_ to open the window  5. Click _Click to Close_ to close the window, app does not crash  6. Do step 4, then click on the search bar  7. With the search bar focused, click _Click to Close_, the app crashes    h5. Actual Result  On iOS, the window is closed, follow by app crashes.    h5. Expected Result  The window should be closed without crashing the app.  ",Bug,Critical,Closed,"2016-01-08 01:25:00","2016-01-08 01:25:00",3
"The Titanium SDK ","Windows: Can't find windows device or emulators","h6.Issue Description    Studio and CLI can't find the windows phone device when the user is trying to build on windows device, Visual Studio is detecting and building on device so, this is not a hardware issue.    *Appc Info and logs attached",Bug,Critical,Closed,"2016-01-07 18:46:17","2016-01-07 18:46:17",5
"The Titanium SDK ","App Icon on Push Notification in Android 6.0  Marshmallow","I am not able to observe the App Icon image on Push Notification tray, when I run the app on Android Marshmallow device. On other Android device, I am able to see it. Can I please expect related updates on the relevant concern??",Bug,Critical,Closed,"2016-01-05 08:20:15","2016-01-05 08:20:15",8
"The Titanium SDK ","Hyperloop Android: Requested module not found error","Can’t to use hyperloop module.        I got error:        https://community.<USER>com/topic/4419/i-can-t-use-hyperloop-require-error",Bug,Critical,Closed,"2016-01-01 17:15:31","2016-01-01 17:15:31",5
"The Titanium SDK ","Android : TiCompositeLayout's viewSorter does not abide by Comparator's contract","I'm writing in from the Android team. The N release of Android is moving over to using OpenJdk as its implementation for java.* libraries. One of the issues that came up in our testing a crash that looks like this :     java.lang.IllegalStateException: Ambiguous Z-Order    at org.<USER>titanium.view.TiCompositeLayout$1.compare(TiCompositeLayout.java:164)    at org.<USER>titanium.view.TiCompositeLayout$1.compare(TiCompositeLayout.java:127)    at java.util.TreeMap.compare(TreeMap.java:1190)    at java.util.TreeMap.put(TreeMap.java:532)    at java.util.TreeSet.add(TreeSet.java:255)    at org.<USER>titanium.view.TiCompositeLayout.onLayout(TiCompositeLayout.java:491)    at android.view.View.layout(View.java:16945)    at android.view.ViewGroup.layout(ViewGroup.java:5516)    The issue here is their Comparator expects that its arguments are never equal (i.e, none of its code paths return 0). That seems pretty brittle and contrary to the documented contract.    It fails on OpenJdk because of this snippet of code in TreeMap#put :            TreeMapEntry<K,V> t = root;          if (t == null) {              compare(key, key); // type (and possibly null) check  <--- [BUG HERE] we're deliberately comparing a view with itself for the side effects : null & type check          .....    I will put in a workaround for the upcoming release, but It will be reverted in a future Android release.  ",Bug,Critical,Closed,"2016-01-05 17:56:04","2016-01-05 17:56:04",5
"The Titanium SDK ","Windows: Use of Thread Local Storage (TLS) for Windows 10","Currently JavaScriptCore uses [Thread Local Storage|https://msdn.microsoft.com/en-us/library/windows/desktop/ms686801%28v=vs.85%29.aspx] functions to handle threading. It has been supported even on Windows Phone as well as Windows Store app, but as of Windows 10 it is not supported and it won't pass the Windows App Certification.  ",Story,Critical,Closed,"2016-01-07 05:01:37","2016-01-07 05:01:37",13
"The Titanium SDK ","iOS: ListView - onload events of template items not fired","For iOS, {{onload}} event attached to any listview template items is not fired. It does fire for Android.    h5. Step to reproduce  1. Run attach app on iOS Simulator  2. Run attach app on on Android Emulator  3. Compare both results    h5. Expected Result  On 3rd row, images are animating for both OS    h5. Actual Result  On 3rd row, images are animating on Android, but not on iOS.    ",Bug,High,Closed,"2016-01-06 23:11:35","2016-01-06 23:11:35",5
"The Titanium SDK ","Android: Camera.open() can throw a RuntimeException.","Ti SDK 5.1 introduced permission checks on the camera module to prevent showCamera from being called when a user has denied permission but there are other possible scenarios besides permissions. The TiCameraActivity is missing a try catch block around Camera.open().    See Android documentation: http://developer.android.com/reference/android/hardware/Camera.html#open(int)  ",Story,Critical,Closed,"2016-01-06 16:20:18","2016-01-06 16:20:18",2
"The Titanium SDK ","Windows: Enable SAFESEH for Windows 10 x86 build","We have been disabling {{SAFESEH}} linker option just to supress compiler warning message for simulator according to [HAL/CMakeLists.txt#L195|https://github.com/<USER>HAL/blob/master/CMakeLists.txt#L195].     Since SAFESEH option is only available on x86 build, it has been a no problem before because it only affects on the simulator. But in the Windows 10 world, we could have x86 app for the Store App, and disabling SAFESEH won't pass the Windows App Certification for x86. We should enable it again even on x86 build.  ",Story,Medium,Closed,"2016-01-06 04:37:00","2016-01-06 04:37:00",5
"The Titanium SDK ","iOS: Views disappear from ScrollableView on change","This is a regression from pre 5.1.0.GA SDKs.  When changing the views in a ScrollableView the current view changes to a black screen. Interacting with the scrollable view will bring the view back, but it does not display until then.    *Steps to reproduce*  1. Create a new project with the below code  2. Run the project and scroll between views  3. Click the Hello button at the bottom of the screen    *Expected Results*  The view changes to the new view set in the scrollable view    *Actual Results*  The view is black and remains so until a scroll or partial scroll occurs    *Notes*  The scrollableView stays on the correct page, the view just does not display.  The test app in [TIMOB-20087|https://jira.<USER>org/browse/TIMOB-20087] encounters the same issue on iOS 9.2 devices/sims    *Code*  ",Bug,Medium,Closed,"2016-01-06 00:10:56","2016-01-06 00:10:56",8
"The Titanium SDK ","Windows: Detect and support Win 10 SDK and tooling without Windows 8.1 tooling requirement","We currently require that the Windows Phone 8.1 tooling is installed for us to be able to get the emulator listing. We should support Windows 10 universal apps without requiring the user to also install the Windows 8.1 tooling.    We'll need alternate ways to get the list of emulators for Windows 10, rather than using Windows Phone 8.1 AppDeployCmd.exe. I believe we can already do so using our own custom wptool.exe.",Improvement,Critical,Closed,"2016-01-05 21:44:03","2016-01-05 21:44:03",5
"The Titanium SDK ","Windows: Phone App crashes after Splash Screen","I am trying to run my Windows Phone app on my windows device Lumia 535 and Lumia 532  but as I run, it always gets crashed after splash screen and in console it gives error as :   Timed out after 60000 milliseconds waiting to launch the device. on both devices.    I am calling multiple API's on my app and same code is working fine with Android and IOS.    Please help.",Bug,Critical,Closed,"2016-01-05 08:28:48","2016-01-05 08:28:48",13
"The Titanium SDK ","Windows: The textAlign and verticalAlign property of the label is not working on windows phone","On windows phone the textAlign property of a label is always set to left no matter what I set it, the same for the verticalAlign always default to the top.    The only way I could make the label text center is to set both its width and height as Ti.UI.SIZE and the label should be centered to the parent view and hence the text. Only a workaround but it's not very convenient because sometimes I would like to change the backgroundColor of the label from the click event but now it only changes the background of size of the text rather than the whole parent view.    The bug exists on the latest Ti SDK 5.1.1 ",Bug,High,Closed,"2016-01-05 02:45:22","2016-01-05 02:45:22",5
"The Titanium SDK ","iOS: Ti.Contacts Cannot create a new entry with unsaved changes","h5. Description:  *This issue also affects 5.1.1.GA*    Created a test suite regarding Ti.Contacts for iOS, that creates a new group & a new person, and removes the created group. Multiple instances of the new group & person can be created in a single session, and {{removeGroup();}} can be used to remove those multiple group entries. However when trying to create a new group / person after calling {{removeGroup();}} the following error is received:      the issue will persist after backgrounding the app, but terminating the app and relaunching will allow for new created entries again until {{removeGroup();}} is called.     Below is a demo code of the issue in question:      h5. Steps to reproduce:  1. Create a new Classic project.  2. Include demo code in app.js.  3. Build to iOS9 device / sim.  4. Tap on Create Test Group 1  / Create Person 1 any number of times.  5. Tap on Remove Test Group 1 any number of times.  6. Repeat Step 4.    h5. Result:    Receive aforementioned error.  *Additional note:  Following console log is received when {{removeGroup();}} is called*       Another ticket is written regarding this issue: https://jira.<USER>org/browse/TIMOB-20194     h5. Expected Result:    New Group / Person should be created successfully after {{removeGroup();}} is called.",Bug,High,Closed,"2016-01-04 23:51:29","2016-01-04 23:51:29",1
"The Titanium SDK ","[Windows Phone 8.1] Certification reject - This API is not supported for this application type - Api=OutputDebugStringA. Module=api-ms-win-core-debug-l1-1-1.dll","Hi guys, I created an Windows Phone 8.1 app, it's ready to publish and it's working fine. The problem is, that when I try to release it on the Store, it cannot pass certification <USER> I talked to MS Tech support and they pointed me to test it through WACK(Windows App Certification Kit). WACK throws me this error message:  {color:#d04437}MESSAGE TEXT=This API is not supported for this application type - Api=OutputDebugStringA. Module=api-ms-win-core-debug-l1-1-1.dll. File=EDUCentrum.exe. />             < MESSAGE TEXT=This API is not supported for this application type - Api=OutputDebugStringA. Module=api-ms-win-core-debug-l1-1-1.dll. File=HAL.dll. />           < /MESSAGES> {color}  I found this thread on community.<USER>com with same problem(but no answer/solution):  [link https://community.<USER>com/topic/3691/windows-phone-store-app-reject/2|https://community.<USER>com/topic/3691/windows-phone-store-app-reject/2]    Can you guys please look at it and fix it? I really need to release this app...  Thank you",Bug,Critical,Closed,"2015-12-22 08:30:22","2015-12-22 08:30:22",5
"The Titanium SDK ","The e.source of a table click event is supposed to return the table row but instead it returns the table view","The e.source of a table click event is supposed to return the table row but instead it returns the table view",Bug,High,Closed,"2016-01-04 13:55:04","2016-01-04 13:55:04",5
"The Titanium SDK ","Titanium.Database.ResultSet.fieldName([index]) is not returning the correct value","On windows phone the database resultset.fieldName(index) returns 0,1 or NULL or field values instead of the field name from the search criteria.    To be noted that I set fieldName as aliasName in the query string.    for example: select name as full_name from contacts;",Bug,High,Closed,"2016-01-04 13:43:01","2016-01-04 13:43:01",5
"The Titanium SDK ","Android: Updated AttributeProxy to allow fontStyle to be set without having fontWeight to be manually set.","On Android, a user had to manually specify `fontWeight` and `fontStyle` when they wanted to add only a `fontStyle` to an `AttributedString`.    For example:    This would do nothing on Android                 A user would have to add a fontWeight for the text to be italic      ",Improvement,Low,Closed,"2016-01-04 14:35:21","2016-01-04 14:35:21",3
"The Titanium SDK ","iOS: Setting UI.SearchBar.value after tableview creation has no effect.","Setting Titanium.UI.SearchBar value after creating tableview (or listview) is not reflecting in search results.  Use the following code      Actual: All items are shown irrespective of setting search string.  Expected: Items should be filtered as per search string. ",Bug,Low,Closed,"2016-01-04 05:34:19","2016-01-04 05:34:19",3
"The Titanium SDK ","Windows: Window width & height for Store App","As of Windows 10, Windows Store App began to handle its independent Window and does not run under full-screen mode. Because Titanium API basically runs under mobile environment, we don't usually think about size of main Window. We want to handle Window size under Store App.        !window.png|thumbnail!",Improvement,Medium,Closed,"2016-01-04 02:26:22","2016-01-04 02:26:22",5
"The Titanium SDK ","Windows: Documention on custom capabilities","Since Windows Phone requires explicit permission to enable some API, we'll need to document about how to enable additional capabilities in *tiapp.xml*.    h5. i.e. how to enable user account information (TIMOB-20173)      h5 i.e. how to allow background audio (TIMOB-20035)    ",Story,Medium,Closed,"2016-01-04 00:26:51","2016-01-04 00:26:51",5
"The Titanium SDK ","iOS: Ti.App.getArguments failing after opening app from spotlight Search","*Description:*    When I set my app to index some content in order to use the new Spotlight Search feature, I got an error when I select an item in the search that should be open using my app, the error happens if I try to use Ti.App.getArguments() in some part of my app; code that I use for push notifications and deep linking features.    *The Error:*  This error happens if I try to access Ti.App.getArguments() from any point in the app:    {code:bash}  [ERROR] 2015-12-21 18:23:50.839 Civico[21446:1435686] -[NSUserActivity boundBridge:withKrollObject:]: unrecognized selector sent to instance 0x7fef2a700b50  [ERROR] Script Error {  [ERROR]     column = 54;  [ERROR]     line = 116;  [ERROR]     message = -[NSUserActivity boundBridge:withKrollObject:]: unrecognized selector sent to instance 0x7fef2a700b50;  [ERROR]     sourceURL = file:///Users/cristianv/Library/Developer/CoreSimulator/Devices/1F81EA0F-DAC5-46B0-A9FF-1BD44DD24486/data/Containers/Bundle/Application/2BE7BB9B-6438-4C07-A314-006A879D1CC4/Civico.app/app.js;  [ERROR]     stack = [native code]\nresumeEvent@file:///Users/cristianv/Library/Developer/CoreSimulator/Devices/1F81EA0F-DAC5-46B0-A9FF-1BD44DD24486/data/Containers/Bundle/Application/2BE7BB9B-6438-4C07-A314-006A879D1CC4/Civico.app/app.js:116:54;  [ERROR] }    ",Bug,High,Closed,"2015-12-29 03:52:08","2015-12-29 03:52:08",3
"The Titanium SDK ","iOS: HTTPClient multipart/form-data produces bad content-type headers for individual parts","<USER>Command-Line Interface, version 4.1.2  <USER>Studio, build: 4.1.1.201507141126  Mac OS X 10.10.4 IDE  iOS issue only. I'm using iOS SDK 8.4.  Xcode Version 6.4 (6E35b)  Android works differently and the web service calls sends out headers that our server understands.    Titanium SDK 4.1.0.GA HTTPClient breaks my calls to multipart/form-data web services on my server by adding a Content-Type to text parameters that it did not add in SDK 3.5.1.GA.    Here is the code that I use. Please note that you will need to create your own requestb.in to test this        *This is the requestb.in output from Titanium SDK 4.1.0.GA*:      *Here is the requestb.in output for Titanium SDK 3.5.1.GA*:      Is there a way to control the individual content-types on a multipart/form-data post? Specifically can I change the text parameters to have no Content-Type like it did in 3.5.1?  ",Bug,Critical,Closed,"2015-07-24 17:55:44","2015-07-24 17:55:44",5
"The Titanium SDK ","iOS: Remove deprecated properties and methods pre-5.0.0","We should probably just remove all deprecated methods and properties pre 5.0.0",Story,Low,Closed,"2015-12-29 04:35:01","2015-12-29 04:35:01",1
"The Titanium SDK ","iOS: Support Peek and Pop in Ti.UI.WebView","iOS 9 introduced an API to support Peek and Pop (3D-Touch) in WebViews like Safari does. It is disabled by default, but users should have the ability to enable it.","New Feature",Medium,Closed,"2015-12-27 17:44:28","2015-12-27 17:44:28",5
"The Titanium SDK ","Label inside Scrollview is not show after certain amount of characters","After 13k characters the label don't appear    {code:xml}  <Alloy>   <Window backgroundColor=white>    <ScrollView>     <Label id=label />    </ScrollView>   </Window>  </Alloy>  {code}    {code:javascript}  var labelLength = 1000;    setInterval(function() {    console.log(labelLength);    $.label.text = Array(labelLength).join(a);    labelLength += 1000;  }, 1000);    $.index.open();  {code}",Bug,Medium,Closed,"2015-12-23 00:09:11","2015-12-23 00:09:11",1
"The Titanium SDK ","iOS: Support UIVisualEffectView (aka Blur View)","We should support the {{UIVisualBlurEffectView}} aka Blur View introduced in iOS 8 as a public API (instead of unrecommended solution of stretching a toolbar).    Demo architecture:  ","New Feature",Medium,Closed,"2015-12-24 13:38:27","2015-12-24 13:38:27",13
"The Titanium SDK ","iOS: Move Ti.UI.iPhone.* namespaces to Ti.UI.iOS.*","For the release 6.0.0, we should clean up the {{Ti.UI.iPhone.\*}} namespace and move components, that are also available on the iPad, to {{Ti.UI.iOS.\*}} instead and deprecate the old ones:    *Modules*:  - Ti.UI.iPhone.ActivityIndicatorStyle  -- Already moved to Ti.UI.ActivityIndicatorStyle (TIMOB-19522)  - Ti.UI.iPhone.AlertDialogStyle  -- Move to Ti.UI.iOS.AlertDialogStyle  - Ti.UI.iPhone.AnimationStyle  -- Move to Ti.UI.iOS.AnimationStyle  - Ti.UI.iPhone.ListViewCellSelectionStyle  -- Move to Ti.UI.iOS.ListViewCellSelectionStyle  - Ti.UI.iPhone.ListViewScrollPosition  -- Move to Ti.UI.iOS.ListViewScrollPosition  - Ti.UI.iPhone.ListViewSeparatorStyle  -- Move to Ti.UI.iOS.ListViewSeparatorStyle  - Ti.UI.iPhone.ListViewStyle  -- Move to Ti.UI.iOS.ListViewStyle  - Ti.UI.iPhone.NavigationGroup  -- Remove API from docs in 6.0.0, removed since 3.2.0  - Ti.UI.iPhone.ProgressBarStyle  -- Move to Ti.UI.iOS.ProgressBarStyle  - Ti.UI.iPhone.RowAnimationStyle  -- Move to Ti.UI.iOS.RowAnimationStyle  - Ti.UI.iPhone.ScrollIndicatorStyle  -- Move to Ti.UI.iOS.ScrollIndicatorStyle  - Ti.UI.iPhone.StatusBar  -- Move to Ti.UI.iOS.StatusBar  - Ti.UI.iPhone.SystemButton  -- Move to Ti.UI.iOS.SystemButton  - Ti.UI.iPhone.SystemButtonStyle  -- Move to Ti.UI.iOS.SystemButtonStyle  - Ti.UI.iPhone.SystemIcon  -- Move to Ti.UI.iOS.SystemIcon  - Ti.UI.iPhone.TableViewCellSelectionStyle  -- Move to Ti.UI.iOS.TableViewCellSelectionStyle  - Ti.UI.iPhone.TableViewScrollPosition  -- Move to Ti.UI.iOS.TableViewScrollPosition  - Ti.UI.iPhone.TableViewSeparatorStyle  -- Move to Ti.UI.iOS.TableViewSeparatorStyle  - Ti.UI.iPhone.TableViewStyle  -- Move to Ti.UI.iOS.TableViewStyle    *Properties*:  - Ti.UI.iPhone.appBadge  -- Move to Ti.UI.iOS.appBadge  - Ti.UI.iPhone.appSupportsShakeToEdit  -- Move to Ti.UI.iOS.appSupportsShakeToEdit  - Ti.UI.iPhone.statusBarHidden  -- Remove in 6.0.0, deprecated since 3.1.3, replaced with fullscreen on window  - Ti.UI.iPhone.statusBarStyle  -- Remove in 6.0.0, deprecated since 3.1.3, replaced with statusBarStyle on window    *Constants*:  - Ti.UI.iPhone.MODAL_PRESENTATION_*  -- Move to Ti.UI.iOS.MODAL_PRESENTATION_*  - Ti.UI.iPhone.MODAL_TRANSITION_STYLE_*  -- Move to Ti.UI.iOS.MODAL_TRANSITION_STYLE_*",Improvement,Low,Closed,"2015-12-23 19:48:25","2015-12-23 19:48:25",5
"The Titanium SDK ","Windows: Ti.Platform.username on Windows 10","On Windows 10, {{Ti.Platform.username}} always returns empty string. FYI internally we are using {{Windows::System::User::FindAllAsync}} and {{User::GetPropertyAsync(KnownUserProperties::AccountName)}} to get the accound info on Windows 10.",Bug,Medium,Closed,"2015-12-23 00:15:38","2015-12-23 00:15:38",5
"The Titanium SDK ","Windows 10: Cannot package for the phonestore or winstore","*Details:* Cannot package for the Windows phone store or Windows store.    *Note:* This is *not* a regression with SDK 5.1.1.GA. But, bug seems critical.    *Steps to reproduce:*  # Make sure to follow steps from http://docs.<USER>com/platform/latest/#!/guide/Distributing_Windows_Applications to ensure you have everything setup to package for the Windows phone store or Windows store  # Create an Alloy project with {{appc new}}  # Package the app for phonestore or winstore while specifying the {{-O}} flag e.g.: {{appc run -p windows --target dist-phonestore  --output-dir C:\Users\qe\Desktop -l trace}}    *Actual:* The Alloy project will build without any issues, but the appx file will not be generated at the specified output directory; see logs.txt for trace logs and see Capture.png for the build folder.    *Expected:* appx file should be generated at the specified output directory.",Bug,None,Closed,"2015-12-22 20:23:21","2015-12-22 20:23:21",5
"The Titanium SDK ","Windows: Ti.Platform.version hard-coded for Windows 10","We currently have Ti.Platform.version hard-coded to be 10.0 on Windows 10. We should investigate how to get the full version string (doesn't the code that worked on Windows 8.1 work on Windows 10?)",Bug,Medium,Closed,"2015-12-22 17:37:00","2015-12-22 17:37:00",5
"The Titanium SDK ","Latest TI SDK on the master branch does not finish building","I added a native WatchKit Extension to my titanium app following the official guide for integrating native iOS extensions to titanium. With previous SDK versions, the build completes but the apple watch app gets stuck on `Installing...`. I found a resolved ticket for that issue [https://jira.<USER>org/browse/TIMOB-19227] which recommends I update to the latest CLIs and SDKs.    Having updated everything, I tried to build to install to device and for adhoc distribution but both times the build <USER>is cut short. No errors are shown.    These are the commands I used:    Both times the <USER>stops around here:  ",Bug,Critical,Closed,"2015-09-02 03:34:48","2015-09-02 03:34:48",1
"The Titanium SDK ","Windows: Platform.version on Windows 10","{{Ti.UI.Platform.version}} does not return valid OS version on Windows 10. It seems it's returning driver version or something now (on Surface Pro 3), so in the [PR 512|https://github.com/<USER>titanium_mobile_windows/pull/512] I've implemented it as returning fixed number {{10.0}} for a workaround.",Bug,Medium,Closed,"2015-12-22 07:52:07","2015-12-22 07:52:07",5
"The Titanium SDK ","Windows: Window.fullscreen on Windows 10 doesn't work","{{Ti.UI.Window.fullscreen}} property is not implemented on Windows 10.    ",Bug,Medium,Closed,"2015-12-22 07:41:08","2015-12-22 07:41:08",5
"The Titanium SDK ","Windows: Investigate UI for Tab/Group in Windows 10","On Windows 8.1 Phone we use a Pivot: https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.pivot.aspx  On Windows 8.1 Store(desktop) we use a ListView. Just by how the macros fall, we use the same in Windows 10 Desktop and Mobile now.    In the source we note we may want to use a SplitView on Windows 10: http://igrali.com/2015/04/12/getting-started-with-splitview-control-in-universal-apps/ and https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.splitview.aspx    I think we have the choice of all three on Windows 10, so we may want to see which is the best fit.",Story,High,Closed,"2015-12-21 21:01:10","2015-12-21 21:01:10",8
"The Titanium SDK ","Windows: Add Contact group functionality for Windows 10","Our current implementation is turned of' for WindowsStore/Phone 8.1 because the API doesn't exist. The API does exist in Windows 10, but since I wrote most of the code before we started out real efforts, I did not finish it fully. We need to fully hook it up (particularly, we don't actually generate a ContactList on the Windows side when we do a Ti.Contacts.createGroup(), so any operations on the js group returned won't work.","New Feature",High,Closed,"2015-12-21 20:44:06","2015-12-21 20:44:06",8
"The Titanium SDK ","Windows: Webview not cleaned up when parent window closed","When running the webview unit tests locally, specifically the test that loads <USER>com, I am seeing some troubling output. Even after the test finishes and passes, the output is spamming with:      I'm going to guess we don't clean up the webview properly. Doesn't get triggered by the local html file, but from loading <USER>com. My best guess is some JS is running on a setTimeout or something like that and keeps trying to trigger on a partially GC'd webview.    I tried calling stopLoading() and removing the listeners on the destructor, but that didn't seem to help any. In fact, I placed a breakpoint in the destructor and it was never called! I think we may have some issues where when a window is closed we don't clean up after it properly.    When I switched to script only debugging, I saw the following (though not sure we'll change our homepage to fix these):  ",Bug,Critical,Closed,"2015-12-21 20:11:07","2015-12-21 20:11:07",8
"The Titanium SDK ","Windows: Have PR builder run against Windows 10 and 8.1 with unit tests","Right now we have a single PR builder for Windows SDK and it runs the 8.1 build and unit tests. We should have it build for both Windows 8.1 and 10 and run those unit tests.    Some possible solutions:  - Generate a second PR builder copy of the first that runs 10 and unit test  - Make the existing PR builder more like our master build where it farms out to special 8.1 and 10.0 build jobs as a steps. Not sure if these jobs would get the code from the PR branches/refs on fetch without some changes, though.",Story,High,Closed,"2015-12-21 16:16:15","2015-12-21 16:16:15",5
"The Titanium SDK ","Windows: Update generate_project.js script to handle Windows 10 appxmanifest","Our generate_project.js script for generating VS solutions from our Examples assumes usage if Windows 8.1 We have arguments to target Windows 10/MSBuild 14.0, but it doesn't create a proper appxmanifest for Windows 10 - it assumes the Windows 8.1 version. We should probably just have it make use of the appxmanifests we have in the templates directory and populate them with some hard-coded app id/publisher/etc from each example.",Story,Medium,Closed,"2015-12-21 14:36:49","2015-12-21 14:36:49",3
"The Titanium SDK ","iOS: Support for `selected` event on TabGroup when tab already selected","Sometimes you may need to capture the `selected` event on a TabGroup too when the tab is already selected.    For example, in the Facebook iOS app, if you click on the Newsfeed button, and the Newsfeed tab is already selected, the ScrollView scrolls to top.    https://github.com/<USER>titanium_mobile/pull/7512",Improvement,High,Closed,"2015-11-30 10:53:46","2015-11-30 10:53:46",3
"The Titanium SDK ","Windows: Ti.Codec.encodeNumber hangs on Windows 10","On Windows 10, {{Ti.Codec.encodeNumber}} hangs.    ",Bug,Critical,Closed,"2015-12-19 01:05:46","2015-12-19 01:05:46",8
"The Titanium SDK ","iOS: Contacts.getPeopleWithName not returning multi-value fields correctly","h5. Description:  Whilst working on an automated test for {{Ti.Contacts.Person}} properties, an issue was found when attempting to retrieve the properties using {{Ti.Contacts.getPeopleWithName}}. fields with single string values were returned as intended, however fields with arrays such as {{email}} do not return the correct value (i.e. {{[object Object]}} or an error with be thrown using the following code: {{Ti.API.info(person:  + person.email.home[0]);}} )     However, a workaround to this issue is to use the method {{Ti.Contacts.getPersonByIdentifier}} , which correctly returns fields with array values.     Confirmed that this is *not* a regression.    h5. Steps to reproduce:   1. Create a new Classic project.  2. use demo code:     3. Build to device.  4. launch app and click New Nathan followed by Compare Nathan  5. In the console, Ncook should return the appropriate email value, person will not.    h5. Result:  calling fields with array values using {{Ti.Contacts.GetPeopleWithName}} will not return the appropriate values.    h5. Expected Result:  calling fields with array values using {{Ti.Contacts.GetPeopleWithName}} will return the appropriate values.  ",Bug,Medium,Closed,"2015-12-17 01:33:18","2015-12-17 01:33:18",5
"The Titanium SDK ","iOS: Autolayout lays out wrongly when view is added to window","h4. Steps to reproduce  1. Create a new titanium classic app  2. add <use-autolayout>true</use-autolayout> to tiapp.xml  3. Change app.js to this:      h4. Expected result  you should see the labels 20pixels away from to top edge.    h4. Actual result  you will see the labels right at the top edge.",Bug,High,Reopened,"2015-12-15 03:48:37","2015-12-15 03:48:37",5
"The Titanium SDK ","Windows: Use default temporary pfx from make when no pfx found in project and deploying to emulator or device","The bundled make in Windows SDK has a set of default assets it packages apps with. One of those is a temporary PFX key. However, they only auto-insert it if the app has no apps manifest, but we generate that. So we need to add logic that for not distribution targets that require PFX/cert we should just use the temporary key transparently much as Visual Studio does.    So for ws-local on 8.1 and for wp-emulator, ws-local, wp-device on 10.0 when no PFX is found, use this key and don't prompt.",Improvement,High,Closed,"2015-12-14 21:39:17","2015-12-14 21:39:17",5
"The Titanium SDK ","Windows: Titanium.UI.WebView don't load local html page","I cannot load local html page (located in Resources directory)    This code works on Android and iOS but on Windows 8.1 give Unknow error    var htmlPage =  /help.html;  $.webview.url = htmlPage;           This workaround code on Windows 8.1 don't give any error but don't load the page (blank screen)    var htmlPage =  Ti.Filesystem.resourcesDirectory + Ti.Filesystem.separator + help.html;  $.webview.url = htmlPage;  ",Bug,Critical,Closed,"2015-12-09 12:16:34","2015-12-09 12:16:34",5
"The Titanium SDK ","TI.NFC is not supported any more and always crash","Many people are shouting because they have to close their appc projects and re-do it using native platforms, as not support for Ti.NFC anymore despite the <USER>documentation is full of objects supporting it.    Now all project using i.NFC is crashing and stopping at splash screen ( despite getting tag information ). Lot of people are asking about it in different community and no one from Appcerlerator responsible are replying, so please fix it or announce that its support are removed totally.",Bug,Critical,Closed,"2015-09-16 11:40:58","2015-09-16 11:40:58",3
"The Titanium SDK ","Streaming Audio not working on Android Marshmallow","I'm having an issue with audio streaming on any Android device running the newest Android version (Marshmallow).    I'm using the following code to play the audio stream (works on iOS, and android prior to Marshmallow);    *Test case*      *Expected Result*  Stream starts playing    *Actual Result*  Stream doesn't start playing, instead i'm getting an error saying “unknown media error”.    ---    Like I said, this was working on both iOS and Android (prior to Marshmallow).    Does anyone know a workaround or a fix for this?  Any help is appreciated!",Bug,Critical,Closed,"2015-10-26 16:15:59","2015-10-26 16:15:59",5
"The Titanium SDK ","iOS Peek & Pop: Events do not include itemIndex, sectionIdex, itemId for TableView","When attempting to use Peek and Pop with a Tableview previewContext property, no index properties are provided when a row is clicked, making it impossible to display row-specific information / content.    Code missing TableView implementation:  https://github.com/<USER>titanium_mobile/blob/a8b6440f99f7d1eb945ba92a1fe3e6602fbcc1ec/iphone/Classes/TiPreviewingDelegate.m#L112-L160",Bug,Critical,Closed,"2015-12-14 12:56:51","2015-12-14 12:56:51",5
"The Titanium SDK ","Consecutive calls to ScrollableView.setViews causes the app to become unresponsive","Following a typical cycle of having a default view inside a scrollable view and then updating it calling setViews() fails and causes the app to become unresponsive. Tested on iOS > 8.4    Same effect if you try with a very short delay between the two calls.  Code below works fine in 5.0.2.GA but not in 5.1.0/5.1.1    ",Bug,Critical,Closed,"2015-12-04 12:18:10","2015-12-04 12:18:10",8
"The Titanium SDK ","iOS: app.js is executed more than once","please read attachment js file, it's simple.    on ios simulator, after double click home button, kill the app and reluanch it, log [INFO] Application started may appear more than once, when ios tool menu is toggle from top or bottom of the screen.  As I observed, the app.js is called more than once, and user can't feel this change in js code, as the js context seems a brand new one.    I only tested this on iphone6plus simulator, but not device or env.    thank you.",Bug,Medium,Closed,"2015-11-17 04:04:53","2015-11-17 04:04:53",1
"The Titanium SDK ","Android: PasswordMask not working on editable textfield","Using this code:    The textfield password don't mask the content if field is not editable. If property editable is set to true, the value is masked. Works fine on iOS devices.",Bug,High,Closed,"2015-12-10 08:30:42","2015-12-10 08:30:42",3
"The Titanium SDK ","iOS: Ti.UI.iOS.ApplicationShortcuts does not work on device with LiveView enabled","Running the following code on device fails if liveview is enabled. The result is:    {code:js}TypeError: undefined is not a function (evaluating 'Ti.UI.iOS.createApplicationShortcuts()')",Bug,High,Closed,"2015-12-11 12:35:21","2015-12-11 12:35:21",3
"The Titanium SDK ","SDK no longer finds Genymotion after upgrade to 2.6.0","Genymotion 2.6.0 changes the location of the player internally in the App Package. See the two screenshots for the before and after. We'll need to update the following code to handle both:    https://github.com/<USER>titanium_mobile/blob/master/node_modules/titanium-sdk/lib/emulators/genymotion.js    Thanks to [~<USER>tamas]  https://twitter.com/<USER>tamas/status/675027457314054144",Bug,High,Closed,"2015-12-11 11:17:25","2015-12-11 11:17:25",5
"The Titanium SDK ","Android: Not able to see the multiline notification on the android device","I am not able to see the push notification in the multiline format on the android device. I have used the same payload structure that is defined in the documentation [http://docs.<USER>com/platform/latest/#!/guide/Subscribing_to_push_notifications-section-37551717_Subscribingtopushnotifications-Parsinganotificationpayload]     {      android: {          title: myApp,          alert: Here, I want to send the multiline push notification messages to the user for the \n details reports.,          icon: little_star,          badge: 3,          sound: door_bell,          vibrate: true,      },  }","New Feature",Medium,Closed,"2015-11-30 07:24:21","2015-11-30 07:24:21",5
"The Titanium SDK ","iOS9: Contacts property fullName does not return appropriate values","h5. Description: Created a test contact with values given to all properties, when logging {{fullName}} to the console, it does not display the associated variables in the correct order, and {{middleName}} is replaced by {{organisation}}:    *Note: This issue only occurs for iOS9, and fullName property returns the correct variables when built to an iOS8 device/ sim.*      h5. Steps to reproduce:  1. Create a classic project.  2. Include following demo code:     3. Build to iOS9 simulator or device.  4. Open app and click Create Contact  5. Click Select Contact and review log for lastName property.  6. repeating steps 1-5 and building for iOS8 will not reproduce the issue.    h5. Result:  {{prefix , suffix , organisation, firstName, lastName}}  h5. Expected Result:  {{prefix, firstName, middleName, lastName, suffix}}",Bug,Low,Closed,"2015-12-08 21:03:25","2015-12-08 21:03:25",3
"The Titanium SDK ","Android - ScrollableView removeView(): java.lang.IndexOutOfBoundsException: Invalid index X, size is X","This is happening only in the android platform. Seems like when you call the ScrollableView.removeView() method it automatically jumps to the previous view if you're currently viewing the one you're trying to delete. However, that fires an exception.  How to reproduce:    * Create an Android-enabled project with a single, main view.  * Add to that view a ScrollableView and a Button below it.  * Add 3 empty views to the ScrollableView.  * Add an event to the button which fires the following code:      * Click the button with the view number 1 focused: it will work.  * Reopen the app (so the views get added again), browse to the 3rd view and click the button.  It will throw this exception:        How i've solved it:  Before removing the ScrollableView views, i've used this method:        ",Bug,Medium,Closed,"2015-10-06 19:23:15","2015-10-06 19:23:15",5
"The Titanium SDK ","Windows: Can't display local url on windows phone","Can't display local url on Windows phone in a webview  Checked local url path  Works fine with the same html page as remote url  message Runtime error : unknow exception  ",Bug,Critical,Closed,"2015-10-22 12:02:38","2015-10-22 12:02:38",5
"The Titanium SDK ","Android: Rounded view is not being shown if its size more than screen size",,Bug,Critical,Closed,"2015-11-22 08:32:48","2015-11-22 08:32:48",2
"The Titanium SDK ","iOS: Fullscreen Video Pushing the NavBar upwards to the size of the status bar and remains there after exit Fullscreen","the problem is when the user switch to fullscreen video and then coming back the NavBar of the NavigationWindow is pushed upwards to the size of the status bar and remains there.    The only solution for me that worked is to close and reopen the MainNavigationWindow. and this couldn't be the final solution.    more hint's from me: z-index of the Video View is higher than the others. fullscreen vor the app and hiding the NavBar and StatusBar is disabled in the tiapp.xml. fullscreen for the MainNavigationWindow and it's Main Window is disabled in the .tss Files.    It looks like this will be all ignored. The Fullscreen Signal from the VideoPlayer is fired and pushes the navbar to the size of the status bar upward. After the fullscreen exit remains the navbar at the position. And under the navbar remains a black gap in the size of the StatusBar.      To Reproduce the error I've created a basic Project with the standard template and copy only necessary code into it.    here is also the related Stackoverflow link where <USER>mentioned to create a Ticket:  >>[http://stackoverflow.com/questions/33390914/fullscreen-video-pushing-the-navbar-upwards-to-the-size-of-the-status-bar-and-re]<<    It looks like this is not only on FullscreenVideo...",Bug,Critical,Closed,"2015-11-02 15:58:03","2015-11-02 15:58:03",8
"The Titanium SDK ","Android: trayClickFocusedApp event not fired when push notification clicked in tray","When a view is opened and app is placed into background, tapping on a push notification does not fire the trayClickFocusedApp event. This works fine if I don't open a window in the app. However, if even a single window is opened, trayClickFocusedApp stops working (I'm guessing this is due to the fact that there are more than a single activity if windows are opened). In the attached test code, simply comment out the following line and trayClickFocusedApp to start working again:        Steps to reproduce  # Create a cloud enabled app  #Paste the following into app.js        # Set your login/password to a valid user (lines 6 & 7)  # Launch the app on a device. The app should launch, fire off a push notification then go into the background by launching the browser.  # Tap the notification to return to the app.    Expected Results  The trayClickFocusedApp event listener should run and display a message.    Actual Results  The trayClickFocusedApp event listener does not run.",Bug,High,Closed,"2015-11-30 16:00:38","2015-11-30 16:00:38",5
"The Titanium SDK ","Windows: Ti.UI.Textfield passwordMask=true doesn't work","When set passwordMask=true in a TextField this field (when i run the app in the emulator or in the windows phone) don't mask the characters that contain.",Bug,Critical,Closed,"2015-12-07 10:27:20","2015-12-07 10:27:20",3
"The Titanium SDK ","Android 6.0 - 5.1.1.GA - Location permissions missing","When you try to use Geolocation to discover position (getCurrentPosition), returns error on Android Log: (KrollRuntimeThread) Location permissions missing. The callback is not fired.    SDK : 5.1.1.GA  Android 6.0    SDK 5.0.2.GA works fine",Bug,Critical,Closed,"2015-12-03 21:32:31","2015-12-03 21:32:31",5
"The Titanium SDK ","Android: CardView backgroundImage & borderColor properties don't work","h5.Steps To Reproduce:  1. I followed the docs here : http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.View-property-backgroundImage  http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.View-property-borderColor  2. Use the code below:    2. Check the bordercolor & backgroundimage of the cardview.    h5.Actual Results:  1. We do not see the bordercolor & backgroundimage.    h5.Expected Result:  1. We should see the bordercolor & the backgroundimage for the cardview.",Bug,Low,Closed,"2015-12-04 20:08:18","2015-12-04 20:08:18",1
"The Titanium SDK ","Windows: Update bundled cmake to 3.4.1","We're using an older cmake. We should grab 3.4.1 for some WIndows 10 related fixes/improvements.",Improvement,High,Closed,"2015-12-03 15:11:33","2015-12-03 15:11:33",3
"The Titanium SDK ","Windows: Windows 10 Mobile requires pfx","When trying to deploy a Win 10 mobile app, they now require certs/keys like Windows Store apps do. We need to detect when there's no pfx and generate one like we do for store (or cheat and copy the temporary one from cmake's Templates/Windows folder for them to use).    We should probably just use the temporary key for dev, and have them generate an actual pfx for publishing/deploying.",Bug,High,Closed,"2015-12-03 15:10:24","2015-12-03 15:10:24",5
"The Titanium SDK ","Windows: Support deploying to Win 10 devices using WinAppDeployCmd","There's a new command line deployment tool for Windows 10, WinAppDeployCmd. It doesn't list the emulators at all, and does an async search on the network for devices. We can use it to list, update, install and uninstall apps on devices (connected via USB or on the same subnet), but it uses different args/switches than the legacy AppDeployCmd/XapDeployTool.    It also may require inputting a pin from the device to connect and do it's work.",Improvement,High,Closed,"2015-12-03 14:23:08","2015-12-03 14:23:08",8
"The Titanium SDK ","Windows: Cannot deploy app to Win 10 Mobile emulator","With recent changes, we can get the listing of Win 10 emulators and can attempt to deploy using the old AppDeployCmd, but that fails complaining about bad XML. Attempts to manually open the solution in VS215U1 also failed to manually deploy (complains it can't copy the TitaniumWindows.winmd file from the SDK).    I also attempted to see if there were other workarounds for deploying. It _looks_ like the new WinAppDeployCmd could install an app on the emulator if we knew the IP address the emulator is using (in the range 169.254.x.x). I tested this manually after the emulator was launched and that appeared to work (well, it didn't fail but the app didn't load properly, maybe the same issue as from VS2015?).    The wrinkle is that I see no way to determine what IP the emulator is using. There are powershell scripts out there (i.e. http://www.ravichaganti.com/blog/get-hyper-v-windows-server-2012-guest-network-configuration-using-wmi/) that say you can, but I always get empty list of IP addresses.",Bug,Critical,Closed,"2015-12-03 14:20:44","2015-12-03 14:20:44",13
"The Titanium SDK ","iOS: Need ability to generate static image of map for the specified coordinates","In the Map module, there should be a method to return a static image of the map for the specified coordinates. Google Maps API has the capability ([Static API|https://developers.google.com/maps/documentation/staticmaps/intro]) and it seems the Apple Mapkit might also have the feature now. This request is fairly urgent and would be easier to implement, I hope.  Just want to point out that the toImage() method isn't good enough. I'm trying to use it, and although it works fine for a previously loaded map, it doesn't work at all if I only have the coordinates in the code and want to get the image in the background without having to load the map view itself (which takes time).","New Feature",Medium,Closed,"2015-08-25 06:05:46","2015-08-25 06:05:46",5
"The Titanium SDK ","iPad SplitWindow not displaying as before","This is my layout from some days ago:  !https://dl.dropboxusercontent.com/u/507021/IMG_0024.jpg!  And after the last updates I have the layout all messed up like this:  !https://dl.dropboxusercontent.com/u/507021/Captura%20de%20ecr%C3%A3%202015-11-30%2C%20%C3%A0s%2009.45.32.png!    I don't remember changing any source code that could cause this behavior, anyone else having problems with SplitView ?  Master view seems smaller with objects on top of each other and got no right black vertical border.",Bug,Medium,Closed,"2015-11-30 09:53:59","2015-11-30 09:53:59",0
"The Titanium SDK ","Android: Cardview doc requires changes","API in docs mention 5.2.0. Instead, since it is being released in 5.1.2, the docs need to reflect 5.1.2 instead for Cardview (Android).",Bug,Medium,Closed,"2015-12-03 02:14:33","2015-12-03 02:14:33",1
"The Titanium SDK ","Android: setting a view layout to null crashes the app","When setting a view's layout to null, the app completely crashes:        Steps to reproduce:     * create a new Alloy application   * app/controllers/index.js :      * app/views/index.xml :      * app/styles/index.tss :      * compile and run the app, it crashes at startup on android    Reason: The [TiView class constructor|https://github.com/<USER>titanium_mobile/blob/bc85170157d3bebc5de1d61a9fe6e34bce84a8c9/android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiView.java#L23] does not correctly check that the layout property is not null, and it crashes on line 25 when calling {{equals()}}.    Expected behavior: The app should not crash and the view should have the default layout ({{LayoutArrangement.DEFAULT}})",Bug,Critical,Closed,"2015-12-02 11:36:19","2015-12-02 11:36:19",2
"The Titanium SDK ","5.1.X breaks ability to bind one collection to different views / reset collection","The sample project here    https://www.dropbox.com/s/q9lmvrx6nloyua5/wordtin.zip?dl=0    exhibits odd behaviour when trying to bind a manually created backbone collection to two different views. If you run the code in 5.0.x.GA you can see words displayed on the screen which you can scroll through. Clicking the settings button reveals the same words (same collection) in a table -- clicking the top right button will reset the words and change the collection.    Run the project in 5.0.X and it works fine    Run the project in 5.1.X and it crashes / hangs when attempting to render the second list (clicking settings) and also crashes trying to reset a collections contents.    Run the project in 5.1.X with execute in main thread set to TRUE and it works as expected.",Bug,Critical,Closed,"2015-12-02 15:08:09","2015-12-02 15:08:09",8
"The Titanium SDK ","Windows: setup.js script doesn't set environment variables permanently on Windows 10","We have a setup.js script we use to help get SDK developers (and the build machine) configured for doing development and builds. When run on Windows 10, It says it's setting the JavaScriptCore_HOME, GTEST_ROOT, and BOOST_ROOT - but if I close and open a new cmd shell, those values aren't set.",Story,Medium,Closed,"2015-12-02 14:05:36","2015-12-02 14:05:36",5
"The Titanium SDK ","Windows: ti clean should cleanup VS temporary build directory","I see that {{appc ti clean}} and {{ti clean}} command clean up {{build}} directory under your project, but it should have cleaned up VS project temporary build directory ({{C:\Users\USERNAME\.titanium\vsbuild\YOUR_PROJECT_NAME}} too.    ",Improvement,High,Closed,"2015-12-02 12:45:36","2015-12-02 12:45:36",5
"The Titanium SDK ","Provide authorizationStatus property on requestPermissions callbacks","Provide authorizationStatus property on requestPermissions callback when requesting permissions for device features. This should map to AUTHORIZATION_* properties defined in camera, geolocation, contacts and calendar modules. iOS and Android should be in parity.",Improvement,Low,Closed,"2015-12-02 08:33:14","2015-12-02 08:33:14",5
"The Titanium SDK ","Remove watchos1 template and related code","After TIMOB-19455 adds a {{watchos2-swift}} template and defaults to it we should remove the {{watchos1}} template and the related code in the build script.    *cli/lib/creators/applewatch.js*    * Remove the check for watchos1: https://github.com/FokkeZB/titanium_mobile/blob/TIMOB-19455/cli/lib/creators/applewatch.js#L220-L223    *iphone/cli/commands/_build.js*    * An check should be added to fail if if the extension is V1.  * All usage of {{hasWatchAppV1}}, {{hasWatchAppV2orNewer}}, {{isWatchAppV1Extension}}, {{isWatchAppV1}}, {{isWatchAppV2orNewer}} should be changed to assume V2 or newer.    *templates/applewatch/watchos1/template*    * Should be removed",Improvement,Medium,Closed,"2015-12-02 07:57:22","2015-12-02 07:57:22",5
"The Titanium SDK ","Android: Virtual box app is launched along with genymotion emulator","This is not a regression from 5.1.0.GA but not sure when it broke.    h5.Steps To Reproduce:  1. Create a classic/alloy app i appc studio.  2. Build it to genymotion emulator.  3. Observe when genymotion emulator launches.    h5.Actual Results:  1. You will see that along with the genymotion emulator the virtual box app also gets launches automatically.  *NOTE: I am not sure if this is an issue or something changed in genymotion which is causing this issue.*    h5. Expected Results:  1. Only genymotion emulator should be launched.",Bug,None,Closed,"2015-12-02 01:09:34","2015-12-02 01:09:34",1
"The Titanium SDK ","Windows: Ti.Media.AudioPlayer background audio for Windows 10"," Per thread from [PR 488|https://github.com/<USER>titanium_mobile_windows/pull/488]    {quote}  The feature (AudioCategory::BackgroundCapableMedia) is supported in Windows 10, but is deprecated and there's a document on using background audio (I think using background tasks). I don't think we want to just remove the line in Win10+. We probably want to disable the deprecation warning on Windows 10 for this specific instance until/unless we use the new API/flow for doing the background audio.    I'd suggest we turn off the compiler warning for this file (or stifle it in some way) on Win 10 compiles, and open a ticket for replacing the mechanism to use the new API in the future. See https://msdn.microsoft.com/en-us/library/windows/apps/mt282140.aspx and https://social.msdn.microsoft.com/Forums/windowsapps/en-US/46432468-b968-4570-a0ce-48babe838f2d/uwpbackground-audio-with-mft-in-windows-10  {quote}  ",Improvement,Medium,Resolved,"2015-12-01 05:47:04","2015-12-01 05:47:04",13
"The Titanium SDK ","ti.ui.ipad.popover: Can't change popover's background color","As described here: https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.iPad.Popover    Ti.UI.iPad.Popover doesn't have backgroundColor property.     Current iOS native implementation for the iPad popover allows the change of background color as described in this documentation: https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIPopoverPresentationController_class/#//apple_ref/occ/instp/UIPopoverPresentationController/backgroundColor","New Feature",High,Closed,"2015-11-30 11:33:04","2015-11-30 11:33:04",3
"The Titanium SDK ","Windows: Ti.UI.TextArea selected event doesn't work","Ti.UI.TextArea {{selected}} event doesn't work.",Bug,Medium,Closed,"2015-11-30 14:17:21","2015-11-30 14:17:21",5
"The Titanium SDK ","Android Elevation disappear when set border*","Android Elevation disappear when set border*    see result screen shot and code below:      Test code  ",Bug,High,Closed,"2015-11-30 08:02:34","2015-11-30 08:02:34",5
"The Titanium SDK ","iOS: Ti.Media.saveToPhotoGallery does not call back for unsupported mime types","If you pass a File or Blob of unsupported extension/mimeType to {{Ti.Media.saveToPhotoGallery()}} neither of the [two callbacks|http://docs.<USER>com/platform/latest/#!/api/Titanium.Media-method-saveToPhotoGallery] is called and no error is logged.    This is because [the code|https://github.com/<USER>titanium_mobile/blob/55f45d09fd30d63e7218954658a35e86335bf29d/iphone/Classes/MediaModule.m#L776-L838] only calls the error callback when it is passed no File or Blob and not when the File or Blob is of unsupported extension/format.    *Steps*    1. Create a default project (that has {{KS_nav_ui.png}} in {{Resources}}).  2. Run with the sample code and confirm it works.  3. Switch the two {{var file}} lines.  4. Run again and confirm neither {{success}} nor {{error}} is called back and no error is showing in logs either.    ",Bug,Critical,Closed,"2015-11-28 06:45:46","2015-11-28 06:45:46",3
"The Titanium SDK ","Ti.barcode stopped to work in IOS8 after adding 64 bit support","Hello,  Ti.barcode stopped to work in IOS8 after adding 64 bit support in our App.  Can you please see if we are missing something in integration?  Thank you.",Story,Medium,Closed,"2015-09-02 14:37:50","2015-09-02 14:37:50",3
"The Titanium SDK ","HTTPClient: nested JSON object corrupts payload","the changes in   https://jira.<USER>org/browse/TIMOB-18902 (fix for SDK 4.1.1.GA)  corrupts the data. The example below displays how the nested object 'syncParameters' corrupts the data sent to the server.        server logs the following data:    {code:json}  {    args: {},    data: {\zoo\:\lander\,\sequel\:2},    files: {},    form: {},    headers: {      Accept: */*,      Accept-Encoding: gzip, deflate,      Accept-Language: en-us,      Content-Length: 27,      Content-Type: application/json;charset=utf-8,      Host: httpbin.org,      User-Agent: <USER>Titanium/4.1.1 (iPhone Simulator/8.4; iPhone OS; en_US;),      X-Requested-With: XMLHttpRequest,      X-Titanium-Id: bb09dc9f-daba-443a-b382-XXXXXXXX    },    json: {      sequel: 2,      zoo: lander    },    origin: XXXXXX,    url: http://httpbin.org/post  }      ",Bug,Critical,Resolved,"2015-09-11 08:56:06","2015-09-11 08:56:06",1
"The Titanium SDK ","Android: Add support for style  in Titanium.Android.Notification","Currently [Titanium.Android.Notification|http://docs.<USER>com/titanium/latest/#!/api/Titanium.Android.Notification] has not support for Big View Styles.    Add support for [BigTextStyle|http://developer.android.com/intl/ru/reference/android/app/Notification.BigTextStyle.html], [BigPictureStyle|http://developer.android.com/intl/ru/reference/android/app/Notification.BigPictureStyle.html].    This ticket created for future PR.",Improvement,High,Closed,"2015-11-21 14:45:30","2015-11-21 14:45:30",3
"The Titanium SDK ","Windows: Convert platform-specific (store or phone only) code to using macros to guard","We currently use macros that will effectively compile one block or another depending on whether the code works/is available on phone or desktop.  i.e.  {code:cpp}  #if WINAPI_FAMILY != WINAPI_FAMILY_PHONE_APP      We may of course need more variants for things where the API is now available in Win10, but was only available for phone or store on 8.1, etc. (i.e. Clipboard was only for store.desktop in 8.1, but is universal in 10)",Story,High,Closed,"2015-11-25 18:56:53","2015-11-25 18:56:53",13
"The Titanium SDK ","Android: Reuse the same hyperloop proxy for single Java object","We should cache instance proxies and ensure we always re-use/return the same hyperloop proxy for the same underlying Java object. Right now we wrap and unwrap with new instances every time. This will involve some caching mechanism. We should also look into doing a cache of class proxies to improve performance, since we hang static fields, methods and constructors off the class proxy instances.",Story,High,Closed,"2015-11-24 20:25:18","2015-11-24 20:25:18",5
"The Titanium SDK ","iOS: Able to build for unsupported deployment targets","I am able to build projects for iphones/ipads when the deployment target is not set in the tiapp.xml (in certain cases...see below).    *Steps to reproduce issue*  1. Create a new project  2. Do not allow the iPad deployment target  3. Build for iPad simulator    *Actual Results*  The app runs normally    *Expected Results*  The app does not run on unsupported deployment targets    *Notes*  If iPad and iPhone are unsupported, I do not see the option for any iOS sims in Studio. CLI can still build to them.  If iPhone is unsupported, I do not see the option for iPhone sims, but can still build to iPhone devices. CLI can still build to sims.  {{appc ti projects}} returns the correct info from the tiapp's deployment targets.  See attached images.",Bug,Low,Closed,"2015-11-24 19:25:30","2015-11-24 19:25:30",1
"The Titanium SDK ","iOS: 'person' property in Ti.Contacts.showContacts is empty","h6.Issue Description   On iOS, the callback event for both 'selectedProperty' and 'selectedPerson' of Ti.Contacts.showContacts has an empty value for the person property. When selecting a person from the contacts list, The expected behavior is to see an object attached to the person property that get the name of the contact (e.g., e.person.name).     The callback event for 'selectedProperty' returns:     h6.Steps to replicate  -Create a new titanium alloy project  -Open the app folder  -Replace the index.xml file inside views folder and the index.js file inside controllers  -Build and run  -Click open  -Select a contact    h6.Test Case  Index.xml      Index.js  ",Improvement,High,Closed,"2015-11-24 17:32:33","2015-11-24 17:32:33",1
"The Titanium SDK ","iOS: Refactor previewContext to be more memory-efficient","The current {{Ti.UI.iOS.PreviewContent}} implementation works. But to make it even more efficient related to memory management, I refactored a few parts:  - Remove manual properties of {{TiUIiOSPreviewContext}} inside the {{TiPreviewingDelegate}} and access them through the {{previewContext}} property (since the delegate is not public and it keeps the object dependencies clean)  - Release some properties that have not been released before  - Add missing code docs in the {{TiPreviewingDelegate}} header file  - Change counter index from {{int}} to {{NSUInteger}} and remove unused {{actionGroupIndex}} property that have been used during testing  - Enable ARC in all related files (!)    Demo code (should work exactly like before):  ",Improvement,Low,Closed,"2015-11-23 23:32:24","2015-11-23 23:32:24",3
"The Titanium SDK ","Windows: Use and generate correct Main_class.h when compiling","{{titanium_prep}} for Windows gets compiled using Androids {{Main_class.h}}.    This file should also be generated and replaced with the latest {{Main.class}} when building for Windows using {{ant}}.",Bug,Critical,Closed,"2015-11-23 21:52:28","2015-11-23 21:52:28",5
"The Titanium SDK ","Windows: Update CLI to use Windows 10 artifacts during win10 project builds","When we target Windows 10 as the end SDK target for a user's app, we need to be sure we use the Win10 compiled SDK libraries.",Story,High,Closed,"2015-11-23 15:48:32","2015-11-23 15:48:32",5
"The Titanium SDK ","Windows: Combine Windows 8.1 and Windows 10 SDK build artifacts for release","We have separate builds of the SDK done against Win 8.1 and Win 10. We need to package both versions up into a single zip that is used in the main SDK.    We can't just mash together the two zips, as we need to adjust where the WIn10 builds get packaged up in the final zip. Right now they're under store/x86 and store/ARM. They probably should be under something like win10/x86 and win10ARM since they're supposed to be universal for Win10 store/phone.",Story,High,Closed,"2015-11-23 15:45:21","2015-11-23 15:45:21",8
"The Titanium SDK ","Windows: Set up unit testing against Win 10 builds","We currently run mocha tests against the Windows emulator when we build on Windows 8.1. We should do the equivalent for Windows 10 builds.    I'm not sure if that means we'd need to run the tests against Windows Store deploy target, or if we can just run normally against the Win10 phone emulator (which likely will require CLI work to know which lib versions are OK for win10 universal)",Story,High,Closed,"2015-11-23 15:44:50","2015-11-23 15:44:50",8
"The Titanium SDK ","iOS: Revert APSHTTPClient library to use back NSURLConnection","https://jira.<USER>org/browse/TIMOB-19154 caused a regression in these 3 tickets:  https://jira.<USER>org/browse/MOD-2161  https://jira.<USER>org/browse/TIMOB-19731  https://jira.<USER>org/browse/TIMOB-19950    We need a interim fix for 5.1.1, so we need to revert the library to use NSURLConnection again. And fix the 3 tickets using NSURLSession in the near future.  ",Bug,Critical,Closed,"2015-11-23 15:05:10","2015-11-23 15:05:10",3
"The Titanium SDK ","iOS: Keyboard toolbar button for TextArea within ListView does not receive 'click' events","h2. Problem    The keyboard toolbar button for a TextArea within a ListView does not receive 'click' events    h2. Test case    {code:lang=javascript|title=app.js}  function keyboardToolbar() {   var flexSpace = Titanium.UI.createButton({       systemButton:Titanium.UI.iPhone.SystemButton.FLEXIBLE_SPACE   });      var done = Titanium.UI.createButton({       title: 'Done',       style: Titanium.UI.iPhone.SystemButtonStyle.DONE,   });      done.addEventListener('click', function(evt) {    Ti.API.debug('click');   });      var toolbar = Titanium.UI.iOS.createToolbar({       items:[flexSpace, done],       bottom: 0,       borderTop: true,       borderBottom: false   });      return toolbar;   }    var win = Ti.UI.createWindow({});    var lv = Ti.UI.createListView({   templates: {    textArea: {     properties: {      height: '200dp'     },     childTemplates: [      {       type: 'Ti.UI.TextArea',       bindId: 'textArea',          properties: {        top: 10,        left: 10,        width: '320dp',        height: '200dp',        suppressReturn: false,        keyboardToolbar: keyboardToolbar()       }      }     ]    }   },   sections: [Ti.UI.createListSection({    items: [{     template: 'textArea'    }]   })]  });  win.add(lv);  win.open();  {code}    1. Run app with the code above  2. Focus on text area. The keyboard and keyboard toolbar will appear.  3. Tap on the 'Done' button in the keyboard toolbar  4. The message 'click' is not displayed in the log.",Bug,Medium,Closed,"2015-09-30 08:26:15","2015-09-30 08:26:15",3
"The Titanium SDK ","iOS: Window close event not fired on NavigationWindow with ListView","When opening a new window with a ListView from within a NavigationWindow, the close event of this window sometimes get fired and sometimes won't.    Example:    {code:xml|title=win1.xml}  <Alloy>      <NavigationWindow id=navwin platform=ios>          <Window id=win1 title=Red Window backgroundColor=red>              <Button id=button onClick=openBlueWindow>Open Blue Window</Button>          </Window>      </NavigationWindow>  </Alloy>  {code}    {code:javascript|title=win1.js}  function openBlueWindow(e) {      var win2 = Alloy.createController('win2').getView();      win2.addEventListener(close, function() {        console.log(CLOSED!);      });      $.navwin.openWindow(win2);  }  {code}    $.navwin.open();    {code:xml|title=win2.xml}  <Alloy>      <Window id=win2 title=Blue Window backgroundColor=blue>        <ListView id=list>            <ListSection>                <ListItem title=List item 1></ListItem>                <ListItem title=List item 2></ListItem>                <ListItem title=List item 3></ListItem>            </ListSection>        </ListView>      </Window>  </Alloy>  {code}    {code:javascript|title=win2.js}  function closeWindow(){      $.win2.close();  }  {code}    When you close window 2 the expected behaviour is to see CLOSED! in the console, but it only randomly shows.",Bug,Critical,Closed,"2015-10-15 11:58:31","2015-10-15 11:58:31",5
"The Titanium SDK ","Android: TableView crashes when scrolling more than 29 rows","When executing the following code, if there are more than 29 rows, the app will crash when scrolling back up from the bottom of the TableView:  (You may need to try more than 30 rows for the app to crash, as each device may vary this number)  *The error log from the Studio console is:*  I have tried removing the className property from the TableViewRow, which stops the crashing, but prevents Buttons and other Views inside the TableViewRow redrawing correctly, so must be left in (as indicated by the <USER>Platform Docs).  Due to our customers using JellyBean devices, we need the fix in 3.5.1 or 3.5.2, as the devices can't be upgraded to newer Android versions.  *Possible Cause:*  This may be caused by an issue with 0-Based indexes used in getItemViewType() or getViewTypeCount() in titanium_mobile/android/modules/ui/src/java/ti/modules/titanium/ui/widget/listview/TiListView.java",Bug,Critical,Closed,"2015-10-07 14:33:08","2015-10-07 14:33:08",8
"The Titanium SDK ","Android: HttpClient.abort() on andorid throw errors if the request is just created","If I try to cancel a just created HttpClient request (eg on a input onchange search), I got the below errors.    With SDK 3.4.1 I got this error:        With SDK 5.0.0 instead:         I'm pretty sure this don't happen with 3.1 or 3.2 but I can't test it at the moment.        Test apps here:  https://www.dropbox.com/sh/g7a7n9emtu36fzc/AADrFBNZ8UthezDd0vmKGjM1a?dl=0    Test code:  ",Bug,Medium,Closed,"2015-10-15 15:37:30","2015-10-15 15:37:30",3
"The Titanium SDK ","Windows:Ti.Media.AudioPlayer => allowBackground has no effect","the stream starts and plays, but if the app goes to background (tap on windows-button) or device goes into looked-mode the stream stops. the stream starts to play again if the app returns to the foreground. the allowBackground feature is set in the doc as available for windows from version 4.1.0.",Bug,Critical,Resolved,"2015-08-04 09:42:59","2015-08-04 09:42:59",21
"The Titanium SDK ","iOS: Repeated call of listView.addEventListener('scrollstart') should only result in 1 listener","h5. Current behavior  With    you can register an event listener. But there is no check if the listener is already registered.    So if you do something like this:      you habe a second registered callback. You have todo something like this to unregister:      Its difficult to debug problems around that if you overlooked the second call of addEventListener.    h5. Expected  - The second listener is not registered  - (optional) Warning or notice that there is already a listener",Bug,High,Closed,"2015-07-22 13:39:29","2015-07-22 13:39:29",5
"The Titanium SDK ","iOS: Layout fails on iOS8 with iOS9-only Picker height set","Since iOS 9 it is possible to set a picker's height and we support that in Titanium 5.1.0.    However, on iOS 8 the layout seems to use the set height, resulting in the standard-height picker to overflow. See screenshots.    On iOS 8 we should use the standard-height to do the layout. This should also be reflected when you get the height via the {{size}} and {{rect}} properties.    Found by [~<USER> and demonstrated in the Ti 5.1.0 sample app  https://github.com/<USER>developer-relations/appc-sample-ti510/issues/3",Bug,Low,Closed,"2015-11-21 10:49:02","2015-11-21 10:49:02",5
"The Titanium SDK ","iOS9: Enable App-thinning Splicing by default for new projects","To encourage the use of app thinning (slicing) and reduce the size of the app significantly, we should enable the use-app-thinning property in tiapp.xml by default for newly created projects. Also to update the guide when this ticket is resolved. https://wiki.<USER>org/display/guides2/App+Thinning",Improvement,High,Closed,"2015-11-21 00:23:32","2015-11-21 00:23:32",3
"The Titanium SDK ","iOS: assertion failed: libxpc.dylib when building apps to Simulators","h5. Description:  When building apps to iOS simulators, the following error occurs:      The error does not seem to have an impact to the performance of the app. The app will build successfully and will function correctly.This does not occur when building the same apps to iOS devices.     *Note:* There have been reports of the same issue occurring for people developing on iOS outside of <USER>products, and is most likely not an issue on our side.    h5. Steps to reproduce:  1. Create a classic or alloy project.  2. Build to iOS Simulator.  3. Read console for error once simulator is launched.  h5. Result:  Assertion failed error will occur upon sim launch.    h5. Expected Result:  error should not occur upon sim launch.",Bug,None,Closed,"2015-11-20 18:52:46","2015-11-20 18:52:46",1
"The Titanium SDK ","iOS: Ti.App.fireEvent from webView is not working","The example from your site that I am trying to run is not functioning in IOS 9.1. I am interested in getting the event fired from the WebView to be caught in the application. This works in Android but not in IOS. I have tried it WillHandleTouches set to False.      ",Bug,Critical,Closed,"2015-11-18 17:03:53","2015-11-18 17:03:53",3
"The Titanium SDK ","iOS: Improve deprecation macros","The macros for deprecating an API are misleading and need to be unified:      This macro expects {{DEPRECATED_REPLACED(@Calendar.requestAuthorization, @5.1.0, @Titanium.Calendar.requestContactsPermissions);}}    Note, that the Titanium prefix is added by the macro in the deprecated API, but needs to be added manually in the replaced API. The approach is to clean this up and unify all usages, so that we call {{DEPRECATED_REPLACED(@Calendar.requestAuthorization, @5.1.0, @Titanium.Calendar.requestContactsPermissions);}} which generated a proper Ti-prefixed warning for all API's. ",Improvement,Low,Closed,"2015-11-19 04:31:31","2015-11-19 04:31:31",5
"The Titanium SDK ","iOS: Incremental builds fail to update with --skip-js-minify","h5. Description:    This is a *REGRESSION* from 5.0.2.GA    Incremental builds fail to update changes when targeted to iOS devices. However, this only occurs when the project has platform services *ENABLED*, and incremental builds reflect changes correctly with platform services disabled. It is worth noting that the incremental build times are considerably shorter than the initial build for both instances ( 4 - 7 seconds ). This issue is verified as affecting both iOS8 & 9 devices, but does not affect simulator builds.    h5. Steps to reproduce:  1. Create a classic project with services *enabled*  2. Build project to device ( iOS8, iOS9 )  3. Make a change to app.js file  4. Build project to device again.    h5. Result:  Changes made to app.js will not be reflected in the new build with platform services enabled.    h5. Expected Result:  Changes made to app.js should be reflected in the new build with platform services enabled.",Bug,Critical,Closed,"2015-11-18 23:30:54","2015-11-18 23:30:54",3
"The Titanium SDK ","iOS8: Ti.Contacts - relatedNames property causes crash","h5. Description:  Creating a new contact with {{Ti.createContact()}} & including the {{relatedNames}} will cause the following error when build to an iOS8 Device / Sim:        The same code will work successfully when build to an iOS9 Device / Sim, and removing the {{relatedNames}} property resolves the issue for iOS8.     h5. Steps to reproduce:    1. Create a Classic Project.  2. Include following demo code to app.js:    4. Build to iOS8 device  / sim  5. Receive above error.  6. Remove {{relatedNames}} property.  7. Build to IOS8 device / sim.  8. Create Contacts works successfully.    h5. Result:  Create Contacts will crash and return aforementioned error on iOS8.    h5. Expected Result:  Create contacts should work successfully on iOS8, or return a warning to exclude the relatedName property when building for iOS8.",Bug,High,Closed,"2015-11-18 20:11:58","2015-11-18 20:11:58",3
"The Titanium SDK ","iOS9: Remove Contacts causes app to crash","h5. Description:  This issue was located using KitchenSink, whilst testing Phone > Contacts > Remove Contact. Attempting to remove a contact using an app will cause it to crash, and after checking the native address book, the contact remains as existing. This problem affects iOS9 only, it does not occur when using the same code on an iOS8 device.    h5. Steps to reproduce:  1.Import KitchenSink to iOS9 or Sim.  2. Navigate to Phone > Contacts > Remove Contact.  3. Select a contact to remove.  4. App will crash.  5. Navigate to native contacts book, and look for the entry selected in step 3.  6. the entry will still be present.    h5. Result:  App will crash and fail to remove contact from address book.  h5. Expected Result:  App should not crash, and should succeed in removing contact from address book.",Bug,Critical,Closed,"2015-11-17 19:57:24","2015-11-17 19:57:24",3
"The Titanium SDK ","iOS: Rename AlertDialog placeholder properties to hintText","The new {{*placeholder}} properties for the [AlertDialog|https://<USER>github.io/appc-docs/latest/#!/api/Titanium.UI.AlertDialog-property-placeholder] should be renamed to {{*HintText}} as that is the name we use on all other API's like [TextArea|https://<USER>github.io/appc-docs/latest/#!/api/Titanium.UI.TextArea-property-hintText].",Improvement,Low,Closed,"2015-11-17 19:04:19","2015-11-17 19:04:19",1
"The Titanium SDK ","Line up *Authorization properties","Just a small change to align the property names between the 4 API's for better predictability (ability to guess the property name without using docs).    * {{Ti.Calendar.eventsAuthorization}} > {{calendarAuthorization}}  * {{Ti.Media.cameraAuthorizationStatus}} > {{cameraAuthorization}}",Improvement,Trivial,Closed,"2015-11-17 14:25:58","2015-11-17 14:25:58",2
"The Titanium SDK ","iOS: Differences between new permission request responses","While working in the [5.1 sample|https://github.com/<USER>developer-relations/appc-sample-ti510] I noticed some differences between the responses of the new permission request methods. I created a separate test case to show the differences so we can address them in a next release. Nothing big, except for the first bullet maybe.    * Unlike the others, the callback for {{requestLocationPermissions()}} is only called the first time. You have to force close and then re-open the app for it to work again.  * The response for {{requestLocationPermissions}} also has {{authorizationStatus}}, which would be very useful to have in the response for the others as well.  * On success, the response for {{requestLocationPermissions}} has an empty string for {{error}} where it should either have a message or be undefined.  * When unknown, {{requestContactsPermissions}} has a not very helpful _Access Denied_ {{error}} instead of just being undefined like {{Calendar}} and {{Camera}}.  * Unless permission was granted, the {{error}} for {{requestLocationPermissions}} is always _The user is unable to allow access to location._, which is not very helpful or even misleading since the user is perfectly able, he just denied permission to the app. Calendar and Contacts have better error messages.  * When denied, the response for {{requestCameraPermissions}} has no {{error}} like the others.  * I have no idea where {{code}} comes from but if I deny it (probably by coincidence) correctly maps to {{AUTHORIZATION_DENIED}} for Calendar and Contacts. Would be helpful to have the meaning of this code documented.  * In iOS 8, denying contacts permission sends success response to callback.     h2. Sample    Don't forget to add {{<key>NSLocationAlwaysUsageDescription</key><string>Deny or grant permission to test different scenarios.</string>}} to {{tiapp.xml}}.    {code:javascript}  var win = Ti.UI.createWindow({   backgroundColor: 'white'  });    var btn = Ti.UI.createButton({   title: 'Request Permissions'  });    btn.addEventListener('click', function(e) {     console.log('\n--------------------------------------------------------\n');     var Calendar = {};   Calendar[Ti.Calendar.AUTHORIZATION_AUTHORIZED] = 'AUTHORIZATION_AUTHORIZED';   Calendar[Ti.Calendar.AUTHORIZATION_DENIED] = 'AUTHORIZATION_DENIED';   Calendar[Ti.Calendar.AUTHORIZATION_RESTRICTED] = 'AUTHORIZATION_RESTRICTED';   Calendar[Ti.Calendar.AUTHORIZATION_UNKNOWN] = 'AUTHORIZATION_UNKNOWN';     console.log('Ti.Calendar.hasCalendarPermissions ' + Ti.Calendar.hasCalendarPermissions());   console.log('Ti.Calendar.eventsAuthorization Ti.Calendar.' + Calendar[Ti.Calendar.eventsAuthorization] + '\n');     var Contacts = {};   Contacts[Ti.Contacts.AUTHORIZATION_AUTHORIZED] = 'AUTHORIZATION_AUTHORIZED';   Contacts[Ti.Contacts.AUTHORIZATION_DENIED] = 'AUTHORIZATION_DENIED';   Contacts[Ti.Contacts.AUTHORIZATION_RESTRICTED] = 'AUTHORIZATION_RESTRICTED';   Contacts[Ti.Contacts.AUTHORIZATION_UNKNOWN] = 'AUTHORIZATION_UNKNOWN';     console.log('Ti.Contacts.hasContactsPermissions ' + Ti.Contacts.hasContactsPermissions());   console.log('Ti.Contacts.contactsAuthorization Ti.Contacts.' + Contacts[Ti.Contacts.contactsAuthorization] + '\n');     var Geolocation = {};   Geolocation[Ti.Geolocation.AUTHORIZATION_AUTHORIZED] = 'AUTHORIZATION_AUTHORIZED';   Geolocation[Ti.Geolocation.AUTHORIZATION_DENIED] = 'AUTHORIZATION_DENIED';   Geolocation[Ti.Geolocation.AUTHORIZATION_RESTRICTED] = 'AUTHORIZATION_RESTRICTED';   Geolocation[Ti.Geolocation.AUTHORIZATION_UNKNOWN] = 'AUTHORIZATION_UNKNOWN';   Geolocation[Ti.Geolocation.AUTHORIZATION_ALWAYS] = 'AUTHORIZATION_ALWAYS';   Geolocation[Ti.Geolocation.AUTHORIZATION_WHEN_IN_USE] = 'AUTHORIZATION_WHEN_IN_USE';     console.log('Ti.Geolocation.hasLocationPermissions ' + Ti.Geolocation.hasLocationPermissions(Ti.Geolocation.AUTHORIZATION_ALWAYS));   console.log('Ti.Geolocation.locationServicesAuthorization Ti.Geolocation.' + Geolocation[Ti.Geolocation.locationServicesAuthorization] + '\n');     var Media = {};   Media[Ti.Media.CAMERA_AUTHORIZATION_AUTHORIZED] = 'CAMERA_AUTHORIZATION_AUTHORIZED';   Media[Ti.Media.CAMERA_AUTHORIZATION_DENIED] = 'CAMERA_AUTHORIZATION_DENIED';   Media[Ti.Media.CAMERA_AUTHORIZATION_RESTRICTED] = 'CAMERA_AUTHORIZATION_RESTRICTED';   Media[Ti.Media.CAMERA_AUTHORIZATION_NOT_DETERMINED] = 'CAMERA_AUTHORIZATION_NOT_DETERMINED';     console.log('Ti.Media.hasCameraPermissions ' + Ti.Media.hasCameraPermissions());   console.log('Ti.Media.cameraAuthorizationStatus Ti.Media.' + Media[Ti.Media.cameraAuthorizationStatus] + '\n');     console.log('--------------------------------------------------------\n');     Ti.Calendar.requestCalendarPermissions(function(e) {    console.log('Ti.Calendar.requestCalendarPermissions ' + JSON.stringify(e, null, 2));    console.log('Ti.Calendar.requestCalendarPermissions:code (mapped) ' + Calendar[e.code] + '\n');   });     Ti.Contacts.requestContactsPermissions(function(e) {    console.log('Ti.Contacts.requestContactsPermissions ' + JSON.stringify(e, null, 2));    console.log('Ti.Contacts.requestContactsPermissions:code (mapped) ' + Contacts[e.code] + '\n');   });     Ti.Geolocation.requestLocationPermissions(Ti.Geolocation.AUTHORIZATION_ALWAYS, function(e) {    console.log('Ti.Geolocation.requestLocationPermissions ' + JSON.stringify(e, null, 2));    console.log('Ti.Geolocation.requestLocationPermissions:code (mapped) ' + Geolocation[e.code]);    console.log('Ti.Geolocation.requestLocationPermissions:authorizationStatus ' + Geolocation[e.authorizationStatus] + '\n');   });     Ti.Media.requestCameraPermissions(function(e) {    console.log('Ti.Media.requestCameraPermissions ' + JSON.stringify(e, null, 2));    console.log('Ti.Media.requestCameraPermissions:code (mapped) ' + Media[e.code] + '\n');   });    });    win.add(btn);  win.open();  {code}    h2. Logs    h3. Scenario: Deny All    {code}  [INFO]  Ti.Calendar.hasCalendarPermissions false  [INFO]  Ti.Calendar.eventsAuthorization Ti.Calendar.AUTHORIZATION_UNKNOWN  [INFO]  [INFO]  Ti.Contacts.hasContactsPermissions false  [INFO]  Ti.Contacts.contactsAuthorization Ti.Contacts.AUTHORIZATION_UNKNOWN  [INFO]  [INFO]  Ti.Geolocation.hasLocationPermissions false  [INFO]  Ti.Geolocation.locationServicesAuthorization Ti.Geolocation.AUTHORIZATION_UNKNOWN  [INFO]  [INFO]  Ti.Media.hasCameraPermissions false  [INFO]  Ti.Media.cameraAuthorizationStatus Ti.Media.CAMERA_AUTHORIZATION_NOT_DETERMINED  [INFO]  [INFO]  Ti.Calendar.requestCalendarPermissions {  [INFO]    success: false,  [INFO]    code: 1  [INFO]  }  [INFO]  Ti.Calendar.requestCalendarPermissions:code (mapped) AUTHORIZATION_RESTRICTED  [INFO]  [INFO]  Ti.Contacts.requestContactsPermissions {  [INFO]    success: false,  [INFO]    error: Access Denied,  [INFO]    code: 100  [INFO]  }  [INFO]  Ti.Contacts.requestContactsPermissions:code (mapped) undefined  [INFO]  [INFO]  Ti.Media.requestCameraPermissions {  [INFO]    success: false,  [INFO]    code: 1  [INFO]  }  [INFO]  Ti.Media.requestCameraPermissions:code (mapped) CAMERA_AUTHORIZATION_RESTRICTED  {code}    Because of TIMOB-20002 I use the Ti 5.1 Sample App to read the Geolocation callback:    {code}  [INFO]  Ti.Geolocation.requestLocationPermissions {  [INFO]    success: false,  [INFO]    code: 1,  [INFO]    authorizationStatus: 2,  [INFO]    error: The user is unable to allow access to location.  [INFO]  }  [INFO]  Ti.Geolocation.requestLocationPermissions.code (mapped) Ti.Geolocation.AUTHORIZATION_RESTRICTED  [INFO]  Ti.Geolocation.requestLocationPermissions.authorizationStatus (mapped) Ti.Geolocation.AUTHORIZATION_DENIED  {code}    h3. Scenario: Denied Before    {code}  [INFO]  Ti.Calendar.hasCalendarPermissions false  [INFO]  Ti.Calendar.eventsAuthorization Ti.Calendar.AUTHORIZATION_DENIED  [INFO]  [INFO]  Ti.Contacts.hasContactsPermissions false  [INFO]  Ti.Contacts.contactsAuthorization Ti.Contacts.AUTHORIZATION_DENIED  [INFO]  [INFO]  Ti.Geolocation.hasLocationPermissions false  [INFO]  Ti.Geolocation.locationServicesAuthorization Ti.Geolocation.AUTHORIZATION_DENIED  [INFO]  [INFO]  Ti.Media.hasCameraPermissions false  [INFO]  Ti.Media.cameraAuthorizationStatus Ti.Media.CAMERA_AUTHORIZATION_DENIED  [INFO]  [INFO]  --------------------------------------------------------  [INFO]  [INFO]  Ti.Calendar.requestCalendarPermissions {  [INFO]    success: false,  [INFO]    error: The user has denied access to events in Calendar.,  [INFO]    code: 2  [INFO]  }  [INFO]  Ti.Calendar.requestCalendarPermissions:code (mapped) AUTHORIZATION_DENIED  [INFO]  [INFO]  Ti.Contacts.requestContactsPermissions {  [INFO]    success: false,  [INFO]    error: The user has denied access to the address book,  [INFO]    code: 2  [INFO]  }  [INFO]  Ti.Contacts.requestContactsPermissions:code (mapped) AUTHORIZATION_DENIED  [INFO]  [INFO]  Ti.Media.requestCameraPermissions {  [INFO]    success: false,  [INFO]    code: 1  [INFO]  }  [INFO]  Ti.Media.requestCameraPermissions:code (mapped) CAMERA_AUTHORIZATION_RESTRICTED  {code}    Because of TIMOB-20002 I use the Ti 5.1 Sample App to read the Geolocation callback:    {code}  [INFO]  Ti.Geolocation.requestLocationPermissions {  [INFO]    success: false,  [INFO]    code: 1,  [INFO]    authorizationStatus: 2,  [INFO]    error: The user is unable to allow access to location.  [INFO]  }  [INFO]  Ti.Geolocation.requestLocationPermissions.code (mapped) Ti.Geolocation.AUTHORIZATION_RESTRICTED  [INFO]  Ti.Geolocation.requestLocationPermissions.authorizationStatus (mapped) Ti.Geolocation.AUTHORIZATION_DENIED  {code}    h3. Scenario: Allow All    {code}  [INFO]  Ti.Calendar.hasCalendarPermissions false  [INFO]  Ti.Calendar.eventsAuthorization Ti.Calendar.AUTHORIZATION_UNKNOWN  [INFO]  [INFO]  Ti.Contacts.hasContactsPermissions false  [INFO]  Ti.Contacts.contactsAuthorization Ti.Contacts.AUTHORIZATION_UNKNOWN  [INFO]  [INFO]  Ti.Geolocation.hasLocationPermissions false  [INFO]  Ti.Geolocation.locationServicesAuthorization Ti.Geolocation.AUTHORIZATION_UNKNOWN  [INFO]  [INFO]  Ti.Media.hasCameraPermissions false  [INFO]  Ti.Media.cameraAuthorizationStatus Ti.Media.CAMERA_AUTHORIZATION_NOT_DETERMINED  [INFO]  [INFO]  --------------------------------------------------------  [INFO]  [INFO]  Ti.Calendar.requestCalendarPermissions {  [INFO]    success: true,  [INFO]    code: 0  [INFO]  }  [INFO]  Ti.Calendar.requestCalendarPermissions:code (mapped) AUTHORIZATION_UNKNOWN  [INFO]  [INFO]  Ti.Contacts.requestContactsPermissions {  [INFO]    success: true,  [INFO]    code: 0  [INFO]  }  [INFO]  Ti.Contacts.requestContactsPermissions:code (mapped) AUTHORIZATION_UNKNOWN  [INFO]  [INFO]  Ti.Media.requestCameraPermissions {  [INFO]    success: true,  [INFO]    code: 0  [INFO]  }  [INFO]  Ti.Media.requestCameraPermissions:code (mapped) CAMERA_AUTHORIZATION_NOT_DETERMINED  {code}    Because of TIMOB-20002 I use the Ti 5.1 Sample App to read the Geolocation callback:    {code}  [INFO]  Ti.Geolocation.requestLocationPermissions {  [INFO]    success: true,  [INFO]    code: 0,  [INFO]    authorizationStatus: 3,  [INFO]    error:   [INFO]  }  [INFO]  Ti.Geolocation.requestLocationPermissions.code (mapped) Ti.Geolocation.AUTHORIZATION_UNKNOWN  [INFO]  Ti.Geolocation.requestLocationPermissions.authorizationStatus (mapped) Ti.Geolocation.AUTHORIZATION_AUTHORIZED  {code}    h3. Scenario: Allowed All Before    {code}  [INFO]  Ti.Calendar.hasCalendarPermissions true  [INFO]  Ti.Calendar.eventsAuthorization Ti.Calendar.AUTHORIZATION_AUTHORIZED  [INFO]  [INFO]  Ti.Contacts.hasContactsPermissions true  [INFO]  Ti.Contacts.contactsAuthorization Ti.Contacts.AUTHORIZATION_AUTHORIZED  [INFO]  [INFO]  Ti.Geolocation.hasLocationPermissions true  [INFO]  Ti.Geolocation.locationServicesAuthorization Ti.Geolocation.AUTHORIZATION_ALWAYS  [INFO]  [INFO]  Ti.Media.hasCameraPermissions true  [INFO]  Ti.Media.cameraAuthorizationStatus Ti.Media.CAMERA_AUTHORIZATION_AUTHORIZED  [INFO]  [INFO]  --------------------------------------------------------  [INFO]  [INFO]  Ti.Calendar.requestCalendarPermissions {  [INFO]    success: true,  [INFO]    code: 0  [INFO]  }  [INFO]  Ti.Calendar.requestCalendarPermissions:code (mapped) AUTHORIZATION_UNKNOWN  [INFO]  [INFO]  Ti.Contacts.requestContactsPermissions {  [INFO]    success: true,  [INFO]    code: 0  [INFO]  }  [INFO]  Ti.Contacts.requestContactsPermissions:code (mapped) AUTHORIZATION_UNKNOWN  [INFO]  [INFO]  Ti.Media.requestCameraPermissions {  [INFO]    success: true,  [INFO]    code: 0  [INFO]  }  [INFO]  Ti.Media.requestCameraPermissions:code (mapped) CAMERA_AUTHORIZATION_NOT_DETERMINED  {code}    Because of TIMOB-20002 I use the Ti 5.1 Sample App to read the Geolocation callback:    {code}  [INFO]  Ti.Geolocation.requestLocationPermissions {  [INFO]    success: true,  [INFO]    code: 0,  [INFO]    authorizationStatus: 3,  [INFO]    error:   [INFO]  }  [INFO]  Ti.Geolocation.requestLocationPermissions.code (mapped) Ti.Geolocation.AUTHORIZATION_UNKNOWN  [INFO]  Ti.Geolocation.requestLocationPermissions.authorizationStatus (mapped) Ti.Geolocation.AUTHORIZATION_AUTHORIZED  {code}",Bug,Medium,Closed,"2015-11-17 14:24:13","2015-11-17 14:24:13",3
"The Titanium SDK ","Permission request error response message prefixed with namespace","The following code demonstrates that when you deny permission, the error messages in the callback payload are prefixed by the _namespace_ followed by no spacing. Expected behaviour is not to have a prefix at all.        *Console*        Related code:  https://github.com/<USER>titanium_mobile/blob/a0e6b6545594b64d95dc91a496e3242342de9db1/android/titanium/src/java/org/<USER>titanium/TiBaseActivity.java#L440",Bug,Medium,Closed,"2015-11-17 13:34:54","2015-11-17 13:34:54",2
"The Titanium SDK ","iOS: Ti.Geolocation.requestLocationPermissions is not always called?","Both on device and in Simulator I can't get the callback for {{requestLocationPermissions}} in the following code to be called, even though - the first time - the dialog requesting permission *is* displayed. Which is weird, because in the [Ti 5.1.0 Sample App|https://github.com/<USER>developer-relations/appc-sample-ti510] it does call and is implemented in the exact same way. Removing everything in the button event listener except the request call doesn't change it either.        *Notes:*    * Don't forget to add {{<key>NSLocationAlwaysUsageDescription</key><string>Deny or grant permission to test different scenarios.</string>}} to the {{tiapp.xml}} or use the attached project.  * For a clean slate either change the app id, reset the Simulator or just _Settings > General > Reset > Reset Location & Privacy_.",Bug,High,Closed,"2015-11-17 11:10:49","2015-11-17 11:10:49",3
"The Titanium SDK ","iOS: Rename Ti.Media.CAMERA_AUTHORIZATION_NOT_DETERMINED to UNKNOWN","{{Ti.Calendar}}, {{Ti.Contacts}} and {{Ti.Geolocation}} each have {{AUTHORIZATION_UNKNOWN}} but {{Ti.Media}} has [CAMERA_AUTHORIZATION_NOT_DETERMINED|https://<USER>github.io/appc-docs/latest/#!/api/Titanium.Media-property-CAMERA_AUTHORIZATION_NOT_DETERMINED].    The prefix makes sense, since {{Ti.Media}} is about more then the camera, but since the 3 other {{CAMERA_AUTHORIZATION_*}} are identical to those of the other 3 APIs, why not use {{CAMERA_AUTHORIZATION_UNKNOWN}}?",Improvement,Trivial,Closed,"2015-11-17 10:09:00","2015-11-17 10:09:00",2
"The Titanium SDK ","Rename appearance properties to keyboardAppearance","The TextField and [TextArea.appearance|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TextArea-property-appearance] properties should be renamed to {{keyboardAppearance}} to better describe what appearance they are about.    TIMOB-19940 has already used this new name for adding appearance control to the AlertDialog input fields. To prevent confusion we should resolve this ticket together.",Improvement,Medium,Closed,"2015-11-17 08:40:18","2015-11-17 08:40:18",3
"The Titanium SDK ","Automated Unit Tests on Travis CI","To improve the quality of the SDK, we now include automated unit tests in Travis CI, such that unit tests are performed on iOS and Android. If a certain pass criteria is not met, Travis CI will indicate a build fail for the pull request.",Story,High,Closed,"2015-11-17 03:30:30","2015-11-17 03:30:30",21
"The Titanium SDK ","Android: Fix memory leaks in UI proxies","If we generate a native UI proxy (say an android.view.View) and add it to a Titanium UI, we don't properly clean up all the native proxies we've generated leading to a large memory leak. Specifically we need a way to track all UI proxies added as children in the view hierarchy and explicitly release them when the top-level native view is asked to release in our Java code (TiUIView.releaseAllViews())",Story,Critical,Closed,"2015-11-16 15:37:18","2015-11-16 15:37:18",13
"The Titanium SDK ","API to open app's page in system settings","Applicable to above iOS 8 and Android 6.0 and above.    Provide an api via Ti.App module to open the application's page in system settings. This is very helpful for the app to present permissions page in case User wants to revisit his decision. ","New Feature",Medium,Closed,"2015-11-16 06:51:05","2015-11-16 06:51:05",8
"The Titanium SDK ","Windows: Implement View.toImage","{{toImage}} of {{Ti.UI.View}} is not implemented.",Improvement,Medium,Closed,"2015-11-16 06:50:14","2015-11-16 06:50:14",13
"The Titanium SDK ","Android - ListView doesn't have canScroll property","It seems I can't disable scrolling for a ListView on Android, or disable its overscroll effect (similar to overScrollMode for a ScrollView).    For iOS, I can simly set canScroll to false. Please add this feature to Android as well. Thanks.",Improvement,Low,Closed,"2015-07-18 00:08:57","2015-07-18 00:08:57",5
"The Titanium SDK ","Android: transform animation doesn't work immediately after creating a view [android]","1. Create a view with an initial transform (it is important that an initial transform matrix is set)  2. Add the view  3. Call animate    The animation will not work and the animation callback is not executed.    Notes:  1. This problem is specific to *transform* animation. If the view is animated with left/right/top/bottom for example, everything works fine.  2. Deferring the animation, for example by putting it in a setTimeout callback, works if the timeout is long enough.    *Sample code* - run this, click the button and view the result.    ",Bug,High,Closed,"2014-12-30 11:37:15","2014-12-30 11:37:15",8
"The Titanium SDK ","iOS: FileStream Significant memory leak while reading/writing files using FileStream","PROBLEM:  When you want to read or write a file using FileStream.read(buffer) and FileStream.write(buffer), the memory used to store the data read/written is leaked, leading to a crash after writing/reading files for a few minutes.  TEST CASE:  This is how the file is read:  This is how the file is written:  In both cases the heap grows until the app crashes. I've attached an image which shows how the heap grows.",Bug,Critical,Closed,"2015-01-08 22:21:19","2015-01-08 22:21:19",5
"The Titanium SDK ","Hyperloop: 3rd party resources are not properly added to the titanium project","When adding a 3rd party library / code base to your project using Pods, the underlying resources are not being compiled into the application properly and are there for not accessible. Resources such as *.xib, and images need to be manually added to the assets/iphone directory in order for the library to work correctly.    ",Bug,Medium,Closed,"2015-11-13 16:44:01","2015-11-13 16:44:01",1
"The Titanium SDK ","Windows: Warning about duplicate default icon, not overwritten by DefaultIcon","Windows builds have two {{Square44x44Logo.png}} files of which one has a {{.scale-100}} qualifier and is the default <USER>logo instead of one generated from {{DefaultIcon.png}} like the other icons. The build also displays a warning that you should not mix images with and without qualifier.     # Create a new Windows project.  # Remove all icons from {{Resources/windows}}.  # Place the attached {{DefaultIcon.png}} in the project root.  # Build the project and confirm you see this warning:        # Open {{build/windows/Assets}} and confirm there is a {{Square44x44Logo.scale-100.png}} image which is the default <USER>logo and not generated from our {{DefaultIcon.png}}.",Bug,None,Closed,"2015-11-13 10:49:25","2015-11-13 10:49:25",0
"The Titanium SDK ","iOS: Problem with suffix like @2x, ~iphone in ImageView source with app-thinning enabled","The attached sample project demonstrates that with app-thinning enabled, you cannot include a suffix in the image path. This works fine with app-thinning disabled.    1. Build the project with app-thinning enabled and confirm you see the placeholder image  2. Open {{tiapp.xml}} and change {{use-app-thinning}} to {{false}}  3. Build the project again and confirm you see the image.    The code where we hash the image path should strip out any suffixes (including {{~iphone}} etc).",Bug,High,Closed,"2015-11-13 10:15:33","2015-11-13 10:15:33",5
"The Titanium SDK ","Changing use-app-thinning does not force rebuild","Switching the {{use-app-thinning}} setting in {{tiapp.xml}} does not force a rebuild. If you enable it, image assets catalogs *will* be added, but the images not removed. If you disable it, the images *will* be added, but the image asset catalogs not be removed.    Code:  https://github.com/<USER>titanium_mobile/blob/6e66f239d1ffeebd1448658b69e3a189b81b2828/iphone/cli/commands/_build.js#L2345-L2359",Bug,Critical,Closed,"2015-11-13 10:05:20","2015-11-13 10:05:20",2
"The Titanium SDK ","Ti.SafariDialog: Huge list of warnings after GenerateDSYMFile","When I build a project that uses the new ti.safaridialog module I get a huge list of warnings, but the module does function as expected.    ",Bug,Medium,Closed,"2015-11-13 09:49:55","2015-11-13 09:49:55",2
"The Titanium SDK ","Windows: Implement WebView.data","Implement {{data}} property for {{WebView}}. It is not implemented even on TitaniumKit.",Improvement,Medium,Closed,"2015-11-13 09:03:26","2015-11-13 09:03:26",8
"The Titanium SDK ","Windows: attributedString for Label","Implement {{AttributedString}} support for {{Label}}.  ",Bug,Medium,Closed,"2015-11-13 08:51:49","2015-11-13 08:51:49",8
"The Titanium SDK ","Windows: return and change event for Titanium.UI.TextArea ","Implement {{change}} and {{return}} event for {{Titanium.UI.TextArea}} for Windows.",Bug,High,Closed,"2015-11-13 08:46:19","2015-11-13 08:46:19",5
"The Titanium SDK ","Windows: Implement Titanium.UI.TableView footerView/footerTitle","Implement {{Ti.UI.TableView}}-related properties for Windows such as {{TableView.footerView}}, {{TableViewRow.font}}, {{leftImage}}, and {{hasCheck}} etc.    ",Improvement,Medium,Closed,"2015-11-13 08:40:38","2015-11-13 08:40:38",8
"The Titanium SDK ","Windows: Implement TableView row editing operations","Implement {{Ti.UI.TableView}} row editing operation such as {{deleteRow}}, {{insertRowAfter}} and {{appendRowAtSection}} etc for Windows.",Improvement,Medium,Closed,"2015-11-13 08:33:38","2015-11-13 08:33:38",8
"The Titanium SDK ","Windows: background color/image for Ti.UI.Tab and TabGroup","{{Ti.UI.TabGroup}} and {{Ti.UI.Tab}} for Windows should be able to support background color/image such as {{backgroundColor}} and {{barColor}}.  ",Bug,Medium,Closed,"2015-11-13 08:22:43","2015-11-13 08:22:43",8
"The Titanium SDK ","Windows: Missing events in ScrollView","There's no events implemented in {{Ti.UI.ScrollableView}}. Also, revisit [API doc|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.ScrollView] and see if it has valid API availability for Windows.",Bug,Medium,Closed,"2015-11-13 07:04:11","2015-11-13 07:04:11",8
"The Titanium SDK ","Windows: Missing events in ScrollableView","There's no events implemented in {{Ti.UI.ScrollableView}}. Also, revisit [API doc|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.ScrollableView] and see if it has valid API availability for Windows.",Bug,Medium,Closed,"2015-11-13 07:01:15","2015-11-13 07:01:15",8
"The Titanium SDK ","Windows: background color for ProgressBar","Currently only {{color}} (foreground color) property is supported for {{Ti.UI.ProgressBar}}. It should be able to support {{backgroundColor}} and {{backgroundDisabledColor}} etc.",Bug,Medium,Closed,"2015-11-13 06:46:54","2015-11-13 06:46:54",8
"The Titanium SDK ","Windows: header/footer View for ListView","Implement {{footerView}} and {{headerView}} for {{Ti.UI.ListView}}.",Improvement,Medium,Closed,"2015-11-13 06:18:18","2015-11-13 06:18:18",8
"The Titanium SDK ","Windows: Label only supports click event","Currently {{Ti.UI.Label}} only supports {{click}} event. [PR 477|https://github.com/<USER>titanium_mobile_windows/pull/477] should introduce some touch events on Label and it should work, and we want to make sure it works on Label.",Bug,Medium,Closed,"2015-11-13 06:06:16","2015-11-13 06:06:16",5
"The Titanium SDK ","Windows: Implement ImageView defaultImage","Implement following missing properties in {{Ti.UI.ImageView}}.     - defaultImage  ",Bug,Medium,Closed,"2015-11-13 05:55:20","2015-11-13 05:55:20",13
"The Titanium SDK ","Windows: Button only supports click event","Currently {{Ti.UI.Button}} only supports {{click}} event. It should support {{dblclick}}, {{tap}} etc when possible.  Note that [PR 477|https://github.com/<USER>titanium_mobile_windows/pull/477] should introduce some touch events on Button and it should work, and we want to make sure it works on Button.",Bug,High,Closed,"2015-11-13 05:38:57","2015-11-13 05:38:57",5
"The Titanium SDK ","Windows: Image support for Ti.UI.Button","Currently {{Ti.UI.Button}} doesn't support {{image}} property.    ",Bug,High,Closed,"2015-11-13 05:35:27","2015-11-13 05:35:27",5
"The Titanium SDK ","Windows: Use of attachment in Titanium.UI.EmailDialog ","{{Titanium.UI.EmailDialog}} for Windows should be able to support attachments.","New Feature",Medium,Closed,"2015-11-13 05:29:55","2015-11-13 05:29:55",13
"The Titanium SDK ","iOS: HTTP requests with basic auth returning with 401 Unauthorised trigger endless repeated requests","Making an HTTP request with basic auth that that results in a 401 response causes the same request to be repeated resulting in an endless loop of HTTP requests.    Neither onload nor onerror callback is called.     Test case:           ",Bug,Critical,Closed,"2015-11-11 14:27:43","2015-11-11 14:27:43",5
"The Titanium SDK ","Android: Implement Snackbar widget","As part of their Material Design, Android has introduced the Snackbar. It is a new type of toast message that can display one or two short lines of text and a single button in a slide-up view displayed at the bottom of the screen.    See these links for reference:    * https://www.google.com/design/spec/components/snackbars-toasts.html  * http://developer.android.com/reference/android/support/design/widget/Snackbar.html  * http://www.materialdoc.com/snackbar/    I would like to implement this aspect of material design in my app. At this point, I'm stuck writing an Alloy widget that won't be able to implement native behavior, such as automatically pushing up the floating action button.","New Feature",Medium,Closed,"2015-11-12 20:33:58","2015-11-12 20:33:58",3
"The Titanium SDK ","Windows: Use font cache for TextArea and Button","As of [PR 433|https://github.com/<USER>titanium_mobile_windows/pull/433], font cache is introduced to improve font lookup, but {{TextArea}} and {{Button}} are not using it. Make sure to use {{TitaniumWindows::UI::ViewHelper::SetFont}} for the font lookup.",Improvement,Medium,Closed,"2015-11-13 04:59:43","2015-11-13 04:59:43",5
"The Titanium SDK ","Windows: Implement Titanium.UI.AttributedString","Implement {{Titanium.UI.AttributedString}} for Windows.",Bug,Medium,Closed,"2015-11-13 01:57:58","2015-11-13 01:57:58",8
"The Titanium SDK ","Windows: Implement Titanium.UI.AlertDialog.hide","Implement {{Titanium.UI.AlertDialog.hide}} for Windows if possible.",Improvement,Medium,Closed,"2015-11-13 01:50:07","2015-11-13 01:50:07",5
"The Titanium SDK ","Windows: Implement Titanium.UI.ActivityIndicator properties","Implement {{Titanium.UI.ActivityIndicator}} properties like {{font}}, {{indicatorColor}} and so on.",Improvement,Medium,Closed,"2015-11-13 01:30:40","2015-11-13 01:30:40",8
"The Titanium SDK ","Windows: Implement Ti.UI.3DMatrix","Implement {{Ti.UI.3DMatrix}} functions for Windows. (invert, multiply, rotate, scale, translate)","New Feature",Medium,Open,"2015-11-13 01:20:37","2015-11-13 01:20:37",13
"The Titanium SDK ","Android: Support casting hyperloop proxies to different native types","Previously we'd return/wrap any arguments and return types as the actual Java type we received, rather than the type declared by the method return/param type. this led to an issue where we'd receive types that weren't available in our hyperloop JS wrappers (either because they weren't in the type hierarchy we traversed - or more important, if they were hidden/native types). As an example, we'd get a DisplayListCanvas (a subclass of Canvas) in a subclass of View's onDraw method. That type isn't in the android.jar and we have no means of trying to get it's details without the android source code. the method declares the param type as simply Canvas.    As  a hedge against this, when we wrap arguments or return types, we hold the object and it's specific subclass on the Java side, but report as and wrap with the declared type. As a result, that means we now need some way to be able to explicitly cast down to subclasses if we know the value is a more specific subclass (say on View.getLayoutParams).",Story,High,Closed,"2015-11-12 16:48:15","2015-11-12 16:48:15",5
"The Titanium SDK ","Windows: Titanium.UI.ImageView animation events","Implement missing animation events in {{Ti.UI.ImageView}}. (start, stop etc)",Bug,Medium,Closed,"2015-11-12 08:45:50","2015-11-12 08:45:50",5
"The Titanium SDK ","Windows: Implement Ti.Network.Socket.UDP","Implement {{Ti.Network.Socket.UDP}} for Windows    http://docs.<USER>com/platform/latest/#!/api/Titanium.Network.Socket.UDP        Expected: This should show 'Hello, World!' message box.","New Feature",Medium,Closed,"2015-11-12 08:26:34","2015-11-12 08:26:34",13
"The Titanium SDK ","Windows: Implement Ti.Network.Socket.TCP","Implement {{Ti.Network.Socket.TCP}} for Windows.    http://docs.<USER>com/platform/latest/#!/api/Titanium.Network.Socket.TCP    NOTE: This is needed for LiveView    *Test Case*      ","New Feature",High,Closed,"2015-11-12 08:25:37","2015-11-12 08:25:37",13
"The Titanium SDK ","Windows: Implement Ti.Network.Cookie","Implement {{Ti.Network.Cookie}} for Windows. ","New Feature",Medium,Closed,"2015-11-12 08:24:17","2015-11-12 08:24:17",8
"The Titanium SDK ","Windows: Implement Ti.Network properties & functions","Implement missing {{Ti.Network}} properties and functions for Windows.    - Ti.Network.addHTTPCookie  - Ti.Network.removeHTTPCookies  - Ti.Network.getHTTPCookies    Rest of missing Ti.Network functions such as {{get/removeHTTPCookiesForDomain}} and {{removeAllHTTPCookies}} can not be implemented because platform API doesn't support required features.  ",Improvement,Medium,Closed,"2015-11-12 08:17:41","2015-11-12 08:17:41",13
"The Titanium SDK ","Windows: Implement Ti.Locale properties","Implement Locale properties as much as possible.     * currentCountry  * currentLanguage  * currentLocale  * -formatTelephoneNumber-  ",Bug,High,Closed,"2015-11-12 07:47:54","2015-11-12 07:47:54",5
"The Titanium SDK ","Windows: Implement Ti.Filesystem.File.deleteDirectory","{{Ti.Filesystem.File.deleteDirectory}} does not work when {{recursive}} is true.",Bug,Medium,Closed,"2015-11-12 07:22:36","2015-11-12 07:22:36",5
"The Titanium SDK ","Windows: Implement Ti.Filesystem.File.append","{{Ti.Filesystem.File.append}} is not implemented for Windows.",Bug,Medium,Closed,"2015-11-12 07:19:52","2015-11-12 07:19:52",5
"The Titanium SDK ","Windows: Ti.Contacts for Windows Phone 8.1","Currently {{Ti.Contacts}} API are mostly uses Windows 10-only API. Seems like Windows Phone 8.1 has its own contacts API and we should be able to use them. FYI: https://msdn.microsoft.com/en-US/library/windows/apps/xaml/dn631244",Bug,Low,Resolved,"2015-11-12 05:52:01","2015-11-12 05:52:01",1
"The Titanium SDK ","Windows: Implement Blob.width and height","Currently {{Ti.Blob}} width and height are not updated even when Blob represents an image.",Bug,High,Closed,"2015-11-12 05:37:44","2015-11-12 05:37:44",5
"The Titanium SDK ","Windows: Support proximity sensor for Windows 10","Support proximity sensor. {{Ti.App.proximityState}}, {{Ti.App.proximityDetection}} and Ti.App {{proximity}} event. Maybe  {{Windows::Networking::Proximity}} package does the sensor work.    *Test Case*        {code:title=tiapp.xml}  <windows>    <manifest>      <Capabilities>        ...        <DeviceCapability Name=proximity />        ...      </Capabilities>    </manifest>  </windows>  {code}","New Feature",Medium,Closed,"2015-11-12 05:10:01","2015-11-12 05:10:01",8
"The Titanium SDK ","Windows: Implement Ti.App.Properties change event","change event should be fired when a property is changed.",Bug,High,Closed,"2015-11-12 04:55:06","2015-11-12 04:55:06",5
"The Titanium SDK ","Windows: Implement missing View properties","From TIMOB-19837 Ti.UI.View TitaniumKit introduces a lot of properties. Ti.UI.View for Windows should implement them as much as possible.",Bug,High,Closed,"2015-11-11 23:06:33","2015-11-11 23:06:33",13
"The Titanium SDK ","Android: add ability to listen to androidback without overriding","Currently it is possible to override the default behavior for the back button. But you can't really use this for enhancing this functionality or just listen to the back button event without overriding it.    There is no way to call super.onBackPressed() from on the windows activity from JavaScript side.     I think it would make sense to add another property to the Ti.UI.Window that lets you explicitly override this behavior. I'd prefer this:      Does that make sense?    The reason why I need this is that I'm trying to create a proper navigation history. As there are no more lightweight windows, I want to implement a kind of backstack for Views or Fragments. ",Improvement,Medium,Closed,"2015-04-23 11:48:37","2015-04-23 11:48:37",3
"The Titanium SDK ","Android: HTTPClient ondatastream method responseText is empty for Android","We have comet server which we receive updates. iOS version works but Android version responseText is empty which must not be the case. In iOS version ondatastream method receives ping items but Android does not receive.    How to reproduce issue:  There are two version app.js (long version)   app_simplified.js (short version/ no need to send news to test it)  use app.js code as attached.  Use iOS simulator  then test the service by using following url:  [send news update|http://destekmenkul.com/mobil/insertcommenttest.php]  fill pass field:  pass: murat123    result is shown in the terminal : its working  means ondatastream works. We sended a news and it cought in ondatastream method but Android gives runtime error because responseText is empty.    [INFO] :   TypeId:TestType  [INFO] :   notification:{py/object:NewsLib.DefaultNewsItem.DefaultNewsItem,readCount:0,uid:20150930141554,source:TestSource,symbol:EURUSD,dateTime:{py/repr:datetime/datetime.datetime(2015, 9, 30, 14, 15, 54, 430528)},thumbnailID:http://www.forexsirketleri.org/uploads/destekfx-inceleme.png,header:My Header,typeId:TestType,keywords:[,usd,abd,eurusd,eur,euro b??lgesi],pretext:pretext,isRefresh:false,isDelete:false,stocks:,timestamp:1446207300000}  [INFO] :   its working!!!    Now try same step with Android simulator there is no info print! ondatastream responseText is empty!    I attached our comet service document  for further explanation of comet service.     app_simplified.js:  Just run the code and see the response.                      ",Bug,High,Closed,"2015-08-31 22:12:04","2015-08-31 22:12:04",5
"The Titanium SDK ","Creation of Packaged JavaScript and Hybrid Modules: it doesn't work properly","When I create a CommonJS Module, any exported method is accessible.    In detail for the module I've:  # Created a new Mobile Module Project, from <USER>Studio, with id (for example) it.module.test  # Inside _assets_ folder, I've created a js file called _it.module.test.js_  # Into _it.module.test.js_ I have:       Now I package this module directly from <USER>Studio and install this module inside a Test Application.    Into this application I do:      And the result is *null*.    It seems that the problem is that the native module classes have being called instead of the CommonJS ones as per the docs.",Bug,Medium,Closed,"2015-06-21 13:34:41","2015-06-21 13:34:41",1
"The Titanium SDK ","Android: Add ripple effect when tapping ListView rows","Unlike TableView, ListView doesn't use the Material Design Theme. When user click in the table rows the Material Design Effect aren't performed    https://gist.github.com/FokkeZB/26fddff57fb985ec9963    .",Improvement,Medium,Closed,"2015-07-10 13:00:36","2015-07-10 13:00:36",21
"The Titanium SDK ","tintColor for Android ImageView","Adding tintColor property to Android using ImageView.setColorFilter()    Pull Request:   https://github.com/<USER>titanium_mobile/pull/7877            ","New Feature",Medium,Closed,"2015-11-07 10:51:16","2015-11-07 10:51:16",5
"The Titanium SDK ","iOS: Set Entitlements.plist keys from tiapp.xml like we do for Info.plist","Currently the only way to add e.g. associated domains for [Universal Links|https://developer.apple.com/library/prerelease/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html#//apple_ref/doc/uid/TP40016308-CH12-SW1] or the HealthKit entitlement for the [HealthKit Module|http://labs.<USER>com/project/55c3c788e014044625e9b2a1/HealthKit-Module] is by using a custom {{Entitlements.plist}} file in the project root:        The problem is that the {{Entitlements.plist}} if you do so Titanium [will no longer automatically add|https://github.com/<USER>titanium_mobile/blob/17dc8754653daaff170ea0c18f74218168a5633e/iphone/cli/commands/_build.js#L2219-L2258] any other require entitlements, like TIMOB-19311.    What we need is for this to work exactly [like we handle|https://github.com/<USER>titanium_mobile/blob/17dc8754653daaff170ea0c18f74218168a5633e/iphone/cli/commands/_build.js#L1939] {{Info.plist}}:    # Load/Create our default {{Entitlements.plist}}.  # Merge custom {{Entitlements.plist}} in the project root.  # Merge keys set in {{tiapp.xml}} under {{<ios>/<entitlements>}}  # Do whatever we automatically generate, but only if the key does not already exist (alternatively, do this step after the first so it will be overwritten by the user's keys)    Ideally we would rename {{<ios>/<plist>}} to {{<ios>/<info>}} but that would break all apps ;)","New Feature",High,Closed,"2015-11-11 02:51:46","2015-11-11 02:51:46",5
"The Titanium SDK ","Android: openPhotoGallery fails when remote image selected","Affects Versions: 3.4.1GA ... 5.0.0.GA    This bug was reported earlier here: https://jira.<USER>org/browse/TC-5107 but was closed as fixed with no fix.    Test code      Error  ",Bug,High,Closed,"2015-10-02 14:33:35","2015-10-02 14:33:35",3
"The Titanium SDK ","iOS: Ti.UI.ScrollableView was not shown","In use-autolayout enabled and specification the width/height properties.    Test case.    *tiapp.xml*    {code:xml}  <ios>    <use-autolayout>true</use-autolayout>  </ios>  {code}    *app.js*    {code:javascript}  var win = Ti.UI.createWindow(),    view0 = Ti.UI.createView({      backgroundColor: 'red'    }),    view1 = Ti.UI.createView({      backgroundColor: 'green'    }),    view2 = Ti.UI.createView({      backgroundColor: 'blue'    }),    scrollableview = Ti.UI.createScrollableView({      width: 200, // not the Ti.UI.FILL or SIZE      height: 200, // not the Ti.UI.FILL or SIZE      views: [        view0,        view1,        view2      ]    });    win.add(scrollableview);  win.open();  {code}",Bug,Low,Closed,"2015-11-10 23:50:43","2015-11-10 23:50:43",3
"The Titanium SDK ","iOS: SafariDialog's supported is false on iOS 9.1","The following code:        Will print:        So the example in the docs will fail. The only workaround is to manually check the device's iOS version (or it will crash on older devices if you leave out the check)",Bug,High,Closed,"2015-11-10 15:59:14","2015-11-10 15:59:14",1
"The Titanium SDK ","Android: Fix crash due to GC of UI native proxies in hyperloop","If we generate a native UI proxy (say an android.view.View) and add it to a Titanium UI, we see crashes when the UI is GCed. This can bee easily seen in the hyperloop-examples repo. Once we go to an example where we generate a native view and add it to the UI from Titanium (like say Animate View example) and then go back to the main listing - causing a GC of the elements in that view, we see a crash of the app.",Bug,Critical,Closed,"2015-11-10 14:49:39","2015-11-10 14:49:39",8
"The Titanium SDK ","iOS Layout: Views wrap while their total width % equals 100","The following sample and attached screenshots show that while 4 * 25% = 5 * 20% = 100% the last view is wrapped on iOS. On Android it works as expected.    Enabling auto-layout doen't affect the issue.    *Example*    ",Bug,Medium,Closed,"2015-11-10 09:52:01","2015-11-10 09:52:01",0
"The Titanium SDK ","Cannot build on a Nexus5x device","When trying to build to a Nexus 5x I get the following:        If I use ANY of the “supported ABI’s” mentioned in that message, in the tiapp.xml, they do not work and get the following:        If I enter ANY of those “valid ABI’s”, I get the previous message saying NExus 5x doesn’t support it.    I can confirm that the Nexus 5x has the following: `ro.product.cpu.abi=arm64-v8a`    Here is what a ti info provides on this device:    ",Bug,Medium,Closed,"2015-11-09 23:12:13","2015-11-09 23:12:13",2
"The Titanium SDK ","Label's getRect method returns not a function on Windows Phone 8.1","On Windows Phone 8.1, label's getRect method, which is supposed to return an object throws error: mainText. getRect() is not a function. (In 'mainText.getRect()', 'mainText.getRect' is undefined.  I use this method on Android successfully and I need it to calculate weight of a label.  Another method which is working on iOS is toImage method, but it's iOS only.  Please look at it.  Thank you",Bug,High,Closed,"2015-11-09 12:08:49","2015-11-09 12:08:49",5
"The Titanium SDK ","iOS: Ti.Contacts.getAllPeople() | Custom fields for phone, address and email returns undefined","When trying to show information about contacts from the iOS Contacts app which have custom field names for phone numbers or emails or address, the Ti.Contacts.Person property 'email', 'phone' or 'adress' is undefined. Which means you can't retrieve any of the emails, phone numbers or addresses (with custom field names) associated with the contact.    To replicate, start iOS (version 9.x) simulator. Add a new contact, add one email address with one of the default labels provided by iOS, run test code (see below), the email address is listed in the console (as expected), modify the newly added person and add another email address but define a custom label to this entry, run code, the email property will be undefined. This can also be reproduced for the phone and address properties.    Tested with Ti SDK 5.0.2.GA    ",Bug,Critical,Closed,"2015-11-02 12:56:02","2015-11-02 12:56:02",3
"The Titanium SDK ","Windows: TextField's passwordMask attribute does not work on Windows Phone","TextField's passwordMask attribute does not work on Windows Phone    Run the folowing code:      The TextField displays letter not the *'s it should.  ",Bug,Critical,Closed,"2015-07-13 08:40:05","2015-07-13 08:40:05",8
"The Titanium SDK ","Android: Memory Leak on Window","I open some windows and then close all one by one  except first one. In 4.1.0.GA more then one WindowProxy object remain in memory but must only one. In 3.5.1.GA remain two objects.  In the iphone only first one.        May be related to this changes https://github.com/<USER>titanium_mobile/commit/2b12ad61775920f8045e168ae678ce123dfa14b4#diff-034a9360d01584987d9c951c0a215f65    !memoryleak.png|thumbnail!",Bug,Critical,Closed,"2015-08-04 20:53:39","2015-08-04 20:53:39",5
"The Titanium SDK ","Windows: Some unit tests failed for Windows Store app","Some unit tests in {{NMocha}} failed on Windows Store app. Make sure all tests pass for both Windows Phone and Store.    How to reproduce:    * Create NMocha project for Windows Store app    * Open {{NMocha.WindowsStore.Win32/NMocha.sln}} and run it in Local Machine  * Results are print out to the VS console, make sure all unit tests pass  ",Bug,Medium,Closed,"2015-11-06 06:42:16","2015-11-06 06:42:16",8
"The Titanium SDK ","iOS: Debug crash when setting breakpoint in alloy model response","When setting a titanium studio breakpoint in an alloy model response from a sync adapter that fetches remote content, titanium 3.5.0 crashes in iOS.    Here is an example alloy project that fetches remote content using a custom alloy model adapter:  https://github.com/jkotchoff/alloytest    When run in 'debug mode' in Titanium Studio, setting a breakpoint in the alloy model response will crash the app with SDK 3.5.0 and iOS  ie.  https://github.com/jkotchoff/alloytest/blob/master/app/controllers/index.js#L7    A debug point here works fine in SDK 3.4.1 on iOS and it works fine in Android (SDK 3.4.1 or 3.5.0).    This makes debugging titanium apps that render content from a remote server impossible in 3.5.0 on iOS. ",Bug,Critical,Closed,"2015-02-03 21:19:44","2015-02-03 21:19:44",5
"The Titanium SDK ","Exception when no matching provisioning profile is found: logger is not defined","When I do an ad-hoc build, select a certificate and then the CLI does not found a matching provisioning profile it causes an exception because the logger is not found:        Code:    https://github.com/<USER>titanium_mobile/blob/5_1_X/iphone/cli/commands/_build.js#L943",Bug,None,Closed,"2015-11-05 08:57:14","2015-11-05 08:57:14",1
"The Titanium SDK ","Android: Deep linking is causing crashing","Need some steps to reproduce. This is important for Google App Indexing.",Bug,Medium,Closed,"2015-11-05 00:43:55","2015-11-05 00:43:55",21
"The Titanium SDK ","Android: Support programmatically turning off the splash screen","Google is approaching publishers about supporting App Indexing in their apps. We need this feature to be available.    This appears because of the set up time needed for the app to get ready. If this is turned off, it will just be a blank screen and it will still take time before the app is ready. I think this is something we can’t avoid.    Links to relevant pieces:  * https://github.com/<USER>titanium_mobile/blob/17dc8754653daaff170ea0c18f74218168a5633e/android/titanium/src/java/org/<USER>titanium/TiRootActivity.java  * https://github.com/<USER>titanium_mobile/blob/17dc8754653daaff170ea0c18f74218168a5633e/android/titanium/src/java/org/<USER>titanium/TiLaunchActivity.java.",Improvement,High,Closed,"2015-11-05 00:41:36","2015-11-05 00:41:36",1
"The Titanium SDK ","Android: Support adding Ti.UI.Views to native view groups",,"New Feature",High,Closed,"2015-11-04 19:05:43","2015-11-04 19:05:43",13
"The Titanium SDK ","Android: Support adding native UI elements to Ti.UI.View subclasses","Be able to pass in some subclass of android.view.View into Titanium methods that take Ti.UI.View subclasses (i.e. Ti.Ui.View.add())","New Feature",High,Closed,"2015-11-04 19:04:23","2015-11-04 19:04:23",13
"The Titanium SDK ","Windows: Test Windows 10 universal app under Windows 10 mobile","Build Titanium libs and apps for Windows 10 store (universal), and see if it runs under Windows 10 mobile. https://msdn.microsoft.com/en-us/library/windows/apps/dn894631.aspx suggests that what you build for desktop should also be able to targt phone: https://msdn.microsoft.com/en-us/library/windows/apps/dn894631.aspx",Story,Medium,Closed,"2015-11-04 14:45:36","2015-11-04 14:45:36",5
"The Titanium SDK ","Windows: Revisit skipped mocha test","Currently there are a lot of unit test which is skipped in NMocha. There should be a lot of changes since we introduce mocha tests, so we might want to re-visit these tests and see if it works now. If we still find a test that is failing we need to create a new ticket for it.  ",Story,Medium,Closed,"2015-11-04 09:41:33","2015-11-04 09:41:33",5
"The Titanium SDK ","iOS: Incremental build crashes after removing strings.xml","An incremental build will crash if you remove a {{strings.xml}} file after the previous build.    1. Create a project with an {{i18n/en/strings.xml}} file  2. Build  3. Remove the file  4. Build and see it crash.    The log:    ",Bug,None,Closed,"2015-11-04 09:07:22","2015-11-04 09:07:22",1
"The Titanium SDK ","Android: Deprecate Ti.Android.R.drawable","Related to TIMOB-8453, deprecating drawables since this is considered a bad practice by Google.",Improvement,High,Closed,"2015-11-04 06:59:26","2015-11-04 06:59:26",2
"The Titanium SDK ","Titanium_Mobile_Tests: Cleanup test suites","Some of the unit tests in the suites are old and no longer valid. Have to go through existing ones and remove or update so that TIO2 can pass all the tests.",Improvement,High,Closed,"2015-11-04 05:29:39","2015-11-04 05:29:39",3
"The Titanium SDK ","Drop support for Node.js 0.10.x AND 0.12.x","Node.js 0.10.0 was released in March 2013. 0.10.x hasn't been actively developed since April 2014. All releases since then have been security or critical fixes.    Node.js 0.12.0 was released Feb 2015 and hasn't been actively developed since July 2015.    While all of the code could be made to work with Node.js 0.10 and 0.12, there's a couple of reasons to drop support and immediately jump to Node.js 4.x or newer    1. We would reduce our test surface area  2. We would be using an actively supported Node.js version  3. We could start leveraging some of the Node.js 0.12 new features such as child_process.spawnExec() which would simply code.  4. We would be able to use some ES2015 features    To accomplish this, we need to:  * Update the engines section in each project's package.json  * Titanium CLI has a check that would need to be updated (https://github.com/<USER>titanium/blob/master/lib/titanium.js#L31-L36)  * Titanium SDK's package.json vendorDependencies would need to be updated  * Studio would need to ship a more recent version of Node.js",Improvement,High,Closed,"2015-11-04 03:41:15","2015-11-04 03:41:15",1
"The Titanium SDK ","Windows: Jenkins test script should select an 8.1 emulator","With the Windows 10 SDK installed the default deviceId {{8-1-1}} that we deploy to becomes a Windows 10 Emulator. This causes the test to fail.    !http://puu.sh/l7riT/91952a1700.png!    We should select a Windows 8.1 Emulator to run the test.",Bug,None,Closed,"2015-11-03 23:53:46","2015-11-03 23:53:46",5
"The Titanium SDK ","Conditionally compile in Hyperloop code changes",,Improvement,Medium,Closed,"2015-11-03 16:50:54","2015-11-03 16:50:54",5
"The Titanium SDK ","iOS: Permissions (Geolocation) Bugs in implementation & documentation","While working on the permissions sample app I ran into some irregularities:    * The API reference for [hasLocationPermissions|https://docs.<USER>com/platform/latest/#!/api/Titanium.Geolocation-method-hasLocationPermissions] lists all {{AUTHORIZATION_*}} constants as possible values, while only {{AUTHORIZATION_ALWAYS}} and {{AUTHORIZATION_WHEN_IN_USE}} are valid.  * The API reference for [requestLocationPermissions|https://docs.<USER>com/platform/latest/#!/api/Titanium.Geolocation-method-requestLocationPermissions] lists all {{AUTHORIZATION_*}} constants as possible values, while only {{AUTHORIZATION_ALWAYS}} and {{AUTHORIZATION_WHEN_IN_USE}} are valid.  * The implementation of [requestLocationPermissions|https://github.com/<USER>titanium_mobile/blob/1607237763f9e490e41d98b8d711ac49eeb01043/iphone/Classes/GeolocationModule.m#L879-L884] seems to call the {{locationPermissionManager}} twice if the first statement is false:        * On Android {{Ti.Calendar.requestCalendarPermissions}}, {{Ti.Contacts.requestContactsPermissions}} and {{Ti.Media.requestCameraPermissions}} will call back with {{success:false}} if the required permission is missing in {{tiapp.xml}} but on iOS {{Ti.Geolocation.requestLocationPermissions}} will not call back at all when the required {{NSLocation*UsageDescription}} key is missing in {{tiapp.xml}}. It should call back with {{success:false}} as well.  * If you don't allow permission when asked by {{Ti.Calendar.requestCalendarPermissions}} or {{Ti.Contacts.requestContactsPermissions}} it will call back with {{success:false}} but {{Ti.Geolocation.requestLocationPermissions}} does not call back at all.  * For both {{hasLocationPermissions}} and {{requestLocationPermissions}} wouldn't the expected behaviour be that if {{AUTHORIZATION_ALWAYS}} was granted then {{AUTHORIZATION_WHEN_IN_USE}} would be seen as granted as well since always > when in use?",Bug,High,Closed,"2015-11-03 09:43:23","2015-11-03 09:43:23",3
"The Titanium SDK ","Android: CardView's cardMaxElevation should (marked as) be creation-only","As explain in the [Android Reference|https://developer.android.com/reference/android/support/v7/widget/CardView.html#attr_android.support.v7.cardview:cardElevation] and confirmed by tests I did the {{cardMaxElevation}} property is creation-only. Changing it later has no effect.",Bug,Medium,Closed,"2015-11-02 12:44:28","2015-11-02 12:44:28",2
"The Titanium SDK ","Android: CardView cardPreventCornerOverlap and cardUseCompatPadding should not start with card","I think it's great that we follow the [platform API|https://developer.android.com/reference/android/support/v7/widget/CardView.html] for CardView, but for {{cardPreventCornerOverlap}} and {{cardUseCompatPadding}} we don't. On Android there are no properties, but only methods and these don't start with {{card}}. To match this in Titanium the properties shouldn't start with this either so our getters and setters match those of the platform.",Improvement,None,Closed,"2015-11-02 09:36:01","2015-11-02 09:36:01",3
"The Titanium SDK ","Tio2: iOS device not working with TIO2 using latest ioslib","{{tio2 --sdk 5.1.0.v20151026164636 --platform ios --target device ./}}  on titanium_mobile_tests will give the below error:    ",Bug,High,Closed,"2015-11-02 08:46:41","2015-11-02 08:46:41",8
"The Titanium SDK ","Titanium_mobile_tests: Test suites unable to build due to missing DefaultIcon.png","When executing tio2 on the test suites in titanium_mobile_tests repo, it fails with missing DefaultIcon.png.",Bug,High,Closed,"2015-11-02 08:31:20","2015-11-02 08:31:20",3
"The Titanium SDK ","Windows: Fix Jenkins Windows SDK PR Build","Currently all tests in Jenkins Windows SDK PR Build are failing. Seems like they are failing when launching emulator. Do we change something recently?        * http://studio-<USER><USER>org/job/titanium_mobile_windows_prs/1437/  * http://studio-<USER><USER>org/job/titanium_mobile_windows_prs/1441/  * http://studio-<USER><USER>org/job/titanium_mobile_windows_prs/1440/",Bug,High,Closed,"2015-11-02 02:41:50","2015-11-02 02:41:50",5
"The Titanium SDK ","Windows: Missing TitaniumKit View properties","TitaniumKit View implements only few properties and there's a lot of missing properties. Such as {{anchorPoint}}, {{focusable}} and so on.  ",Bug,Medium,Closed,"2015-11-02 02:33:16","2015-11-02 02:33:16",8
"The Titanium SDK ","Windows: Missing properties for TitaniumKit Proxy","Some {{Proxy}} properties are not implemented in TitaniumKit, such as {{apiName}} and {{bubbleParent}}.",Bug,Medium,Closed,"2015-11-02 02:28:24","2015-11-02 02:28:24",5
"The Titanium SDK ","Allow users to access images via Ti.Filesystem when app thinning is enabled","Because of TIMOB-19757 we have made app-thinning of image assets optional (for existing projects).    This means that when a developer needs to have access to an image via {{Ti.Filesystem.getFile()}} he has to disable app-thinning for *all* images.    We need a better solution for this.    Some thoughts:    * Provide away to exclude images from asset catalogs  ** (n) Requires new folder or meta file  * Modify {{Ti.Filesystem.getFile()}} to find images in asset catalogs  ** (n) Requires hack to recognise image requests under resourceDirectory and translate that to {{[UIImage imageNamed:@my-name];}}  * Add {{Ti.Filesystem.getAsset()}} to get an asset via {{[UIImage imageNamed:@my-name];}}  ** (y) Looks like the best option.",Improvement,High,Closed,"2015-10-30 10:34:57","2015-10-30 10:34:57",5
"The Titanium SDK ","Confusing: Did not find a release... Found release","The wording when installing a non-release version is confusing:        *Suggestion*    Replace second _release_ with _build_:    ",Improvement,Low,Closed,"2015-10-30 07:30:18","2015-10-30 07:30:18",1
"The Titanium SDK ","If you do not have the correct app icons, then a smarter error message should apear","*Details:* Currently, if you were to follow the following test cases from TIMOB-19809:    ||Required App Icons||DefaultIcon.png||DefaultIcon-ios.png||Expected Result||  |Missing 1 required icon|no|no|build fails|  |Icon has wrong size|no|no|build fails|    Then, the following error message will appear:      *Expected:* The error message should be more precise e.g. please generate DefaultIcon-ios.png and include <EMAIL> (152X152).",Improvement,Medium,Open,"2015-10-30 00:45:13","2015-10-30 00:45:13",5
"The Titanium SDK ","Update node-ios-device, ioslib, and TiSDK to work with Node.js 5.0","Node.js 5.0 is out and the module api version was bumped to 47, so node-ios-device needs to be updated, as well as ioslib and tisdk.",Improvement,High,Closed,"2015-10-29 21:37:58","2015-10-29 21:37:58",8
"The Titanium SDK ","Android module build should support AIDL files","I've added a .aidl file to my module. Building the module doesn't generate a java file from the interface.  Comment: these files are used to bind to an out-of-<USER>service (e.g. IInAppBillingService.aidl from play_billing sdk), or to a private native service.    To reproduce, just put the attached file in src/com/android/vending/billing and build. a Java file with the same name should be generated and compiled with the module.",Improvement,High,Closed,"2014-12-21 09:11:05","2014-12-21 09:11:05",3
"The Titanium SDK ","Android: ConcurrentModificationException at TiListView","h6.Reproduce Step:  1. Simply the test case attached.  2. Scroll down until exception throw out and app crash.    h6.Exception      h6.Note  1. It was working well in SDK 3.5.1.GA, but after upgrade to 5.0.x, it happened.  2. Basically test code is using ListView.setMarker() heavily to track which row the user has scrolled to and loading of additional rows.   3. Only happens on Android, iOS works well.",Bug,High,Closed,"2015-10-29 04:03:59","2015-10-29 04:03:59",5
"The Titanium SDK ","Android: Picker spinner columns and its items are not sized/positioned correctly on Android 5.0 and higher","Steps to reproduce:    * Create a view with a   * Create a PickerColumn with 9 PickerRows and add it into the Picker.  * It will look strange (see attached image). The number is not in the middle of the selection indicator.  !Screen Shot 2015-10-07 at 11.29.08.png|thumbnail!    * Try setting your PickerColumn height or width to double its size: it gets worse. The selection indicator always shows 2 rows below what is currently selected.   In the image below the first 3 picker columns are selecting the first row (0), but what is actually being shown is that the 2 is selected. The 4th column selecting the last row (9), but what is being shown is that white space.   !Screen Shot 2015-10-07 at 11.31.06.png|thumbnail!    What i've tried:  * Tested on Ti SDK 4.1.0GA, 5.0.1GA and 5.0.3.v20151002003129  * Tested on both android 5.1.0 (simulator) and 4.4.2 (real device)  * Setting each picker row's height doesn't change anything",Bug,High,Closed,"2015-10-07 14:43:53","2015-10-07 14:43:53",5
"The Titanium SDK ","Android 6.0: Device & emulator logs don't show up in studio console","*Checked with latest 5.0.3 & 5.0.2.GA & did not see any logs from android 6.0 in studio.*    h5.Steps To Reproduce:  1. Use the code below in your app.js:    2. Build for android 6.0 device/emulator.  3. After the app launches tap on the button & the window & check if you see  logs in the studio console.    h5.Actual Results:  1. No logs are seen on studio console from android 6.0 device/emulator.  *Note: The logs appear fine on android logcat.*    h5.Expected Results:  1. We should see logs from android 6.0 device/emulator on studio console.  ",Bug,High,Closed,"2015-10-29 00:36:37","2015-10-29 00:36:37",5
"The Titanium SDK ","Windows: Ti.Database.ResultSet fieldName() function crashes app ","Run the code below in the Windows Emulator.      RESULTS:  ",Bug,High,Closed,"2015-10-28 23:10:47","2015-10-28 23:10:47",5
"The Titanium SDK ","iOS: Disable ATS in builtin KitchenSink by default","Currently we need to disable iOS9 App Transport Security (ATS) in the builtin KitchenSink (titanium_mobile/demos/KitchenSink) whenever we want to test any ticket related to webview, httpclient, etc.     As we disable ATS in our SDK as well, we should change this setting in the Titanium.plist of the Xcode project.    *Example:*      *Expected behavior:*  The image loads.    *Actual behavior:*  An ATS error is thrown:      *Solution:*  ",Improvement,Low,Closed,"2015-10-28 22:38:25","2015-10-28 22:38:25",1
"The Titanium SDK ","iOS: Assets missing when building (ad-hoc) from Xcode","Several users have reported on the Q&A that when packaging a project for Adhoc/Enterprise via Xcode the assets are not included or at least do not show in ImageViews etc.    It works fine if you build from Studio/CLI or if you build to device/sim from Xcode instead of packaging for Adhoc/Enterprise.    https://community.<USER>com/topic/3426/images-not-loading-xcode-7-appc-5-0/3  http://stackoverflow.com/questions/34830359/<USER>application-throwing-app-js-not-found-on-device/34875663#34875663    ",Bug,High,Closed,"2015-10-28 10:49:42","2015-10-28 10:49:42",3
"The Titanium SDK ","Android: HTTPClient multipart header error","The following code (upload a blob to the server), creates malformed http header:    This creates the request:    Note the double quotes for the name part:  Content-Disposition: form-data; name=*file*; filename=tixhr1851009574.png    I've traced the bug to {{TiHTTPClient.java}} at {{addFilePart(String name, ContentBody contentBody)}}. The extra  comes when appending the filename argument.",Bug,High,Closed,"2015-10-12 13:19:24","2015-10-12 13:19:24",1
"The Titanium SDK "," Windows: Support Windows 10 Mobile","Currently Windows 10 mobile is not supported because we think it's too early yet. We might want to consider supporting it once Microsoft has released it officially.",Epic,High,Closed,"2015-10-28 05:06:55","2015-10-28 05:06:55",0
"The Titanium SDK ","TI.UI.FILL does not work on Android and Mobile Web",,Bug,Critical,Closed,"2015-10-25 21:37:01","2015-10-25 21:37:01",13
"The Titanium SDK ","Android: Arbitrary ListView template height.","On the Android platform ListView Items have an arbitrary minimum height of 30dp. There is nothing in the Android SDK preventing a user from creating a List with items that have a smaller height than 30dp. This is restricting flexibility in Titanium.    This ticket was created out of a discussion in the Community Q & A.  https://community.<USER>com/topic/3106/listview-template-properties-s-height-problem    https://github.com/<USER>titanium_mobile/commit/4c4c5cbeef8883827e97afc15769fe9c46eecbd8",Bug,Medium,Closed,"2015-10-26 13:25:01","2015-10-26 13:25:01",3
"The Titanium SDK ","Windows: Unable to select a Windows 10 mobile emulator in selection prompt","h5.Description    When building a project using {{appc run -p windows}}, if selecting a Windows 10 emulator then the prompt will be re-shown without any error being fed back to the user.     If building and passing in the emulator ID, such as {{appc run -p windows -T wp-emulator -C 8-1-1}} then the CLI will show the error {{\[ERROR\] Invalid device id Mobile Emulator 10.0.10240.0 WVGA 4 inch 512MB: Windows 10 Mobile Emulator is not supported'}}    *Notes*    If this check is taken out and the a Windows 10 mobile emulator is selected then the build will eventually error out with the below on install         h5.Steps to reproduce    1. Ensure you have Windows 10 mobile emulators installed  2. Build a project using {{appc run -p windows}}  3. Select a Windows 10 mobile emulator such as Mobile Emulator 10.0.10240.0 WVGA 4 inch 512MB  4.  Build a project using {{appc run -p windows -T wp-emulator -C 8-1-1}}    h5.Actual result    3. The emulator will not be selected, the prompt will be re-shown and there will be no feedback as to why  4. The build will error with a message similar to {{\[ERROR\] Invalid device id Mobile Emulator 10.0.10240.0 WVGA 4 inch 512MB: Windows 10 Mobile Emulator is not supported'}}    h5.Expected result    Emulators that are not supported should not be shown as an option to build to",Bug,Medium,Closed,"2015-10-28 00:19:16","2015-10-28 00:19:16",5
"The Titanium SDK ","iOS: There are missing app icons error is returned if you build a mobile project pre-5.0.0 stack","*Details:* There are missing app icons error is returned if you build a mobile project pre-5.0.0 stack that *DOES have all required app icons.*    *Steps to reproduce:*  # Create an Alloy project using pre-5.0.0 stack:  ** Appc CLI NPM: 4.1.1  ** Appc CLI Core: 4.1.3  ** SDK: 4.1.0.GA  ** Node: v0.12.7  ** OS: El Capitan (10.11.1)  # After the Alloy project is created, switch your environment to 5.1.X stack; see above environment field  # Next, clean your Alloy project with {{appc ti clean}}  # Then, install your Alloy project to an iOS device    *Actual:*  There are missing app icons error and 'alpha channel' warnings are returned; see attachment.  *Expected:*     ||Required App Icons||Optional App Icons||DefaultIcon.png||DefaultIcon-ios.png||Expected Result||  |All present, correct size, no alpha|All present, correct size, no alpha|doesn't matter|doesn't matter|build succeeds|  |Missing 1 required icon|All present, correct size, no alpha|no|no|build fails|  |Missing 1 required icon|All present, correct size, no alpha|yes w/o alpha|no|missing icon generated from DefaultIcon.png, build succeeds|  |Missing 1 required icon|All present, correct size, no alpha|yes w/ alpha|no|DefaultIcon.png flattened, missing icon generated from DefaultIcon.png, build succeeds|  |1 or more icons have alpha|All present, correct size, no alpha|none|none|app icon is flattened, build succeeds|  |1 or more icons have alpha|All present, correct size, no alpha|yes w alpha|none|app icons are flattened, build succeeds|  |1 or more icons have alpha|All present, correct size, no alpha|yes w alpha|yes w/o alpha|generates non-alpha icons from DefaultIcon-ios.png, build succeeds|  |Icon has wrong size|All present, correct size, no alpha|no|no|build fails|  |Icon has wrong size|All present, correct size, no alpha|yes w/o alpha|no|generates app icon from DefaultIcon.png with correct size, build succeeds|  |Icon has wrong size|All present, correct size, no alpha|yes w/ alpha|no|flattens DefaultIcon.png, generates app icon from DefaultIcon.png with correct size, build succeeds|  |Icon has wrong size|All present, correct size, no alpha|yes w/ alpha|yes w/o alpha|generates app icon from DefaultIcon-ios.png with correct size, build succeeds|  |All present, correct size, no alpha|Missing app icon|no|no|prints warning, build succeeds|  |All present, correct size, no alpha|Missing app icon|yes w/ alpha|no|DefaultIcon.png flattened, missing icon generated from DefaultIcon.png, build succeeds|  |All present, correct size, no alpha|Missing app icon|yes w/ alpha|yes w/ alpha|DefaultIcon-ios.png flattened, missing icon generated from DefaultIcon-ios.png, build succeeds|  |All present, correct size, no alpha|Missing app icon|yes w/ alpha|yes w/o alpha|Missing icon generated from DefaultIcon-ios.png, build succeeds|",Bug,Critical,Closed,"2015-10-27 23:41:00","2015-10-27 23:41:00",8
"The Titanium SDK ","KitchenSink: BasicUi->Views->ScrollViews->Many on screen causes app to freeze","While auto layout is enabled , calling BasicUi->Views->ScrollViews->Many on a Screen causes the app too freeze. Works as excpected with auto layout disabled.",Bug,High,Closed,"2015-10-27 22:20:12","2015-10-27 22:20:12",5
"The Titanium SDK ","KitchenSink: Control->Buttons.Image is positioned on top of the label and can't be resized. ","When auto layout is enabled it causes the camera png to be placed onto of the label instead of the side, regardless what the position of the image gets set too.  Controls->Button. See image for reference. ",Bug,Critical,Closed,"2015-10-27 21:46:11","2015-10-27 21:46:11",5
"The Titanium SDK ","Windows: Modify Windows SDK build process to grab and use JavaScriptCore from a URL","Our current build for Windows SDK assumes we have a pre-built JSC installed on the machine and an environment variable pointing at it. This means that we have to VPN and RDP into the build agents to set up a new/different JSC build to use - grab the zip, unzip it, and then change the environment variable JavaScriptCore_HOME to point at the new folder. This means we can't try out new versions of JSC in a new build or PR.    We should change the build scripts (in groovy and/or the node scripts) to be able to point at a new JSC build URL to use for the build - so that we can make PRs that update JSC and see if the build/tests pass, and so that we eliminate the manual steps in setting up the build.",Story,High,Closed,"2015-10-27 14:00:24","2015-10-27 14:00:24",5
"The Titanium SDK ","Android: CardView should not have both borderRadius and cardCornerRadius","The CardView is documented to have both {{borderRadius}} and {{cardCornerRadius}}. Both also work, be it with different result because cardCornerRadius does not use the default unit (TIMOB-19798).    Unless there is a valid reason to have both (which should then be clearly documented) I suggest that we only have {{borderRadius}} for consistency within the SDK.    ",Improvement,None,Closed,"2015-10-27 12:12:36","2015-10-27 12:12:36",1
"The Titanium SDK ","Android: CardView should use standard property names","The following sample shows that both {{backgroundColor}} and {{cardBackgroundColor}} work, but the one with {{backgroundColor}} doesn't show a border/corner radius. Because of TIMOB-19801 I cannot verify, but I guess when I would set both I would see a rectangle without radius behind one that has?    Is there an actual use case to have both (working, if we resolve TIMOB-19801)? If so, then we need to document the difference. If not, then I'd say we rename {{cardBackgroundColor}} to {{backgroundColor}}.        *UPDATE:* I'm not convinced deviating from standard properties like [backgroundColor|https://<USER>github.io/appc-docs/latest/#!/api/Titanium.UI.View-property-backgroundColor], [borderRadius|https://<USER>github.io/appc-docs/latest/#!/api/Titanium.UI.View-property-borderRadius], [elevation|https://<USER>github.io/appc-docs/latest/#!/api/Titanium.UI.View-property-elevation] and [*Padding|https://<USER>github.io/appc-docs/latest/#!/api/Titanium.UI.TextField-property-paddingLeft].    * *Pro:* Easier to translate what you read in the [Android reference|https://developer.android.com/reference/android/support/v7/widget/CardView.html] to your Titanium app.  * *Con:* Titanium developers are used to our naming conventions throughout what is after all a cross-platform SDK, even for platform-specific components.    Given my experience that most Titanium developers do not read the target platform references but rely on our docs and - lazy as developers are - the predictability of our API I think we should:    * Remove the {{card}} prefix from the CardView specific properties.  * Rename {{(card)CornerRadius}} to {{borderRadius}}.  * Remove the {{content}} prefix from the {{contentPadding*}} properties.",Improvement,Low,Closed,"2015-10-27 12:05:36","2015-10-27 12:05:36",3
"The Titanium SDK ","Android: CardView causes crash when cardCornerRadius AND backgroundColor are set","The following sample demonstrates that the app crashes when you use both the {{backgroundColor}} and {{cardCornerRadius}} property on a CardView. If you use {{cardBackgroundColor}} instead it works.        *Logs*    ",Bug,None,Closed,"2015-10-27 11:54:43","2015-10-27 11:54:43",1
"The Titanium SDK ","IOS8: Push notifications denied due to insufficient power budget","Low power mode is suppose to be a new feature introduced from iOS9, but one of customer keep get Push notifications deny due to Insufficient power budget on iOS8 device.    {quote}  Our app rely on silent push notifications to wake up and report location, however in iOS8 (at least) when the app has been left still for a few hours it enters a power budget state which obviously deny all incoming push notification. It appears as if when the app is opened and reused it starts receiving notifications again, however this is not a preferred behaviour.  {quote}    Attached a screen shot for log file.",Bug,None,Resolved,"2015-10-27 01:09:24","2015-10-27 01:09:24",0
"The Titanium SDK ","iOS: ioslib: TypeError: Cannot read property 'sort' of undefined","Appears that we need some better error checking. I don't have the specific instance to recreate, though the code appears to be vulnerable here:      /usr/local/bin/node /Users/<USER>.<USER>install/5.0.3/package/node_modules/appc-cli-titanium/node_modules/titanium/bin/titanium build -l trace --plugin-paths /Users/<USER>.<USER>install/5.0.3/package/node_modules --config-file /var/folders/jf/k0njrhzd5nb9q91mdm4ymr380000gp/T/build-1445886520214.json --no-banner    ",Bug,High,Closed,"2015-10-26 19:16:19","2015-10-26 19:16:19",8
"The Titanium SDK ","CardView: contentPadding(X) and cardCornerRadius should use default unit","The following sample and attached screenshot demonstrate that the 5 {{contentPadding}} properties and {{cardCornerRadius}} do not use the default unit but are a Number used with {{px}}.    It should use the default unit like all views.    ",Bug,High,Closed,"2015-10-26 16:01:16","2015-10-26 16:01:16",5
"The Titanium SDK ","Android: CardView Layout property not working as expected","The new {{Ti.UI.CardView}} is [documented|https://<USER>github.io/appc-docs/latest/#!/api/Titanium.UI.Android.CardView-property-layout] to support the {{layout}} property - as one would expect - but it does not behave as expected.    The following sample code and attached screenshot demonstrates that none of the {{layout}} values work and that whatever mechanism is used by default is not composite since the labels are aligned top left instead of the expected centre. The first card has a view to wrap the labels to show what I'd expect for the other vertical-card to be like. However, there as well is shows that thew view is not filling up the parent as it normally does.    ",Bug,High,Closed,"2015-10-26 15:04:02","2015-10-26 15:04:02",8
"The Titanium SDK ","Android: Update native code to work against latest LTS V8 APIs","Once the V8 library is updated we'll need to do some significant work to update our native C++ code. There have been a number of large breaking API changes in V8 that we'll need to handle.    See:   * https://strongloop.com/strongblog/node-js-v0-12-c-apis-breaking/   * https://developers.google.com/v8/embed",Story,Critical,Closed,"2015-10-26 14:50:25","2015-10-26 14:50:25",13
"The Titanium SDK ","Android: Recompile Native modules against latest LTS of V8 library","Once we've update the V8 library we use to compile Android against, we likely will break all native modules. We'll want to update and recompile the core set of native modules we want to maintain.    <USER>aca: https://github.com/<USER>modules/<USER>aca  <USER>apm: https://github.com/<USER>modules/<USER>apm  <USER>encrypteddatabase: https://github.com/<USER>modules/<USER>encrypteddatabase  <USER>https: https://github.com/<USER>modules/<USER>https  <USER>syncserver.client: https://github.com/<USER>modules/<USER>syncserver.client  cloudpush: https://github.com/<USER>modules/cloudpush  ti.admob: https://github.com/<USER>modules/ti.admob  ti.cloudpush.mqtt: https://github.com/<USER>modules/ti.cloudpush.mqtt  ti.compression: https://github.com/<USER>modules/ti.compression  ti.crypto: https://github.com/<USER>modules/ti.crypto  ti.facebook: https://github.com/<USER>modules/ti.facebook  ti.geofence: https://github.com/<USER>modules/ti.geofence  ti.imagefactory: https://github.com/<USER>modules/ti.imagefactory  ti.ldap: https://github.com/<USER>modules/ti.ldap  ti.map: https://github.com/<USER>modules/ti.map  ti.moddevguide: https://github.com/<USER>modules/ti.moddevguide  ti.omniture: https://github.com/<USER>modules/ti.omniture  ti.paypal: https://github.com/<USER>modules/ti.paypal  ti.touchid: https://github.com/<USER>modules/ti.touchid  ti.urbanairship: https://github.com/<USER>modules/ti.urbanairship  ",Epic,Critical,Closed,"2015-10-26 14:48:56","2015-10-26 14:48:56",0
"The Titanium SDK ","Android: Update makefiles and build.xml to build against latest LTS of V8 library","We'll need to update some build files to target the new V8 library once it's ready. Specifically:    Point to the new version number here: https://github.com/<USER>titanium_mobile/blob/master/android/build/libv8.properties    Update the makefiles to handle the new libs (which are built into separate static libraries, not a single libv8.a):  - https://github.com/<USER>titanium_mobile/blob/master/android/runtime/v8/Application.mk  - https://github.com/<USER>titanium_mobile/tree/master/android/runtime/v8/src/ndk-modules/libv8  - https://github.com/<USER>titanium_mobile/blob/master/android/runtime/v8/src/native/Android.mk  - https://github.com/<USER>titanium_mobile/blob/master/android/runtime/v8/src/native/common.mk    Possibly update the ant build.xml to grab the built library:  https://github.com/<USER>titanium_mobile/blob/master/android/build/common.xml#L694",Story,High,Closed,"2015-10-26 14:47:29","2015-10-26 14:47:29",5
"The Titanium SDK ","Android: Update v8_titanium build process to build latest LTS of V8","Looks like current stable is now 4.6.85 of V8, though given how long all the pieces to do this will take, we may want to target 4.8 which is the current dev channel (the stable branch gets moved every 6 weeks).    https://github.com/<USER>v8_titanium",Story,High,Closed,"2015-10-26 14:37:51","2015-10-26 14:37:51",13
"The Titanium SDK ","Android: Update V8 to latest LTS release","Our  current version of V8 that Android (and native modules) are built against is V8 3.9.24.29. That version is from mid-May 2012. It is very, very out of date. We should move to a more recent Long Term Support version of V8 engine to gain ES6 functionality as well as significant performance increases.    It's worth noting that the is a major change and will break backwards compatibility of native modules, and _may_ force us to drop support for older Android releases. See https://en.wikipedia.org/wiki/Google_Chrome_release_history where it looks like Chrome app dropped support for Android 4.0 with the 43.0.257 release (which uses V8 4.3.61).    Here's the changelog up to 3.31.1: https://code.google.com/p/v8/source/browse/trunk/ChangeLog  Here's the changelog for 4.8.151: https://github.com/v8/v8/blob/4.8.151/ChangeLog",Epic,High,Closed,"2015-10-26 14:32:49","2015-10-26 14:32:49",0
"The Titanium SDK ","Windows: Docs - Clarify requirements & installation","Per [~<USER> on TIMOB-19750:     {quote}  We might want to clarify http://docs.<USER>com/platform/latest/#!/guide/Installing_the_Windows_Phone_SDK-section-43306274_InstallingtheWindowsPhoneSDK-VisualStudio which could be read as Visual Studio 2015 being higher then VS2013 Community as well.  {quote}    Also, we might want to revisit installation docs about use with VS 2015 and Windows 10.",Story,Medium,Closed,"2015-10-26 12:45:18","2015-10-26 12:45:18",5
"The Titanium SDK ","titanium_mobile_tests will fail without DefaultIcon.png","When executing tio2 on the test suites in titanium_mobile_tests repo, it fails with missing DefaultIcon.png.  ",Bug,High,Closed,"2015-10-26 08:59:26","2015-10-26 08:59:26",3
"The Titanium SDK ","Tio2: iOS Simulator not working with TIO2 using latest ioslib","Tio2 currently cannot launch simulators using the latest ioslib.   execute *tio2 -s 5.1.0.v20151026164636 -p ios -t simulator -l debug ./* in titanium_mobile_tests will fail to launch simulator, even though it's built successfully.",Bug,High,Closed,"2015-10-26 08:57:29","2015-10-26 08:57:29",8
"The Titanium SDK ","Android: Cloud Files Create Error Invalid Name","This is working correctly in SDK 4.1.0.GA.    Using 5.0.2.GA and the code below:        Produces error:-      Ticket created based on information from: https://community.<USER>com/topic/3825/cloud-files-create-error-invalid-name/",Bug,High,Closed,"2015-10-26 03:52:11","2015-10-26 03:52:11",5
"The Titanium SDK ","Missing launch screen warning for non-existing landscape mode","I receive a build warnings, that 2 launch screens are missing:        But the landscape mode for the iPad is disabled in the tiapp:      *Expected behavior*: Non-existing launch screens should be ignored, if the app does not support a certain device orientation  *Actual behavior*: Non-existing launch screens throws a warning.",Bug,Low,Closed,"2015-10-22 02:47:53","2015-10-22 02:47:53",1
"The Titanium SDK ","Android orientations on orientationchange not providing accurate results in some Android Tablets","h6.Issue description  With the new Titanium SDK, SINCE 4.1.0, Android tablets that have their default orientation in landscape are reporting it's orientation as portrait when it is actually landscape and landscape when it is actually portrait. The customer experienced this issue using the Samsung Galaxy Tab 3 model GT-P5210.    h6.Steps to replicate  -Create a new titanium alloy project  -Open the app folder  -Replace the index.xml file inside views folder, the index.tss file inside styles folder and the index.js file inside controllers  -Change orientation in emulator  -Build and run  -Device Orientation is sometimes detected as portrait when it is actually landscape and landscape when it is actually portrait  ",Bug,High,Closed,"2015-10-23 20:22:21","2015-10-23 20:22:21",5
"The Titanium SDK ","iOS: ListView separator has huge margins on iOS 9","h6.Issue Description  Titanium does not appear to support setting the new iOS 9 feature cellLayoutMarginsFollowReadableWidth.     **Attached Screen Shots    h6.Steps to replicate   -Download the attached BugSample.zip file  -Import the project to <USER>studio  -Build and run",Bug,Critical,Closed,"2015-10-23 17:12:05","2015-10-23 17:12:05",5
"The Titanium SDK ","iOS Profiler: Studio Error getting the performance data snapshot","h6.Issue Description  When the user click on the Capture performance profile button the alert with the message:    Error getting the performance data snapshot    and the snapshot is not captured    h6.Expected behavior  capture a snapshot without errors    h6.Steps to Replicate:     1. Create a new titanium alloy/classic default project   2. Run as profile on any iOS simulator   3. In the profile view click the Capture Performance Profile  4. The alert is displayed with the error     ** Profile log and Ti info attached    Additional note:     This is not happening in all my projects, I also have other project where I can capture the snapshot and the Ti version is the same. In Android Works perfectly on Titanium SDK 3.5.1.GA, 4.0.0.GA, 4.1.0.GA. ",Bug,High,Closed,"2015-09-02 16:12:01","2015-09-02 16:12:01",8
"The Titanium SDK ","iOS: Sample app crashes on start with SQLite error related to analytics","After a few successful builds to my iPhone 6S the new [3D Touch Sample App|https://github.com/<USER>developer-relations/appc-sample-3dtouch] started crashing when launched. The only way to fix it was to remove the app and then redeploy it. Replacing the app with a new build without removing it didn't resolve it.    A full crash log attached, which makes it more clear this is related to our analytics.    Our analytics should me as fool-proof as we can make it. We should catch all exceptions to prevent the app from crashing even though that means analytics is no longer working.    *Console*    ",Story,High,Closed,"2015-10-23 06:24:34","2015-10-23 06:24:34",5
"The Titanium SDK ","Android: Hide the Soft Navigation Bar","h6. Issue description:  Customer needs to hide the navigation bar (Not the title bar at the top but the bar at the bottom which has the back and home button). Nexus devices have this on screen navigation bar. Android allows developers to hide the navigation bar http://developer.android.com/training/system-ui/navigation.html. Customer primarily need to use it to hide the bar during launching of the app. The navigation bar cuts off the splash screen.     **Image screen shot attached","New Feature",High,Open,"2015-10-22 21:56:38","2015-10-22 21:56:38",5
"The Titanium SDK ","iOS needs changes to support Hyperloop proxy binding","We need to make changes to the Kroll binding to be able to detect our proxies stored in JSValueRef so that we can pass native Hyperloop objects to Titanium (for example, passing UIView to a Ti.View to be rendered).",Story,High,Closed,"2015-10-22 20:08:57","2015-10-22 20:08:57",2
"The Titanium SDK ","iOS: toImage does not honor the scale factor for retina devices","We used to have a {{honorScaleFactor}} property, that was removed as part of the 4.0.0.GA release in [this PR|https://github.com/<USER>titanium_mobile/pull/6302] around changes with non-attached images. The [docs|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.ImageView-method-toImage] say, the property was already removed in 3.5.0, but worked until 3.5.1.GA. I would like to get this property back to achieve a proper behavior in the following use case.    *Use case*: Use {{toImage()}} to make an image (blob) of a view, that covers a specified square inside another view.    *Demo:*      *Expected behavior*: The method works same on retina and non-retina devices.  *Actual behavior:* The method uses the wrong scale on creating the image blob.    *Proposal*: Bring back the {{honorScaleFactor}} property, make the default value to {{true}} as the current behavior expects. That would achieve the configuration of the property, but would not break any existing applications.  ",Bug,Low,Closed,"2015-10-22 18:10:55","2015-10-22 18:10:55",3
"The Titanium SDK ","Android: Modifying current/root activity's content view in app.js gets overwritten by default layout","By default the Android TiBaseActivity will basically load app.js and then set a default layout. When the runtime is executed async (on the runtime thread) then this layout gets set before the user has time to modify the content view. If not using hyperloop, you have no ability to modify the content view.    So this issue is specific to hyperloop when running on the UI thread.    We should avoid overwriting with a default layout if the user's app has set the content view on the activity.",Bug,High,Closed,"2015-10-22 17:50:39","2015-10-22 17:50:39",5
"The Titanium SDK ","iOS Debugger/profiler fails when run-on-main-thread is enabled","iOS app Debugging/profiling is getting failed with Mac OS El Capitan. Please find the error below.  But this works fine if I disable run on main thread flag from iOS section in tiapp.xml file.  TISTUD-7799 is the related ticket for this.         Please find the complete console log here.  ",Bug,High,Closed,"2015-10-22 09:59:22","2015-10-22 09:59:22",21
"The Titanium SDK ","iOS: Enabled main thread produces unexpected behavior","The main thread is enabled by default in Ti SDK 5.1.0 and later. This just produced quite a lot unexpected behaviors on my projects, here some of them:  * Click events on some views not working  * Picker does not appear any more    Disabling the usage of the main thread manually resolves all issues. Because of that and the related tickets we received so far (where disabling the main thread resolved them), I would overthink if we really should enable the main thread updates in 5.1.",Bug,Critical,Closed,"2015-10-22 03:13:50","2015-10-22 03:13:50",3
"The Titanium SDK ","iOS: Parity: tab listeners","On Android you listen for the events on the Tab object, but on iOS you listen for the events on the TabGroup. ",Improvement,Low,Closed,"2015-10-22 02:00:26","2015-10-22 02:00:26",2
"The Titanium SDK ","Cannot access files in Resources directory with 5.2.x","{code:title=Environment}  Operating System    Name                        = Mac OS X    Version                     = 10.11.1    Architecture                = 64bit    # CPUs                      = 8    Memory                      = 17179869184  Node.js    Node.js Version             = 0.10.38    npm Version                 = 1.4.28  Titanium CLI    CLI Version                 = 5.0.5  Titanium SDK    SDK Version                 = 5.2.0.v20151014151229    SDK Path                    = /Volumes/Data/Users/sebastian/Library/Application Support/Titanium/mobilesdk/osx/5.0.2.GA    Target Platform             = iphone      With SDK 5.0.2.GA the alert gives me 748, with 5.1.x and 5.2.x it alerts 0.    There are several problems, not getting files out of the resources directory. Also getting directories with getFile for getDirectoryListing() does not work.  ",Bug,Critical,Closed,"2015-10-21 06:57:52","2015-10-21 06:57:52",0
"The Titanium SDK ","Ti.Media calls break app","Steps to reproduce:  - Open KitchenSink app  - Navigate to the Phone tab  - Open the Sound item in the list  - Click Local (or any of the items...)    Expected result:  - A sound will be played    Actual results:  - The app hangs.    I discovered this issue in my own app where setting the audiosessioncategory caused the app to hang. No error usually. I sometimes see a NsLock error [NSLock lock]: deadlock  '(null)' not clear when I get an error and when not.  If I remove all calls to Ti.Media from my app it works again.  Audo works fine with the 5.0.x builds, don't remeber about 5.1.x, currently at 5.2.x and they are all broken.    Something to do with the recent change to permissions in relation to Android? Did not understand the issue so did not understand the change either...    Please fix or explain, cannot release or even work now.    ps. I cannot select TIMOB from the project dropdown so sorry for the wrong project placement.  Possibly related issue is: https://jira.<USER>org/browse/TIMOB-19479",Bug,High,Closed,"2015-10-19 18:37:38","2015-10-19 18:37:38",3
"The Titanium SDK ","Android Textfield is not vertically aligned at center","h6.Issue Description    Text field text is not align centered in Android using the Titanium SDK 5.X, Is working good in Titanium SDK 3.5.1.    verticalAlign: Ti.UI.TEXT_VERTICAL_ALIGNMENT_CENTER -> also is not working.     h6. Steps to replicate:   -Create a new titanium classic project  -Open the app.js file inside Resources  -Replace the code with this:     ",Bug,Critical,Closed,"2015-10-20 20:23:24","2015-10-20 20:23:24",3
"The Titanium SDK ","Apple rejects app because it detected Handoff API reference with no use","Two [Q&A users reported|https://community.<USER>com/topic/3597/apple-reject-app-because-it-detect-handoff-feature] it has app was rejected by Apple because:    {quote}  2.3 Details    We were unable to locate some of the features described in your marketing materials or release notes. Specifically, your app uses the Handoff API, but does not provide Handoff functionality.    Please revise your app to ensure that these features are fully implemented or revise your application to remove the Handoff API from use.    We look forward to reviewing your revised app.    Best Regards,    App Store Review  {quote}    I know we're not including API classes that are not being used, but of course for Handoff, App Shortcuts and other features we set up delegates in our bootstrapping as well. It looks like we might need to somehow do this only if it is actually used.    Options:    * Have users enable these features via a {{tiapp.xml}} property.  * Scan the code for usage of the APIs (which we do anyway) and then set a build flag which we can then use in the bootstrapping code.",Bug,Critical,Closed,"2015-10-20 19:06:53","2015-10-20 19:06:53",3
"The Titanium SDK ","Android: Add StreetView to map v2","Implement street view panorama for map v2: https://developers.google.com/maps/documentation/android-api/streetview  Testing steps:  ","New Feature",Medium,Closed,"2015-10-20 18:49:15","2015-10-20 18:49:15",5
"The Titanium SDK ","Windows: CLI can hang when encrypting files due to invalid jdkInfo object","The CLI can hang if {{jdkInfo}} is {{null}} during encryption.    This usually happens on the first build or re-builds when the {{encryptJS}} flags gets set to {{true}} after the {{validate}} build command [\[1\]|https://github.com/<USER>titanium_mobile_windows/blob/master/cli/commands/_build/validate.js#L155].    The reason {{encryptJS}} gets set to {{true}} is due to {{buildVerify}} [\[2\]|https://github.com/<USER>appc-cli-titanium/blob/master/hook/titanium.js#L207].  If {{buildVerify}} is successful and we are online the {{encryptJS}} flag will always be set to {{true}} regardless of deploy type.  This is why Windows projects are always encrypted on first build or re-builds even if they are being deployed for development.",Bug,Critical,Closed,"2015-10-19 23:59:00","2015-10-19 23:59:00",5
"The Titanium SDK ","iOS: webViews within a scrollableView disappear","Hi,    if you have webViews with html content within a scrollableView, they will disappear when you scroll through the scrollableView. CacheSize of scrollableView does not have any impact to this issue.    You can easily reproduce this issue:  1. Create a scrollableView  2. Create 10 Views with a webView in it (put some html into the webview)  3. Put the views into the scrollableView  4. Scroll forward and then backward through the scrollableView    5.0.0.GA / 5.0.1.GA / 5.0.2.GA, iOS9, xcode 7.0.1    ",Bug,Critical,Closed,"2015-10-09 16:42:53","2015-10-09 16:42:53",5
"The Titanium SDK ","xcdatamodel file not included when building application","I am having an issue with a module I built. The iOS native module contains a xcdatamodel file which is a database for storing data, this file is not being built with app but if I copy the file to the app after it is built in xcode everything works and file is recognized in app. The problem is when I rebuild it removes the file again, or when I submit to apple store. I know you dont support core data but I just need to know how to include this file in the build <USER>  Provide me with an email address and I can share my dropbox account with the app and module if needed.",Improvement,Critical,Open,"2015-10-14 12:38:00","2015-10-14 12:38:00",13
"The Titanium SDK ","iOS: Ti.Contacts custom phone label in phones become undefined","i need urgent solution for this bug in Contacts list phone numbers , IOS    if i have contact he's phone number saved in custom label the phone numbers of this contact object return undefined           ",Bug,Critical,Closed,"2015-10-16 06:51:02","2015-10-16 06:51:02",3
"The Titanium SDK ","Error when selecting an iOS certificate without provisioning profiles","When selecting a distribution certificate for which I don't have any provisioning profile I get:    ",Bug,Low,Closed,"2015-10-18 13:33:23","2015-10-18 13:33:23",1
"The Titanium SDK ","iOS: ImageView load event not fired on cached images","The {{load}} event of the {{Ti.UI.ImageView}} is not fired, when a remote image was already downloaded before (is cached).    *Use case*:   This behavior produces critical problems when we want to show a preloader that we hide after an image is loaded.     *Expected behavior*:  The {{load}} event is fired after the cached image is set.    *Actual behavior*:  The {{load}} event does not fire after the cached image is set.    ",Bug,None,Closed,"2015-10-17 22:03:21","2015-10-17 22:03:21",1
"The Titanium SDK ","iOS9: Support Continue return key + new keyboard types","iOS9 offers a new return key to show a Continue button. We should support it and provide a fallback for older devices. Also, we should support the two missing keyboards for twitter and websearch.    *Demo*:  ","New Feature",Low,Closed,"2015-10-16 19:47:07","2015-10-16 19:47:07",5
"The Titanium SDK ","iOS: Toggled action buttons display over keyboard","When all the action buttons are removed from above the keyboard and a keyboard button is pushed, the bar for the action buttons is hidden. If the action buttons are then toggled back on, they display on top of the keyboard. See attached gif:    !toggleoverlay.gif|thumbnail!    Example code:      *Steps to reproduce issue*  1. Launch an app using the above code on an iPad  2. Click on the textfield  3. Click the 'Toggle Field' button  4. Click any key on the keyboard  5. Click the 'Toggle Field' button    *Actual Results*  The action buttons are shown on top of the keyboard    *Expected Results*  The action button bar appears and contains the action buttons    *Notes*  This could be an iOS issue",Bug,Medium,Closed,"2015-10-14 17:40:49","2015-10-14 17:40:49",3
"The Titanium SDK ","Android: Use the Reveal Effect has NPE","[~<USER> mentions:  The PR in TIMOB-19579 introduced a bug here https://github.com/<USER>titanium_mobile/commit/52808d394be162771f607db916a73f9c44363beb#diff-bec22e2efdd8b352a7754ea42f435dc7R755 as options may be null (see e.g. here ). This results in a NPE",Bug,High,Closed,"2015-10-14 03:28:38","2015-10-14 03:28:38",2
"The Titanium SDK ","Android: Support usage of third-party AARs in Hyperloop","Add some mechanism to reference, include and use third-party libraries in Hyperloop JS code.",Story,High,Closed,"2015-10-12 16:43:57","2015-10-12 16:43:57",8
"The Titanium SDK ","Add support for contact icons to Ti.UI.iOS.ApplicationShortcuts","We [don't|https://github.com/<USER>titanium_mobile/blob/2c2f603d381c43759ac8d30c153d93419ac1aa7c/iphone/Classes/TiUIiOSApplicationShortcutsProxy.m#L176] support the third icon type, which is [iconWithContact|https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIApplicationShortcutIcon_Class/index.html#//apple_ref/occ/clm/UIApplicationShortcutIcon/iconWithContact:] atm, which would be nice to add.","New Feature",None,Closed,"2015-10-11 20:34:53","2015-10-11 20:34:53",3
"The Titanium SDK ","iOS: Error: DefaultIcon.png cannot be used because it contains an alpha channel","To create:  * appc use 5.0.0  * install 5.0.0.GA  * appc new  * appc run  * appc ti clean  * Remove SDK version from tiapp.xml  * appc ti sdk install -d --branch 5_1_X 5.1.0.v20151021132025  * appc use 5.0.3  * appc run    *Actual:* The following error is returned:  ",Bug,High,Closed,"2015-10-09 23:35:05","2015-10-09 23:35:05",5
"The Titanium SDK ","iOS: Support Hyperloop directly built-in to SDK","Need to make it such that Titanium and Hyperloop are directly integrated and work well together.",Improvement,High,Closed,"2015-10-09 23:16:15","2015-10-09 23:16:15",0
"The Titanium SDK ","Windows: Set up a Windows 10 build machine","We should really set up a Windows 10 and VS 2015 box to use as a Jenkins build agent, so we can compile JSC, HAL, Windows SDK against Win10.",Story,Critical,Closed,"2015-10-09 16:57:47","2015-10-09 16:57:47",8
"The Titanium SDK ","Android: Support usage of third-party JARs in Hyperloop","Add some mechanism to reference, include and use third-party libraries in Hyperloop JS code.",Story,High,Closed,"2015-10-09 14:11:37","2015-10-09 14:11:37",3
"The Titanium SDK ","Android: Support implementing native interfaces in hyperloop","Support some syntax that allows users to implement a native interface in Hyperloop JS.",Story,High,Closed,"2015-10-09 14:11:05","2015-10-09 14:11:05",8
"The Titanium SDK ","Android: Support extending native types in hyperloop","Support some syntax that allows users to subclass existing native types in Hyperloop JS.","New Feature",High,Closed,"2015-10-09 14:10:22","2015-10-09 14:10:22",13
"The Titanium SDK ","Android: Generate first working prototype of module that allows Android API usage in JS","Generate a working version of the module that will allow users to add it to their project, and then require native Android types and call methods, access fields/constants, instantiate instances of types.",Story,Critical,Closed,"2015-10-09 14:10:01","2015-10-09 14:10:01",8
"The Titanium SDK ","Bring Hyperloop to Android",,Epic,High,Closed,"2015-10-09 12:58:28","2015-10-09 12:58:28",0
"The Titanium SDK ","Windows: CLI doesn't exit like on Mac when running into a parse error","On Mac OS X, when the CLI runs into a JS parse error it will exit. On Windows it does not and you have to manually kill the <USER>    *Sample*    ",Bug,None,Closed,"2015-10-09 11:48:31","2015-10-09 11:48:31",5
"The Titanium SDK ","Windows: No way to set ListItem height","The following sample and screenshots show that on Windows the list item height is always the full screen height, regardless of different ways to set the list item height that work fine on iOS.    ",Bug,None,Closed,"2015-10-09 11:41:52","2015-10-09 11:41:52",5
"The Titanium SDK ","Android: TabGroup cannot use NoTitleBar themes","When you use a {{NoTitleBar}} theme for the application, it is impossible to use a TabGroup anywhere in the application, because it requires an ActionBar:    1. Create default classic project (which has a TabGroup)  2. In {{tiapp.xml}} select a NoTitleBar theme:        3. Run the project and see that the screen is empty (as in screenshot) and logs show:        h2. Solution    We should support the {{theme}} property we have for [Ti.UI.Window|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Window-property-theme] so you can select a theme that *has* a TitleBar when you create a TabGroup in an application that uses a {{NoTitleBar}} theme.    h2. Workaround    On all other windows, use the {{theme}} property to select a {{NoTitleBar}} theme.",Bug,High,Closed,"2015-10-09 09:22:42","2015-10-09 09:22:42",8
"The Titanium SDK ","CLI: Create template to configure launchScreen.storyboard","Currently, we are using image files, copied into an assets catalog named LaunchImage for the launch screens. There is a newer method supported in Xcode 6 / iOS8 and greater, whereby you can have a LaunchScreen.storyboard file, in which you can configure the launch screen, and it's adaptable to all device types. We need this file to exist in order for slideView / splitView to work on iOS9.    Similar to what we did with watchos2, we need work flow to be as such:  1. CLI generate an Xcode project template that contains a sample LaunchImage file. (ti create ... --template launchScreen)  2. Ti developer does what he wants in that Xcode project, very likely with an assets catalog in it as well.  3. when calling ti build, CLI copies this storyboard file and well as any associated image sets in the assets catalog into the build project.  4. info.plist will also need this    so we either include automatically or have the Ti developer include it in tiapp.xml    Note: The existence of LaunchScreen.storyboard will make Xcode ignore the original LaunchImage asset catalog. But we still cannot delete this because it's required for this method in TiRootViewController.m   as well as devices < iOS8.    Useful references: [Video of how we can integrate LaunchScreen.storyboard|https://www.dropbox.com/s/hholmeay9mmlpcg/Ti.SlideOver.mov?dl=0]  [Xamarin | https://developer.xamarin.com/guides/ios/application_fundamentals/working_with_images/launch-screens/] ","New Feature",High,Closed,"2015-10-09 09:16:40","2015-10-09 09:16:40",5
"The Titanium SDK ","Windows: windowslib wstool doesn't launch on Windows 10","windowslib has a launcher tool that is called {{wstool}} to launch application by application id. It uses registry data to get application info , but on Windows 10 it doesn't work. FYI see http://nicksnettravels.builttoroam.com/post/2015/07/24/launching-windows-store-applications-from-code-in-windows-10.aspx",Bug,Medium,Closed,"2015-10-09 06:55:54","2015-10-09 06:55:54",8
"The Titanium SDK ","KitchenSink: Make KitchenSink work for auto layout and refactor outdated methods","KitchenSink https://github.com/<USER>KitchenSink *master branch* is a comprehensive test suite for UI-related components and views, but it's been outdated. We should fix certain things to make sure it works with the latest master branch:    1. Update DefaultIcon.png to make sure it's the right size and that it doesn't have alpha channel.  2. Enable auto layout, add the following tag to the ios tag in tiapp.xml  <use-autolayout>true</use-autolayout>  3. With auto layout enabled, fix all deprecated warnings (mostly to do with AUTO property)  4. Any differences in UI behavior for auto layout enabled vs disabled should have tickets filed under the same epic with detailed descriptions so that we can tackle them one by one.",Story,High,Closed,"2015-10-09 05:49:36","2015-10-09 05:49:36",5
"The Titanium SDK ","iOS9: Enable SplitView / SlideView support","Now that titanium SDK 5.1.0 supports native auto layout, there's still a couple of issues and features to implement to enable full support for SlideView and SplitView in iOS9.     To enable auto layout in SDK 5.1.0, add the following tag to the ios tag in tiapp.xml    This is now disabled by default.    Any issues found specific to UI components when auto layout is enabled should be linked to this epic.",Epic,High,Closed,"2015-10-09 04:26:10","2015-10-09 04:26:10",5
"The Titanium SDK ","Windows: CLI targetting Windows 10 Store app","Launching Windows Store App via {{ti build}} doesn't work. should support not only Windows 10 but also Windows 8.1 Store App.",Bug,Medium,Closed,"2015-10-08 11:36:32","2015-10-08 11:36:32",8
"The Titanium SDK ","Could not find the file app.js when using Xcode to run app","Running titanium project in Xcode is very useful when debuging and using native module.    But,  When I run titanium app in Xcode, I got the red error screen Could not find the file app.js    ## Reproduce steps.  - create titanium mobile project (alloy or classic)  - Build your project via Studio or CLI, then close the simulator  - open yourproject/build/iphone/yourproject.xcodeproj  in Xcode.  - Build & run the project within Xcode.   - Finally, you got a error message      ",Bug,High,Closed,"2015-10-08 09:55:50","2015-10-08 09:55:50",1
"The Titanium SDK ","Android: Improve first-time SDK developer setup","It's not easy to get started doing Android SDK development. A wiki page (https://wiki.<USER>org/display/pe/Android+Titanium+SDK+Development+Setup) has the steps, but not all the steps there are right, and some are missing. Also, a great deal of this could be alleviated by scripting, checking in some projects that the steps tell you to manually create, and checking in eclipse settings/prefs.",Improvement,Medium,Closed,"2015-10-07 23:26:27","2015-10-07 23:26:27",5
"The Titanium SDK ","Android: Build fails with SDK 5.1.0.v2015100622295 if android 6.0(API 23) is not installed","h5.Description:  1. Create & build an android app from CLI/Studio using 5.1.0.v2015100622295.    h5.Actual Results:  1. The build fails with error:    2. Looking at the package.json in the SDK we see , which is high limiting the required android SDK to 23.    h5.Expected Results:  1. The android build should be successful even with no android 6.0 (API 23) SDK installed.  ",Bug,Medium,Closed,"2015-10-07 18:16:22","2015-10-07 18:16:22",3
"The Titanium SDK ","iOS build is getting failed with latest SDK ","iOS build is getting failed with latest SDK 5.1.0.v20151006222951    Please find the error below from studio.  ",Bug,High,Closed,"2015-10-07 09:09:31","2015-10-07 09:09:31",2
"The Titanium SDK ","iOS: Execute JavaScript on main thread by default","In TIMOB-18976 we added the ability to execute JS on the main thread. We now should set this as default.    Note, this can ONLY be merged in 5.1.0 if it causes NO behavior changes. If it does, then we must wait until 6.0.    ",Improvement,High,Closed,"2015-10-07 03:13:51","2015-10-07 03:13:51",8
"The Titanium SDK ","Android 6.0: Adding TiMap module crashes app while start","h6.Issue Descriptions  Adding the TiMap module to Tiapp crashes an app when building for Android 6.0 (M). If the module is removed there is no crash.     h6.Steps to reproduce  1) Create a sample app having included a com.google.android.maps.v2.API_KEY  2) Get CI build 5.1.0.X or latest stable release  3) Run app on Android 6  4) Watch logs     h6.Stack Trace  ",Bug,Critical,Closed,"2015-10-06 23:49:57","2015-10-06 23:49:57",1
"The Titanium SDK ","iOS: Building aborts during icon set creation without reason","When building a project for iOS (sim, device, or store) the <USER>aborts while creating the icon set. A warning for an icon's alpha channel is shown, but no error or definie reason is given for the build to fail. See below console output:        *Steps to reproduce issue*  1. Create a new native alloy project with {{appc new}}  2. Build that project with {{appc run -p ios}}    *Actual Results*  The above output is shown and the <USER>quits during icon set creation    *Expected Results*  The build succeeds or a clear reason for a failure is given.    *Notes*  This could also be a bug. If builds fail when there is a 32-but image, then we should not include any in our default projects.",Improvement,Critical,Closed,"2015-10-06 21:47:03","2015-10-06 21:47:03",1
"The Titanium SDK ","Android: Added additional type support for IntentProxy","h6.Issue Description  Currently it is not possible to create a launcher shortcut programmatically using the Titanium platform. Titanium allows for the creation of an Android intent using Ti.Android.createIntent but the implementation of the putExtra method is incomplete. It currently only supports Java primitives. Creating a shortcut requires an intent and an image to be set. Ideally the following example should work:        I have created a pull request that adds the missing input types.  https://github.com/<USER>titanium_mobile/pull/7073","New Feature",Medium,Closed,"2015-10-05 18:52:39","2015-10-05 18:52:39",2
"The Titanium SDK ","Windows: noexcept mismatch when targeting Visual Studio 2015","Enabling {{noexcept}} on Visual Studio 2015 causes mismatch error. We have been disabling noexcept on Visual Studio 2013 (I think it's because it's shipped with some critical bugs). I think we can enable it for now.",Bug,Medium,Closed,"2015-10-06 12:15:59","2015-10-06 12:15:59",5
"The Titanium SDK ","Windows: Compile targeting Windows 10 Universal","Some compile errors found in titanium_mobile_windows when targeting Windows 10 Store Apps. It also requires JavaScriptCore, HAL and gtest compiled under Visual Studio 2015.",Story,None,Closed,"2015-10-06 11:41:05","2015-10-06 11:41:05",8
"The Titanium SDK ","Windows: Compile HAL targeting Windows 10","Compile HAL targeting Windows 10. There's a link error when building *HAL* DLL under Windows 10 + Visual Studio 2015.        That's a known issue introduced from Visual Studio 2015: https://connect.microsoft.com/VisualStudio/feedback/details/1348277/link-error-when-using-std-codecvt-utf8-utf16-char16-t",Story,Medium,Closed,"2015-10-06 09:19:44","2015-10-06 09:19:44",5
"The Titanium SDK ","Windows: make NMocha test more stable","We have been seeing our NMocha test is failing more frequently than before. We might want to see what's going on there.",Improvement,Medium,Closed,"2015-10-06 06:41:18","2015-10-06 06:41:18",8
"The Titanium SDK ","windowslib: winstore.detect always issues deployCmd not found error message","{{appc setup}} always shows {{Windows Store SDK is missing the deploy command}} error message on Windows even when Windows Store SDK is installed.    It is because {{deployCmd}} variable is not actually used for Windows Store apps but {{winstore.detect}} always checks it and issues error message.        I was able to fix it locally, here's a PR: https://github.com/<USER>windowslib/pull/23",Improvement,High,Closed,"2015-10-06 05:34:36","2015-10-06 05:34:36",3
"The Titanium SDK ","windowslib: visualstudio.detect failed for VS 2015","{{windowslib.visualstudio.detect}} failed to detect Visual Studio 2015, when it is installed to the path which contains space.         It is because some spaces in {{vcvarsall}} variable is not properly escaped.         I was able to fix it locally, here's a PR: https://github.com/<USER>windowslib/pull/22",Bug,High,Closed,"2015-10-06 05:26:37","2015-10-06 05:26:37",3
"The Titanium SDK ","Failed to connect to device (0xe8000065) ","Create default classic project.   Install on device with LiveView Enabled via Studio.  Receive follow error:        Installing on device without LiveView installs with no errors. Installing via CLI appc ti build -p ios -I 9.0 -T device -l trace installs with no errors.",Bug,Critical,Closed,"2015-09-25 17:56:39","2015-09-25 17:56:39",8
"The Titanium SDK ","iOS9.1: Support for Apple Pencil","https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UITouch_Class/index.html#//apple_ref/occ/cl/UITouch    iOS 9.1 introduces APIs that help you use coalesced and predictive touches that can be produced by Apple Pencil on supported devices. Specifically, the UITouch class includes:    The preciseLocationInView: and precisePreviousLocationInView: methods, which give you the precise location for a touch (when available)  The altitudeAngle property and the azimuthAngleInView: and azimuthUnitVectorInView: methods, which help you determine the altitude and azimuth of the stylus  The estimatedProperties and updatedProperties properties, which help you prepare to update touches that are estimated  For an example of some ways to take advantage of these APIs in your app, see the sample project [TouchCanvas: Using UITouch efficiently and effectively|https://developer.apple.com/library/prerelease/ios/samplecode/TouchCanvas/Introduction/Intro.html#//apple_ref/doc/uid/TP40016561].","New Feature",Critical,Closed,"2015-10-05 06:25:47","2015-10-05 06:25:47",8
"The Titanium SDK ","iOS9.1: Support PHLivePhoto + PHLivePhotoView","*Summary:*  iOS 9.1 provides a way to receive, display and share live photos using the {{PHLivePhoto}} related classes. A live photo is a photo, that consists of several photos taken together as frames but it still is no video. It can be displayed using the {{PHLivePhotoView}} and managed through the {{PHImageManager}} or {{UIImagePickerController}} (which we use).     *Proposal:*  Summarized, our proposal should be:  * a) to support taking live photos using {{Ti.Media.openPhotoGallery()}} method  * b) allow developers to display live photos in a new view proxy e.g. {{Ti.UI.iOS.LivePhoto}} or directly in the existing {{Ti.UI.ImageView}} using auto detection on the image source type.    *Documentation:*  * https://developer.apple.com/library/prerelease/ios/documentation/PhotosUI/Reference/PHLivePhotoView_Class/index.html#//apple_ref/doc/uid/TP40016582  * https://developer.apple.com/library/prerelease/ios/documentation/Photos/Reference/PHLivePhoto_Class/index.html#//apple_ref/doc/uid/TP40016581","New Feature",Medium,Closed,"2015-10-05 06:17:25","2015-10-05 06:17:25",13
"The Titanium SDK ","Android java error when making HTTP request to endpoint that returns 'true' or 'false'","h2. Steps to reproduce  h3. Create xhr that pings an endpoint that returns 'true' or 'false      h2. Error generated      h2. Endpoint  ",Improvement,Critical,Closed,"2015-10-03 00:31:28","2015-10-03 00:31:28",1
"The Titanium SDK ","Windows: ListItem title color is black (should be white) and cannot be changed","The following sample based on the [first classic sample in the docs|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.ListView] shows that on Windows ListItem titles default to black, which is not readable on the default black background color. It also shows that setting the {{color}} property of the ListItem doesn't work either, which is [documented|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.ListItem-property-color] but makes the built-in templates pretty much useless.    ",Bug,None,Closed,"2015-10-02 14:05:49","2015-10-02 14:05:49",5
"The Titanium SDK ","Windows: Missing .apiName properties","The following sample shows that there's no {{apiName}} on Windows:        Which will show:    {quote}apiName: undefined{quote}",Bug,None,Closed,"2015-10-02 13:36:14","2015-10-02 13:36:14",5
"The Titanium SDK ","Windows: Compile JavaScriptCore targeting Windows 10","Titanium Windows SDK and HAL will fail to build under Visual Studio 2015 because current JavaScriptCore.lib is compiled under Visual Studio 2013. VS compiler will complain about the compiler version.",Story,Medium,Closed,"2015-10-02 07:19:38","2015-10-02 07:19:38",8
"The Titanium SDK ","Android: 5.0.0 GA SDK HTTPClient Fails to POST Form Data with File Correctly","I am unable to upload data to a remote server using the HTTPClient on Titanium SDK 5.0.0 GA.  The same code works correctly on SDK 4.1.0 GA.    The data object that is sent to HTTPClient looks like this:        Where {{imageData}} is a photo selected from the device.      On the server, it seemed like the imageData was coming through, but nothing else: {{entry.id}}, {{_eventName}}, {{caption}}, and {{fileName}} were no populated on my server-side form.    In an effort to help debug the issue, I dumped the raw incoming POST data to the server console.  The results looked something like this:                I immediately saw the problem.  Note how for the non-binary fields, such as {{_eventName}} at the top, the right quote is missing at the end of the name value.      This explains why my web framework was unable to correctly populate the data model with the form data; it was unable to read it due to the missing double quote.    This is a new regression from 4.1.0.  It works correctly if I use the 4.1.0 SDK.    For those who are seeing this bug, one possible work around is to convert the file to be  uploaded to a base64 encoded string.  This is how my example from above updated to use a base64 encoded string:          Of course, this only works if you also control the server-side and can handle the base64 encoded file appropriately.    ",Bug,Medium,Closed,"2015-10-02 02:08:58","2015-10-02 02:08:58",1
"The Titanium SDK ","Android: 5.0.2 GA HTTPClient handleResponse error","HttpClient on Android was reported to have this error:  ",Bug,High,Closed,"2015-10-02 03:46:26","2015-10-02 03:46:26",1
"The Titanium SDK ","Connecting an iOS 9 device causes devices < 9 to not be recognized","Connecting an iOS 9 device to your machine will cause devices with iOS versions less than 9 to not be detected.    *Steps to reproduce issue*  1. Plug in a device with iOS version less than 9  2. Run {{appc info -t ios}}  3. Plug in a device with iOS version 9.0 or higher  4. Run {{appc info -t ios}}    *Actual Results*  2. The older iOS device is shown  4. Only the iOS 9+ device is shown    *Expected Results*  4. Both devices are shown    *Notes*  Tested using 3 devices as well:  2 devices < iOS 9 and 1 device iOS 9+: Only the iOS 9+ device shown  2 devices iOS 9+ and 1 device < iOS 9: Only one iOS 9+ device shown",Bug,Low,Closed,"2015-10-01 23:44:37","2015-10-01 23:44:37",8
"The Titanium SDK ","Update supported version to Node.js 4.1","Titanium SDK works great with Node.js 4.1, so lets bump the supported version!",Improvement,Medium,Closed,"2015-10-01 21:46:15","2015-10-01 21:46:15",1
"The Titanium SDK ","Windows: CLI command line flags -G and --wp-publisher-guid are ignored","The command line flags {{\-G}} and {{\-\-wp-publisher-guid}} to set the publisher GUID are ignored requiring the user to manually input the {{Windows Publisher ID}}    *TEST CASE*  {{appc run -p windows -C 8-1-1 -G 00000000-0000-1000-8000-000000000000 --build-only}}    !http://puu.sh/kuPbo/69f3447c5b.png!",Bug,Medium,Closed,"2015-10-01 16:32:49","2015-10-01 16:32:49",5
"The Titanium SDK ","Windows: HAL compile error with Visual Studio 2015","HAL causes compile error on Visual Studio 2015. It usually isn't a issue when compiling titanium_mobile_windows project because we use pre-built DLL, but causes error when compile everything from source.",Bug,Medium,Closed,"2015-10-01 12:10:47","2015-10-01 12:10:47",5
"The Titanium SDK ","Android: Error accessing Camera on device below M","Running code:       Gives rise to log error:      Due to https://github.com/<USER>titanium_mobile/blob/32600b01047b4654c92b341c6f0b61d38fa702b1/android/modules/media/src/java/ti/modules/titanium/media/MediaModule.java#L288    http://developer.android.com/reference/android/content/Context.html#checkSelfPermission(java.lang.String) Being only available in API Level 23 and above.    More logs:  ",Bug,Critical,Closed,"2015-10-01 05:12:28","2015-10-01 05:12:28",3
"The Titanium SDK ","Android: Icons etc look enlarged on android emulator when SDK tools 24.4 are installed","*NOTE: This issue is not a titanium issue & most probably an android SDK 24.4 tools issue. Reverting to android SDK tools 23.3.4 this issue is not seen*    h5.Description:  1. Make sure you have android SDK tools 24.4 installed.  2. Build any app from <USER>studio to android emulator or launch an emulator from avd manager.    h5. Actual Results:  1. The icons etc in the emulator appears to be enlarged or probably the resolution seems to be low(that's why it looks enlarged).  2. Tried to play with different skins in the avd manager but for some skins the emulator takes forever to boot.  3. Tried with 5.1.1 & 6.0.0 emulators.  NOTE : Refer the attached screenshot for reference.  ",Bug,None,Closed,"2015-10-01 00:31:23","2015-10-01 00:31:23",1
"The Titanium SDK ","Windows: Test if examples work on Windows 10","Make sure Titanium example apps (Movies, ToDoList, RSS reader etc) work on Windows 10 environment.",Story,Medium,Closed,"2015-10-01 00:01:48","2015-10-01 00:01:48",8
"The Titanium SDK ","Windows: Windows 10 support for cmake","Latest cmake 3.3.2 doesn't support {{CMAKE_SYSTEM_VERSION=10.0}}. Seems like latest [MS version of cmake|https://github.com/Microsoft/CMake] does support it, so we need to build/get the binary and update our cmake.    ",Story,Medium,Closed,"2015-10-01 00:01:02","2015-10-01 00:01:02",5
"The Titanium SDK ","Windows: Builder.createAppIconSet ignores existing assets","Let say we want to create app icons with several sizes and create them during build <USER>like below.    {code:title=cli/commands/_build/copy.js}   function createAppIconSet(next) {    var appIconSetDir = path.join(this.buildDir, 'Assets'),     missingIcons = [     // Square44x44Logo     {      description: 'Square44x44Logo.png - Used for logo',      file: path.join(appIconSetDir, 'Square44x44Logo.png'),      width: 44,      height: 44,      required: true     },       // Square71x71Logo     {      description: 'Square71x71Logo.png - Used for logo',      file: path.join(appIconSetDir, 'Square71x71Logo.png'),      width: 71,      height: 71,      required: true     },       // Square150x150Logo     {      description: 'Square150x150Logo.png - Used for logo',      file: path.join(appIconSetDir, 'Square150x150Logo.png'),      width: 150,      height: 150,      required: true     }    ];    this.generateAppIcons(missingIcons, next);   }  {code}     Even when you want to use custom images and place those images in your project (e.g. place custom images under platform/windows/ or project root directory), they are always ignored by the builder during the build.    !vs.png|thumbnail!",Bug,Medium,Closed,"2015-09-30 21:03:09","2015-09-30 21:03:09",5
"The Titanium SDK ","Android: Support building SDK on JDK 8+","Tried doing this (had to use JDK8), and got the following:    http://<USER><USER>org/job/titanium_mobile_master/3836/console        It appears there are at least a few issues to resolve.",Story,Low,Closed,"2015-09-30 14:31:21","2015-09-30 14:31:21",5
"The Titanium SDK ","iOS: ImageViews with remote images slow and failing","This issue has been happening since version 4.0. I have a ListView with infinite scrolling that display a thumbnail loaded remotely for each thumbnail. The loading of the images is really slow, and sometimes they fail without error and will not load.    This doesn't happen on SDK 3.5.1, which has all images loading correctly and at the expected speed based on my network speed an image size.    ",Bug,High,Closed,"2015-07-09 02:31:31","2015-07-09 02:31:31",8
"The Titanium SDK ","Windows: Orphaned MSBuild processes after building a project","h5.Description    When building a project for Windows Platform after the build has finished there are  3 orphaned MSBuild processes.     h5.Steps to reproduce    1. Build a project using {{appc run}} or {{ti build}}  2. Check Task Manager    h5.Actual result    There will be 3 orphaned MSBuild processes    h5.Expected result    There should be no orphaned processes after building",Bug,None,Closed,"2015-09-30 13:31:16","2015-09-30 13:31:16",5
"The Titanium SDK ","Windows: CLI build error is ignored ","When there's no DefaultIcon.png, CLI shows critical error on build but it does not stop build <USER>   ",Bug,Medium,Closed,"2015-09-30 09:36:14","2015-09-30 09:36:14",3
"The Titanium SDK ","iOS9 Spotlight Search isSupported function doesn't work on pre-iOS9 devices","Im using .isSupported() to check if my iOS8.3 device should create indexs for Spotlight search.  However, the isSupported call throws an error    Code to test with (modified version from the Spotlight search sample app):     // Create an instance of the index   var searchableIndex = Ti.App.iOS.createSearchableIndex();     // Check if Spotlight is supported (since iOS 9)   if (searchableIndex.isSupported()) {    alert('You have iOS9 Spotlight Search');   }    Error I am given when used on the actual device:  undefined is not an object (evaluating 't.isSupported')",Bug,Critical,Closed,"2015-09-22 22:06:24","2015-09-22 22:06:24",2
"The Titanium SDK ","Android: TextField setSelection(0,end) has to be called twice to select text","When trying to select the whole text in a TextField I use the setSelection function:    {code:java}  function selectText(e){     $.tf_1.setSelection(0,$.tf_1.value.length)  }    $.btn.addEventListener(click,selectText)  $.index.open();  {code}      {code:java}  <Alloy>   <Window class=container>    <TextField id=tf_1 value=123456></TextField>    <Button id=btn>Select text</Button>   </Window>  </Alloy>  {code}          It's only working when the cursor is at the beginning. When it's in the middle or end it will just move the cursor to front and I have to click the button again to select the text.   From the function call (0, length) I expect to start from 0 and select the whole text in one go    Android 5 (Nexus 4)  SDK 5.0.0.GA    _Workaround:_  use   ",Bug,High,Closed,"2015-09-24 08:16:55","2015-09-24 08:16:55",5
"The Titanium SDK ","iOS: AUDIO_SESSION_CATEGORY_AMBIENT stops background music","This command stops iPod music, while it shouldn't.    Ti.Media.audioSessionCategory = Ti.Media.AUDIO_SESSION_CATEGORY_AMBIENT;    Someone found a workaround for this, see [this link|https://community.<USER>com/topic/2819/ios-app-stops-device-audio-at-startup-music-app-pandora-etc/2]    Summarized:    >>I ended up solving this problem by editing TiApp.m on the SDK and adding the following code to didFinishLaunchingWithOptions:    NSError *setCategoryError = nil;  BOOL audioOk = [[AVAudioSession sharedInstance]                  setCategory: AVAudioSessionCategoryAmbient                  error: &setCategoryError];",Bug,Medium,Closed,"2015-08-06 10:40:39","2015-08-06 10:40:39",2
"The Titanium SDK ","Android: Buttons stay uppercased in UI","Probably due to Material design. The following android style XML syntax does not work on buttons used in a ListItem:        Either applied to a theme or a button, it doesnt change it. It does seem to work for all other buttons you defined through the Alloy xml.",Bug,Critical,Closed,"2015-07-06 14:21:11","2015-07-06 14:21:11",5
"The Titanium SDK ","Windows: Missing icon in package manifest","Missing icons in the package manifest after applying [TIMOB-19487|https://jira.<USER>org/browse/TIMOB-19487], which should cause compile error.",Bug,Medium,Closed,"2015-09-30 04:05:00","2015-09-30 04:05:00",5
"The Titanium SDK ","Add FB Audience Network Support to Facebook Module","Current Facebook Module missing support for FB Audience Network for iOS and Android as indicated on facebook at:    https://developers.facebook.com/docs/audience-network/getting-started#<USER>sdk  ","New Feature",Low,Closed,"2015-05-21 01:28:02","2015-05-21 01:28:02",0
"The Titanium SDK ","iOS event 'notification' not called any more when the app runs a couple of days","I got the idea that when the app is running for a few days, the local notifications stop working.  Added some logging to app.js to test this:             Changed /Library/Application Support/Titanium/mobilesdk/osx/3.5.1.GA/iphone/Classes/TiApp.m to add some logging in the application delegate:              In the beginning when the app is freshly started everything looks ok:            But if I let the app run for a few days, it stops working:            ",Bug,Critical,Closed,"2015-05-02 22:33:00","2015-05-02 22:33:00",0
"The Titanium SDK ","tiImage() complete callback is not fired on Android","{code:JavaScript}  var self = Ti.UI.createWindow({layout:'vertical', backgroundColor:'#0093b4'});    var aButton = Ti.UI.createButton({title : 'Screen Shot\nAsync',   height : Ti.UI.SIZE, width : Ti.UI.SIZE,});    aButton.addEventListener('click', function() {   self.toImage(function(_blob) {    alert('toImage completed');});  });    self.add(aButton);  self.open();  {code}  Pressing the above button never fires the complete callback on Android.  [iOS works perfect]  See: [http://developer.<USER>com/question/150289/i-cant-get-toimage-callback-to-fire] as well for Alloy.",Bug,Critical,Closed,"2015-04-19 18:34:06","2015-04-19 18:34:06",5
"The Titanium SDK ","Android: On 5.0.1 AudioPlayer stream starts takes about 10 seconds","On Android 5.0.1 (Samsung Galaxy S4) device it takes up to 10 seconds before a Titanium.Media.AudioPlayer remote stream starts playing audio. Same device, same APK but wiht Android 4.4 installed no issues! Both installs 5.0.1 and 4.4 were factory resets of the phone.    Nexus 6 with Android 5.1  with same APK: no issues.   Playback of stream (SHOUTcast) starts immediately.    See sample code + attached logs for both Galaxy S4 + Nexus 6.    {panel:title=logs}  Ti SDK 3.5.1.GA / Motorola Nexus 6 - Android 5.1  Audio is playing within a couple of milliseconds ...  ======================================================  [INFO] :   16/4/2015-15:00:01.869 DEBUG: audioPlayer.start()  [INFO] :   16/4/2015-15:00:01.884 DEBUG: State: starting (4)  [ERROR] :  MediaPlayer: Should have subtitle controller already set  [INFO] :   16/4/2015-15:00:01.974 DEBUG: State: initialized (1)  [INFO] :   16/4/2015-15:00:01.975 DEBUG: State: playing (3)  [INFO] :   16/4/2015-15:00:02.976 DEBUG: Time Played: 885 milliseconds  [INFO] :   16/4/2015-15:00:03.976 DEBUG: Time Played: 1886 milliseconds  [INFO] :   16/4/2015-15:00:04.979 DEBUG: Time Played: 2887 milliseconds      Ti SDK 3.5.1.GA / Samsung Galaxy S4 - Android 5.0.1  It takes up to 9 (:16.135 ~ :25.136) seconds before audio is initialized  ======================================================  [INFO] :   16/4/2015-14:56:16.135 DEBUG: audioPlayer.start()  [ERROR] :  E/ExtMediaPlayer-JNI: QCMediaPlayer could not be located....  [ERROR] :  E/MediaPlayer-JNI: QCMediaPlayer mediaplayer NOT present  [INFO] :   16/4/2015-14:56:16.177 DEBUG: State: starting (4)  [INFO] :   I/System.out: (HTTPLog)-Static: isSBSettingEnabled false  [INFO] :   I/System.out: (HTTPLog)-Static: isShipBuild true  [INFO] :   I/System.out: (HTTPLog)-Thread-4268-418455975: SmartBonding Enabling is false, SHIP_BUILD is true, log to file is false, DBG is false  [INFO] :   I/System.out: (HTTPLog)-Static: isSBSettingEnabled false  [INFO] :   I/System.out: KnoxVpnUidStorageknoxVpnSupported API value returned is false  [WARN] :   MediaPlayer: info/warning (973, 0)  [ERROR] :  MediaPlayer: Should have subtitle controller already set  [INFO] :   16/4/2015-14:56:25.134 DEBUG: State: initialized (1)  [INFO] :   16/4/2015-14:56:25.136 DEBUG: State: playing (3)  [WARN] :   MediaPlayer: info/warning (702, 0)  [INFO] :   16/4/2015-14:56:26.139 DEBUG: Time Played: 837 milliseconds  [INFO] :   16/4/2015-14:56:27.139 DEBUG: Time Played: 1826 milliseconds  [INFO] :   16/4/2015-14:56:28.134 DEBUG: Time Played: 2828 milliseconds  {panel}    {code:title=app.js}  function getDateTimeString(secs,msecs) {            var sDate = '';            if(msecs == undefined) msecs = false;      if(secs == undefined) secs = false;      var date = new Date();      sDate +=  date.getDate()+ '/' + String((date.getMonth()+1)) + '/' + date.getFullYear();      var minutes = date.getMinutes();      if (minutes < 10) minutes = String( '0' + minutes);      sDate += '-' + date.getHours()+':'+ minutes;      if (secs) {          secs = date.getSeconds();          if (secs < 10) secs = String( '0' + secs);          sDate += ':' + secs;      }      if (msecs) {          msecs = date.getMilliseconds();          if (msecs < 10) msecs = String( '0' + msecs);          sDate += '.' + msecs;      }            return sDate + ' ';  }    function log(msg) {      Ti.API.info(getDateTimeString(true,true) + 'DEBUG: ' + msg);  }    var win = Titanium.UI.createWindow({        title:'Audio Test',      backgroundColor:'#fff',      layout: 'vertical'  });     var startStopButton = Titanium.UI.createButton({      title:'Start/Stop Streaming',      top:10,      width:200,      height:40  });     var pauseResumeButton = Titanium.UI.createButton({      title:'Pause/Resume Streaming',      top:10,      width:200,      height:40,      enabled:false  });     win.add(startStopButton);  win.add(pauseResumeButton);     // allowBackground: true on Android allows the   // player to keep playing when the app is in the   // background.  var audioPlayer = Ti.Media.createAudioPlayer({       url: 'http://eu7.fastcast4u.com:8128/stream?' + (new Date()).getTime(),       //Adding timestamp GET param to the url because of issue: https://jira.<USER>org/browse/TIMOB-18297      allowBackground: true  });                   startStopButton.addEventListener('click',function() {      // When paused, playing returns false.      // If both are false, playback is stopped.      if (audioPlayer.playing || audioPlayer.paused)      {          audioPlayer.stop();          pauseResumeButton.enabled = false;          if (Ti.Platform.name === 'android')          {               audioPlayer.release();          }         }      else      {          audioPlayer.url = 'http://eu7.fastcast4u.com:8128/stream?' + (new Date()).getTime();          //Adding timestamp GET param to the url because of issue: https://jira.<USER>org/browse/TIMOB-18297          log('audioPlayer.start()');          audioPlayer.start();          pauseResumeButton.enabled = true;      }  });     pauseResumeButton.addEventListener('click', function() {      if (audioPlayer.paused) {          audioPlayer.start();      }      else {          audioPlayer.pause();      }  });     audioPlayer.addEventListener('progress',function(e) {     log('Time Played: ' + Math.round(e.progress) + ' milliseconds');  });     audioPlayer.addEventListener('change',function(e)  {      log('State: ' + e.description + ' (' + e.state + ')');  });     win.addEventListener('close',function() {      audioPlayer.stop();      if (Ti.Platform.osname === 'android')      {           audioPlayer.release();      }  });     win.open();  {code}  ",Bug,Critical,Closed,"2015-04-16 13:09:26","2015-04-16 13:09:26",1
"The Titanium SDK ","Android : add mixed content control to webview ","Android 5 (21) adds WebSettings.setMixedContentMode to control how mixed content is handled (https that contains inlined http).  Need to add access to this.  https://developer.android.com/reference/android/webkit/WebSettings#setMixedContentMode(int)    Description:   Images doesn't load in webview if they are hosted on http server!  E.g. if you assign webview url property to https://blogs-dev.vmware.com/vov/authors/  Some images get load properly but some which are hosted on http server or have http://xyz path they are not getting loaded.    Test code:      Error Log:      Test Environment:       Thanks ","New Feature",Critical,Closed,"2015-03-31 09:40:02","2015-03-31 09:40:02",3
"The Titanium SDK ","iOS: Changing DefaultIcon.png has no effect in subsequent builds","h4. Steps to reproduce  1. Create a default project  2. build the project  3. change the DefaultIcon.png to some other image (while retaining the name)  4. build the project    h4. Expected result  The app should be using the changed DefaultIcon.png    h4. Actual result  The app is using the old DefaultIcon.png    ",Bug,High,Closed,"2015-09-30 00:11:51","2015-09-30 00:11:51",5
"The Titanium SDK ","iOS: Suppress missing UIBackgroundModes fetch and remote-notification warnings","When running a Titanium app in the simulator I noticed the following in the console:        It appears that we need to add fetch and remote-notification to the list of UIBackgroundModes but only if these features are used. Perhaps we need to use the following to control this:    ",Bug,Low,Closed,"2015-09-29 15:10:21","2015-09-29 15:10:21",2
"The Titanium SDK ","Changes to Classic / Alloy apps are not updated on rebuild","Description: After creating a new app, Initial build reflects changes successfully. However on making changes and rebuilding the app, it fails to update those edits. Tested both on Alloy & Classic projects. The issue is not apparent when building to a device, it occurs when building on a simulator.     Switching build target from device to sim updates the changes. However a second build to sim fails to do update. Cleaning the project and rebuilding the app allows for a successful build to sim.    *Update:* When creating a project with appc new and doing “appc run”, changes fail to update on rebuild. However when creating a project with “ti create” and doing “ti build”, changes successfully update on rebuild.    Steps to reproduce:   # Create a new mobile app project.  # Edit content in app.js / index.xml.  # Save & build to sim.  # Make additional edit to app.js / index.xml.  # Save & rebuild to sim.    Result: changes to files made on step 4 will not be reflected on step 5.    Expected Result: changes to files should be updated upon second build.",Bug,High,Closed,"2015-09-23 22:42:17","2015-09-23 22:42:17",8
"The Titanium SDK ","Android: Facebook Login Button Wide Style not working","'m trying to create a 'wide' button style Facebook login on Android and it's not working (the same code is working on iOS).    My login.js code:    var facebook = Alloy.Globals.Facebook;  facebook.appid = Alloy.Globals.FacebookID;  facebook.permissions = [email];  facebook.forceDialogAuth = false;  $.fbButton.style = facebook.BUTTON_STYLE_WIDE;    My login.xml code:    <LoginButton id=fbButton ns=Alloy.Globals.Facebook/>    Alloy.js:  Alloy.Globals.Facebook = require('facebook');    This is on 3.5.1 GA and works on iOS.",Bug,Critical,Closed,"2015-03-19 15:51:44","2015-03-19 15:51:44",1
"The Titanium SDK ","iOS: Remove pcm missing warnings","Since we released 5.0.0.GA to support Xcode 7/iOS 9, we noticed the following extra warnings when doing an Xcode build.      These should not appear.    Likely caused by https://forums.developer.apple.com/thread/17921",Bug,High,Closed,"2015-09-29 04:49:07","2015-09-29 04:49:07",5
"The Titanium SDK ","Dismissing popover with searchbar focussed crashes using Alloy","Originally I thought this might be fixed as part of #TIMOB-18380 but it isn't, and only seems to happen when it's constructed using Alloy code.     I have constructed the same thing using traditional titanium code, and there is no crash. I've attached a sample code repo that contains a simple Alloy version of what I'm trying to do.    Steps to recreate:    1. Launch attached sample code  2. Click on the label Click Me  3. Highlight the search bar (DO NOT ENTER ANY TEXT)  4. Click on the faded background outside of the popover to dismiss it  5. App will crash",Bug,Critical,Closed,"2015-03-06 15:39:36","2015-03-06 15:39:36",1
"The Titanium SDK ","TextArea wont stay focussed in Android (Lollipop)","Adding a textArea as normal to a Table Row.  When i click into the text area, the keyboard is shown, with the spelling toolbar.  Then the toolbar quickly hides and the textArea appears to have lost focus but keyboard is still shown.  The text are is not updated when i type.  If i very quickly type as i click the text area, it stays focussed.",Bug,Critical,Closed,"2015-03-06 11:55:02","2015-03-06 11:55:02",1
"The Titanium SDK ","ScrollView hide self content when borderRadius of child view greater than 0","Code is self descriptive.    {code:title=index.html|borderStyle=solid}  <Alloy>      <Window onOpen=windowOppened>          <ScrollView>              <Label text=I'm also not visible />              <View borderRadius=5 layout=vertical>                                    <Label width=Ti.UI.FILL onClick=doClick>1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n</Label>                             </View>          </ScrollView>      </Window>  </Alloy>  ",Bug,Critical,Closed,"2014-12-28 16:02:21","2014-12-28 16:02:21",1
"The Titanium SDK ","Bug with Ti.UI.SIZE for view height on android","height for view on android calculating wrong and different then on iOS  this happens if layout set to 'horizontal' and child views have width set to Ti.UI.FILL    ~~~  var win = Ti.UI.createWindow({      backgroundColor : '#fff'    });    var font = {      fontSize : '14dp'  };    var View = Ti.UI.createView({      height : Ti.UI.SIZE,      borderColor : '#666',      borderWidth : '1dp',      left : '10dp',      right : '10dp',      top : '50dp',      layout : 'horizontal',      backgroundColor : '#dfd'  });    var toLabel = Ti.UI.createLabel({      left : '5dp',      top : '5dp',      text : 'To:',      width : Ti.UI.SIZE,      font : font,      backgroundColor : '#dfa'  });  var toCardLabel = Ti.UI.createLabel({      top : '5dp',      right : '5dp',      text : '123456789\n($456)',      width : Ti.UI.FILL,      textAlign : 'right',      font : font,      color : '#666',      backgroundColor : '#bfd'  });    var fromLabel = Ti.UI.createLabel({      left : '5dp',      top : '5dp',      text : 'From:',      width : Ti.UI.SIZE,      font : font,      backgroundColor : '#bdd'    });  var fromCardLabel = Ti.UI.createLabel({      top : '5dp',      right : '5dp',      text : '123456789\n($456)',      width : Ti.UI.FILL,      textAlign : 'right',      font : font,      color : '#666',      backgroundColor : '#ee9'  });    var amountLabel = Ti.UI.createLabel({      left : '5dp',      top : '5dp',      bottom : '5dp',      height : Ti.UI.SIZE,      text : 'Amount to transfer:',      width : Ti.UI.SIZE,      font : font,      backgroundColor : '#ee6'  });  var amountField = Ti.UI.createLabel({      top : '5dp',      right : '5dp',      text : '$1245',      width : Ti.UI.FILL,      textAlign : 'right',      color : '#393',      font : font,      backgroundColor : '#cdb'  });    win.add(View);    View.add(toLabel);  View.add(toCardLabel);    View.add(fromLabel);  View.add(fromCardLabel);    View.add(amountLabel);  View.add(amountField);    win.open();  ~~~",Bug,Critical,Closed,"2014-12-24 14:47:35","2014-12-24 14:47:35",8
"The Titanium SDK ","Android: Add previewRect (height, width) to camera callback","When custom camera overlay is used add the size of the preview image on Android devices inside the camera callback        in order to position overlays correctly again.    Related ticket: https://jira.<USER>org/browse/TC-5105  Solution: http://androblip.huiges.nl/2010/07/25/camera-preview-size-picture-size-and-scaling/  ",Bug,Critical,Closed,"2015-09-17 16:32:42","2015-09-17 16:32:42",5
"The Titanium SDK ","Cannot load docx into webview from SDK3.4.x","What worked up to SDK3.3.x is I could load a hosted docx file in a webview.  {code: JavaScript}  var webview = Titanium.UI.createWebView({url:'link/to/file.docx'});    [DEBUG] :  New scheme: <NSMutableURLRequest: 0x78fbeec0> { URL: http://www.myurl.com/.../b4b8bfcee.docx }  [DEBUG] :  2014-11-18 10:53:48.814 myApp[61079:13647576] *** Assertion failure in +[WMTableCellStyle resolveStyleColorWithPercentage:foregroundColor:backgroundColor:], /SourceCache/OfficeImport_Sim/OfficeImport-222/qlviewer/WordMapper/WMTableCellStyle.mm:272  [DEBUG] :  2014-11-18 10:53:48.820 myApp[61079:13647576] EXCEPTION NSInternalInconsistencyException: Foreground color is not set.  {code}    I am generating docx files with phpWord and there is no Foreground Color attribute that can be set.",Bug,Critical,Closed,"2014-11-18 03:02:36","2014-11-18 03:02:36",1
"The Titanium SDK ","createHttpClient GET request, when 404 Android onError http error code not received","Create a new httpClient request, GET.  In the onError callback ask for the http response code.    Purposely make the URL to send a 404 not found    IOS, simulator and device, you will get the 404 code, and any error handling will execute.    Android will fail on both simulator and device.  Http code returned is -1.  You will also see an httpclient error in the console.    {code:title=Sample index.js code|borderStyle=solid}    var dataUrl = http://www.whateverdomain.com/404page; // add your 404 test URL here    function httptest()  {      var xhr = Ti.Network.createHTTPClient({    onload: function()    {     // whatever....    },    onerror: function(e) {     Ti.API.info(e.code);    },    timeout: 60000      });      xhr.open('GET', dataUrl);   xhr.send();  }    function init()  {   $.index.open();    httptest();  }    init();        {code}    ",Bug,Critical,Closed,"2014-10-10 21:21:18","2014-10-10 21:21:18",1
"The Titanium SDK ","Android: In ListViews transform is sometimes forgotten","Trying to implement a reversed list (one that has its start at the bottom of the screen) for a messaging app using double rotation (see the reproducibility code) some rows do not get the transformation property.    Looks like is the first one to be offscreen that shows this behavior.    {code:js}  var win = Ti.UI.createWindow();    var items = [];    var i = 0, l = 20;    for (; i < l; i++) {    items.push({      label: {        text: 'hallo ' + i      }    });  }    var section = Ti.UI.createListSection({    items: items  });    var reversedTemplate = {    childTemplates: [      {        type: 'Ti.UI.Label',        bindId: 'label',        properties: {          top: 10,          right: 10,          bottom: 10,          left: 10,          transform: Ti.UI.create2DMatrix({ rotate: 180 })        }      }    ]  };    var list = Ti.UI.createListView({    defaultItemTemplate: 'reversed',    sections: [ section ],    separatorInsets: { right: 20, left: 0 },    templates: { reversed: reversedTemplate },    transform: Ti.UI.create2DMatrix({ rotate: 180 })  });    win.add(list);    win.open();  {code}",Bug,Critical,Closed,"2014-10-04 22:44:01","2014-10-04 22:44:01",1
"The Titanium SDK ","Android: Expose color property of ProgressBar","Android Progress Bar's color property is not exposed. This can be exposed.",Improvement,High,Closed,"2015-09-28 03:55:27","2015-09-28 03:55:27",1
"The Titanium SDK ","Customize Activity Transitions","Activity transitions in material design apps provide visual connections between different states through motion and transformations between common elements. You can specify custom animations for enter and exit transitions and for transitions of shared elements between activities.    Can be divided into transition types    1. Content transition: Activity enter and exit transition.  2. Shared element transition: Transition between elements in different activities to give a seamless experience. Mostly used for master-detail. ","Technical task",Medium,Closed,"2015-09-25 03:11:29","2015-09-25 03:11:29",8
"The Titanium SDK ","Android: Customize Touch Feedback","Touch feedback in material design provides an instantaneous visual confirmation at the point of contact when users interact with UI elements. The default touch feedback animations for buttons use the new RippleDrawable class, which transitions between different states with a ripple effect.    In most cases, you should apply this functionality in your view XML by specifying the view background as:    ?android:attr/selectableItemBackground for a bounded ripple.  ?android:attr/selectableItemBackgroundBorderless for a ripple that extends beyond the view. It will be drawn upon, and bounded by, the nearest parent of the view with a non-null background.  Note: selectableItemBackgroundBorderless is a new attribute introduced in API level 21.    Alternatively, you can define a RippleDrawable as an XML resource using the ripple element.    You can assign a color to RippleDrawable objects. To change the default touch feedback color, use the theme's android:colorControlHighlight attribute.    For more information, see the API reference for the RippleDrawable class.","Technical task",Medium,Closed,"2015-09-25 03:08:57","2015-09-25 03:08:57",3
"The Titanium SDK ","Android: Update Facebook Module to support Facebook SDK 4.7.0","Facebook SDK has been updated to 4.7.0. Have to look at updating our module to support this.",Improvement,High,Closed,"2015-09-25 02:52:39","2015-09-25 02:52:39",13
"The Titanium SDK ","Windows: CLI Support targeting Windows 10 platform",,"New Feature",High,Closed,"2015-09-24 23:05:10","2015-09-24 23:05:10",13
"The Titanium SDK ","Windows: Ensure Windows 8.1 targeted projects can build with Visual Studio 2015",,Story,None,Closed,"2015-09-24 23:04:02","2015-09-24 23:04:02",13
"The Titanium SDK ","Windows: Ensure Windows 8.1 targeted projects can be built with VS 2013 on Windows 10",,Story,None,Closed,"2015-09-24 23:03:30","2015-09-24 23:03:30",5
"The Titanium SDK ","Windows: receivedResponse is not being set correctly when offline","*analytics.js - L198*      This causes an error when launching an app in debug mode whilst the device is offline.",Bug,Critical,Closed,"2015-09-23 23:27:55","2015-09-23 23:27:55",2
"The Titanium SDK ","iOS: Wrong log message when ATS is explicitly disabled","When building an app that defines the ATS policy in the tiapp.xml <ios><plist> section or custom Info.plist and the NSAllowsArbitraryLoads is set to true (i.e. disable ATS), the iOS build prints the incorrect message:        ATS is not actually enabled.",Bug,Medium,Closed,"2015-09-22 16:41:23","2015-09-22 16:41:23",2
"The Titanium SDK ","Last change made after useractivitywillsave does not make it to other device","While I was working on https://github.com/<USER>developer-relations/appc-sample-handoff when our SDK and Apple's were still not GA and since they became GA it seems like the behaviour around {{useractivitywillsave}} has changed:    * Before it fired directly after setting {{needsSave:true}} but now it only does before the activity is handed off. This is expected behaviour, so I guess OK.  * Before I any change I did to the activity's {{userInfo}} in the event listener for {{useractivitywillsave}} would be received by the {{continueactivity}} event on the other device. But now it is no longer. This is not expected behaviour, so definitely a bug!    To reproduce:    1. Build https://github.com/<USER>developer-relations/appc-sample-handoff to 2 devices  2. Make a change to the {{needsSave}} tab's title/message and continue on the other device  3. Check the logs on both and see that while the {{userInfo}} was updated in the {{useractivitywillsave}} on the first, it is not received in {{continueactivity}} on the other.    This seems like a serious bug because this makes handoff not usable for dynamic content.",Bug,High,Closed,"2015-09-22 14:22:37","2015-09-22 14:22:37",3
"The Titanium SDK ","Ti.Locale.currentLanguage returns locale on iOS 9","Since iOS 9 the same Titanium SDK returns a different value for {{Ti.Locale.currentLanguage}}. It now returns the full locale instead of just the language:    *app.js*      *iOS 8.4*      *iOS 9*      *Code*  * https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/LocaleModule.m#L26-L29  * https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/TiLocale.m#L32-L42    Found by Q&A user  https://community.<USER>com/topic/3430/ti-locale-getcurrentlanguage-on-ios-9-returns-en-us-instead-en",Bug,High,Closed,"2015-09-22 13:31:10","2015-09-22 13:31:10",2
"The Titanium SDK ","iOS: TableView header has wrong default height","The default height of the UITableView section header is 29px, we currently use 20px. See the screenshot for comparison.     The fix is simple: Increase the value of the macro {{DEFAULT_SECTION_HEADERFOOTER_HEIGHT}} inside the TiUIListView.m from 20 to 29 and check the results.    *Demo code*:  ",Bug,Low,Closed,"2015-09-22 04:15:40","2015-09-22 04:15:40",1
"The Titanium SDK ","Android: HttpClient patch method doesn't work from 5.0.0","From release 5.0.0, the patch method doesn't work.      CONSOLE :  ",Bug,High,Closed,"2015-09-18 14:58:09","2015-09-18 14:58:09",5
"The Titanium SDK ","iOS: Ti.Network connecting to pubnub service crashes on ios9 devices","h3. Steps to reproduce  * Create a new app  * run the attached app.js  * app crashes 50% of the times    h3. Logs when crashing:    h3. Log when app does not crash:      h3. Notes  I ran this on an iPod touch 5th gen with iOS9 and with Trace enabled (from cli)  ",Bug,High,Closed,"2015-09-21 23:20:45","2015-09-21 23:20:45",5
"The Titanium SDK ","Build on device with Xcode 7 and SDK 3.5.0GA not possible","Project contains module dependent to SDK version 3.5.0.GA, after updating from Xcode 6 up to Xcode 7, the project now fails to build to simulator or devices. (See attached screenshots) ",Bug,None,Closed,"2015-09-21 22:44:09","2015-09-21 22:44:09",1
"The Titanium SDK ","Android: HTTPClient fails when no contentType is specified in response","HTTPClient fails with the error below,       when no contentType is specified in response header. Till 4.x this was working, breaking only on 5.0.0.GA.    *+Note:+* As mentioned in docs here http://developer.android.com/reference/java/net/URLConnection.html#getContentType() it may return a string or null when type is unknown which is not handled here https://github.com/<USER>titanium_mobile/blob/24c69f037e9b4f91713c33c7afb7ffd31bc77933/android/modules/network/src/java/ti/modules/titanium/network/TiHTTPClient.java#L193",Bug,Critical,Closed,"2015-09-19 18:25:49","2015-09-19 18:25:49",1
"The Titanium SDK ","iOS: pngcrush fails build when crushing an invalid png image","If you have a .png image in your Resources dir that is actually a .gif but with the wrong extension, pngcrush will blow up and the build will fail.    Depending on your luck, you will either get no error or a file rename error. pngcrush returns 0 if crushing fails, which is probably a bug with pngcrush (or at least the one shipped with Xcode 7). The rename error happens because pngcrush take the input file and writes the crushed png to another file and the iOS build needs to rename it back to the correct filename. If the temporary crushed png image was never generated, then there's nothing to rename and then it blows up.    It's worth noting that in Titanium SDK 4.x and older, the iOS build called {{/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/iphoneos-optimize}}. This is a perl script that converts plists into binary format and crushes pngs. The problem with this script is if pngcrush fails, it aborts the entire script and returns 0. This is bad. A) this potentially does not optimize several unprocessed PNG images and B) doesn't return an error code. So, this image optimization has been silently failing for years.",Bug,Critical,Closed,"2015-09-21 04:59:40","2015-09-21 04:59:40",5
"The Titanium SDK ","iOS: Many PNG images causes device/dist builds to fail EAGAIN (too many processes)","If you build a project with a bunch of PNG images in the Resources dir, then build for iOS device or dist-*. Device and dist builds invoke pngcrush to optimize the images. This is done in parallel, but if you have 1000 images, then that's 1000 processes and then the build fails. This gives the effect that a random image is causing the problem.",Bug,Critical,Closed,"2015-09-18 21:19:47","2015-09-18 21:19:47",3
"The Titanium SDK ","iOS: JS files in Resources get minified if minification is not skipped","JS files in the Resources dir are getting minified. This is due to a bug introduced in Ti SDK 5.0.0.    To reproduce, do:            At this point, since we did't minify the JS files, the {{build/iphone/assets}} dir will contain symlinks to the original files in the Resources dir. titanium_prep happily encrypts them and all is good.        Now the iOS build will minify and then encrypt. Except this time, when we write the minified JS code to the assets dir, the destination exists and it's a symlink! When it writes to the symlinked JS file, it modifies the original in the Resources dir.",Bug,Critical,Closed,"2015-09-18 20:39:08","2015-09-18 20:39:08",5
"The Titanium SDK ","Unable to use CommonJS modules on real device with SDK 5.0.0.GA","h6.Reproduce  1. Create a new default mobile project.  2. Download a sample CommonJS module superagent from [http://gitt.io/component/superagent]  3. Include the module into project  4. Add following test code into app.js    5. Run the app with SDK 4.1.0.GA and 5.0.0.GA on both simulator and real device    h6.Actual Result  For SDK 4.1.0, both simulator and device all work well.  For SDK 5.0.0, Only simulator works well, on device, you will get a error like following  ",Bug,Critical,Closed,"2015-09-18 02:49:06","2015-09-18 02:49:06",3
"The Titanium SDK ","iOS: iPad Pro icon and splash screen support","  For the new iPad Pro there is a new icon 167x167 which is bigger than the current tablet 152x152 icon. We would like to have this support added to the TiSDK so that we provide the 167x167 icon and it then does the rest of the icon generation like it does for the 152x152 icon now on tablet builds. Also there needs to be support for the new iPad Pro splash screens for the resolutions:     {quote}  2048 x 2732 (portrait)   2732 x 2048 (landscape)   {quote}    h6.Apple Doc  https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html#//apple_ref/doc/uid/TP40006556-CH27-SW1 ",Bug,High,Closed,"2015-09-17 21:56:37","2015-09-17 21:56:37",5
"The Titanium SDK ","Glitchy font behaviour, when changed dynamically","Font gitches when being changed dynamically.    Old style:    $.label.font= {fontSize:16,fontFamily:'Avenir-Roman'};    change to after button is pressed:    $.label.font= {fontSize:18,fontFamily:'Avenir-Heavy'};    For example.    Sometimes the font will jump upward, to the left, right or the label will appear with ... then change.    I have tried to change the width settings like this $.label.width = TI.UI.Size; for the label, but had no luck.  ",Bug,Critical,Closed,"2014-09-24 18:57:29","2014-09-24 18:57:29",1
"The Titanium SDK ","CLI: Display actual version of installed SDKs with ti info -t ios and ti sdk list","As I've described in https://jira.<USER>org/browse/TC-4792 I often rename SDK folders so I don't have to change my project's {{<sdk-version />}} elements every time I install a new nightly build.    The downside of renaming the folder is that you loose the actual version number.    But actually, this version is still in the SDK folder's {{manifest.json}}. What I'd like to request is listing this version at {{ti info -t ios}} and {{ti sdk list}}.",Improvement,Critical,Closed,"2014-09-26 06:40:08","2014-09-26 06:40:08",2
"The Titanium SDK ","iOS: Ti.Network.HTTPClient does not work in synchronous mode in SDK 3.3.0+","I took the exact code that is in the documentation for Titanium.Network.HTTPClient and it works fine as it is for all environments.  I took the sample code and modified it by making the open() call synchronous ([async = false] for 3rd parameter) and it fails in SDK 3.3.0 and 3.4.0.  Normally I would not use synchronous mode, however, I inherited a large project that relies on a synchronous call and it fails.  The code below is the sample code with the one parameter modified.  You can stick this anywhere in a simple project and you should be able to see the problem.  Neither onload() or onerror() are called in SDK 3.3.0, but they are in SDK 3.2.3.  I've tried on Xcode 5 and 6 and iOS 7 and 8, with the same results.  It clearly seems to be a regression in SDK 3.3.0.    ",Bug,Critical,Closed,"2014-10-02 23:47:11","2014-10-02 23:47:11",5
"The Titanium SDK ","iOS: ScrollView scrolls to the top when typing text to TextArea","ScrollView scrolls to the top when typing some text to a TextArea. To be more specific when some key is pressed TextArea will show the last added letter and then it will scroll to the top. See end of the attached video when I am trying to type a word... It keeps going up and down. Also TextArea shouldn't be under a keyboard.    ",Bug,Critical,Closed,"2014-10-01 16:11:19","2014-10-01 16:11:19",1
"The Titanium SDK ","Android:  When Multiple Views in horizontal layout, SIZE constrains to the full container size, not the remaining available width","If you create a View with a horizontal layout and a fixed width, and two children, one of fixed width, and one of SIZE width, the second one will expand to, what appears to be, the full size of the container, even though this makes it run out of the containing view (and get cut off).  This works as expected in iOS.      Also, if you set the view to FILL, it doesn't get cut off in that case either.    Here's an example of code that demonstrates this issue.    Note, depending on screen size, part of the Alphabet label is getting cut off.  The amount that gets cut off seems to be dependent on the size of the view I've ID'ed as Control.    <Alloy>    <Window class=container layout=vertical >     <View id=Title layout=vertical height=Ti.UI.SIZE       width=90% top=5 bottom=5><Label height=Ti.UI.SIZE>Test 123</Label></View>         <View height=Ti.UI.SIZE width=87% layout=vertical>    <View layout=horizontal      height=Ti.UI.SIZE width=Ti.UI.FILL     backgroundColor=#400098C3     horizontalWrap=false     top=2 bottom=2    >     <View id=Control height=20 width=20      top=5 bottom=5      left=2 right=2     />     <Label id=Alphabet height=Ti.UI.SIZE width=Ti.UI.SIZE>abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz</Label>    </View>     </View>    </Window>   </Alloy>",Bug,Medium,Closed,"2014-09-29 19:28:26","2014-09-29 19:28:26",8
"The Titanium SDK ","Forward and reverse geo errors using APIs","h5. Description:  A kitchensink pass on Sunday worked as expected. Now we are getting reports of geocoder failures.    From the mapquest board: The legacy Free & Open Plan was the free tier offered prior to May 1, 2015 and the legacy keys associated with the former Free & Open Plan begin with an F.  Free & Open keys will work with Open Data APIs and SDKs hosted on open.mapquestapi.com.  Free & Open keys will eventually be transitioned -- with plenty of notice -- to our current Free plan.       h5. Steps to reproduce:  1) Install KitchenSink  2) Navigate to Phone - Geolocation    h5. Result:  Currently reverse Geocoding seems to be working, I am getting an address. But still errors are thrown from Forward and Reverse, see screens    h5. Expected Result:  Coordinates from address (forward) and Address from Coordinates (Revers) geocoding data accurate.",Bug,Critical,Closed,"2015-09-16 20:50:34","2015-09-16 20:50:34",5
"The Titanium SDK ","Validation of workspace-dir option always uses default workspace","When you create a project and use {{\-d <value>}} or {{\-\-workspace-dir <value>}} to use another directory then the default, the validation of the value will still check against the default workspace. Thus, if you already have a project (folder) with the requested name it will fail, even if the alternative workspace set via the option has not.    Bug:  https://github.com/<USER>titanium_mobile/blob/master/cli/lib/creator.js#L456-L457",Bug,High,Closed,"2015-09-16 06:49:32","2015-09-16 06:49:32",2
"The Titanium SDK ","iOS: Debugging your app onto device will crash on launch and fail on subsequent builds","*Details:* If you try to debug your app on device, the app will crash on launch. If you try to debug your app on device again, then the build will fail to install to device all together.    *Steps to reproduce:*  # Create the default Alloy app from Studio  # Add a breakpoint on line 2 in the index.js file  # Next, debug your app to device  # Once the app is installed, try to launch the app  *Actual:* The app will crash on launch:    # Delete the app and try to debug your app to device again  *Actual:* Build will fail with the following error:      *Expected:* You should be able to debug your app onto device without any issues.",Bug,Critical,Closed,"2015-09-16 01:12:58","2015-09-16 01:12:58",8
"The Titanium SDK ","iOS: Platform parity in Ti.UI.ActivityIndicator style property","Currently, the {{style}} property of the {{Ti.UI.ActivityIndicator}} needed to be if-cased for Android, MobileWeb and Windows on the one side and iOS on the other (using the .iPhone.) namespace.        For parity, we should migrate the iOS constants to work on the name namespace as the other platforms do and warn the dev about the deprecated namespace like we have done earlier with related use cases.",Improvement,Low,Closed,"2015-09-15 06:07:35","2015-09-15 06:07:35",3
"The Titanium SDK ","iOS - Ti.Media.AudioPlayer - error after sleep/wake","I use Ti.Media.AudioPlayer to play remote mp3s. If I pause the player, lock the screen, wait for ~30 seconds, wake it up and resume the playback, the audio plays for a few seconds and then stops. This is a big issue.    To reproduce:    1. Create a default alloy project.  2.Replace index.js with the following code:  ~~~  Ti.Media.audioSessionMode = Ti.Media.AUDIO_SESSION_MODE_PLAYBACK;  function doClick(e) {      audioplayer.pause();  }  var audioplayer = Ti.Media.createAudioPlayer({url:'http://www.stephaniequinn.com/Music/Vivaldi%20-%20Spring%20from%20Four%20Seasons.mp3'});  audioplayer.play();  $.index.open();  ~~~  3. add the following to tiapp.xml (ios->plist->dict)  ~~~  <key>UIBackgroundModes</key>  <array>         <string>audio</string>  </array>  ~~~  4. Launch the app. Wait for the music to play.  5. Pause the music by clicking Hello, World.  6. Go to Home (optional)  7. Lock the device. Wait for ~30 seconds.  8. Unlock the device. Open the app. Resume the music by clicking Hello, World.  9. The audio plays for a few seconds and then stop. Error: No audio data found.  10. Sometimes the error doesn't show up (rarely). Repeat from 5 - 9 until the error shows.    This test is run on an iPad 4. iOS 8. SDK 4.1.0.",Bug,Critical,Closed,"2014-06-27 20:04:39","2014-06-27 20:04:39",0
"The Titanium SDK ","iOS: App data folder is deleted on every build","    On every build with AppcStudio or console or with tishadow, the data folder of the app will be deleted.",Bug,Critical,Closed,"2015-09-11 11:12:11","2015-09-11 11:12:11",3
"The Titanium SDK ","Windows: Native stub generation fails on 'float32' when requiring StackPanel","When I required Windows.UI.Xaml.Controls.StackPanel in my app.js, the CLI ended up failing with:  ",Bug,High,Closed,"2015-09-14 23:45:56","2015-09-14 23:45:56",3
"The Titanium SDK ","Windows: Support setting Content property of ContentControl subclasses with a simple string content","If you're using native API access and create something like a Windows.UI.Xaml.Controls.Button, you'd naturally want to set a text label for the button. But the Content property is a Platform.Object with the understanding it could be a String or it could be an UIElement (in fact it could be a UIElement, and if it's not then it's basically converted to a String representation, though how that's done isn't really talked about).    We need to understand this nuance of the API and support settings string values easily, i.e.      https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.contentcontrol.content",Improvement,High,Closed,"2015-09-14 23:08:06","2015-09-14 23:08:06",5
"The Titanium SDK ","iOS build: ensure app icons are 24-bit (no transparency)","iOS apps cannot have app icons with an alpha channel. They must be 24-bit only. The iOS build must detect if the image is 24 or 32-bit.    If it's 32-bit, then it will need to either A) show a warning and automatically convert the image to a 24-bit image or B) fail the build. We may choose to default to one of these options and allow a tiapp.xml property to change behavior. Which option we go with will depend on input from [~<USER>, [~<USER>, [~<USER>, [~<USER>, and [~<USER>.",Improvement,Low,Closed,"2015-09-14 18:08:22","2015-09-14 18:08:22",13
"The Titanium SDK ","iOS9: Properties of person is unavailable (module Ti.Contacts)"," I tested my app and i appears that the module Ti.Contacts is broken. In fact, you can only get the properties identifier of a person. Other properties is unavailable and causing crash of the app.      ",Bug,Critical,Closed,"2015-09-11 14:19:10","2015-09-11 14:19:10",3
"The Titanium SDK ","Android: Use AppCompatButton for Ti.UI.Button","As you may have noticed Buttons look different on Android 4.x and 5.x. / 6.x  In order to make the Material Design available on older platforms Titanium should also use the AppCompatButton for a consistent look&feel across these Android versions. This also gives developers the opportunity to create common styles for buttons in a Theme ({{parent=Base.TextAppearance.AppCompat.Button}}).",Improvement,Medium,Closed,"2015-09-11 08:52:59","2015-09-11 08:52:59",3
"The Titanium SDK ","Android: org.appcelerator.titanium.TiActivity cannot be cast to android.support.v7.app.ActionBarActivity","If you follow the actionbar example from the documentation http://docs.<USER>com/platform/latest/#!/api/Titanium.Android.ActionBar you will get the following error.    Uncaught Error: org.<USER>titanium.TiActivity cannot be cast to android.support.v7.app.ActionBarActivity  ",Bug,Critical,Closed,"2015-09-13 04:16:22","2015-09-13 04:16:22",1
"The Titanium SDK ","Windows: wrong behavior for touch events","Per [TIMOB-19401|https://jira.<USER>org/browse/TIMOB-19401]    {quote}  When using the below code I do not see events get fired for for *touchstart* and *touchend* and the behaviour for *longpress* differs to Android and iOS. On Windows when listening for the *longpress* event the callback will be called twice, when the duration for a longpress is met and when the press is released, on iOS and Android a longpress is only fired once, when the length of time is met.  {quote}",Bug,Medium,Closed,"2015-09-12 15:19:03","2015-09-12 15:19:03",5
"The Titanium SDK ","Bump titanium_mobile master branch to 5.1.0","The time has come.",Story,High,Closed,"2015-09-11 19:29:10","2015-09-11 19:29:10",2
"The Titanium SDK ","Windows: Implement Ti.Filesystem.FileStream",,"New Feature",High,Closed,"2015-09-10 23:29:08","2015-09-10 23:29:08",5
"The Titanium SDK ","Windows: Implement Ti.BufferStream",,"New Feature",High,Closed,"2015-09-10 23:28:52","2015-09-10 23:28:52",5
"The Titanium SDK ","Windows: Implement Ti.BlobStream",,"New Feature",High,Closed,"2015-09-10 23:28:43","2015-09-10 23:28:43",5
"The Titanium SDK ","Windows: Implement Ti.IOStream",,"New Feature",High,Closed,"2015-09-10 23:28:32","2015-09-10 23:28:32",8
"The Titanium SDK ","Windows: Implement Ti.Stream",,"New Feature",High,Closed,"2015-09-10 23:25:24","2015-09-10 23:25:24",8
"The Titanium SDK ","iOS9: 3D-Touch: Support new UITouch properties + events","Apple just presented the new 3D-Touch feature of the iPhone6S. There are new events available, as well as methods to check whether a device supports 3D-Touch capabilities.    *New properties (available in iOS9.0)*:  - {{force}}: The force of the touch, where a value of 1.0 represents the force of an average touch (predetermined by the system, not user-specific). (read-only)  - {{maximumPossibleForce}}: The value of this property is sufficiently high to provide a wide dynamic range for values of the force property.  - {{forceTouchCapability}}: Shows whether or not 3D-Touch (aka forceTouch) is available. Possible constants: {{UIForceTouchCapabilityUnknown}}, {{UIForceTouchCapabilityAvailable}} and {{UIForceTouchCapabilityUnavailable}}    *Related documents*:  - https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UITouch_Class/  - https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UITraitCollection_ClassReference/#//apple_ref/occ/instp/UITraitCollection/forceTouchCapability","New Feature",Medium,Closed,"2015-09-10 17:18:37","2015-09-10 17:18:37",8
"The Titanium SDK ","Remove sqlite3 module and update to latest ioslib","The sqlite3 module is a liability. It is maintained by a 3rd party and may not always be compatible with the latest version of Node.js.    Since all sqlite is used for is querying Xcode teams, we can simply query the teams using the sqlite3 executable. This executable should be available on every Mac OS X machine, especially since we know Xcode is installed.    ioslib 0.6.9 has been updated to remove the sqlite dependency, but it's still referenced by Titanium SDK.",Improvement,None,Closed,"2015-09-10 14:32:18","2015-09-10 14:32:18",8
"The Titanium SDK ","Android: Error when accessing Actionbar","Regression in Master branch using this code: https://jira.<USER>org/browse/TIMOB-16619    Actionbar is not available as the activities are no longer extending ActionBarActivity. Instead, they are AppCompatActivity.        ",Bug,High,Closed,"2015-09-10 02:40:50","2015-09-10 02:40:50",3
"The Titanium SDK ","iOS9: 3D-Touch: Support UIPreviewActions (Peek and Pop)","Apple just presented the new 3DTouch feature of the iPhone6S. User can press a view and will review an instant feedback providing a preview of a view to select different actions, called {{UIPreviewAction}}. Each action have a {{title}}, {{style}} and {{handler}} property. Multiple actions can also be assigned to {{UIPreviewActionGroup}}. That group can have have a {{title}}, {{style}} and {{actions}} property to keep track of the assigned actions.    *Related documents:*  - https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIPreviewAction_Class/  - https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIPreviewActionGroup_Class/    *Example:*  ","New Feature",Medium,Closed,"2015-09-09 23:13:10","2015-09-09 23:13:10",13
"The Titanium SDK ","Windows: Generate missing app icons based on DefaultIcon.png","If any of the app icons are missing, then search for -{{<project-dir>/platforms/windows/DefaultIcon.png}}- and {{<project-dir>/DefaultIcon.png}} and us it to generate missing app icons.    You simply need to the base Builder object's {{generateAppIcons()}} method:        Here's a good article on MSDN about the assets for Windows apps: https://msdn.microsoft.com/en-us/library/windows/apps/mt412102.aspx",Improvement,Medium,Closed,"2015-09-09 21:45:35","2015-09-09 21:45:35",8
"The Titanium SDK ","Android: Generate missing app icons based on DefaultIcon.png","If any of the app icons are missing, then search for {{<project-dir>/platforms/android/DefaultIcon.png}} and {{<project-dir>/DefaultIcon.png}} and us it to generate missing app icons.    You simply need to the base Builder object's {{generateAppIcons()}} method:    ",Improvement,High,Reopened,"2015-09-09 21:45:00","2015-09-09 21:45:00",8
"The Titanium SDK ","Windows: Implement Ti.Contacts.Person","http://docs.<USER>com/platform/latest/#!/api/Titanium.Contacts.Person  https://msdn.microsoft.com/library/windows/apps/br224849  ","New Feature",High,Closed,"2015-09-09 17:10:51","2015-09-09 17:10:51",8
"The Titanium SDK ","Windows: Implement Ti.Contacts.Group","http://docs.<USER>com/platform/latest/#!/api/Titanium.Contacts.Group  https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.contacts.contactlist.aspx","New Feature",High,Closed,"2015-09-09 17:10:25","2015-09-09 17:10:25",8
"The Titanium SDK ","Parity: Ti.UI.View.add should support array of views on Android as iOS","On iOS {{Ti.UI.View.add()}} accepts an array of views:  https://github.com/<USER>titanium_mobile/blob/0357b4796abf0032485018fac42614a94f826c9b/iphone/Classes/TiViewProxy.m#L148    On Android it does not:  https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/view/TiUIView.java#L159    This is a very useful feature and looking at the iOS code simple to implement for Android and Windows as well.    Related question on Q&A:  https://community.<USER>com/topic/3075/unable-to-add-array-of-views-to-parent-view-on-android",Improvement,High,Closed,"2015-09-09 16:37:39","2015-09-09 16:37:39",3
"The Titanium SDK ","Bump supported Node.js to 4.0.x","Update the supported Node.js version to 4.0.x.",Improvement,High,Closed,"2015-09-09 16:14:58","2015-09-09 16:14:58",2
"The Titanium SDK ","Parity for Android and iOS on handling of permissions","The M Developer Preview introduces a new app permissions model which streamlines the <USER>for users to install and upgrade apps. If an app running on the M Preview supports the new permissions model, the user does not have to grant any permissions when they install or upgrade the app. Instead, the app requests permissions as it needs them, and the system shows a dialog to the user asking for the permission. This is similar to the current iOS implementation on Titanium, so we should work towards parity for both platforms in this regard.",Epic,High,Closed,"2015-09-09 03:03:15","2015-09-09 03:03:15",1
"The Titanium SDK ","Update node-ios-device with latest Node.js compatible binary","With Node.js 4.0.0 going GA, node-ios-device's binaries need to be updated.",Improvement,High,Closed,"2015-09-08 19:39:26","2015-09-08 19:39:26",8
"The Titanium SDK ","Add support for DefaultIcon.png to generate missing app icons/artwork","With the introduction of Asset Catalog support for app icons for iOS 9, we no longer use the appicon.png and <EMAIL> images other than to resize them to generate missing images.    Furthermore, it build now requires appicon.png or <EMAIL> to be at least 180x180 pixels.    Since this is sort of awkward change of behavior, it would be better to introduce a new image called DefaultIcon.png that we use to generate all missing icons as well as the iTunesArtwork for iOS builds.    Initially this would be implemented for iOS. Android, Windows, and Mobile Web support would be implemented in different tickets.    Since the DefaultIcon.png should not be apart of a built app, it must not go in the Resources directory and thus shall be searched for in the project root directory.",Improvement,High,Closed,"2015-09-08 18:46:17","2015-09-08 18:46:17",8
"The Titanium SDK ","CSS is not minified when building Android apps","When building an app with any CSS files for Android, the CSS files are not minified for test and production builds.",Bug,High,Closed,"2015-09-08 18:34:53","2015-09-08 18:34:53",5
"The Titanium SDK ","Ti.App.iOS.SearchableItem.uniqueIdentifier is implemented as identifier","The documents have [Ti.App.iOS.SearchableItem.uniqueIdentifier|https://<USER>github.io/appc-docs/latest/#!/api/Titanium.App.iOS.SearchableItem-property-uniqueIdentifier] which is what it should be, given the Obj-C API, but the code implements it as [identifier|https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/TiAppiOSProxy.m#L177].    The implementation needs to be changed to {{uniqueIdentifier}}.",Bug,Medium,Closed,"2015-09-07 14:29:23","2015-09-07 14:29:23",5
"The Titanium SDK ","iOS9: Ti Contact might lead to a app crash","h6.Reproduce  1.Simply run the following code.    2.Click the add button to add a new contact  3.Click the search button.    h6.Result:  App will crash.",Bug,High,Closed,"2015-09-07 11:20:38","2015-09-07 11:20:38",5
"The Titanium SDK ","Cannot build with Windows SDK: Microsoft Windows Store SDK is missing the deploy command.","There are two Q&A topics from users that claim to have correctly installed the Windows SDK and are even able to run an app through Visual Studio but see Titanium fail and {{ti info}} saying:    {quote}  Microsoft Windows Store SDK is missing the deploy command.  {quote}    This originates from:  https://github.com/<USER>windowslib/blob/master/lib/winstore.js#L347-L355     * https://community.<USER>com/topic/2924/can-t-add-windows-local-machine-in-run-configuration-for-writing-the-apps-for-windows-8-1-store-desktop  * https://community.<USER>com/topic/3090/titanium-studio-windows-phone-sdk-problem",Bug,None,Resolved,"2015-09-07 08:46:34","2015-09-07 08:46:34",1
"The Titanium SDK ","CLI: ti setup doesn't properly select last available versions from npm","When I run {{ti setup}} and select *check* I get:        However, on https://www.npmjs.org/package/npm and via {{npm info npm}} it has *2.1.5* as the last version. The {{versions}} array does have 2.1.6 but the CLI should look at {{version}} not {{versions}}.    h2. Related code    https://github.com/<USER>titanium/blob/master/lib/commands/setup.js#L516-L522        h2. Proposed chage    The above lines with:    ",Bug,Critical,Closed,"2014-10-29 09:09:59","2014-10-29 09:09:59",2
"The Titanium SDK ","Cannot install a mobile app that contains a watchkit1 extension to an iOS device","*Details:* Cannot install a mobile app that contains a watchkit1 extension to an iOS device.    *Note:* This issue is also reproducible from Appc CLI.    *Steps to reproduce:*  # Create a Titanium App with {{ti create}}  # Next, go into the project and create the Apple Watch App with {{ti create}}  # Make sure the mobile app, watchkit app, and watchkit extension have the correct app ids: com.appc.monkey, com.appc.monkey.watchkitapp, and com.appc.monkey.watchkitextension  # Make sure you have development provisioning profiles for each app id with app group id enabled  # Make sure to app group capabilities is enabled in the watchkit extension target and watchkit app target  # Next, install the mobile app to an iOS device that is paired to a watch: {{ti build -p ios -T device}}    *Actual:* Build will fail to install to device with the following error:      *Expected:* Should be able to install a mobile app with watchkit extension.",Bug,Critical,Closed,"2015-09-04 22:09:59","2015-09-04 22:09:59",5
"The Titanium SDK ","Xcode 7: appc ti info -t ios can only detect one iOS 9.0 device","*Details:*  If you are using Xcode 7 with the latest 5.0.0 stack, the following occurs with {{appc ti info -t ios}}:  * If two iOS 9 devices are connected to your machine, *only one* iOS 9 device appears in {{appc ti info -t ios}}.  * If one iOS 9 device and one iOS 8 device are connected to your machine, *only the iOS 9 device* appears in {{appc ti info -t ios}}.  * If *two iOS 8* devices are connected to your machine, then *both iOS 8* devices appears in {{appc ti info -t ios}}.    *Note:* This will affect Studio, which will only show one device in the drop down list.    *Steps to reproduce:*  # Get the latest 5.0.0 stack with Xcode 7 beta 6 on your machine  # Plug in at least two iOS 9 devices *or* one iOS 9 and iOS 8 devices to your machine  # Run {{appc ti info -t ios}}    *Actual:* Only one iOS 9 device will appear.  *Expected:* All valid iOS devices should appear.",Bug,None,Closed,"2015-09-04 18:14:16","2015-09-04 18:14:16",1
"The Titanium SDK ","Ti.App.iOS.SearchableItemAttributeSet.thumbnailURL is not working","The [thumbnailURL|https://<USER>github.io/appc-docs/latest/#!/api/Titanium.App.iOS.SearchableItemAttributeSet-property-thumbnailURL] property is not working as you can see when you use [~<USER>'s [sample app|https://github.com/cheekiatng/Titanium-Search-Sample-App/blob/master/Resources/app.js#L73] and uncomment the {{thumbnailData}} lines and use the same file paths for {{thumbnailURL}}.",Bug,High,Resolved,"2015-09-04 12:48:13","2015-09-04 12:48:13",3
"The Titanium SDK ","iOS: Titanium Labels not aligned on horizontal layout in a view","h6.Issue Description    There is an horizontal view and when the user add Labels and/or text inputs to the view the label text is not aligned at the edge of the screen, see the attached image.     h6.Expected behavior    The text should be aligned     h6.Steps to Replicate:   1. Create a new titanium classic default project   2. Open the app.js file  3. Replace the app.js with the code in the test case  4. Run on iOS iphone 5/5S     h6.Test Case    ",Bug,Medium,Closed,"2015-09-03 06:31:57","2015-09-03 06:31:57",1
"The Titanium SDK ","Windows: Test CLI on Windows 10 + VS 2013","Test CLI on Windows 10 + Visual Studio Community Edition 2013.",Story,Medium,Closed,"2015-09-02 14:03:53","2015-09-02 14:03:53",5
"The Titanium SDK ","Add Swift versions of the applewatch templates","Our current [applewatch|https://github.com/<USER>titanium_mobile/tree/master/templates/applewatch] templates are in Obj-C while many Xcode developers are switching to Swift. Titanium developers with no/little Xcode experience will likely also find Swift easier.    So, we should have Swift-versions of the applewatch templates and probably default to that.    * {{watchos2-swift}} Swift (new default)  * {{watchos2-objc}} Obj-C (current)    PR: https://github.com/<USER>titanium_mobile/pull/7496","New Feature",High,Closed,"2015-09-02 08:30:18","2015-09-02 08:30:18",8
"The Titanium SDK ","Extensions should default to the app's provisioning profile if not set","Right now when you don't have provisioning profiles set up for your extensions you will get an error like:        However, it's perfectly fine to use a wildcard app id provisioning profile for both the app, watch-app and extension.    My suggestion would be to maybe warn, but still continue and use the provisioning profile selected for the app for the watch-app and extensions as well.    For sample apps e.g. then all we need to ask is for them to add the Apple Watch to their wildcard, if they haven't already done so. Instead of giving them the impression that they need to go through the hassle of creating all these profiles and adding them to {{tiapp.xml}}.",Improvement,Medium,Closed,"2015-09-02 06:38:29","2015-09-02 06:38:29",3
"The Titanium SDK ","Launching titanium app from latest fails on OS X","h5. Description:  Script Error Couldn't find module: ti.cloud for architecture: x86_64    When creating a project from the <USER>CLI and building to simulator, the app throws a runtime error as shown.    NOTE: This only occurs when creating a project from the Appc CLI. Creating a project using Studio with or without services runs as expected.    h5. Steps to reproduce:  1) Using Appc CLI, create a new Titanium project  2) Use appc run command to launch, choose iOS simulator     h5. Result:  Runtime error on device    h5. Expected Result:  Application runs as expected    h5. Note:  A diff on the projects prior to run (created in studio versus appc CLI) shows only the following additional lines included in the alloy.js in the project created by Appc CLI:  ",Bug,Critical,Closed,"2015-08-31 14:35:34","2015-08-31 14:35:34",8
"The Titanium SDK ","iOS9: Support block callback on watchOS 2","Right now, I have to add a session delegate to receive a message back from the device.  It took me a little bit to realize this.  I was using this: https://developer.apple.com/library/prerelease/watchos/documentation/WatchConnectivity/Reference/WCSession_class/index.html#//apple_ref/occ/instm/WCSession/sendMessage:replyHandler:errorHandler:    Expecting to use the reply block.",Improvement,Medium,Closed,"2015-09-01 13:17:58","2015-09-01 13:17:58",13
"The Titanium SDK ","Cannot build for iOS device or package the app on latest build ","On the latest build for master branch, cannot build a titanium project on iOS device or package for adhoc or appstore distribution.    The issue occurs on ti sdk build 5.0.0.v20150831202903. It does not happen on previous ti sdk build on my system i.e. 5.0.0.v20150829212027    Steps to reproduce:  1. Create a new titanium project  2. try to build for iOS device or package. appc run -p iOS -T device -I 9.0    Actual Result:  The build terminates in between with exit code 0. Refer to attached logs.    Expected Result:  The project should build successfully for device and distribution.",Bug,Critical,Closed,"2015-09-01 09:36:31","2015-09-01 09:36:31",3
"The Titanium SDK ","Windows: ti build failed when logo image assets with invalid dimension exits","{{ti build}} failes when Ti project has special kind of image assets (Logo.png, SplashScreen.png) with invalid dimension. This happens especially when you bring Ti project from other platforms which already has splash screen / app icon assets, like [Movies|https://github.com/<USER>movies] app.        Possible workaround would be to convert these images to valid dimension at pre-build, or just ignore these special assets only when it has invalid dimension.",Bug,Medium,Closed,"2015-09-01 01:24:37","2015-09-01 01:24:37",5
"The Titanium SDK ","Windows: ScrollView contentOffset doesn't work","{{ScrollView.contentOffset}} doesn't work.    ",Bug,Medium,Closed,"2015-08-31 09:28:32","2015-08-31 09:28:32",5
"The Titanium SDK ","Android: Null passed to putExtra() causes app to crash","Creating a separate ticket for my comments on TIMOB-18098.     PR https://github.com/<USER>titanium_mobile/pull/6958    Our app crashes frequently when the it's woken from the background by the user tapping a push notification. We are using the http://<USER>net/post/40100981563/gcm-<USER>titanium-module GCM module.         If the app is open when the message arrives, it is received and handled fine. If the app is in the background, we see the above in the adb logs. I have tried with 3.5.0.GA, 3.5.1.GA, 4.0.0.GA, and a nightly I built myself (don't recall the date of that build, but post GA). Tested on both Android 5.0 and 4.2.2 devices.    I have found that a simple null value check in the putExtra() method resolves this issue.         https://github.com/<USER>titanium_mobile/pull/6958 (master)  https://github.com/<USER>titanium_mobile/pull/6957 (3_5_X)  ",Bug,Critical,Closed,"2015-08-18 15:17:01","2015-08-18 15:17:01",3
"The Titanium SDK ","Android: Change Preference Activity to Preference Fragment","With material design, https://jira.<USER>org/browse/TIMOB-19377 the Preference Activity looks different from how the other activities look. Basically, it's not using any material design.    We can look into changing Preference Activity to PreferenceFragment to support material design so that the look and feel remains consistent throughout the application.",Improvement,Medium,Closed,"2015-08-31 02:03:21","2015-08-31 02:03:21",3
"The Titanium SDK ","Android: Support Floating Action Button","Requesting to support Floating Action Button    * http://www.google.com/design/spec/components/buttons-floating-action-button.html  * http://www.materialdoc.com/floating-action-button/    ----    I'm trying to create a transparent view on top (in front) of the main view.     I want the main view (at the back) to have 100% width and height. The second view is placed at the bottom 20% height an 100% width .    The second view is transparent with multiple circular button or images which i'll use as buttons.    Currently I can't get views to overlap (one on infront (top) and one at the back) they just get aligned next to each other (top, bottom, left or right).    I've attached an example with one button on the left","New Feature",High,Closed,"2015-03-31 15:30:37","2015-03-31 15:30:37",13
"The Titanium SDK ","Android: i18n translations CR+LF not working on 4.1","Till now (version 3.5.0GA) to do a CR+LF in alerts I was using successfully *\n\n*    Now in 4.1.1 it's not working for *Android* at least (only in translations, it works in direct tests).    To test it:      ",Bug,Critical,Closed,"2015-08-17 12:30:44","2015-08-17 12:30:44",1
"The Titanium SDK ","Cannot build a mobile app with Xcode 6.4 and SDK 5.0.0","*Details:* Cannot build a mobile app with Xcode 6.4 and SDK 5.0.0.    *Steps to reproduce:*  # Make sure you have Xcode 6.4 on your machine and {{sudo xcode-select -s}} pointing to it  # Create a mobile project with: {{appc new}}  # Build the project with: {{appc run -p ios}}    *Actual:* Project will fail to build:      *Expected:* Should be able to build a mobile project with SDK 5.0.0 and Xcode 6.4.",Bug,Critical,Closed,"2015-08-28 22:01:52","2015-08-28 22:01:52",1
"The Titanium SDK ","Use name method/event names on Titanium and Watch side of session","Most methods, properties and events of {{Ti.WatchSession}} share their names with the Apple Watch side of the session. However, some are not and this could easily lead to mistakes so the more we can align them the better.    * {{Ti.WatchSession.active()}}  ** On Apple Watch: {{activateSession}}  * {{Ti.WatchSession.updateAppContext()}}  ** On Apple Watch:  {{updateApplicationContext}}  ** Then also rename {{Ti.WatchSession.recentAppContext}} to {{Ti.WatchSession.recentApplicationContext}}  * {{Ti.WatchSession:watchSessionReceivedMessage}}  ** On Apple Watch: {{(did)ReceiveMessage}}  * {{Ti.WatchSession:watchSessionReceivedUserInfo}}  ** On Apple Watch: {{(did)ReceiveUserInfo}}  * {{Ti.WatchSession:watchSessionReceivedFile}}  ** On Apple Watch: {{(did)didReceiveFile}}  * {{Ti.WatchSession:watchSessionReceivedAppContext}}  ** On Apple Watch: {{(did)didReceiveApplicationContext}}  * {{Ti.WatchSession:watchSessionFinishedUserInfoTransfer}}  ** On Apple Watch: {{(did)FinishUserInfoTransfer}}  * {{Ti.WatchSession:watchSessionFinishedFileTransfer}}  ** On Apple Watch: {{(did)FinishFileTransfer}}    The {{watchSession}} prefix for the {{Ti.WatchSession}} events is a bit redundant anyway and since {{did*}} is more Obj-C/delegate style then JS, we could use {{finishFileTransfer}} for {{didFinishFileTransfer}}.",Improvement,High,Closed,"2015-08-28 12:42:51","2015-08-28 12:42:51",3
"The Titanium SDK ","Windows: animate doesn't work when duration is short","View.animate doesn't work when duration is short, such as 250. Following example works when duration is 1000 (1 sec).    ",Bug,None,Closed,"2015-08-28 12:36:28","2015-08-28 12:36:28",5
"The Titanium SDK ","iOS: After a few builds, icons and launch images are missing","While working on the [Ti 5.0 Sample App|https://github.com/<USER>developer-relations/appc-sample-ti500] I noticed that on the second and following builds the app is in letter box mode and the icon and launch image is missing (which triggers the letter box of course).    Probably related to the incremental builds.",Bug,Critical,Closed,"2015-08-28 08:52:14","2015-08-28 08:52:14",8
"The Titanium SDK ","Android M: App crashes if using camera in device due to permissions","The problem is, the app doesn't prompt the user for permissions, and even if the permissions are set, the app crashes.    h4. Steps to reproduce:  1. Use the sample app  2. ti build  3. it will show an error  4. Go to settings permissions, set the app permission such that storage = YES, camera = NO  5. App will crash    *Note* if both permissions are set to YES MANUALLY like (4.), the app works.    ",Bug,Critical,Closed,"2015-08-28 04:13:16","2015-08-28 04:13:16",13
"The Titanium SDK ","Android: Scons crash when target for API 23","Scons crashes with multiple errors when change the target build SDK to 23.  Step to reproduce:  1.Install SDK 23 via Android SDK Manager.  2. in SConstruct file (Titanium_Mobile -> SConstruct), modify android_sdk to 23 (this line):  sdk = AndroidSDK(ARGUMENTS.get(android_sdk, None), 23)    3. run scons and observe crash.",Bug,High,Closed,"2015-08-27 21:48:03","2015-08-27 21:48:03",5
"The Titanium SDK ","iOS9: Ti.App.setForceSplashAsSnapshot(true); causes Yellow Multitasking and Notification popup screen","h6.Issue Description  When using the method Ti.App.setForceSplashAsSnapshot(true); either multitasking or prompting for a notification a yellow screen is shown. On earlier SDKs it shows the splash screen.     h6.Steps to reproduce   1. Build attached app with Xcode 7 beta6   2. Launch in iOS simuator    3. Multi task, notice the yellow screen, it should be the splash screen.",Bug,High,Closed,"2015-08-27 16:17:47","2015-08-27 16:17:47",8
"The Titanium SDK ","Error while building a titanium project to iOS device","An error is shown when trying to build a project to iOS device.    The issue occurs on the latest build of sdk on master branch. On an older build from master branch the issue does not occur. I tried the sdk build 5.0.0.v20150825004430 on which the issue does not occur.    Steps to Reproduce:  1. Create a new titanium project using ti create  2. Run it on the device. ti build -p iOS -T device    Actual Result:  An error is shown  ",Bug,Critical,Closed,"2015-08-27 03:40:37","2015-08-27 03:40:37",2
"The Titanium SDK ","Windows: Classic app throws application error error while require(/app) when cloud module 3.2.9 is used","*Note: This is a regression. This issue is not seen with cloud module 3.2.8.*    h5.Steps To Reproduce:  1. Create a default classic app.  2. Build for windows device/emulator with cloud module 3.2.9.  3. Let the app launch.    h5.Actual Results:  1. We get application error:    2. Removing the ACS injected code while creation, we don't see this issue.  3. Might be this caused this issue: https://github.com/<USER>modules/ti.cloud/commit/19977e7570cbf50a27a679d3711c026f15d8825f    h5.Expected Results:  1. The classic app should launch without any application errors.",Bug,Critical,Closed,"2015-08-27 00:34:16","2015-08-27 00:34:16",3
"The Titanium SDK ","Windows: Improve compile time of WindowsNativeModuleLoader for Native API access","Right now we have it include the headers for every wrapper type. But we could have it only include a minimal set. We already have the full dependency graph during generation of the native wrappers and this file, so we could potentially pare down the set of includes to be only the leaves of the dependency tree (i.e. If we include Windows.Ui.Xaml.Controls.TextBlock that will already include it's parent of Windows.UI.Xaml.Controls.FrameworkElement and on up the chain, so we don't need to include those in WindowsNativeModuleLoader).    The same trimming could be used in the generated proxy wrapper cpp files as well.",Improvement,Medium,Closed,"2015-08-26 17:44:06","2015-08-26 17:44:06",8
"The Titanium SDK ","WatchOS2 template should demonstrate use of WatchConnectivity","Out of the box the WatchOS2 template does not connect with the Titanium app it is bundled with.    The storyboard should have some buttons and the {{InterfaceController.m}} and {{.h}} some basic code to demonstrate how to import and use {{WatchConnectivity/WatchConnectivity.h}}.    Current template InterfaceController:  https://github.com/<USER>titanium_mobile/blob/master/templates/applewatch/watchos2/template/%7B%7BExtName%7D%7D%20WatchApp%20Extension/InterfaceController.m.ejs    Kiat's sample app with basic UI and logic:  https://github.com/cheekiatng/Titanium-WatchOS2-Sample-App/blob/master/extensions/SGDemoWatchOS2/SGDemoWatchOS2%20WatchApp%20Extension/InterfaceController.m",Improvement,Medium,Closed,"2015-08-26 12:47:01","2015-08-26 12:47:01",5
"The Titanium SDK ","iOS project containing extension will warn about bumping deployment target even though it's already 9.0","Even when I've set { <min-ios-ver>9.0</min-ios-ver>}} and even {{<min-sdk-ver>9.0</min-sdk-ver>}} (but that's unrelated right?) I will still get a warning that the deployment target will be changed from 7.1 to 9.0. When I remove the {{<extension>}} I can confirm that after a new clean build {{build/iphone/*.xcodeproject/project.pbxproj}} correctly has {{IPHONEOS_DEPLOYMENT_TARGET = 9.0;}} already, so I don't get the warning.    ",Bug,High,Closed,"2015-08-26 11:55:47","2015-08-26 11:55:47",5
"The Titanium SDK ","iOS: ListView not rendered","When population a ListView, the ListView sometimes seem to not be rendered at all.  This occurs at random and does not throw any errors.  The two attached screenshots show the same screen. When restarting the app it sometimes renders the ListView, and sometimes not.    Here is the Alloy xml of the ListView:            And this is the code that updates the ListItems:      The output from the console is:  [INFO] :   UI pass start  [INFO] :   UI pass, dataset: 48  [INFO] :   UI pass, complete    The output is +the same+ when the ListView is rendered and when it is not.    Anyone has any ideas?",Bug,Critical,Closed,"2015-08-24 09:16:55","2015-08-24 09:16:55",8
"The Titanium SDK ","Windows: Layout parity: View should crop child view","{{Ti.UI.View}} and its subclasses should crop child views if they are bigger than the parent view. Currently child views does overflow parent view.     ",Bug,High,Closed,"2015-08-26 05:19:11","2015-08-26 05:19:11",13
"The Titanium SDK ","Unable to build project with latest android tooling","It keeps hanging on dexer.  Once I upped the memory size to 512, i finally got an error back (after waiting about 10 minutes).    Dexer command:        Error I finally get back:        Environment:        ",Bug,Low,Resolved,"2015-08-25 21:16:42","2015-08-25 21:16:42",0
"The Titanium SDK ","Android: Building default classic app with SDK 5.0.0.v20150825082243 throws runtime error","*This is a regression. Don't see this issue with 5.0.0.v20150824091229.*    h5.Description:  1. Create a default classic app with SDK 5.0.0.v20150825082243.  2. Build for device/emulator.  3. Let the app launch.    h5.Actual Results:  1. After launch the app throws runtime error:    2. This issue is reproducible from appc CLI as well.  3. Attached screenshot for reference.    h5.Expected Results:  1. The app should build successfully with no runtime errors.   ",Bug,Critical,Closed,"2015-08-25 18:51:34","2015-08-25 18:51:34",5
"The Titanium SDK ","iOS9: Support Tablet or Smartphone icons sets","h6.Issue Description  When building a tablet application the CLI requires the 180x180 iPhone 6s icon as [outlined by Apple|https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html#//apple_ref/doc/uid/TP40006556-CH27-SW1]     --platform flag is being used and pass in iPhone or iPad which [according to doc| http://docs.<USER>com/platform/latest/#!/guide/<USER>Command-Line_Interface_Reference] now just map to ios.     h6.Proposal for this request  Is it possible to have the TiSDK changed so that if the 180x180 icon is not present but the 152x152 icon is for a tablet app it will warn that the phone icon is not present but will proceed and make the needed tablet icons from the 152x152 icon. That or bring back the platforms flag and then let it check the assets based on that.     {quote}  -p, --platforms <platform>   Target build platform: Supported values are android, ios, and mobileweb. (iphone and ipad are currently accepted as synonyms for ios.)   {quote}    We don't have 180x180 images in our tablet build specs so if that is a new requirement it will be a decent effort on our side to complete and its not needed by Apple. It doesn't seem like the appropriate solution.     h6.Build Output  Currently we have the error as follows:   ",Bug,High,Closed,"2015-08-25 18:42:58","2015-08-25 18:42:58",5
"The Titanium SDK ","Windows: ImageView Layout parity","Make sure {{Ti.UI.ImageView}} layout parity. For instance, specifying {{Ti.UI.FILL}} for width & height should stretch image with size of the parent view.    ",Bug,Medium,Closed,"2015-08-25 09:11:04","2015-08-25 09:11:04",8
"The Titanium SDK ","App installed on the watch does not have an app icon","The app installed installed on the watch does not have an app icon. The app icon does appear if we add an app icon in the Xcode project of the watch extension.    Steps to Reproduce:  1. Create a titanium project  2. Add a Apple Watch app to it  3. Install the app to the device that is paired to to an Apple watch    Actual Result:  The app gets installed on the device and watch but does not have any app icon on the watch. The device does show the app icon.    Expected Result:  The app on the watch should also have the default app icon of titanium classic or alloy, same as on device. If user wants to change the app icon then it can be edited through the Xcode project of the extension.  ",Bug,High,Closed,"2015-08-25 07:26:18","2015-08-25 07:26:18",5
"The Titanium SDK ","Windows: Missing events for Ti.UI.View","Missing events for {{Ti.UI.View}}, such as {{click}}, {{singletap}}, {{swipe}} and so on. Currently it only supports {{touchmove}} and {{focus}}.",Bug,High,Closed,"2015-08-25 01:56:04","2015-08-25 01:56:04",13
"The Titanium SDK ","Android: Build fails if Java 1.6 is not installed","h5.Description:  1. On a clean machine setup <USER>studio.  2. Studio will download java 1.7.0_XX, node js & appc CLI.  3. Login to studio & download android SDK from with in studio.  4. Create an app & run it on android device/emulator.    h5.Actual Results:  1. The build fails as it looks for java 1.6  & errors as it can't find it with the errors below:    2. We also get a dialog saying This application needs java 6 & clicking on more info button on the dialog it takes us to the java 1.6 download page on apple's website.  *NOTE* - Attached screenshot for reference.    h5.Expected Result:  1. The build should succeed with java 1.7.0_X.",Bug,High,Closed,"2015-06-25 23:05:24","2015-06-25 23:05:24",21
"The Titanium SDK ","Windows: Missing functions for ScrollView TitaniumKit","{{Ti.UI.ScrollView}} TitaniumKit doesn't define required functions/properties such as {{contentOffset}}. Need to make sure it has valid interface.    ",Bug,High,Closed,"2015-08-24 07:52:46","2015-08-24 07:52:46",8
"The Titanium SDK ","Android: Push Notification Badge Number do not reflect to App icon","h6.Problem Reproduce:  1. Simple run the following code in a default app. (Register for token and subscribe to a channel)    2. Send a simple notification from dashboard, with badge: +2.  3. Received the notification from device successfully.    h6.Expect:  The App icon should show badge 2.    h6.Actual:  The App icon did not change at all.    h6.Note:  Print the payload from device is like following:    Seems the badge is delivered to device successfully, but the mobile did no handle it well, ",Bug,High,Closed,"2015-08-24 02:32:19","2015-08-24 02:32:19",5
"The Titanium SDK ","Parity: Ti.UI.View.add should support array of views on Windows as iOS","On iOS {{Ti.UI.View.add()}} accepts an array of views:  https://github.com/<USER>titanium_mobile/blob/0357b4796abf0032485018fac42614a94f826c9b/iphone/Classes/TiViewProxy.m#L148    On Android it does not:  https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/view/TiUIView.java#L159    This is a very useful feature and looking at the iOS code simple to implement for Android and Windows as well.    Related question on Q&A:  https://community.<USER>com/topic/3075/unable-to-add-array-of-views-to-parent-view-on-android",Bug,None,Closed,"2015-08-23 08:47:56","2015-08-23 08:47:56",8
"The Titanium SDK ","iOS9: Rebuild SDK dependent libs to support bitcode","Just need to rebuild the following:  - tiprofiler  - tidebugger  - ticore  - tiverify  - libAPSHTTPClient.a  - libAPSAnalytics.a    using Xcode 7 with  in OTHER_CFLAGS    You can verify by using   Check the output file for a sectname __bitcode",Bug,High,Closed,"2015-08-21 02:48:01","2015-08-21 02:48:01",0
"The Titanium SDK ","iOS9: Upgrade coremotion module to support bitcode, rewrite code base","using Xcode 7 with  in *OTHER_CFLAGS*    You can verify by using   Check the output file for a sectname __bitcode  ",Bug,High,Closed,"2015-08-20 09:37:45","2015-08-20 09:37:45",8
"The Titanium SDK ","iOS9: Upgrade map module to support bitcode","using Xcode 7 with  in *OTHER_CFLAGS*    You can verify by using   Check the output file for a sectname __bitcode",Bug,High,Closed,"2015-08-20 09:34:11","2015-08-20 09:34:11",3
"The Titanium SDK ","iOS9: Upgrade touchid module to support bitcode","using Xcode 7 with  in *OTHER_CFLAGS*    You can verify by using   Check the output file for a sectname __bitcode",Bug,High,Closed,"2015-08-20 09:31:23","2015-08-20 09:31:23",3
"The Titanium SDK ","iOS9: Upgrade Facebook module to facebook 4.7.0","Need to update our Facebook module so that:  1. It supports bitcode  2. It supports network whitelisting.   See:  https://developers.facebook.com/docs/ios/ios9",Bug,High,Closed,"2015-08-20 09:23:15","2015-08-20 09:23:15",13
"The Titanium SDK ","ti build --project-dir is not working if project contains a watchapp extension","h4. Steps to reproduce  1. Create a new project: ti create --type app --name foo --id com.appc.foo --platforms all --url http://foo --workspace-dir .  2. cd into the project: cd foo  3. Add a WatchKit 2 app: ti create --type applewatch --name bar --template watchos2  4. exit the project directory: cd /  5. Build the app: ti build -p ios -I 9.0 --project-dir <where foo is located>    h4. Expected result  The app will build. with or without --launch-watch-app    h4. Actual result  The build fails with the following:      *Note: *Studio needs this fixed in order for it to build the project.",Bug,Critical,Closed,"2015-08-20 06:48:35","2015-08-20 06:48:35",3
"The Titanium SDK ","Android: Update the versions for android dependencies in the package.json in 5.0 SDK","h5.Description:  With the addition of android 6.0 SDK in the android SDK manager, google also updated their android build tools to 23, android SDK platform tools to 23 & android SDK tools to 24.3.4.    We need to update the package.json in the SDK for android so as to include these new versions of android tools.    Also, the latest version of android NDK release in May 2015 is 10e but the package json says the max is r9 & this needs to be updated as well.    Current versions in package.json:  ",Improvement,High,Closed,"2015-08-19 21:01:52","2015-08-19 21:01:52",2
"The Titanium SDK ","iOS: Cannot build for devices/Package with Xcode 7; CompileC error","When using Xcode 7b5 with the 5.0 stack, I am unable to build for iOS devices or package the app. I get the below error:        *Steps to reproduce issue*:  1. Create a new project with the 5.0 stack  2. Run the app on an iOS device ({{appc run -p ios -T device}})    *Actual Results*  I get the above error and cannot build    *Expected Results*  I am able to build without error    *Notes*:  The same environment, but using Xcode 6.4 successfully builds. Using {{appc ti build}} and {{ti build}} results in the same error.",Bug,Critical,Closed,"2015-08-19 20:56:36","2015-08-19 20:56:36",1
"The Titanium SDK ","iOS apps fail to build when specifying a --watch-device-id","When running {{ti build -p ios --device-id <udid> --watch-device-id <udid> --launch-watch-app}}, the command simply exits without any output.",Bug,Critical,Closed,"2015-08-19 17:10:38","2015-08-19 17:10:38",5
"The Titanium SDK ","Android Lollipop - Preferences Activity no longer has action bar","Upgraded my app to SDK 4.0.0+. I noticed that the preferences activity no longer has the action bar (title bar). In previous version it does.    Create a default Alloy project with the following:    index.xml      index.js      preferences.xml  ",Bug,Critical,Closed,"2015-07-31 19:21:37","2015-07-31 19:21:37",3
"The Titanium SDK ","Android: Fingerprint support","Android M supports fingerprint authentication. Refer to  http://developer.android.com/preview/api-overview.html  and https://github.com/googlesamples/android-FingerprintDialog  Try to achieve parity and package with ti.touchid module.","New Feature",High,Closed,"2015-08-19 04:53:08","2015-08-19 04:53:08",13
"The Titanium SDK ","Android: Android M new runtime permissions model","This preview introduces a new permissions model, where users can now directly manage app permissions at runtime. This model gives users improved visibility and control over permissions, while streamlining the installation and auto-update processes for app developers. Users can grant or revoke permissions individually for installed apps.    http://developer.android.com/preview/features/runtime-permissions.html  ",Sub-task,Critical,Closed,"2015-08-19 04:48:52","2015-08-19 04:48:52",21
"The Titanium SDK ","Android: Material Design Custom Animations","Implement Material Design Custom Animations.","New Feature",High,Open,"2015-08-19 04:45:39","2015-08-19 04:45:39",21
"The Titanium SDK ","Unexpected behavior on width property in picker columns with percentage units","h6.Issue Description    When the user set percent units in the column width property, the columns set by default equal sizes. For example, if the Picker have 2 columns and the first column have  a width of 75% and the other column have 20%, the percentage applied is a percentage of their 50% widths. So the columns actually show less information instead of splitting up the whole width of the screen in the desired (75% / 25%) proportions.    h6.Expected behavior  The percentage of each column should be the percentage of the picker width    h6.Steps to Replicate:   1. Create a new titanium classic project   2. Grab the app.js file  3. Replace the code with the testcase code   4. Run the application on iOS simulator    h6.Test Case      ",Bug,Medium,Closed,"2015-08-18 18:02:26","2015-08-18 18:02:26",0
"The Titanium SDK ","Android 6.0 (M) : Default classic & alloy app crashes on android 6.0 preview 3 final when android:targetSdkVersion=23 is set in the tiapp.xml","h5.Steps To Reproduce:  1. Create a default classic & alloy app.  2. Add this to the tiapp.xml so that we know for sure we are building for API 23:    3. Build for android device running android 6.0 preview final(from studio or appc CLI).    h5.Actual Results:  1. The app crashes immediately when it try's to launch with errors:  *For classic app:*      *For alloy app:*      h5. Expected Result:  1. The app should launch fine & not crash.",Bug,High,Resolved,"2015-08-18 16:28:23","2015-08-18 16:28:23",2
"The Titanium SDK ","Windows: backgroundImage for View subclasses","Support {{backgroundImage}} property for View subclass.    ",Improvement,Medium,Closed,"2015-08-18 08:56:37","2015-08-18 08:56:37",8
"The Titanium SDK ","iOS9: Remote images served over http crash app","Steps to reproduce:    1.  Point an ImageView to a remote image over http (not https)  2.  Add this to plist:        3.  Run app and crash    I attached the crash file.",Bug,High,Closed,"2015-08-18 04:01:02","2015-08-18 04:01:02",3
"The Titanium SDK ","Spaces in name fail to compile in Ti CLI 4.1.4","trying out the latest CLI and iOS 9.  Trying to compile a project with 4.2.0.v20150817192819 (what’s in master as of today) and getting:        When I remove the spaces from the <name> node in tiapp.xml, it works.  I've had this name the same for almost 4 years, so this shouldn't be an issue.",Bug,High,Closed,"2015-08-18 03:15:50","2015-08-18 03:15:50",2
"The Titanium SDK ","iOS9: Ti.App.iOS.WatchSession should be global","As opposed to:      it should be   ",Improvement,High,Closed,"2015-08-18 01:56:49","2015-08-18 01:56:49",13
"The Titanium SDK ","Android: The name property on i18n app.xml is not applied on the entire project","h6.Issue Description    When the property name is defined on the app/i18n/en/app.xml file, the name is applied under  the icon in the Android app list, but it is not the same as the name showed in the app title.    h6.Expected behavior    The name in the i18n files should be the same as the name showed in the the title of the app     h6.Steps to Replicate:   1. Create a new titanium alloy/classic default project   2. Create the /i18n/en/app.xml file and folders  3. Grab sample code and throw it to app.xml       h6.Test Case        *Additional notes:     -The used name as title is the name on the <name> tag in the tiapp.xml   -Setting the android:label property, in the tiapp.xml the appname title is showed like the android property:  {quote} <application android:label=X &amp; Y> {quote}","New Feature",Medium,Closed,"2015-08-17 22:28:45","2015-08-17 22:28:45",5
"The Titanium SDK ","iOS: Add Ellipsize support for AttributedString","Refer to this link http://iosdevelopertips.com/user-interface/truncate-string-adding-ellipsis-at-front-middle-or-end.html  ",Improvement,High,Closed,"2015-08-17 04:58:52","2015-08-17 04:58:52",3
"The Titanium SDK ","iOS9: Providing access to SearchIdentifiers on ContinueUserActivity","Provide access to CSSearchableItemActivityIdentifier on ContinueUserActivity.    This allows the developer to access the unique searchableItem they created while publishing to the  search index.",Improvement,High,Closed,"2015-08-16 23:49:30","2015-08-16 23:49:30",5
"The Titanium SDK ","Windows Parity: Ti.UI.View.insertAt and replaceAt not working","The undocumented (TIDOC-2282) but for Android and iOS implemented (TC-5371) {{insertAt}} and {{replaceAt}} methods need to be implemented for Windows as well.    /CC [~<USER> (who will use this for a Titanium renderer for ReactJS)",Bug,None,Closed,"2015-08-15 10:03:27","2015-08-15 10:03:27",5
"The Titanium SDK ","iOS9: Access to new TouchID error codes","h6.Feature Request  There are new errors for Touch ID. We'd like to get these turned into constants like the other errors are within the touchid module.     h6.Apple Docs  https://developer.apple.com/library/prerelease/ios/releasenotes/General/iOS90APIDiffs/Objective-C/LocalAuthentication.html     h6.From the Apple Docs:   ","New Feature",High,Closed,"2015-08-13 21:42:35","2015-08-13 21:42:35",3
"The Titanium SDK ","Windows: Support animation values using units","Our animation code assumes pixels for units, regardless of whether some other set of units are specified.    Looking at Android, assuming pixels if no unit is specified is what we should do (though why wouldn't we use ti.ui.defaultunit?) - but we do need to support dp/in/cm/em etc and convert to pixels internally.",Bug,High,Closed,"2015-08-13 21:11:00","2015-08-13 21:11:00",8
"The Titanium SDK ","Windows: tiapp property ti.ui.defaultunit ignored","http://docs.<USER>com/platform/latest/#!/guide/tiapp.xml_and_timodule.xml_Reference-section-29004921_tiapp.xmlandtimodule.xmlReference-ti.ui.defaultunit    We appear to ignore the default unit. Looks like we may just assume px: https://github.com/<USER>titanium_mobile_windows/blob/master/Source/LayoutEngine/src/ParseProperty.cpp#L52",Bug,High,Closed,"2015-08-13 21:01:30","2015-08-13 21:01:30",5
"The Titanium SDK ","Windows: Support zIndex on View subclasses","https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.canvas.zindex.Aspx  http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.View-property-zIndex  ",Improvement,High,Closed,"2015-08-13 20:57:33","2015-08-13 20:57:33",5
"The Titanium SDK ","Android: Split google-play-services library to optimize method counts","Optimize google-play-services library to reduce method counts for these modules:  - Ti.Map: https://github.com/<USER>modules/ti.map  - Ti.Cloudpush: https://github.com/<USER>modules/cloudpush  - Ti.Admob: https://github.com/<USER>modules/ti.admob",Improvement,High,Closed,"2015-08-13 19:47:19","2015-08-13 19:47:19",8
"The Titanium SDK ","Windows: Ti.Network.HTTPClient.send fails when arg object has non-string/Blob values","Our current code assumes that the JSObject has string property names (which is valid) and either String or Ti.Blob values. It needs to handle other value types and convert them into strings.    The following works on iOS/Android, but fails on Windows:      This is because our code take the numeric value for 'purchaseId' and since it's not a string assumes it's a Blob and attempts to pull a native Ti.Blob object out of it.",Bug,High,Closed,"2015-08-13 14:51:04","2015-08-13 14:51:04",5
"The Titanium SDK ","Android: DatePicker change event does not fires in Lollipop","h6.Issue Description  This issues does not occur on iOS. If you run the test case on Jelly Bean devices the change event is fired as expected.     h6.Tested on  iOS 8.1: Change event works  Droid Razr 4.1.2: Change event works  Moto G 5.0.2: Change event didn't work    h6.Test Case  ",Bug,High,Closed,"2015-08-12 23:35:00","2015-08-12 23:35:00",5
"The Titanium SDK ","Cannot build a Titanium app if the project is named iphone","*Details:* Cannot build a Titanium app if the project is named iphone.    *Note:* This is a *regression* from SDK 4.1.0.GA and 4.1.1.v20150807121809    *Steps to reproduce:*  # Create a Titanium project with {{appc new}}  # Make sure to specify the project name as {{iphone}}  # After project is created, run {{appc run -p ios -T simulator -l trace}}    *Actual:* The following error will appear:      *Expected:* Should be able to build a Titanium project if it's named iphone.",Bug,Medium,Closed,"2015-08-12 18:54:11","2015-08-12 18:54:11",2
"The Titanium SDK ","Cannot create projects; invalid --platforms value","When trying to create a project with the below command I get the error in the *Notes* section: {{Invalid --platforms value android,ios,mobileweb}}      *Steps to reproduce issue*  1. Set your active SDK to 4.2.0.v20150805163626 or later (I used 4.2.0.v20150807112024)  2. Run {{appc new --platforms android,ios,mobileweb}}  3. Create a Native App    *Actual Results*  The creation will fail with the below error    *Expected Results*  I can create projects without error    *Notes*  This blocks projects from being created in Studio.  I encounter this with SDKs 4.2.0.v20150805163626 and later.  ",Bug,Critical,Closed,"2015-08-10 18:59:25","2015-08-10 18:59:25",3
"The Titanium SDK ","iOS: iPad SplitWindow - Hiding master view breaks Navigation Window","After updating Titanium to 3.4.0 and Xcode to 6.0.1, hiding the MasterView of an iPad SplitWindow in portrait mode running iOS 8 causes the second level of a navigationWindow in the master view not to display.    To Recreate: Create a basic template app in Studio. Replace the app.js with the attached file, build for iPad running iOS8 and run.  Navigate to one of the subMenu's then back.  Press the menu button to collapse MasterView, then press again to re-open MasterView.  Select a subMenu again.    Expected Outcome: The sublist is displayed.    Actual Outcome: The sublist does not appear    NOTE: This works correctly in iOS7, and works correctly on apps that were built before Xcode6 + Studio 3.4.0 and installed on an iOS7 device which has since been upgraded to iOS8    EDIT: uploaded a more concise app.js",Bug,None,Resolved,"2014-10-01 04:43:05","2014-10-01 04:43:05",3
"The Titanium SDK ","iOS: Cannot build when using defined keychain","h6.Issue Description  When using the --keychain parameter creates unreadable xcodeproj files.    h6.Ti Build Command Reported      h6.Output      h6.Ti Build Command  The output of build <USER>in my environment.     h6.Output    ",Bug,High,Closed,"2015-08-10 16:02:26","2015-08-10 16:02:26",3
"The Titanium SDK ","iOS: ListView editActions specify better action","Since 4.1.0.Beta we got a really super-duper feature: https://docs.<USER>com/platform/latest/#!/guide/ListViews-section-37521650_ListViews-ActionItems    But one thing is not really charming. The listener for which action is pressed by the user has to be the title of the edit button? That seems very untypical.    *Existing example*      *Should be example*      As you see, the developer can define the action himself. Otherwise I have to compare on localized strings. That's not a good coding behavior .    What do you think?",Improvement,Medium,Closed,"2015-06-30 10:40:25","2015-06-30 10:40:25",2
"The Titanium SDK ","node-ios-device: update to work with latest Node.js 0.12 and io.js 3.0","node-ios-device is becoming slightly out-of-date. Need to update it to work with Node.js 0.10.40, Node.js 0.12.7, io.js 2.5, and io.js 3.0.",Improvement,High,Closed,"2015-08-07 21:03:35","2015-08-07 21:03:35",13
"The Titanium SDK ","Android: Grouped Notification not working","I am not able to get grouped notification in my app, I have added following line in my tiapp.xml but it made no changes in notification tray of mobile(means not grouping notification into 1 notification).    <property name=acs-grouped-notification-message type=string>You have $number$ unread messages.</property>  ",Bug,Medium,Open,"2015-07-27 13:18:53","2015-07-27 13:18:53",5
"The Titanium SDK ","Android: broadcast receiver always executed twice for one broadcast","It was working fine. Recently I found this bug, but not sure starting which SDK version the problem existed.    Create a default Alloy project with the following:    index.xml      index.js      tiapp.xml (use the following for the android section)      After launching the app, call to the cellphone and see the onReceived function executed twice for one broadcast.",Bug,Medium,Reopened,"2015-07-31 02:25:14","2015-07-31 02:25:14",5
"The Titanium SDK ","Cannot install/build to iOS device or simulator","*Details:* Cannot install/build to iOS device or simulator.    *Note:*  * This is a regression from SDK build 4.2.0.v20150729122818 i.e. was working on July 29  * I am able to install to Android device or emulator without any issues  * This occurs with both Appc CLI and Titanium CLI    *Steps to reproduce:*  # Create a Titanium project: {{appc new}} or {{ti create}}  # Run following command to install to device or simulator: {{appc run -p ios -T <device OR simulator>}} OR {{ti build -p ios -T <device OR simulator>}}  # Finish prompt to get app onto device or simulator    *Actual:* If you install app to device or simulator from Appc CLI, the build will stop midway; see appc_cli_log.txt    If you install app to device or simulator from Ti CLI, you get the following error:      *Expected:* Should be able to install app to iOS device or simulator.    ",Bug,Critical,Closed,"2015-08-07 00:16:05","2015-08-07 00:16:05",2
"The Titanium SDK ","Android: activity indicator causing crash if exiting app right after launch","Use the test case [here|https://jira.<USER>org/browse/TIMOB-19257]. Right after launch (during splash), click back to exit the app. Repeat several times and sometimes you'll see the crash.  ",Bug,High,Closed,"2015-07-31 01:46:45","2015-07-31 01:46:45",3
"The Titanium SDK ","IOS: Ti.Map v. 2.3.1 doesn't handle click on leftview and rightview","On iOS a custom view to rightView or leftView of an annotation doesn't handle any click,  looks like a bug introduced in the last version (2.3.1) of Ti.Map module (updates with sdk 4.1.0).    using the previous version (2.2.2) works correctly",Bug,High,Closed,"2015-07-15 09:01:17","2015-07-15 09:01:17",0
"The Titanium SDK ","Error while creating a AppleWatch app","An error is shown when trying to create a Applewatch app    Steps to Reproduce:  1. Create a titanium app project  2. Now try to create a AppleWatch app for the above created titanium app using ti create    Actual Result:  An error is shown  ",Bug,Critical,Closed,"2015-08-06 06:42:39","2015-08-06 06:42:39",5
"The Titanium SDK ","iOS9: Double project gets created if there is a dash in project name","If there is dash in project name (i.e. MB-Next-Gen-Phone ), the build will fall with follow error.   Log detail is attached.    If change the dash to underscore, the build will be fine.",Bug,High,Closed,"2015-08-06 02:15:09","2015-08-06 02:15:09",3
"The Titanium SDK ","Android: CLI - android.dx.maxMemory not working - typo issue at _build.js","Setting *android.javac.maxMemory* and *android.dx.maxMemory* properties in tiapp.xml never works.    +Test Case:+        +Expected Behaviour+    Should accept the values from tiapp.xml    +Actual Behaviour+  it always takes *256M / 1024M* which is default.     The below one works.        Typo issue at https://github.com/<USER>titanium_mobile/blob/afcd78293e0f9835c1d244b9dace47e2afb692a4/android/cli/commands/_build.js#L927",Bug,None,Closed,"2015-07-13 13:38:25","2015-07-13 13:38:25",1
"The Titanium SDK ","Rename ti create project type fruitwatch to applewatch","Rename fruitwatch to applewatch and add trademark disclaimer in help screen.",Bug,High,Closed,"2015-08-04 20:07:15","2015-08-04 20:07:15",8
"The Titanium SDK ","iOS: Configuring capabilities (app group) and team identity via tiapp.xml","To enable watchkit, there is a need to configure app group, and generate a entitlements file. Currently the proposed method described here: https://wiki.<USER>org/display/guides2/Integrate+a+Native+iOS+App+Extension+or+WatchKit+App requires us to manually set it up in the Xcode project, and also to manually create the entitlements file.  It will be great if we could just write the app group array in tiapp.xml and let *titanium build* do the rest. Apple Documentation: https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/AddingCapabilities/AddingCapabilities.html","New Feature",High,Closed,"2015-08-04 05:02:25","2015-08-04 05:02:25",13
"The Titanium SDK ","iOS9 + WatchKit2 + Simulator = broken build","When performing a simulator build of an app with a WatchKit 2 app using iOS 9 and Xcode 7, the build fails on either the PBXCp failing or the WatchKit app binary not existing.    It's probably an environment variable or something.",Bug,Critical,Closed,"2015-08-03 17:12:58","2015-08-03 17:12:58",21
"The Titanium SDK ","Alloy.Globals not accessible from a commonjs module","In iOS and Android I am able to access the Alloy.Globals without require in the Alloy module, but in Windows I have to require the module:    var Alloy = require('alloy');    Before I can use the Globals variables like custom ones defined in the alloy.js file.    As I said for iOS and Android this is not needed.    I am not sure which is wrong and right here, because in the Alloy.Controller documentation it states that to be able to reach Alloy.createController or the collections one needs to require first, but this is not true for iOS and Android, maybe this is by chance it works for iOS and Android? I do not know.    To reproduce:    Module: (in the /lib folder)    //var Alloy = require('alloy');  exports.test = function(){   Ti.API.info('Test Module');   Ti.API.info('Module Wintop ' + Alloy.Globals.winTop);  };    In alloy.js:    Alloy.Globals.winTop = 6;  Ti.API.info('Wintop ' + Alloy.Globals.winTop);  var t = require('testmod');  t.test();    Code will crash unless the require is included, but only for Windows...  ",Bug,High,Closed,"2015-07-31 20:09:32","2015-07-31 20:09:32",8
"The Titanium SDK ","Classic resources left behind in Alloy projects even after build","When building a Native project created with {{appc new}}, there are resources left behind from the classic tabbed project.    *Steps to reproduce issue*  1. Create a new project with {{appc new}}  2. Select a Native App  3. Build and run the project    *Actual Results*  There are classic resources left in the resources folder    *Expected Results*  There are no classic resources left behind",Bug,None,Closed,"2015-07-31 19:12:01","2015-07-31 19:12:01",1
"The Titanium SDK ","iOS: Building modules errors out due to 'unknown type name 'UIView''","h5.Description    When building an iOS module with an SDK later than 4.1.0.GA the build will fail with the following errors         It cannot find them because of [this commit|https://github.com/<USER>titanium_mobile/commit/7fc02cbfe17a8201dc71e604035aeb3191c9f0e0#diff-2ce52d8edb4096998bcad96ef6ef6211]    h5.Steps To Reproduce    1. <USER>a module such as [ti.paint|https://github.com/<USER>modules/ti.paint/]  2. cd into the ios folder  3. Open the titanium.xcconfig and change the SDK to 4.1.0.GA    h5.Actual Result    The build will fail    h5.Expected Result    The build should not fail",Bug,High,Closed,"2015-07-31 17:47:29","2015-07-31 17:47:29",5
"The Titanium SDK ","Launching Sim asks for computer control","When running an app on a simulator, terminal requests permission to control the computer. The simulator also performs a 'Hardware -> External Display -> Disabled' action. Is this required? Can these be removed?    *Steps to reproduce issue*  1. Create a new project from the CLI {{appc new}}  2. Run the project on an iOS simulator {{appc run -p ios}}    *Actual Results*  Terminal requests access and the simulator performs 'Hardware -> External Display -> Disabled'    *Expected Results*  The app can run on simulator without requesting access or performing menu actions.    *Notes*  This appears to only occur with simulators that do not support Watchkit",Improvement,Medium,Closed,"2015-07-31 17:15:59","2015-07-31 17:15:59",8
"The Titanium SDK ","Android: Change to use Gradle instead of Ant for build","http://android-developers.blogspot.sg/2015/06/an-update-on-eclipse-android-developer.html    To that end and to focus all of our efforts on making Android Studio better and faster, we are ending development and official support for the Android Developer Tools (ADT) in Eclipse at the end of the year. This specifically includes the Eclipse ADT plugin and Android Ant build system.",Improvement,Critical,Closed,"2015-07-31 06:06:22","2015-07-31 06:06:22",42
"The Titanium SDK ","iOS9: Titanium CLI automatically converts app icons and launch images to assets catalog","Similarly, app Icons and launch images can enjoy the benefit of app thinning if they are already in the assets catalog. Can do similar method to use titanium CLI to auto transfer existing icons and launch images to corresponding assets catalogs.","Technical task",High,Closed,"2015-07-31 03:12:29","2015-07-31 03:12:29",34
"The Titanium SDK ","Windows: Setting both left and right properties on a TextField has unexpected behavior","REPRODUCTION:  Run the code below in the Windows emulator.    RESULTS:  The first textfield is positioned correctly but does not stretch across to the right side of the display.    If you comment out adding the second textfield and run the code again, the first textfield does not appear at all.    OTHER INFO:  On Android and iOS, the textfield would extend across the display from left 10 to right 10.    ",Bug,Medium,Closed,"2015-07-30 23:11:55","2015-07-30 23:11:55",5
"The Titanium SDK ","Android: Crittercism: UnsatisfiedLinkError on libcrittercism-ndk.so","h6.Issue Description  When testing on any sort of Android app (Classic or Alloy), Crittercism is failing to initialise during app launching.     h6.Code  Throw these couple lines to app.js.       h6.Logs  These logs on a Samsung Galaxy S6 running Android 5.0.1 and a Google Nexus 6      h6.Stack Trace  Can be also reproduced using Genymotion emulator.   ",Bug,High,Closed,"2015-07-30 21:19:21","2015-07-30 21:19:21",8
"The Titanium SDK ","Windows: Implement Titanium.Codec","Implement http://docs.<USER>com/platform/latest/#!/api/Titanium.Codec",Improvement,High,Closed,"2015-07-30 20:34:07","2015-07-30 20:34:07",13
"The Titanium SDK ","CLI: ti build for modules errors with Cannot find module 'archiver/lib/archiver/core'","h5.Description    When attempting to build Titanium modules with {{appc ti build}} or {{ti build}} the build errors out with the below        I believe this is because of the updates archiver module in the 4.2.0 SDK. The build <USER>works fine with 4.1.0.GA    h5.Steps to reproduce    1. Create a module with {{appc new}} or {{ti create}}  2. cd into either the android, iphone or mobileweb folder  3. Build the module with {{appc ti build -p <platform you chose}} or {{ti build -p <platform you chose}}     h5.Actual result    The build will error out with {{Cannot find module 'archiver/lib/archiver/core'}}    h5.Expected result    The build should not error out",Bug,Critical,Closed,"2015-07-30 17:02:13","2015-07-30 17:02:13",8
"The Titanium SDK ","Create JerryScript Titanium API on Apple Watch prototype","Generate a proof of concept for running Titanium API/apps on Apple Watch using JerryScript as the JS engine.    Ideally this would be able to leverage our existing iOS titanium_mobile, or TitaniumKit/HAL codebase. Perhaps a HAL-equivalent on top of JerryScript that would require minimal work to have TitaniumKit to work on top (be able to swap between the two engines easily)?    Github: https://github.com/Samsung/jerryscript  Homepage: https://samsung.github.io/jerryscript/  API: https://samsung.github.io/jerryscript/API/",Story,Critical,Closed,"2015-07-29 23:34:57","2015-07-29 23:34:57",13
"The Titanium SDK ","Windows: Test Movies sample","Import the Movies sample (alloy) by using the latest <USER>Studio 4.1.0 release, through the dashboard. Then verify that you are able to build it for Win Phone and Store (after adding windows to list of deploy targets in tiapp.xml).    If you run into any issues, please file additional tickets. If the sample needs to be updated in any way (like enabling capabilities), file a PR for the sample.    https://github.com/<USER>movies",Story,Medium,Closed,"2015-07-29 23:21:53","2015-07-29 23:21:53",5
"The Titanium SDK ","CLI: Values passed in on project creation using shorthand options seem to be ignored","h5.Description    When passing values using the shorthand flags such as {{ti create -t app -n <USER>-p all -d C:\Users\Windo_000\Documents\<USER>Studio_Workspace\testing --id com.appc}} you will still be prompted for the values, whereas when passing in {{ti create --type app --name ewan --platforms all --workspace-dir C:\Users\Windo_000\Documents\<USER>Studio_Workspace\testing --id com.appc -u www.blah.com}}.    This only appears to be happening when using the Titanium CLI, when using the Appc CLI there is no prompting if these values are passed in.    *This is a regression*    h5.Steps to reproduce    1. Run the following command {{{ti create -t app -n <USER>-p all -d C:\Users\Windo_000\Documents\<USER>Studio_Workspace\testing --id com.appc -u www.blah.com}}    h5.Actual result    You will be prompted for the values    h5.Expected result    You should not be prompted for the values",Bug,High,Closed,"2015-07-29 18:00:22","2015-07-29 18:00:22",5
"The Titanium SDK ","Add support for --watch-app-name and --watch-device-id","We need to add some new options for Watch Simulator support:    --watch-app-name <value>  If your app has multiple watch apps, the name of the app to launch.    --watch-device-id <udid>  The watch sim udid to launch. Defaults to the 42mm.","New Feature",High,Closed,"2015-07-29 11:23:50","2015-07-29 11:23:50",13
"The Titanium SDK ","Windows: Implement Ti.UI.Picker, PickerColumn, PickerRow","http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Picker  http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.PickerColumn  http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.PickerRow",Story,Medium,Closed,"2015-07-29 05:54:10","2015-07-29 05:54:10",13
"The Titanium SDK ","Mobileweb: When packaging for production the build errors out","h5.Description    When packaging mobileweb the build errors out with the below. The error is coming from [this line|https://github.com/<USER>titanium_mobile/blob/master/mobileweb/cli/commands/_build.js#L906] and only occurs when the build is run with {{ti build -p mobileweb -D production}} or {{appc run -p mobileweb -D production}}.    *This is a regression from 4.1.0.GA*        h5.Steps to reproduce    1. Build a titanium project with {{ti build -p mobileweb -D production}}    h5.Actual result    The build will error out    h5.Expected result    The build should not error out",Bug,Critical,Closed,"2015-07-29 00:59:06","2015-07-29 00:59:06",3
"The Titanium SDK ","CLI: When building for iOS device the app will always be 32-bit","h5.Description    When building to device the app appears to always be 32-bit. Using the code below and {{xcrun lipo -info <PathToBinary>}} show that there is not 64bit slice when building for device.    *Note*    When packaging the 64-bit slice is present, as the app passes Xcode validation and xrcun shows that there is a 64-bit slice.  This is a *regression* from 4.1.0.GA        h5.Steps to reproduce    1. Add the above code to a project  2. Build the app to a 64-bit device  3. Tap the screen    h5.Actual result    The below is printed out        h5.Expected result    The below should be printed out    ",Bug,Critical,Closed,"2015-07-28 23:47:16","2015-07-28 23:47:16",3
"The Titanium SDK ","iOS build selects invalid simulator when building with watch app","When building an app with a WatchKit 1 app (and probably WatchKit 2) with iOS 8.4 or 9.0 and ios.autoSelectDevice=true, it picks a simulator that doesn't support watch apps.            This logic is performed in the iOS build.",Bug,High,Closed,"2015-07-28 22:11:10","2015-07-28 22:11:10",13
"The Titanium SDK ","Use ios-sim to launch WatchKit 1 apps in an Xcode iOS Simulator","When we use simctl to launch a WatchKit 1 app in an Xcode 6 iOS Simulator external display, the app doesn't appear to launch. The screen is black on both the main and external displays. We didn't have this problem with ios-sim, so use ios-sim to launch the watch app for just Xcode 6 iOS Simulators.",Bug,Low,Closed,"2015-07-28 22:03:42","2015-07-28 22:03:42",13
"The Titanium SDK ","Building iOS 9 app with a WatchKit 2 app needs to specify -destination","By default, xcodebuild performs a iphoneos (device/dist) build. In order for it to build for the simulator, we need to specify the -sdk, but then the watch apps would fail to build because they don't support the iphonesimulator SDK. So, we can fix this by specifying a -destination and Xcode will pick the appropriate simulator SDK for each target.    The param will look like:        The device name will need to match whatever the selected simulator is.    Also, we'll need to have a scheme. The default Titanium project doesn't have one, so we'll need to add one and make sure it's shared.",Bug,High,Closed,"2015-07-28 21:59:45","2015-07-28 21:59:45",13
"The Titanium SDK ","Validate correct Xcode when building an app with a WatchKit 2 app","When building an app with a WatchKit 2 app, the iOS build needs to check that the specified iOS SDK is compatible with WatchKit 2 apps.",Bug,High,Closed,"2015-07-28 21:53:33","2015-07-28 21:53:33",8
"The Titanium SDK ","Xcode 7 - App crashes on launch if app is installed on an iOS device < 9.0","*Details:*  App crashes on launch if app is installed on an iOS device < 9.0.    *Notes:*  * My xcode-select was pointed to Xcode 7 (beta4).  * If I point my xcode-select to Xcode 6.4, then I am able to launch my app on iOS device < 9.0 with current stack.    *Steps to reproduce:*  # Make sure your xcode-select is pointing to Xcode 7 (beta): {{sudo xcode-select -s <PATH_TO_XCODE>}}  # Create a new project from Appc CLI  # Install project to an iOS device < 9.0  # After app is installed onto device, try launching the app    *Actual:* The app will crash on launch; see attachment for crash logs.    *Expected:* The apps should not crash on launch.",Bug,Critical,Closed,"2015-07-28 21:48:01","2015-07-28 21:48:01",3
"The Titanium SDK ","iOS Extensions and Watch App files deleted during subsequent builds","After first build, extensions and watch apps are nuked from build dir. The build needs to whiltelist all extension and watch app files.",Bug,High,Closed,"2015-07-28 21:47:24","2015-07-28 21:47:24",13
"The Titanium SDK ","CLI: Launching a project with --launch-watch-app and no --device-id flag does not launch a valid simulator","h5.Description    When running a project with {{appc run -p ios --launch-watch-app}}  the simulator is autoselected. This results in a simulator that does not support watch apps, in my case it launches an iPad 2 simulator.    When running with --launch-watch-app and no device id is passed in the simulator launched should always be compatible with apple watch    h5.Steps to reproduce    1. Create a project using {{appc new}}  2. cd into the project and create an apple watch project using {{appc ti create --type fruitwatch}}  3. Run the project using {{appc new -p ios --launch-watch-app}}    h5.Actual result    The simulator launched is not compatible with apple watch    h5.Expected result    The simulator launched should be compatible with apple watch",Bug,High,Closed,"2015-07-28 20:55:36","2015-07-28 20:55:36",1
"The Titanium SDK ","Cannot install to iOS 9 Simulator when using Xcode 7","When using Xcode 7, I am unable to install to the iOS 9 Simulator when creating and building a project.    *Steps to reproduce*:  1. Set Xcode 7 as your selected Xcode version  2. Create a new project with {{appc new}}  3. Run the project on your iOS 9 simulator using {{appc run -p ios -I 9.0}}    *Actual Results*:  The simulator will launch but will never install the app (stays on 'Launching iOS Simulator')    *Expected Results*:  The iOS 9 Simulator installs and runs the app    *Notes*:  If using Xcode 6.4 or targeting a < iOS 9.0 Sim, I can run on Simulators as expected.  Not sure if this is an El Capitan only thing.",Bug,High,Closed,"2015-07-28 20:47:49","2015-07-28 20:47:49",3
"The Titanium SDK ","If you do ti sdk select <SDK_VERSION>, a Failed to run command sdk error message will appear","*Details:* If you do {{ti sdk select <SDK_VERSION>}}, a {{Failed to run command sdk}} error message will appear.    *Note:*  * This is a *regression* from Titanium CLI 4.0.1.  * This issue will affect {{appc ti sdk select <SDK_VERSION>}}.  * This is *not a blocker* since you are still able to select SDK via prompting; just do {{ti sdk select}} or {{appc ti sdk select}}.    *Steps to reproduce:*  # Run {{ti sdk select <SDK_VERSION>}}; <SDK_VERSION> being a valid SDK on your machine    *Actual:* The following error will appear:        *Expected:* {{Failed to run command sdk}} error should not appear.",Bug,High,Closed,"2015-07-28 18:50:59","2015-07-28 18:50:59",1
"The Titanium SDK ","Android : Build fails for android with ti CLI 4.1.2 with error ti run exited with error code 1","*The error is due to titanium CLI 4.1.2 as seen in the error logs.*  *Reproducible from appc CLI 4.2.0-1 as well.*    h5.Steps To Reproduce:  1. Create an app for android.  2. Build for android device/emulator    h5. Actual Results:  1. The build fails with error:      h5.Expected Results:  1. The build should be successful.",Bug,High,Closed,"2015-07-28 17:39:25","2015-07-28 17:39:25",2
"The Titanium SDK ","iOS: Encrypted Database Module: SQLite #26: file is encrypted or is not a database","h6.Issue Description  Just picked up the latest version of the encrypted DB module from the dashboard (1.1.4) and upgraded our app. However the module is unable to access the DB. We get the error :   (SQLite #26: file is encrypted or is not a database)     h6.Expected behavior  The new version of the module should be able to open the older DB with same secret.     h6.Steps to Replicate:   1. Grab sample code and throw it to app.js   2. Run the app with the DB module version 1.0.0 - Alert is shown - Fetched : 1   3. Change the version of module to 1.1.4 in tiapp.xml   4. Run the app again - Error is seen - The DB cannot be accessed     h6.Test Case      h6.Logs  ",Bug,High,Closed,"2015-07-28 17:39:03","2015-07-28 17:39:03",13
"The Titanium SDK ","iOS: Clicking a list item while editing the list does not fire itemclick event","Test code:      ",Bug,Medium,Closed,"2015-07-24 05:34:13","2015-07-24 05:34:13",1
"The Titanium SDK ","Windows: Tabs added using the TabGroup property are not rendered","Run the sample code below in the Windows emulator. (I used the Emulator 8.1 WVGA 4 inch 512MB.)    RESULTS:  Application does not display any content--only a black screen.    OTHER INFO:  The addTab method works.  The console outputs that the tabs were added to the tabGroup object.    ",Bug,None,Closed,"2015-07-24 17:56:51","2015-07-24 17:56:51",5
"The Titanium SDK ","iOS: ListView randomly crashes the App","App crashes at some point when repeatedly opening and closing win2.     Please find the attached source code to reproduce the issue.    Also check the video I recorded to see the crash.    Somebody mentioned that it did not happen in Ti 4.0 GA - see below  [JIRA|https://jira.<USER>org/browse/TIMOB-19214]    See error below    ",Bug,High,Closed,"2015-07-21 11:55:57","2015-07-21 11:55:57",5
"The Titanium SDK ","Windows: Allow mixing Ti.Ui.View and Windows UI components","If a developer uses the native wrappers they currently cannot generate native UI components and then add those to a Titanium View/Window, and vice versa. We should support the ability to wrap native UI widgets as Ti.UI.Views when necessary, or unwrap Ti.UI.View native components to native wrappers when necessary. This is something Pedro's ti.reflex handles.",Improvement,High,Closed,"2015-07-22 00:00:20","2015-07-22 00:00:20",13
"The Titanium SDK ","Windows: Avoid recompile of native C++ Wrappers","When developers use native API access we generate C++ wrapper types for any native type they may touch. These take a significant amount of time to build. If the list of types hasn't changed we shouldn't rebuild any of the native WinRT component. If the set of types gets larger, we should only recompile the new types (and RequireHook/Platform::Object/ModuleLoader).",Improvement,High,Closed,"2015-07-21 23:59:17","2015-07-21 23:59:17",8
"The Titanium SDK ","Windows: Update Webkit/JSC port to latest","Our current port of Webkit/JSC is roughly 2 years old. We should try and bring it up to date to get perf improvements, get more ES6 features, Promise, etc.",Story,High,Closed,"2015-07-21 23:56:32","2015-07-21 23:56:32",21
"The Titanium SDK ","Android: Child nodes of javascript-based not generated as described in doc","I can't add intent-filter child tag to the <USER>custom tag <activity> in my tiapp.xml  Children tag is absent in result AndroidManifest.xml file.    [Documentation reference|https://docs.<USER>com/platform/latest/#!/guide/tiapp.xml_and_timodule.xml_Reference-section-29004921_tiapp.xmlandtimodule.xmlReference-activities]",Bug,Low,Closed,"2015-07-11 13:14:24","2015-07-11 13:14:24",8
"The Titanium SDK ","iOS: Keyboard loses focus after 1 character when TextField is in a TableView TableViewRow","When a _TextField_ is in a _TableViewRow_, you can only enter one character and then the keyboard disappears.    +Expected+: Tap into the grey hint text and enter multiple characters on the keyboard which does not disappear  +Actual+: You can only enter one character and then the keyboard disappears.    Code attached.",Bug,Medium,Closed,"2015-07-14 15:48:40","2015-07-14 15:48:40",5
"The Titanium SDK ","Android: Ti.UI.TEXT_ELLIPSIZE_TRUNCATE_X not working on 4.1.0 when using left and right to define width","Ti.UI.TEXT_ELLIPSIZE_TRUNCATE_END, Ti.UI.TEXT_ELLIPSIZE_TRUNCATE_MIDDLE, Ti.UI.TEXT_ELLIPSIZE_TRUNCATE_START are not working if you use left and right to define a label's width. Ti.UI.TEXT_ELLIPSIZE_TRUNCATE_MARQUEE still works in such case.    Before 4.1.0, I can just set Label's ellipsize to true to show the ellipses in the end, even if I use left and right to define a label's width. On 4.1.0, ellipsize = true isn't working at all.    To re-produce, create an Alloy default project with the following:    index.xml:      index.tss  ",Bug,Medium,Closed,"2015-07-17 22:22:32","2015-07-17 22:22:32",5
"The Titanium SDK ","iOS debugger connection refused with SDKs 3.5.0 and 3.5.1","h2. iOS debugger connection refused with SDKs 3.5.0 and 3.5.1  After upgrading from SDK 3.4.1 to 3.5.0 (and 3.5.1), I can no longer debug under iOS. The iOS emulator starts and my application is loaded and runs ok. However, although Studio switches to the debug perspective, any breakpoints I set are ignored and I have no debugging capabilities. The only symptom indicating any issue are the series of messages like the one shown below in the Studio log file. Reverting to SDK 3.4.1 in my tiapp.xml restores the debugging capabilities.    h2. Logs  {code:lang=none|title=~/Documents/Titanium_Studio_Workspace/.metadata/.log}  !ENTRY com.aptana.js.debug.core 4 4 2015-05-04 05:30:38.465  !MESSAGE   !STACK 0  java.lang.NullPointerException   at org.eclipse.core.runtime.Path.fromPortableString(Path.java:103)   at com.<USER>titanium.core.launching.TitaniumAppURIMapper.resolve(TitaniumAppURIMapper.java:71)   at com.aptana.js.debug.core.internal.model.JSDebugTarget.resolveSourceFile(JSDebugTarget.java:2199)   at com.aptana.js.debug.core.internal.model.JSDebugTarget.handleScripts(JSDebugTarget.java:730)   at com.aptana.js.debug.core.internal.model.JSDebugTarget.access$6(JSDebugTarget.java:703)   at com.aptana.js.debug.core.internal.model.JSDebugTarget$DebugConnectionHandler.handleMessage(JSDebugTarget.java:2355)   at com.aptana.js.debug.core.internal.model.DebugConnection.handleMessage(DebugConnection.java:228)   at com.aptana.js.debug.core.internal.model.DebugConnection.access$3(DebugConnection.java:223)   at com.aptana.js.debug.core.internal.model.DebugConnection$1.run(DebugConnection.java:155)  {code}    h2. Discussions  Here is a Q&A discussion where several other developers are reporting a similar issue...    [http://developer.<USER>com/question/181417/debug-connection-refused-with-sdk-35-and-ios]",Bug,High,Closed,"2015-05-04 10:29:06","2015-05-04 10:29:06",8
"The Titanium SDK ","Android: liveview throws error related to cloudPush when changes are made to an android pushnotification app ","This is not a regression as it can be reproduced with titanium sdk 3.4.1    When an android pushnotification app is run with live view, errors indicating that cloudpush module information cannot be found are thrown on the console when the app tries to re-launch with the changes made.However, when the app is run again on the device, it installs and launches successfully with the new changes made.    Steps to reproduce:  1. Run the attached app.js (include cloudpush module in tiapp.xml)with Liveview enabled on to a device  2. Make changes in app.js eg: remove one of the commented lines on line 49 or 54 and save  3. Run the app again by clicking 'Run As' and select the device again  Actual results:  1. App is launched on device with a button Register for push notification o`n the center.  2. the following error is produced in the console and device displays the splashscreen    3. The app launches successfully.    Expected Results:  2. The app should be re-launched with the new changes.",Bug,High,Open,"2015-01-07 10:41:26","2015-01-07 10:41:26",8
"The Titanium SDK ","iOS: headerView/footerView in ListView disappears on half swipe back","h6.Issue Description  A listView which contains a headerView or footerView and a ListSection disappear at the time to swipe window back.     h6.Steps to Reproduce  1. Navigate from Page1 to page Page2  2. Swipe from left end of screen to half of screen. And cancel the swipe by moving back to left end of the screen.   3. All the contents of the headerView/footerView disappear. Screenshot attached.    h6.Sample Code  ",Bug,High,Closed,"2015-07-20 21:26:29","2015-07-20 21:26:29",5
"The Titanium SDK ","Debug: Breakpoint won't stop if the app name contains space ","h6.Reproduce Steps:  1. Create a new classic mobile app, called TestApp  2. Add a breakpoint to line 11 in app.js file.  3. Debug the app  4. The debugger will stop at line 11.  5. Change app name to Test App in tiapp.xml file (with a space in it)  6. Clean the app and debug it again.    h6.Expect Result:  The debugger should stop at line 11.    h6.Actual Result:  The app did not stop at all.    h6.Note  1.Tried to create a new app with space in app name, got same problem.  2.This problem starts in version 3.5.1.GA, Version 3.4.1.GA works well.",Bug,High,Closed,"2015-07-20 02:10:20","2015-07-20 02:10:20",5
"The Titanium SDK ","iOS: Apple Watch App not installing on real device","h6.Problem Reproduce Step:  1. Created a simple Hello World app in the <USER>Studio   2. Followed the walkthrough from [https://<USER>github.io/appc-docs/latest/#!/guide/Integrate_a_Native_iOS_App_Extension_or_WatchKit_App]  3. Was able to debug/run the app in the Apple Watch Simulator   4. But when trying to debug/run the app on the real devices Apple Watch      h6.Expect Result:  Should work well like it run on simulator.    h6.Actual Result  App never shows up on the device. The watchkit app shows up in the “Apple Watch” app on the iPhone, the option “Show App on Apple Watch” is on and status shows “installing…”. Unfortunately the installation never completes.     h6.Note:  Tried to just Run the app without debugging, removed the app, cleaned both Studio and Xcode, but still same error    h6.Test Project:  [watchTest|https://www.dropbox.com/s/a05a7dzs3ni8sh6/watchTest.zip?dl=0]  Aslo you will need to go into the tiapp.xml and change the path to the watch extension project specific for your environment:   ",Bug,High,Closed,"2015-07-17 01:13:58","2015-07-17 01:13:58",21
"The Titanium SDK ","Windows: Wrong callback for AlertDialog","{{AlertDialog}} click callback fires wrong callback function. For example following code should print Callback from Push 1 when you push Push1 button, and should print Callback from Push 2 when you push Push2.      ",Bug,Critical,Closed,"2015-07-16 03:11:07","2015-07-16 03:11:07",8
"The Titanium SDK ","Windows: Fix 'dp' scaling to keep parity with other platforms","Fix the equation for calculating {{dp}} values to maintain parity with other platforms.",Improvement,High,Closed,"2015-07-16 00:04:37","2015-07-16 00:04:37",3
"The Titanium SDK ","Windows: Alloy markup for Ti.UI.Windows.CommandBar","We might want a new markup support for {{Ti.UI.Windows.CommandBar}} button items using {{<Items>}} just like [Titanium.UI.iOS.Toolbar|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.iOS.Toolbar].    Would be look like this:      ","New Feature",Medium,Closed,"2015-07-15 11:36:49","2015-07-15 11:36:49",13
"The Titanium SDK ","Windows: AlertDialog is not shown more than twice","Windows: AlertDialog is not shown more than twice.    How to reproduce:    1. Show dialog once by clicking Push button  2. Close the dialog  3. Show dialog once by clicking  Push button again  4. AlertDialog should be shown again, but nothing happens    ",Bug,High,Closed,"2015-07-15 02:10:05","2015-07-15 02:10:05",8
"The Titanium SDK ","iOS9: Disable bitcode in build settings by default","It would be nice to to allow the disablement of bitcode at a project wide level. For the iOS 9 release we have many 3rd party SDKs that we do not expect to update to bitcode support until after the release. As such our first iOS 9 build will need to be without bitcode support. Ideally this could be configured in the tiapp.xml. ","New Feature",Critical,Closed,"2015-07-15 00:31:43","2015-07-15 00:31:43",5
"The Titanium SDK ","reverseGeocoder() and getCurrentPosition() callback objects need fixing","- {{Geolocation::reverseGeocoder()}} returns a string instead of a JSON object.  - {{Geolocation::getCurrentPosition()}} {{altitudeAccuracy}} causes a memory access error",Bug,Medium,Closed,"2015-07-14 21:08:11","2015-07-14 21:08:11",3
"The Titanium SDK ","Windows: Wrong use of std::unordered_map::emplace","Found that {{std::unordered_map::emplace}} is used in some areas on HAL/TitaniumKit/TitaniumWindows, but it seems like it is often used to replace element, which is wrong. (Because {{emplace}} inserts element only when the key is unique). [TIMOB-19213|https://jira.<USER>org/browse/TIMOB-19213] is happening because of this. We may want to double-check if we did it correctly in other places.    ",Story,High,Closed,"2015-07-14 07:38:50","2015-07-14 07:38:50",13
"The Titanium SDK ","Events on Map Annotation do not fire","There are some other tickets related to this, but since most of them show no activity, are old or cover only part of the problem, here's one ticket and test case that covers it all.    The following test case shows that the only 2 times a click-event that fires is when you tap a pin to open the annotation and when you tap the map to close the annotation. Tapping on the leftButton/View, rightButton/View, title or subtitle does not fire the event. Another bug is that the {{clicksource}} when you tap the map to close the annotation is {{annotation}} and not {{map}}.    Adding listeners directly to the leftView/rightView does not work either.    h2. Test case        h2. Logs    ",Bug,Medium,Closed,"2015-06-25 09:17:04","2015-06-25 09:17:04",13
"The Titanium SDK ","iOS: Regression: TiUIImageView.images property crashes app in 4.1.0.GA","h6.Issue Description  Crash when using animated ImageView with Titanium Mobile SDK 4.1.0.GA. When setting an array of image paths in the TiImageView.images property, the app gets no crash in 4.0.0.GA (iOS simulator/device).     h6.Steps to Reproduce  1. Install attached sample (includes the images)   2. Launch it - the app should crash since 4.1.0.GA and above exhibiting the following outcomes:    iOS 8.4 (iPhone 4s simulator) Crash  iOS 8.2 (iPad) No crash   iOS 7.1 (iPhone) Crash    h6.Stack Trace  ",Bug,Critical,Closed,"2015-07-14 03:11:50","2015-07-14 03:11:50",5
"The Titanium SDK ","Windows: fireEvent fires only one listener","{{fireEvent}} fires only one listener when multiple listener is attached to the event. For example following example should fires two listeners but only app:test1 is shown on the console.    ",Bug,Critical,Closed,"2015-07-14 01:27:14","2015-07-14 01:27:14",8
"The Titanium SDK ","Windows: setTimeout delay param should be optional","https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout    the second param - the delay should be optional and default to 0 if not specified. Not specifying currently causes a runtime exception (and the red screen of death).",Bug,Low,Closed,"2015-07-13 18:32:51","2015-07-13 18:32:51",5
"The Titanium SDK ","iOS: Tapping undo will get a range or index out of bounds on TiUITextField","h6.Issue Description  Tapping Undo button will result in application crashing.     h6.Steps to Replicate  A Ti.UI.Textfield that will only allow numeric characters (0 to 9 and .) Textfiled has keyboard type of Ti.UI.KEYBOARD_DECIMAL_PAD.   1. Started the application.   2. Tapping on numbers will update the textfield and tapping on undo will clear the textfield (This is expected behaviour).   3. Tapping on other characters present on the keyboard that are not numeric and then tapping on the undo button will result in application crashing.     h6.Test Case      h6.Crash logs  ",Bug,Critical,Closed,"2015-07-13 18:13:47","2015-07-13 18:13:47",3
"The Titanium SDK ","iOS: ListView randomly not shown since 4.1.x","{code:title=Environment}  Operating System    Name                        = Mac OS X    Version                     = 10.10.4    Architecture                = 64bit    # CPUs                      = 8    Memory                      = 17179869184    Node.js    Node.js Version             = 0.10.38    npm Version                 = 1.4.28    Titanium CLI    CLI Version                 = 4.0.1    Titanium SDK    SDK Version                 = 4.1.0.GA    SDK Path                    = /Volumes/Data/Users/sebastian/Library/Application Support/Titanium/mobilesdk/osx/4.1.0.GA    Target Platform             = iphone  ",Bug,Critical,Closed,"2015-07-10 08:55:57","2015-07-10 08:55:57",5
"The Titanium SDK ","Windows: CommandBar disappears after closing overlapping Window","{{Window.CommandBar}} which is associated with {{Ti.UI.Window}} disappears when creating new {{Window}} from {{Tab}}. For example in following sample code the CommandBar which is associated with {{win1}} disappears after closing overlapping Window. It's ok to hide it when overlapping Window is active, but it should restored when overlaping Window is closed.      ",Bug,Medium,Closed,"2015-07-10 09:58:08","2015-07-10 09:58:08",8
"The Titanium SDK ","Windows: Changing Tab in TabGroup should reload ListView","Suppose {{Ti.UI.TabGroup}} has two {{Ti.UI.Tab}} which contains {{Ti.UI.ListView}}, and changes on ListView in {{Tab 1}} affects content in ListView in {{Tab 2}}, just like the [ToDo list app|https://github.com/<USER>developer-relations/Sample.Todo]. Currently content in ListView is not reloaded when switching between tabs. Switching between Tabs should act like reloading Window and its contents according to how TabGroup on iOS works.  ",Bug,Medium,Closed,"2015-07-10 08:41:50","2015-07-10 08:41:50",13
"The Titanium SDK ","Android: Encrypted Database: Not being able to read installed database","h3. Issue    When working on Android and trying to install a pre-populated database Encrypted database module and open is throwing the following error:        During research i found some similar issues in native development:    http://stackoverflow.com/questions/13537073/android-sqlcipher-pragma-problems  http://stackoverflow.com/questions/20373066/sqlcipher-create-table-android-metadata-failed    h3. Steps to reproduce    1. Run alloySample (attached alloySample.zip)    Expected Result  The database will install and run correctly    Actual Result  We receive the following error sqlite returned: error code = 26, msg = file is encrypted or is not a database",Bug,High,Closed,"2015-06-19 23:52:36","2015-06-19 23:52:36",8
"The Titanium SDK ","iOS9: Resolve static analyzer errors on Xcode 7","Resolve all static analyser errors on Xcode 7.  Verification method:  1. in Xcode, Product -> Analyze  2. Results will appear, indicating all the analyzer errors",Improvement,Medium,Closed,"2015-07-10 04:21:44","2015-07-10 04:21:44",5
"The Titanium SDK ","iOS9: UIPickerView and UIDatePicker are now resizable","{quote}  UIPickerView and UIDatePicker are now resizable and adaptive—previously, these views would enforce a default size even if you attempted to resize them. These views also now default to a width of 320 points on all devices, instead of to the device width on iPhone.  Interfaces that rely on the old enforcement of the default size will likely look wrong when compiled for iOS 9. Any problems encountered can be resolved by fully constraining or sizing picker views to the desired size instead of relying on implicit behavior.  {quote}    Demo code:      On iOS8, nothing should change and the height is ignored. On iOS9, the height should be honored and the picker should resize.",Improvement,Low,Closed,"2015-07-10 03:48:12","2015-07-10 03:48:12",5
"The Titanium SDK ","iOS9: Rebuild all static libraries in titanium_mobile and appcelerator modules with Xcode 7","Following the release of Xcode 7 / Beta 3, There's a *Enable Bitcode* in Build Settings which is set to *YES*, that prevents the Xcode project from compiling if it contains libraries that were not compiled with Xcode 7 / Beta 3 with the same build setting. Reference [here|https://forums.developer.apple.com/thread/8991]    Bitcode is part of the app thinning initiative. Reference [here|https://developer.apple.com/library/prerelease/ios/documentation/IDEs/Conceptual/AppDistributionGuide/AppThinning/AppThinning.html#//apple_ref/doc/uid/TP40012582-CH35]    A temporary work around is to set this *Enable Bitcode* to *NO*, and the project will compile. However, eventually we should have all libraries recompiled with the latest Xcode, so that future projects are app thinning ready.    New tickets on rebuilding should be referenced to this ticket.",Epic,Critical,Closed,"2015-07-10 03:08:37","2015-07-10 03:08:37",21
"The Titanium SDK ","Android: implement 'noresults' event on ListView","On the ListView events, there is a 'noresults' event for iOS that is not implemented for Android.  Please implement this on Android as well",Bug,Low,Closed,"2015-07-09 22:16:58","2015-07-09 22:16:58",3
"The Titanium SDK ","Android: Picker in ActionBar shown expanded on app launch with SDK 4.0.1, 4.1.0.GA","In our app, we have a picker added to the ActionBar with code like the following. Building with the 3.5.x branch SDKs, the picker is collapsed as expected. Building the same project with SDK 4.1.0.GA (or 4.0.1), the picker is expanded as shown in the attached graphic when the app is launched. Users have to tap outside the picker to collapse it.        Edit: I added a graphic showing how it's supposed to look on launch, with picker collapsed. (I deleted the app name & icon from this new graphic.)",Bug,High,Closed,"2015-06-03 17:56:46","2015-06-03 17:56:46",3
"The Titanium SDK ","Windows: Corporate app crashes at directory search","The corporate directory app crashes when entering a text in search bar.  ",Bug,High,Closed,"2015-07-09 01:48:29","2015-07-09 01:48:29",13
"The Titanium SDK ","Ti.Android.Intent: Ability to send multiple URI to an intent","h6.Feature:  Right Now, `Ti.Android.Intent` only gives the option to send a single url within the `putExtraUri()` function. We need the option to use the `ACTION_SEND_MULTIPLE` instead of `ACTION_SEND` constant in order to allow an Array of URLs to be passed instead of a single String value.     h6.Usage example:       h6.Expected Result:   success intent call     h6.Actual Result:  Right now it generates an exception:   ","New Feature",High,Closed,"2015-07-09 01:10:10","2015-07-09 01:10:10",5
"The Titanium SDK ","Windows: RSS Sample fails to show RSS feed items in ListView","After fetching the RSS feed, while trying to add the items to the ListView, the ListView tenplate code in listview.js up in TitaniumKit, line 102 is throwing an error:      For some reason, it's having trouble loading up the template reference?    You'll likely need to use the WIP fork/PR of the sample on our latest 4.2.x SDK builds to test this. The PR is https://github.com/<USER>developer-relations/Sample.RSS/pull/17",Bug,High,Closed,"2015-07-08 17:28:54","2015-07-08 17:28:54",5
"The Titanium SDK ","Android: Date & Time Picker change event not fired nor is picker.value updated","On Android 5, the Titanium date picker is broken.    1. It no longer fires the changed event so you can't obtain the selected value as it updates. This happens whether on Ti SDK 4.X or 3.5.1.GA.  2. It no longer updates the picker.value so you can't obtain the selected value on demand. This works on Ti SDK 3.5.1.GA, so seems to be an issue only on Ti SDK 4.X.          Note that this alternative approach works:      ",Bug,High,Closed,"2015-04-28 15:21:32","2015-04-28 15:21:32",5
"The Titanium SDK ","Windows: Ti.UI.Label.text = undefined will display string undefined","The following example will show {{undefined}} in the Label while I'd expect it to be empty.    ",Bug,Low,Closed,"2015-07-08 14:59:14","2015-07-08 14:59:14",5
"The Titanium SDK ","Windows: Implement TabGroup for Windows Store as Pivot Control is Windows Phone only","[Hub Control|https://msdn.microsoft.com/en-us/library/windows/apps/dn449149.aspx]  [Pivot Control|https://msdn.microsoft.com/en-us/library/windows/apps/ff941098(v=vs.105).aspx]    *For Tab/TabGroup*  Pivot Control is a Windows Phone only component. Implement Hub Control for Windows Store.",Bug,High,Closed,"2015-07-07 22:37:18","2015-07-07 22:37:18",13
"The Titanium SDK ","Windows: Optimize Titanium::getAppInfo()","Currently {{Titanium::getAppInfo}} attempts to load {{_app_info_.json}} even if previous attempts failed to load it, because it didn't exist.",Improvement,None,Closed,"2015-07-07 19:00:52","2015-07-07 19:00:52",3
"The Titanium SDK ","Liveview: Update liveview to work with Windows Platform ","h5.Description    Currently Liveview does not work when building for Windows Platform, when passing in the --liveview flag it appears that no liveview server is started as there is no logging related to this.    I believe that this will require liveview to be updated and also the _restart method to be implemented for Ti.App    h5.Steps to reproduce    1. From the CLI run {{appc run -p windows -T wp-emulator --liveview}}    h5.Actual result    Liveview does not appear to start, no logging related to staring the file server occurs, when making changes to files the app is not reloaded    h5.Expected result    Liveview should work when using Windows Platform apps",Improvement,None,Closed,"2015-07-07 18:29:34","2015-07-07 18:29:34",5
"The Titanium SDK ","iOS9: Add behavior property to userNotificationAction","Via the userNotificationAction new property behavior, iOS9 now allows keyboard input as an action on the lock screen.    Reference:  https://developer.apple.com/library/prerelease/ios/releasenotes/General/iOS90APIDiffs/frameworks/UIKit.html    Sample code:  ",Improvement,Medium,Closed,"2015-07-07 08:11:02","2015-07-07 08:11:02",5
"The Titanium SDK ","Window: JSON.stringify throws “invalid document source” exception when you dump Titanium proxy","h5. Steps to reproduce:  1. Create an app for windows & replace the app.js with the code below:    2. Build for windows emulator.    h5.Actual Results:  1. We get exception:    2. Attached is the screenshot of the on device exception error.    h5.Expected Resut:  1. We should not get any exceptions using JSON.stringify",Bug,High,Closed,"2015-07-07 00:40:35","2015-07-07 00:40:35",3
"The Titanium SDK ","Windows: Implement toJSON for Titanium proxy classes","Calling JSON.stringify(proxy) on a Titanium proxy results in an error. We can control the JSON representation that a custom class returns by having a special toJSON() function that returns a JSObject, which is then converted internally by JSC into JSON.    https://github.com/<USER>webkit/blob/master/Source/JavaScriptCore/runtime/JSONObject.cpp#L328    Even if we can't get a great initial representation, we may be able to simply return undefined and avoid this runtime error?",Improvement,Medium,Closed,"2015-07-06 23:31:00","2015-07-06 23:31:00",8
"The Titanium SDK ","Windows: Module creation fails due to CMake error: Could NOT find JavaScriptCore","h5.Description    When creating a module if JavascriptCore is not present on the system then the creation will fail with the below        h5.Steps to reproduce    1. Ensure there is no JavascriptCore on your system  2. Create a module using {{appc new}}    h5.Actual result    The creation will fail due to no JavascriptCore    h5.Expected result    The creation should not fail",Bug,High,Closed,"2015-07-06 22:12:28","2015-07-06 22:12:28",2
"The Titanium SDK ","Windows: Data section of analytics event is a string","h5.Description    In analytics events the data section in the payload is a string rather than an object. Currently the analytics engine can handle this but in order to keep parity across platforms the data section should be an object.        h5.Steps to reproduce    1. Point at staging and capture the analytics payloads    h5.Actual result    The data section in the payloads is a string rather than an object    h5.Expected result    In order to keep parity with other platforms the section should be an object",Bug,High,Closed,"2015-07-06 21:23:27","2015-07-06 21:23:27",2
"The Titanium SDK ","Windows: Add tiapp property for windows app ID","h5.Description    Currently the Windows platform is using the id tag within the tiapp.xml in order to populate the Package/Identity/Name of the app. The Package/Identity/Name is given to the user by Microsoft when the app is created on the Windows developer dashboard, an example is 55769Appcelerator.pkgTest, the section before period is the same for every app created with the same account and the section after the period is the name of the app.    In order to pass the Windows certification test the designated app id must be present, however when building for Android the Windows app id is not a valid id as it begins with a number.    There should be a tag within the <windows> section of the tiapp.xml that is used to populate the Package/Identity/Name section for the app, allowing the same app to be published across multiple platforms with the same tiapp.xml    h5.Steps to reproduce    1. Package an app for Windows phone without setting the id property to the id given from Microsoft  2. Upload the app to the dashboard on dev.windows.com  3. Change the id to match the property and repeat 1-2  4. Attempt to package for Android    h5.Actual result    2. When validating the package the validation will fail  3. The validation will pass  4. The packaging will fail    h5.Expected result    A developer should not have to change the tiapp.xml values between packaging for different platforms",Improvement,High,Closed,"2015-07-06 20:47:37","2015-07-06 20:47:37",8
"The Titanium SDK ","Windows: Properties set in tiapp.xml not available via Ti.App.Properties API","The CLI is writing these properties to _app_props_.json in the app, but our native code doesn't load this file at all (like we do for _app_info_.json for Ti.App properties).",Bug,High,Closed,"2015-07-06 18:30:57","2015-07-06 18:30:57",5
"The Titanium SDK ","Windows: ti.background events are being sent multiple times","h5.Description    When analytics are being sent from a Windows phone they are being sent multiple times. See the attached payloads.txt for an example.    This appears to only be happening for ti.background events, it seems the event is being sent once when the app is backgrounded and then again when the app is reopened, if the app is quit then the ti.background is not sent when the app is reopened    h5.Steps To Reproduce    1. Point to staging server to see the payloads  2. Build to device    h5.Actual Result    The events are being sent multiple times    h5.Expected Result    An event should only be sent once",Bug,High,Closed,"2015-07-06 17:38:45","2015-07-06 17:38:45",3
"The Titanium SDK ","Windows: Tiapp version isn't populated into app's manifest file","We have a version of 1.1.0.0 hard-coded into the manifest templates. We need to pass along the tiapp version number to the manifest.    From the looks of it, I _think_ the best approach is to use the first two digits from tiapp, and then we should manage the last two. The 3rd one should be an auto-incrementing number each build. The 4th can likely just be a unix timestamp.    https://msdn.microsoft.com/en-us/library/windows/apps/gg442301(v=vs.105).aspx#BKMK_Updatingversionnumbers  http://henrituomola.fi/blog/2013/02/20/auto-versioning-windows-phone-application-packages-using-msbuild/    http://stackoverflow.com/questions/23754398/how-do-i-auto-increment-the-package-version-number",Bug,Critical,Closed,"2015-07-06 14:18:07","2015-07-06 14:18:07",5
"The Titanium SDK ","iOS: ListView backgroundGradient not full row size","~~~  <ListView defaultItemTemplate=template id=list_pano>                  <Templates>                      <ItemTemplate name=template>                          <View class=line_white top />                          <ImageView bindId=img class=img_preview />                          <View class=vertical view_text>                              <Label bindId=title class=headline lbl_title />                              <Label bindId=text class=lbl_text />                          </View>                          <Label bindId=subtitle class=subtitle lbl_subtitle />                      </ItemTemplate>                  </Templates>                  <ListSection/>              </ListView>  ~~~    data object  ~~~  data.push({              title: {                                },              subtitle: {                                },              text: {                                },              img: {                                },              properties: {                  height: 122,                  backgroundGradient:{                      colors: [{                          color: '#ffffff',                          offset: 0.0                      }, {                          color: '#000000',                          offset: 1.0                      }],                        type: 'linear'                  }              }          });  ~~~    backgroundGradient looks wrong    If I use just a selectedBackgroundGradient with the same color it looks correct. If I use both together the selectedBackgroundGradient has the same width/height as the backroundGradient and the rest of the selected row is grey      iOS 8  Titanium 3.5.0  OSX  ",Bug,High,Closed,"2015-01-23 15:42:14","2015-01-23 15:42:14",3
"The Titanium SDK ","iOS: Navbar buttons are displaced above the statusbar when using a fullscreen window","h2. Problem description  Opening a fullscreen window and switch to the landscape mode! Close this window and the underlying navigationwindow. The navbar button of the first navigationwindow is displaced above the statusbar.  This  behavior only appear when you switch from the portrait to the landscape mode in the fullscreen window    h2. Steps to reproduce  1. Start app in portrait mode  2. Tap the button Open Win 2  3. Tap the button Open FS Win  4. Rotate the device to the landscape mode  5. Tap the button close  6. Tap the button Close Win 2  7. the Navbar button is displaces       h2. Test case  {code:lang=javascript|title=app.js}  (function() {   var orientModes = [Titanium.UI.PORTRAIT,Titanium.UI.UPSIDE_PORTRAIT,Titanium.UI.LANDSCAPE_LEFT,Titanium.UI.LANDSCAPE_RIGHT];      var win1 = Ti.UI.createWindow({backgroundColor: '#FFF'});   var win2 = Ti.UI.createWindow({backgroundColor: '#FFF'});      win1.orientationModes = orientModes;    win2.orientationModes = orientModes;      var closeWin1Btn = Ti.UI.createButton({title: 'Close Win 1'});    var closeWin2Btn = Ti.UI.createButton({title: 'Close Win 2'});      var navWin1 = Titanium.UI.iOS.createNavigationWindow({window: win1});   var navWin2 = Titanium.UI.iOS.createNavigationWindow({window: win2});      var openWin2Btn = Ti.UI.createButton({title: 'Open Win 2'});   var openFullscreenWinBtn = Ti.UI.createButton({title: 'Open FS Win'});         openWin2Btn.addEventListener('click', function(){    navWin2.open();   });      closeWin1Btn.addEventListener('click', function(){    navWin1.close();   });      closeWin2Btn.addEventListener('click', function(){    navWin2.close();   });           openFullscreenWinBtn.addEventListener('click', function(){    var fullscreenWin = Ti.UI.createWindow({backgroundColor: '#000', fullscreen: true});    var closeFSWinBtn = Ti.UI.createButton({title: 'close'});    var label = Ti.UI.createLabel({left:20,top:20,width:Titanium.UI.FILL,font:{fontSize:12},color: '#FFF', text:'Rotate to landscape mode'});        fullscreenWin.orientationModes = orientModes;          closeFSWinBtn.addEventListener('click', function(){fullscreenWin.close();});        fullscreenWin.add(label);    fullscreenWin.add(closeFSWinBtn);            fullscreenWin.open();   });      win1.add(openWin2Btn);      win2.add(openFullscreenWinBtn);         win1.leftNavButton = closeWin1Btn;   win2.leftNavButton = closeWin2Btn;      navWin1.open();  })();   {code}",Bug,None,Closed,"2014-11-11 15:44:20","2014-11-11 15:44:20",1
"The Titanium SDK ","Cannot style links in Attributed Strings","The following test case shows you cannot override the color and underlining of links in Attributed Strings. It doesn't matter if you add the link before or after styling the same (or part of) the text you make a link.    I'd like to change the color and remove the underline.    h1. Test Case    ",Bug,High,Closed,"2014-11-12 13:57:18","2014-11-12 13:57:18",5
"The Titanium SDK ","iOS: textfield getValue() returns the misspelled text under iOS8","h2. Problem description  The textfield function getValue() returns the wrong (old) value, if the autocorrection replace the misspelled word.    h2. Steps to reproduce  1. Click into the textfield  2. Enter a misspelled word like asdjflkjsd  3. Click into the textfield as soon as the autocorrection appears  4. Click the button to alert the wrong misspelled textfield value again    h2. Test case  {code:lang=javascript|title=app.js}  (function() {     var win = Ti.UI.createWindow({backgroundColor:'#ffffff'});     var view = Ti.UI.createView({layout:'vertical'});      var button = Ti.UI.createButton({title:' Read textfield value ',top:20,borderRadius:5,borderColor:'#1C1C1C',backgroundColor:'#C0C0C0'});      var textfield = Ti.UI.createTextField({    borderStyle: Ti.UI.INPUT_BORDERSTYLE_ROUNDED,    autocapitalization: Titanium.UI.TEXT_AUTOCAPITALIZATION_NONE,          top: 70,          height: 30,          width:Titanium.UI.FILL     });        var label = Ti.UI.createLabel({left:20,top:20,width:Titanium.UI.FILL,font:{fontSize:12},     text:'PROBLEM DESCRIPTION\n'     +'The textfield function getValue() returns the wrong (old)value, if the autocorrection replace the misspelled word\n\n'     +'STEPT TO REPRODUCE\n'     +'1. Click into the textfield\n'     +'2. Enter a misspelled word like asdjflkjsd\n'     +'3. Click into the textfield as soon as the autocorrection appears\n'     +'4. Click the button to alert the wrong misspelled textfield value again.\n\n'     +'ENVIRONMENT\n'     +'Ti Mobile SDK: 3.4.0 GA, Ti Studio: 3.4.0.201409261227, iOS: 8.1 & 8.1.1, Device: iPhone 5 and 5S'});       button.addEventListener('click',function(e){    alert(textfield.getValue());   });      textfield.addEventListener('click',function(e){    if(textfield.getValue() !== ''){     alert(textfield.getValue());    }   });      view.add(textfield);   view.add(button);   view.add(label);   win.add(view);       win.open();  })();    {code}",Bug,Medium,Closed,"2014-11-10 08:54:14","2014-11-10 08:54:14",8
"The Titanium SDK ","Windows: Adding items to a TableViewSection after creation of TableView doesn't update UI","Updating {{TableViewSection}} which is bound to {{TableView}} doesn't update UI. The root cause would be similar to https://jira.<USER>org/browse/TIMOB-19085.",Bug,Medium,Closed,"2015-07-05 01:27:02","2015-07-05 01:27:02",13
"The Titanium SDK ","Windows: Ti.Filesystem.File.read() fails on device only if file has .js extension","The following example works in the emulator but fails on the {{.js}} file on device:        h2. Error        It looks like the {{.js}} extension triggers it (but only on device) to use [readRequiredModule|https://github.com/<USER>titanium_mobile_windows/blob/master/Source/Global/src/GlobalObject.cpp#L172-L179] and then fails. It's the only place where I could find this error.    In addition the attached screenshots also show another bug, where a caught exception in an event listener still causes another exception raised?",Bug,Critical,Closed,"2015-07-03 13:20:05","2015-07-03 13:20:05",5
"The Titanium SDK ","LiveView via CLI does not work (Error: write EIO)","Since updating Studio to 4.1.0 Beta LiveView does no longer work via CLI. It gives error that were [reported earlier on Q&A|https://community.<USER>com/topic/364/liveview-works-on-studio-but-doesn-t-work-on-cli]:        Every time you save a file the socket errors occur. The Simulator is not updated.",Bug,High,Closed,"2015-06-29 12:02:12","2015-06-29 12:02:12",5
"The Titanium SDK ","iOS9: Replace NSURLConnection in Ti.Network.HTTPClient with NSURLSession","NSURLConnection methods have been deprecated in iOS9 in favor of NSURLSession.     h4.WWDC 2015 reference  https://developer.apple.com/videos/wwdc/2015/?id=711    h4. NSURLConnection reference  https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSURLConnection_Class/index.html#//apple_ref/doc/uid/TP40003755    h4. NSURLSession reference  https://developer.apple.com/library/prerelease/ios/documentation/Foundation/Reference/NSURLSession_class/index.html#//apple_ref/doc/uid/TP40013435    h4. Affected Titanium Class  https://github.com/<USER>APSHTTPClient",Improvement,Critical,Closed,"2015-07-03 03:13:33","2015-07-03 03:13:33",13
"The Titanium SDK ","Windows: CLI errors with Error: Callback was already called when building to emulator with production deploytype","h5.Description    When building for an emulator with a deploytype of production the build will error out with the below        h5.Steps to reproduce    1. Build a project using {{appc run -p windows -T wp-emulator -D production}}    h5.Actual result    The CLI will error with the above    h5.Expected result    The CLI should not error",Bug,High,Closed,"2015-07-03 00:46:38","2015-07-03 00:46:38",5
"The Titanium SDK ","Windows: App crashes on second launch when encryption is enabled","h5.Description    When building to either device or emulator with encryption enabled the app crashes every time after the first launch.    h5.Steps to reproduce    1. Build to a device using {{appc run -p windows -T wp-device}} or an emulator using {{appc run -p windows -T wp-emulator -D production}}  2. When the app launches fully quit the app  3. Reopen the app from the app menu    h5.Actual result    The app will crash    h5.Expected result    The app should not crash",Bug,High,Closed,"2015-07-03 00:10:46","2015-07-03 00:10:46",5
"The Titanium SDK ","iOS9: Implement native auto layout to use on iOS9 SplitView- NSLayoutConstraint","The iOS9 SplitView component requires its children views to use the iOS auto layout engine. This is also known as NSLayoutConstraint. This needs to be implemented in Titanium Views.","New Feature",High,Closed,"2015-07-02 22:49:38","2015-07-02 22:49:38",21
"The Titanium SDK ","iOS: Add ability to turn off auto-complete and auto-suggest on Keyboard","*Suggested option that we need to expose:*  http://stackoverflow.com/questions/24031362/ios8-xcode-how-to-remove-quicktype-on-uikeyboard-auto-complete-auto-suggest    *New property showUndoRedoActions, example code:*  ",Improvement,High,Closed,"2015-07-02 21:53:29","2015-07-02 21:53:29",5
"The Titanium SDK ","iOS9: Adopt IPv6 requirement for App Store Submissions","“Because IPv6 support is so critical to ensuring your applications work across the world for every customer, we are making it an AppStore submission requirement, starting with iOS 9.”    http://www.internetsociety.org/deploy360/blog/2015/06/apple-will-require-ipv6-support-for-all-ios-9-apps/    h4. Quote from link  {quote}  Three steps all developers can take to make sure their applications work over IPv6 networks:  - Use the networking frameworks (for example, “NSURLSession”)  - Avoid use of IPv4-specific APIs  - Avoid hard-coded IP addresses    Essentially, if app developers are using the higher level APIs and frameworks and aren’t hacking around at the IP layer, their apps should probably “just work” on top of either IPv4 or IPv6.  This is an important point – most iOS developers probably do not need to do anything on the development side. Assuming they have followed best practices in coding and are using the iOS networking frameworks, they should be all set.  Some developers, though, may be using lower level APIs that may involve direct usage of IPv4 addresses. Some developers may also be using the user’s IPv4 address as an identifier or for logging or configuration purposes.  But again, most iOS developers probably don’t need to change their code to support IPv6.  {quote}    Apple Guide: [here|https://developer.apple.com/library/prerelease/ios/documentation/NetworkingInternetWeb/Conceptual/NetworkingOverview/UnderstandingandPreparingfortheIPv6Transition/UnderstandingandPreparingfortheIPv6Transition.html#//apple_ref/doc/uid/TP40010220-CH213-SW1]",Improvement,Critical,Closed,"2015-07-02 20:24:28","2015-07-02 20:24:28",5
"The Titanium SDK ","Windows: Errors thrown by MSBuild are logged at the warn level","h5.Description    When a build fails in the MSBuild phase the errors are logged in the CLI at the warn level see below for an example         Errors should be surfaced to the error level of logging    h5.Steps to reproduce    1. Build a project using appc run -p windows -T ws-local  2. Either provide a cert of generate one, when entering the password enter an incorrect password    h5.Actual result    The build will error and the errors will be surfaced to the warn log level    h5.Expected result    The errors should surface to the error log level",Bug,Medium,Closed,"2015-07-02 20:23:43","2015-07-02 20:23:43",3
"The Titanium SDK ","Windows: Building a project for ws-local with the --build-only flag errors out","h5.Description    When building a project for ws-local the build fails during the MSBuild phase with errors relating to the certificate files.        The issue still persists when passing the cert in using the --ws-cert flag    h5.Steps to reproduce    1. Build a project using {{appc run -p windows -T ws-local --build-only}}  2. Either provide a cert of generate one    h5.Actual result    The build will error out    h5.Expected result    The build should not error out",Bug,Medium,Closed,"2015-07-02 20:13:06","2015-07-02 20:13:06",5
"The Titanium SDK ","Windows: Ti.version is blank","{{Ti.version}} is left blank after compiling using <USER>Studio.    When testing the Geocoder app it validates {{Ti.version}} before launching and fails because {{Ti.version}} is blank.    ",Bug,High,Closed,"2015-07-02 17:53:17","2015-07-02 17:53:17",5
"The Titanium SDK ","Windows: Button does not size correctly","When creating a button and specifying its width and height to create a square the displayed button does not respect the size set and looks rectangular.    *EXAMPLE*  ",Bug,High,Closed,"2015-07-02 17:35:00","2015-07-02 17:35:00",8
"The Titanium SDK ","Windows: Ti.UI.TableViewRow.color does not work","The following example and attached screenshots show that the color of a TableViewRow does not work on Windows:    ",Bug,None,Closed,"2015-07-02 09:11:39","2015-07-02 09:11:39",3
"The Titanium SDK ","Ti.UI.ListView.dividerHeight does not accept value of 0","Ti.UI.ListView.dividerHeight does not accept value of 0 which means you cannot remove the divider in Android ListView.    https://github.com/<USER>titanium_mobile/blob/f8d4137ddbff4d1eacc7224f0cba1b374f7dec54/android/modules/ui/src/java/ti/modules/titanium/ui/widget/listview/TiListView.java#L500",Bug,Medium,Closed,"2015-07-02 08:37:39","2015-07-02 08:37:39",3
"The Titanium SDK ","Ti.UI.ListView.dividerHeight should be separatorHeight","[Ti.UI.ListView.dividerHeight|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.ListView-property-dividerHeight] should be named {{separatorHeight}}. I know the native property is called {{dividerHeight}} on Android, but {{separatorColor}} is also available on Android and we should use different names for the same element and we already have {{separatorInsets}} and {{separatorStyle}} as well.    https://github.com/<USER>titanium_mobile/blob/master/android/modules/ui/src/java/ti/modules/titanium/ui/widget/listview/TiListView.java#L710-L719",Improvement,Medium,Closed,"2015-07-02 08:31:58","2015-07-02 08:31:58",1
"The Titanium SDK ","Windows: DefaultLanguage property should be set (to en) in manifest","We [default|https://github.com/<USER>titanium_mobile_windows/blob/master/cli/commands/_build/generate.js#L45-L47] to English for generating strings, but we don't set the [DefaultLangauge|https://msdn.microsoft.com/en-us/library/windows/apps/ff769509(v=vs.105).aspx#BKMK_DEFAULTLANGUAGEandLANGUAGESelements] in the manifest. This defaults to the language of the OS you build on so as long as this is also English, all is OK. But if you build on a system with a different language you get errors like this during the build and it will probably not work well.    The resolution is simple, it should set the {{DefaultLanguage}} in the generated manifest.    Also take note of TIMOB-16356    ",Bug,None,Closed,"2015-07-02 07:54:06","2015-07-02 07:54:06",3
"The Titanium SDK ","Windows: Showing an alert dialog when another alert dialog is on screen throws runtime error","h5.Description    When showing an alert dialog if one is already shown then the app will throw a runtime error.         h5.Steps to reproduce    1. Add the above code to an app.js  2. Build to an emulator/device  3. Tap the label  4. Dismiss the alert and the runtime error  5. Tap the label and then tap the close button    h5.Actual result    3. The app will throw a runtime error  5. No runtime error as the first alert has been dismissed    h5.Expected result    A runtime error should not be thrown",Bug,None,Closed,"2015-07-02 01:04:38","2015-07-02 01:04:38",8
"The Titanium SDK ","Windows: Intermittent error when CLI is launching app onto device","h5.Description    Intermittently when building to device I am getting the following printed out in the console when the build <USER>attempts to launch the app {{ ERROR 0x81030136}}.  I have only seen this issue on once machine so far.  I have looked up the error and it has lead to these     https://bugreports.qt.io/browse/QTBUG-42950  http://issuetracker.unity3d.com/issues/deployment-to-wp8-dot-1-sometimes-fails    h5.Steps to reproduce    *This only happens Intermittently*    1. Build a Windows Platform project for device    h5.Actual result    During the launching of the app the error will be printed, the app will not launch    h5.Expected result    There should be no errors",Bug,None,Closed,"2015-07-01 23:50:22","2015-07-01 23:50:22",0
"The Titanium SDK ","Windows: Building to device with ti.cloud errors on launch if encryption is enabled","h5.Description    When building a project to device that includes a module and the assets have been encrypted when the app requires the module the app will throw the error as shown in the attached screenshot.    When I try this on emulator with a deploy type of production the app crashes on launch, I believe this issue is the root cause too    h5.Steps to reproduce    1. Create a project, add ti.cloud and require it in  2. Build the project for using {{appc run -p windows -T wp-device -D development}}  2. Build the project for using {{appc run -p windows -T wp-emulator}}    h5.Actual result    When launching the app, an error will be thrown on startup    h5.Expected result    The app should launch successfully ",Bug,High,Closed,"2015-07-01 22:47:47","2015-07-01 22:47:47",3
"The Titanium SDK ","Windows: Ti.UI.Switch cannot be positioned (absolute)","The following example and attached screenshot show that a {{Ti.UI.Switch}} cannot be positioned on Windows. It will always appear centered.    ",Bug,None,Closed,"2015-07-01 12:45:24","2015-07-01 12:45:24",5
"The Titanium SDK ","Windows: Implement Ti.UI.Switch.titleOff and Ti.UI.Switch.titleOn","The {{OnContent}} and {{OffContent}} properties of the {{ToggleSwitch}} used to implement {{Ti.UI.Switch}} (TIMOB-18714) have been hard-coded to _On_ and _Off_:  https://github.com/<USER>titanium_mobile_windows/blob/master/Source/UI/src/Switch.cpp#L27-L28    They should be set by [Ti.UI.Switch.titleOn|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Switch-property-titleOn] and [Ti.UI.Switch.titleOff|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Switch-property-titleOff] like Android and MobileWeb.",Improvement,None,Closed,"2015-07-01 12:42:00","2015-07-01 12:42:00",5
"The Titanium SDK ","Windows: Ti.UI.Window.remove() generates runtime error, view is not removed","The following example shows that you cannot remove a view on Windows:        Log:    ",Bug,Critical,Closed,"2015-07-01 11:27:59","2015-07-01 11:27:59",3
"The Titanium SDK ","Windows: HTTPClient does not send User-Agent","The following example shows that on Windows is not sending the {{User-Agent}} header (as well as {{X-Titanium-Id}}) like iOS and Android do. Many API's require this header to be set.        h2. Windows        h2. iOS        h2. Android    ",Bug,None,Closed,"2015-07-01 11:04:38","2015-07-01 11:04:38",5
"The Titanium SDK ","Windows: Ti.Filesystem.File.createDirectory will fail if parent directory does not exist","The following code works fine on iOS and Android but will crash the app on Windows, *without showing anything in the logs*:    ",Bug,High,Closed,"2015-07-01 10:10:06","2015-07-01 10:10:06",2
"The Titanium SDK ","Windows: Ti.Platform.createUUID() should not have curly brackets","The following code:        Will have the following type of output on:    * iOS: *D614A644-4B66-41DB-9874-7A4BC9913FC2*  * Android: *08c67469-3b8c-48ec-8fde-499ec520407a*  * Windows: *\{5ec8919e-5681-49af-8ee4-da2522a47194\}*    The difference in lower and upper case is trivial, but the curly brackets on Windows will break stuff. In fact, the Analytics on Windows is already working around it:  https://github.com/<USER>titanium_mobile_windows/blob/master/Source/TitaniumKit/src/analytics.js#L32    The type of output should be identical on all platforms.",Bug,Critical,Closed,"2015-07-01 10:01:56","2015-07-01 10:01:56",2
"The Titanium SDK ","Windows: Blue console output invisible in blue PowerShell window","The following example and attached screenshots show that the blue {{[DEBUG]}} prefix is invisible against the blue PowerShell background. Even selecting the text has no effect (because both invert to the same color). Copy and pasting the console output does show the text is there.        Copied logs:    ",Bug,None,Closed,"2015-07-01 09:40:15","2015-07-01 09:40:15",3
"The Titanium SDK ","Windows: console.debug is not implemented","The following example will crash on {{console.debug}}:        This is because {{console.debug}} is not mapped to {{Ti.API.debug}} here:  https://github.com/<USER>titanium_mobile_windows/blob/master/Source/TitaniumKit/src/ApplicationBuilder.cpp#L241-L245",Bug,Critical,Closed,"2015-07-01 09:25:16","2015-07-01 09:25:16",1
"The Titanium SDK ","Windows: Ti.UI.TextField.value = undefined will display value as text","The following example will show {{undefined}} in the TextField while I'd expect it to be empty.    ",Bug,Low,Closed,"2015-07-01 09:09:58","2015-07-01 09:09:58",5
"The Titanium SDK ","Ti.UI.OptionDialog crashes with unknown exception","Both the test app in the Windows repo:  https://github.com/<USER>titanium_mobile_windows/blob/master/test/app/optiondialog_test.js    And the example in the docs:  http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.OptionDialog    Crash with an unknown exception:    ",Bug,Critical,Closed,"2015-07-01 08:39:02","2015-07-01 08:39:02",3
"The Titanium SDK ","Windows SDK: Needs Ti.App._restart() for LiveView (and others) to work","The Windows SDK does not have {{Ti.App._restart()}} needed for LiveView, LiveViewer, TiShadow etc to work.","New Feature",None,Closed,"2015-07-01 08:04:12","2015-07-01 08:04:12",8
"The Titanium SDK "," Windows: Module name suggestion should include text description, not just a regular expression for format","h5.Steps To Reproduce:  1. In appc CLI do appc new  2. CLI will prompt to enter the module name you want to have.  3. Observe the name suggestion given below :      h5.Actual Result:  1. The name suggestion shows random characters :      h5.Expected Result:  1. The name suggestion should not show random characters.",Improvement,Low,Closed,"2015-07-01 00:22:21","2015-07-01 00:22:21",3
"The Titanium SDK ","Windows: Components resize after their width or height has been calculated from left and right or top and bottom","Components such as {{TextField}} get resized by Windows after loading. This resets the {{width}} or {{height}} properties if they have been calculated from the {{top, bottom}} or {{left, right}} properties.    ",Bug,High,Closed,"2015-06-30 22:54:04","2015-06-30 22:54:04",8
"The Titanium SDK ","iOS: Cannot build on device with all-katakana names","As a result of [https://github.com/<USER>node-ios-device/issues/3], you can't build for such devices. Even running ti info causes a crash in longjohn.js.",Bug,Low,Closed,"2015-05-08 11:06:01","2015-05-08 11:06:01",1
"The Titanium SDK ","Windows: Alloy compile errors not visible when ran via `appc run`","The following example (notice the typo in {{</Label/>}}):        shows that the Alloy compile arrow is showing when running {{appc alloy compile}} directly:        while it is not when it runs as part of {{appc run}}:    ",Bug,High,Closed,"2015-06-30 13:57:34","2015-06-30 13:57:34",5
"The Titanium SDK ","Ti.UI.Windows.AppBarToggleButton:click does not include checked like documented","The following example will show that the [Ti.UI.Windows.AppBarToggleButton:click|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.Windows.AppBarToggleButton-event-click] event does not contain {{e.checked}} like documented. You'll have to use {{e.source.checked}} as a workaround until this has been resolved.    ",Bug,Low,Closed,"2015-06-30 13:32:25","2015-06-30 13:32:25",3
"The Titanium SDK ","Windows: Splash Screen not showing","The [sample app I made for the 4.1.0.GA|https://github.com/<USER>developer-relations/appc-sample-ti410] has icons and splash screens [at the same place|https://github.com/<USER>developer-relations/appc-sample-ti410/tree/master/app/assets/windows] and of the same sizes as [those in the default Alloy project|https://github.com/<USER>alloy/tree/master/platforms/windows/project/app/assets/windows]. Still, the icon and splash screen showing in the emulator are the [defaults in the SDK|https://github.com/<USER>titanium_mobile_windows/tree/master/templates/build/Assets], as the screenshots show.",Bug,High,Closed,"2015-06-30 12:52:51","2015-06-30 12:52:51",5
"The Titanium SDK ","Windows: Ti.UI.Windows.CommandBar.items.push(item) does not work","While creating a polyfill for the missing Alloy XML support for CommandBar I discovered that:    {code}  var backButton = Ti.UI.Windows.createAppBarButton({          icon: Ti.UI.Windows.SystemIcon.BACK      }),      likeButton = Ti.UI.Windows.createAppBarToggleButton({          icon: Ti.UI.Windows.SystemIcon.LIKEDISLIKE      }),      forwardButton = Titanium.UI.Windows.createAppBarButton({          icon: Ti.UI.Windows.SystemIcon.FORWARD      }),      commandBar = Ti.UI.Windows.createCommandBar({          items: [backButton, likeButton]      }),  win = Ti.UI.createWindow();    commandBar.items.push(forwardButton);    win.add(commandBar);  win.open();  {code}    does not work (the commandBar displays empty) while:    {code:javascript}  var items = commandBar.items;  items.push(forwardButton);  commandBar.items = items;  {code}    does work.",Bug,None,Closed,"2015-06-30 11:59:13","2015-06-30 11:59:13",8
"The Titanium SDK ","Android 5.0: Add support for elevation","PR for elevation support: https://github.com/<USER>titanium_mobile/pull/6931 by [~<USER>    Originally was in Jira https://jira.<USER>org/browse/TIMOB-17963",Improvement,Medium,Closed,"2015-06-30 02:24:20","2015-06-30 02:24:20",3
"The Titanium SDK ","Windows: Creating windows module from appc CLI errors out due to missing boost libraries","h5.Steps To Reproduce:  1. Do appc new & follow prompts for creating a window module.    h5.Actual Results:  1. The module creation fails due to missing boost libraries.  *NOTE* - I am not sure if boost are required dependency for building window modules.        h5.Expected Result:  1. Windows module should be created successfully. ",Bug,High,Closed,"2015-06-30 00:07:49","2015-06-30 00:07:49",2
"The Titanium SDK ","Windows: Encryption fails with 64-bit Java","h5.Description    When building for Windows with 64-bit Java the build fails at the encryption stage. Running the command the CLI uses prints out the error       h5.Steps to reproduce    1. Make sure a 64-bit Java is set as your JAVA_HOME environment variable  2. Build a Windows platform app that will use encryption {{appc run -p windows -T wp-device --build-only}}    h5.Actual result    The build will fail    h5.Expected result    The build should pass",Bug,None,Closed,"2015-06-29 22:20:20","2015-06-29 22:20:20",3
"The Titanium SDK ","Windows: Build target is not respected when forking a new build command due to mismatched SDKs","h5.Description    When building for Windows if there are mismatched SDKs, the tiapp.xml is set to a different SDK than the selected SDK in the CLI, then the build target is not respected and the build will always be to wp-emulator        h5.Steps to reproduce    1. Set your selected SDK to a different SDK than in the tiapp using {{appc ti sdk select 4.0.0.GA}}  2. Build using {{appc run -p windows -T wp-device}}    h5.Actual result    A new build command will be forked and the build will take place for emulator    h5.Expected result    The build target specified should be carried through",Bug,None,Closed,"2015-06-29 21:51:42","2015-06-29 21:51:42",3
"The Titanium SDK ","Windows: App crashes after showing splash screen on device only with error [ERROR] The remote procedure call failed. ","*NOTE* - This is a regression. Works fine with build 4.1.0.v20150629074136  h5.Steps To Reproduce:  1. Create a default alloy or classic app for windows.  2. Build for windows device.    h5.Actual Results:  1. The app launches, we see the <USER>splash screen & the app crashes.  2. In the logs we get   3. We are not able to build for windows device because of this issue.    h5.Expected Results:  1. The app should not crash after splash screen when launched on device & we should not see any errors.",Bug,Medium,Closed,"2015-06-29 19:13:37","2015-06-29 19:13:37",1
"The Titanium SDK ","Windows: If generating ti.windows.publishername from tiapp publisher value, escape invalid characters","If there's no explicit ti.windows.publishername value in tiapp we'll default to generating one from the publisher value (which is meant to be the display name). We need to escape invalid characters there (specifically commas) or else the build will fail.",Bug,Medium,Closed,"2015-06-29 19:01:11","2015-06-29 19:01:11",3
"The Titanium SDK ","Windows Phone: Lots of scary warnings in successful build of default app","Although successful, building the default Alloy project for Windows Phone displays a lot of warnings in the console. Not sure if can ignore or fix those, but it's not reassuring for the user.    ",Bug,None,Closed,"2015-06-29 18:34:34","2015-06-29 18:34:34",5
"The Titanium SDK ","iOS: Map Crashes with SIGSEGV if you add a vector to a map with no mapType set","The following example crashes when you comment out the {{mapType}} line:        h2. Crash log    ",Bug,High,Closed,"2015-06-29 18:13:02","2015-06-29 18:13:02",3
"The Titanium SDK ","iOS: New editActions show in reversed order","The following example and attached screenshot show that the new {{editActions}} show in the reverse order (LTR).    I would expect the first action in the array to show first (from left) and the last last.    ",Bug,Low,Closed,"2015-06-29 14:39:34","2015-06-29 14:39:34",3
"The Titanium SDK ","iOS: Default editAction visible on first swipe when setting ListView.canEdit to true","The attached screenrecording shows that the first time I swipe a list item to show the custom editActions I've set, it displays the default delete action. The next time I swipe the (or another) item, I do see the custom editActions.    This seems to only happen when I set both {{ListView.canEdit}} and {{ListItem.canEdit}} to {{true}}. I have not been able to reproduce this when I did not set {{LIstView.canEdit}} and also no on device, only in iOS Simulator.}    ",Bug,Medium,Closed,"2015-06-29 14:20:13","2015-06-29 14:20:13",3
"The Titanium SDK ","iOS: ListView editActions should hide after selecting an action","The attached screen recording shows that after selecting a custom action, the actions don't hide. I have to swipe the row to the right to hide the actions.    I'd expect the actions to hide after selecting one.",Bug,Medium,Closed,"2015-06-29 14:16:58","2015-06-29 14:16:58",3
"The Titanium SDK ","Windows: Update module generator to use newest macros","We have more new macros meant to make it easier to define getters/setters of common types like std::string, int32_t, uint32_t, double, bool.    These should be used when we can in place of the generated longer-forms.    https://github.com/<USER>titanium_mobile_windows/blob/master/Source/TitaniumKit/include/Titanium/detail/TiImpl.hpp#L278",Story,Medium,Open,"2015-06-29 13:49:08","2015-06-29 13:49:08",3
"The Titanium SDK ","iOS: ListView new `rowAction` event should be `rowaction` (or `editaction`) like other events","The new [rowAction|https://<USER>github.io/appc-docs/latest/#!/api/Titanium.UI.ListView-event-rowAction] is camel-cased and though I love that, we have been using all lowercase and we should not mix conventions. So the event should be {{rowaction}}, like the new {{scrollstart}} and {{scrollend}} on the same ListView API.    It might be even better to name it {{editaction}} since that is in line with the {{Listitem.editActions}}, {{ListView.canEdit}}, {{ListView.canEdit}} and {{ListView.editting}} property names.",Bug,Low,Closed,"2015-06-29 13:03:50","2015-06-29 13:03:50",1
"The Titanium SDK ","Windows: Build using 4.1.0.Beta fails on Windows 10 Pro Insider Preview","I had been running various earlier master versions of the Titanium CLI and SDK and simply updating the <USER>CLI failed for me somehow. So I did a clean install, which worked fine.    But builds do not:        Running it with the Titanium CLI directly gives:    ",Bug,None,Closed,"2015-06-29 07:29:13","2015-06-29 07:29:13",3
"The Titanium SDK ","CLI: Windows: The build process should pause to allow the user to import the certificate","h5.Description    When building for ws-local the build should pause to allow the user to import the certificate as the build will fail  if they do not complete the workflow quick enough      h5.Steps to reproduce    1. Build a project that does not have a pfx file  2. Create the pfx through the prompts  3. When prompted to import the cert do not do anything    h5.Actual result    The build will continue and fail    h5.Expected result    The build should pause allowing time for the user to follow the workflow",Improvement,High,Closed,"2015-06-27 21:36:27","2015-06-27 21:36:27",3
"The Titanium SDK ","CLI: Windows: Unable to generate a new pfx file for project that already has one generated","h5.Description    When building a project that already has a generated pfx file then a new pfx can't be generated until the files are deleted from the folder. As per the prompt {{Where is the pfx file used to sign the app? (leave blank to generate) \[generated.pfx]:}} by leaving this blank a new pfx should be generated but the default is used instead.    h5.Steps to reproduce    1. Build a project that has an already generated pfx file  2. When prompted for the file, leave the prompt blank    h5.Actual result    The existing file will be used    h5.Expected result    As per the prompt a new file should be created",Bug,High,Closed,"2015-06-27 20:31:16","2015-06-27 20:31:16",5
"The Titanium SDK ","CLI: Windows: Prompt for pfx password if one is not passed in and an already generated pfx is being used","h5.Description    When running a project for ws-local if the user uses a already generated .pfx file then they will not be prompted for a password and the build will fail. If the password is passed in using the -P flag then the build will pass.    h5.Steps to reproduce    1. Build a project that already has an .pfx file generated using {{appc run -p windows -T ws-local}}  2. Build the same project but this time pass in the password using the -P flag {{appc run -p windows -T ws-local -P <password>l}}    h5.Actual result    1. The build will fail  2. The build will pass    h5.Expected result    The build should pass both times, in instance 1 you should be prompted for a password",Bug,High,Closed,"2015-06-27 20:14:36","2015-06-27 20:14:36",5
"The Titanium SDK ","Windows: Building for ws-local fails with powershell error 'Read-Host : Windows PowerShell is in NonInteractive mode'","h5.Description    When building for ws-local the build fails with the following error        The build works fine when using the 4.1.0.v20150624180823 SDK    h5.Steps to reproduce    1. Create a new project using the latest SDK  2. Build the project using {{appc run -p windows -T ws-local}}, generate a .pfx if needed    h5.Actual result    The build fails with the error above    h5.Expected result    The build should pass",Bug,Critical,Closed,"2015-06-27 06:15:34","2015-06-27 06:15:34",5
"The Titanium SDK ","Android: Alloy- HeaderView element not showing in android for TableViewSection","Hi,     I have added a headerView to TableViewSection but on android it doesn't shows while on iOS works fine.     Here is the code, it needs to be added in index.js    var createHeaderViewSection = function(args) {    Ti.API.info('create header view section');    var headerView = Ti.UI.createView({          left: 0,          height: '18dp',          backgroundImage: '/images/timeline_date.png'          //backgroundColor: '#0000ff'        }),        label = Ti.UI.createLabel({          top: '2dp',          left: '15dp',          textAlign: 'center',          text: args.day,          color: '#fff',          font: { fontSize: '14dp'}        });      headerView.add(label);      return headerView;  };    var sectionFruit = Ti.UI.createTableViewSection({ headerView: createHeaderViewSection({day: 02-02-2016}) });  sectionFruit.add(Ti.UI.createTableViewRow({ title: 'Apples' }));  sectionFruit.add(Ti.UI.createTableViewRow({ title: 'Bananas' }));    var sectionVeg = Ti.UI.createTableViewSection({ headerTitle:'Title' });  sectionVeg.add(Ti.UI.createTableViewRow({ title: 'Carrots' }));  sectionVeg.add(Ti.UI.createTableViewRow({ title: 'Potatoes' }));    var sectionFruit_02 = Ti.UI.createTableViewSection({ headerView: createHeaderViewSection({day: 03-02-2016}) });  sectionFruit_02.add(Ti.UI.createTableViewRow({ title: 'Apples' }));  sectionFruit_02.add(Ti.UI.createTableViewRow({ title: 'Bananas' }));    var sectionFruit_03 = Ti.UI.createTableViewSection({ headerView: createHeaderViewSection({day: 03-02-2016}) });  sectionFruit_03.add(Ti.UI.createTableViewRow({ title: 'Apples' }));  sectionFruit_03.add(Ti.UI.createTableViewRow({ title: 'Apples' }));  sectionFruit_03.add(Ti.UI.createTableViewRow({ title: 'Bananas' }));    var tb= Ti.UI.createTableView({    height: Ti.UI.SIZE,    backgroundColor: #ff0000  });  tb.setData([sectionFruit, sectionVeg, sectionFruit_02, sectionFruit_03]);  $.index.add(tb);  $.index.open();",Bug,Medium,Closed,"2015-06-18 14:45:15","2015-06-18 14:45:15",5
"The Titanium SDK ","Windows: Packaging from CLI throws error while generating certs because of space in path","h5.Steps To Reproduce:  *NOTE* - You should have a space in your path leading to the app created in studio.  e.g   [~<USER> does not have space in his path & he does not see this error. But the build fails for him too eventually.    1. Follow the <USER>to package a window app to windows store from here : https://wiki.<USER>org/display/guides2/Distributing+Windows+Applications  2. Follow till step  for Generate the Certificate & run    as shown from the wiki.    h5.Actual Result:  1. After entering the password info for the certs you will see the error as windows system window(not in the CLI). Screenshot attached for reference.  *NOTE* - Clicking on OK continues with the build but fails at further stage. I am not sure if it fails due to the same reason.    h5.Expected Results:  1.We should not get any error while packaging.",Bug,High,Closed,"2015-06-26 21:04:28","2015-06-26 21:04:28",5
"The Titanium SDK ","Windows: Adding items to a ListSection after creation of ListView doesn't update UI","In testing the RSS Reader sample, I'm seeing nothing happen once we do get the RSS feed fetched. Once I loaded everything up in Debug mode in VS2013, I see the following logs when it should be showing the new items in the ListView:      Basically, our code works fine if all the items are created first, then added to sections, then the ListView is created from the pre-populated section. But if you generate a ListView with one section, and add items to it later async, nothing actually happens visually. We haven't hooked all that code up to do anything. We have methods for modifying the sections on a view, and I think that should work fine post-create, but the item manipulation at the section level just never triggers the view to add them.",Bug,High,Closed,"2015-06-26 20:35:17","2015-06-26 20:35:17",8
"The Titanium SDK ","Windows: _ undefined in Alloy apps","When trying out the RSS reader sample, it is now failing due to the _ variable being undefined during the parsing of the XML feed.    Alloy has underscore inside it, and presumably exports _ globally for use. This works fine on iOS.    My guess is that the context for some of this code is wrong and we're losing the definition of _ somewhere along the line?",Bug,High,Closed,"2015-06-26 19:43:47","2015-06-26 19:43:47",8
"The Titanium SDK ","Windows: New analytics session ID is generated every time an app is opened","h5.Description    When opening an closing and reopening an application, each time the app is reopened a new session ID is generated. As per iOS and Android a new session ID should only be generated when an app has been backgrounded and not reopened for 30 seconds or longer    h5.Steps To Reproduce    *Using the staging environment for analytics*    1. Open an app  2. Close the app using the Windows hardware button  3. Reopen the app in less than 30 seconds    h5.Actual Result    A new session ID is generated     h5.Expected Result    A new session ID should not be generated",Bug,High,Closed,"2015-06-26 17:39:21","2015-06-26 17:39:21",3
"The Titanium SDK ","Windows: Analytics: ti.background is not sent went closing an app using the back hardware button","h5.Description    When closing an application using the hardware back button the app will not send a ti.background event, if the app is backgrounded using either the Windows hardware button or by holding the back button down    h5.Steps To Reproduce    *Using the staging environment for analytics*    1. Open an app  2. Close the app with the Windows hardware button  3. Hold the back hardware button  4. Exit the app using the back hardware button    h5.Actual Result    2&3. A ti.background is sent  4. No ti.background is sent    h5.Expected Result    ti.background should be sent in all circumstances",Bug,None,Closed,"2015-06-26 17:37:29","2015-06-26 17:37:29",3
"The Titanium SDK ","Android: Add Theme.AppCompat.NoTitleBar to default themes","Every android app we build includes a few [built-in themes|https://github.com/<USER>titanium_mobile/blob/master/android/templates/build/theme.xml]:    * {{Theme.AppCompat.Fullscreen}}  * {{Theme.AppCompat.Translucent}}  * {{Theme.AppCompat.Translucent.NoTitleBar}}  * {{Theme.AppCompat.Translucent.NoTitleBar.Fullscreen}}  * {{Theme.Titanium}}, which extends either {{Theme.AppCompat}} directly or {{Theme.AppCompat.Fullscreen}} depending on the {{<fullscreen>}} setting in {{tiapp.xml}}.    Strangely enough, it does not include a theme that would cover one of the most common use cases: hiding the Action Bar. Our [guide|http://docs.<USER>com/platform/latest/#!/guide/Android_Action_Bar-section-36735509_AndroidActionBar-HidingtheActionBar] explains how to do this using a custom theme, while it could be much simpeler if only we would include one by default.    via *tiapp.xml*  {code:xml}   <android xmlns:android=http://schemas.android.com/apk/res/android>      <manifest>          <application android:theme=@style/Theme.AppCompat.NoTitleBar/>      </manifest>  </android>  {code}    or per window:    {code:javascript}  Ti.UI.createWindow({    theme: Theme.AppCompat.NoTitleBar  }).open();  {code}    Ideally, the new themes would follow the same naming convention as the Translucent ones:    {code:xml}   <style name=Theme.AppCompat.NoTitleBar>    <item name=android:windowNoTitle>true</item>    <item name=android:windowContentOverlay>@null</item>    <item name=android:windowActionBar>false</item>    <!-- AppCompat Compatibility -->    <item name=windowActionBar>false</item>   </style>      <style name=Theme.AppCompat.NoTitleBar.Fullscreen>    <item name=android:windowFullscreen>true</item>   </style>     <!-- Legacy Compatibility -->   <style name=Theme.AppCompat.Fullscreen parent=@style/Theme.AppCompat.NoTitleBar.Fullscreen />  {code}    As you can see the existing {{Theme.AppCompat.Fullscreen}} theme can inherit the new {{Theme.AppCompat.NoTitleBar}} so that it is still available under the existing name.    With these new themes in place we could also restore the {{<navbar-hidden>}} and {{<fullscreen}}> elements in {{tiapp.xml}}. This would select the {{Theme.AppCompat.NoTitleBar}} for {{<application>}} or {{Theme.AppCompat.NoTitleBar.FullScreen}} theme if {{<fullscreen>}} is also true.    The attached test app shows how these new themes would work, by adding them via a custom theme.","New Feature",Low,Closed,"2015-06-26 12:51:34","2015-06-26 12:51:34",3
"The Titanium SDK ","Windows: Database.Resultset.fieldByName should be case insensitive","{{Titanium.Database.ResultSet.fieldByName}} should be case insensitive.    ",Bug,Medium,Closed,"2015-06-26 08:57:30","2015-06-26 08:57:30",5
"The Titanium SDK ","Windows: TableView.setData throws Catastrophic Failure exception","{{TableView.setData}} crashes when it is updated through {{click}} event. It does not cause issue when it is set at constructor parameter.    ",Bug,Critical,Closed,"2015-06-26 05:46:43","2015-06-26 05:46:43",13
"The Titanium SDK ","Windows: Logging does not seem to work when using device","h5.Description    When building to Windows Phone device I am unable to get logging to work. I have tried across multiple machines and devices when using the same wifi etc.    Logging works fine when running in an emulator.         h5.Steps To Reproduce    1. Add the above code to an app.js and build to device  2. Build to emulator    h5.Actual Result    1. No logging  2. Logging    h5.Expected Result    There should be logging in both circumstances",Bug,High,Closed,"2015-06-26 01:06:21","2015-06-26 01:06:21",8
"The Titanium SDK ","CLI: ti info -o json should show Windows Phone 8.0 SDK as unsupported","h5.Description    When running the command ti info on Windows, Windows 8.0 and Windows Phone 8.0 SDKs are shown as supported, as these SDKs are not supported and Windows Hybrid is being deprecated then they should not show as supported.    {code:title=Windows Phone}  windowsphone: {          8.0: {                  version: 8.0,                  registryKey: HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Microsoft SDKs\\WindowsPhone\\v8.0,                  supported: true,                  path: C:\\Program Files (x86)\\Microsoft SDKs\\Windows Phone\\v8.0\\,                  deployCmd: null,                  xapSignTool: null,                  selected: false      h5.Steps To Reproduce    1. Run {{ti info -o json}} or {{appc ti info -o json}} with 8.0 SDKs installed on your machine    h5.Actual Result    Windows 8.0 and Windows Phone 8.0 SDKs are shown as supported     h5.Expected Result    Windows 8.0 and Windows Phone 8.0 SDKs should not be shown as supported ",Bug,Low,Closed,"2015-06-25 23:25:53","2015-06-25 23:25:53",5
"The Titanium SDK ","iOS9: Xcode 7 (beta 2)/iOS 9 are unsupported","I am unable to build for iOS via Studio when using iOS 9 and Xcode 7. Combine this with MacOS 10.11 not allowing the use of any Xcode less than Xcode 7 and the user is left not able to build for iOS, after updating.    *Steps to reproduce issue*  1. Install Xcode 7  2. Create a new Titanium project  3. Attempt to run that project on a iOS 9.0 Sim or device from Studio    *Actual Results*  You are unable to run the project    *Expected Results*  The project can be run on iOS 9.    *Notes*  The iOS 9 simulators are not detected by {{appc ti info -t ios}}  If using {{appc run -p ios -T device}}, you are able to run the project. Simulator will fail via CLI.",Bug,Critical,Closed,"2015-06-24 16:28:10","2015-06-24 16:28:10",34
"The Titanium SDK ","iOS9: Support picture in picture","_emphasized text_https://developer.apple.com/library/prerelease/ios/documentation/WindowsViews/Conceptual/AdoptingMultitaskingOniPad/QuickStartForPictureInPicture.html#//apple_ref/doc/uid/TP40015145-CH14-SW1  https://developer.apple.com/library/prerelease/ios/documentation/AVFoundation/Reference/AVPlayerViewController_Class/index.html#//apple_ref/occ/cl/AVPlayerViewController","New Feature",High,Closed,"2015-06-25 03:21:38","2015-06-25 03:21:38",8
"The Titanium SDK ","IOS9: App thinning: Support on-demand resources for app thinning","*Overview:*  The On-Demand-Resources provide a way to load resources only when requested. The resources are grouped into tags, which is done through Xcode (also need to figure out, how to do this on proxy side). The Idea is, to supply an easy way to access and download resources and release them after there are not needed anymore as part of the app thinning <USER> The current progress can also be tracked, as well as warnings regarding low memory.     *Demo code:*      *Apple docs:* https://developer.apple.com/library/prerelease/ios/documentation/FileManagement/Conceptual/On_Demand_Resources_Guide/    *Note:*  On demand resources are only available for iOS9. that means for developers who wants this, they have to set the minimum iOS version as 9.0 otherwise it won't compile. Just do this in tiapp.xml.  ","New Feature",High,Open,"2015-06-25 03:15:44","2015-06-25 03:15:44",13
"The Titanium SDK ","Windows: Move forward and reverse geocoder implementations into TitaniumKit","We should be able to write the implementation of forward and reverseGeocoder in Javascript at the TitaniumKit level.    There's no reason why they couldn't be written in JS using our own APIs, like an HTTPClient.",Story,High,Closed,"2015-06-23 20:59:05","2015-06-23 20:59:05",8
"The Titanium SDK ","Windows: Implement Ti.Network.HttpClient.responseXML","We don't currently implement Ti.network.HTTPClient.responseXML - resulting in the RSS Sample app not working.",Improvement,High,Closed,"2015-06-23 17:40:43","2015-06-23 17:40:43",3
"The Titanium SDK ","Windows: AlertDialog.show() fails when buttonNames.length >= 3","{{Ti.UI.AlertDialog.show}} fails when {{buttonNames}} have over three buttons on Windows Phone. It looks like it's a limitation of {{Windows::UI::Popups::MessageDialog}} on Windows Phone, so we might want to throw exception when over 3 names are assigned.    ",Bug,Medium,Closed,"2015-06-23 12:27:20","2015-06-23 12:27:20",5
"The Titanium SDK ","Windows: default background color of sample apps","On Windows Phone, background color of components tend to be transparent, and the text color tend to be set white.This causes confusion when Window color is white, because some components like {{Label}} and {{Button}} looks disappear. The issue is that some sample apps from <USER>tend to have white background color by default, which might be looking good with iOS. But on Windows Phone we need to make it black or something other than white.    So make sure sample app does not have white background:      ",Improvement,Medium,Open,"2015-06-23 08:53:07","2015-06-23 08:53:07",8
"The Titanium SDK ","Windows: CommandBar does not work with TabGroup","Unable to attach {{Ti.UI.Windows.CommandBar}} onto {{Window}} on {{TabGroup}}.    ",Bug,Medium,Closed,"2015-06-23 08:18:13","2015-06-23 08:18:13",8
"The Titanium SDK ","Windows: TabGroup should be a subclass of Ti.UI.View","Currently {{Ti.UI.TabGroup}} is constructed from pure JavaScript object which does not have Titanium module functions like {{addEventListener}}. According to the document {{Ti.UI.TabGroup}} should be a subclass of {{TI.UI.View}}.  ",Bug,Medium,Closed,"2015-06-23 04:08:13","2015-06-23 04:08:13",5
"The Titanium SDK ","Windows: Test Corporate / Employee Directory sample","Import the Employee Directory sample (alloy) by using the latest <USER>Studio 4.1.0 release, through the dashboard. Then verify that you are able to build it for Win Phone and Store (after adding windows to list of deploy targets in tiapp.xml).    If you run into any issues, please file additional tickets. If the sample needs to be updated in any way (like enabling capabilities), file a PR for the sample.",Story,Medium,Closed,"2015-06-22 22:45:13","2015-06-22 22:45:13",5
"The Titanium SDK ","Windows: Test Field Service sample","Import the Field Service sample (alloy) by using the latest <USER>Studio 4.1.0 release, through the dashboard. Then verify that you are able to build it for Win Phone and Store (after adding windows to list of deploy targets in tiapp.xml).    If you run into any issues, please file additional tickets. If the sample needs to be updated in any way (like enabling capabilities), file a PR for the sample.",Story,Medium,Closed,"2015-06-22 22:44:36","2015-06-22 22:44:36",5
"The Titanium SDK ","Windows: Test Todo list sample","Import the Todo List sample (alloy) by using the latest <USER>Studio 4.1.0 release, through the dashboard. Then verify that you are able to build it for Win Phone and Store (after adding windows to list of deploy targets in tiapp.xml).    If you run into any issues, please file additional tickets. If the sample needs to be updated in any way (like enabling capabilities), file a PR for the sample.",Story,Medium,Closed,"2015-06-22 22:44:08","2015-06-22 22:44:08",5
"The Titanium SDK ","Windows: Test Rss Reader sample","Import the Rss Reader sample (alloy) by using the latest <USER>Studio 4.1.0 release, through the dashboard. Then verify that you are able to build it for Win Phone and Store (after adding windows to list of deploy targets in tiapp.xml).    If you run into any issues, please file additional tickets. If the sample needs to be updated in any way (like enabling capabilities), file a PR for the sample.",Story,Medium,Closed,"2015-06-22 22:43:45","2015-06-22 22:43:45",5
"The Titanium SDK ","Windows: Test Geocoder sample","Import the Geocoder sample (alloy) by using the latest <USER>Studio 4.1.0 release, through the dashboard. Then verify that you are able to build it for Win Phone and Store (after adding windows to list of deploy targets in tiapp.xml).    If you run into any issues, please file additional tickets. If the sample needs to be updated in any way (like enabling capabilities), file a PR for the sample.",Story,Medium,Closed,"2015-06-22 22:43:29","2015-06-22 22:43:29",5
"The Titanium SDK ","Windows: Ti.Filesystem.File.write() 'append' parameter should be optional","Ti.Filesystem.File.write(data, append);    The _append_ parameter should be optional.    http://docs.<USER>com/platform/latest/#!/api/Titanium.Filesystem.File-method-write",Bug,None,Closed,"2015-06-22 22:07:31","2015-06-22 22:07:31",3
"The Titanium SDK ","Windows: ti create for modules with long paths fails with cryptic errors","We saw the same sort of issue with the normal app builds. We test for a given path length and it it's too long and moving the build to tmp dir would shorten the path, then we do so and copy the build results back when done. This needs to be done for module builds as well.",Bug,High,Closed,"2015-06-22 14:05:01","2015-06-22 14:05:01",5
"The Titanium SDK ","iOS9: application openURL:sourceApplication:annotation deprecated","This delegate is deprecated in iOS9 and is found TiApp.m. Need to research impact and changes required.",Bug,Critical,Closed,"2015-06-22 02:51:31","2015-06-22 02:51:31",8
"The Titanium SDK ","Windows: Word wrap on labels does not work if width and height are not set","h5.Description    When using a label, the word wrap will not work unless the height and width are set        *Marking this as minor as it is a simple _workaround_*    h5.Steps To Reproduce    1. Add the above code to an existing app.js file  2. Run on a device or emulator  3. Add the following to the label creation {{width: Ti.UI.FILL, height: Ti.UI.FILL}}  4. Run on device or emulator    h5.Actual Result    2. The text is not word wrapped  4. The text is word wrapped    h5.Expected Result    The text should be word wrapped both times",Bug,None,Closed,"2015-06-19 18:11:29","2015-06-19 18:11:29",5
"The Titanium SDK ","Windows: Add -t windows to ti info command","h5.Description    When running {{ti info}} you can specify what you want info for by using the -t flag, for example {{ti info -t android}}, {{ti info -t jdk}} etc.    A Windows flag should be added similar to the other flags, at the moment there is Windows specific information that is in the regular {{ti info}} output, see below        h5.Steps To Reproduce    1. Run {{ti info -t windows}}    h5.Actual Result    The output is not specific to Windows    h5.Expected Result    The output should be specific to Windows",Improvement,None,Closed,"2015-06-18 23:49:54","2015-06-18 23:49:54",8
"The Titanium SDK ","Windows: Accessing a sliders value always returns 0","h5.Description    When accessing a sliders value the value returned is always 0        h5.Steps To Reproduce    1. Add the above code to an existing app.js  2. Build the device or emulator  3. Move the slider  4. Tap the label     h5.Actual Result    The value returned is 0    h5.Expected Result    The value returned should match the label displaying the value  ",Bug,None,Closed,"2015-06-18 22:31:21","2015-06-18 22:31:21",5
"The Titanium SDK ","Windows: Ti.API.info() causes crash","When a string passed to Ti.API.info() exceeds 248 characters it causes the application to crash.        Caused by this line : https://github.com/<USER>titanium_mobile_windows/blob/master/Source/Ti/src/API.cpp#L121",Bug,High,Closed,"2015-06-18 22:12:39","2015-06-18 22:12:39",5
"The Titanium SDK ","Windows: HTTPClient GET on an incorrect URL throws onload instead of onerror","h5.Description    When doing a HTTP GET on an incorrect URL the HTTPClient will throw onLoad rather than onError.         h5.Steps To Reproduce    1. Add the above code to an app.js  2. Build to a device or emulator  3. Tap the label    h5.Actual Result    An alert will be shown with onload    h5.Expected Result    An alert should be shown with onerror",Bug,None,Closed,"2015-06-18 20:38:19","2015-06-18 20:38:19",5
"The Titanium SDK ","Windows: Package i18n resources","Package localization files like {{/i18n/LANG/strings.xml}} described at [Titanium.Locale|http://docs.<USER>com/platform/latest/#!/api/Titanium.Locale] with {{ti build}}.  ",Story,Medium,Closed,"2015-06-18 13:00:38","2015-06-18 13:00:38",5
"The Titanium SDK ","iOS9: Replace MPMoviePlayerController in Ti.Media.VideoPlayer with AVPlayerViewController","MPMoviePlayerController is getting deprecated in iOS9. We are using this in TiMediaVideoPlayer, so we have to work on an alternative. Likely AVPlayerViewController.    Deprecation details: https://developer.apple.com/library/prerelease/ios/releasenotes/General/iOS90APIDiffs/frameworks/MediaPlayer.html    AVPlayer Reference: https://developer.apple.com/library/prerelease/ios/documentation/AVFoundation/Reference/AVPlayer_Class/index.html#//apple_ref/doc/uid/TP40009530    AVPlayerViewController Reference: https://developer.apple.com/library/prerelease/ios/documentation/AVFoundation/Reference/AVPlayerViewController_Class/index.html#//apple_ref/doc/uid/TP40014273  ",Bug,Critical,Closed,"2015-06-18 07:51:03","2015-06-18 07:51:03",21
"The Titanium SDK ","Windows: Titanium.version does not return correct values","h5.Description    When getting the version, buildHash and buildDate properties they are logged as the following            h5.Steps To Reproduce    1. Using the above code build to a windows emulator    h5.Actual Result    The logging contains the value         h5.Expected Result    The values should be values like     ",Bug,Medium,Closed,"2015-06-17 22:26:32","2015-06-17 22:26:32",5
"The Titanium SDK ","Windows: Crashes when opening windows from a tableview with the QE testing app","h5.Description    When using the QE testing apps, if I open one test case then the next test case I open will crash the application. I have attached an example app as APIModule.zip    h5.Steps To Reproduce    1. Download the attached project and build it for device or emulator  2. Open test case TIMOB7187  3. Close the window  4. Open test case TIMOB9214  5. Reverse steps 2-4    h5.Actual Result    When attempting open the second test case window the app will crash    h5.Expected Result    The app should not crash",Bug,None,Closed,"2015-06-17 22:01:13","2015-06-17 22:01:13",8
"The Titanium SDK ","Windows: Reopening a window from a tableview does not work until another window is opened","h5.Description    When using a tableview, if on click a tableview opens a window the windows will not open again until another row is clicked, for example considering the following code, if I tap on the row 'Apples' a window will open, when I close that window it will not open again until I tap another row        h5.Steps To Reproduce    1. Replace the attached app.js with the above code  2. Build to a device or emulator  3. Tap on Apples  4. Tap on the 'HELLO' label to close the window  5. Tap on Apples again  6. Tap on Potatoes  7. Tap on the 'HELLO' label to close the window  8. Tap on Apples    h5.Actual Result    3. A window will open  5. The window will not open  6. A window will open  8. A window will open    h5.Expected Result    A window should open every time I tap the tableview",Bug,None,Closed,"2015-06-17 21:38:59","2015-06-17 21:38:59",8
"The Titanium SDK ","Android: Ti.UI.SIZE on ScrollableView not working","When I set the height {{Ti.UI.SIZE}} to the ScrollableView on Android, it will look like {{Ti.UI.FILL}}, but when I set a number for height, like {{'100dp'}}, it will work.  This problem was not happened on iOS.",Bug,High,Closed,"2015-06-17 09:43:38","2015-06-17 09:43:38",5
"The Titanium SDK ","Windows: Building to Emulator Should Allow Error Dialogs","h1. Problem  When running the emulator, if errors are encountered, they should show the standard red screen of death to the user. Even if the underlying build type is `release`, we need to find a way to surface these errors to the developer in the traditional Titanium way.    h2. Solution  Introduce (or tweak, if it's already there) a deploy type with values such as development or production like we do for other platforms. Then, use this value to decide whether or not we should show the error dialog, instead of the build type.    h2. Example    ",Improvement,High,Closed,"2015-06-16 14:57:49","2015-06-16 14:57:49",5
"The Titanium SDK ","Windows: Global.String and i18n functions","Titanium has some global built-in functions such as {{L()}} and {{String.format}}. The {{L()}} macro is a short form for {{Ti.Locale.getString()}}. {{String.format}} formats strings according to the IEEE printf specification. Both of those functions often appears in Titanium demo apps such as KitchenSink.  ",Story,High,Closed,"2015-06-16 08:19:14","2015-06-16 08:19:14",8
"The Titanium SDK ","Windows: Port KitchenSink application","Port [KitchenSink|https://github.com/<USER>KitchenSink] application so that developers can check how many API are implemented and how it works. It would be good for QA too.",Story,Medium,Closed,"2015-06-16 07:35:08","2015-06-16 07:35:08",13
"The Titanium SDK ","Windows: Update Ti.buildHash and Ti.buildDate properties on CI build","Titanium build properties such as {{Ti.version}}, {{Ti.buildDate}} and {{Ti.buildHash}} are not updated on each build. It returns placeholder string for now. (See [TiModule.cpp#L32|https://github.com/<USER>titanium_mobile_windows/blob/master/Source/Ti/src/TiModule.cpp#L32]), should be integrated with CI build.  ",Story,Medium,Closed,"2015-06-16 07:27:42","2015-06-16 07:27:42",5
"The Titanium SDK ","Android: HttpClient setOnload() and setOnerror() methods do not work","h5.Reproduce Step:  1.Simple run the following code in a classic mobile project.  {code:title=app.js}  var url = http://www.<USER>com;  var client = Ti.Network.createHTTPClient({       timeout : 5000  // in milliseconds   });      client.setOnload(function(e) {    Ti.API.info(Received text:  + this.responseText);          alert('success');   });      client.setOnerror(function(e) {    Ti.API.debug(e.error);          alert('error');   });      // Prepare the connection.   client.open(GET, url);   // Send the request.   client.send();  ",Bug,None,Closed,"2015-06-16 02:24:06","2015-06-16 02:24:06",5
"The Titanium SDK ","Windows: If parsing JS files fails the error message does not contain a reason","h5.Description    When the CLI is parsing the JS files of an app, if there is a parsing error then it is surfaced as the following         When building for Android it will be surfaced as the following        h5.Steps To Reproduce    1. In an existing titanium project edit the app.js so that it will fail the parsing, remove a parentheses for example  2. Build the app for Windows    h5.Actual Result    The parser fails with the first error    h5.Expected Result    The parser should fail with an error indicating the reason why",Bug,None,Closed,"2015-06-15 22:45:28","2015-06-15 22:45:28",5
"The Titanium SDK ","Windows: Geolocation module should instantiate Geolocator on-demand when in UI thread","Our current Windows Geolocation module generates a wrapped Geolocator in it's constructor. We should be generating it lazily on-demand, and hopefully in the UI thread according to the guidelines: https://msdn.microsoft.com/en-us/library/windows/apps/hh465148.aspx      bq. On Windows only, the first use of the Geolocator object must be made on the main UI thread, to show a consent prompt to the user. The first use of the Geolocator can be either the first call to getGeopositionAsync or the first registration of a handler for the positionChanged event. The consent prompt is described further in Guidelines for using sensitive devices. This means that in an app using JavaScript, the first use of the Geolocator object should not occur in an activation handler.  ",Bug,High,Closed,"2015-06-15 19:12:28","2015-06-15 19:12:28",5
"The Titanium SDK ","Provide the ability to color the ActivityIndicator spinner","Provide the ability to color the activity indicator.  This feature has been available since iOS 5.    An example of this would be:      ",Improvement,Low,Closed,"2015-06-15 18:24:50","2015-06-15 18:24:50",3
"The Titanium SDK ","Windows: Build fails if the ti.windows.publishername is not present","h5.Description    When building a Windows platform project if the property {{<property name=ti.windows.publishername type=string>CN=<USER>/property>}} is not defined then the build will error out with the below        h5.Steps To Reproduce    1. Create a new project  2. Build the project    h5.Actual Result    The build will error out with the above error    h5.Expected Result    The build should not error out",Bug,None,Closed,"2015-06-15 18:24:39","2015-06-15 18:24:39",5
"The Titanium SDK ","Windows: Geolocation never returning data for getCurentPosition","This looks to be a mismatch in our implementation with the way the property is defined.    We ask the current position status, but that value isn't good unless there's an active tracking session.    The property is meant to convey if the app itself is set up to do location services, so it's more a check if they've set the DeviceCapability in their package/appx.manifest.    I'm not sure if we can query capabilities at runtime or not. We might be able to do a simple call to the geolocator and catch exceptions to know if this property should be true or false.    ",Bug,Critical,Closed,"2015-06-15 15:43:10","2015-06-15 15:43:10",5
"The Titanium SDK ","Windows: Geolocation module always reporting location services disabled","This looks to be a mismatch in our implementation with the way the property is defined.    We ask the current position status, but that value isn't good unless there's an active tracking session.    The property is meant to convey if the app itself is set up to do location services, so it's more a check if they've set the DeviceCapability in their package/appx.manifest.    I'm not sure if we can query capabilities at runtime or not. We might be able to do a simple call to the geolocator and catch exceptions to know if this property should be true or false.    ",Bug,Critical,Closed,"2015-06-15 15:10:59","2015-06-15 15:10:59",5
"The Titanium SDK ","iOS 9: Support SFSafariViewController","iOS9 comes with a new SFSafariViewController to display a modal version of Safari with a return button to close it. We should probably use this in {{openURL}}, maybe as an option so developers can still choose to open in Safari like it does now.    {quote}You can use SFSafariViewController to display web content within your app. The Safari View Controller shares cookies and other website data with Safari, and has many of Safari's features, like Safari AutoFill and Safari Reader. Unlike Safari itself, the Safari View Controller UI is tailored for displaying a single page, featuring a Done button that'll take users right back where they were in your app.    Consider replacing your WKWebView or UIWebView-based browsers with SFSafariViewController if your app displays web content but does not customize that content.{quote}    https://developer.apple.com/library/safari/releasenotes/General/WhatsNewInSafari/Articles/Safari_9.html","New Feature",Low,Closed,"2015-06-15 08:35:17","2015-06-15 08:35:17",13
"The Titanium SDK ","Windows: assertion should not crash the app but show errrors","{{TITANIUM_ASSERT}} should not crash the app because it causes bad user experience. It should show runtime error message (i.e. Red Screen of Death) only on debug mode other then immediate crash.  ",Improvement,Medium,Closed,"2015-06-15 08:04:50","2015-06-15 08:04:50",8
"The Titanium SDK ","iOS9: Provide access to all NSUserActivityTypes defined in the bundle","As part of hand off, Search, and deep linking the developer will need access to all of the NSUserActivityTypes defined in their bundle ( via tiapp.xml ).    To define one or more NSUserActivityTypes all you need to do is to an NSUserActivityTypes node under <ios> <plist> <dict> such as:      ",Sub-task,Medium,Closed,"2015-06-15 01:29:46","2015-06-15 01:29:46",3
"The Titanium SDK ","iOS: ViewProxy modules error on building with error: expected ')'","Trying to build a module based on a simple ViewProxy as in the guide is now failing to build since the CI build SDK 4.1.x version.   4.0.x is fine.     To reproduce.   1. Make sure you have SDK 4.1.x selected   2. Follow the instructions to build the example 'Square' module in the documentation here : http://docs.<USER>com/platform/latest/#!/guide/iOS_Module_Quick_Start  3. Open in XCode. Clean and Build.  (or run build.py)     This is the error I'm getting:                      ",Bug,Critical,Closed,"2015-06-14 21:05:43","2015-06-14 21:05:43",3
"The Titanium SDK ","iOS: Implement Hand Off for iOS8","Implement hand off for iOS8.  The search and watchOS features are built on top of the iOS8 implementation of hand off",Sub-task,None,Closed,"2015-06-14 06:31:10","2015-06-14 06:31:10",8
"The Titanium SDK ","iOS9: Create framework isIOS9OrGreater check","Create isIOS9OrGreater check TiUtils.m function using UIStackView to determine if you are running iOS9",Improvement,Critical,Closed,"2015-06-14 03:10:58","2015-06-14 03:10:58",3
"The Titanium SDK ","Windows: App crashes when triggering eventListener on a table view","h5.Description    When adding an event listener to a table view, when the event is triggered the app crashes        h5.Steps To Reproduce    1. Add the above code to an existing app.js  2. Build to a windows phone device or emulator    h5.Actual Result    The app crashes    h5.Expected Result    The app should not crash and an alert should be shown with the text in the row tapped displayed",Bug,None,Closed,"2015-06-12 20:51:27","2015-06-12 20:51:27",8
"The Titanium SDK ","Windows: In Landscape, Two Tabs Windows can Show at Once","h2. The Problem  If you have a two tab app, move in to landscape, and click the second tab, both windows are visible at once.    h2. Reproduction      See screenshot for visualization.",Bug,High,Closed,"2015-06-12 18:43:25","2015-06-12 18:43:25",5
"The Titanium SDK ","Android: MapView is blank if the container view has rounded borders","I recently tried to put a mapview inside another view with rounded borders (ie. with `borderRadius` set), and the result was that the mapview ended up being _blank_ (ie. no map tiles, just the Google logo and the zoom controls).  Everything works fine when I remove the `borderRadius` property from the container view.    Attached a minimal application that shows the problem.  Let me know if you need anything else.    Ciao,  Matteo      {code:title=index.js}  var map_view = Ti.UI.createView({      height: Ti.UI.FILL,      width: Ti.UI.FILL,  });  var map = require('ti.map').createView({      height: Ti.UI.FILL,      width: Ti.UI.FILL,  });  var button = Ti.UI.createButton({      height: Ti.UI.SIZE,      title: 'Set borderRadius'  });  button.addEventListener('click', function() {      map_view.borderRadius = '30dp';  });  var container = Ti.UI.createView();  var win = Ti.UI.createWindow();    map_view.add(map);  container.add(map_view);  container.add(button);  win.add(container);  win.open();  {code}",Bug,Critical,Reopened,"2015-06-11 08:43:52","2015-06-11 08:43:52",8
"The Titanium SDK ","Windows: Support Async methods on Native API wrappers","We currently skip any method that is Async on the native APIs right now. To properly support them will require generating a Promise-like wrapper. See https://msdn.microsoft.com/en-us/library/windows/apps/br211867.aspx    Effectively we need to return an object that encapsulates the async operation and allows users to chain a series of async operations to run in series using callback methods.    The important methods here are: then, done and cancel. Under the hood, we'll likely have to use ppltasks library to wrap up the async operations. See https://msdn.microsoft.com/en-us/library/windows/apps/hh780559.aspx","New Feature",High,Closed,"2015-06-12 14:55:57","2015-06-12 14:55:57",21
"The Titanium SDK ","Windows: Populate default ti.windows.publishername property value","It looks like we now require a new property to populate the user's appx.manifest and to use for certs on store apps.    Since it is required now, we should try and at least generate a sensible default value for the user in their tiapp.xml during project creation - or warn the user and use a generated one when we build?    It's a bad experience to just fail first build, spit out some error about needing to set the value and then hope the user follows it.    We could do a create.post.app hook in the CLI to edit the tiapp.xml and push a value in there. We could fall back to generating one if there is no value and give a warning to the user but continue?    ",Improvement,Critical,Closed,"2015-06-12 14:22:10","2015-06-12 14:22:10",8
"The Titanium SDK ","iOS9: Background GeoLocation Support allowsBackgroundLocationUpdates","Starting with iOS 9, the allowsBackgroundLocationUpdates property must be set to YES on each CLLocationManager which is used for running in the background.  Apple has defaulted this to NO, meaning the existing behavior will break when linked against iOS9.    Reference: http://stackoverflow.com/questions/30808192/allowsbackgroundlocationupdates-in-cllocationmanager-in-ios9",Improvement,Critical,Closed,"2015-06-12 13:06:43","2015-06-12 13:06:43",5
"The Titanium SDK ","iOS9: Implement NSUserActivity Core Spotlight","Implement NSUserActivity to enable Core Spotlight access.    The following snippet from Apple shows this could be a straightforward Ti API.      ",Improvement,High,Closed,"2015-06-11 21:51:08","2015-06-11 21:51:08",21
"The Titanium SDK ","iOS9: Implement application:continueUserActivity:restorationHandler:","Implement the application delegate application:continueUserActivity:restorationHandler:    This allows for hand-off and new iOS 9 search functionality  ",Improvement,High,Closed,"2015-06-11 21:47:25","2015-06-11 21:47:25",5
"The Titanium SDK ","iOS9: Support Watch Connectivity","Support Watch Connectivity, so that a watchOS2 app can communication with a Titanium application.    Below is the pre-release documentation on this framework:  https://developer.apple.com/library/prerelease/ios/releasenotes/General/WhatsNewIniOS/Articles/iOS9.html#//apple_ref/doc/uid/TP40016198-DontLinkElementID_1    https://developer.apple.com/library/prerelease/ios/documentation/WatchConnectivity/Reference/WCSession_class/index.html#//apple_ref/doc/uid/TP40015237    Sample code:  https://developer.apple.com/library/prerelease/ios/samplecode/Lister/Introduction/Intro.html#//apple_ref/doc/uid/TP40014701","New Feature",High,Closed,"2015-06-11 21:43:38","2015-06-11 21:43:38",21
"The Titanium SDK ","iOS9: Deprecate openParentApplication:reply: ","Remove openParentApplication:reply: support as iOS 9 replaces this functionality with WatchConnectivity.  Additionally this pattern has been removed with the introduction of watchOS2.",Improvement,High,Closed,"2015-06-11 21:40:37","2015-06-11 21:40:37",5
"The Titanium SDK ","iOS9: Update Contacts to reflect new API","Starting in iOS 9 Apple has deprecated the Address Book framework, and replaced this functionality with:    [Contacts Framework](https://developer.apple.com/library/prerelease/ios/documentation/Contacts/Reference/Contacts_Framework/index.html#//apple_ref/doc/uid/TP40015328)  [ContactUI Framework](https://developer.apple.com/library/prerelease/ios/documentation/ContactsUI/Reference/ContactsUI_Framework/index.html#//apple_ref/doc/uid/TP40016207)    The Titanium Proxies will need to be updated to reflect this Apple SDK change.",Improvement,High,Closed,"2015-06-11 21:37:09","2015-06-11 21:37:09",21
"The Titanium SDK ","Remove Titanium build call from Xcode pre-compile phase","A long time ago, Titanium's iOS build was written in Python. The iOS build performed 3 major steps:    # Create all Xcode related files in build dir  # Run xcodebuild to compile project, which in turn fires the Xcode project's pre-compile phase script that calls the iOS build again to copy the Titanium-specific resources  # Xcode builds the final app and signs it    It was done this way so that you could open the generated Xcode project, modify JS files, and build from Xcode.    When we replaced they Python-based iOS build scripts with the Node.js version, there was a performance issue with Xcode calling the Titanium CLI to copy the Titanium resources. I changed things so that if you are building from the Titanium CLI, it would copy the Xcode project related files, then the Titanium related files, then finally call xcodebuild. This significantly sped things up.    The problem today is that when you run {{appc run}}, it generates a Xcode project who's pre-compile script references the Titanium CLI. Users do not have the Titanium CLI installed by default and thus it will fail. Even if they did, the encryption method would vary. Also the Xcode project's pre-compile should be calling the {{appc run}}, not {{ti build}}.    I'm proposing we remove the Xcode project's pre-compile script.    Pros:  * Remove cruft from the iOS build  ** There's a lot of code that accommodates the ability for Titanium resources to be processed when building from Xcode that we could rip out  ** As maintainers of the iOS build changes, not all of the knowledge is transferred and thus new contributors neglect the Xcode-specific build path  * Speeds up builds when building from Xcode  * Building from Xcode only really works when you have Titanium CLI installed  * Building via {{appc run}} encrypts differently than {{ti build}} and thus building from Xcode would render the new encrypted files unused and bloat the app  * Modifying Titanium JS files and building directly from Xcode is not officially supported    Cons:  * Deprecates a feature that has existed for years",Improvement,High,Closed,"2015-06-11 19:52:53","2015-06-11 19:52:53",8
"The Titanium SDK ","Windows: 'cm', 'in' and 'dp' values are not calculated correctly for layouts","*Description*  'cm', 'in' and 'dp' values are not calculated correctly. This is because the PPI is not set.    *Example*  ",Bug,High,Closed,"2015-06-11 18:54:29","2015-06-11 18:54:29",5
"The Titanium SDK ","iOS9: App thinning: Create XCAssets (imagesets) w/ the cli and access resources within those catalogs at runtime","The first stage of app thinning support is to correctly sort out graphic assets by their associated targets and scale factor (1x,2x,3x | iphone, ipad).  This is already supported at the file level to some extent with the proxies loading files with the appropriate file names flags on a particular device.    This is a two part improvement and as more information is gained from apple, split into appropriate tickets.    Apple will be documenting the XCAsset Source Artifact Format (basically a folder with JSON markup - Content.json) that will allow the cli to gather in project resources and create the needed imageset.    The proxies will need to be able to access the assets located within the asset catalogs at runtime.    *Reference*: https://developer.apple.com/library/prerelease/ios/documentation/IDEs/Conceptual/AppDistributionGuide/AppThinning/AppThinning.html    *Note*: Filenames with suffix 2x, 3x etc will still work in runtime. However, Apple will not slice the app into variants according to this naming convention. These files *must be inside asset catalogs* in order for app thinning to work.    h4. Attached screenshot of how to get to use App Thinning.   These are the steps to reproduce on Xcode 7 Beta2:  1. Archive your app in Xcode 7 Beta2. This archive will still be full sized.  2. Select archive and choose to export.  3. Choose last option to export ipa file for development use.  4. This screen will appear and you can choose specific device.  5. After export, show package contents of ipa and you can see a Assets.car file that contains the images. As compared to not using App thinning, you won't see the car file but instead your image files.     h4. Some More Reference:  _AssetCatalog Folder looks like this_  {quote}  Media.xcassets  -- fullscreen.imageset  ---- fullscreen.png  ---- <EMAIL>  ---- fullscreen@2x~ipad.png  ---- etc.  ---- Contents.json  -- titleImage.imageset  ---- titleImage.png  ---- <EMAIL>  ---- <EMAIL>  ---- etc  ---- Contents.json  -- Contents.json  {quote}    _Contents.json file looks like this_  ","New Feature",High,Closed,"2015-06-11 15:13:29","2015-06-11 15:13:29",34
"The Titanium SDK ","Windows: auto layout support","There's no implementation to support {{auto}} layout in {{LayoutEngine}}. {{auto}} layout behavior should be either {{FILL}} or {{SIZE}} depending on components described in [Transitioning to the New UI Layout System|http://docs.<USER>com/platform/latest/#!/guide/Transitioning_to_the_New_UI_Layout_System]  (For example, {{Label}} should treat {{auto}} as same as specifying {{SIZE}}). {{ViewLayoutDelegate}} should inform how components should layout against {{auto}}.",Story,High,Closed,"2015-06-11 09:38:17","2015-06-11 09:38:17",13
"The Titanium SDK ","Windows: Doc coverage missing the Windows-specific APIs","The docs we use to populate the parity report (or maybe just the parity report itself?) aren't including the Windows specific types we've introduced. Specifically, we have a set of Titanium.UI.Windows.* types implemented, but not listed in the parity report.    I also don't see them listed in the bleeding edge docs at http://<USER>github.io/appc-docs/latest/    The types are here: https://github.com/<USER>titanium_mobile_windows/tree/master/Source/UI/include/TitaniumWindows/UI/Windows",Improvement,High,Closed,"2015-06-10 23:57:58","2015-06-10 23:57:58",8
"The Titanium SDK ","Windows: Provide ability to set capabilities on appx.manifest in tiapp.xml","The appx.manifest is where you set the capabilties and many other aspects of windows apps. Right now we use a templated version and write out one for the app during build. Some of that is populated with values from tiapp.xml.    We need the ability for users to set the capabilities their app uses in their tiapp.xml and that gets copied into the appx.manifest.    See the capabilities here: https://msdn.microsoft.com/en-us/library/windows/apps/hh464936.aspx    Right now we're just hardcoding to a single internetClient capability.",Improvement,Critical,Closed,"2015-06-10 22:56:26","2015-06-10 22:56:26",8
"The Titanium SDK ","Windows: Add Map module to ti.map","Move the Titanium Windows map module to _ti.map_    https://github.com/<USER>modules/ti.map",Improvement,High,Open,"2015-06-10 00:19:20","2015-06-10 00:19:20",13
"The Titanium SDK ","Windows: Dismissing alert dialog crashes app","I'm not sure why as I haven't run under a debugger with it yet, but in testing I noticed that opening and then dismissing an alert dialog manually will cause the app to crash. Must be something wrong with the callback when it completes. I think this is new since the change to AlertDialog made when doing OptionDialog PR.",Bug,Critical,Closed,"2015-06-09 19:39:49","2015-06-09 19:39:49",5
"The Titanium SDK ","Windows: Setting auto for width on labels doesn't work for strings of a certain length","h5.Description    When setting the width of a label to *auto*, it appears that the width is not being set properly when the string for the label text contains both letters and numbers, see the attached screenshots for references.    *Ti.UI.FILL and Ti.UI.SIZE work with no problems*    Although auto has been replaced by Ti.UI.FILL and Ti.UI.SIZE the default app still uses it.    h5.Steps To Reproduce    1. Add the attached app.js to an existing project and build using {{appc run -p windows -T wp-emulator}}  2. Switch between tab 1 and tab two  3. Tap the label on tab 1    h5.Actual Result    2. The text for the label on tab 1 is not shown correctly, I am Window is displayed rather than I am Window 1  3. The alert displays the actual text for the label    h5.Expected Result    The label on tab 1 should display the whole string *I am Window 1*",Bug,None,Closed,"2015-06-09 19:25:08","2015-06-09 19:25:08",8
"The Titanium SDK ","Windows: Unable to build a project if the project name contains a space","h5.Description    When building a project if the project name contains a space then the build fails with the below        When building a project with a similar name to iOS and Android the build works with no problems    h5.Steps To Reproduce    1. Create a project using {{ti create}} with a space in the name  2. Build the project for Windows using {{ti build -p windows -T wp-device--build-only}}    h5.Actual Result    The build fails with the above    h5.Expected Result    The build should pass",Bug,High,Closed,"2015-06-08 21:57:58","2015-06-08 21:57:58",3
"The Titanium SDK ","Windows: CLI: Build fails if GTEST is not present on system","h5.Description    When building a project, if GTEST is not on the system then the build fails with the below        Removing [this line|https://github.com/<USER>titanium_mobile_windows/blob/master/templates/build/cmake/internal_utils.cmake#L106] makes the build pass.    h5.Steps To Reproduce    1. Remove GTEST from your system  2. Create a titanium project using {{appc new}} or {{ti create}}  3. Build the project using {{appc run}} or {{ti build}}    h5.Actual Result    The build will fail with the above error    h5.Expected Result    The build should not fail",Bug,None,Closed,"2015-06-08 21:04:42","2015-06-08 21:04:42",3
"The Titanium SDK ","Windows: Resources are not copied from the temp folder to the build folder","h5.Description    When building an app, the app is built in a temporary folder. These files are not copied across to the actual build folder within the project directory. For example if I was building an app called testApp I would expect to go to the build/windows folder to see my files.    The root of the cause is [this line|https://github.com/<USER>titanium_mobile_windows/blob/master/cli/commands/_build.js#L1822]. Changing to the below seems to fix the issue        h5.Steps To Reproduce    1. Create a new application using {{appc new}}  2. Build the application using {{appc run -p windows -T wp-device}}  3. Check the build/windows folder    h5.Actual Result    The build folder contains none of the build files    h5.Expected Result    The build folder should contain the build files",Bug,None,Closed,"2015-06-06 00:54:30","2015-06-06 00:54:30",3
"The Titanium SDK ","Windows: Closing an alert quits the app","h5.Description    When dismissing an alert dialog, both the close button and the hardware back button quit the application.        *I am unsure if the app quits or crashes as logging does not seem to work with my machine, I am investigating if this is on every machine or just mine*    h5.Steps To Reproduce    1. Add the above code the the app.js of a Titanium Classic application  2. Build the app to device using {{appc run -p windows -T device}} or {{ti build -p windows -T device}}  3. Tap the 'Hello' button, due to TIMOB-18979 you can't see it, it's around the top middle in the top third of the screen  4. Tap 'Close' or the hardware back button    h5.Actual Result    The app quits    h5.Expected Result    The app should not quit",Bug,High,Closed,"2015-06-06 00:08:05","2015-06-06 00:08:05",5
"The Titanium SDK ","Use latest 'archiver' package","Use latest _archiver_ package. we are currently using {{0.4.10}} the latest is {{0.14.4}}    This removes the need for these monkey patches:  https://github.com/<USER>titanium_mobile/blob/master/android/cli/commands/_buildModule.js#L53  https://github.com/<USER>titanium_mobile/blob/master/android/cli/commands/_build.js#L53    This also exposes new APIs such as {{directory(src, dst)}} which are used in the windows __buildModule.js_ script",Improvement,None,"In Review","2015-06-05 23:15:37","2015-06-05 23:15:37",3
"The Titanium SDK ","Windows: CommonJS module loading support","{{require}} should support CommonJS module loading described in [CommonJS Modules in Titanium |https://wiki.<USER>org/display/guides2/CommonJS+Modules+in+Titanium].",Story,High,Closed,"2015-06-04 22:30:34","2015-06-04 22:30:34",8
"The Titanium SDK ","Windows: CLI: Building a project with the --build-only flag errors out","h5.Description    When building an Windows Platform project, when attempting to build using the {{--build-only}} flag, the build fails with the below        Full logs are attached as fullOutput.txt    h5.Steps To Reproduce    1. Create a new application using {{ti create}}  2. Run the application using {{ti build -p windows -T device --build-only}}    h5.Actual Result    The build will fail with the above error    h5.Expected Result    The build should not fail",Bug,None,Closed,"2015-06-04 22:17:54","2015-06-04 22:17:54",5
"The Titanium SDK ","Android: Soasta Touch Ids not recognised on android widgets","h4. Problem Description  When assigning a touchtest id to a widget on android the touchtest id is not assigned however on iOS this works.     h4. Reproduction Steps  Enable the attached sample with soasta, record a clip, when clicking on the top text field the id of the textfield is recorded, when clicking on the bottom textfield the id is also recorded, ignoring the touchtest id.    h4. Expected Result  When clicking on the textfield the touchtest id of the widget should be recorded    h4. Actual Result  The id of the top view of the widget is recorded.",Bug,High,Closed,"2015-01-21 18:26:19","2015-01-21 18:26:19",5
"The Titanium SDK ","Android: Custom fonts not working ","Android custom font support appears to be broken in Titanium 4.x    Following the guide found on the wiki https://wiki.<USER>org/display/guides2/Custom+Fonts results in proper custom fonts when using SDK 3.5.1.GA on Android, but no visible custom fonts on SDK 4.1.0. iOS custom fonts work properly.    You can easily test this by downloading the CustomFonts example application on the wiki page and changing the SDK version.",Bug,Critical,Closed,"2015-05-29 16:23:22","2015-05-29 16:23:22",1
"The Titanium SDK ","Nine-patch splash screen showing black blocks with 4.0.0.GA on Android 5.x","An app build with 4.0.0.GA (regardless of Android Build Tools version) that uses (as recommended) nine-patch splash images displays black blocks overlaid on the image when runs on an Android 5.x device. It is OK on Android 4.4.4 and when build with 3.5.1.GA it is OK on both Android devices.    h3. Reproduce    Run the attached project on different environments. The project is created with {{ti create}}, has no modifications to the {{<android>}} section in {{tiapp.xml}} and nine-patch splash images according to the [guide|http://docs.<USER>com/platform/latest/#!/guide/Icons_and_Splash_Screens-section-29004897_IconsandSplashScreens-Androidsplashscreenconsiderations].    Attached are screenshots for different SDK, Android and Tools versions.",Bug,Medium,Closed,"2015-05-29 17:16:19","2015-05-29 17:16:19",5
"The Titanium SDK ","status-command no longer works since we removed login","We removed login from the Titanium CLI and replaced most operations with a NOOP. However, the {{status}} command does not work anymore and scripts like [grunt-titanium|https://github.com/<USER>grunt-titanium/blob/master/tasks/titanium.js#L302-L312] that rely on it don't work as a result of that.    The {{status}} command should be a NOOP as well and return a result as if logged in to make sure scripts that depend on it continue to work.",Bug,Medium,Closed,"2015-05-29 06:49:54","2015-05-29 06:49:54",1
"The Titanium SDK ","minSdkVersion defaults to 10 where it should be 14 since 4.0.0.GA","* PR on master: https://github.com/<USER>titanium_mobile/pull/6884  * PR on 4_0_X: https://github.com/<USER>titanium_mobile/pull/6885",Bug,Medium,Closed,"2015-05-29 06:39:10","2015-05-29 06:39:10",1
"The Titanium SDK ","Android: Update Android Alert Dialogs with Material",,Sub-task,Medium,Closed,"2015-05-29 06:28:39","2015-05-29 06:28:39",3
"The Titanium SDK ","Update Android Support Library to 22.1",,Sub-task,Medium,Closed,"2015-05-29 06:26:39","2015-05-29 06:26:39",3
"The Titanium SDK ","iOS: Throw an event after each AJAX call inside a webview","Customer would like same feature to support by iOS device. Like we did on case TIMOB-17754.    Since last case is Android support only. ","New Feature",High,Closed,"2015-05-29 01:12:10","2015-05-29 01:12:10",13
"The Titanium SDK ","Android: Enable building with android M preview ","h5.Description:  1. The android M preview SDK is now out.  2. This new SDK is also marked as API 22.  3. While building its unclear if we are building with android M or android 5.1.1 as both are API22.  4. Removing android 5.1.1 & building fails with error:    5. From the above error we see that our tools don't consider android M as API 22 (although it will probably be API 23 once it goes GA).    Please fix so that we can test android M till the time it is GA.    *On further looking into it found that the folder for android M in the platforms folder inside android sdk is named android-MNC which might be the reason for our tools not picking it up.*",Bug,High,Closed,"2015-05-29 00:41:39","2015-05-29 00:41:39",8
"The Titanium SDK ","Windows: CLI builds hang on first try due to Powershell permission check in windowslib","This is a bug in windowslib itself, specifically around https://github.com/<USER>windowslib/blob/dc9db61dbfa640460a933a738612d9a190e268b0/lib/env.js#L90    For me, when I just try to run a ti build, this eventually will cause windowslib to try and gathe renv info. The CMD prompt name will become Windows PowerShell and show no new output, effectively hung. I need to stop it with Ctrl+C and then open Powershell prompt as an administrator and give more expansive scripting rights to the system. This value _does not seem to persist across reboots for me_.",Bug,Critical,Closed,"2015-05-28 19:20:44","2015-05-28 19:20:44",5
"The Titanium SDK ","Android orientation change detection is missing reverse orientation distinction","The documentation confirms that this is missing from the various places where in Android you could detect orientation change.    * Ti.Gesture.orientationchange event http://docs.<USER>com/platform/latest/#!/api/Titanium.Gesture-event-orientationchange     * Ti.Gesture.orientation property http://docs.<USER>com/platform/latest/#!/api/Titanium.Gesture-property-orientation     * Ti.Android.Activity. requestedOrientation property http://docs.<USER>com/platform/latest/#!/api/Titanium.Android.Activity-property-requestedOrientation    From docs:  On Android and Mobile Web, returns the orientation of the current window, and *never reports the reverse orientations* (LANDSCAPE_RIGHT and UPSIDE_PORTRAIT).    Android itself does report the reverse orientation changes, Titanium is just not surfacing this level of reporting.     This deficiency prevents being able to detect precisely to which orientation has the device been rotated to with respect to a view, such as a camera view needed for barcode scanning. When the device has rotated but the view (and the object which is the subject of the scanning) has not rotated, you must be able to determine what the relative rotation is without the possibility of being 180 degrees off.    Let me try to illustrate how this becomes a problem with some ASCII art and the scenario being a barcode scanning camera view in a module where the app must report to the module the orientation change. This is just an example of 1 use case where this deficiency can be seen as a problem.     Let's say this is your device in portrait orientation:        ABCD are the corners of the hardware, abcd are the corners of the camera view. Let's say the camera sensor is mounted such that the top-left corner of the picture is nearest to the A corner, the top-right corner of the picture is nearest to the B corner, etc. In this case, the rotation difference between the camera sensor and the camera view is 0 degrees, so the pixel at the top-left corner of the picture can go near the 'a' corner of the view, the pixel at the top-right corner of the picture can go near the 'b' corner of the view, etc.    If the activity supports landscape-right orientation, then this is how your screen will look like if you rotate your device 90 degrees counter-clockwise:        The important thing to realize is that the camera sensor rotated with the hardware but the view didn't, and neither did the object you are pointing the camera at. So the top-left pixel is still near the A corner as far as the camera sensor is concerned, but now that pixel needs to go to the 'c' corner of the view, otherwise from your (the user's) perspective the camera feed will look like it's rotated 90 degrees clockwise (because the object in front of the camera didn't rotate with the camera sensor).    This can be achieved by the app telling the module that the activity's UI is now in landscape-right orientation, which the module will interpret not as landscape-right per se, rather as rotate the camera feed 90 degrees counter-clockwise.    I think by now it should be clear why we need to distinguish between landscape-right and landscape-left, but just for completeness -- if the activity supports landscape-left orientation as well, then this is how your screen will look like if you rotate your device 90 degrees clockwise (relative to portrait):        The top-left pixel is still near the A corner as far as the camera sensor is concerned, but now that pixel needs to go to the 'b' corner of the view. In this case the module would have to rotate the camera feed clockwise by 90 degrees. If we can't distinguish between these two cases (i.e. landscape-left and landscape-right), then the best we can do is to rotate the camera feed by 90 degrees in the same direction in both cases, which will mean that the camera feed will appear off by 180-degrees (i.e. upside-down) to the user in one of those cases.    Similar logic applies to portrait vs. reversePortrait.    A work around would be to recreate orientation change handling in the module, however the better solution should be to improve this handling in the Titanium SDK  so that the app can notify the module using Titanium SDK available functions/events about this change instead of the module needing to unnecessarily replicate Titanium SDK capabilities just to improve them.    This works as expected in the iOS Titanium SDK.",Bug,High,Closed,"2015-05-26 21:21:58","2015-05-26 21:21:58",8
"The Titanium SDK ","Android: Setting Picker.touchEnabled (to false) crashes","Setting {{touchEnabled}} to {{false}} causes the app to crash on Android:    h3. Reproducing code        h3. Log        Reported via Q&A:  https://community.<USER>com/topic/520/app-crashed-when-using-widget-with-picker-in-it/3",Bug,High,Closed,"2015-05-26 09:51:08","2015-05-26 09:51:08",5
"The Titanium SDK ","Windows: Write How-To documentations","We might want to write some comprehensive documentation for contributors.  I think contributors may be categorized in three parts: App developers, module developers and Ti.API developers, so we may need some docs written from different perspective:    . Write How-to documenttion for app developers  . Write How-to documenttion for module developers  . Write How-to documenttion for Ti API developers",Story,Medium,Closed,"2015-05-26 01:52:49","2015-05-26 01:52:49",5
"The Titanium SDK ","Windows: Fix Jenkins CI build error","Jenkins CI build for [titanium_mobile_windows|http://studio-<USER><USER>org/job/titanium_mobile_windows/342/] has been failing around building mocha test.    ",Story,High,Closed,"2015-05-26 01:47:37","2015-05-26 01:47:37",5
"The Titanium SDK ","Windows: Fire Ti.Media routechange event",http://docs.<USER>com/platform/latest/#!/api/Titanium.Media-event-routechange,Improvement,Medium,Open,"2015-05-22 16:31:55","2015-05-22 16:31:55",5
"The Titanium SDK ","Windows: Create windows module build script","Create a build script in node to compile and package windows native modules.",Story,Critical,Closed,"2015-05-21 22:36:39","2015-05-21 22:36:39",8
"The Titanium SDK ","Blackberry is present in SDKs downloaded from master branch","h5.Description    When downloading an SDK using {{ti sdk install -b master -d}} Blackberry is present.    h5.Steps To Reproduce    1. Run either {{appc ti sdk install -b master -d}} or {{ti sdk install -b master -d}}  2. Open the SDK folder    h5.Actual Result    The SDK folder will contain Blackberry    h5.Expected Result    We have deprecated Blackberry so the folder should not be present",Bug,High,Closed,"2015-05-21 22:33:26","2015-05-21 22:33:26",3
"The Titanium SDK ","Windows: Implement the ability to use native modules with a titanium project","Allow native windows modules to be used and exposed to titanium projects.",Story,Critical,Closed,"2015-05-21 20:26:05","2015-05-21 20:26:05",21
"The Titanium SDK ","Windows: Add windows module create command to the CLI","Add the ability to generate a native windows module project from the CLI",Story,Critical,Closed,"2015-05-21 20:24:09","2015-05-21 20:24:09",8
"The Titanium SDK ","Windows: Create templates for native module project generation","Create EJS templates to generate the native module project files.",Story,Critical,Closed,"2015-05-21 20:22:43","2015-05-21 20:22:43",8
"The Titanium SDK ","Windows: Create a default native project structure","Create a default project structure for a Windows native module. This will be used as the base for any new native Windows modules.",Story,Critical,Closed,"2015-05-21 20:21:21","2015-05-21 20:21:21",5
"The Titanium SDK ","Windows: Move native type hooks/wrappers to user's app","We need to generate our wrappers as part of the build <USER>and do so in the user's app, not in the TitaniumWindows module.",Story,High,Closed,"2015-05-21 19:38:19","2015-05-21 19:38:19",13
"The Titanium SDK ","Android: Label shadow color & shadow offset property not working on android lollipop","h5.Steps To Reproduce:  1. Create an android app with the following code in the app.js:    2. Build the app for android lollypop device.  3. Click on the button Change the shadow of the label.    h5. Actual Results:  1. The label shadow does not change. This happens only on android lollypop.    h5. Expected Results:  1. The label shadow should change to what's specified.  ",Bug,Medium,Closed,"2015-05-20 18:56:11","2015-05-20 18:56:11",5
"The Titanium SDK ","node-ios-device: update to work with Node.js 0.12 and io.js","node-ios-device needs to be compiled with the latest Node.js 0.10, 0.12 and io.js 1.x and 2.x.    Restructure the project so that we no longer ship binaries by default. Instead, when you npm install node-ios-device, it will run node-gyp for the installed Node/io.js version.    If you run {{make}}, it will compile node-ios-device for all known/supported module API versions.",Improvement,Critical,Closed,"2015-05-20 07:28:55","2015-05-20 07:28:55",21
"The Titanium SDK ","Windows: Reduce number of VS module projects","Because of the reference/link library issue on VS (TIMOB-18774), we need to reduce number of VS modules projects. It could be done by aggregating small modules such as {{Ti}}, {{Ti.App}}, {{Ti.API}} etc, and categorize relevant modules like {{Sensors}}.",Story,High,Closed,"2015-05-20 02:13:42","2015-05-20 02:13:42",8
"The Titanium SDK ","iOS: Calendar Event: Allow to fetch event Organiser and Invitees/Attendees details","Customer (Agilent, VMWare) is looking for a way to fetch event Organiser and Invitees/Attendees details form Ti.Calendar.Event","New Feature",Medium,Closed,"2015-05-20 01:29:29","2015-05-20 01:29:29",5
"The Titanium SDK ","iOS: Calendar events status shows wrong status number or null","h5.Reproduce:  1. Simple run the following codes.  {code:title=app.js}  Ti.API.info(Ti.Calendar.STATUS_TENTATIVE);  Ti.API.info(Ti.Calendar.STATUS_CONFIRMED);  Ti.API.info(Ti.Calendar.STATUS_CANCELLED);  Ti.API.info(Ti.Calendar.STATUS_NONE);    [INFO] :   0  [INFO] :   1  [INFO] :   <null>  [INFO] :   0  {code}    h5.Note:  Can be reproduce on SDK 3.5.1, 3.5.2 and 4.0.0RC2",Bug,High,Closed,"2015-05-20 01:23:50","2015-05-20 01:23:50",3
"The Titanium SDK ","Windows: Implement Ti.Calendar.Reminder","http://docs.<USER>com/platform/latest/#!/api/Titanium.Calendar.Reminder  https://msdn.microsoft.com/en-us/library/windows/apps/xaml/dn631243.aspx  https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.appointments.aspx    h2. Properties     - id : String READONLY  Identifier of this reminder.     - method : Number READONLY  Method by which this reminder will be delivered. ...     - minutes : Number READONLY  Reminder notice period in minutes, that determines how long prior to the event this reminder should trigger.","New Feature",Medium,Closed,"2015-05-19 17:23:05","2015-05-19 17:23:05",13
"The Titanium SDK ","Windows: Implement Ti.Calendar.RecurrenceRule","http://docs.<USER>com/platform/latest/#!/api/Titanium.Calendar.RecurrenceRule  https://msdn.microsoft.com/en-us/library/windows/apps/xaml/dn631243.aspx  https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.appointments.aspx    h2. Properties     - calendarID : String READONLY  Identifier for the recurrence rule's calendar.     - daysOfTheMonth : Number[] READONLY  The days of the month that the event occurs, as an array of number objects. ...     - daysOfTheWeek : daysOfTheWeekDictionary READONLY  The days of the week that the event occurs, as an Dictionay of daysOfWeek and Week.     - daysOfTheYear : Number[] READONLY  The days of the year that the event occurs, as an array of number objects. ...     - end : recurrenceEndDictionary READONLY  End of a recurrence rule.     - frequency : Number READONLY  Frequency of the recurrence rule. ...     - interval : Number READONLY  The interval between instances of this recurrence. ...     - monthsOfTheYear : Number[] READONLY  The months of the year that the event occurs, as an array of Number objects. ...     - setPositions : Number[] READONLY  An array of ordinal numbers that filters which recurrences to include in the recurrence rule's frequency. ...     - weeksOfTheYear : Number[] READONLY  The weeks of the year that the event occurs, as an array of number objects. ...","New Feature",Medium,Closed,"2015-05-19 17:22:47","2015-05-19 17:22:47",13
"The Titanium SDK ","Windows: Implement Ti.Calendar.Event","http://docs.<USER>com/platform/latest/#!/api/Titanium.Calendar.Event  https://msdn.microsoft.com/en-us/library/windows/apps/xaml/dn631243.aspx  https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.appointments.aspx    h2. Properties     - alerts : Titanium.Calendar.Alert[]  Alarms associated with the calendar item, as an array of Titanium.Calendar.Alert objects.     - allDay : Boolean  Indicates whether this event is all day.     - availability : Number READONLY  Availability of this event. ...     - begin : Date  Start date/time of this event.     - description : String READONLY  Description of this event.     - end : Date  End date/time of this event.     - extendedProperties : Dictionary READONLY  Extended properties of this event.     - hasAlarm : Boolean READONLY  Indicates whether an alarm is scheduled for this event.     - id : String READONLY  Identifier of this event.     - isDetached : Boolean READONLY  Boolean value that indicates whether an event is a detached instance of a repeating event.     - location : String  Location of this event.     - notes : String  Notes for this event.     - recurenceRules : Titanium.Calendar.RecurrenceRule[]  The recurrence rules for the calendar item. ...     - reminders : Titanium.Calendar.Reminder[] READONLY  Existing reminders for this event.     - status : Number READONLY  Status of this event. ...     - title : String  Title of this event.     - visibility : Number READONLY  Visibility of this event. ...    h2. Methods     - addRecurrenceRule( rule )  Adds a recurrence rule to the recurrence rule array. ...     - createAlert( data ) : Titanium.Calendar.Alert  Creates an alert for this event. ...     - createRecurenceRule( data ) : Titanium.Calendar.RecurrenceRule  Creates an recurrence pattern for a recurring event. ...     - createReminder( data ) : Titanium.Calendar.Reminder  Creates a reminder for this event. ...     - getExtendedProperty( name ) : String  Gets the value of the specified extended property. ...     - refresh( ) : Boolean  Updates the event's data with the current information in the Calendar database. ...     - remove( span ) : Boolean  Removes an event from the event store. ...     - removeRecurenceRule( rule )  Removes a recurrence rule to the recurrence rule array. ...     - save( span ) : Boolean  Saves changes to an event permanently. ...     - setExtendedProperty( name, value )  Sets the value of the specified extended property. ...","New Feature",Medium,Closed,"2015-05-19 17:22:22","2015-05-19 17:22:22",13
"The Titanium SDK ","Windows: Implement Ti.Calendar.Calendar","http://docs.<USER>com/platform/latest/#!/api/Titanium.Calendar.Calendar  https://msdn.microsoft.com/en-us/library/windows/apps/xaml/dn631243.aspx  https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.appointments.aspx    h2. Properties     - hidden : Boolean READONLY  Indicates whether this calendar can be edited or deleted.     - id : String READONLY  Identifier of this calendar. ...     - name : String READONLY  Display name of this calendar.     - selected : Boolean READONLY  Indicates whether the calendar is selected.    h2. Methods     - createEvent( properties ) : Titanium.Calendar.Event  Creates an event in this calendar. ...     - getEventById( id ) : Titanium.Calendar.Event  Gets the event with the specified identifier. ...     - getEventsBetweenDates( date1, date2 ) : Titanium.Calendar.Event[]  Gets events that occur between two dates. ...     - getEventsInDate( year, month, day ) : Titanium.Calendar.Event[]  Gets events that occur on a specified date. ...     - getEventsInMonth( year, month ) : Titanium.Calendar.Event[]  Gets events that occur during a specified month. ...     - getEventsInYear( year ) : Titanium.Calendar.Event[]  Gets all events that occur during a specified year. ...","New Feature",Medium,Closed,"2015-05-19 17:22:10","2015-05-19 17:22:10",13
"The Titanium SDK ","Windows: Implement Ti.Calendar.Alert","http://docs.<USER>com/platform/latest/#!/api/Titanium.Calendar.Alert  https://msdn.microsoft.com/en-us/library/windows/apps/xaml/dn631243.aspx  https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.appointments.aspx    h2. Properties     - absoluteDate : Date  The absolute date for the alarm.     - alarmTime : Date READONLY  Date/time at which this alert alarm is set to trigger.     - begin : Date READONLY  Start date/time for the corresponding event.     - end : Date READONLY  End date/time for the corresponding event.     - eventId : Number READONLY  Identifier of the event for which this alert is set.     - id : String READONLY  Identifier of this alert.     - minutes : Number READONLY  Reminder notice period in minutes, that determines how long prior to the event this alert should trigger.     - relativeOffset : Number  The offset from the start of an event, at which the alarm fires.     - state : Number READONLY  The current state of the alert. ...","New Feature",Medium,Closed,"2015-05-19 17:21:42","2015-05-19 17:21:42",13
"The Titanium SDK ","Windows: Implement Ti.Calendar top-level module","http://docs.<USER>com/platform/latest/#!/api/Titanium.Calendar  https://msdn.microsoft.com/en-us/library/windows/apps/xaml/dn631243.aspx  https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.appointments.aspx    h2. Constants  - AUTHORIZATION_AUTHORIZED : Number READONLY  - AUTHORIZATION_DENIED : Number READONLY  - AUTHORIZATION_RESTRICTED : Number READONLY  - AUTHORIZATION_UNKNOWN : Number READONLY  - AVAILABILITY_BUSY : Number READONLY  - AVAILABILITY_FREE : Number READONLY  - AVAILABILITY_NOTSUPPORTED : Number READONLY  - AVAILABILITY_TENTATIVE : Number READONLY  - AVAILABILITY_UNAVAILABLE : Number READONLY  - METHOD_ALERT : Number READONLY  - METHOD_DEFAULT : Number READONLY  - METHOD_EMAIL : Number READONLY  - METHOD_SMS : Number READONLY  - RECURRENCEFREQUENCY_DAILY : Number READONLY  - RECURRENCEFREQUENCY_MONTHLY : Number READONLY  - RECURRENCEFREQUENCY_WEEKLY : Number READONLY  - RECURRENCEFREQUENCY_YEARLY : Number READONLY  - SPAN_FUTUREEVENTS : Number READONLY  - SPAN_THISEVENT : Number READONLY  - STATE_DISMISSED : Number READONLY  - STATE_FIRED : Number READONLY  - STATE_SCHEDULED : Number READONLY  - STATUS_CANCELED : Number READONLY  - STATUS_CONFIRMED : Number READONLY  - STATUS_NONE : Number READONLY  - STATUS_TENTATIVE : Number READONLY  - VISIBILITY_CONFIDENTIAL : Number READONLY  - VISIBILITY_DEFAULT : Number READONLY  - VISIBILITY_PRIVATE : Number READONLY  - VISIBILITY_PUBLIC : Number READONLY     h2. Properties  - allAlerts : Titanium.Calendar.Alert[] READONLY  All alerts in selected calendars.     - allCalendars : Titanium.Calendar.Calendar[] READONLY  All calendars known to the native calendar app.     - allEditableCalendars : Titanium.Calendar.Calendar[] READONLY  All calendars known to the native calendar app that can add, edit, and delete items in the calendar.     - defaultCalendar : Titanium.Calendar.Calendar READONLY  Calendar that events are added to by default, as specified by user settings.     - eventsAuthorization : Number READONLY  Returns an authorization constant indicating if the application has access to the events in the EventKit.     - selectableCalendars : Titanium.Calendar.Calendar[] READONLY  All calendars selected within the native calendar app, which may be a subset of allCalendars.    h2. Methods  - getCalendarById( id ) : Titanium.Calendar.Calendar  Gets the calendar with the specified identifier. ...     - requestEventsAuthorization( callback )  If authorization is unknown, will bring up a dialog requesting permission. ...    h2. Events  - change  Fired when the database backing the EventKit module is modified. ...","New Feature",Medium,Closed,"2015-05-19 17:20:20","2015-05-19 17:20:20",13
"The Titanium SDK ","iOS: Posting a photo to Facebook gives Unsupported FBRequest parameter type:TiBlob","Post a Photo Using the Graph API from the Gallery or image in resources directory does not work on iOS always show this log info. [Community Question|https://community.<USER>com/topic/445/posting-a-photo-to-facebook-doesn-t-support-blobs-ios]    But It works on Android.    {code:title=Consol Log}  [INFO] :   FBSDKLog: Unsupported FBRequest parameter type:TiBlob  [INFO] :   -[TiBlob _fastCharacterContents]: unrecognized selector sent to instance 0x176261d0      Thanks.",Bug,High,Closed,"2015-05-19 12:16:33","2015-05-19 12:16:33",5
"The Titanium SDK ","Apps packaged for AppStore appear in Xcode's 'Other items' section","After packaging an app for the AppStore and viewing it in the Xcode Organizer, I see it listed in the 'Other Items' section and not in the 'iOS Apps' section.    *Steps to reproduce issue*:  1. Package an app for the AppStore  2. Open Xcode  3. Go to the Organizer -> Archives window    *Actual Results*:  The app is listed under the 'Other Items' section    *Expected Results*  The app is listed under the 'iOS Apps' section    *Notes*  We are not sure what causes the app to appear in this section and information online about the issue is scarce.",Bug,Medium,Closed,"2015-04-23 22:08:43","2015-04-23 22:08:43",8
"The Titanium SDK ","Android: VideoPlayer is not playing mp4 videos anymore on Android L/Lollipop/5","*Description:*    Video playback on Android L seems broken with SDK 3.5.1 (and 4.0.0RC2). MP4 files do not show video and audio output.      *How to reproduce:*    Run the attached app.js on a Android L device. Code is taken from http://docs.<USER>com/titanium/3.0/#!/api/Titanium.Media.VideoPlayer.      *What should happen:*    Video should be played after the app is deployed.      *What does happen:*    Blank/Black VideoPlayer, no video is played, no sound.  After several seconds the console shows (both of them!):  [ERROR] :  MediaPlayer: error (1, -2147483648)  [ERROR] :  MediaPlayer: Error (1,-2147483648)  Nothing more changes.    Setting autoplay to false and adding a call to .play on the VideoPlayer object creates this log message:  [WARN] :   VideoPlayerProxy: (main) [101,101] Player action ignored; player has not been created.      *Where does it work:*    The same app does work on a Nexus 10 device running Android 4.4.4 (KitKat). It does not work either on other devices running Android 5.0.2 and 5.1. It does work in iOS simulator. It does not work with Ti SDK 4.0.0RC2 on Android 5.1. Several different mp4 files do not work either in the environment described.",Bug,Critical,Closed,"2015-05-06 14:35:20","2015-05-06 14:35:20",5
"The Titanium SDK ","Facebook: Problems in 'presentWebShareDialog'","The first problem is that documentation say that is not necessary to do login flow before the use of presentWebShareDialog, but if i don't do that the app crash with the stack error: 'session cannot be null' in android log cat.  The second problem occurs when i try to use presentWebShareDialog after login: the facebook share popup seems to not get the passed params: link, name, caption, picture and description  !Screenshot_fb.png|thumbnail!    ",Bug,Critical,Closed,"2015-05-12 07:40:05","2015-05-12 07:40:05",3
"The Titanium SDK ","Android: Update Appcompat Lib to 22.1 & Alert Dialogs with material ","Android Support Library needs updating.     Based on this official Android blog entry: http://android-developers.blogspot.sg/2015/04/android-support-library-221.html    AppCompat Support Library has been updated and brings more support for material design and tinting.    After this is done, the SDK can be updated to fully use the AppCompat support in widgets and more.",Improvement,Medium,Closed,"2015-05-14 05:54:52","2015-05-14 05:54:52",5
"The Titanium SDK ","Windows: Combine JavaScriptCore projects for Windows 8.1","We have 4 separate projects for building JavaScriptCore for Windows 8, Windows Phone 8, Windows 8.1 (Store and x86 Phone), and Windows Phone 8.1 ARM.    We should attempt to combine at least the 8.1 projects into one, and possibly the 8 into one (or into the 8.1).",Story,Medium,Closed,"2015-05-13 14:25:01","2015-05-13 14:25:01",5
"The Titanium SDK ","HTTPClient: unable set content-type as json for multipart post request using Httpclient","h5.Description:  HTTP request sends post to a Salesforce.com REST api that is expecting a multipart request with content-type set clearly for each of the parts, like the following:  {quote}  POST /services/data/v33.0/chatter/feed-elements HTTP/1.1   Authorization: OAuth 00DRR0000000N0g!...   User-Agent: Jakarta Commons-HttpClient/3.0.1   Host: instance_name   Content-Length: 845   Content-Type: multipart/form-data; boundary=boundary   Accept: application/json     --boundary   Content-Disposition: form-data; name=json   Content-Type: application/json; charset=UTF-8     {   somejson:data   }     --boundary   Content-Disposition: form-data; name=feedElementFileUpload; filename=receipt.pdf   Content-Type: application/octet-stream; charset=ISO-8859-1     filecontent   {quote}    If we set xhr.setRequestHeader(enctype, multipart/form-data), This is fine for the file part, as Titanium is doing the magic. However, for the json part, Titanium will not set it and hence caused parsing errors for the post request. How can we support that?",Bug,High,Closed,"2015-05-13 14:13:28","2015-05-13 14:13:28",13
"The Titanium SDK ","iOS: Getting error when using example code about Calendar","h5.Reproduce:  1. Run the example code **Events in a year* in our [doc|http://docs.<USER>com/platform/latest/#!/api/Titanium.Calendar].   2. Then click the views events button    h5.Expect Result:  Should display the result.    h5.Actual Result:  There will be a error in log console: Error getting shared calendar invitations for entity types 3 from daemon: Error Domain=EKCADErrorDomain Code=1013 The operation couldn’t be completed. (EKCADErrorDomain error 1013.)",Bug,High,Closed,"2015-05-13 03:01:13","2015-05-13 03:01:13",5
"The Titanium SDK ","iOS: Support destructive alert style","The new iOS8 UIAlertViewController supports an destructive Ti.UI.AlertDialog style, which is specified just like the cancel property.     Pull-Request: https://github.com/<USER>titanium_mobile/pull/6697","New Feature",Critical,Closed,"2015-03-08 12:28:17","2015-03-08 12:28:17",5
"The Titanium SDK ","iOS: alert or AlertDialog.show on window focus event is called infinite times.","When the alert function is called on window focus event the that alert function gets called infinite times, this is because window focus events gets on calling infinite times.    Another problem is window focus event should not call on calling alert or alertDialog.show()    Test the code on iOS simulator or device to reproduce bug.    Below is the code to test the bug, window focus event should not get called infinite times when alert code is written on window focus event.    Case 1:    var win1 = Titanium.UI.createWindow({   backgroundColor : 'red',   title : 'Red Window',  });    var navWin = Titanium.UI.iOS.createNavigationWindow({   window : win1  });      win1.addEventListener(focus,function(e){   alert(hello);   Ti.API.info(Focus on first window);  });    navWin.open();       Case 2:  var win1 = Titanium.UI.createWindow({   backgroundColor : 'red',   title : 'Red Window',  });    var navWin = Titanium.UI.iOS.createNavigationWindow({   window : win1  });      var dialog = Ti.UI.createAlertDialog({      cancel: 1,      buttonNames: ['Confirm', 'Cancel'],      message: 'demo alert dialog?',      title: 'Window Option'    });            win1.addEventListener(focus,function(e){   dialog.show();   Ti.API.info(Focus on first window);  });    navWin.open();     You can copy the cases in app.'s file and test the same. You can also check the debug logs which shows focus event is continuously firing.    Attached are the files for both the test cases.    Execute the code to find the bug.",Bug,Critical,Closed,"2015-04-27 10:52:57","2015-04-27 10:52:57",1
"The Titanium SDK ","iOS: ImageView is not rendering remote urls","Ti SDK 4.0.0.RC3 - ImageView is not rendering images from remote URLs    When assigning the image property to a remote url (that points to a valid image) the ImageView is not rendering the image.    Expectation is that the imageView should render the image.        ",Bug,Critical,Closed,"2015-05-11 14:29:18","2015-05-11 14:29:18",3
"The Titanium SDK ","iOS: ImageView with Remote URLs broken","ImageViews are no longer loading images with remote URLs on 4.0.0.RC3 (images appear as broken)  Same code works fine on 4.0.0.RC2 and RC1    Example URL:  https://graph.facebook.com/100002169640003/picture?width=100&height=100&return_ssl_resources=1    (also tried with non-HTTPS and it is also broken on iOS)    Android is working fine.",Bug,High,Closed,"2015-05-08 23:57:06","2015-05-08 23:57:06",5
"The Titanium SDK ","Android: Wrong implementation of TiResponseCache may cause occasional crashes in Lollipop","I was getting occasional crashes in my titanium module when downloading files using HttpUrlConnection on a Lollipop device. Tracing this to okhttp (the http client used in android 5), I posted a bug report (see: https://code.google.com/p/android/issues/detail?id=160522)    There is a bug in okhttp where they don't handle null pointer correctly, which is returned from TiCacheResponse.getHeaders() or its null key's value, but the fact is that it shouldn't return null in the first place. This all comes from the way the cached header's multimap assumes that the status is in the null key at position 0 (see: http://developer.android.com/reference/java/net/URLConnection.html#getHeaderFields%28%29)    For a full explanation of the cause see: https://code.google.com/p/android/issues/detail?id=160522#c5    Partial stack dump of the problem:  {quote}   Attempt to invoke virtual method 'boolean java.lang.String.startsWith(java.lang.String)' on a null object reference   java.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.lang.String.startsWith(java.lang.String)' on a null object reference     at com.android.okhttp.internal.http.StatusLine.<init>(StatusLine.java:24)     at com.android.okhttp.Response$Builder.statusLine(Response.java:419)     at com.android.okhttp.internal.http.JavaApiConverter.createOkResponse(JavaApiConverter.java:116)    at com.android.okhttp.internal.http.ResponseCacheAdapter.get(ResponseCacheAdapter.java:53)     at com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:269)     at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:373)     at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:323)     at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:491)     at com.android.okhttp.internal.http.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)     at com.android.okhttp.internal.http.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)  {quote}",Bug,Critical,Closed,"2015-03-19 14:23:17","2015-03-19 14:23:17",5
"The Titanium SDK ","Windows: Allow registering event handlers with callback functions","We should allow hooking and removing event handlers in a JS-like fashion and handling the conversion to the right native calls in native wrappers.    https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener    We'll need to do some translation of event names and also mapping to various handlers/event registration types that Windows uses, as well as wrap the added handler with a call to the callback function.",Improvement,High,Closed,"2015-05-07 22:41:17","2015-05-07 22:41:17",13
"The Titanium SDK ","Windows: Crawl user's app for native requires","We need a mechanism as part of the build to crawl the user's app to generate the list of native types required. We may need to also handle dynamic requires and treat them as needing _all_ native types.    We can then use this list of types and their dependencies to trim down the list of included types we'd incorporate into the require and cast hooks from TIMOB-18878 and TIMOB-18879.",Improvement,High,Closed,"2015-05-07 22:38:24","2015-05-07 22:38:24",13
"The Titanium SDK ","Windows: Fire Ti.Media events",http://docs.<USER>com/titanium/3.0/#!/api/Titanium.Media,Improvement,Medium,Closed,"2015-05-07 22:37:10","2015-05-07 22:37:10",5
"The Titanium SDK ","Windows: Implement Ti.Media methods","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.Media    Implement the non create* methods:  -beep  -hideCamera  -hideMusicLibrary  -isMediaTypeSupported  -openMusicLibrary  -openPhotoGallery  -previewImage  -queryMusicLibrary  -requestAuthorization  -saveToPhotoGallery  -setOverrideAudioRoute  -showCamera  -startMicrophoneMonitor  -stopMicrophoneMonitor  -switchCamera  -takePicture  -takeScreenshot  -vibrate","New Feature",Medium,Closed,"2015-05-07 22:33:52","2015-05-07 22:33:52",13
"The Titanium SDK ","Windows: Allow casting to a different native type","We should allow the ability to upcast. We could simply hang a JSObject Platform::Object::cast(std::string& type) method that is on all native wrapped objects and would take the new type name.    Then we'd have a giant generated if/else block where we test against the known set of type names and do the unwrapping/wrapping to cast it:  ",Improvement,High,Closed,"2015-05-07 21:56:01","2015-05-07 21:56:01",8
"The Titanium SDK ","Windows: Hook loading of native types through require","When typical require returns no results, and the type if a native types (i.e. 'Windows.UI.Xaml.Controls.Page') we need a mechanism to register a callback/hook into the Windows global object to then create our type wrapper class for it, and return it as the module.exports value.    We should allow searching for files matching that name in JS in case someone wants to have a JS overridden version that wins for require.    Ideally we'd have the global allow registering the hook at runtime and have the actual hook int he user's app so it limits the scope of types it'd pull in.",Improvement,High,Closed,"2015-05-07 21:55:53","2015-05-07 21:55:53",13
"The Titanium SDK ","Geocoder sample from Studio dashboard fails with uncaught NSException on 7.1 simulators","h5. Description:  I was able to import the geocoder sample, then build for simulator. The console reports the following and the app did not run:      h5. Steps to reproduce:  1) Launch Studio, check dashboard, import geocoder sample  2) Set to 4.0.0.RC2 SDK and save  3) Run for iOS 7.1 iPad 2 simulator  4) Observe console    h5. Result:  Error as shown above    h5. Expected Result:  No uncaught exception",Bug,High,Closed,"2015-05-01 23:10:11","2015-05-01 23:10:11",3
"The Titanium SDK ","TiUIMapView: Not loading at all (Nested fragments)","TIMOB-18244 - Map view as center view for drawer layout works just fine.     *But placing map view into a wrapper view and setting the same as center view for drawer layout, never lets the map load.*     May be using http://developer.android.com/reference/android/app/Fragment.html#getChildFragmentManager() can fix this. Not sure how :(     {code:title=Test Case}  var TiDrawerLayout = require('com.tripvi.drawerlayout');  var Map = require(ti.map);  var win = Ti.UI.createWindow({      backgroundColor : 'white'  });  var drawer = TiDrawerLayout.createDrawer();  var menu = Ti.UI.createTableView({      data : [{          title : Home      }, {          title : About      }]  });  var wrapperView = Ti.UI.createView({      backgroundColor : 'orange',  });  wrapperView.add(Ti.UI.createLabel({      top : 10,      text : I would like to place a list view or some other compoent here, now map never loads,      color : #fff  }));  var mapview = Map.createView({      bottom : 0,      height : 50%,      fragmentOnly : true //setting this to false crashes the app   });  wrapperView.add(mapview);  drawer.setLeftView(menu);  drawer.setCenterView(wrapperView);  win.add(drawer);  win.open();  {code}",Bug,Critical,Closed,"2015-05-07 13:35:11","2015-05-07 13:35:11",13
"The Titanium SDK ","Windows: TitaniumKit Color implementation","Currently Color implementation only exists in Windows-specific code. We could create more cross-platform Color type in TitaniumKit.",Story,Medium,Open,"2015-05-07 12:42:08","2015-05-07 12:42:08",8
"The Titanium SDK ","Android: Add missing option cacheSize for scrollableViews","On iOS, the cacheSize argument is present, but on Android this is missing. This leads to empty views in some cases that don't get rebuilt correctly after scrolling. Code is tested on SDK 3.5.1.GA Multiple Android versions and works.    PR here for review:  https://github.com/<USER>titanium_mobile/pull/6767  Thanks to skoften.",Improvement,Medium,Closed,"2015-05-07 04:19:58","2015-05-07 04:19:58",3
"The Titanium SDK ","Building an iOS app with 4.0.0 and then rebuilding with 3.5.1.GA fails","Description    When building a project with a 4.0.0 SDK and then rebuilding the project with 3.5.1.GA the build fails with the below.        *Notes* As per the linked ticket when cleaning I do not see the issue, on Android I am not sure whether the issue will occur due to  CLI-616. Full output is attached as fullOutput.txt    This issue can be reproduced using Titanium CLI@4.0.0-beta8 so is not an appc cli issues    h5.Steps to reproduce  1. Create a project using a 4.0.0 SDK  2. Build the project using {{appc run -p ios}}  3. Change the SDK in the tiapp.xml and run ti sdk select and choose the latest 3.5.1.GA  4. Run {{appc run -p ios}} again    h5.Actual result  2. The build will pass  4. The build will fail with errors such as the one listed above    h5.Expected result  The build should pass both times  ",Bug,High,Closed,"2015-05-07 00:44:18","2015-05-07 00:44:18",5
"The Titanium SDK ","iOS: How to make Views inside tabbedBar work","How can we use additional views inside tabbedBar like [doc|http://docs.<USER>com/platform/latest/#!/api/Titanium.UI.iOS.TabbedBar] say.    I tried the following code, but do not work at all. So i am not sure how to do it now. Please Help.    ",Bug,High,Closed,"2015-05-05 02:45:52","2015-05-05 02:45:52",5
"The Titanium SDK ","Android: HTTPClient Onload Callback handles GET request incorrectly","h6.Issue Description  When an user submits, in the 'load' event of the webview, document download functionality is initiated an completed. Contents are written to a file and fetched back and displayed in the webview. We are facing the below issues in android (works fine in iOS):     1. When calling HTTPClient document is not properly downloaded. The actual size of the document is around 10MB while the downloaded size is around 6KB   2. If the document download is initiated once, the login screen doesn’t render on the mobile app until we re-install the app. We have also tried to disable cache.    Also a forbidden error occurs only when trying from within the app. If you hit the same url from Chrome browser, it works with the credentials used.     h6.Use Case  To download a remote document. The remote url will first render a Login screen; after successful login, the same url will render the actual document.     h6.Android 4.0.4 device output:      h6.Android 4.4.4 device output:      h6.iOS 8.2 device output:      h6.Test Case  When we open the link it will ask for login, the login username and password it's been set automatically. Just hit the login button. Then the content will be downloaded fully and open.   ",Bug,High,Closed,"2015-05-04 21:12:41","2015-05-04 21:12:41",8
"The Titanium SDK ","iOS: ioslib needs to be updated with latest ios-sim and Xcode 6.3 support","ioslib needs to be updated with the latest changes to ios-sim from TIMOB-18866 as well as properly handle simulator crash files for Xcode 6.3 iOS Simulators.",Bug,High,Closed,"2015-05-01 09:35:40","2015-05-01 09:35:40",21
"The Titanium SDK ","iOS: Fix segmentation faults in ios-sim","ios-sim recently started supporting watch apps, but this new functionality introduced some segmentation faults. ios-sim needs to be cleaned up and should probably use ARC for managing memory.",Bug,High,Closed,"2015-05-01 09:26:00","2015-05-01 09:26:00",5
"The Titanium SDK ","iOS8: Keyboard toolbar not removed when undocking keyboard","h6.Steps to reproduce  1) Run sample on iPad Sim/device and hit Focus to see keyboard w/ toolbar  2) Undock Keyboard by clicking the icon at bottom right.    3) Events work as expected  4) Hide keyboard, noticed toolbar remains in the middle of screen.    h6.Test Case  ",Bug,High,Closed,"2015-04-30 22:55:26","2015-04-30 22:55:26",13
"The Titanium SDK ","Windows: Stub Ti.Media module with constants, stubs for methods, no event firing",http://docs.<USER>com/titanium/3.0/#!/api/Titanium.Media,"New Feature",Medium,Closed,"2015-04-30 15:32:07","2015-04-30 15:32:07",8
"The Titanium SDK ","Test of DEVOPS-4274","Want to double-check new validators work as in test project. Related ticket: DEVOPS-4274",Story,Trivial,Closed,"2015-04-30 11:02:11","2015-04-30 11:02:11",0
"The Titanium SDK ","SSL certificate validation fails on university.appcelerator.com on Android","The Android mobile app for <USER>University cannot connect to the API due to an SSL certificate validation failure. The error message suggests the server certificate is for *.cloudapp-enterprise.<USER>com:        If I do a cURL, the SSL certificate is for *.<USER>com:        Here's the ACS details for the published <USER>University Arrow app:    ",Bug,High,Closed,"2015-04-10 16:43:30","2015-04-10 16:43:30",2
"The Titanium SDK ","Windows: Introduce Nullable templated type in TitaniumKit APIs","We have no notion of null primitive values. This is problematic when we have special arguments/parameter structs like MatrixCreationDict. It's also problematic if we want to check if a property has never been assigned a value (say color, on an animation).    We can use default values and check for those (such as empty string), but for double/int32_t, uint32_t that's often more problematic. We want to explicitly know if the user gave a 0/-1/whatever versus never having set a value.    There's the boost:optional type we could use, or we could simply make our own type.",Story,High,Closed,"2015-04-29 18:45:05","2015-04-29 18:45:05",8
"The Titanium SDK ","Windows: CI build server for JavaScriptCore","Currently Ti for Windows is based on custom JavaScriptCore static library which is built from personal WebKit branch at https://github.com/infosia/webkit-wp8/tree/javascriptcore-wp8.1. We have https://github.com/<USER>webkit but it doesn't track changes for Windows Phone. It should be the master of Windows Phone branch and should have CI server built on it.  ",Story,Medium,Closed,"2015-04-29 14:53:52","2015-04-29 14:53:52",5
"The Titanium SDK ","Windows: hardware back button should close Ti.Window","All Titanium app for Windows Store should follow Windows Store policies described at  https://msdn.microsoft.com/en-us/library/windows/apps/dn764944 .    This includes app navigation policy on how to handle back button with your page/dialog. Currently Ti app closes immediately when you press the back button even when you open multiple {{Ti.Window}}.     {quote}  Where applicable, pressing the back button should take the user to a previous page/dialog. If the user presses the back button on the first page of the app, then the app terminates (unless it is allowed to run in the background).  {quote}",Story,High,Closed,"2015-04-28 14:32:23","2015-04-28 14:32:23",8
"The Titanium SDK ","Windows: Time between creating Date() objects runs a factor 1000 slower then reality","The following code demonstrates that when you create a {{new Date()}} object in a {{setTimeout}} or {{setInterval}} method the time is off by a factor 1000.    If you run https://github.com/<USER>developer-relations/Mobile-App-Performance/ you will see that this also occurs when you have a expensive computation that takes several seconds and you log the time before and after.        I did the tests on the Emulator, but looking at the results [~kota] achieved with https://github.com/<USER>developer-relations/Mobile-App-Performance/ the same is true for device.",Bug,Critical,Closed,"2015-04-25 17:29:14","2015-04-25 17:29:14",8
"The Titanium SDK ","iOS: Apple Watch support to the open the iOS app in the background via openParentApplication","In order for the watch to get certain things from the iOS app, the handleWatchKitExtensionRequest method in the app delegate needs to be implemented.  I imagine this could be a system wide event in Ti similar to the resume event.    https://developer.apple.com/library/ios/documentation/WatchKit/Reference/WKInterfaceController_class/#//apple_ref/occ/clm/WKInterfaceController/openParentApplication:reply:    Some other links:    https://www.bignerdranch.com/blog/watchKit-extensions-communicating-with-your-parent-application/    http://www.kristinathai.com/send-data-to-parent-ios-app/",Improvement,High,Closed,"2015-04-25 02:33:48","2015-04-25 02:33:48",13
"The Titanium SDK ","Android: Custom Fonts not working in Attributed Strings","h2. Problem  The Ti.UI.ATTRIBUTE_FONT part of TIMOB-15998 doesn't appear to be working with custom fonts. TIMOB-15998 didn't demonstrate custom fonts working. The built-in font Roboto and its variants are working, as well as the built-in families monospace and serif. However, custom fonts placed in app/assets/android/fonts as well as app/assets/fonts are not working.    Below, I'm expecting to see the first line of text, Chantelli Antiqua, to be displayed in the custom font, which is more of a serif font than the sans-serif shown. Instead, however, we see the text displayed in the default font.    h2. Test case  {code:lang=javascript|title=app.js}  var win = Titanium.UI.createWindow({   backgroundColor : #ffffff  });    var scrollView = Ti.UI.createScrollView({   height : Ti.UI.FILL,   width : Ti.UI.FILL,   layout : vertical  });    win.add(scrollView);    win.open();    var fonts = [Chantelli_Antiqua, serif, monospace, sans-serif, sans-serif-light, sans-serif-condensed];    _.each(fonts, function(font) {   var text = font;     var attr = Titanium.UI.createAttributedString({    text : text,    attributes : [    {     type : Ti.UI.ATTRIBUTE_FONT,     value : {      font : {       fontSize : 20,       fontFamily : font      }     },     range : [0, text.length]    },    {     type : Ti.UI.ATTRIBUTE_FOREGROUND_COLOR,     value : #000000,     range : [0, text.length]    }]   });     var label = Titanium.UI.createLabel({    top : 10,    left : 10,    right : 10,    height : Titanium.UI.SIZE,    attributedString : attr   });     scrollView.add(label);  });  {code}",Bug,Critical,Closed,"2015-04-10 16:00:49","2015-04-10 16:00:49",5
"The Titanium SDK ","TiAPI: Allow developers to opt-out of sending certain analytics events","There are occasions where app developers may not want to send certain events to the analytics server. One example use case is that the app needs to enable location services, but not send geo events to PEM.    Our proposal is that in tiapp.xml (and also at runtime), the developer is able to set a list of events to filter out:    .filter(ti.geo, app.nav)    We may wish to _not_ allow them to filter some events like ti.enroll if that then breaks down the rest of the analytics system.    ",Improvement,High,Closed,"2015-04-24 17:55:47","2015-04-24 17:55:47",13
"The Titanium SDK ","Windows: Working prototype of Native API wrappers","We're taking an approach of generating C++ HAL wrappers for the Windows APIs from the metabase data. We should get a working prototype that could handle something like this:  ",Story,Critical,Closed,"2015-04-23 20:30:37","2015-04-23 20:30:37",21
"The Titanium SDK ","Move Ti.Android.ActionBar to Ti.UI.Android.ActionBar","The ActionBar class/proxy is a UI one and should live with the other Android specific types in Ti.UI.Android namespace.",Improvement,Low,Closed,"2015-04-23 19:19:12","2015-04-23 19:19:12",5
"The Titanium SDK ","CLI: Watchkit build flags in not picking up","I cannot get the watchkit PR to work:  https://github.com/jonalter/ioslib/commit/5538c3f63eaca61c54566dd1b0efbf36a8ba012a    It seems that no matter if I add a --launch-watch-app flag this block of code is never used: https://github.com/<USER>ioslib/blob/master/lib/simulator.js#L420-L434    Im using this command:      Ive manually added a debug statement to get all options in the console in ioslib simulator.js line 419.   {code:js}  emitter.emit('log-debug', JSON.stringify(options));       Im not sure if im missing a step, but I cannot get this to work.    Side note:   It works if I hardcode a flag in the ioslib simulator.js file - thats all good. ",Bug,High,Closed,"2015-04-20 10:12:33","2015-04-20 10:12:33",21
"The Titanium SDK ","iOS: Fix packaging WatchKit apps for production","Currently after packaging an iOS app (that includes a WatchKit app) for the app store, once you submit the app to iTunes Connect, you will get an email from Apple with the following message:         At this point it seems that this issue is resolved by adding a folder and file to the archive before submitting it. The details regarding this workaround can be found here: https://jira.<USER>org/browse/TIMOB-18337?focusedCommentId=349764&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-349764    Once we get a positive response from Jamie and Mads (from TIMOB-18337) this will need to be done by the CLI",Bug,High,Closed,"2015-04-17 16:20:08","2015-04-17 16:20:08",5
"The Titanium SDK ","Windows: Implement Ti.UI.setBackgroundColor","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.UI-property-backgroundColor    Sets the background color of the master view (when there are no windows or other top-level controls displayed).    The default background color may also show through if you use semi-transparent windows.",Improvement,High,Closed,"2015-04-17 13:33:45","2015-04-17 13:33:45",5
"The Titanium SDK ","ACS Photo uploads fail with 500 error","Photos returned a 500        Please have a look at it.",Bug,Critical,Closed,"2015-04-15 12:52:01","2015-04-15 12:52:01",13
"The Titanium SDK ","iOS: Provide mechanism to use the JavaScriptCore framework","Add a tiapp.xml property to allow developers to choose if they would like to use JavaScriptCore Framework of TiCore to build their applications.   Modify Titanium SDK to be able to compile and link successfully when using the JavaScriptCore Framework",Improvement,High,Closed,"2015-04-15 18:35:26","2015-04-15 18:35:26",34
"The Titanium SDK ","iOS: ImageView start with blank when setting an array of images and long duration.  ","h5.Description  When set image array to a imageView, it will start with a blank page. The longer setting for duration, the more obvious blank is.    h5.Reproduce Step:  Simple run the test case.  {code:title=app.js}  var win = Ti.UI.createWindow({   backgroundColor:white  });    var array =[/1.png,    /2.png];       var topPic = Ti.UI.createImageView({    width: Ti.UI.SIZE,     height: Ti.UI.SIZE,      top: '10dp',        images: array,                   duration: 10000,    repeatCount: 4  });      win.add(topPic);    //Start top pic animation  topPic.addEventListener('load', function(e){   Ti.API.info(Loaded);   topPic.start();  });          topPic.addEventListener('start', function(e){   Ti.API.info(Started);  });     topPic.addEventListener('change', function(e){   Ti.API.info(e.index);  });    win.open();  {code}    h5.Expect Result  The images should display right after load finished, then animate to another.    h5.Actual Result  The imageView will keep blank at beginning, Like setting duration: 10000, the symptom will be more obvious.     h5.Note:  This happens on both SDK 3.4.* and 3.5.*  ",Bug,High,Closed,"2015-04-15 03:25:02","2015-04-15 03:25:02",3
"The Titanium SDK ","Android: ListView crashes app when scrolled to end of list","ListView is crashing when reaching the end of the list. This same test case works without crashing with Ti SDK 4.0.0.Beta2.    Steps to reproduce:    # Load code below with Ti SDK 4.1.0.v20150410061234  # Tap the Append 10 items button  # Scroll all the way to the bottom  # Observer app crash    Test case:      Stack trace:  ",Bug,Critical,Closed,"2015-04-10 21:05:31","2015-04-10 21:05:31",3
"The Titanium SDK ","Windows: Whitelisted API YAML docs aren't generated in correct folder structure","From https://github.com/<USER>titanium_mobile_windows/pull/210#issuecomment-91082729    I found that YAML files for `Ti.XML.*` generated directly under `Titanium`. Shouldn't that be placed under `Titanium/XML`?    ",Bug,None,Closed,"2015-04-10 13:57:29","2015-04-10 13:57:29",3
"The Titanium SDK ","Windows: Investigate how to expose Native APIs through Javascript",,Story,Critical,Closed,"2015-04-09 22:48:04","2015-04-09 22:48:04",21
"The Titanium SDK ","Android: Region support for i18n directory","Following are the issues found around the modification of language at runtime in Android app:  * Titanium module LocaleModule does not offer support for changing the language (it is supported on iOS)  * Compilation script does not support regions (i.e. es-CO, es-CL)    In the current task it’s required to allow the modification of language + region for Android platform.    Github PR: https://github.com/<USER>titanium_mobile/pull/6772",Improvement,High,Closed,"2015-04-08 17:35:34","2015-04-08 17:35:34",3
"The Titanium SDK ","iOS: Not able to store video in Gallery when captured directly from the app","h5.Reproduce Step:  Simply run the test case in a classic project.  {code:title=app.js}  Ti.UI.backgroundColor = 'white';  var win = Ti.UI.createWindow({});    var button = Ti.UI.createButton({   top: 100,   left: 30,   title: Show Camera,  });  button.addEventListener(click, function(){   Titanium.Media.showCamera({    success:function(event) {      // called when media returned from the camera     Ti.API.info('showCamera: ' + JSON.stringify(event));     if (event.mediaType == Ti.Media.MEDIA_TYPE_VIDEO) {            alert(Video saved);     }    },    cancel:function() {      alert(cancelled Camera!);    },    error:function(error) {     var a = Titanium.UI.createAlertDialog({title:'Camera'});      if (error.code == Titanium.Media.NO_CAMERA) {      a.setMessage('Please run this test on device');     } else {      a.setMessage('Unexpected error: ' + error.code);     }     a.show();    },    saveToPhotoGallery:true,    allowEditing : true,    mediaTypes : [Ti.Media.MEDIA_TYPE_VIDEO]   });  });    win.add(button);  win.open();  {code}  h5.Expect Result:  Video should save into gallery, like a picture.     h5.Actual Result:  Console log shows the camera saved. But can't find it in gallery.  ",Bug,High,Closed,"2015-04-09 02:07:15","2015-04-09 02:07:15",5
"The Titanium SDK ","    Dev: Bump Mobile SDK titanium_version.py and package.json to next version","To run, do on the command line:    ",Sub-task,High,Closed,"2015-04-08 20:18:59","2015-04-08 20:18:59",3
"The Titanium SDK ","Dev: Bump KitchenSink to next version","This includes:    - Updating the Tiapp.xml version inside KS",Sub-task,Medium,Closed,"2015-04-08 20:18:59","2015-04-08 20:18:59",3
"The Titanium SDK ","Dev: Publish Appcelerator Studio GA Installers to Production",,Sub-task,Medium,Closed,"2015-04-08 20:18:53","2015-04-08 20:18:53",2
"The Titanium SDK ","Dev: Publish Appcelerator Studio GA Update to Production",,Sub-task,Medium,Closed,"2015-04-08 20:18:52","2015-04-08 20:18:52",2
"The Titanium SDK ","Dev: Publish Titanium SDK to Production",,Sub-task,Medium,Closed,"2015-04-08 20:18:51","2015-04-08 20:18:51",4
"The Titanium SDK "," Dev: Update Appcelerator Studio version number to 4.0.0",,Sub-task,Medium,Closed,"2015-04-08 20:18:43","2015-04-08 20:18:43",3
"The Titanium SDK ","    Signoff on all regressions and deferred P1/P2 bugs by Engineering VP",,Sub-task,Medium,Closed,"2015-04-08 20:18:43","2015-04-08 20:18:43",3
"The Titanium SDK ","Update YAML generator","- Update YAML generator to support the recent changes  - Implement a whitelist",Improvement,None,Closed,"2015-04-08 18:57:27","2015-04-08 18:57:27",8
"The Titanium SDK ","iOS: Can not Get Correct Orientation Information when orientation is not portrait","h5.Description:  Using window.getOrientation() can't get correct info if orientationModes is not portrait.    h5.Reproduce Step:  Simply run the test case in classic project. (force Orientation to Landscape_Right)  {code:title=app.js}  var self = Ti.UI.createWindow({   backgroundColor:'#ffffff',   orientationModes : [Ti.UI.LANDSCAPE_RIGHT]   });   Ti.API.debug('Reference');   Ti.API.debug('Ti.UI.LANDSCAPE_RIGHT:' + Ti.UI.LANDSCAPE_RIGHT);   Ti.API.debug('Ti.UI.LANDSCAPE_LEFT:' + Ti.UI.LANDSCAPE_LEFT);   Ti.API.debug('Ti.UI.PORTRAIT:' + Ti.UI.PORTRAIT);   Ti.API.debug('Ti.UI.UPSIDE_PORTRAIT:' + Ti.UI.UPSIDE_PORTRAIT);     var label = Ti.UI.createLabel({   text: Test Window for Orientation!,   Top: '30%',  });  self.add(label);    //construct UI   self.addEventListener('open', function(e) {   Ti.API.debug('When Opened, Window Orientation:' + self.getOrientation() + , Gesture Orientaiton: + Ti.Gesture.getOrientation());   });   self.addEventListener('focus', function(e) {   Ti.API.debug('When Focussed, Window Orientation:' + self.getOrientation() + , Gesture Orientaiton: + Ti.Gesture.getOrientation());   });   Ti.Gesture.addEventListener('orientationchange', function(e) {   Ti.API.debug('Window Orientation:' + self.getOrientation() + , Gesture Orientaiton: + Ti.Gesture.getOrientation());   });   self.open();      h5.Note:  If run the test code on Android device, the result will show the orientation change. like this:  {code:title=Android Log}  [DEBUG] : Reference   [DEBUG] : Ti.UI.LANDSCAPE_RIGHT:4   [DEBUG] : Ti.UI.LANDSCAPE_LEFT:2   [DEBUG] : Ti.UI.PORTRAIT:1   [DEBUG] : Ti.UI.UPSIDE_PORTRAIT:3   [INFO] : TiRootActivity: (main) [0,0] checkpoint, on root activity resume. activity = com.orientation.OrientationActivity@421c5c30   [INFO] : I/Adreno-EGL: <qeglDrvAPI_eglInitialize:410>: EGL 1.4 QUALCOMM build: AU_LINUX_ANDROID_LNX.LA.3.5.1_RB1.04.04.02.048.018_msm8226_LNX.LA.3.5.1_RB1__release_AU ()   [INFO] : I/Adreno-EGL: OpenGL ES Shader Compiler Version: E031.24.00.08   [INFO] : I/Adreno-EGL: Build Date: 03/07/14 Fri   [INFO] : I/Adreno-EGL: Local Branch:   [INFO] : I/Adreno-EGL: Remote Branch: quic/LNX.LA.3.5.1_RB1.1   [INFO] : I/Adreno-EGL: Local Patches: NONE   [INFO] : I/Adreno-EGL: Reconstruct Branch: AU_LINUX_ANDROID_LNX.LA.3.5.1_RB1.04.04.02.048.018 + f2fd134 + NOTHING   [DEBUG] : OpenGLRenderer: Enabling debug mode 0   [DEBUG] : Window: Checkpoint: postWindowCreated()   [DEBUG] : When Opened, Window Orientation:1, Gesture Orientaiton:1   [DEBUG] : When Focussed, Window Orientation:1, Gesture Orientaiton:1   [DEBUG] : Window Orientation:2, Gesture Orientaiton:2   {code}",Bug,High,Closed,"2015-04-08 10:33:44","2015-04-08 10:33:44",5
"The Titanium SDK ","Android: evalJS(document.height) returns undefined on Android 4.4.4","Quering a webview to get the height of the content using webview.evalJS(document.height) works fine on Android 4.4.2 (tested on HTC One) and lower devices, but Android 4.4.4 devices (tested on the Nexus 5 and 7) returns undefined instead of the height of the content. Sample code:      ",Bug,Critical,Closed,"2014-07-22 12:09:10","2014-07-22 12:09:10",8
"The Titanium SDK ","Title text truncated on OptionDialog on Android","Long title text on the OptionDialog is truncated on android, but shown in full on iOS.    The code to replicate the issue can be found at the following gist.  https://gist.github.com/gllittler/0cf95651218a9cffb640",Bug,High,Closed,"2015-02-23 12:10:56","2015-02-23 12:10:56",8
"The Titanium SDK ","iOS: Map Annotation buttons are not aligned properly when Annotation title text is large","h6.Description  Using may Annotation, when Annotation title text is large, Annotation leftButton and rightButton are not aligned properly. Button appears in the top portion    h6.Reproduce:  1.Just simply run the test case below.  {code:title=app.js}  var Map = require('ti.map');   var win = Titanium.UI.createWindow();     var mountainView = Map.createAnnotation({   latitude : -33.852222,   longitude : 151.210556,   title : Aadsafsfsdfsdfdsfdsfdsfdsfsfsdf,   subtitle : 'skjhfjskh',   pincolor : Map.ANNOTATION_AZURE,   myid : 1 // Custom property to uniquely identify this annotation.   });     mountainView.leftButton = images.png;   mountainView.rightButton = Titanium.UI.iPhone.SystemButton.INFO_LIGHT;;     var mapview = Map.createView({   mapType : Map.NORMAL_TYPE,   region : {   latitude : -33.87365,   longitude : 151.20689,   latitudeDelta : 0.1,   longitudeDelta : 0.1   },   animate : true,   regionFit : true,   userLocation : true,   annotations : [mountainView]   });     win.add(mapview);   // Handle click events on any annotations on this map.   mapview.addEventListener('click', function(evt) {   Ti.API.info(Annotation  + evt.title +  clicked, id:  + evt.annotation.myid);   });   win.open();   {code}    h6.Except Result:  The button should get aligned well.    h6.Actual Result:  Annotation leftButton and rightButton are not aligned properly. Button appears in the top portion. Screenshot attached.  ",Bug,High,Closed,"2015-04-02 05:45:41","2015-04-02 05:45:41",5
"The Titanium SDK ","Download pre-release SDKs from authenticated stream","h5. Description:  We need to be able to download the beta2 SDK from the Appc CLI.    ",Bug,High,Closed,"2015-04-02 01:49:23","2015-04-02 01:49:23",3
"The Titanium SDK ","Windows: ListView searchText and section headers aren't working from CLI builds","When I run the corporate directory app from the CLI using the latest SDK builds off of master, the directory listing's section headers are invisible (just space there) and using the search field doesn't seem to filter the entries at all. This works fine in Debug mode under the VS 2013 debugger using the example. May be a difference in Release vs Debug builds?",Bug,High,Closed,"2015-04-01 14:38:27","2015-04-01 14:38:27",8
"The Titanium SDK ","HAL: Variables using unicode characters cause Application Error","When you use a special unicode character in a variable name (which is perfectly fine on iOS and Android and valid JS) the application will crash.    h1. Test case        h1. Crash    ",Bug,None,Closed,"2015-03-31 14:48:35","2015-03-31 14:48:35",21
"The Titanium SDK ","Blackberry target is there as a deployment target in tiapp.xml","The xml has an entry for blackberry target even though it is removed from the overview page of Tiapp.xml    Steps To Reproduce:  1. Create a new project. In the wizard there is no option for Blackberry  2. Open Tiapp.xml. The overview page does not have the Blackberry section  3. Open the xml and check the <deployment-targets> section    Actual Result:  The blackberry target is shown    Expected Result:  The blackberry as a target should not be available",Bug,High,Closed,"2015-03-30 10:24:07","2015-03-30 10:24:07",3
"The Titanium SDK ","iOS: WebView do not recognize local HTML File using Ti.sourceDirectory if Project Name has a space","h6.Description:  Since Ti SDK 3.5.0, WebView does no recognise the html file when using Ti.sourceDirectory File system, if there is space in app name.     h6.Reproduce:  1. Create a classic project named Simple Test (with space)  2. Create a folder named html under Resource folder.  3. Create a simple html file name comingSoon.html, like following  {code:title=comingSoon.html}  <html>   <head>    <title>Hello World!</title>   </head>   <body>    <div>    <p>Content to follow soon</p>    </div>   </body>  </html>      h6.Expect Result:  The webview should display normally.     h6.Actual Result:  The error pop out in console log:  *couldn't load URL: app://com.cocoafish.sliangPush/Users/shuoliang/Library/Developer/CoreSimulator/Devices/EA379BD7-8255-4555-9A89-79678C7C68EB/data/Containers/Bundle/Application/BCD65E99-C189-4889-9177-CD870924377D/Simple%20Push.app/html/comingSoon.html*    h6.Note:  1. No such problem in SDK 3.4.1  2. Change the app name without space, problem gone.",Bug,High,Closed,"2015-03-30 01:32:38","2015-03-30 01:32:38",5
"The Titanium SDK ","Kitchensink: Master has fixed versions for Facebook modules","h5. Description:  Kitchensink tiapp.xml has fixed versions for facebook modules. This will prevent later modules from being automatically used and currently is set to a version that is not the latest (for Android it's set to 4.0.1, but 4.0.2 is latest).        h5. Steps to reproduce:  1) Either check master branch at https://github.com/<USER>KitchenSink/blob/master/tiapp.xml  OR  1) Pull master from git  2) Check the Facebook module entries in tiapp.xml    h5. Result:  tiapp.xml has specific versions as shown above    h5. Expected Result:  tiapp.xml set like so:    ",Bug,High,Closed,"2015-03-27 22:16:57","2015-03-27 22:16:57",3
"The Titanium SDK ","Windows: Fire Ti.Network change events",http://docs.<USER>com/titanium/3.0/#!/api/Titanium.Network-event-change,Improvement,None,Closed,"2015-03-27 18:09:07","2015-03-27 18:09:07",5
"The Titanium SDK ","Windows: Implement Ti.Network encode and decodeURIComponent methods","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.Network-method-decodeURIComponent  http://docs.<USER>com/titanium/3.0/#!/api/Titanium.Network-method-encodeURIComponent",Improvement,High,Closed,"2015-03-27 18:06:26","2015-03-27 18:06:26",5
"The Titanium SDK ","Windows: Stub out all properties/methods of Titanium.Network in TitaniumKit","Our NetworkModule in TitanumKit is missing a number of the methods/properties in the public API. We should stub these out so references to them don't cause crashes in app.",Improvement,None,Closed,"2015-03-27 18:04:27","2015-03-27 18:04:27",5
"The Titanium SDK ","Windows: Fire Ti.App events","We need to hook up event firing for the Ti.App events.    h2. Events  - accessibilitychanged  Fired by the system when the device's accessibility service is turned on or off. ...  - keyboardframechanged  Fired when the soft keyboard is presented, on and off the screen. ...  - memorywarning  Fired when the app receives a warning from the operating system about low memory availability. ...  - pause  Fired when the application transitions from active to inactive state on a multitasked system. ...  - paused  Fired when the application transitions to the background on a multitasked system. ...  - proximity  Fired when the proximity sensor changes state. ...  - resume  Fired when the application returns to the foreground on a multitasked system. ...  - resumed  Fired when the application returns to the foreground. ...  - significanttimechange  Fired when there is a significant change in the time. ...",Improvement,High,Closed,"2015-03-27 17:18:28","2015-03-27 17:18:28",8
"The Titanium SDK ","Windows: Implement Titanium.UI.Clipboard proxy","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.UI.Clipboard    h2. Methods  - clearData( [type] ) : void  - clearText( ) : void  - getData( type ) : String/Titanium.Blob  - getText( ) : String  - hasData( type ) : Boolean  - hasText( ) : Boolean/Number  - setData( type, data ) : void  - setText( text ) : void","New Feature",Medium,Closed,"2015-03-27 17:12:04","2015-03-27 17:12:04",8
"The Titanium SDK ","Windows: Implement Titanium.Buffer proxy","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.Buffer    h2. Properties  - byteOrder : Number CREATION-ONLY  - length : Number  - type : String CREATION-ONLY  - value : Number/String CREATION-ONLY    h2. Methods  - append( sourceBuffer, [sourceOffset], [sourceLength] ) : Number  - clear( ) : void  - <USER> [offset], [length] ) : Titanium.Buffer  - copy( sourceBuffer, offset, [sourceOffset], [sourceLength] ) : Number  - fill( fillByte, [offset], [length] ) : void  - insert( sourceBuffer, offset, [sourceOffset], [sourceLength] ) : Number  - release( ) : void  - toBlob( ) : Titanium.Blob  - toString( ) : String","New Feature",High,Closed,"2015-03-27 17:10:03","2015-03-27 17:10:03",13
"The Titanium SDK ","Windows: Implement Ti.UI.OptionDialog","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.UI.OptionDialog    https://msdn.microsoft.com/en-us/windows/apps/windows.ui.popups.messagedialog    It appears a first good implementation would be nearly identical to AlertDialog.  ","New Feature",High,Closed,"2015-03-27 15:28:14","2015-03-27 15:28:14",5
"The Titanium SDK ","Windows: Support curve/easing functions on Animations","We need to respect the curve property set and use that to apply a relevant easing function to the generated animations.  See https://msdn.microsoft.com/en-us/library/ie/windows.ui.xaml.media.animation    I'm not sure which of the *Ease types best applies.",Improvement,Medium,Closed,"2015-03-27 15:16:59","2015-03-27 15:16:59",5
"The Titanium SDK ","Windows: Support animations of height, width and zIndex properties","We need to support animations of the height, width and zIndex properties.",Improvement,Medium,Closed,"2015-03-27 15:14:21","2015-03-27 15:14:21",5
"The Titanium SDK ","Windows: Fire Ti.UI.Animation events","We need to fire the complete and start events for animations.",Improvement,Medium,Closed,"2015-03-27 15:12:49","2015-03-27 15:12:49",5
"The Titanium SDK ","Windows: Support animations of right, center and bottom properties","When implementing Ti.Ui.Aniamtion/Ti.UI.View.animate() I didn't implement bottom/right/center animations - just top/left.    We need to implement bottom/right/center as well, which typically should just involve the same basic code, just referencing different properties of the component for determining the amount to move.",Improvement,Medium,Closed,"2015-03-27 15:11:22","2015-03-27 15:11:22",8
"The Titanium SDK ","Windows: Implement Ti.UI.2DMatrix proxy","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.UI.2DMatrix    Note that Ti.UI.create2DMatrix() takes a special object defined as:  http://docs.<USER>com/titanium/3.0/#!/api/MatrixCreationDict  We should represent that with a struct, much as we do other defined-object abstract types such as Point or Dimension.    This class is used in conjunction with Ti.UI.Animation, which eventually is consumed in the Ti.UI.View.animate() method.    It seems to map 1:1 to https://msdn.microsoft.com/en-us/library/ie/windows.ui.xaml.media.matrixtransform    h2. Properties  - a : Number  - b : Number  - c  : Number  - d : Number  - tx : Number - Amount to move horizontally?  - ty : Number - Amount to move vertically?    h2. Methods  - invert( ) : Titanium.UI.2DMatrix  - multiply( Titanium.UI.2DMatrix m2 ) : Titanium.UI.2DMatrix  - rotate( Number angle, \[toAngle] ) : Titanium.UI.2DMatrix  - scale( Number sx, Number sy, \[toSx], \[toSy] ) : Titanium.UI.2DMatrix  - translate( Number tx, Number ty ) : Titanium.UI.2DMatrix","New Feature",Medium,Closed,"2015-03-27 14:10:39","2015-03-27 14:10:39",13
"The Titanium SDK ","MobileWeb: Preview in browser opens unavailable page","Running a project for Mobile Web open http://127.0.0.1:8020/index.html, which is an unavailable page.    *Steps to reproduce issue*:  1. Create a new project in Studio or via the CLI  2. Run the project for mobile web (Preview in browser)    *Actual Results*:  http://127.0.0.1:8020/index.html is opened in your browser and it is an unavailable page    *Expected Results*:  The app is successfully run in browser    *Notes*:  The project looks to be created correctly and manually opening index.html works fine",Bug,High,Closed,"2015-03-26 23:18:20","2015-03-26 23:18:20",3
"The Titanium SDK ","Windows: Implement Ti.Locale module",http://docs.<USER>com/titanium/3.0/#!/api/Titanium.Locale,"New Feature",Medium,Closed,"2015-03-26 20:43:20","2015-03-26 20:43:20",13
"The Titanium SDK ","Windows: Use Pivot and PivotItem for Tab and TabGroup UI proxies","We currently implement the Tab and TabGroup UI elements in JS up in TitaniumKit. While it works, it's not very typical of the look and feel for a Windows app. The equivalent UI seems to be Pivot and PivotItem:  !https://i-msdn.sec.s-msft.com/dynimg/IC713237.png!  https://msdn.microsoft.com/en-us/library/windows/apps/dn596104.aspx  https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.pivot.aspx  https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.pivotitem.aspx",Improvement,High,Closed,"2015-03-26 17:22:42","2015-03-26 17:22:42",13
"The Titanium SDK ","touchEnabled not true by default","[Documentation says|http://docs.<USER>com/titanium/latest/#!/api/Titanium.UI.View-property-touchEnabled]  that default value of touchEnabled must be true.  This is untrue.    {code:title=index.xml|borderStyle=solid|xml}  <Alloy>   <Window layout=vertical backgroundColor=#ffffff color=#000000 >    <Button onClick=doClick>I'm button, click me</Button>    <Label onClick=doClick>I'm label, click me</Label>    <View onClick=doClick height=Ti.UI.SIZE><Label>I'm view, click me</Label></View>   </Window>  </Alloy>        ",Bug,Critical,Closed,"2015-02-10 15:28:12","2015-02-10 15:28:12",2
"The Titanium SDK ","Windows: Implement Ti.UI.ListView.searchText property for filtering","Setting a ListView's searchText property does nothing right now. It should filter the items based on the search text. Unfortunately Windows doesn't make this easy for us. Looks like we need to filter the collections ourselves under the hood: - http://docs.<USER>com/titanium/3.0/#!/api/Titanium.UI.ListView-property-searchText - http://stackoverflow.com/questions/11642528/windows-metro-app-filtering-listview-and-showing-specific-data-from-list - http://stackoverflow.com/questions/14956999/filtering-and-sorting-of-an-observablecollection-in-listview-binding - http://www.codeproject.com/Articles/527686/A-WinRT-CollectionView-class-with-Filtering-and-So",Improvement,High,Closed,"2015-03-25 18:42:36","2015-03-25 18:42:36",5
"The Titanium SDK ","Windows: Search header isn't visible in directory listing","The search bar/textfield isn't visible in the directory header. We need it ot be able to filter the list.",Bug,High,Closed,"2015-03-25 17:08:24","2015-03-25 17:08:24",5
"The Titanium SDK ","Windows: ListView section headers' labels aren't visible","You can see space for the headers/groupings, but there's nothing visible there.",Bug,High,Closed,"2015-03-25 17:07:04","2015-03-25 17:07:04",5
"The Titanium SDK ","Windows: No way to navigate back to directory from profile in corporate directory app","Once you navigate from the directory into the individual profile for a user, there's no way to navigate back. We _could_ hook up the back hardware button to go back a window, or we could implement something similar to a NavigationGroup/Window (TIMOB-17971).",Bug,Critical,Closed,"2015-03-24 22:13:05","2015-03-24 22:13:05",8
"The Titanium SDK ","Mocha test result sometimes doesn't display at the end of tests","The mocha test result screen, either red or green sometimes doesn't display at the end of testing. This usually happens when testing _ti.ui.layout.test_.",Bug,None,Closed,"2015-03-24 18:57:26","2015-03-24 18:57:26",1
"The Titanium SDK ","Add mocha tests for TableView, ListView and Switch","- Add mocha test for Titanium.UI.TableView  - Add mocha test for Titanium.UI.ListView  - Add mocha test for Titanium.UI.Switch",Improvement,None,Closed,"2015-03-24 00:39:32","2015-03-24 00:39:32",8
"The Titanium SDK ","iOS8: DocumentViewer: Unbalanced calls to begin/end appearance transitions for QLRemotePreviewContentController","h6.Issue Description  We get the following message when loading a pdf in the DocumentViewer component: Unbalanced calls to begin/end appearance transitions for <QLRemotePreviewContentController: 0x173d4e00>. Getting this message is sometimes associated with the app freezing but generally app goes okay anyway.     h6.Sample Code      h6.Console Output  ",Bug,High,Closed,"2015-03-23 22:18:06","2015-03-23 22:18:06",5
"The Titanium SDK ","Windows: Destructor of Label and Module classes cause crashes related to std::unordered_map fields","When running the ti.lui.layout.test section of our mocha tests, after the tests we close a window we opened. This is causing Gc to run and destruct a number of objects. The Label and Module classes are crashing during their destruction, specifically when clear() is called on their std::unordered_map fields.    There is an access violation thrown and the address used is 0xDDDDDDDD, which signifies freed memory. So somehow the map has some internal nodes whose values are already freed?",Bug,Critical,Closed,"2015-03-23 13:53:59","2015-03-23 13:53:59",5
"The Titanium SDK ","Android: Date picker Can't Select Date after year 2100AD","Android: Date picker Can't Select Date after year 2100AD    h5.Steps to reproduce:  1.Run the following code in classic mobile project.  {code:title=app.js}  Ti.UI.backgroundColor = 'white';  var win = Ti.UI.createWindow({    exitOnClose: true,    layout: 'vertical'  });    var picker = Ti.UI.createPicker({    type:Ti.UI.PICKER_TYPE_DATE,    minDate:new Date(2009,0,1),    maxDate:new Date(2200,4,1),    value:new Date(2015,2,23),    top:50,    accessablityLabel: data picker  });    win.add(picker);  win.open();    picker.addEventListener('change',function(e){    Ti.API.info(User selected date:  + e.value.toLocaleString());  });  {code}    h5.Expect Result:  Date should be available to select until the max value     h5.Actual Result:  Date only available to 2100AD, no matter what max value set.    h5.Use case:  For Thailand Buddhist, the year is 543 behind Gregorian year. That is why we need select date after 2100AD.    h5.N.B  Only happened in android device, iOS works well.    ",Bug,High,Closed,"2015-03-23 01:14:07","2015-03-23 01:14:07",5
"The Titanium SDK ","Windows::HTTPClient crashes on firing onreadystatechange after being GCed","When running the mocha tests, I'm seeing some bad behavior from HTTPclient. We fire off requests in tests and continue on and eventually in a a later test (typically the layout suite) we'll get an error stemming from the HTTPClient firing an onreadystatechange callback:        It's in HTTPClient::onreadystatechange in Titaniumkit, where it's testing if the callback is a function. The issue is likely because we've long moved on from the test where the httpclient was generated - I'm thinking maybe it was GCed and we didn't properly cancel and clean up in our destructor.    The request was continuing in an async chain. My best guess is that we need to cancel all outstanding requests when the Windows impl desturctor hits, and null out the callback objects up in the TitaniumKit destructor?",Bug,High,Closed,"2015-03-20 15:01:56","2015-03-20 15:01:56",5
"The Titanium SDK ","Windows: Implement Ti.Geolocation getCurrentHeading and getCurrentPosition methods","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.Geolocation    h2. Methods  - getCurrentHeading      http://docs.<USER>com/titanium/3.0/#!/api/HeadingResponse      http://docs.<USER>com/titanium/3.0/#!/api/HeadingData  - getCurrentPosition    http://docs.<USER>com/titanium/3.0/#!/api/LocationResults    http://docs.<USER>com/titanium/3.0/#!/api/LocationCoordinates    http://docs.<USER>com/titanium/3.0/#!/api/LocationProviderDict    Note that the responses use special objects, we should use structs to hold them like we do for Point/Dimension/Font/etc. Additionally, those objects hold other specialized properties that should _also_ be represented by structs.    ","New Feature",High,Closed,"2015-03-20 13:48:57","2015-03-20 13:48:57",5
"The Titanium SDK ","Windows: Implement Ti.Geolocation constants, properties and accessor methods","This is to ensure we have proper setters/getters set up in TitaniumKit (likely already done for us by stub generation), and then to hook up the relevant properties in the Windows subclass - typically overriding some setters to take action.    h2. Constants  - ACCURACY_BEST R O  - ACCURACY_BEST_FOR_NAVIGATION R O  - ACCURACY_HIGH R O  - ACCURACY_HUNDRED_METERS R O  - ACCURACY_KILOMETER R O  - ACCURACY_LOW R O  - ACCURACY_NEAREST_TEN_METERS R O  - ACCURACY_THREE_KILOMETERS R O  - ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION R O  - ACTIVITYTYPE_FITNESS R O  - ACTIVITYTYPE_OTHER R O  - ACTIVITYTYPE_OTHER_NAVIGATION R O  - AUTHORIZATION_ALWAYS R O  - AUTHORIZATION_AUTHORIZED R O  - AUTHORIZATION_DENIED R O  - AUTHORIZATION_RESTRICTED R O  - AUTHORIZATION_UNKNOWN R O  - AUTHORIZATION_WHEN_IN_USE R O  - ERROR_DENIED R O  - ERROR_HEADING_FAILURE R O  - ERROR_LOCATION_UNKNOWN R O  - ERROR_NETWORK R O  - ERROR_REGION_MONITORING_DELAYED R O  - ERROR_REGION_MONITORING_DENIED R O  - ERROR_REGION_MONITORING_FAILURE R O  - ERROR_TIMEOUT R O  - PROVIDER_GPS R O  - PROVIDER_NETWORK R O  - PROVIDER_PASSIVE R O    h2. Properties  - accuracy  - activityType  - distanceFilter  - hasCompass R O  - headingFilter  - lastGeolocation R O  - locationServicesAuthorization  - locationServicesEnabled R O  - pauseLocationUpdateAutomatically  - purpose  - showCalibration  - trackSignificantLocationChange    h2. Methods  - getAccuracy  - getActivityType  - getDistanceFilter  - getHasCompass  - getHeadingFilter  - getLastGeolocation  - getLocationServicesAuthorization  - getLocationServicesEnabled  - getPauseLocationUpdateAutomatically  - getPurpose  - getShowCalibration  - getTrackSignificantLocationChange  - setAccuracy  - setActivityType  - setDistanceFilter  - setHeadingFilter  - setLocationServicesAuthorization  - setPauseLocationUpdateAutomatically  - setPurpose  - setShowCalibration  - setTrackSignificantLocationChange","New Feature",High,Closed,"2015-03-20 13:46:34","2015-03-20 13:46:34",5
"The Titanium SDK ","Windows: Hook up Ti.Geolocation events","This ticket is to fire the relevant events when applicable for the module.    h2. Events  - authorization  - calibration  - heading  - location  - locationupdatepaused  - locationupdateresumed","New Feature",High,Closed,"2015-03-20 13:45:40","2015-03-20 13:45:40",5
"The Titanium SDK ","Windows: Generate Ti.Geolocation module stub","This involves using our module generator and stubbing out the full API of the module. We should have all the methods and properties set up in TitaniumKit with appropriate getters/setters, and have stubs to fill in for the Windows subclass' actual implementation.    h2. Constants  - ACCURACY_BEST R O  - ACCURACY_BEST_FOR_NAVIGATION R O  - ACCURACY_HIGH R O  - ACCURACY_HUNDRED_METERS R O  - ACCURACY_KILOMETER R O  - ACCURACY_LOW R O  - ACCURACY_NEAREST_TEN_METERS R O  - ACCURACY_THREE_KILOMETERS R O  - ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION R O  - ACTIVITYTYPE_FITNESS R O  - ACTIVITYTYPE_OTHER R O  - ACTIVITYTYPE_OTHER_NAVIGATION R O  - AUTHORIZATION_ALWAYS R O  - AUTHORIZATION_AUTHORIZED R O  - AUTHORIZATION_DENIED R O  - AUTHORIZATION_RESTRICTED R O  - AUTHORIZATION_UNKNOWN R O  - AUTHORIZATION_WHEN_IN_USE R O  - ERROR_DENIED R O  - ERROR_HEADING_FAILURE R O  - ERROR_LOCATION_UNKNOWN R O  - ERROR_NETWORK R O  - ERROR_REGION_MONITORING_DELAYED R O  - ERROR_REGION_MONITORING_DENIED R O  - ERROR_REGION_MONITORING_FAILURE R O  - ERROR_TIMEOUT R O  - PROVIDER_GPS R O  - PROVIDER_NETWORK R O  - PROVIDER_PASSIVE R O    h2. Properties  - accuracy  - activityType  - distanceFilter  - hasCompass R O  - headingFilter  - lastGeolocation R O  - locationServicesAuthorization  - locationServicesEnabled R O  - pauseLocationUpdateAutomatically  - purpose  - showCalibration  - trackSignificantLocationChange    h2. Methods  - forwardGeocoder  - getAccuracy  - getActivityType  - getCurrentHeading  - getCurrentPosition  - getDistanceFilter  - getHasCompass  - getHeadingFilter  - getLastGeolocation  - getLocationServicesAuthorization  - getLocationServicesEnabled  - getPauseLocationUpdateAutomatically  - getPurpose  - getShowCalibration  - getTrackSignificantLocationChange  - reverseGeocoder  - setAccuracy  - setActivityType  - setDistanceFilter  - setHeadingFilter  - setLocationServicesAuthorization  - setPauseLocationUpdateAutomatically  - setPurpose  - setShowCalibration  - setTrackSignificantLocationChange    h2. Events  - authorization  - calibration  - heading  - location  - locationupdatepaused  - locationupdateresumed","New Feature",High,Closed,"2015-03-20 13:44:08","2015-03-20 13:44:08",5
"The Titanium SDK ","Windows: Implement Ti.Geolocation geocoding methods","Note that each method returns a specialized Object as argument to the callback function. We'll need to wrap it in a struct as we do for Font/Point/Dimension. Additionally, the reverseGeocoder response object has a specialized property value that should also be a struct.    h2. Methods  - forwardGeocoder    http://docs.<USER>com/titanium/3.0/#!/api/ForwardGeocodeResponse  - reverseGeocoder    http://docs.<USER>com/titanium/3.0/#!/api/ReverseGeocodeResponse    http://docs.<USER>com/titanium/3.0/#!/api/GeocodedAddress    ","New Feature",High,Closed,"2015-03-20 13:42:43","2015-03-20 13:42:43",5
"The Titanium SDK ","Windows: Implement Ti.Geolocation","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.Geolocation    h2. Constants  - ACCURACY_BEST R O  - ACCURACY_BEST_FOR_NAVIGATION R O  - ACCURACY_HIGH R O  - ACCURACY_HUNDRED_METERS R O  - ACCURACY_KILOMETER R O  - ACCURACY_LOW R O  - ACCURACY_NEAREST_TEN_METERS R O  - ACCURACY_THREE_KILOMETERS R O  - ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION R O  - ACTIVITYTYPE_FITNESS R O  - ACTIVITYTYPE_OTHER R O  - ACTIVITYTYPE_OTHER_NAVIGATION R O  - AUTHORIZATION_ALWAYS R O  - AUTHORIZATION_AUTHORIZED R O  - AUTHORIZATION_DENIED R O  - AUTHORIZATION_RESTRICTED R O  - AUTHORIZATION_UNKNOWN R O  - AUTHORIZATION_WHEN_IN_USE R O  - ERROR_DENIED R O  - ERROR_HEADING_FAILURE R O  - ERROR_LOCATION_UNKNOWN R O  - ERROR_NETWORK R O  - ERROR_REGION_MONITORING_DELAYED R O  - ERROR_REGION_MONITORING_DENIED R O  - ERROR_REGION_MONITORING_FAILURE R O  - ERROR_TIMEOUT R O  - PROVIDER_GPS R O  - PROVIDER_NETWORK R O  - PROVIDER_PASSIVE R O    h2. Properties  - accuracy  - activityType  - distanceFilter  - hasCompass R O  - headingFilter  - lastGeolocation R O  - locationServicesAuthorization  - locationServicesEnabled R O  - pauseLocationUpdateAutomatically  - purpose  - showCalibration  - trackSignificantLocationChange    h2. Methods  - forwardGeocoder  - getAccuracy  - getActivityType  - getCurrentHeading  - getCurrentPosition  - getDistanceFilter  - getHasCompass  - getHeadingFilter  - getLastGeolocation  - getLocationServicesAuthorization  - getLocationServicesEnabled  - getPauseLocationUpdateAutomatically  - getPurpose  - getShowCalibration  - getTrackSignificantLocationChange  - reverseGeocoder  - setAccuracy  - setActivityType  - setDistanceFilter  - setHeadingFilter  - setLocationServicesAuthorization  - setPauseLocationUpdateAutomatically  - setPurpose  - setShowCalibration  - setTrackSignificantLocationChange    h2. Events  - authorization  - calibration  - heading  - location  - locationupdatepaused  - locationupdateresumed",Epic,High,Closed,"2015-03-20 13:40:25","2015-03-20 13:40:25",0
"The Titanium SDK ","CLI: Build errors out if the SDK version in the tiapp.xml & the SDK selected in CLI are different","h5.Steps to reproduce:  1. Make sure the SDK version in your tiapp.xml & the SDK selected in CLI are different.  2. Try to build the app.    h5.Actual Result:  1. The build errors out after the Forking correct SDK command.      h5.Expected Result:  1. The build should not fail & the app should build successfully. ",Bug,High,Closed,"2015-03-20 00:19:25","2015-03-20 00:19:25",3
"The Titanium SDK ","KitchenSink: Upgrade the Facebook module and example","Facebook module has been upgraded. Need to add/replace the Facebook module in the Kitchen Sink as well as the examples.",Improvement,Medium,Closed,"2015-03-19 02:18:32","2015-03-19 02:18:32",3
"The Titanium SDK ","Facebook module: upgrade iOS Facebook SDK and improve requestDialog","There is a request on github that we should expose the 'resultURL' from presentRequestDialog method.     Also, we should upgrade the Facebook sdk in the iOS module from 3.21.1 to 3.23.1.    ",Improvement,High,Closed,"2015-03-18 04:56:20","2015-03-18 04:56:20",5
"The Titanium SDK ","CLI: Modify authentication and analytics in Titanium CLI","In order to aid in integration with the new methods for authentication in use by <USER>CLI, some changes need to be made to the analytics and authentication in the Titanium CLI.    1) Pass token (<USER>environment) to Titanium  2) Select a fixed User ID for PEM to handle analytics  3) Pass a new endpoint to return S3 bucket URL for future modification to registry URL  4) Stub login logout and make these no ops  ",Improvement,High,Closed,"2015-03-17 23:11:27","2015-03-17 23:11:27",5
"The Titanium SDK ","Windows: Support Ti.UI.View border* properties","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.UI.View-property-borderColor  http://docs.<USER>com/titanium/3.0/#!/api/Titanium.UI.View-property-borderRadius  http://docs.<USER>com/titanium/3.0/#!/api/Titanium.UI.View-property-borderWidth    Looks like the simplest way to achieve this stuff is to add the components underneath a Border: https://msdn.microsoft.com/en-us/windows/windows.ui.xaml.controls.border  http://stackoverflow.com/questions/16341788/how-to-clip-content-with-rounded-corners-in-windows-store-app",Improvement,High,Closed,"2015-03-17 00:04:33","2015-03-17 00:04:33",8
"The Titanium SDK ","Windows: Support custom fonts","the corporate directory uses a custom font packaged with the app. We need to be able to support loading this custom font as per http://docs.<USER>com/titanium/3.0/#!/guide/Custom_Fonts and https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.fontfamily.aspx  ","New Feature",High,Closed,"2015-03-13 17:01:42","2015-03-13 17:01:42",8
"The Titanium SDK ","Windows: Fix Mocha test failures for LayoutEngine","http://studio-<USER><USER>org/job/titanium_mobile_windows/lastCompletedBuild/testReport/    Right now, I see failures for:  ",Bug,High,Closed,"2015-03-12 18:23:19","2015-03-12 18:23:19",13
"The Titanium SDK ","Windows: Fix Mocha test failures for Filesystem module","http://studio-<USER><USER>org/job/titanium_mobile_windows/lastCompletedBuild/testReport/    Right now, I see failures for:  ",Bug,High,Closed,"2015-03-12 18:22:33","2015-03-12 18:22:33",8
"The Titanium SDK ","Windows: Fix Mocha test failures for XML module","http://studio-<USER><USER>org/job/titanium_mobile_windows/lastCompletedBuild/testReport/    Right now, I see failures for:  ",Bug,High,Closed,"2015-03-12 18:21:48","2015-03-12 18:21:48",13
"The Titanium SDK ","Parity report: Ignore platform specific APIs from Total API count","Don't include platform specific APIs in the Total API count and platform percentage.",Improvement,Medium,Closed,"2015-03-11 20:25:06","2015-03-11 20:25:06",2
"The Titanium SDK ","Windows: ListView header and grouping isn't working","The ListView implementation we have isn't respecting the grouping of people by first character of last name, nor is it showing any header.See https://github.com/<USER>se/corporate-directory for screenshots of what the iOS version looks like.",Bug,High,Closed,"2015-03-11 19:31:27","2015-03-11 19:31:27",13
"The Titanium SDK ","Windows: HAL crashes on || syntax for method invocation","The Ti.Map.createView call is crashing in an odd way inside HAL in the profile.js controller once you've clicked on a person n the directory listing.    Try out the Corporate example and click a person to see the crash.    The root cause is the following syntax:      Changing it to a straight up createView call doesn't trigger the issue:  ",Bug,Medium,Closed,"2015-03-10 22:09:49","2015-03-10 22:09:49",8
"The Titanium SDK ","Windows: Loading animations on corporate directory don't play nicely","The opening rocket animations for the corporate directory app don't play nicely.",Improvement,Low,Closed,"2015-03-10 20:50:19","2015-03-10 20:50:19",13
"The Titanium SDK ","KitchenSink iOS: Ti.Geolocation throws deprecation warning in AR test","Opening the KS test of Augmented Reality throws the below warning:      *Steps to reproduce issue*:  1. Launch KS  2. Navigate to Phone > Camera > Camera Augmented Reality  3. Notice the above warning in the console    *Expected Results*:  No warning is shown",Bug,High,Closed,"2015-03-10 19:37:50","2015-03-10 19:37:50",3
"The Titanium SDK ","KitchenSink iOS: Camera with overlay throws warning","The KS tests with a camera overlay throw the below warning on open:      *Steps to reproduce issue*:  1. Launch KS  2. Open the Phone > Camera section. Then open any of the following sections: Camera Custom Overlay, Camera Overlay Webview, Camera Augmented Reality.  3. Notice the above warning in the console    *Expected results*:  No Warning is shown  ",Bug,None,Closed,"2015-03-10 19:30:48","2015-03-10 19:30:48",3
"The Titanium SDK ","Windows: Analytics is crashing during second invocation of sendAnalytics method","Running the corporate directory app from the CLI, the app reliably crashes when it tries to send the app.feature event (after having sent an enroll event). Here's the output from the logs during launch:    ",Bug,Critical,Closed,"2015-03-10 18:13:36","2015-03-10 18:13:36",8
"The Titanium SDK ","Windows: CLI should assume default emulator when targeting emulator","The CLI prompts the user to select an emulator by default. We should assume the same default as the AppDeploy cmd uses (which is equivalent to 8-1-1 for us) - without prompting.",Improvement,Medium,Open,"2015-03-09 22:33:42","2015-03-09 22:33:42",1
"The Titanium SDK ","Windows: Module generator is using JSValue return type for methods whose return type is void","If a method returns void according to the docs, we should declare the method as void as well, not returning JSValue.",Bug,Medium,Closed,"2015-03-09 22:30:19","2015-03-09 22:30:19",1
"The Titanium SDK ","Windows: Module generator is using wrong name format for getters","The module generator is not generating the correct name pattern for property getters: i.e. color (incorrect) vs get_color (correct). Same for the equivalent js_* bridge methods.",Bug,Medium,Closed,"2015-03-09 22:29:12","2015-03-09 22:29:12",1
"The Titanium SDK ","Windows: Module generator doesn't generate setters for properties","The module generator is not generating the setter methods for properties, i.e.  {code:cpp}  virtual void set_color(const std::string& color) TITANIUM_NOEXCEPT;  {code}",Bug,Medium,Closed,"2015-03-09 22:27:31","2015-03-09 22:27:31",2
"The Titanium SDK ","Windows: Images in ListView laying out improperly","In the corporate directory app's directory view, the listing of sales engineers has a profile pic for each entry. Those images are mis-aligned.",Bug,High,Closed,"2015-03-09 22:19:49","2015-03-09 22:19:49",5
"The Titanium SDK ","Windows:: JSExport API CreateObject<T>() should be removed","Currently HAL has multiple ways to create JSExport object but basically following two API's are meant to do same thing.        I found there's no reason to keep the first one. It actually has a issue around TIMOB-18461.  ",Story,None,Closed,"2015-03-09 05:57:19","2015-03-09 05:57:19",8
"The Titanium SDK ","Windows: Launching app in emulator is flaky","When building a windows app via the CLI, it sometimes launches fine on the first try. More often it will crash while showing the splash screen and you need to click through the emulator and try to re-launch. It can take several attempts to actually get it launched.",Bug,High,Closed,"2015-03-05 19:35:18","2015-03-05 19:35:18",5
"The Titanium SDK ","Windows: Map Annotations don't always show up on the map","According to the Windows docs, MapIcons aren't guaranteed to be shown, nor are their titles. We also currently ignore the annotation color property. We may want to consider using an ImageView as the actual control instead of a MapIcon to try and ensure it's always shown.    See https://msdn.microsoft.com/en-us/library/windows/apps/xaml/dn792121.aspx",Bug,None,Closed,"2015-03-05 14:53:01","2015-03-05 14:53:01",8
"The Titanium SDK ","Windows: Initial Map region isn't always obeyed","I'm seeing an initial location somewhere in the South Pacific Ocean, in the middle of water, for the following code example:      I'm not sure if it's trying to set the region too early, using the wrong coordinates, or what.",Bug,None,Closed,"2015-03-05 14:49:48","2015-03-05 14:49:48",5
"The Titanium SDK ","Android: Android SDK tools 24.1.2 is listed as not supported","h5.Description    When running ti setup check under Android Environment->Tools if Android SDK Tools version 24.1.2 is installed on the system then it is listed as 'untested version 24.1.2; may or may not work'.    This version has been tested by QE and no issues were found and the vendorDependencies should be updated to reflect this.    h5.Steps To Reproduce    0. Ensure that Android SDK tools 24.1.2 is on your system by install via android sdk manager  1. Run ti setup check    h5.Actual Result    Under Android environment the SDK tools version will be listed as unsupported    h5.Expected Result    Under Android environment the SDK tools version should be listed as supported",Bug,High,Closed,"2015-03-04 21:38:06","2015-03-04 21:38:06",3
"The Titanium SDK ","iOS: Allow launching WatchKit apps on the simulator","ios-sim needs to be updated to allow launching WatchKit apps in the simulator.",Improvement,None,Closed,"2015-03-03 19:05:38","2015-03-03 19:05:38",13
"The Titanium SDK ","CLI: Node 0.12: If the CLI is updated to 3.4.2 before the SDK is updated then you can't install the new SDK","h5.Description    When upgrading to the latest versions of the CLI and SDK if the install <USER>of the user, or Studio, is to first install the CLI and then install the SDK on their system then the user will be unable to upgrade the SDK without first reverting back to the previous version of the CLI.     After installing Titanium@3.4.2-rc2 and attempting to run any ti commands the following will be printed out in the console.        *Notes*    This only occurs if the upgrade <USER>is *Install CLI -> Install SDK*  This only occurs if the Node version is *0.12*  It is also possible to get into this state by installing the SDK and the CLI, then running ti sdk select 3.5.0.GA.  If a user gets into this state then it is impossible for them to be get out of it without having to re-install the CLI    h5.Steps To Reproduce    0. Set your ti sdk select to 3.5.0.GA, ti sdk select 3.5.0.GA  1. Install the latest Titanium CLI, \[sudo] npm install -g titanium@3.4.2-rc2  2. Install the latest SDK, ti sdk install -b 3_5_X -d    h5.Actual Result    2. You will be unable to install the SDK, the command will fail with the above error,    h5.Expected Result    The SDK should be installed successfully with no error.",Bug,High,Closed,"2015-03-03 03:00:23","2015-03-03 03:00:23",5
"The Titanium SDK ","iOS: Allow relative paths when pointing to an extension project","Currently the projectPath in <extensions/> does not accept ~ or relative paths. Add support.",Improvement,None,Closed,"2015-03-02 21:50:45","2015-03-02 21:50:45",5
"The Titanium SDK ","CLI: Warn if using an unsupported Node version","Currently, if you upgrade to Node 0.12 and attempt to build with a pre-3.5.1 SDK, it will fail. This is expected by us, but confusing to the end user.    To fix, we will warn the user that they should downgrade (or upgrade) to a supported node version    # Check the root package.son file for the node range supported  # Compare that against the node version installed.  # If the installed range lies outside the supported range, print a *HIGHLY VISIBLE WARNING* that this node version may not work as expected and encourage them to upgrade (if older) or downgrade (if newer) to a supported node version.",Improvement,High,Closed,"2015-03-02 19:54:04","2015-03-02 19:54:04",8
"The Titanium SDK ","iOS: Allow different deployment targets for extensions","Currently the deployment target set for an app, is also used when building extensions. This should be removed so that the deployment target can be set in the extension's xcode project.",Improvement,None,Closed,"2015-03-02 19:07:47","2015-03-02 19:07:47",1
"The Titanium SDK ","Android: Remove or fix warnings in Titanium SDK","We have a number of warnings in the Titanium SDK for a variety of issues, including deprecation warnings, issues about raw types, etc. We should correct them    # Import Titanium SDK Android projects into Eclipse.  # No warnings or errors should appear.",Bug,High,Closed,"2015-03-02 03:33:55","2015-03-02 03:33:55",3
"The Titanium SDK ","Tooling: Organize parity report platforms","Re-organize the ordering in which the platforms are displayed in the parity report into :  [iphone, ipad, android, windowsphone, blackberry, mobileweb]",Improvement,Medium,Closed,"2015-02-27 19:10:10","2015-02-27 19:10:10",3
"The Titanium SDK ","CLI: Node path resolution should use fs.realpathSync()","In the Titanium CLI (https://github.com/<USER>titanium/blob/master/lib/titanium.js#L90-L103), it needs to resolve the real path to Node.js. As of today, it subprocesses the {{which}} command. This is overly complicated and unnecessary.    A simply, better solution is to just call {{fs.realpathSync()}}.",Improvement,Low,Closed,"2015-02-26 18:45:24","2015-02-26 18:45:24",1
"The Titanium SDK ","Windows: Implement simple linear animations",,Story,None,Closed,"2015-02-26 14:10:46","2015-02-26 14:10:46",13
"The Titanium SDK ","iOS Debugger: Studio hangs with Ti SDK 4.0.0.XXX","Debugging an app in Titanium master (SDK 4.0.0.xxx) does not work from Studio. The app never launches.",Bug,Critical,Closed,"2015-02-25 21:24:49","2015-02-25 21:24:49",8
"The Titanium SDK ","Android: The number of log messages from closing a window increases every time a window is closed","h5.Description    When building an application to device and then opening and closing a window the message 'Window: Window is closed normally'. If the window is opened and closed multiple times then the messaged is printed out equal to the number of times it has been opened and closed.    This is *not a regression* as it occurs in 3.5.0.GA SDK    The logging appears to be coming from line 72 in *android/modules/ui/src/js/window.js*    If the app is packaged and installed onto device then the code at that line is not executed as the if statement does not trigger    For example, see the below log output where I have opened and closed the window 3 times        h5.Steps To Reproduce    1. Add the attached app.js to an existing project  2. Build the app to an Android device  3. Tap the button to open a window  4. Use the Android back button or the 'Close window button' on screen  5. Repeat steps 3 and 4    h5.Actual Result    4. The window will close '\[DEBUG] :  Window: Window is closed normally.' will be printed in the console. As expected  5. For each time you repeat the above steps the number of log message will increase    h5.Expected Result    5. There should only be one of the above log messages shown when a window is closed",Bug,High,Closed,"2015-02-24 20:51:23","2015-02-24 20:51:23",8
"The Titanium SDK ","Android: Add link event to label for use with html and attributedString properties","For sample code and details please look at https://jira.<USER>org/browse/TIMOB-18499","New Feature",High,Closed,"2015-02-24 18:34:18","2015-02-24 18:34:18",5
"The Titanium SDK ","Windows: Convert current corporate directory app into example","The version we currently have in the Examples folder is out of date. We'll need to rebuild with alloy on windows and update the example with the generated files.",Story,None,Closed,"2015-02-24 10:59:36","2015-02-24 10:59:36",3
"The Titanium SDK ","CLI: ti sdk install -b latest installs different version than ti sdk install latest","These commands should be equivalent:    {{ti sdk install latest}}    {{ti sdk install -b latest}} (or {{ti sdk install --branch latest}})    In my tests, however     {{ti sdk install latest}} installs 3.5.0.GA    {{ti sdk install -b latest}} installs 3.4.2.v20141125154126    ",Bug,Low,Closed,"2015-02-20 21:44:12","2015-02-20 21:44:12",5
"The Titanium SDK ","LiveView: Building to an Android emulator fails with [LiveView] File Server unavailable. Host Unreachable","h5.Description    When attempting to build to an Android emulator the build fails with.        I *do not believe this is a regression* as it has been reported in previous versions of LiveView    To workaround just disable LiveView and the build will be fine     Building to device with LiveView works fine and I am able to make changes with no errors  Checking the log output shows that the LiveView server has started           This issue is not reliant on a node version, it occurs in node 0.12 as well as 0.10.32  h5.Steps To Reproduce    1. Build to an Android emulator from Studio with LiveView enabled    h5.Actual Result    The build fails with the error above    h5.Expected Result    The build should not fail and LiveView should be working as expected",Bug,High,Reopened,"2015-02-20 21:38:13","2015-02-20 21:38:13",8
"The Titanium SDK ","Windows: Stub out remaining properties and methods on existing UI proxies for Corporate Directory app","The Corporate directory app uses opacity, animate(), and a series of images on a ImageView to generate a loading animation.    We should at least stub out these properties and methods so that we don't crash when they're referenced.",Story,None,Closed,"2015-02-20 18:17:17","2015-02-20 18:17:17",5
"The Titanium SDK ","Cannot build after upgrade to 3.5.0","h4. Problem Description  Whenever the user attempts to build a project after upgrading to titanium 3.5.0 they now receive this error message, however they can still build on 3.4.1      They have attempted reinstalling the SDK and the command below returns no response    titanium build -p mobileweb -sdk 3.5.0.GA -log-level trace",Bug,High,Closed,"2015-02-19 17:09:55","2015-02-19 17:09:55",3
"The Titanium SDK ","BlackBerry: Remove from SDK Distribution","Remove the packaging of the BlackBerry distribution from the regular SDK.",Story,High,Closed,"2015-02-17 23:12:27","2015-02-17 23:12:27",3
"The Titanium SDK ","CLI: Remove BB from Titanium CLI",,Story,High,Closed,"2015-02-17 23:11:01","2015-02-17 23:11:01",5
"The Titanium SDK ","TiAPI: Create Node-compatible os module API","It'd be useful to create equivalents of some of the core Node modules in Titanium so that users could port/re-use node codebases on mobile devices. Some of the more common modules could map relatively easily to devices, and would be worth investigating.    http://nodejs.org/api/os.html","New Feature",High,Closed,"2015-02-17 22:51:21","2015-02-17 22:51:21",8
"The Titanium SDK ","TiAPI: Create Node-compatible filesystem module API","It'd be useful to create equivalents of some of the core Node modules in Titanium so that users could port/re-use node codebases on mobile devices. Some of the more common modules could map relatively easily to devices, and would be worth investigating.    http://nodejs.org/api/fs.html","New Feature",High,Closed,"2015-02-17 22:51:06","2015-02-17 22:51:06",13
"The Titanium SDK ","TiAPI: Create Node-compatible path module API","It'd be useful to create equivalents of some of the core Node modules in Titanium so that users could port/re-use node codebases on mobile devices. Some of the more common modules could map relatively easily to devices, and would be worth investigating.    http://nodejs.org/api/path.html","New Feature",High,Closed,"2015-02-17 22:50:12","2015-02-17 22:50:12",8
"The Titanium SDK ","Windows: Implement cross-platform mapping of status codes to status text for HTTPClient","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.Network.HTTPClient-property-statusText    We currently implement this in the Windows subclass. But it's really just a standard mapping from integer http codes to the text describing that code. See http://www.restpatterns.org/HTTP_Status_Codes or http://httpstatus.es/",Story,None,Closed,"2015-02-17 22:20:48","2015-02-17 22:20:48",2
"The Titanium SDK ","CLI: When build tools are newer than supported range, warn & build rather than fail","TIMOB-18113 added the ability to specify a specific Android build tools level as well as failing when such tools are newer than the known-supported version. Instead, the tooling should clearly warn the user that they're using a newer version than what is known to work but the build should continue.",Improvement,Medium,Closed,"2015-02-13 22:21:40","2015-02-13 22:21:40",8
"The Titanium SDK ","iOS: Investigate including native extensions in a Titanium project","Investigate injecting native extensions into a titanium app at build time",Story,High,Closed,"2015-02-13 18:48:09","2015-02-13 18:48:09",21
"The Titanium SDK ","Android: Support android *.aar libraries while building module","It will be nice to support android *.aar libraries while building module","New Feature",Critical,Closed,"2015-02-12 16:44:02","2015-02-12 16:44:02",8
"The Titanium SDK ","ImageView - Image Array; fails consistently on Android","When setting the Images array property and allowing the ImageView to display for more than 4 minutes.    * Changing the number of images within the array does not affect the failure  * Changing the location of the source files does not affect the failure  * Changing the duration does not affect the failure  * Changing the size of the Image width and height does not affect the failure  * Having one or more ImageViews each with the same or different numbers of array images does not affect the failure  * Setting a repeatCount does not affect the failure (if the count exceeds the failure point)  * Not having a repeatCount does not affect the failure   * File format of Image does not affect the failure    It appears to be related to a combination of iterations, duration and size - but each attempt to work out the issue results in failure in around 5 minutes or less.    {panel:title=Error message|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1|bgColor=#FFFFCE}OpenGLRenderer: Cannot generate texture from bitmap{panel}    Simplified example code;    {code:title=View|xml}  <ImageView      id=img      backgroundColor=purple,      duration=200,      height=50,      repeatCount=2000,      width=50  />      Simply leaving the animation to continue crashes the image, empties the ImageView to black and shows the error message above in the console each additional iteration.",Bug,High,Closed,"2015-01-15 16:48:08","2015-01-15 16:48:08",8
"The Titanium SDK ","Windows: Database module doesn't properly clean up ResultSets or guard against accessing fields after being closed","We need to do a better job of finalizing result sets for the user, doing so in destructors. We need to check the status of closing the DB to ensure we're really closing it.    If a result set is closed and the user calls field, or fieldByName, it will cause a crash because we don't guard against accessing a finalized prepared statement.",Bug,High,Closed,"2015-02-12 23:11:31","2015-02-12 23:11:31",5
"The Titanium SDK ","iOS: TypeError: Arguments to path.join must be strings","This is a regression. When packaging for iOS, I see the below error. Xcode is still opened and the archive/package is still created, however.        *Steps To reproduce issue*:  1. Create a new project with SDK 4.0.0.v20150212104820  2. Package the project for iOS (either adhoc or for the store)  3. Notice the above error in the console    *Expected results*:  No error is shown    *Notes*:  1. This is a regression as I do not see the error with 3.5.0.GA  2. I get this error with Xcode 6.1.1 as well as 6.2b5",Bug,High,Closed,"2015-02-12 19:09:40","2015-02-12 19:09:40",3
"The Titanium SDK ","Windows: Build fails with CMakeError 'Configuring incomplete, errors occurred'","h5.Description    When building using SDK version 4.0.0.v20150211151855 the build fails with the the CMakeError *Configuring incomplete, errors occurred*          I have attached the build log and the CMake log    If I step back to a SDK 4.0.0.v20150205101324 then the project builds fine. Any build using an SDK after this fails.    h5.Steps to reproduce    0. Ensure you have Titanium SDK from master branch  1. Download the latest SDK using ti sdk install -b master -d  2. Create a new Windows project  3. Build the project    h5.Actual Result    The build will fail with a CMakeError    h5.Expected Result    The build should pass and deploy to device or emulator",Bug,None,Closed,"2015-02-12 03:59:18","2015-02-12 03:59:18",2
"The Titanium SDK ","Android: Update Appcompat Libraries","Update Appcompat libraries.",Improvement,None,Closed,"2015-02-12 00:02:58","2015-02-12 00:02:58",3
"The Titanium SDK ","CLI: Add mocha tests to verify the installed SDKs ","This is for adding unit tests in CLI to verify the installed SDKs detection mechanism.    - Install or Mock up a couple of SDKs in a temp location.  - Set the temp location as one of the location for SDKs.  - Now, CLI should detect the new SDKs and the new temp location as a valid one.  - Remove those temp SDKs  - CLI should detect the change.    We can also add unit tests to verify whether CLI is able to sort the SDKs in the correct order or not.",Story,High,Closed,"2015-02-11 21:28:37","2015-02-11 21:28:37",5
"The Titanium SDK ","LiveView: Set Node 0.10 as minimum supported version","Update the minimum supported version of Node to 0.10.x. Make sure to check for and update any version checks in the code as well as updating the package.json file.",Improvement,Medium,Closed,"2015-02-11 15:50:00","2015-02-11 15:50:00",5
"The Titanium SDK ","node-appc: Set Node 0.10 as minimum supported version","Update the minimum supported version of Node to 0.10.x. Make sure to check for and update any version checks in the code as well as updating the package.json file.",Improvement,Low,Closed,"2015-02-11 15:47:19","2015-02-11 15:47:19",5
"The Titanium SDK ","SDK: Set Node 0.10 as minimum supported version","Update the minimum supported version of Node to 0.10.x. Make sure to check for and update any version checks in the code as well as updating the package.json file.",Improvement,None,Closed,"2015-02-11 15:45:25","2015-02-11 15:45:25",5
"The Titanium SDK ","Set Node 0.10 as minimum supported version across CLI-related projects","Update the various products to specify Node 0.10.x as the minimum supported version, removing all references and checks for earlier Node versions. Projects include CLI, SDK, Alloy, LiveView, node-appc, node-ios-device, etc.",Epic,None,Closed,"2015-02-11 15:41:10","2015-02-11 15:41:10",13
"The Titanium SDK ","LiveView: Incompatible with Node 0.12","After the fixes for TIMOB-18538 are applied, apps will still not build. The {{ti build}} command ends with this error:        Removing the LiveView hook from my ~/.titanium/config.json file eliminates this error and apps build fine, indicating LiveView is the source of this error.",Bug,Critical,Closed,"2015-02-10 21:04:21","2015-02-10 21:04:21",5
"The Titanium SDK ","Docgen inherits platforms incorrectly","When generating documentation using the the append argument some methods and properties are generated incorrectly due to inheritance.    Running the command (after generating titanium windows yaml) :      Produces the following output:    !http://puu.sh/fIah9/c17fa0673a.JPG!      This is due to docgen inheriting *Titanium.UI.View* incorrectly.    ",Bug,None,Closed,"2015-02-10 01:45:18","2015-02-10 01:45:18",5
"The Titanium SDK ","CLI: Fix incompatibilities with Node 0.12","Node 0.12 has been released. The Titanium CLI is not compatible:        To test:    1. Install Node 0.12 (or use a node version manager like {{n}} and set your current version to 0.12)  2. Run a {{ti}} command, such as {{ti setup check}} or {{ti info}}    Perhaps related to async processing or spawning child processes.  Enter {{ti setup}} choose option 2 (or type {{k}}), fails. Choose option 2 again, fails. Choose it a third time and it works; you get the setup check info. However, it doesn't detect my JDK and therefore my Android SDK info. ",Bug,Critical,Closed,"2015-02-09 16:43:45","2015-02-09 16:43:45",8
"The Titanium SDK ","Tooling: CLI Scans Module folders when no modules are declared in tiapp.xml","h4. Expected  That the tooling efficiently builds, skipping over <USER>that are not required    h4. What Happens  Tooling will scan the default module storage location even if no modules are declared in the tiapp.xml    h4. Reproduce  Create an empty project.  Build for device. See that the tooling inventories installed modules even though none are in the tiapp.xml",Improvement,Medium,Closed,"2015-02-06 22:09:30","2015-02-06 22:09:30",8
"The Titanium SDK ","Tooling: CLI Scans Module folders for platforms that are not targeted.","h4. Whats Expected  That tooling only concern itself with modules related to the targeted build platform    h4. What Happens  When building with iOS as the target platform, the tooling scans the default module location in which android modules are stored:        ",Improvement,Medium,Closed,"2015-02-06 21:59:04","2015-02-06 21:59:04",8
"The Titanium SDK ","iOS: Application crash from advertising content in WebView","h6.Issue Description  While attempting to serve <USER>inside a WebView using Google Publisher Tags with an mRaid payload the app crashes.     h6.Steps to replicate  Drop the sample code below in app.js and get it to run at device. Reproduced on iPhone 5s iOS 8.1    h6.Sample Code      h6.Xcode console output 3.5.0.GA SDK  ",Bug,High,Closed,"2015-02-06 16:30:21","2015-02-06 16:30:21",8
"The Titanium SDK ","Windows: Use default publisher-guid when none is given on build","The {{--win-publisher-id}} or {{-I}} option is required for {{ti build}}, so it must be given on every build if not set via {{ti setup}} (TIMOB-16748).    On Android, we use the the {{dev_keystore}} included in the SDK when none is given.    Would it be an option to have a similar approach for Windows and default to the {{00000000-0000-1000-8000-000000000000}} mentioned in the [blog|http://www.<USER>com/blog/2014/12/windows-platform-preview/] for example ?",Improvement,High,Closed,"2015-02-06 14:44:28","2015-02-06 14:44:28",5
"The Titanium SDK ","Windows: Implement Ti.XML","See http://docs.<USER>com/titanium/3.0/#!/api/Titanium.XML","New Feature",High,Closed,"2015-02-05 23:15:16","2015-02-05 23:15:16",13
"The Titanium SDK ","Windows: module generator should allow user to pass in a proxy name to bypass the interactive prompt","I'd like to be able to specify the proxy name as the first argument to avoid having to scroll down through the entries to find it. Prompting is fine if no arg is given.",Improvement,None,Closed,"2015-02-05 20:07:30","2015-02-05 20:07:30",1
"The Titanium SDK ","Windows: module generator should add the create* and js_create* methods for UI proxies to UIModule","When generating a UI proxy like TableViewRow, the createTableViewRow method and js_createTableViewRow aren't added to the TitaniumKit/UIModule.hpp or cpp",Improvement,None,Closed,"2015-02-05 20:06:17","2015-02-05 20:06:17",3
"The Titanium SDK ","Windows: module generator uses bad formatting for generated files","The generated hpp files are using 2 space indents, we use tab characters (and display them as 4-space width); the inner namespace (UI) is not indented, but should be; there's also an empty line between the namespaces, and there shouldn't be; The curly braces should be on the next line, but aren't; The closing of the inner namespace (UI) doesn't have a trailing comment, but should; there's a space after JSExport and there shouldn't be.    Here's what it generates:  {code:cpp}  #ifndef _TITANIUMWINDOWS_TABLEVIEWROW_HPP_  #define _TITANIUMWINDOWS_TABLEVIEWROW_HPP_    #include ../detail/UIBase.hpp    namespace TitaniumWindows {    namespace UI {      using namespace HAL;      /*!      @class        @discussion This is the Titanium.UI.TableViewRow implementation for Windows.      */    class TITANIUMWINDOWS_UI_EXPORT TableViewRow final : public Titanium::UI::TableViewRow, public JSExport <TableViewRow> {  // ...    };  }  }  // namespace TitaniumWindows  #endif // _TITANIUMWINDOWS_TABLEVIEWROW_HPP_      On the cpp side, it's much closer. The inner namespace should be indented, but isn't; and the closing of the inner namespace doesn't have a trailing comment.",Bug,High,Closed,"2015-02-05 18:08:43","2015-02-05 18:08:43",3
"The Titanium SDK ","Windows: module generator doesn't include UI proxy headers into the UI.hpp file","When generating TableViewRow, the Source/UI/include/UI.hpp wasn't modified to add the #include for the TableViewRow.hpp file.",Bug,None,Closed,"2015-02-05 17:58:34","2015-02-05 17:58:34",2
"The Titanium SDK ","Windows: module generator places UI proxies underneath UI subdirectory mistakenly","When choosing a UI proxy like TableViewRow, I noticed it places the cpp under Source/UI/src/UI/TableViewRow.cpp while the others just live under src.  ",Bug,None,Closed,"2015-02-05 17:57:36","2015-02-05 17:57:36",3
"The Titanium SDK ","Windows: module generator assumes wrong name for module header file","I tried to generate TableViewRow and ran into some issues. First the script failed with:      That's because the name is UIModule.hpp, not UI.hpp. Some of our modules use the base name (Gesture.hpp), most append Module (UIModule.hpp, DatabaseModule.hpp) because the name can't match a neamespace name (i.e. Titanium::Database, Titanium::UI).   The module generate should know when to append Module and when not to (or try looking for WhateverModule.hpp and if that doesn't exist fall back to Whatever.hpp).    ",Bug,Critical,Closed,"2015-02-05 17:55:37","2015-02-05 17:55:37",2
"The Titanium SDK ","Windows: Investigate cross-platform require implementation in GlobalObject","From https://github.com/<USER>titanium_mobile_windows/pull/110#discussion_r24169482    It looks to me like we could implement GlobalObject and require entirely cross-platform, but it'd have to defer to using Ti.Filesystem API. Right now that requires us to jump into JS to do so:  {code:cpp}  JSValue Titanium_property = get_context().get_global_object().GetProperty(Titanium);  JSObject Titanium = static_cast<JSObject>(Titanium_property);    JSValue FS_property = Titanium.GetProperty(Filesystem);  JSObject FS = static_cast<JSObject>(FS_property);    JSValue File_property = FS.GetProperty(File);  JSObject File = static_cast<JSObject>(File_property);    auto file = File.CallAsConstructor(path);    JSValue resolve_property = file.GetProperty(resolve);  JSObject resolve = static_cast<JSObject>(resolve_property);    return resolve();  {code}    We were reluctant to do so out of concern for performance/memory overhead of accessing the JS objects/properties/functions and then calling them (and marshaling the values back and forth between c++ types and JSValues).    What is the actual performance overhead involved here? Is it small enough that a cross-platform implementation is of high importance? Is there a way we can use pure C++ and still do this cross-platform (i.e. can we still get a reference/defer to the platform specific implementation of File when we need to)?",Story,Medium,Open,"2015-02-05 15:25:24","2015-02-05 15:25:24",21
"The Titanium SDK ","Android: TiUIWebView.isHTCSenseDevice()","Hi,    One of enterprise customer requested a code review for TiUIWebView.isHTCSenseDevice(). As there is error happened in their production app, but really can't reproduce in dev as the problem only happened serval times in specific device which they do no have.     So for now, They are suck there and ask for a simple code review for TiUIWebView.isHTCSenseDevice().    Attached error log from newRelic. See if there is something we can do.",Bug,High,Closed,"2015-02-05 07:48:21","2015-02-05 07:48:21",3
"The Titanium SDK ","iOS: TabGroup - Support UIEdgeInsets for Tab items so we can have Instagram-like tabs with only images","The default native way to make a custom (image only) tab bar (like the one on instagram) is to use UIEdgeInsets so we can reposition the image inside the Tab when it has no title text.    The best way for making this happen on Titanium is mapping a method and properties, allowing developers to set the Tab Item Insets for the Tab bar image (both for regular as for active images).    There is a property on UIBarItem (UIBarButton item inherits from this class) called imageInsets.    {code:objectivec}  tabBarItem.imageInsets = UIEdgeInsetsMake(6, 0, -6, 0);  {code}    I suggest a Ti method on the Tab object named setImageInsets() in which developers can pass the absolute values for image insets and properly realign images inside the tabs. It would be ideal to have the imageInsets property as well so we can instance the tabs with the proper insets avoiding rendering flicks.    This is the best way to have a native tab bar without using the actual solutions of hiding the tab bar and creating a bunch of custom views on the bottom of the app or using unmaintained modules.    References:    http://stackoverflow.com/questions/10533917/ios-5-custom-tab-bar-image-vertical-alignment  http://stackoverflow.com/questions/26494130/remove-tab-bar-item-text-show-only-image","New Feature",Critical,Closed,"2015-02-04 18:32:54","2015-02-04 18:32:54",3
"The Titanium SDK ","Properly expose Titanium CLI as a NPM API module","Like ALOY-879 same should be done for the Titanium CLI:    ","New Feature",None,Closed,"2014-10-24 13:31:39","2014-10-24 13:31:39",1
"The Titanium SDK ","Map pin not draggable in iOS 8.1.1","h4. Problem Description  A map annotation with draggable set to true is not actually draggable.     h4. Steps to reproduce  Hello, We have tested this issue with iOS 8.1.2 device. We have observed some issue.      h4. Steps to reproduce  1. Create a new project.  2. Enable ti.map module to the project  3. Replace app.js contents with :    4. Run the project in iOS DEVICE running iOS 8.1+     h4. Actual results  The application run with displaying annotation. Tapping on the annotation will display the annotation title and sub title. Now clicking for one second on the annotation will enable the pin to drug and place anywhere in the map.  Now when the pin in drugged and placed on another place, now the mapview moves freely without the pin moving with it.     The pin does not stuck on a new place after it's being dragged.    h4. Extra info  As also raised in this community question https://developer.<USER>com/question/173037/map-pin-draggable-not-working, A map annotation with draggable set to true is not allowing users to move it.    Setting a click event to log the annotations properties confirms that draggable is set to true . My testing has shown that all works fine in iOS 7 and even iOS 8.1.0, but fails in iOS 8.1.1  ",Bug,Medium,Closed,"2014-12-02 10:20:34","2014-12-02 10:20:34",5
"The Titanium SDK ","Incorporate APS SDK 1.1 into Titanium Mobile 5.0.0","Once we have made all the updates for APS 1.1, we should fold back this version of the SDK into titanium_mobile to reduce the number of different active branches in the APS repository.    It would be greatly preferred if in the Titanium SDK build script we referred to a tagged build of the APS SDK and pulled in that version as opposed to checking in artifacts.",Improvement,High,Closed,"2015-02-04 05:19:21","2015-02-04 05:19:21",13
"The Titanium SDK ","Tooling: Remove references to titanium_version.py","We currently have two places we store the version of the SDK:    https://github.com/<USER>titanium_mobile/blob/master/build/titanium_version.py    and    https://github.com/<USER>titanium_mobile/blob/master/package.json    This promotes confusion. We should only refer to the package.json version.     Remove titanium_version and make any references point back to the JSON version instead.",Improvement,High,Closed,"2015-02-04 05:09:29","2015-02-04 05:09:29",8
"The Titanium SDK ","Tooling: Remove Drillbit and Anvil folders from Titanium Mobile","Drillbit is no longer used. Anvil has been moved a separate repo:    https://github.com/<USER>anvil",Story,High,Closed,"2015-02-04 05:06:45","2015-02-04 05:06:45",1
"The Titanium SDK ","TiAPI: Move titanium_mobile master version to 4.0","Update the master branch of titanium_mobile to version 4.0.",Story,High,Closed,"2015-02-03 20:17:34","2015-02-03 20:17:34",2
"The Titanium SDK ","Mac: Cannot build projects - EACCES accessing .log file","After creating a new project (Alloy or Classic) on Mac, I am unable to build the project. I get the below error:      *Steps to reproduce issue*:  1. Create a new project with SDK 3.6.0.v20150203071743  2. Build the project for simulator  3. Notice that the above error is shown and an empty build folder is created.    *Expected Results*:  The project is able to build.    *Notes*:  Cleaning the project has no change on the issue. I was able to make the project build by selecting a 3.5.1 SDK, building, changing the SDK back to 3.6.0.v20150203071743 and building again.",Bug,Critical,Closed,"2015-02-03 18:01:08","2015-02-03 18:01:08",3
"The Titanium SDK ","TiAPI: Ti.UI.ATTRIBUTE_LINK needs to support click events","Is it possible that Ti.UI.ATTRIBUTE_LINK could respond to click events in addition to longpress? It is difficult to explain to users that they see something that looks clickable, but no, they need to longpress it. We end up having to use StyledLabel modules to get this working.",Improvement,Medium,Reopened,"2015-01-15 13:48:32","2015-01-15 13:48:32",8
"The Titanium SDK ","Windows: width property doesn't act properly for some controls","For example, the TextField control doesn't look right when we set a width. We likely need to call minWidth on this control to set the desired width.",Bug,None,Closed,"2015-01-30 21:06:06","2015-01-30 21:06:06",8
"The Titanium SDK ","iOS: Alert dialog issue with persistent set to true","h4. Problem Description  When you have a delay on an alert, with persistent set to true, you will experience a weird glitch when waiting for the alert and you pull down the phone notification window. The alert will appear behind the notification window, when you close the notification window, the alert will disappear. This doesn't happen with iOS 8.x    h4. Steps to reproduce  1. Create a new mobile project Classic Titanium  2. Paste this code into app.js:     3. Run it in iOS 7 (either device or sim).  4. Click on the green square  5. Drop down the phone notification window from the top of the screen.  6. wait until the alert appears behind the current window.  7. Close the Window  8. You will see the alert dissapear.     h4. Extra info  This doesn't happen with iOS8.     There is alternative ways to reproduce this, as well:    1. open app and tap on the green view.   2. wait for the alert to appear.   2. Double tap device home button immediately to go the recent running apps view.   3. tap the app from recent running apps list to make it foreground again.     The issue appears.     Looks like something to do with the way iOS 7 handles window stack.    ",Bug,High,Closed,"2015-01-30 15:11:51","2015-01-30 15:11:51",5
"The Titanium SDK ","Update doc coverage to look at diff between TitaniumKit and TitaniumWindows proxies","Currently, it appears that the doc coverage scripts for Windows use TitaniumKit t determine what modules/classes/methods are implemented. The issue is that for _some_ of the APIs we will implement them there, but for most we will implement the method/setter down in the base classes in TitaniumWindows.    So there's actually two levels of implementation: Whether we've defined the property/method as existing in the TitaniumKit proxy, and whether we've actually implemented it in the Windows implementation. Generally speaking, looking at the Windows implementation for setters is more accurate, but in some cases we may actually have a cross-platform impl up in TitaniumKit. It may be difficult to determine when that is the case (a good first pass my be to look and see if the method is declared final in TK, which means we don't expect subclasses to have to override/implement something).",Story,None,Open,"2015-01-30 14:18:01","2015-01-30 14:18:01",5
"The Titanium SDK ","Android: android lib - Log cat bug causing some logs to disappear","This bug causes some parts of the lines to vanish after the stream is split due to the buffer.    Example would be in this scenario:  Data callback 1:    Data callback 2    The last part of the address, dress: 10.0.3.15, would cause the original code to return, hence that part is not sent out to the logger at all. This causes the json to be incomplete and causing errors.",Bug,High,Closed,"2015-01-30 06:32:03","2015-01-30 06:32:03",5
"The Titanium SDK ","iOS: After a Popover hides, Apps stop getting focus events on Tabs’ windows","When you open a Popover and then hide it you stop getting {{focus}} events on the Tabs and on the Tabs’ Windows. You still get {{focus}} events on the TabGroup itself.    Opening a modal Window and closing it restores the situation to the normal behaviour.    With the attached code as {{app.js}} follow this steps to better understand the issue. Reproduced is also the modal’s restoring effect.    h2. Steps    # Click on the second tab  # Click on the Open popover  # Click on close (or click outside the popover)  # Click on the first tab  # Click on the Open modal button  # Click on the close button  # Click on the second tab    h2. Expected result    {code}  [ERROR] :  Received focus for TabGroup  [ERROR] :  Received focus for Tab 1  [ERROR] :  Received focus for Window 1  [ERROR] :  Received focus for TabGroup  [ERROR] :  Received focus for Tab 2  [ERROR] :  Received focus for Window 2  [ERROR] :  Received focus for TabGroup  [ERROR] :  Received focus for Tab 1       # THIS LINE IS MISSING  [ERROR] :  Received focus for Window 1    # THIS LINE IS MISSING  [ERROR] :  Received focus for Modal  [ERROR] :  Received focus for Window 1  [ERROR] :  Received focus for Tab 1  [ERROR] :  Received close for Modal  [ERROR] :  Received focus for TabGroup  [ERROR] :  Received focus for Window 2  [ERROR] :  Received focus for Tab 2  {code}    h2. Actual result    {code}  [ERROR] :  Received focus for TabGroup  [ERROR] :  Received focus for Tab 1  [ERROR] :  Received focus for Window 1  [ERROR] :  Received focus for TabGroup  [ERROR] :  Received focus for Tab 2  [ERROR] :  Received focus for Window 2  [ERROR] :  Received focus for TabGroup  [ERROR] :  Received focus for Modal  [ERROR] :  Received focus for Window 1  [ERROR] :  Received focus for Tab 1  [ERROR] :  Received close for Modal  [ERROR] :  Received focus for TabGroup  [ERROR] :  Received focus for Window 2  [ERROR] :  Received focus for Tab 2  {code}    h2. Attached code    {code:javascript}  var tabGroup = Ti.UI.createTabGroup({ title: 'TabGroup' });    var window1 = Ti.UI.createWindow({ title: 'Window 1' });  var window2 = Ti.UI.createWindow({ title: 'Window 2' });    var tab1 = Ti.UI.createTab({ window: window1, title: 'Tab 1' });  var tab2 = Ti.UI.createTab({ window: window2, title: 'Tab 2' });    tabGroup.addTab(tab1);  tabGroup.addTab(tab2);    // Modals    var modalButton = Ti.UI.createButton({ title: 'Open modal' });    window1.add(modalButton);    modalButton.addEventListener('click', function () {   var close = Ti.UI.createButton({ title: 'close' });     var modal = Ti.UI.createWindow({ modal: true, title: 'Modal' });     modal.add(close);     modal.addEventListener('focus', onEvent);   modal.addEventListener('close', onEvent);     close.addEventListener('click', function () {    modal.close();   });     modal.open();  });    // Popover    var popoverButton = Ti.UI.createButton({ title: 'Open popover' });    window2.add(popoverButton);    popoverButton.addEventListener('click', function () {   var close = Ti.UI.createButton({ title: 'close' });     var content = Ti.UI.createView({ title: 'Popover Content View' });     content.backgroundColor = 'white';   content.width = 200;   content.height = 200;   content.add(close);     var popover = Ti.UI.iPad.createPopover({ contentView: content });     close.addEventListener('click', function () {    popover.hide();   });     popover.show({ view: popoverButton });  });    // Listeners    [ tabGroup, window1, window2, tab1, tab2 ].forEach(function (view) {   view.addEventListener('focus', onEvent);  });    function onEvent(event) {   Ti.API.error(Received  + event.type +  for  + event.source.title);  }    // Open the tab group    tabGroup.open();  {code}",Bug,High,Closed,"2015-01-29 10:52:39","2015-01-29 10:52:39",8
"The Titanium SDK ","Android: Improve Tabs UI","ActionBar tabs are deprecated in API 21, and the current Appcompat library doesn't work well with tabs pre Lollipop. We need to research ways to improve tabs UI.    ","New Feature",High,Closed,"2015-01-29 21:52:58","2015-01-29 21:52:58",55
"The Titanium SDK ","Windows: Allow Usage of JavaScript against Native Windows APIs","This feature encompasses bringing Hyperloop-style coding to HAL/Windows.",Epic,High,Closed,"2015-01-29 21:26:04","2015-01-29 21:26:04",0
"The Titanium SDK ","Android: Titanium crashes if back button is hit soon enough after app launch","Based on http://developer.<USER>com/question/180283/always-a-crash-race-condition-with-android-back-button    Summary - If you press back fast enough during app open Titanium apps will crash.  Looks like the android back event that causes the app to tear down can cause the root UI element to be null when adding the first Window of the project to it.    This happens on device for the bare minimum installs of Titanium project with or without Alloy.  Easier to repro on Alloy as it takes a bit longer for the app to launch.    TI 3.5.0.GA  Mac Yosemite  Samsung Galaxy S5 and Note3 (and others)    1.  ti create a new android project  2.  cd into root of project  3.  alloy create  4.  ti build -p android -T device --device-id <device>  5.  Important step:  On the device (not simulator), launch app AND IMMEDIATELY start pressing back button.     ** Keep closing and reopening app as fast as you can if you don't see it repro the first time in step 5  **** This happens when a Window is the default/first item created in the Activity as well    Expected -  App closes    Actual -   App crashes and closes    Stack -  01-27 13:32:08.269: E/AndroidRuntime(20104): FATAL EXCEPTION: main  01-27 13:32:08.269: E/AndroidRuntime(20104): Process: com.test, PID: 20104  01-27 13:32:08.269: E/AndroidRuntime(20104): java.lang.NullPointerException  01-27 13:32:08.269: E/AndroidRuntime(20104):  at android.content.ComponentName.<init>(ComponentName.java:77)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at android.content.Intent.<init>(Intent.java:4445)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at ti.modules.titanium.ui.WindowProxy.handleOpen(WindowProxy.java:127)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at org.<USER>titanium.proxy.TiWindowProxy.handleMessage(TiWindowProxy.java:88)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at ti.modules.titanium.ui.WindowProxy.handleMessage(WindowProxy.java:415)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at android.os.Handler.dispatchMessage(Handler.java:98)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at android.os.Looper.loop(Looper.java:146)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at android.app.ActivityThread.main(ActivityThread.java:5678)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at java.lang.reflect.Method.invokeNative(Native Method)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at java.lang.reflect.Method.invoke(Method.java:515)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1291)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1107)  01-27 13:32:08.269: E/AndroidRuntime(20104):  at dalvik.system.NativeStart.main(Native Method)  ",Bug,High,Closed,"2015-01-27 21:39:30","2015-01-27 21:39:30",5
"The Titanium SDK ","Windows: References to Ti.Platform.displayCaps crash apps","The corporate directory app refers to Ti.Platform.displayCaps.dpi, which crashes the app due to our assertion that the display__ field is not null. It appears that we haven't yet properly implemented when/how to populate that variable.",Bug,High,Closed,"2015-01-28 16:38:46","2015-01-28 16:38:46",8
"The Titanium SDK ","Windows: Cmakelist template generated bad paths for nested folders in Resources","There's two issues with the generated CMakeLists.txt from our template:  - nested folders are using slashes in the variable name, rather than replacing all slashes with underscores (only the first is getting replaced, not all slashes)  - The incorrect slash is being used to designate the destination relative path inside the app. We need to use '\', but are using '/'.    As a result when we try to build the app in Visual Studio it will complain about being unable to find files that do exist.",Bug,None,Closed,"2015-01-28 16:35:40","2015-01-28 16:35:40",5
"The Titanium SDK ","Windows: apis.jsca becomes corrupted during generation on CI server","The apis.jsca file generated on Jenkins becomes corrupted by the console output.    Example  !http://puu.sh/f7w1R/9b035ffd1f.PNG!    The script that runs the JSCA generation on Jenkins is located here:    https://github.com/<USER>titanium_mobile/blob/master/site_scons/package.py#L63    Calling:    https://github.com/<USER>titanium_mobile/blob/master/apidoc/docgen.js",Bug,High,Closed,"2015-01-27 23:42:14","2015-01-27 23:42:14",5
"The Titanium SDK ","Generate parameters and types for methods and properties",,Improvement,None,Closed,"2015-01-27 23:35:37","2015-01-27 23:35:37",5
"The Titanium SDK ","Use ejs templates",,Improvement,None,Closed,"2015-01-27 23:34:58","2015-01-27 23:34:58",5
"The Titanium SDK ","Use JSCA file as documentation source",,Improvement,None,Closed,"2015-01-27 23:34:35","2015-01-27 23:34:35",5
"The Titanium SDK ","Android vendor dependency version has to be updated","While trying to build an Android app onto device/emulator, the build consistently failed while packaging the app before it installs the app onto device/emulator.    Here is the command that fails to package the app before it is run.      Later we realized that only Android 4.1.2 is installed on the machine, though Android 5.x is the new minimum for SDK 3.6.0. Digging into further, looks the vendor dependencies for Android are not updated in SDK and that's the reason Studio didn't prompt to install Android 5.x when selected Titanium SDK  is 3.6.x.",Bug,High,Closed,"2015-01-27 18:53:15","2015-01-27 18:53:15",3
"The Titanium SDK ","Android: Add CLI option to override keystore signature algorithm","There is a need to override the keystore signature algorithm. Today we autodetect the signature algorithm using keytool, however there is a scenario where the SHA256withRSA signature algorithm is detected when it should be SHA1withRSA.    A way to deal with this is to simply add a new command line option: {{\-\-keystore\-sigalg}}. It does not have a default value, but the default behavior will be to continue to do what we do today. When the {{\-\-keystore-sigalg}} is specified, it would simply override the detected signature algorithm before calling {{jarsigner}}. This change would take place here: https://github.com/<USER>titanium_mobile/blob/master/android/cli/commands/_build.js#L4096.",Improvement,Medium,Closed,"2015-01-23 22:50:56","2015-01-23 22:50:56",2
"The Titanium SDK ","Android: Picker list rows are not visible","h5.Description    When using a picker list the item rows are not visible, when the rows are long-pressed the item is shown very faintly.    I *believe this is a regression* as it does not occur on 3.5.0.GA or 3.5.1 versions of the SDK. I am unable to reproduce the issue on 5.0 devices, so I also believe that this is OS specific.    Visually the picker has changed between the SDKs too, prior to 3.6.0 the picker appears larger than in 3.6.0        h5.Steps To Reproduce    1. Using the provided code build to a 4.x device using a 3.6.0 version of the SDK    h5.Actual Result    The list picker rows will not be visible, when long-pressed they appear faintly.    h5.Expected Result    The list picker rows should be visible.",Bug,High,Closed,"2015-01-23 19:55:02","2015-01-23 19:55:02",3
"The Titanium SDK ","CLI: Implement SimpleSim or similar functionality in the CLI","To make it easier for command-line users to build apps to the simulator/emulator of choice, we should implement the functionality offered by https://github.com/<USER>simplesim in the CLI directly.","New Feature",Low,Closed,"2015-01-23 16:14:38","2015-01-23 16:14:38",1
"The Titanium SDK ","Android: Text field hint text is not visible on a white background","h5.Description    When using the code below the hint text of a text field is not shown when the background color is set to white, if another background color such as black is used then it is possible to see the hint text.     I believe this *is a regression* as this only occurs in 3.6.0 versions of the SDK, 3.5.1 and 3.5.0.GA SDKs do not show this behavior, the hint text can be seen fine using these.     It *does not occur* on iOS.        h5.Steps To Reproduce    1. Using the provided code build to a device with a 3.6.0 SDK selected.    h5.Actual Result    The hint text of the text fields will not be displayed    h5.Expected Result    The hint text should be displayed",Bug,High,Closed,"2015-01-23 00:13:58","2015-01-23 00:13:58",3
"The Titanium SDK ","Add support for BOOL type","Re-implement support for BOOL type. This was supported in the previous versions of the SDK.    This would fix modules such as [ti.airprint|https://github.com/<USER>modules/ti.airprint] which require BOOL return type.",Bug,High,Closed,"2015-01-22 22:01:40","2015-01-22 22:01:40",5
"The Titanium SDK ","TiAPI: Ti.getVersion returns only the first 3 digits of the version","h6.Issue Description  With the 3.5.0.GA TiSDK the Ti.getVersion() function only returns the first 3 digits of the TiSDK so it returns 3.5.0 even though its using a custom SDK like 3.5.0.GA.FIS TiSDK. It would be great to have this fixed in the next Maintenance release like 3.5.1 if possible.     h6.Test Case      h6.Console Output  ",Bug,High,Closed,"2015-01-22 18:39:26","2015-01-22 18:39:26",8
"The Titanium SDK ","Windows: Improve require implementation","We should use a fully implemented algorithm for our require implementation that generally follows the Node.JS spec: http://nodejs.org/api/modules.html#modules_all_together    Tony L has implemented on top of Titanium APis for Ti.current, and <USER>H implemented in Objective-C. We also had an impl in Hyperloop, all of which we can try and re-use leverage.    https://github.com/<USER>hyperloop/blob/d61131ff1bf828cc9ecc5672a45ba8627bdba974/lib/ios/jsc/templates/source/Module.m#L228",Improvement,None,Closed,"2015-01-21 18:25:29","2015-01-21 18:25:29",8
"The Titanium SDK ","iOS: HTTPClient: setRequestHeader('X-Requested-With', null) ignored in iOS","h6.Issue Description  When a Titanium HTTPClient request is opened and sent, the header X-Requested-With: XMLHttpRequest is sent with the request by default. This usually is not a problem, however, this header currently results in an error message being returned from the particular API that I'm using (shopify API).   I've set this header to null in my controller code, which fixes the problem in Android, but not in iOS as the X-Requested-With header is still being set in iOS.     h6.Test Case      h6.Request Raw Response  {quote}  GET /admin/products.json HTTP/1.1  Host: shopname.myshopify.com  X-Titanium-Id: f2e11973-5eac-4106-b95d-6690ddd8683e  X-Requested-With: XMLHttpRequest  Proxy-Connection: keep-alive  Accept: */*  Accept-Encoding: gzip, deflate  Accept-Language: en-us  Connection: keep-alive  User-Agent: <USER>Titanium/3.4.1 (iPhone Simulator/8.1; iPhone OS; en_US;)  {quote}",Bug,High,Closed,"2015-01-21 18:24:28","2015-01-21 18:24:28",5
"The Titanium SDK ","iOS: Add animation properties springVelocity and dampingRatio","*Summary:*  App developers would like to apply a spring/bounce animation when a view reaches its end-point. This is desired for both translation, rotation, and scale animations.    *Proposed Properties:*  * dampingRatio: Normalized value where {{1.0}} will reach its end-point without overshooting and no bounce/spring effect. A value less than {{1.0}} will overshoot its end-point and apply a spring animation, where the lower the value, the more the view will bounce back and forth until it slows down and reaches its end-point. A value of {{0.0}} will bounce back and forth forever without any damping effect.  * springVelocity: Scale factor where {{1.0}} represents the total spring animation distance traversed in 1 second. The lower the value, the slower the spring effect. The higher the value, the faster the spring animation. For example, {{2.0}} will reach the end-point twice as fast and {{0.5}} will reach the end-point at half-speed.    *Notes:*  In iOS (Swift is the example code I'm using below), there are a few spring based properties that can be added to a UIView animation, for example to get this bounce effect, it's just two properties - https://www.dropbox.com/s/n9dx2yw54kr895a/2015-01-21_08-55-58.mp4?dl=0 :    ","New Feature",Low,Closed,"2015-01-21 14:09:05","2015-01-21 14:09:05",9
"The Titanium SDK ","Windows: Generate an overview of Windows API implementation coverage","It'd be nice to have some HTML page generated that gives a quick overview of how far we are in terms of implementing proxies. It's painful to gather that sort of info by looking through the doc pages. We're already generating YML files and merging it into the JSCA. A single webpage with a rundown of all the classes, properties, methods (and events?) and a simple green/red status would be pretty helpful to quickly glance through and get a high level overview of how far we are.",Story,High,Closed,"2015-01-20 22:11:20","2015-01-20 22:11:20",8
"The Titanium SDK ","Move Travis testing to test Node.js 0.10 and 0.11, and include Node.js 4.1.1 (latest)","0.10 is our new minimum  0.11 is a good test bed for bleeding-edge issues.  io.js is also a good test bed    We should be testing all three of them",Improvement,High,Closed,"2015-01-20 16:33:05","2015-01-20 16:33:05",1
"The Titanium SDK ","CLI: Set Node 0.10 as minimum supported version","We have some existing references to Node 0.8. It's no longer supported, so we should remove them wherever they exist and move them to 0.10 as the minimum version.",Improvement,High,Closed,"2015-01-20 16:31:50","2015-01-20 16:31:50",8
"The Titanium SDK ","iOS: ListView checkmarks fly in from top left when view resizes","When a ListView resizes - e.g. because it's in a PopOver that resizes to make room for the soft keyboard - you can see the checkmark accessories fly in from the top left of their rows.    See attached movie.    h1. Steps to reproduce    * Run the following code on an iPad device (or force soft keyboard on Simulator)  * Click the button to open the PopOver  * Focus the SearchBar to bring the keyboard up so the ListView resizes  * See the checkmarks fly in from left    h1. Code to reproduce        h1. Notes    * The number of items has to be more then fits on the screen",Bug,Critical,Closed,"2015-01-19 13:47:46","2015-01-19 13:47:46",1
"The Titanium SDK ","Windows: Implement Ti.UI.ScrollView","Implement Ti.UI.ScrollView. ScrollView is used by Ti.UI.TabGroup which is used for Titanium default two tab app template. To test this, run all tests under Source/TitaniumKit and Source/Titanium, and also make sure Titanium default app (the NG app) works as expected.","New Feature",High,Closed,"2015-01-20 01:12:26","2015-01-20 01:12:26",13
"The Titanium SDK ","Attributed Text: Ti.UI.ATTRIBUTE_FONT not working","ENVIRONMENT  Mac OS X 10.9.5  Ti CLI: 3.5.0-dev  Titanium SDK 3.6.0.v20150119054128, 3.5.0.GA  Android 5.0, Genymotion emulator, Google Nexus 7 - 4.4.4 - API 19 - 800x1280  iOS 8.1, Xcode 6.1.1, iPhone 6+ simulator    REPRODUCTION:  Run the code below in the iOS simulator and Genymotion emulator using TiSDK 3.6.0.    ACTUAL RESULTS:  The label with the attributed string does not match the second label.  See the 3.6.0 screenshots.    EXPECTED RESULTS:   Both labels should match.  See the 3.5.0 screenshots.    OTHER INFO:  Using AttributedString with the iOS namespace works with 3.5.0.GA but has the same results with 3.6.0.    Change Ti.UI.createAttributedString to Ti.UI.iOS.createAttributedString and Ti.UI.ATTRIBUTE_FONT to Ti.UI.iOS.ATTRIBUTE_FONT    ",Bug,None,Closed,"2015-01-19 22:54:12","2015-01-19 22:54:12",3
"The Titanium SDK ","HAL: Create helper functions/macros for typical argument list type checking/casting in js_* bridge methods","{code:cpp}  JSValue UIModule::js_createSlider(const std::vector<JSValue>& arguments, JSObject& this_object)  {   JSObject parameters = get_context().CreateObject();   if (arguments.size() >= 1) {    const auto _0 = arguments.at(0);    TITANIUM_ASSERT(_0.IsObject());    parameters = _0;   }   return createSlider(parameters, this_object);  }  {code}  we seem to do this pattern a lot where we pull something out of a argument list, cast it, check the type via assertion, etc.    this is a good place to come up with either an inlined helper function or a macro. makes the code more readable and has the advantage for developers to ensure we have a very common pattern for how to do this logic.    From <USER>s review comments here: https://github.com/sgtcoolguy/titanium_mobile_windows/commit/c2d07889a2ca6fbb4f689138252003838a42a7e6#commitcomment-9323187      ",Story,High,Closed,"2015-01-19 18:50:16","2015-01-19 18:50:16",5
"The Titanium SDK ","HAL: Create helper macros for defining TitaniumKit bridge function pairs","I would create macro that does this instead:  {code:cpp}  JSDefineFunction(createTab);    From <USER>s review comments here: https://github.com/<USER>titanium_mobile_windows/pull/88#commitcomment-9323264      ",Story,High,Closed,"2015-01-19 18:47:23","2015-01-19 18:47:23",5
"The Titanium SDK ","HAL: Create helper functions/macros for common property additions to classes","Can't we come up with something like this:  {code:cpp}  JSExportFunction(UIModule,createScrollView);    Advantage is that we force a compile time pattern for the TitaniumKit defined interfaces and it's easier later if we want to change the pattern or add assertions or even compile this code out with our compiler because this method isn't used by the app.    From <USER>s review comments here: https://github.com/sgtcoolguy/titanium_mobile_windows/commit/c2d07889a2ca6fbb4f689138252003838a42a7e6#commitcomment-9323249      ",Story,High,Closed,"2015-01-19 18:44:51","2015-01-19 18:44:51",5
"The Titanium SDK ","LiveView: Throwing error while evaluating Android conditional code on iOS ","h3. Issue    While working on <USER>Studio and running the app on iOS with liveview we are receiving an error related to an Android conditional code which is causing an error to be thrown in the console [INFO] :   [LiveView] Error Evaluating app.js @ Line: 16.    h3. Log        h3. Testcase        h3. Steps to repro    1. Enable liveview  2. Run the testcase in iOS    Expected Result:  The app will open     Actual Result:  The app opens but we receive an error log [INFO] :   [LiveView] Error Evaluating app.js @ Line: 16 related to and android conditional code  ",Bug,High,Closed,"2015-01-19 17:07:16","2015-01-19 17:07:16",8
"The Titanium SDK ","Module using Google Maps SDK works fine when run with 3.4.1.GA crashes with 3.5.0.GA","two years ago I developed an iOS module that wrapped around Google Maps for iOS SDK to return support for Google maps on Titanium projects.    {quote}  https://marketplace.<USER>com/apps/5076?restoreSearch=true#!overview  {quote}    this worked fine and with every major Titanium SDK release I rebuilt, tested and it always worked fine.    I used to run it using      .../3.5.0.GA/titanium.py run        but that doesn't work anymore, instead I run      {quote}  python build.py  {quote}      which works although it will not run in simulator which adds up to development time.    the thing is that when I tried    {quote}  xcrun lipo -info build/...... .a  {quote}    I only got i386        so I had to recreate a new module using the new titanium CLI, change the GUID and add my objective c classes and Google framework setup guide to it.    then after building again I managed to get it to support all architectures, so you may want to update the docs for veteran module developers.        now for the main issue:    I use the module in a 10 lines demo app which just opens a window and adds an instance of Google  maps, I build it with 3.4.1.GA SDK and it runs fine in the simulator. I also used the latest 1.9.1 version of Google's framework    I then simply changed the tiapp.xml to use 3.5.0.GA instead, the simulator opened, I see my debug printouts and then the app crashes, according to xcode it crashes due to a memory release that was not allocated.     {quote}  malloc: *** error for object 0xffcb5f0: pointer being freed was not allocated ***  *** set a breakpoint in malloc_error_break to debug  {quote}    I tried to set the above breakpoint, I tried to see the xcode stack when it crashes but it is of no use, it crashes somewhere in the tile drawing of the Google Maps framework but it will not do so if run through SDK 3.4.1.GA...      Fact is, that from all the components used here the only variable that changed is the Titanium SDK version. so my guess is something in the list of changes of the new SDK broke something and some of the older apps won't work anymore. This module is used by many Titanium developers and is bundled with their published apps.        to sum up:    1. module + SDK 3.4.1.GA + Google SDK 1.9.1 = works  2. module + SDK 3.5.0.GA + Google SDK 1.9.1 = crash  3. xCode project + Google SDK 1.9.1 + sample app = works  4. older module build compiled months ago + SDK 3.5.0.GA = crash        attached is a sample project. it has a module folder with three versions, the 1.9.3 was built with 3.5.0.GA and supports 64-bit, the rest are older 32-bit only created with older SDKs (3.4.0 and earlier)      you will need to get the Google SDK    {quote}  https://developers.google.com/maps/documentation/ios/  {quote}    you will also need to tell the module where to find the google framework in the module.xcconfig file per the module docs        if you need a license key for it drop me an email : canufind1 at gmail",Bug,Critical,Closed,"2015-01-16 09:22:26","2015-01-16 09:22:26",13
"The Titanium SDK ","Windows: Projects can not be deleted if it's built once","Projects can not be deleted if it's built once.    h6. (!) It's a regression since It works in 3.4.1 GA live stack.    h5. Steps To Reproduce  1. Create a project  2. Build for Android device  3. Delete the project from disk    h5. Actual Result  Exception is thrown. Deletion can not be completed.  Please see the attachment for more info.    h5. Expected Result  Project should be deleted without any issues as in 3.4.1 GA.",Bug,High,Closed,"2014-12-17 05:27:31","2014-12-17 05:27:31",5
"The Titanium SDK ","CLI: Analytics - CLI analytic events are not sent if you pass --url flag multiple times","*Details:* If you pass --url flag multiple times when creating a project, then the CLI analytic events are not sent.    *Note:* This is *not a regression* as this issue occurs in both CLI 3.4.1 and 3.5.0-dev (from this [commit|https://github.com/<USER>titanium/commit/c680bf087d696b0e61fb75eb124a2d24caa17827])    *Steps to reproduce:*  1. From terminal, create a Titanium project with multiple --url flags: {{ti create --url bob --url monkeyLord}}  2. Finish the project creation <USER> 3. Next, go to {{~/.titanium/events}}    *Actual:* A JSON file should be at the directory and if you search for url in the JSON file, you will see an array of the specified urls e.g. {{\url\:\[\bob\,\monkeyLord\\]}}.    *Expected:* The JSON file should not be there indicating the CLI analytics events were sent.",Bug,Medium,Closed,"2015-01-16 21:48:47","2015-01-16 21:48:47",3
"The Titanium SDK ","Layout Issue with NG example","See attached image for layout issue where the image is overlapping the label.",Bug,None,Closed,"2015-01-16 21:08:02","2015-01-16 21:08:02",5
"The Titanium SDK ","Android: ImageView with ImageArray, does not fire 'stop' event after repeatCount value has been reached","When using the ImageView with an *array* of images using the *images* property and *repeatCount* set to a non-zero value - the event *stop does not fire*.    The event *start* *does* fire upon starting, however the *stop* event does *not*.    {code:title=View|xml}  <ImageView      id=img      backgroundColor=purple,      duration=200,      height=50,      repeatCount=20,      width=50  />  ",Bug,Medium,Closed,"2015-01-15 16:53:25","2015-01-15 16:53:25",5
"The Titanium SDK ","iOS: App crashes after receiving some push notifications in background","h4. Problem Description  I've discovered a bug where the app crashes when it receives some (3+) push notifications while the iPhone's screen is turned off and the app is in background.    h4. Steps to reproduce   1. Create a new mobile project  2. Add this code to the app via app.js    3. Please replace the ACS keys with your own and the GUID with your own.   4. Install to device    5. Open App  Allow it to retrieve a device token (used below)  6. Send 2 notifications    7. You'll see CALLBACK... in console logs  8. Background app with home button  9. Send 3+ noticiations    10. You should now get the crash in the console        h4. Extra information  After some push notifications, the 'callback' function does not get called anymore. After that, when I turn the screen back on, the app crashes completely with an error in the console.    This happens on at least iPhone 5S, iPhone 6 and iPhone 6 Plus and is a critical bug since it prevents users from receiving important notifications!    I've put together an example app & server and closely documented this issue at: https://github.com/<USER>iOS-Push-Bug    Using this you can reproduce this error on your own.    I'm using SDK 3.4.0.GA btw.",Bug,High,Closed,"2015-01-08 11:49:31","2015-01-08 11:49:31",5
"The Titanium SDK ","Remove developer warnings from build scripts","When reviewing the build output on Jenkins, I noticed some Cmake warnings which it looks like we can/should suppress:    http://studio-<USER><USER>org/job/titanium_mobile_windows/151/consoleFull    This warning is for project developers.  Use -Wno-dev to suppress it.",Story,None,Closed,"2015-01-15 23:45:49","2015-01-15 23:45:49",2
"The Titanium SDK ","Windows: Add Boproperties.ost Signals and Slots to HTTPClient for onload and onerror ",,Improvement,None,Closed,"2015-01-15 22:39:17","2015-01-15 22:39:17",1
"The Titanium SDK ","Regression: Programmatically hiding a PopOver showing a ListView with a SearchBar that has focus results in crash","This ticket is related to TIMOB-17923 and TIMOB-18260. Though TIMOB-18260 fixes the situation where the popover hides because the user taps outside the popover, this ticket is for the situation where the popover is closed programmatically via {{hide()}}.    h2. Steps    1. Build the code to iPad Simulator  2. Click the green button  3. Click the searchbar to focus on the field  4. Click the red button to programmatically hide the popover  5. See it crash    h1. Code        h1. Crash log    ",Bug,Critical,Closed,"2015-01-14 16:12:30","2015-01-14 16:12:30",1
"The Titanium SDK ","iOS8: Option Dialog iPad no longer fires click when clicked outside","h6.Issue Description   When using the 3.5.0.GA TiSDK and iOS 8 if you open an option dialog and then click outside of the dialog it does not fire the dialogs clicked event. When using the 3.4.1.GA TiSDK and iOS 8 it does fire this event.     h6.Test Case      h6.Steps to replicate  # Build with 3.4.1.GA TiSDK, launch on iPad.   # Click anywhere outside of the dialog, notice that the click event is fired.     Then  # Build with 3.5.0.GA TiSDK, launch on iPad.   # Click anywhere outside of the dialog, notice that the click event is NOT fired. EXPECTED: The click event fires when the user clicks outside of the dialog.     h6.Additional Details  On iOS 7 with the 3.5.0.GA TiSDK the dialogs click event is fired. This issue is only present on iOS 8.x. ",Bug,High,Closed,"2015-01-15 00:50:57","2015-01-15 00:50:57",5
"The Titanium SDK ","iOS8: Option Dialog Caret Present on iPad","h6.Issue Description  Using the 3.5.0.GA SDK option dialogs in iOS 8 have a little caret on the left hand side and the dialog is not centered on iPads running iOS 8. This issue is not present in iOS7 (tested iPad 7.1 (11D167)).     h6.Expected behaviour  The dialog should be centered and the caret should not be present.     h6.Test Case  ",Bug,High,Closed,"2015-01-14 19:32:38","2015-01-14 19:32:38",1
"The Titanium SDK ","iOS: Add command-line tests for debugger functionality","We now have Travis compiling the debugger on every check-in. Add a simple suite of tests that once the debugger is compiled:    # Create a simple application  # Set a few breakpoints  # Exercise the debugger against the simulator using the debugging protocol.",Improvement,High,Closed,"2015-01-14 18:28:59","2015-01-14 18:28:59",34
"The Titanium SDK ","Android: Add setCanceledOnTouchOutside, setCancelable methods on Ti.UI.AlertDialog.","Android 4.0 Dialog gets canceled when touched outside of dialog window. But Android 2.3.3 is on the opposite. I tried the following codes but they don't help:    Is it possible to make the developer control more dialog behaviours?",Improvement,None,Closed,"2015-01-08 03:05:14","2015-01-08 03:05:14",0
"The Titanium SDK ","Bug in CLI build script","https://github.com/<USER>titanium_mobile/blob/master/iphone/cli/commands/_build.js#L1423    Should be       ",Bug,Medium,Closed,"2015-01-13 08:21:38","2015-01-13 08:21:38",2
"The Titanium SDK ","iOS: Project with services enabled shows error when Run for iTunes Sync","This is not a Regression as the issue exists atleast as far back as 3.2.3.GA    Steps to Reproduce:  1. In <USER>Studio, create a new project with services enabled  2. Go to Run As > iTunes Sync    Actual Result:  The project build successfully and synced to iTunes but an error alert is shown in Studio related to Uploading debug symbols has encountered a problem. Check the attached screenshot.    Expected Result:  The error should not be shown",Bug,None,Closed,"2015-01-13 07:47:02","2015-01-13 07:47:02",1
"The Titanium SDK ","iOS, KitchenSink: Autocorrect when adding contact results in wrong contact name","When adding contacts with auto-correct on, the name gets autocorrected. However, when adding the contact, the original, not auto-corrected name is used.  This is a regression as names are added by the auto-corrected name in 3.4.1.GA    *Steps to reproduce issue*:  1. Run the KitchenSink app  2. Go to Phone -> Contacts -> Add Contact  3. Enter a name that will be auto-corrected and add the contact  4. Go to the device's contacts  5. Notice that the original name was used when adding the contact, not the auto-corrected name.    *Expected Results*:  The auto-corrected name is used for the contact    *Notes*:  This is a regression.",Bug,High,Closed,"2015-01-12 19:46:56","2015-01-12 19:46:56",3
"The Titanium SDK ","Allow for custom build path","It would be great if we could specify a custom build path, rather than ./build    Scenarios:  With iOS requiring a Mac, and WinMo requiring Windows, having two computers and one codebase is going to become common. It would be nice to have code on a network share, while building/compiling to the computer's local storage... without having to use source control as a method of data transfer.    Also, for computers that have a small, fast SSD and a big slow HD, it would allow us to build to the fast SSD while using the HD for code storage.    This could also be a possible workaround for people that run into TIMOB-18285 even after the changes.","New Feature",Medium,Closed,"2015-01-12 18:41:11","2015-01-12 18:41:11",5
"The Titanium SDK ","Android: leftTrackImage on slider is not being applied","h4. Problem Description  Slider with left track image set still displays the default slider on android, this works on iOS.    h4. Sample Code    Image attached.    h4. Expected Result  Custom slider should be shown    h4. Actual Result  Default slider is shown",Bug,High,Closed,"2015-01-12 17:16:55","2015-01-12 17:16:55",8
"The Titanium SDK ","iOS: Crashes when accessing certain information of a contact via the contacts picker","h5.Description    When attempting to access certain information of a contact the app crashes and the below is output in the console, the file attached as crash.txt shows the crash log given. It is the same for all crashes.    The information that crashes the application is as follows    * Anything related to birthday, including Islam, Hebrew and Chinese  * Any social profile including  ** Twitter  ** Facebook  ** Flickr  ** LinkedIn  ** Myspace  ** Sina Weibo  * Ringtone  * Game Center    *Notes*   The *native behavior* when accessing these through the *Apple contacts app* is that they all open external applications such as  * any social media opens the web browser  * birthdays open the calendar  * ringtone opens a menu to change the ringtone    When selecting Anniversary the app does not crash and simply returns the date, it is only for information pertaining to birthdays that the app crashes on. This was fixed in TIMOB-18359    When the app is asked to return any information stored in the 'instant message' section it returns it in the format as below       for example      *STUDIO CONSOLE LOG*      h5.Steps To Reproduce    1. Install KitchenSink to a device  2. Navigate to Phone->Contacts->Contacts Picker  3. Ensure that 'Stop on property' is enabled  4.. Find a contact with any of the above    h5.Actual Result    When selecting these the app will crash    h5.Expected Result    The app should not crash, the external applications should open (*in parity with native behaviour*) *or* the data should be displayed as normal (*in parity with Titanium existing behavior*)",Bug,High,Closed,"2015-01-10 01:17:09","2015-01-10 01:17:09",8
"The Titanium SDK ","Remove iOS and Android detection from node-appc and ti info","The iOS and Android detection code in node-appc is very old and flagged for deprecation by TIMOB-18351.    In Titanium CLI 4, we will remove these modules from node-appc. This means that {{ti info}} will no longer report iOS or Android information when there is not a selected Titanium SDK. Furthermore, Titanium CLI 4 will need to drop support for Titanium SDK 3.1.x and older.    The main reason here is the detected values in from node-appc's code is not the same as what the current code detects. For example, iOS Simulators are now based on a GUID whereas Titanium SDK 3.0 & 3.1 the iOS Simulator selection is based on {{--sim-version}}, {{--sim-type}}, {{--retina}}, and so on.",Improvement,Medium,Closed,"2015-01-09 04:40:42","2015-01-09 04:40:42",1
"The Titanium SDK ","Deprecate iOS and Android modules in node-appc","The iOS and Android versions in node-appc are very old and out-of-date. The logic for these were moved into the Titanium SDK. These modules should be deprecated in node-appc.    However, {{ti info}} still references this old code when no Titanium SDK is selected or Titanium SDK 3.0/3.1 is selected. Titanium SDK 3.0 & 3.1 requires this code to still exist.    So, this ticket describes the deprecation messages that should be added to the {{ti info}} command as well as deprecation messages whenever Titanium SDK 3.0 or 3.1 is the selected sdk (via config or {{--sdk}}).    Note: there is a separate ticket to remove these modules from node-appc for the Titanium 4 release: TIMOB-18352.    ",Improvement,Medium,Closed,"2015-01-09 04:35:16","2015-01-09 04:35:16",5
"The Titanium SDK ","iOS: Reproducible crash with remote images in ListView","h5.Description    *I believe that I am able to reproduce this crash, I have seen the crash 3 times while performing the steps to reproduce and all 3 times give me the same crash.*    It *is not a regression* as I have seen it occur in 3.4.1.GA.    I am experiencing a crash in KS->Base UI->Views->List View->Remote Images in ListView. While scrolling back and forth through the app quickly I regularly see crashes, I have attached the crash logs as crash2.txt.    h5.Steps To Reproduce    1. Install KitchenSink from master branch onto an iOS device  2. Navigate to Base UI->Views->List View->Remote Images in ListView  3. Accept the message and then scroll back and forth through the app quickly. It make take a little time but the app should crash    h5.Actual Result    The app will crash    h5.Expected Result    The app should not crash",Bug,High,Closed,"2015-01-09 02:21:05","2015-01-09 02:21:05",8
"The Titanium SDK ","Android: Unable to run KitchenSink on Genymotion emulators","This is not a regression as it is reproducible with titanium sdk 3.4.1    Steps to reproduce:  1. Import kitchen sink sample and set the appropriate sdk version  2. Run the app on genymotion emulator    Actual Results:  2.The following error occurs      Expected Results:  2. App should successfully install and launch on to the emulator.    Note: Kitchen sink sample app can be successfully run on iOS simulator, device and android device.",Bug,Low,Closed,"2014-12-23 08:33:58","2014-12-23 08:33:58",5
"The Titanium SDK ","Alloy projects open, then immediately close on Windows Phone emulator","I can build and run a two-tabbed default classic project (created with {{ti new}}) just fine. However, I cannot run a stock default new alloy project. It builds, opens, and immediately closes. After just a brief moment, the build script ends and returns to the prompt with the following:        (With a classic app, the build command doesn't exits and I continue to get log output from the emulator.)    I can’t open the app from the emulator’s app screen either — again, it opens and immediately closes.    I have tried simplifying the app to simply one label in a window with no styling applied and get the same results.    {code:title=index.xml}  <Alloy>     <Window class=container>        <Label id=label>Hello, World</Label>     </Window>  </Alloy>  {code}    FYI, to install the Windows branch of Alloy, use:  {{npm install -g git://github.com/<USER>alloy.git#windows}}  ",Bug,High,Closed,"2015-01-08 21:55:59","2015-01-08 21:55:59",13
"The Titanium SDK ","iOS: HTTPClient - Content-Type header is malformed when making a multipart/form-data POST request","*Details:* Content-Type header is malformed when making a multipart/form-data POST request.    *Note:* This is *not a regression* as this occurs in 3.4.1.GA.    *Steps to reproduce:*  1. Create a Titanium app with the app.js attachment and include cricket.wav attachment in the Resources folder  2. In app.js, on line 13, replace {{<MACHINE_IP>}} with your machine's IP address; your device and machine should be on the same wifi network  3. Install app to device  4. Next, download local_server.js attachment and run it via terminal: {{node local_server.js}}  5. In the app, press the button    *Actual:* In terminal, the boundary parameter is not immediately after Content-Type multipart/form-data:    *Expected:*  The boundary parameter should be immediately after Content-Type multipart/form-data",Bug,High,Closed,"2015-01-07 23:02:51","2015-01-07 23:02:51",5
"The Titanium SDK ","Windows: Error during compilation - TypeError: Cannot read property 'visualstudio' of undefined","Brand new install, get this error on a brand-new CLI created project (ti create -p windows):        The only thing that was odd about this install was that I installed everything while running Windows 8.1.... Home? I updated to Windows 8.1 Pro after getting an error about hyper-v not being supported on my edition of Windows. Don't know if it's related.    I tried creating a new project with Ti 3.6.0.v20150107091442 on an existing VMWare install, and it's working there... so it's not this version of the SDK creating a bad project.",Bug,High,Closed,"2015-01-07 22:55:09","2015-01-07 22:55:09",5
"The Titanium SDK ","Add documentation for already-implemented Windows APIs","In TIDOC-2011, we created the ability to overlay YAML documentation from multiple sources.    For this ticket we need to do the following:    * Copy a similar documentation structure from https://github.com/<USER>titanium_mobile/tree/master/apidoc into https://github.com/<USER>titanium_mobile_windows, which likely means the creation of an apidoc folder.  * For the implemented proxies, create a corresponding shell .yml file that contains the Windows platform addition, as well as any additional descriptions or notes as appropriate.  * As a follow-on ticket, a way to automatically generate this documentation through a script or tool.",Story,High,Closed,"2015-01-07 19:14:56","2015-01-07 19:14:56",8
"The Titanium SDK ","iOS: Allow manual addition of WatchKit/Share Extension to Titanium application","We need to investigate building a native share extension (and/or WatchKit app) and package that with a Titanium application.    This should result in the ability for an end user to drop this compiled piece into a Titanium project, and the CLI will understand how to package it correctly as part of the generated application",Improvement,High,Closed,"2015-01-07 17:27:36","2015-01-07 17:27:36",21
"The Titanium SDK ","iOS: App crashes on deleting last row of tableview","{code:xml}  Operating System    Name                        = Mac OS X    Version                     = 10.10.2    Architecture                = 64bit    # CPUs                      = 8    Memory                      = 17179869184  Node.js    Node.js Version             = 0.10.26    npm Version                 = 2.0.2  Titanium CLI    CLI Version                 = 3.4.1  Titanium SDK    SDK Version                 = 3.5.0.RC    SDK Path                    = /Volumes/Data/Users/sebastian/Library/Application Support/Titanium/mobilesdk/osx/3.5.0.RC    Target Platform             = iphone  {code}    Deleting the last row of a tableview crashes the app completely and very hard    Testcase:  {code:javascript}  var win = Ti.UI.createWindow();    var data = [];  for (var i = 0; i < 10; i++) {      data.push(Ti.UI.createTableViewRow({          title: 'row ' + i      }));  }    var tableView = Ti.UI.createTableView({      editable: true,      data: data  });    win.add(tableView);  win.open();  {code}    Error on deleting the last row    {code:xml}  [ERROR] :  The application has crashed with an uncaught exception 'NSRangeException'.  [ERROR] :  Reason:  [ERROR] :  *** -[__NSArrayM objectAtIndex:]: index 19 beyond bounds [0 .. 18]  [ERROR] :  Stack trace:  [ERROR] :    [ERROR] :  0   CoreFoundation                      0x2736149f <redacted> + 126  [ERROR] :  1   libobjc.A.dylib                     0x34b78c8b objc_exception_throw + 38  [ERROR] :  2   CoreFoundation                      0x272759e1 <redacted> + 0  [ERROR] :  3   TestApp                      0x000ec063 TestApp + 53347  [ERROR] :  4   TestApp                       0x0016d001 TestApp + 581633  [ERROR] :  5   TestApp                        0x001786a3 TestApp + 628387  [ERROR] :  6   UIKit                               0x2a913243 <redacted> + 358  [ERROR] :  7   UIKit                               0x2aa11715 <redacted> + 268  [ERROR] :  8   UIKit                               0x2a9ee685 <redacted> + 8348  [ERROR] :  9   TestApp                        0x00176fa3 TestApp + 622499  [ERROR] :  10  UIKit                               0x2aa06413 <redacted> + 142  [ERROR] :  11  UIKit                               0x2aadfee5 <redacted> + 68  [ERROR] :  12  UIKit                               0x2a8549fb <redacted> + 70  [ERROR] :  13  UIKit                               0x2a8549a1 <redacted> + 44  [ERROR] :  14  UIKit                               0x2a83f613 <redacted> + 582  [ERROR] :  15  UIKit                               0x2a85440d <redacted> + 588  [ERROR] :  16  UIKit                               0x2a8540e7 <redacted> + 522  [ERROR] :  17  UIKit                               0x2a84d9b1 <redacted> + 544  [ERROR] :  18  UIKit                               0x2a82415d <redacted> + 196  [ERROR] :  19  UIKit                               0x2aa97ab9 <redacted> + 13888  [ERROR] :  20  UIKit                               0x2a822bb9 <redacted> + 1296  [ERROR] :  21  CoreFoundation                      0x27327d57 <redacted> + 14  [ERROR] :  22  CoreFoundation                      0x27327167 <redacted> + 218  [ERROR] :  23  CoreFoundation                      0x273257cd <redacted> + 772  [ERROR] :  24  CoreFoundation                      0x272733c1 CFRunLoopRunSpecific + 476  [ERROR] :  25  CoreFoundation                      0x272731d3 CFRunLoopRunInMode + 106  [ERROR] :  26  GraphicsServices                    0x2e62b0a9 GSEventRunModal + 136  [ERROR] :  27  UIKit                               0x2a882fa1 UIApplicationMain + 1440  [ERROR] :  28  TestApp                       0x000e7f1b TestApp + 36635  [ERROR] :  29  libdyld.dylib                       0x350f8aaf <redacted> + 2  [ERROR] :  *** Terminating app due to uncaught exception 'NSRangeException', reason: '*** -[__NSArrayM objectAtIndex:]: index 19 beyond bounds [0 .. 18]'  [ERROR] :  *** First throw call stack:  [ERROR] :  (0x2736149f 0x34b78c8b 0x272759e1 0xec063 0x16d001 0x1786a3 0x2a913243 0x2aa11715 0x2a9ee685 0x176fa3 0x2aa06413 0x2aadfee5 0x2a8549fb 0x2a8549a1 0x2a83f613 0x2a85440d 0x2a8540e7 0x2a84d9b1 0x2a82415d 0x2aa97ab9 0x2a822bb9 0x27327d57 0x27327167 0x273257cd 0x272733c1 0x272731d3 0x2e62b0a9 0x2a882fa1 0xe7f1b 0x350f8aaf)  {code}",Bug,High,Closed,"2015-01-06 16:30:58","2015-01-06 16:30:58",5
"The Titanium SDK ","iOS: Facebook dialog cannot set orientation to landscape mode in iOS 8.0","Facebook dialog cannot set orientation to landscape mode in iOS 8.0, but on iOS 7.1 it works fine. My app is forced to landscape mode but Facebook dialog always pops up to portrait mode.    h5. TEST CODE:    ",Bug,High,Closed,"2014-11-13 09:26:42","2014-11-13 09:26:42",3
"The Titanium SDK ","Windows: Changing function parent did not work","Related to #12 . Opened this so that we can trace this issue.    ",Bug,High,Closed,"2015-01-06 21:00:44","2015-01-06 21:00:44",8
"The Titanium SDK ","Windows: Ti.UI.createXX should return an Object, not a Function","Noticed that `Ti.UI.createXXX` function returns JS Function. Shouldn't it return JS Object because API doc says Creates and returns an *instance of* XX?  It prevents from writing a unit test against object like `should(view).be.an.Object;`.    How to reproduce:    ",Bug,High,Closed,"2015-01-06 20:59:54","2015-01-06 20:59:54",8
"The Titanium SDK ","Windows: JSValue context issue","Parroting bug discovered by @garymathews in #23:    > There's a bug with JSValue that prevents it's value being set from another context due to the 'new' context overwriting the one the JSValue was created with. Shouldn't we be retaining the context and just setting the value?    *Example*  ",Bug,High,Closed,"2015-01-06 20:58:42","2015-01-06 20:58:42",13
"The Titanium SDK ","Windows: Module crashes at destructor","TitaniumKit Module instance crashes as soon as its destructor is fired.        This crashes at UI::Button destructor. Tested on Windows Store app, 100% reproducible.        I'll push a new PR which demonstrates this issue.",Bug,Critical,Closed,"2015-01-06 20:57:22","2015-01-06 20:57:22",8
"The Titanium SDK ","Windows: Need to support UTF-8 characters","Need support for UTF-8 characters.        should be...",Bug,High,Closed,"2015-01-06 20:52:00","2015-01-06 20:52:00",5
"The Titanium SDK ","Windows: Custom class issue due to WebKit Bug #135250","Related to PR #12 (https://github.com/<USER>titanium_mobile_windows/pull/12). Added new issue entry for this so that we can track this.    We may need a workaround for [WebKit Bug 135250|https://bugs.webkit.org/show_bug.cgi?id=135250]  Currently some unit tests are failing on Yosemite. Maybe on specific version of iOS 8 too.",Bug,High,Closed,"2015-01-06 20:47:49","2015-01-06 20:47:49",13
"The Titanium SDK ","Windows: Fix Travis to catch missed compiler error and warnings","I encountered one compiler error and four compiler warning when when I ran `Source/TitaniumKit/build_and_test.sh` after our December 23 release. on OS X. We should investigate why Travis didn't catch these issues for us. See PR #68 for the fix.",Story,Medium,Closed,"2015-01-06 20:46:31","2015-01-06 20:46:31",3
"The Titanium SDK ","Windows: Move Duplicate Titanium::TiModule Into Existing Titanium::Module","I just noticed that a TitaniumKit class `Titanium::TiModule` was introduced that duplicates the existing module `Titanium::Module`. The code from `Titanium::TiModule` should be moved to `Titanium::Module` and then `Titanium::TiModule` should be deleted.    Existing `Titanium::Module`: [Module.hpp|https://github.com/<USER>titanium_mobile_windows/blob/master/Source/TitaniumKit/include/Titanium/Module.hpp] and [Module.cpp|https://github.com/<USER>titanium_mobile_windows/blob/master/Source/TitaniumKit/src/Module.cpp]    Duplicate `Titanium::TiModule`:  [TiModule.hpp|https://github.com/<USER>titanium_mobile_windows/blob/master/Source/TitaniumKit/include/Titanium/TiModule.hpp] and [TiModule.cpp|https://github.com/<USER>titanium_mobile_windows/blob/master/Source/TitaniumKit/src/TiModule.cpp]",Story,High,Closed,"2015-01-06 20:44:29","2015-01-06 20:44:29",5
"The Titanium SDK ","iOS: Dialog arrow starts in center instead of at edge of view","The (screenshots of the) next example taken from the docs shows that since 3.5.0.RC dialog arrows like those of a PopOver start from the centre of the (now required) view passed to the {{show()}} method, while before it pointed to the relevant side of the view.    The old behaviour should be restored or made configurable and documented.    ",Bug,Critical,Closed,"2015-01-06 13:41:02","2015-01-06 13:41:02",3
"The Titanium SDK ","Run ctest tests on CI build of HAL",,Story,Medium,Closed,"2015-01-06 14:40:07","2015-01-06 14:40:07",5
"The Titanium SDK ","Run ctest tests on CI build of titanium_mobile_windows",,Story,Medium,Closed,"2015-01-06 14:39:58","2015-01-06 14:39:58",3
"The Titanium SDK ","iOS: Debugger crashed when variable is changed to another variable","When variable is changed to another variable, Debugger crashes.    h6. It's a regression since it works in 3.4.1 GA    h5. Steps to reproduce  1. Create a classic project  2. Copy following code in app.js file  {code}  var y = {foo:'bar'};    var win = Titanium.UI.createWindow({        title:'Tab 1',      backgroundColor:'#fff'  });    var b = Ti.UI.createButton({   title:Shadowing,   width:140,   height:40,   top:260  });  b.addEventListener('click',function() {   var x = foo;   Ti.API.info(Shadow x: +x);  });  win.add(b);  win.open();  {code}  3. Place a breakpoint in line 15 ( @ var x = foo; statement)  4. Debug in iOS device  5. Press the Shadowing button to trigger the breakpoint  6. In the Variables pane, change value of x to y (not string; variable) by double-clicking in the Value column     7. Repeat the Step 6 again.    h5. Actual Result.      h5. Expected Result  ",Bug,Critical,Closed,"2015-01-06 08:00:28","2015-01-06 08:00:28",5
"The Titanium SDK ","iOS: Debug - Variable changed to another object variable doesn't show its properties in variables view","When variable is changed to another object variable, It doesn't show its properties in debug variable view. Please see the attachment to see the variables view in Studio.  h6. It's a regression since it works in 3.4.1 GA    h5. Steps to reproduce  1. Create a classic project  2. Copy following code in app.js file  {code}  var y = {foo:'bar'};    var win = Titanium.UI.createWindow({        title:'Tab 1',      backgroundColor:'#fff'  });    var b = Ti.UI.createButton({   title:Shadowing,   width:140,   height:40,   top:260  });  b.addEventListener('click',function() {   var x = foo;   Ti.API.info(Shadow x: +x);  });  win.add(b);  win.open();  {code}  3. Place a breakpoint in line 15 ( @ var x = foo; statement)  4. Debug in iOS device  5. Press the Shadowing button to trigger the breakpoint  6. In the Variables pane, change value of x to y (not string; variable) by double-clicking in the Value column     7. Expand the x    h5. Actual Result.      h5. Expected Result  ",Bug,Critical,Closed,"2015-01-06 07:53:55","2015-01-06 07:53:55",5
"The Titanium SDK ","Windows: No emulators found when trying to build project","trying to build a project via the command line for windows.  I just applied the Visual Studio Project update 4 to visual studio professional.  I can successfully build a native project in Visual Studio 2013 with emulator 8-1-*.    Now when I try to build on command line using the command:     ti build -p windows -T wp-emulator -C 8-1-1 --wp-publisher-guid [GUID]    I get the error no Windows Phone Emulators found    no emulators are listed either when I run ti info    ",Bug,High,Closed,"2015-01-05 17:24:44","2015-01-05 17:24:44",8
"The Titanium SDK ","Windows: ti.cloud - If a Titanium app has ti.cloud module in the tiapp.xml, then the project cannot build for Windows","*Details:*  If a Titanium app has ti.cloud module included in the tiapp.xml, then the project cannot build for Windows emulator or device.    *Steps to reproduce:*  1. Create the default Titanium and make sure *only* the ti.cloud module is included in the tiapp.xml:    2. Build to emulator {{ti build -p windows -T wp-emulator}} *or* device: {{ti build -p windows -T wp-device}}  3. Input your publisher guid (if prompt is enabled)  4. If installing to emulator, select an emulator    *Actual:* longjohn error will be returned; see attachment for build error.  *Expected:* longjohn error should not be returned.  ",Bug,High,Closed,"2014-12-23 22:28:22","2014-12-23 22:28:22",13
"The Titanium SDK ","Windows: Build - Cannot build for Windows emulator or device when path exceeds 260 characters","*Details:* Cannot build to Windows emulator or device from Windows OS 8.1.    *Note:* This issue was only reproducible on *one* particular QE Windows machine. The other QE Windows machine (not reproducing this issue) had the same setup except it was running Visual Studio Community 2013 Update 4.    *Steps to reproduce:*  0. Follow setup steps from Windows Preview Announcement email  1. Open cmd prompt  2. Create a project via CLI  3. Build to emulator {{ti build -p windows -T wp-emulator}} *or* device: {{ti build -p windows -T wp-device}}  4. Input your publisher guid (if prompt is enabled)  5. If installing to emulator, select an emulator    *Acutal:* Build will fail for both emulator and device; see emulator_install.txt and device_install.txt attachments.    *Expected:* Should be able to build to both Windows emulator and device.",Bug,High,Closed,"2014-12-23 22:11:07","2014-12-23 22:11:07",8
"The Titanium SDK ","iOS: ImageView repeatCount is not honored","Test Code  ",Bug,Medium,Closed,"2014-12-22 19:48:41","2014-12-22 19:48:41",8
"The Titanium SDK ","String.format strips text after first placeholder with 3.5.0 in Simulator","Only in iOS Simulator String.format strips text after the first placeholder when using the 3.5.0 SDK.    This bug seems to have been introduced by the following commit to make the SDK 64-bit safe:  https://github.com/<USER>titanium_mobile/commit/05440170a6a83fdc7d4b8e396b7b74425a31ca1f    h1. Test Case    Run the following code using:    * (!) Ti 3.5.0 / iOS simulator 8.1: {{a b}}  * (/) Ti 3.5.0 / iOS device 8.1.2: {{a b c}}  * (/) Ti 3.5.0 / iOS device 8.1.2: {{a b c}}  * (/) Ti 3.4.1 / iOS device 8.1.2: {{a b c}}  * (/) Ti 3.4.1 / iOS simulator 8.1: {{a b c}}     ",Bug,High,Closed,"2014-12-19 10:47:13","2014-12-19 10:47:13",3
"The Titanium SDK ","iOS8: Popover resizing","Prior to 3.5.0, I was using $.popover.height = xxx to resize the Popover, and it was working fine. Since 3.5.0.Beta, I was getting messages saying that this was obsolete and that I should use the contentView property.  After converting all my calls to $.popover.contentView.height = xxx, the contentView resizes itself, but the Popover doesn't... so some parts are hidden.",Bug,Critical,Closed,"2014-12-16 08:26:59","2014-12-16 08:26:59",5
"The Titanium SDK ","Titanium.UI.Picker - minDate / maxDate / value properties are not working","h4. Problem Description  Ti.UI.Picker min/max values are not working as expected (doesn't reflect in the running app).    h4. Steps to reproduce  1. Create a new mobile project (Classic Titanium)  2. Replace the content of app.js with this code:    3. Run this into a browser.    h4. Actual Results   1. setting value property has no effect  2. unwanted borders are added to the date picker.    h4. Expected results  The setting value working as expected.   ",Bug,None,Resolved,"2014-10-10 10:31:16","2014-10-10 10:31:16",1
"The Titanium SDK ","iOS: Cannot load images from the applicationDataDirectory","Images in ImageViews, tab icons,etc, can no longer be loaded from the `applicationDataDirectory` in 3.5.0.BETA    Here is the sample code to replicate:    ",Bug,High,Closed,"2014-12-18 21:05:15","2014-12-18 21:05:15",5
"The Titanium SDK ","iOS: Removing a ListView while SearchBar has focus results in crash","A popover that has a SearchBar attached to a ListView will crash if it hides will the SearchBar still has focus.    Same goes for when the ListView is removed from its parent view while the SearchBar has focus, so that seems to be the actual problem.    The crashlog is attached.    h1. Test case #1    1. Install an app with the following code on an iPad (crashes on iOS Simulator as well, but doesn't show crashlog)  2. Tap the button  3. Tap the searchbar to focus  4. Tap outside the popover to hide it  5. App crashes after a second or so        h1. Test case #2    1. Install an app with the following code on an iOS device (crashes on iOS Simulator as well, but doesn't show crashlog)  2. Tap the searchbar to focus  3. Tap the button to remove the ListView  4. App crashes after a second or so    ",Bug,High,Closed,"2014-12-18 10:41:30","2014-12-18 10:41:30",8
"The Titanium SDK ","Debugger: In Alloy project, the debugger hits the last line of code twice in Step Over and Step Into","This is a Regression as the issue does not occur with 3.4.1.GA SDK.    The issue happens on both iOS and Android for Alloy project. For Classic project it works fine.    Steps to Reproduce:  1. Create a default alloy project and add following code to index.js    2. Put a breakpoint at line 2  3. Debug the project for iOS device. In the app click on the label  The breakpoint at line 2 is hit  4. Click on Step Over or Step Into. The alert is shown in the app and the debug execution now suspends at line 3.  5. Again click on Step Over or Step Into. The console shows the info Testing Debug    Actual Result:  The debugger still remains suspended at line 3 instead of finishing. Clicking again on Step Over or Step Into finishes the debug execution. (i.e. we need to perform Step Over twice on the last line).",Bug,Medium,Closed,"2014-12-18 06:22:03","2014-12-18 06:22:03",1
"The Titanium SDK ","iOS: Setting TextField.value to wrong type triggers change event","Only on iOS, setting a TextField's (and probably others) {{value}} to the wrong type triggers the {{change}} event.    The following code logs *is changed* once on iOS if you replace {{hello}} with {{123}}, but doesn't log anything on Android.    I expect the behaviour to be as on Android.    ",Bug,High,Closed,"2014-12-17 16:23:40","2014-12-17 16:23:40",3
"The Titanium SDK ","64bit iOS devices: Intermittent crashes with SDK 3.5.0","h5. Description:  TIMOB-18214 was reported and contains two distinct issues. This ticket is being created to track one of those items.    A complex app running on arm64 devices (may also occur on arm7 but we have not witnessed this to date)    h5. Steps to reproduce:  1) Use code sample available internally  2) Install on iPhone 6+, 6 or iPhone 5s  3) Use application features until crash occurs    h5. Result:  Crash    h5. Expected Result:  No crash    h5. Notes  This does not occur with iOS 7.0.3, 7.1.1, or 7.1.2  *THIS IS A REGRESSION* DOES NOT OCCUR in SDK 3.4.1.GA",Bug,High,Closed,"2014-12-17 22:58:25","2014-12-17 22:58:25",34
"The Titanium SDK ","Ti.Media.takeScreenshot() does not render the selected iOS TabbedBar element","The method *Ti.Media.takeScreenshot()* does not render the selected iOS TabbedBar element.    If an *iOS TabbedBar* is displayed on a device with at least one selected entry visible the text of the selected entry will NOT render when the *takeScreenshot* method is called and the resulting image is displayed or stored in the file system.    The problem exists on Ti SDK 3.4.1 and Ti SDK 3.5.0 beta on iOS simulators 7.1 and 8.1 in all of the devices size variations.        The problem occurs using both Alloy or non-alloy - obvious but ruled out anyway.    Confirmation (and simple code snippet) provided by <USER>",Bug,Critical,Closed,"2014-12-16 14:46:47","2014-12-16 14:46:47",8
"The Titanium SDK ","Android: MapView crashes within Fragments","The issue title may be a little general but I'm not able to be more specific because this happens whenever the parent view of the mapview is a  Fragment.    You can easily reproduce this bug with this test code:      App crashes with this:      This not just happening with AlertDialogs, I've seen this error since a while here: https://github.com/manumaticx/Ti.DrawerLayout/issues/4    I think the cause for this is somewhere in [TiUIFragment|https://github.com/<USER>titanium_mobile/blob/master/android/titanium/src/java/org/<USER>titanium/view/TiUIFragment.java] as the FragmentManager fails to resolve the containers resource id.    I've tested this with several Titanium versions (3.3.0 to 3.6.0).",Bug,High,Closed,"2014-12-16 16:10:43","2014-12-16 16:10:43",8
"The Titanium SDK ","CLI: Android platform targets not detected when xcopy is not available on path","On a new Windows 7 machine, though Android SDK is installed and available, the titanium info command does not return any platform targets for Android SDK. No errors are displayed with the titanium info command.    However, only when I ran android list command, the output contains xcopy not recognized as a valid command. After updating the env variable PATH with the location of xcopy, only then titanium info command is able to resolve the Android platform targets on the machine.    So, CLI is not able to parse the android list output if there are any warnings/errors, though they shouldn't impact the list of platforms/emulators.",Bug,High,Closed,"2014-12-17 01:18:25","2014-12-17 01:18:25",5
"The Titanium SDK ","iOS: App crashes while parsing XML","App will crash while parsing XML.    *Steps to reproduce issue*:  1. Create new project using attached app.js  2. Run the app  3. Click load until the app crashes (wait for parsing to finish between clicks. Could take 10+ clicks)    *Expected Result*:  App will not crash    *Notes*:  Does not occur with SDK 3.4.1.GA. This is a regression  See related tickets below    *Example output*:  This is what is left in console after the crash occurs. It should convert up to number 745. I get the below output and the app crashes to the home screen.  ",Bug,High,Closed,"2014-12-16 19:30:40","2014-12-16 19:30:40",34
"The Titanium SDK ","iOS8: Titanium.Media.showCamera unexpected behaviour on AdHoc distribution","h6.Issue Description  Invoking Ti.Media.showCamera works perfect if we do a command line build of our app on device. If we take the provided sample app and then publish AdHoc then it fails.    h6.Steps to reproduce  1. Launch sample app (Run As > Device)  2. Hit Camera Button to Take a photograph  3. Hit Use Photo and monitor logs  4. Image Dimensions are correctly returned (running App on device iPhone5s):    {quote}  [INFO] :   Image Captured, Dims 2448,3264 Aspect Ratio: 0.75  [INFO] :   Image Captured, Dims 2448,3264 Aspect Ratio: 0.75  {quote}    5. Repeat all steps under Ad Hoc mode.   6. Logs are slightly different now:     {quote}  [ERROR] : assertion failed: 12A366: libxpc.dylib + 71820 [4BC9CA3D-4DEE-314C-ADBF-53BDCEEFE45C]: 0x7d   [ERROR] : Snapshotting a view that has not been rendered results in an empty snapshot. Ensure your view has been rendered at least once before snapshotting or snapshot after screen updates.   [ERROR] : Image Captured, Dims: undefined,undefined Aspect Ratio: NaN   [ERROR] : Image Captured, Dims: undefined,undefined Aspect Ratio: NaN   {quote}     h6.Test Case      h6.Device Output (Ad Hoc Distribution)  iPhone 4 iOS7.1  {quote}  Dec 16 09:46:46 lAlO wifid[15] <Notice>:   Dec 16 09:46:51 lAlO Super.Simple[208] <Warning>: [INFO] Image Captured, Dims: 1936,2592 Aspect Ratio: 0.7469135802469136  Dec 16 09:46:51 lAlO Super.Simple[208] <Warning>: [INFO] Image Captured, Dims: 1936,2592 Aspect Ratio: 0.7469135802469136  {quote}    iPhone 5s iOS 8.1  {quote}  Dec 16 10:36:41 iPhone Super.Simple[253] <Warning>: [INFO] Image Captured, Dims: undefined,undefined Aspect Ratio: NaN  Dec 16 10:36:41 iPhone Super.Simple[253] <Warning>: [INFO] Image Captured, Dims: undefined,undefined Aspect Ratio: NaN  {quote}    ",Bug,High,Closed,"2014-12-16 17:07:38","2014-12-16 17:07:38",13
"The Titanium SDK ","iOS: listview - 'dragstart' and 'dragend' event","'dragstart' and 'dragend' event (like in scrollview) for listview    Test case:  {code:title=testCase.js|borderStyle=solid}  var win = Ti.UI.createWindow({backgroundColor: 'white'});  var listView = Ti.UI.createListView();    listView.addEventListener('dragstart', function() {   Ti.API.error(dragstart);  });    listView.addEventListener('dragend', function() {   Ti.API.error(dragend);  });    win.add(listView);  win.open();  {code}","New Feature",High,Closed,"2014-12-15 03:44:37","2014-12-15 03:44:37",3
"The Titanium SDK ","Writing a plugin that links to JavaScriptCore.framework produces a naming clash","The Titanium framework uses a custom version of JavaScriptCore. If an app links to Apple's JavaScriptCore.framework that was introduce in iOS 7, Apple's App Store validator fails because it detects calls to WTFReportBacktrace and WTFReportFatalError which both are referenced inside libTiCore.a.    Attached various disassembly that shows the calls.    Apple most likely created a special rule so existing Titanium projects are not automatically rejected, but disables that rule if newer frameworks such as JavaScriptCore are used. Now we have an experimental version of our PSPDFKit plugin that works in the App Store, but we really need JSCore to have all of our features - we don't want to provide our customers with a crippled version just because of a naming clash in the Titanium framework.    The proper solution here would be to rename/prefix the internal Webkit-methods.",Bug,Critical,Closed,"2014-12-14 15:31:49","2014-12-14 15:31:49",21
"The Titanium SDK ","iOS: iOS modules can not build if there any JS files inside assets folder","iOS modules can not be built if there are any JS files inside the root assets folder.    h5. Steps To Reproduce  1. Create an iOS module  2. Place a javascript file with some code in the assets folder at the root.  3. Build the module    h5. Expected Result  Module should build as usual    h5. Actual Result  CLI is throwing following error.      h5.Workaround  We need to move the assets folder inside iphone folder.",Bug,Medium,Closed,"2014-12-15 07:19:56","2014-12-15 07:19:56",5
"The Titanium SDK ","iOS: add architecture to module not found message","When an app is built using 3.5.0 or greater it will include a 64 bit slice. If that app is run on an arm64 device (5s, 6, etc), when it requires a module that does not have the arm64 slice, it fails with an exception with message:      We need to add a better message to make it clear what architecture the module is not found for.  ",Improvement,High,Closed,"2014-12-12 21:08:28","2014-12-12 21:08:28",5
"The Titanium SDK ","iOS: Navbar appears to shrink when returning from a window with forced orientation","h5.Description    When returning from a window that uses forced orientation, if you are in an orientation that is not supported and return to another window which does not use forced orientation the navbar appears to shrink when you return to protrait mode. Also when returning to the window the icons at the top of the device disappear until you rotate the device too    *Note*   To 'unshrink' the navbar you just need to simply rotate the device.  This *is not* a regression the same occurs in 3.4.1.GA    h5.Steps To Reproduce    1. Using the attached app.js build to an iOS device.  2. Tap the button to open the second window and rotate to an unsupported orientation (in the app.js Titanium.UI.LANDSCAPE_LEFT and Titanium.UI.UPSIDE_PORTRAIT)  3. Tap the button and close the window  4. Go back to portrait     h5.Actual Result    3. The icons at the top of the screen have disappeared  4. The navbar appears 'shrinked'    h5.Expected Result    3. Nothing should be malformed, the icons should appear  4. Nothing should be malformed",Bug,Medium,Closed,"2014-12-12 18:04:10","2014-12-12 18:04:10",0
"The Titanium SDK ","iOS: 64-bit Platform reports wrong value for iOS","We hard coded 32-bit.    Need to make this based on whether we are building for 64-bit or 32-bit.    https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/PlatformModule.m#L39    ",Bug,High,Closed,"2014-12-12 16:31:10","2014-12-12 16:31:10",8
"The Titanium SDK ","iOS Module: Update link in module.xcconfig template","In the module's `module.xcconfig` file, the link for the instructions should be updated from:    http://developer.apple.com/mac/library/documentation/DeveloperTools/Conceptual/XcodeBuildSystem/400-Build_Configurations/build_configs.html    to:    https://developer.apple.com/library/mac/documentation/DeveloperTools/Reference/XcodeBuildSettingRef/0-Introduction/introduction.html#//apple_ref/doc/uid/TP40003931-CH1-SW1",Bug,Low,Closed,"2014-12-11 19:58:57","2014-12-11 19:58:57",1
"The Titanium SDK ","Android: Implement attributedString on TextArea and TextField","Since Android can now support attributedString for Label, this ticket will look at implementing this feature on TextField and TextArea as well. Implementing attributedString on these 2 UI are already supported by iOS.",Improvement,Low,Closed,"2014-12-11 04:45:28","2014-12-11 04:45:28",8
"The Titanium SDK ","iOS: Missing app-state-events for fresh launch and background-launch","h4. Problem Description  1. Titanium mobile app doesn't fire resumed event at fresh launch. Based on Apple's doc, applicationDidBecomeActive: is called at fresh launch as well. Shouldn't resumed be fired at fresh launch?    2. Based on #1, Shouldn't Titanium mobile app fire paused event when app is launched directly into the background? Since applicationDidEnterBackground: is called in this case.    3. There is currently no way to determine whether app is launched into the foreground or the background with Titanium. It is possible with native code, according to Apple's Docs. This feature is highly needed.      h4. Test case  1. Create a new mobile project (Classic Titanium)   2. Copy this code into app.js    3. Run it into device    h4. Extra info     According to the Apple Doc The resumed event should also called at app fresh launch.  According to Apple Doc [applicationDidBecomeActive|https://developer.apple.com/library/ios/documentation/uikit/reference/uiapplicationdelegate_protocol/Reference/Reference.html#//apple_ref/occ/intfm/UIApplicationDelegate/applicationDidBecomeActive:] is called at fresh launch, which invoke the Titanium.App resumed event.   ",Bug,High,Closed,"2014-06-27 18:26:06","2014-06-27 18:26:06",8
"The Titanium SDK ","CLI: Fail app build if target architectures do not exist in the manifest of every module","TIMOB-18065 architectures are now included in module manifests    The CLI should check the architectures available in each modules that is included in the app and fail with a helpful error when one or more of the modules do not have the architectures the app is being built for.     It would be most useful to fail with a list of modules that failed an what architectures they are missing rather than failing the build when the first mismatch is encountered.",Improvement,High,Closed,"2014-12-10 23:27:33","2014-12-10 23:27:33",5
"The Titanium SDK ","iOS: Ti.Media.Sound does not work in iOS 8.2 beta","The sound files do not play in iOS 8.2 beta but works as expected with iOS 8.1. When the sdk versions are reverted to the older versions, the sound files still do not work on iOS 8.2 beta.     Steps to reproduce:    1. Create a sample classic project and replace app.js with the following:    and include the attached sound file under resources of the created project  2. Click on 'play sound' button    Actual results:  2. No sound    Expected results:  2. A cricket sound should be played.  ",Bug,Medium,Closed,"2014-12-10 09:36:25","2014-12-10 09:36:25",8
"The Titanium SDK ","iOS: adding date property for Ti.Contacts.createPerson causes error ","This is not a regression as it is reproducible with Titanium sdk 3.4.1    When a new contact is added to the device, adding the date property along with it, following the format in the docs gives error.     When the following is done:      it cause the error mentioned in step 1 of the actual results, however adding the date property separately as follows:     does not cause any error, however the contact does not get added to the device contacts.    The birthday field works fine though it also follows the same format as the date.          Steps to reproduce:   1. Run the attached app.js  2. Open device contacts and check for Ade Crude    Actual results:  1. The following error is shown:     2. No new contacts added    Expected results:  1. Blank white screen appears  2. 'Ade Crude' is added to the contacts along with the anniversary dates and other details mentioned in app.js",Bug,Medium,Closed,"2014-12-10 09:09:01","2014-12-10 09:09:01",3
"The Titanium SDK ","iOS: Module - Cannot build 32-bit module urlSession and coremotion with SDK 3.5.0 ","*Details:* If you try to build a project with both 32-bit modules urlSession and coremotion with SDK 3.5.0, then you will get build failures.    *Note:* Was not able to reproduce this issue with the following 32-bit modules:  ||module||version||  |com.<USER>apm|1.0.10|  |facebook|3.1.1|  |ti.geofence|1.1.2|  |ti.map|2.0.6|  |ti.touchid|1.0.1|    *Steps to reproduce:*  1. Create a Titanium project   2. Include both com.<USER>urlSession (1.0.1) and ti.coremotion (1.0.1) modules in the tiapp.xml; do not need to require them into your app.js    3. Install app to device  *Actual:* On first build failure, you will get this urlSession build error:      4. Use change the urlSession version module to latest (1.1.0)    5. Save changes and install to device  *Actual:*  On second build failure, you will get this coremotion build error:      *Expected:* Should fail gracefully with warning indicating to the user that they should use the latest modules or build fine like the other specified 32-bit modules.",Bug,High,Closed,"2014-12-09 22:27:38","2014-12-09 22:27:38",1
"The Titanium SDK ","Add Logger implementation to forward logs over TCP to CLI","We package up an ini file into the apps with the IP/port to use to connect to the CLI and forward logs.    We need to supply a C++ implementation of a logger that will use those settings to connect over TCP to the CLI and pass the logs along. <USER>has already done the equivalent for Windows hybrid here: https://github.com/<USER>titanium_mobile/blob/master/mobileweb/templates/packages/wp8/%7B%7BProjectName%7D%7D/Logger.cs","New Feature",High,Closed,"2014-12-09 21:38:49","2014-12-09 21:38:49",8
"The Titanium SDK ","iOS: Size animation broken","Animations affecting size are not functioning properly on iOS.  This looks like a parity issue as it works as expected on Android.    *Steps to reproduce issue*:  1. Use below code to create project  2. Launch the project  3. Witness that the grey bar is not filled with the green bar    *Expected Result*:  The green bar animates to fill the grey bar    *Notes*:  This works as expected on Android.  This is also not functioning properly on iOS with 3.4.1.GA    ",Bug,Medium,Closed,"2014-12-09 19:13:51","2014-12-09 19:13:51",1
"The Titanium SDK ","CLI: Implement proxy autodetection from titanium-connection-test in ti setup","The https://github.com/<USER>titanium-connection-test project automatically detects the proxy server configuration, if any is in use. This ticket is to implement those functions into the CLI. Auto-detection would augment the existing CLI network configuration functionality whereby users manually configure their proxy server settings.    General plan: developer would run {{ti setup}} and choose Network. After selecting yes that they are behind a proxy, the CLI would attempt to detect the proxy settings and present them to the user for confirmation. If values are correct, user should be able to just accept defaults. If incorrect, values entered by the user are what is saved and used by the CLI.",Improvement,Medium,Closed,"2014-12-09 17:06:20","2014-12-09 17:06:20",8
"The Titanium SDK ","CLI: Implement Java connectivity tests from titanium-connection-test in ti setup check","Add the Java-based network connectivity tests from the https://github.com/<USER>titanium-connection-test project to the ti setup check functions. Connections should be made via the proxy (if any) as configured with the existing CLI network configuration functionality.    If all sites are reachable, output a simple message, like:    ✓ Java connection test    If sites are unreachable, output a message for each site that cannot be access, like:    ✕ api.<USER>net is unreachable via Java",Improvement,High,Closed,"2014-12-09 17:03:41","2014-12-09 17:03:41",3
"The Titanium SDK ","CLI: Implement cURL connectivity tests from titanium-connection-test in ti setup check","Add the cURL-based network connectivity tests from the https://github.com/<USER>titanium-connection-test project to the {{ti setup check}} functions. Connections should be made via the proxy (if any) as configured with the existing CLI network configuration functionality.     The solution must account for Windows or other systems on which cURL is not installed. The curl executable must be override-able.    If all sites are reachable, output a simple message, like:    ✓ cURL connection test    If sites are unreachable, output a message for each site that cannot be access, like:    ✕ api.<USER>net is unreachable via cURL",Improvement,Medium,Closed,"2014-12-09 17:01:39","2014-12-09 17:01:39",5
"The Titanium SDK ","CLI: Implement node connectivity tests from titanium-connection-test in ti setup check","Replace the existing network connectivity tests in {{ti setup check}} with those from the https://github.com/<USER>titanium-connection-test project. Connections should be made via the proxy (if any) as configured with the existing CLI network configuration functionality.    The set of URLs to check should be stored in an external file for easy updating.    If all sites are reachable, output a simple message, like:      ✓  Network connection test     If sites are unreachable, output a message for each site that cannot be access, like:      ✕  api.<USER>net is unreachable  ",Improvement,High,Closed,"2014-12-09 16:56:30","2014-12-09 16:56:30",3
"The Titanium SDK ","iOS: Volume of video player does not change when controlled by slider","The volume of the video does not change when the position of the slider that controls the volume changes. According to the docs, the volume of the video player also controls the volume of the device. When the video in the attached sample app starts playing, the slider is shown to be at the maximum regardless of the volume of the device. When the device volume is not muted, the video starts playing with a volume, when it should actually be muted, and increasing the volume of the video via the slider has no effect. Currently the volume of the video is only controlled by the device volume (controlling using the hardware buttons).    This is a regression as it works as expected with titanium sdk 3.4.1    Steps to reproduce:   1. Create a sample and include 'movie.mp4' under resources and replace app.js with the attached one  2. run app on device  3. Move the slider position towards the right  4. Move the slider position towards the left    Actual results:  2. Video starts playing with maximum value shown on the slider for the volume regardless of the volume set on the device. If device volume is not muted, the video plays with sound.  3. no change in the volume of the video  4. no change in the volume of the video    Expected results  2. Video should start playing without any sound, and the slider position should be at minimum, regardless of the device volume. The volume (speaker symbol) pops up showing that the volume has been muted.   3. volume of the video should increase and this should also increases the volume of the device.  4. volume of the video should decrease and the volume of the device should also decrease and should be muted when the slider reaches the end on the left.",Bug,High,Closed,"2014-12-09 09:46:09","2014-12-09 09:46:09",5
"The Titanium SDK ","MobileWeb: Custom fonts are not working","h4. Problem Description  Custom fonts are not working on MobileWeb, But works well on Android and IOS.    h4. Steps to reproduce  1. Create new mobile project (classic titanium)  2. Add this code:    3. Create a fonts directory inside Resources  4. copy the attached font to the fonts directory.  5. Select 3.4.1.GA as the Mobile SDK   6. Run in mobile web     h4. Actual Results  The custom fonts are not show.    h4. Expected results  The custom fonts should appear, as used to happen with Mobile SDK 3.2.3.    h4. Extra info  I tested this and the last known working version is Mobile SDK 3.2.3.GA  ",Bug,High,Closed,"2014-12-09 08:27:21","2014-12-09 08:27:21",8
"The Titanium SDK ","iOS: Tab doesn't fire FOCUS event when switching while TabGroup is inside a TableView","First Tab of a TabGroup is not firing *FOCUS* event when switching between tabs while the TabGroup is inside a TableView.     h5. Steps To Reproduce  1. Create a classic app using following code    2. Run the app in iOS device  3. Switch between Tab1 and Tab2 few times    h5. Actual Result  Tabs are *not triggered* focus event properly for every time.  Following is the console log:      h5. Expected Result  Tab focus event should be triggered properly every time.  Following console log *should repeat* for every focus event.  ",Bug,High,Closed,"2014-12-09 07:44:24","2014-12-09 07:44:24",8
"The Titanium SDK ","iOS: Window with url:file throws Maximum call stack size exceeded error on open","When opening a window with a file as the url, I occasionally see a Maximum call stack size exceeded. error.    *Steps to reproduce*:  1. Download, Build, and open included project (proj 1)  2. Click on Test 2  3. Click on open win2  4. Click on open win3  5. Click on Close Windows  6. Repeat steps 2-5 until error occurs (sometimes on first try, other times it takes a while)    *Expected Results*:  Windows are able to open without error.    *Notes*:  I am attaching two projects that encounter this error. If the windows do not use a file for the URL, I do not encounter this issue.  I also have not been able to encounter this with Titanium SDK 3.4.1.GA.    Download projects here:  Proj 1: https://www.dropbox.com/s/50wyyyc5cs30elc/animations%20test.zip?dl=0  Proj 2: https://www.dropbox.com/s/sn2oax930mpx9lo/Null%20Test.zip?dl=0",Bug,High,Closed,"2014-12-08 21:21:02","2014-12-08 21:21:02",21
"The Titanium SDK ","On iOS Document viewer html files in tempDirectory cannot show images","Opening a html document saved in the temp directory (deviceId/tmp), is impossible to show images added with <img src=... /> tag.  I tried to add the image as link to filesystem, web url and base64, in png and gif: nothing.   <img src={{imagesPath}}filename.png />  <img src=http://url />  <img src=data:image/gif;base64,{{base64}} />    imagesPath is a concatenation of Ti.Filesystem.resourcesDirectory and the filepath inside assets directory.  base64 is the file conversion, Ti.Utils.base64encode(logoFile.read())    I tried to print the document and on the paper image was printed, opening the file from tmp directory with a browser (Chrome, Firefox, Safari) the image is always showed.",Bug,Critical,Closed,"2014-12-04 08:57:43","2014-12-04 08:57:43",1
"The Titanium SDK ","Android: Cannot send Broadcast with data property defined in the intent","CAVEAT:  Cannot tell if this should work or not.  Cannot find any official information in the Android docs. Stackoverflow and other topics say you can only send data through extras, which does work in this example.    REPRODUCTION:  Run the code below in the Genymotion emulator and click the Send Broadcast button.    RESULTS:  Broadcast is not sent.    OTHER INFO:  Comment out line #9 (data property) and rerun the test.  Intent is sent and received.    ",Bug,Medium,Closed,"2014-12-06 00:51:39","2014-12-06 00:51:39",5
"The Titanium SDK ","iphone module build succeed though there is a missing architecture","Related to TIMOB-18071. If x86_64 architecture is removed from the manifest, then there is a warning in the build logs, but the build still succeed. However, if any arch is missing for android module, then the build has failed with appropriate warning.    We need to address this parity of build between android and iphone platforms.",Bug,Medium,Closed,"2014-12-06 00:27:33","2014-12-06 00:27:33",5
"The Titanium SDK ","iOS: Update manifest with architectures","The modules below have been updated to 64 bit. After they were updated, we decided to add an `architectures` property to the manifest.    For this ticket, we need to go back through and add this property to the manifest. For instructions on adding this property, look at this ticket: TIMOB-18065    h5. Checklist:  # update the manifest with architectures  # bump the last number in the version for each module (if it is 1.2.0 now, the new version will be 1.2.1)    ## Note: modules which have one change log the versions should match on both platforms  # update the changelog (keep it consistent with logs before it)  # build the module and add it to github releases once the commit is merged      h3. Commonly Used  * ti.compression: https://github.com/<USER>modules/ti.compression  * ti.imagefactory: https://github.com/<USER>modules/ti.imagefactory  * ti.storekit: https://github.com/<USER>modules/ti.storekit  * ti.styledlabel: https://github.com/<USER>modules/ti.styledlabel  * ti.urbanAirship: https://github.com/<USER>modules/ti.urbanairship  * ti.airprint: https://github.com/<USER>modules/ti.airprint  * ti.paypal: https://github.com/<USER>modules/ti.paypal  * ti.admob: https://github.com/<USER>modules/ti.admob    h3. Packaged with the SDK  * ti.touchid: https://github.com/<USER>modules/ti.touchid  * ti.urlSession: https://github.com/<USER>modules/ti.urlsession  * ti.facebook: https://github.com/<USER>modules/ti.facebook  * ti.map: https://github.com/<USER>modules/ti.map  * ti.coremotion: https://github.com/<USER>modules/ti.coremotion    h3. Important Enterprise Modules  * com.<USER>apm: https://github.com/<USER>modules/com.<USER>apm  * SOASTA?  * <USER>https: https://github.com/<USER>modules/<USER>https  * ti.geofence: https://github.com/<USER>modules/ti.geofence  * <USER>encrypteddatabase: https://github.com/<USER>modules/<USER>encrypteddatabase  * ti.ldap: https://github.com/<USER>modules/ti.ldap  * ti.crypto: https://github.com/<USER>modules/ti.crypto  ",Improvement,High,Closed,"2014-12-06 00:08:38","2014-12-06 00:08:38",8
"The Titanium SDK ","iOS: Cannot set searchbar background image","No change is witnessed when attempting to change a searchbar's background image    *Steps to reproduce issue*:  1. Launch the sample code below  2. Click on Click to set image  3. Notice that the background of the searchbar is not changed    *Expected Results*:  The serchbar background is changed    *Notes*:  I see the same behavior with 3.4.1.GA and 3.5.0 GA      ",Bug,Medium,Closed,"2014-12-05 23:56:16","2014-12-05 23:56:16",2
"The Titanium SDK ","iOS: AlertDialog: Screen shows old orientation when foregrounding after orientation change in background","An app shows an old screen state when foregrounding after the device's orientation is changed while in the background.    Please see attached gif.    *Steps to reproduce issue*:  1. Launch the sample code  2. With device in portrait mode, click on the 'Short Title' button   3. Without dismissing the alert, click on the home button to send the app in background.   4. Change the orientation of device to landscape and launch the app again   5. Dismiss the alert  6. Click on the home button to send the app in background.  7. Change the orientation of device to portrait and launch the app again  8. Notice that the first alert is shown for a second    *Expected Results*:  The first alert is not shown after returning to the app in step 7.    *Notes*:  This does not occur in SDK 3.4.1.GA.    ",Bug,Medium,Closed,"2014-12-04 21:49:21","2014-12-04 21:49:21",8
"The Titanium SDK ","CLI: ti setup, network option, setting proxy to no doesn't clear value from config file","Steps to reproduce:    1. Run {{ti setup}}  2. Choose network  3. When prompted if you're behind a proxy, enter yes then enter a proxy address (e.g. http://localhost). Complete the rest of the questions, accepting the defaults.  4. Choose network  5. When prompted, enter no to specify that you're not behind a proxy. Complete the rest of the questions.  6. Choose network. The prompts show that yes you're behind a proxy. If you examine the ~/.titanium/config.json file you'll see that the proxy address is still listed in the httpProxyServer key.    Expectation - if you specify no, the proxy value would be cleared and further prompts by setup would default to no.  ",Bug,Medium,Closed,"2014-12-04 18:32:00","2014-12-04 18:32:00",5
"The Titanium SDK ","Android: App Crashes with CalledFromWrongThreadException opening DatePicker after typing in a tf","h4. Problem Description  App crashes with CalledFromWrongThreadException when switching from textedit to datepicker    h4. Steps to reproduce  1. Create a new mobile project classic titanium  2. Add this code to app.js:    3. Run the app in a Samsung S3 device (Please: make sure to use the S3 device, it's not easily reproducible in other devices).   4. Click in the Textfield  5. Start type something  6. Click on the button to open the date picker .  7. The app should crash.    h4. Extra info  I included the adb log of the errror    {color:red}  /dalvikvm(27883): threadid=10: thread exiting with uncaught exception (group=0x4174ee48)  E/AndroidRuntime(27883): FATAL EXCEPTION: KrollRuntimeThread  E/AndroidRuntime(27883): Process: com.debugging.test, PID: 27883  E/AndroidRuntime(27883): android.view.ViewRootImpl$CalledFromWrongThreadException: Only the original thread that created a view hierarchy can touch its views.  E/AndroidRuntime(27883):    at android.view.ViewRootImpl.checkThread(ViewRootImpl.java:6347)  E/AndroidRuntime(27883):    at android.view.ViewRootImpl.requestLayout(ViewRootImpl.java:871)  E/AndroidRuntime(27883):    at android.view.View.requestLayout(View.java:16472)  E/AndroidRuntime(27883):    at android.view.View.requestLayout(View.java:16472)  E/AndroidRuntime(27883):    at android.view.View.requestLayout(View.java:16472)  E/AndroidRuntime(27883):    at android.view.View.requestLayout(View.java:16472)  E/AndroidRuntime(27883):    at android.view.View.requestLayout(View.java:16472)  E/AndroidRuntime(27883):    at android.view.View.requestLayout(View.java:16472)  E/AndroidRuntime(27883):    at android.view.View.requestLayout(View.java:16472)  E/AndroidRuntime(27883):    at android.view.View.requestLayout(View.java:16472)  E/AndroidRuntime(27883):    at android.widget.ScrollView.requestLayout(ScrollView.java:1481)  E/AndroidRuntime(27883):    at android.view.View.requestLayout(View.java:16472)  E/AndroidRuntime(27883):    at android.view.View.requestLayout(View.java:16472)  E/AndroidRuntime(27883):    at android.view.View.requestLayout(View.java:16472)  E/AndroidRuntime(27883):    at android.view.View.requestLayout(View.java:16472)  E/AndroidRuntime(27883):    at android.view.View.requestLayout(View.java:16472)  E/AndroidRuntime(27883):    at android.view.View.requestLayout(View.java:16472)  E/AndroidRuntime(27883):    at android.widget.TextView.checkForResize(TextView.java:6760)  E/AndroidRuntime(27883):    at android.widget.TextView.updateAfterEdit(TextView.java:7681)  E/AndroidRuntime(27883):    at android.widget.Editor.finishBatchEdit(Editor.java:1322)  E/AndroidRuntime(27883):    at android.widget.Editor.endBatchEdit(Editor.java:1305)  E/AndroidRuntime(27883):    at android.widget.TextView.endBatchEdit(TextView.java:6065)  E/AndroidRuntime(27883):    at com.android.internal.widget.EditableInputConnection.endBatchEdit(EditableInputConnection.java:77)  E/AndroidRuntime(27883):    at android.view.inputmethod.BaseInputConnection.finishComposingText(BaseInputConnection.java:288)  E/AndroidRuntime(27883):    at android.view.inputmethod.InputMethodManager.checkFocusNoStartInput(InputMethodManager.java:1358)  E/AndroidRuntime(27883):    at android.view.inputmethod.InputMethodManager.onWindowFocus(InputMethodManager.java:1402)  E/AndroidRuntime(27883):    at android.view.ViewRootImpl$ViewRootHandler.handleMessage(ViewRootImpl.java:3198)  E/AndroidRuntime(27883):    at android.os.Handler.dispatchMessage(Handler.java:102)  E/AndroidRuntime(27883):    at android.os.Looper.loop(Looper.java:136)  E/AndroidRuntime(27883):    at org.<USER>kroll.KrollRuntime$KrollRuntimeThread.run(KrollRuntime.java:112)  W/ActivityManager(  886):   Force finishing activity com.debugging.test/org.<USER>titanium.TiActivity  V/ActivityManager(  886): Moving to PAUSING: ActivityRecord{422ff478 u0 com.debugging.test/org.<USER>titanium.TiActivity t1034 f}  {color}",Bug,High,Closed,"2014-07-31 11:43:02","2014-07-31 11:43:02",8
"The Titanium SDK ","Https Module does not throw exception on fail as expected","h3. Issue    According to our documentation when the HTTPClient send() is called to do an https request and the authentication fails, a security exception will be thrown but instead customer receives a WARNING log on iOS and an ERROR log in Android to finish the call with the onError callback being fired.    This is causing than when customer tries to catch  the exception is not possible.        h3. Log    iOS      Android      h3. Test code        h3. Steps to repro    1. run test case ( demo.zip)  2. click on the button    Expected Result  A security exception is thrown and handled by the catch code    Actual Result  No exception is thrown",Bug,High,Closed,"2014-11-03 16:10:46","2014-11-03 16:10:46",8
"The Titanium SDK ","LiveView: LiveView crashes","When you make a change to a file LiveView crashes the app giving a {{(null)}} error.    h1. Error  See attachment for the red screen        h1. Steps to reproduce    1. {{ti create -t app -p ios -n lv --id test.lv -d .}}  2. {{ti build -p ios --liveview}}  3. Make a change and hit save  4. Get error",Bug,High,Closed,"2014-12-02 19:18:18","2014-12-02 19:18:18",8
"The Titanium SDK ","CLI: Android: Enable developers to specify arguments to dex command","Ticket for https://github.com/<USER>titanium_mobile/pull/5645     From that PR:     Added option for module developers to specify a property name of dexAgent with a jar file name in their timodule.xml. This allows for prepending the dexArgs in the runDexer function with -javaagent:, which is necessary for some modules.",Improvement,High,Closed,"2014-12-01 20:52:32","2014-12-01 20:52:32",5
"The Titanium SDK ","Android: Feature Request to select the Android Build Tools version","h6.Feature Request Description  It would be great if you could set this as a feature request for the 3.5.0 or 3.5.1 TiSDK. I anticipate that having this ability would reduce the number of different build environments that we would have to maintain and would allow us to upgrade our Android versions at a faster pace.     The request would be to select the Android Build Tools version when launching the ti build command via a parameter.     h6.Use Case  The scenario is as follows. Suppose we have a app 3.4 which is GA'd against the 3.4.1.GA TiSDK Android-18 Target SDK, and the Android 19.1.0 Build Tools. We are now working on our app 3.5 project and want to upgrade to TI 3.5.0.GA and the Android Target SDK to 21 for Android 5.0 support. For Android 5.0 support we have to use build tools 21.0.0. I was wondering if there is a way at build time to select 19.1.0 for the 3.4 app and the 21.0.0 for the 3.5 app via some build time parameter.   ",Improvement,High,Closed,"2014-12-01 18:27:51","2014-12-01 18:27:51",3
"The Titanium SDK ","Generic Error Handling","h1. The Problem  When an unhandled error occurs in production (or in builds distributed to testers), the error is either completely lost, or is displayed in a rather unfriendly red dialog. This includes both native and JavaScript errors.    h2. Desired Solution  Let the developer receive errors in their JavaScript. They can then do whatever they want with the error, such as logging it, or displaying a dialog to the user. These errors should be sent regardless of if the app is running in production or not.    h2. Example  ","New Feature",High,Closed,"2014-11-27 03:03:33","2014-11-27 03:03:33",8
"The Titanium SDK ","iOS: ScrollableView.currentPage initialized at index 3, displays index 1","h5.Issue Description  This occurs on iPhone 6 ONLY scrollableView.currentPage initialized at index 3, displays index 1 (by setting its currentPage variable on creation).     Expected results: Item at index 3 is shown   Actual results: Item at index 1 is shown     h6.To reproduce:   Unzip attachment into any Resources folder for a Classic Titanium project.   # Run sample as iPhone6 and select red box   # Watch the monitor logs.  # Run sample as iPhone5/Android and select red box  # Watch the monitor logs. The console displays the following:        h6.Additional information  If we do not put this.swiper (the scrollableView) into a container view, then the issue goes away only so long as its parent container has a 'vertical' layout (the parent container in the sample app is FirstView.js).    When this 'vertical' layout property is removed from FirstView, we see the issue return, but slightly differently -- the index gets set to 2, instead of 1 (when it is initialized as 3).      Unfortunately, we cannot use this as a workaround, as the view structure we need to build for the actual app needs the scrollableView to be in a container with other views, or to be set up without the vertical layout.   ",Bug,High,Closed,"2014-11-26 22:44:04","2014-11-26 22:44:04",13
"The Titanium SDK ","iOS: Parity: Clean up tab events","1. In Android we have the click event on the tab, but in iOS we do not. This event should be removed for Android as well, since it's confusing and quite useless as tabs can be selected by swipes.  2. In Android since 3.5.0 we have the tab selected and unselected events. In iOS we have focus/blur which fire exactly when the tab is selected and unselected. So iOS tab focus/blur should be renamed selected/unselected to match Android.  3. Tab focus/blur should be removed since we have selected/unselected which are much clearer, and since it makes no sense for tabs to be focused/blurred. Focus/blur events should occur on the Window or perhaps on the entire tab group, but not for tabs which are only used for selection and are not really a containing UI element. Note that for Android tab focus/blur fire in numerous cases, not just tab selection, and in all relevant cases we have Window focus/blur in any case so for tabs they're redundant.",Improvement,Low,Closed,"2014-11-06 16:06:13","2014-11-06 16:06:13",3
"The Titanium SDK ","Android: JavaScript Service calling the notify method throws an error if the application is backed out","REPRODUCTION:  Build the application using a master version of the Titanium SDK and run in the Genymotion emulator.  Click the 'Add Notification' button.  Back out of the application till it closes.  Wait 30s for the notification to trigger.    RESULTS:  When the service tries to call the Android.NotificationManager.notify() method it throws an exception.        OTHER INFO:  If you hit the home button instead to close the application, the notification works.    If you remove the notify call from the service, the service runs OK.    This works fine with 3.4.0.GA and 3.4.1.GA.          *./Resources/app.js*      *./Resources/ExampleService.js*      *Replace android element with the following in tiapp.xml*  ",Bug,High,Closed,"2014-11-25 22:40:43","2014-11-25 22:40:43",8
"The Titanium SDK ","CLI: Finish implementation of Windows Phone Package hook for Windows platform","I'm not sure how exactly we sign WP 8.1 apps. We can do XapSignTool as commented out here:  https://github.com/<USER>titanium_mobile_windows/blob/master/cli/hooks/wp-package.js#L29     But I think that's for company apps which I guess is sort of like adhoc distribution for iOS?    http://msdn.microsoft.com/en-us/library/windows/apps/jj206724(v=vs.105).aspx",Improvement,High,Closed,"2014-11-25 20:01:31","2014-11-25 20:01:31",13
"The Titanium SDK ","CLI: Finish implementation of the Windows Phone Run hook for Windows platform","Once the build impl is done and we have a finish package, we need to hook up the install and launch of the generated app on the emulator/device: https://github.com/<USER>titanium_mobile_windows/blob/master/cli/hooks/wp-run.js#L183",Improvement,High,Closed,"2014-11-25 19:59:40","2014-11-25 19:59:40",5
"The Titanium SDK ","CLI: Finish implementation of the build command for Windows platform","This includes TODOs like:  - Running cmake to generate the VS solution (WindowsBuilder.prototype.createProject)  - Running msbuild against the solution (WindowsBuilder.prototype.compileApp)  - Fixing up resource copying into the cmake template or VS solution/project (not sure which we're eventually doing, but right now as it stands we stuff resources into Assets folder of cmake template before running cmake) (WindowsBuilder.prototype.copyResources)","New Feature",High,Closed,"2014-11-25 19:57:41","2014-11-25 19:57:41",13
"The Titanium SDK ","Rebuild modules for 64-bit architectures","This epic encapsulates all of the 64-bit upgrades we will need for modules, both for iOS and (eventually) Android.    * Convert modules to 64-bit for iOS  * Add architectures line into manifest  * Move .zip file from distribution to release  * Update .travis.yml file    h2. Steps    Below are the steps to be followed when doing the update.    h3. Planning  1. Find a module not yet converted. Create a ticket for the module, and add it to this epic. Give it an estimate in Story Points    h3. Module conversion (iOS)    To update an existing module and make it  64bit compatible follow these steps:    1. Open the Xcode project  2. You should have at least one warning asking you to update the project to the recommended settings, do that  3. Go to the project settings and set the iOS Deployment Target to at least iOS 6.0  4. In Build Settings, change all the architectures to $(ARCHS_STANDARD)    That's it, build the module normally and it should now be 64-bit compatible. To verify it, run this on the command line        And the output should be this:        h3. Add architectures line, bump version and edit changelog    1. From TIMOB-18065, add the results of the lipo command to the module manifest. An example (Android):    {code:title=manifest}  #  # this is your module manifest and used by Titanium  # during compilation, packaging, distribution, etc.  #  version: 1.1.0  apiversion: 2  architectures: armeabi armeabi-v7a x86  description: Awesome App Functionality  author: <USER> license: Apache v2  copyright: Copyright (c) 2013 by <USER>   # these should not be edited  ...    language: objective-c  env:  global:      - MODULE_NAME=<module_id>  before_install:      - MODULE_ROOT=$PWD  install:      - cd $MODULE_ROOT      - curl -o install.sh https://raw.githubusercontent.com/<USER>modules/ci/master/travis/install.sh      - source install.sh  script:       - curl -o script.sh https://raw.githubusercontent.com/<USER>modules/ci/master/travis/script.sh      - source script.sh  after_success: # and this only on success      - curl -o deploy.sh https://raw.githubusercontent.com/<USER>modules/ci/master/travis/deploy.sh      - source deploy.sh  {code}    h3. Create Pull Request    As part of the pull request:    1. Build the module  2. Remove the .zip file for the module from the iOS directory (this means do not commit the module zip, create a github release instead).  3. Create a GitHub Release and attach the .zip file for the module. Mark it as a pre-release.    When the PR is merged, delete the pre-release and tag and then re-tag the release against the newest code, and update it to remove the pre-release flag.",Epic,High,Closed,"2014-11-25 15:26:52","2014-11-25 15:26:52",0
"The Titanium SDK ","CLI: Add support for the Windows Store Package hook for Windows platform","This hook is in the {{cli/hooks/ws-package.js}} file. This hook should copy the wp-package.js hook. It simply needs to sign the app and copy it to the output directory.","New Feature",Medium,Closed,"2014-11-25 10:43:55","2014-11-25 10:43:55",13
"The Titanium SDK ","Android: Enable --multi-dex for android builds","h4. Problem  Titanium tooling will not build a project that has more than 65536 total method calls    Currently android has a limit  on the number of methods permitted in a single dex file. (65536 - who thought a short int should be used here???)  As an example, the latest google-play-services.jar from 3.4.1 has 23600.  For basic S3 support from aws 2.0, a module uses 26800.    By the time you build an empty titanium app you are left with:      h4. Solution    The solution is to use the --multi-dex option in calling dexer.  The problem will be that --multi-dex cant just be dropped in as it requires a different output. A decision will need to be made on how to modify this.buildBinClassesDex.    Example (~2952)      In this case, if this.buildBinClassesDex points to a directory  (lets say this.buildBinDir) we end up with our 2 .dex files        Around like 4029 we can add a hack to push the other .dex file into our package. This would need to be coded to scan the directory for all *.dex files and add them to the bundle.      The problem however, is that the app will not run on a device because we would need to tell the application loader that this is a multidex package which will require another ticket.  https://developer.android.com/reference/android/support/multidex/MultiDexApplication.html        code snippets are from _build.js  ",Improvement,High,Closed,"2014-11-21 21:11:53","2014-11-21 21:11:53",8
"The Titanium SDK ","TableView: When removing the window and attaching it again scroll position is lost","h3. Issue     In SDK 3.3.0 and higher when a tableView is scroll and the remove from the window and then added again to the window the scroll position is lost and restored to the original starting position, in SDK 3.2.X  when  doing this the tableView keeps the original position    h3. Steps to repro    1. Run test code   2. Scroll the table  3. Click on a row  4. Click on the Go Back button    Expected Result:  The tableView will be displayed again with the last scroll position     Actual Result:  The tableView is displayed with the original scroll position (Y value:0)    h3. Test Code        h3. Workaround    In order to keep the las position its possible to use e.firstVisibleItem for android and  e.contentOffset for iOS in order to keep a similar effect.      ",Bug,High,Closed,"2014-11-24 17:36:04","2014-11-24 17:36:04",13
"The Titanium SDK ","CLI: Refactor build commands for greater code reuse","Each platform's build command extends a Builder base class. We need to move common functions into the Builder so that we can reuse code across the build commands.",Improvement,High,Closed,"2014-11-24 17:10:21","2014-11-24 17:10:21",5
"The Titanium SDK ","CLI: Build command errors as missing build/build_<platform>.log file","    same for iOS build.",Bug,High,Closed,"2014-11-24 02:29:20","2014-11-24 02:29:20",3
"The Titanium SDK ","Remove support for 2.3.X of the Android SDK","This may be trivial, but 2.3.X market share is below 10%. We need to remove any dependencies on this version, as well as update relevant documentation.",Improvement,High,Closed,"2014-11-22 05:18:48","2014-11-22 05:18:48",8
"The Titanium SDK ","Android: Installing an app to android emulator takes more time to build every times in windows 7.","Hi when I install any app in android emulator it takes more times approximately 2 minutes + for every built in windows 7 Ti Studio 3.2.1. First time it takes time it's no matter but second, third time why? Titanium SDK 3.1.3 it worked well but the affected version is Ti SDK 3.2.0,3.2.1. Another issue sometimes open more than one emulator when we run but already one emulator is exist.      ",Improvement,High,Closed,"2014-03-03 05:53:49","2014-03-03 05:53:49",8
"The Titanium SDK ","iOS: scrollableView page controls are out of screen ","h3. Issue    When we create a scrollableView that includes a large number of views the page controls are created in a single line causing some of the controls to be outside the window width and user cant follow which view index is currently being displayed.    h3. Steps to repro    1. Run test code on an iPhone 5 simulator/device  2. Swipe the views in the scrollableView    Expected Result  User will be able to follow the current view with the controls    Actual Result  User won't see the total controls as some are not rendered in screen    h3. Test Code        ",Bug,High,Closed,"2014-11-21 15:59:47","2014-11-21 15:59:47",1
"The Titanium SDK ","Support remote debugging / inspecting of Android webviews","Android supports the ability to inspect and debug webviews, just like iOS. On Android you have to enable it however by setting {{setWebContentsDebuggingEnabled}} to true.    http://developer.android.com/reference/android/webkit/WebView.html#setWebContentsDebuggingEnabled(boolean)",Improvement,Critical,Closed,"2014-11-18 13:20:34","2014-11-18 13:20:34",3
"The Titanium SDK ","Add compiled architectures to module manifest template","With the addition of 64-bit support, it becomes helpful to know the architectures available in a compiled module. We can then use this ins tooling to make sure modules are compiled correctly for use.    We update the module template manifest file with the following values (*notice they are space delimited*):    Android:  architectures: armeabi armeabi-v7a x86    BlackBerry:  architectures: arm x86    iOS:  architectures: armv7 i386 x86_64 arm64    An example:    {code:title=manifest}  #  # this is your module manifest and used by Titanium  # during compilation, packaging, distribution, etc.  #  version: 1.1.0  apiversion: 2  architectures: armv7 i386 x86_64 arm64  description: Awesome App Functionality  author: <USER> license: Apache v2  copyright: Copyright (c) 2013 by <USER>   # these should not be edited  ...  {code}  ",Improvement,High,Closed,"2014-11-21 00:02:00","2014-11-21 00:02:00",1
"The Titanium SDK ","iOS: AttributedString Parity with Android","Android can now support AttributedString as well. To update iOS attributedString feature so as to achieve parity.  Deprecate Titanium.UI.iOS.AttributedString, and use Titanium.UI.AttributedString instead.    Use following sample code (works for BOTH android and iOS):   ",Improvement,Low,Closed,"2014-11-20 06:59:37","2014-11-20 06:59:37",5
"The Titanium SDK ","Android: expose the text color for the picker","h4. Problem Description  I'm not able to set the text color of the picker value. Therefore, I have to use the Android theme files to set it, but this should be exposed in the API as the default `color: '#hex'`     We have tested this issue. But Android, iOS have not text color property of pickerView or pickerRow.    h4. Steps to Reproduce:  1. Create classic project.  3. Paste this code in app.js file.  3. Run this code with the testing environment.  4. ","New Feature",Medium,Closed,"2014-08-27 13:05:28","2014-08-27 13:05:28",3
"The Titanium SDK ","iOS: Support WatchKit","The iOS 8.2 beta includes support for WatchKit, implemented in a similar fashion to Share Extensions (TIMOB-17335)    https://developer.apple.com/watchkit/    We should provide support in the Titanium SDK for developing WatchKit-enabled applications.",Epic,High,Closed,"2014-11-18 21:29:11","2014-11-18 21:29:11",6765
"The Titanium SDK ","Windows: Implement Ti.UI.ActivityIndicator","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.UI.ActivityIndicator  http://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.stackpanel.aspx  http://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.progressring.aspx  http://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.textblock.aspx    h1. Ti.UI.Windows.ProgressRing  h2. Implemented  h3. Properties  - isActive  - color  - backgroundColor    h3. Methods  - hide( )  - show( )    h1. Ti.UI.ActivityIndicator  h2. Implemented  h3. Properties  - bottom  - color  - font  - height  - indicatorColor  - left  - message  - right  - top  - width    h3. Methods  - add( )  - hide( )  - remove( )  - show( )    ----    h2. Not Implemented:  h3. Properties:  - indicatorDiameter  - messageid  - style","New Feature",High,Closed,"2014-11-18 15:30:34","2014-11-18 15:30:34",8
"The Titanium SDK ","Android: Ti.UI.Label.html - setting html property makes it non-clickable","h4. Problem Description   Once you set the html property in a label, the click event is lost.     h4. Test Case  1. Create a new mobile project Classic titanium  2. Paste this code into app.js:    {code:title=app.js|borderStyle=solid}  var win = Ti.UI.createWindow({    backgroundColor: #fff  });  var lbl = Ti.UI.createLabel({   backgroundColor: red,   html: Click <b>here</b>    <a href=\http://www.w3schools.com\>Visit W3Schools.com!</a>  });  lbl.addEventListener(click, function(){    alert(clicked);  });  win.add(lbl);  win.open();  {code}  3. Run it in a 4.0.x device.  4. Click the label    h4. Expected results  After clicking the label, an alert should appear.     h4. Actual results   alert is not shown. ",Bug,High,Closed,"2014-11-17 12:28:09","2014-11-17 12:28:09",5
"The Titanium SDK ","CLI: Fix bug with the analytics process blocking the parent process from exiting","When a CLI command finishes such as 'create' or 'build', then it processes analytics events and tries to send them to the server. Despite the analytics child <USER>disconnecting from the parent, the parent will stick around and wait for the child to finish.    This issue needs to be fixed in node-appc, then the dependency version updated in Titanium.",Bug,High,Closed,"2014-11-18 05:51:11","2014-11-18 05:51:11",5
"The Titanium SDK ","Android: tiapp.xml of generated project has two modules tag","## Description  tiapp.xml of generated project by '3.3.0.GA/module/builder.py' <USER>two modules tag.    ## Reproducing steps  1. create Android Module.  2. run 'ant run' (app install to your device)  3. you got a runtime error Requested module not found  4. go generated example project dir. (You can find a path from 'ant run' log. it is something like this : /private/var/folders/cd/slc2125j7xz_kt9292dkp2v80000gn/T/mHgoLa_ti/test/)  5. open tiapp.xml. you can see it has a two modules tag. (attached)    I will make a Pull Request.  ",Bug,High,Closed,"2014-08-10 00:17:30","2014-08-10 00:17:30",3
"The Titanium SDK ","CLI: Add support for the Windows Phone Package hook for Windows platform",,"New Feature",High,Closed,"2014-11-14 21:06:02","2014-11-14 21:06:02",13
"The Titanium SDK ","CLI: Add support for the Windows Store Run hook for Windows platform","This hook is in the {{cli/hooks/ws-run.js}} file. This hook should copy the wp-run.js hook except there will be major changes to support winstore functions.    This ticket is BLOCKED until windowslib has the ability to install Windows 8.1 Store apps. The method implemented in windowslib works great for HTML5 apps that Windows Hybrid uses, but won't work for native Windows Store apps. However, windowslib should be able to launch and uninstall winstore apps.","New Feature",High,Closed,"2014-11-14 14:19:57","2014-11-14 14:19:57",8
"The Titanium SDK ","CLI: Add support for the Windows Phone Run hook for Windows platform",,"New Feature",High,Closed,"2014-11-14 14:19:45","2014-11-14 14:19:45",5
"The Titanium SDK ","CLI: Add support for the build command for Windows platform",,"New Feature",High,Closed,"2014-11-14 14:19:24","2014-11-14 14:19:24",13
"The Titanium SDK ","iOS: Fix all misc and logic type errors in static analyzer","Remaining misc and logic errors should be removed.    Verification method:  1. in Xcode, Product -> Analyze  2. Results will appear, look out for Core Foundation/Objective-C, Logic, API Misuse  type errors    Resolving this ticket will result in 0 Core Foundation/Objective-C, Logic, API Misuse type errors.",Sub-task,None,Closed,"2014-11-14 05:24:42","2014-11-14 05:24:42",6
"The Titanium SDK ","iOS: Fix all optimization type errors detected by static analyzer","Optimization type errors detected by static analyzer are usually instance variables declared but never used. These should be removed.    Verification method:  1. in Xcode, Product -> Analyze  2. Results will appear, look out for optimization type errors    Resolving this ticket will result in 0 optimization type errors.",Sub-task,None,Closed,"2014-11-13 03:47:55","2014-11-13 03:47:55",4
"The Titanium SDK ","iOS: Fix all memory leaks detected in static analyzer","Static analyzer detects potential memory leak of objects. These should be checked and fixed when necessary.    Verification method:  1. in Xcode, Product -> Analyze  2. Results will appear, look out for Memory type errors    Resolving this ticket will result in 0 Memory type errors.",Sub-task,None,Closed,"2014-11-13 03:45:01","2014-11-13 03:45:01",8
"The Titanium SDK ","iOS: Fix all dead store type error in static analyzer","dead store errors are values assigned to variables during initialization that are never used or read. These should be removed.     Verification method:  1. in Xcode, Product -> Analyze  2. Results will appear, look out for dead store type errors    Resolving this ticket will result in 0 dead store type errors.",Sub-task,None,Closed,"2014-11-13 03:40:16","2014-11-13 03:40:16",6
"The Titanium SDK ","Android 5.0: In a two column picker the selection indicator does not match the postion of the selected item","h5.Description    On an Android L device when using a two column picker the selection indicator and the selected item do not line up and the selected item appears lower than the indicator.    This only happens on a Android L device, on a 4.4.2 device the two match up correctly.    h5.Steps To Reproduce    1. Add the attached app.js to a project.  2. Build to     h5.Actual Result    The application matches screenshot AndroidLPicker    h5.Expected Result    The application should match screenshot 442Picker",Bug,Low,Closed,"2014-11-10 23:04:52","2014-11-10 23:04:52",8
"The Titanium SDK ","iOS: playing local file in AudioPlayer results in crash","Calling start() or play() on an AudioPlayer that has the url set to a local file results in a crash:      *Steps to reproduce issue*:  1. Create a project with the attached files  2. Launch the app on an iOS device and click 'play'  3. Notice that the app crashes, occasionally with the above error    *Expected results*:  The local file is played properly or no crash is witnessed if the file/method is unsupported.    *Notes*:  snippet for reference:  ",Bug,Medium,Closed,"2014-11-10 22:02:22","2014-11-10 22:02:22",4
"The Titanium SDK ","iOS: Split CFBundleVersion and CFBundleShortVersionString ","Early on the growth of iOS development the use of CFBundleVersion and CFBundleShortVersionString interchangeably was a tolerable behavior.    However, these are two unique keys. The problem with using them interchangeably was originally raised when the Testflight ad-hoc distribution service became available.     With Apple now having acquired the Testflight platform and incorporating it into their iTunes Connect platform, it is time to separate these two keys and to use them properly.    This will require changes to the CLI tooling and the exposing of these to the tiapp.xml editor in Studio.    Parity: TISTUD-5088 Android: Expose versionCode and versionName in TiApp Editor View  Reference: https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html    {quote}  CFBundleShortVersionString    CFBundleShortVersionString (String - iOS, OS X) specifies the release version number of the bundle, which identifies a released iteration of the app. The release version number is a string comprised of three period-separated integers. The first integer represents major revisions to the app, such as revisions that implement new features or major changes. The second integer denotes revisions that implement less prominent features. The third integer represents maintenance releases.    The value for this key differs from the value for CFBundleVersion, which identifies an iteration (released or unreleased) of the app. This key can be localized by including it in your InfoPlist.strings files.  {quote}    {quote}  CFBundleVersion    CFBundleVersion (String - iOS, OS X) specifies the build version number of the bundle, which identifies an iteration (released or unreleased) of the bundle. The build version number should be a string comprised of three non-negative, period-separated integers with the first integer being greater than zero. The string should only contain numeric (0-9) and period (.) characters. Leading zeros are truncated from each integer and will be ignored (that is, 1.02.3 is equivalent to 1.2.3). This key is not localizable.  {quote}",Bug,Critical,Closed,"2014-11-09 13:12:33","2014-11-09 13:12:33",8
"The Titanium SDK ","Android: Stepping over the last line while debugging does not load the app","When breakpoints for an app is set in a manner that the app will only load on device once the break point is resumed, stepping over on the last line of the code will not allow the app to load on device/emulator. For eg. when breakpoint is inserted in a sample classic project, clicking on the resume option allows the app to load on device however clicking on step over option till the end of the file does not load the app on to device/emulator.    This is not a regression as it is reproducible with <USER>studio 3.3.0    Steps to reproduce:  1. Create a sample classic app  2. Insert break points on 'win1.add(label1);' on app.js file  3. Debug on an android device/emulator  4. Click on resume  5. Debug again on device/emulator  6. Step over till the end of the file.    Actual Result:  3. Break point is hit and a black screen is shown on device/emulator  4. The app loads on device/emulator and works as expected  5. Break point is hit and a black screen is shown  6. App does not load and continues showing black screen    Expected Result:  6. App should load and should work as expected.    When this is tested with iOS device and emulator, there is no issue and works as expected.",Bug,Medium,Open,"2014-09-16 09:09:34","2014-09-16 09:09:34",8
"The Titanium SDK ","Print the CLI build command in the console view","After an app is build onto simulator/device or even packaged, then in order to get the CLI command, we need to enable the troubleshooting preferences and then, have to re-run the command and then, find out the command from the inundated flow of logs.    Studio has to print the CLI build command (ideally before the <USER>output) in the console view. It will make it easier to grab the command from console view.",Improvement,Medium,Closed,"2014-10-22 21:27:02","2014-10-22 21:27:02",3
"The Titanium SDK ","iOS: Document start/stopVideoCapture methods","Evidently, these methods aren't in our documentation:    http://docs.<USER>com/titanium/latest/#!/api/Titanium.Media    but they are in code:    https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/MediaModule.m#L888",Bug,Medium,Closed,"2014-11-07 00:09:07","2014-11-07 00:09:07",3
"The Titanium SDK ","Windows: Implement Ti.UI.EmailDialog","See: http://docs.<USER>com/titanium/3.0/#!/api/Titanium.UI.EmailDialog    * Add function: Ti.UI.createEmailDialog  * Implement proxy for EmailDialog.    h2. Implemented:  h3. Properties:  - bccRecipients  - ccRecipients  - messageBody  - subject   - toRecipients    h3. Methods  - isSupported( )  - open( properties )    h3. Events  - complete  ----    h2. Not Implemented:  h3. Properties:  - barColor  - html    h3. Methods  - addAttachment( attachment )    h3. Constants  - CANCELLED  - FAILED  - SAVED  - SENT  ","New Feature",High,Closed,"2014-11-06 14:51:20","2014-11-06 14:51:20",8
"The Titanium SDK ","TextArea set to FILL not wrapping correctly inside a horizontal layout with another sibling","Create a view with horizontal layout.  Make two siblings (a view, or anything else), and a TextArea set to FILL.    Enter an amount of text into the TextArea that it must wrap <b>but would not have wrapped if the other sibling wasn't there</b>.    The text correctly wraps but the TextArea itself does not adjust height.      This is a different symptom but may be related to TC-4810.    See example below (tried this on an HTC One, for screen size reference):    ",Bug,Critical,Closed,"2014-11-05 17:34:55","2014-11-05 17:34:55",13
"The Titanium SDK ","Windows: Implement Ti.UI.SearchBar","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.UI.SearchBar  https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.autosuggestbox.aspx","New Feature",High,Closed,"2014-11-05 22:03:45","2014-11-05 22:03:45",13
"The Titanium SDK ","iOS: Feature Request to deny debugging to defend against runtime analysis and manipulation","h6.Feature Request   Titanium to protect against debuggers and tools like Cycript to do runtime analysis and manipulation of iOS Applications.     Briefly described in this article:  http://resources.infosecinstitute.com/ios-application-security-part-23-defending-runtime-analysis-manipulation/","New Feature",High,Closed,"2014-11-05 19:37:23","2014-11-05 19:37:23",5
"The Titanium SDK ","Android 5.0: Adopt Material Guidelines in default Android application","Google has now given specific guidance on how to make Applications play nicely with Material Guidelines. We should adopt these changes in either our Android code, or our default theme.    http://android-developers.blogspot.com/2014/10/material-design-on-android-checklist.html",Improvement,High,Closed,"2014-11-05 18:36:36","2014-11-05 18:36:36",13
"The Titanium SDK ","TableView - first section doesn't scroll when doing pull to refresh","To see this issue, run this code:          Pull down table view so loading starts. Then, try to scroll table view. You should see that rows are scrolling, but first section view stays fixed (other seems fine).",Bug,High,Closed,"2014-09-08 16:36:54","2014-09-08 16:36:54",1
"The Titanium SDK ","iOS: Map annotations show buttons event is not declared on iOS 7.0.X","h3. Issue     When customer creates map annotations and one of them is left without declaring left or right button the buttons are shown when the annotation si clicked, this only happens when the app is deployed with Ti SDK 3.4.0 and iOS device version 7.0.3/7.0.4.    h3. Steps to repro    1. run test code  2. Click on the green annotation    Expected Result  The green annotation will not show any button (left or right)    Actual Result   The green annotation show both buttons     h3. Test Code        ",Bug,High,Closed,"2014-11-04 00:36:09","2014-11-04 00:36:09",5
"The Titanium SDK ","Calling Ti.Media.switchCamera(undefined) yields unexpected results on devices with 1 or no camera","When Ti.Media.switchCamera(undefined); is called on a device/simulator with zero or one camera, a runtime error is thrown.  If Ti.Media.switchCamera(undefined); is called on a device/simulator with two camera's (and one has been opened) then no action is performed and no error occurs.  *This is not a regression*.    *Steps to reproduce*:  1. Build a project with the attached files, for a device with 1 or no camera  2. Click through the camera test buttons  3. Notice that they correctly open the camera or not, depending on if that camera exists on the device  3. Click on the Invalid Camera button  4. Notice that a runtime error is thrown    *Expected Result*:  No error is thrown and no action is performed (like the camera buttons for unsupported/nonexistent cameras).    *Notes*:  I was unable to encounter this error on devices with two cameras, despite the same code and 'undefined' parameter passed.",Improvement,Low,Closed,"2014-11-03 21:56:07","2014-11-03 21:56:07",3
"The Titanium SDK ","CLI: Windows: Error: spawn OK when attempting to build on simulator","h6.Issue Description   <USER>Studio fails to build to simulator on Windows machine after completing installation steps.     h6.Steps to reproduce  # Go to File option menu > New > Mobile App Project > An alloy/classic app.  # Let <USER>Studio enable services for the app.  # Then build for AVD simulator under Run Configurations.   # The build <USER>collides on an Error.    h6.LOGS  Diagnostics: https://gist.github.com/egomez99/dbe4d40d65c117c0d00b#file-logs-txt-L1    Console output - Build <USER> https://gist.github.com/egomez99/dbe4d40d65c117c0d00b#file-logs-txt-L117    View Log file: https://gist.github.com/egomez99/dbe4d40d65c117c0d00b#file-logs-txt-L206    ti setup check: https://gist.github.com/egomez99/dbe4d40d65c117c0d00b#file-logs-txt-L3990    ti info: https://gist.github.com/egomez99/dbe4d40d65c117c0d00b#file-logs-txt-L4112    ti config: https://gist.github.com/egomez99/dbe4d40d65c117c0d00b#file-logs-txt-L4413    h6.Further details  Tried out installing Python 2.7 (for Windows 8 32bit version) and installed the Google release (Version 21) on the Android developer tooling (Windows: http://dl.google.com/android/android-sdk_r23-windows.zip).    h6.Similar threads   https://developer.<USER>com/question/157016/titanium-build----error-spawn-enoent  https://developer.<USER>com/question/175290/cant-find-my-app-on-emulator-error-or-error-log",Bug,Medium,Closed,"2014-11-03 21:55:11","2014-11-03 21:55:11",8
"The Titanium SDK ","CLI: Build fails when using Node 0.11.14","The next version of Node is reportedly imminent. When running the newest unstable / prerelease build (0.11.14) {{ti build -p ios}} fails with        {{ti build -p android}} fails with a similar        And mobileweb builds fail with      ",Bug,Critical,Closed,"2014-11-03 20:39:52","2014-11-03 20:39:52",13
"The Titanium SDK ","Android: Support SSL SNI on Apache HTTP Client","Google recommends using HttpURLConnection instead of the Apache HTTP client, see:    http://developer.android.com/reference/org/apache/http/impl/client/DefaultHttpClient.html  http://android-developers.blogspot.ch/2011/09/androids-http-clients.html    Switching to HttpsURLConnection would further support SSL SNI, see:  https://developer.android.com/training/articles/security-ssl.html  {quote}  Fortunately, HttpsURLConnection supports SNI since Android 2.3. Unfortunately, Apache HTTP Client does not, which is one of the many reasons we discourage its use.   {quote}  http://stackoverflow.com/questions/5879894/android-ssl-sni-support    Please consider switching to HttpURLConnection/HttpsURLConnection.    Thank you.",Improvement,High,Closed,"2014-10-31 10:04:38","2014-10-31 10:04:38",13
"The Titanium SDK ","Android Module: Fails to Build with 3.4.0.GA TiSDK","h6.Issue description  Calling Native Extensions (which are effectively native Ti Modules) that are build and then added to a Titanium app as modules. It fails to build on 3.4.0.GA although works on 3.3.0.GA (logs per each SDK attached). The example is a Hello World Module.     h6.Steps to replicate  # Unzip the attached module   # set its build properties as I outlined above so that it uses the following:   # 3.3.0.GA, Android/Google 14 SDK, r8d NDK.   # Run the command, ant dist   # Notice that the build is Successful (Logs attached)  # Change the TiSDK to 3.4.0.GA   # Run the command, ant dist   # Notice that the build fails (Logs attached)  # Change the TiSDK back to 3.3.0.GA     Changing the NDK to r9 as recommended does not address the issue either.    http://docs.<USER>com/titanium/latest/#!/guide/Installing_the_Android_NDK     We cannot seem to build this module with the 3.4.0.GA TiSDK, I've tried all sorts of combos, any ideas why we cannot build the module with for example the r8d, or r9 NDK, the 3.4.0.GA TiSDK and the Android-18 and Google-18 APIs. Thats seems like the combo we want but its not working.     h6.Combos Tried:   h6.3.5.0 CI  {quote}  |TISDK|NDK|Android SDK & Google APIs|SUCCESS|   |3.5.0.v20141028174916| r8d| 14 | No   |3.5.0.v20141028174916| r9| 14 | No   |3.5.0.v20141028174916| r8d| 18 | No   |3.5.0.v20141028174916| r9| 18 | No   {quote}    h6.3.4.2  {quote}  |TISDK|NDK|Android SDK & Google APIs|SUCCESS|   |3.4.2.v20141028145714| r8d| 14 | No   |3.4.2.v20141028145714| r9| 14 | No   |3.4.2.v20141028145714| r8d| 18 | No   |3.4.2.v20141028145714| r9| 18 | No   {quote}    h6.3.4.0.GA  {quote}  |TISDK|NDK|Android SDK & Google APIs|SUCCESS|   |3.4.0.GA| r8d| 14 | No   |3.4.0.GA| r9| 14 | No   |3.4.0.GA| r8d| 18 | No   |3.4.0.GA| r9| 18 | No   {quote}    h6.3.3.0.GA  {quote}  |TISDK|NDK|Android SDK & Google APIs|SUCCESS|   |3.3.0.GA| r8d| 14 | YES   |3.3.0.GA| r9| 14 | YES   |3.3.0.GA| r8d| 18 | YES   |3.3.0.GA| r9| 18 | YES   {quote}    These are the following build.properties:         h6.NDKs  r8d NDK: http://dl.google.com/android/ndk/android-ndk-r8d-darwin-x86.tar.bz2   r9 NDK: http://dl.google.com/android/ndk/android-ndk-r9-darwin-x86.tar.bz2 ",Bug,High,Closed,"2014-10-31 23:31:17","2014-10-31 23:31:17",3
"The Titanium SDK ","Android: CloudPush - events not fired correctly","h4. Problem Description  If CloudPush.singleCallback is set to true, callback event will not be fired when clicking the tray notification that launches the app (app wasn't in the foreground nor the background).    Without CloudPush.singleCallback set to true, callback will be fired as expected.    trayClickFocusedApp and trayClickLaunchedApp are never fired in any case.    h4. Testcase  1. Create a new mobile project (classic titanium)  2. Paste this to app.js    3. Run in device.     h4. OBSERVED PROBLEM    After Enabling ti.cloud and ti.cloudpush in the project, we provided the Production and Development Key generated by titanium and also the ACS API key from web console in the tiapp.xml file.        We also configured the app for GCM protocol. After Running the app. An error message has shown and though GCM Authentication was successful, The Device token was not shown in the console.    h4. Error Message      ",Bug,High,Closed,"2014-08-30 01:27:40","2014-08-30 01:27:40",21
"The Titanium SDK ","Windows: Run cpplint as part of Travis build","cpplint is a Python script that allows users to test their code for compliance against Google's C++ Style guide.    We should run this script on the Travis build.",Story,Low,Closed,"2014-10-30 21:31:12","2014-10-30 21:31:12",8
"The Titanium SDK ","Windows: Add cppcheck + cpplint to CI Build","cpplint allows us to check for Google C++ Style guide compliance:    https://wiki.<USER>ci.org/display/JENKINS/Cppcheck+Plugin  http://cppcheck.sourceforge.net    This gives a good suggestion for how to fix it:    http://stackoverflow.com/questions/14172232/how-to-make-cpplint-work-with-<USER>warnings-plugin",Story,Low,Closed,"2014-10-30 21:29:32","2014-10-30 21:29:32",13
"The Titanium SDK ","MobileWeb: When hiding a Ti.map view and showing it again the view is reloaded","h3. Issue    When working on mobile web and using ti.map if the map visible property is set to false and the is set to true again the map will be reloaded to the original state instead of keeping the same location and zoom.    h3. Steps to repro    1. Run test code  2. Move and zoom in the map view  3. Click on the toggle button to hide it  4. Click on the toggle button to show it    h5. Expected Result  The map will be shown again with the last location and zoom    h5. Actual Result  The map is reloaded to the original state    h3. Test code    ",Bug,High,Closed,"2014-10-29 22:46:33","2014-10-29 22:46:33",8
"The Titanium SDK ","Sanity check required by evaluating deployment-targets in tiapp.xml","h4. Instructions  From the command line, create an empty project with iphone and android natures/targets. You should be able to build for ios  and for android  without a problem    Now open up the tiapp.xml and change  to  and build again for ios     An error occurs.     If you change the android target to false, tooling will still blindly build you a nice new android apk.    h4. Impact  Projects setup for iOS only can be tested against ios/android without modification.  Projects built for android only (lets say on a windows system and then moved to the mac) need to be modified.  The modification is fine, and understandable, but the error message above is not.    h4. Solution  Tooling should check the tiapp.xml to see if an appropriate deployment target exists that matches the target from the command line switches/parameters and inform the user if the original project is missing any components. ",Bug,None,Resolved,"2014-10-22 20:05:00","2014-10-22 20:05:00",1
"The Titanium SDK ","iOS: CLI - Remove any 32-bit only restrictions in Titanium CLI",,Improvement,High,Closed,"2014-10-27 22:23:53","2014-10-27 22:23:53",13
"The Titanium SDK ","iOS: Rebuild supported closed and open source modules for 64-bit","We need to update and re-build the following modules:    h3. Commonly Used  * ti.compression: https://github.com/<USER>modules/ti.compression  * ti.imagefactory: https://github.com/<USER>modules/ti.imagefactory  * ti.storekit: https://github.com/<USER>modules/ti.storekit  * ti.styledlabel: https://github.com/<USER>modules/ti.styledlabel  * ti.urbanAirship: https://github.com/<USER>modules/ti.urbanairship  * ti.airprint: https://github.com/<USER>modules/ti.airprint  * ti.paypal: https://github.com/<USER>modules/ti.paypal  * ti.admob: https://github.com/<USER>modules/ti.admob    h3. Packaged with the SDK  * ti.touchid: https://github.com/<USER>modules/ti.touchid  * ti.facebook: https://github.com/<USER>modules/ti.facebook  * ti.map: https://github.com/<USER>modules/ti.map  * TIMOB-18089 (Core Motion)  * TIMOB-18090 (UrlSession)    h3. Important Enterprise Modules  * TIMOB-18091 (Encrypted Database)  * com.<USER>apm: https://github.com/<USER>modules/com.<USER>apm  * <USER>https: https://github.com/<USER>modules/<USER>https  * ti.geofence: https://github.com/<USER>modules/ti.geofence  * ti.ldap: https://github.com/<USER>modules/ti.ldap  * ti.crypto: https://github.com/<USER>modules/ti.crypto    _EDIT_  * Removed ti.inappbilling from the list since it's android only  ",Improvement,High,Closed,"2014-10-27 22:23:12","2014-10-27 22:23:12",21
"The Titanium SDK ","iOS: Upgrade titanium_verify source code to 64-bit","Upgrading this to 64-bit: https://github.com/<USER>titanium_verify/tree/master/iphone    Please review https://github.com/<USER>titanium_verify/tree/travis which is currently failing, but can likely be fixed easily.",Improvement,High,Closed,"2014-10-27 22:21:18","2014-10-27 22:21:18",13
"The Titanium SDK ","iOS: Upgrade titanium_profiler source code to 64-bit","Upgrading this to 64-bit: https://github.com/<USER>titanium_profiler/tree/master/ios    Please review https://github.com/<USER>titanium_profiler/tree/travis which is currently failing, but can likely be fixed easily.",Improvement,High,Closed,"2014-10-27 22:20:40","2014-10-27 22:20:40",13
"The Titanium SDK ","iOS: Upgrade titanium_debugger source code to 64-bit","Upgrading this to 64-bit: https://github.com/<USER>titanium_debugger/tree/master/ios. Also note comments about http://www.cocoanetics.com/2014/10/xcode-6-drops-armv7s/.    Please review https://github.com/<USER>titanium_debugger/tree/travis which is currently failing, but can likely be fixed easily.",Improvement,High,Closed,"2014-10-27 22:20:14","2014-10-27 22:20:14",34
"The Titanium SDK ","iOS: Complex non-composite layouts show before lay-out since 3.3.0","A few weeks ago I started noticing that a lot of apps where I used complex {{horizontal}} and {{vertical}} layouts were showing their children before they were layed out. I made a simple test case that showed this has been the case since 3.3.0 and is not related to iOS 8 which I first assumed.    *NOTE:* In some occasions I've (as well as Jason) have seen the children not being layed out at all!    h2. Test case  Run the following test case again Titanium 3.3.0.GA or later:        h2. Attached videos  The movies I recorded show clearly that the children show center-top (except the first label which has {{top:20}} before being layed out at their proper place.    Before Titanium 3.3.x the children views didn't show up until they were layed out, which of course looks better.    - {{323-710.mov}} Titanium 3.2.3 & iOS 7.1 (vertical) (/)  - {{330-710.mov}} Titanium 3.3.0 & iOS 7.1 (vertical) (x)  - {{330-710-horizontal.mov}} Titanium 3.3.0 & iOS 7.1 (horizontal) (x)  - {{340-810.mov}} Titanium 3.4.0 & iOS 8.1 (vertical) (x)  ",Bug,High,Closed,"2014-10-27 14:00:13","2014-10-27 14:00:13",21
"The Titanium SDK ","Windows: Implement Ti.Media.Sound","https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.playback.mediaplayer.aspx  http://docs.<USER>com/platform/latest/#!/api/Titanium.Media.Sound    Appears to be phone-only.","New Feature",High,Closed,"2014-10-24 23:39:34","2014-10-24 23:39:34",13
"The Titanium SDK ","Windows: Implement Ti.Media.AudioRecorder","Implement Ti.Media.AudioRecorder for the Windows platform, to achieve parity with iOS & Android.  ","New Feature",High,Closed,"2014-10-24 23:39:12","2014-10-24 23:39:12",21
"The Titanium SDK ","Windows: Implement Ti.Media.AudioPlayer",,"New Feature",High,Closed,"2014-10-24 23:38:31","2014-10-24 23:38:31",21
"The Titanium SDK ","Windows: Implement Ti.Contacts","http://docs.<USER>com/platform/latest/#!/api/Titanium.Contacts  https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.contacts.aspx","New Feature",High,Closed,"2014-10-24 22:06:27","2014-10-24 22:06:27",13
"The Titanium SDK ","Windows: Implement Ti.Media.VideoPlayer","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.Media.VideoPlayer    https://msdn.microsoft.com/en-us/library/windows/apps/xaml/windows.ui.xaml.controls.mediaelement.aspx","New Feature",High,Closed,"2014-10-24 22:05:29","2014-10-24 22:05:29",21
"The Titanium SDK ","Windows: Implement Ti.UI.TableViewSection",,"New Feature",High,Closed,"2014-10-24 22:04:44","2014-10-24 22:04:44",13
"The Titanium SDK ","Windows: Implement Native module support","This encompasses a few sub-items:    * Prove that we can build ti.cloud, ti.map and ti.facebook-type modules  * Create a default project structure for new modules  * Add CLI tooling to create these modules  * Hook up Studio to create new module projects.",Epic,High,Closed,"2014-10-24 22:02:06","2014-10-24 22:02:06",0
"The Titanium SDK ","Windows: Implement Ti.UI.ScrollableView","See here: http://docs.<USER>com/titanium/3.0/#!/api/Titanium.UI.ScrollableView","New Feature",High,Closed,"2014-10-24 21:52:37","2014-10-24 21:52:37",21
"The Titanium SDK ","Windows: Implement Ti.Geolocation",,"New Feature",High,Closed,"2014-10-24 21:51:52","2014-10-24 21:51:52",13
"The Titanium SDK ","Windows: Implement Ti.UI.Slider",,"New Feature",High,Closed,"2014-10-24 21:50:13","2014-10-24 21:50:13",13
"The Titanium SDK ","Windows: Implement Ti.UI.ProgressBar","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.UI.ProgressBar  http://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.progressbar    h1. Ti.UI.Windows.ProgressBar  h2. Implemented  h3. Properties  - isIndeterminate  - color  - max  - min  - value  - showError  - showPaused    h1. Ti.UI.ProgressBar  h2. Implemented  h3. Properties  - color  - font  - max  - message  - min  - value    h3. Methods  - add( )  - hide( )  - remove( )  - show( )    ----    h2. Not Implemented:  h3. Properties:  - style","New Feature",High,Closed,"2014-10-24 21:49:40","2014-10-24 21:49:40",8
"The Titanium SDK ","Windows: Implement Ti.UI.TableView",,"New Feature",High,Closed,"2014-10-24 21:48:59","2014-10-24 21:48:59",21
"The Titanium SDK ","Windows: Implement Ti.UI.TextField","http://docs.<USER>com/titanium/3.0/#!/api/Titanium.UI.TextField  http://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.textbox.aspx","New Feature",High,Closed,"2014-10-24 21:48:35","2014-10-24 21:48:35",13
"The Titanium SDK ","Windows: Implement Ti.Database","See http://docs.<USER>com/titanium/3.0/#!/api/Titanium.Database    * Titanium.Database  * Titanium.Database.install  * Titanium.Database.open","New Feature",High,Closed,"2014-10-24 21:47:10","2014-10-24 21:47:10",13
"The Titanium SDK ","Windows: Implement Ti.Network.TCPSocket",,"New Feature",High,Closed,"2014-10-24 21:46:23","2014-10-24 21:46:23",13
"The Titanium SDK ","Windows: Implement Ti.Network.HTTPClient",,"New Feature",High,Closed,"2014-10-24 21:45:36","2014-10-24 21:45:36",21
"The Titanium SDK ","Windows: Implement Ti.UI.AlertDialog",,"New Feature",High,Closed,"2014-10-24 21:44:37","2014-10-24 21:44:37",13
"The Titanium SDK ","iOS: Support Apple's integration of TestFlight beta testing","As described in [this blog on tiDev.io|http://www.tidev.io/2014/10/16/how-to-use-apples-new-testflight-beta-testing/] it currently takes a manual step to make an {{dist-appstore}} build compatible for distribution via Apple's integration of TestFlight. <USER>also found out that the entitlement can't be left in     Reading the Submit to App Store section in Apple's [guide on TestFlight Beta Testing|https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/BetaTestingTheApp.html] it looks like you can leave the new entitlements in and use the same build to publish to the App Store:    {quote}  When you are done using TestFlight Beta Testing, you can submit the app for final review. Before you submit it, make sure you no longer want to test it or any builds you uploaded earlier than it. When the app becomes Ready for Sale in the App Store, testing automatically stops on earlier builds, and you will be unable to view or test them.  {quote}    So it looks like the tooling can simply be adjusted to add the new entitlement for any {{--dist-appstore}} builds.",Improvement,High,Closed,"2014-10-17 11:30:57","2014-10-17 11:30:57",3
"The Titanium SDK ","iOS: Replace custom JSCore with built-in JSCore version","Currently, we ship a custom version of JSCore, built from:     https://github.com/<USER>tijscore    Starting in iOS 7, applications can instead use the built-in version of JSCore:    http://www.bignerdranch.com/blog/javascriptcore-and-ios-7/    We should investigate switching this.    Pros:  * Smaller application file size  * Updated JS engine with possible performance improvements    Cons:  * Updated iOS versions could provide breaking changes for your applications  * Possible issues with having to update our debugger and profiling code",Epic,Critical,Closed,"2014-10-23 20:27:34","2014-10-23 20:27:34",15
"The Titanium SDK ","Android: Support TLS versioning on XHR client","We need to support different TLS versions in our XHR. A property ({{tlsVersion}}) will be added to {{Ti.Network.HTTPClient}} for Android. It is currently iOS-only. See https://github.com/<USER>titanium_mobile/blob/master/android/modules/network/src/java/ti/modules/titanium/network/TiSocketFactory.java#L25 for where it is ultimately used.    http://developer.android.com/reference/javax/net/ssl/SSLContext.html#getInstance(java.lang.String)    While TLS 1.0 is not vulnerable to POODLE, we may wish to make the default TLS 1.1:    https://securityblog.redhat.com/2014/10/15/poodle-a-ssl3-vulnerability-cve-2014-3566/",Improvement,High,Closed,"2014-10-23 19:36:16","2014-10-23 19:36:16",8
"The Titanium SDK ","Android: Creating & saving contact does not add the contact to the phone's contact list","h6. This regression is seen from 3.4.0.GA and above. It works as expected in 3.3.0.GA.    h5.Description:  1. Create a default classic app & replace the app/js with the following code:    2. Build & run the app on android device.  3. Open contacts on the device & check if you have a new contact   Ade Crude added.    h5.Actual Result:  1.A new contact Ade Crude is not added to the contacts list on the device.    h5.Expected Result:  1.A new contact Ade Crude is added to the contact list on the device",Bug,High,Closed,"2014-10-23 18:44:34","2014-10-23 18:44:34",5
"The Titanium SDK ","TiConvert toBoolean doesnt handle type Interger","h2. Problem    Have tracked down a pesky problem where setting the visible property of a TiLabel >> TiView to 0 (type integer) crashed the application. (see log below)    Pulled SDK and updated the method to have a case where it handles an input of type Integer. Built the SDK and ran the App. All fixed. Example below of what I added. I don't know Java but it gives you an idea of what to look at.    h2. Logs    {code:lang=none|title=console}  [ERROR] :  AndroidRuntime: FATAL EXCEPTION: main  [ERROR] :  AndroidRuntime: java.lang.IllegalArgumentException: Unable to convert java.lang.Integer to boolean.  [ERROR] :  AndroidRuntime:  at org.<USER>titanium.util.TiConvert.toBoolean(TiConvert.java:357)  [ERROR] :  AndroidRuntime:  at org.<USER>titanium.view.TiUIView.propertyChanged(TiUIView.java:723)  [ERROR] :  AndroidRuntime:  at ti.modules.titanium.ui.widget.TiUILabel.propertyChanged(TiUILabel.java:280)  [ERROR] :  AndroidRuntime:  at org.<USER>kroll.KrollPropertyChange.fireEvent(KrollPropertyChange.java:21)  [ERROR] :  AndroidRuntime:  at org.<USER>kroll.KrollProxy.handleMessage(KrollProxy.java:1059)  [ERROR] :  AndroidRuntime:  at org.<USER>titanium.proxy.TiViewProxy.handleMessage(TiViewProxy.java:347)  [ERROR] :  AndroidRuntime:  at android.os.Handler.dispatchMessage(Handler.java:95)  [ERROR] :  AndroidRuntime:  at android.os.Looper.loop(Looper.java:137)  [ERROR] :  AndroidRuntime:  at android.app.ActivityThread.main(ActivityThread.java:4745)  [ERROR] :  AndroidRuntime:  at java.lang.reflect.Method.invokeNative(Native Method)  [ERROR] :  AndroidRuntime:  at java.lang.reflect.Method.invoke(Method.java:511)  [ERROR] :  AndroidRuntime:  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)  [ERROR] :  AndroidRuntime:  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)  [ERROR] :  AndroidRuntime:  at dalvik.system.NativeStart.main(Native Method)  ",Improvement,Critical,Closed,"2014-10-23 03:58:42","2014-10-23 03:58:42",1
"The Titanium SDK ","iOS: Add support for Swift libraries in native modules","Modules that have frameworks built using Swift do not work. Modules compile, but when you try to build an app using the module, you get errors:        As you can see from the error, we attempted to implement the Chase Paymentech SDK. Chase puts the Paymentech SDK download behind a login wall... We can't provide it, but you can sign up (free) and download it.    So, to reproduce this error (and possibly fix it), my steps:    h4. Create the module  # ti create -n ti.test -p ios --id ti.test -t module -url http://test.com -d .  # Open up the project in Xocde. Confirm it builds.  # Download the library from https://secure.paymentech.com/developercenter/mobilesdk/ios/?WT.mc_id=adc001_sdk  # Place the .framework file in <module_root>/iphone/platform  # Drag the file into the source explorer in Xcode. No need to copy it (as it's already in the project). Or you can follow the linking instructions in the paymenttech docs  # Edit the module.xcconfig file to reference the framework:        The module builds without error for me (both from inside Xcode and from the command line).    h4. Create the application  # Drop the built module into the global module cache (Unzipped). For me this is ~/Library/ApplicationSupport/Titanium/modules/iphone  # Open Studio  # Create a new 2-tabbed app, iPhone/iPad only  # Add the module to the application from the tiapp.xml editor  # Drop to the command line. 'ti build -p iOS'.    The app will fail to build, unable to find the ChasePaymentech framework    h4. Fix the Xcode project  # Open builds/iphone/<AppName>.xcodeproj  # Follow the instructions in the Paymenttech document to both link the framework in the application, and then to copy the framework during the build <USER>  ## Place the framework library in a folder accessible to your application.  ## Select Project Setting and Build Phase. Click on “Link Binary With Libraries” section. Then press “+” button to add the framework.  ## Click on “Add Other…” and choose ChasePaymentech.framework from the physical location in step 1.  ## Click “Copy Files”, ensure “Framework” is selected in “Description” drop-down. Click “+” as indicated below.  ## Select “ChasePaymentech.framework” under “frameworks”.  ## Under “Project Navigator”, within “Frameworks”, “ChasePaymentech.framework” would have been added.    Attempt to build the application, you will get the error about ld: embedded dylibs/frameworks are only supported on iOS 8.0 and later    h4. To Fix it  Build Settings > iOS Deployment Target. Update this to 8.0    App builds successfully...sometimes. When it fails, it appears to fail because it can't find the Chase framework. This suggests that the framework isn't being copied in time to the correct output location before linking.",Bug,High,Closed,"2014-10-22 15:09:06","2014-10-22 15:09:06",0
"The Titanium SDK ","iOS: Add Swift modules support","It is not currently possible to add Swift code to a Titanium module.    h3. Steps to reproduce:  # ti create -n ti.test -p ios --id ti.test -t module -url http://test.com -d .  # Open up the project in Xocde. Confirm it builds.  # Add a Swift file and accept the addition of a “bridging header.  # Attempt to build. It then prompts to update the minimum target version from 4.0 to 7.0  # Build and get the following error:        This is the error reported here: http://stackoverflow.com/questions/24020986/error-when-compiling-a-static-library-using-swift-unknown-option-character-x    And this is because you can't built a static library using Swift:    http://openradar.appspot.com/radar?id=5536341827780608    It may be possible to get around this:    http://andelf.github.io/blog/2014/06/25/write-swift-module-with-swift-cont/    Generate .swiftmodule .swiftdoc      Generate .o      Generate .a    ",Epic,High,Closed,"2014-10-22 20:36:00","2014-10-22 20:36:00",63
"The Titanium SDK ","iOS 8.1: Titanium.Locale.currentLanguage only returns en as language","In IOS 8.1 simulator (not on device), Titanium.Locale.currentLanguage can only return en, no matter what the system language is set to.    This is the code that sets the default locale: https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/TiLocale.m#L31",Bug,Critical,Closed,"2014-10-20 05:54:26","2014-10-20 05:54:26",3
"The Titanium SDK ","Map: Android - Google Maps v2 map tiles not showing when scrolling/zooming ","After starting a map view, everything works fine for a while.     If you do a lot of scrolling and zooming, you don't see any map details any more after a while on some devices (e.g. Samsung Galaxy S4 w Android 4.2.1, Oppo Find 7 w Android 4.4, Google Nexus 7 w Android 4.4 etc.).    * You can still scroll and zoom, but the map stays blurry (street names still appear).  * Switching between satellite and standard view doesn't change the bevhaviour.  * Sometimes the app crashes after heavy zooming and scrolling.  * After clearing the cache (application settings) and restarting the app, the map works fine again for some time. So I assume it's a memory issue.  * In addition some users report that the performance of the map view is, compared to the Google Maps app, worse and the use of internet traffic is higher.    I attached a sample project. You just have to enter your Google API key and adapt the app id.  If you have any questions or need more information feel free to post a comment.",Bug,Critical,Closed,"2014-07-25 09:06:03","2014-07-25 09:06:03",21
"The Titanium SDK ","Android 5.0: javax.net.ssl.SSLHandshakeException: Connection closed by peer","h6.Issue Description  Today now that Google released what should be the final builds of Android L we upgraded our Nexus 5 device to it from the Google Page:   http://developer.android.com/preview/index.html     I just loaded this in the iPhone Sim and I got the success alert as expected. I tried it on the Android Phone running 4.2.2 and it also got the success alert. On the Nexus 5 running Android 5.0 I get an error alert with this error in the logs attached.    h6.Sample code      h6.Logs      h6.Tiapp.xml  http://docs.<USER>com/titanium/3.0/#!/guide/Installing_the_Android_SDK-section-29004851_InstallingtheAndroidSDK-SupportforAndroidWearandAndroidLSDKs",Bug,High,Resolved,"2014-10-20 22:36:35","2014-10-20 22:36:35",5
"The Titanium SDK ","Android 5.0: Improve CLI support","The Android build does not properly convert the Android SDK L from the codename L to the version 20 which is causing emulator builds to fail saying the sdk is too old.    Furthermore, the sorting of the Android SDKs is flawed and doesn't properly order SDKs based on the version. Instead it incorrectly uses the codename.    Lastly, the vendor dependency versions needs to be bumped to add support for Android SDK 21 and Android Build & Platform Tools v21.",Bug,Critical,Closed,"2014-10-17 23:56:09","2014-10-17 23:56:09",8
"The Titanium SDK ","iOS: Investigate replacing ios-sim with simctl","Xcode 6 includes a new application simctl that may prove to a better way to launch applications in Xcode 6+.    Here's a reference to using it in PhoneGap:    https://github.com/phonegap/ios-sim/issues/92  https://issues.apache.org/jira/browse/CB-7519    Another reference where an Apple engineer has jumped in:    http://stackoverflow.com/questions/26269898/ios-sim-command-and-xcode-6-0-not-able-to-start-ios8-devices",Story,High,Closed,"2014-10-16 17:30:33","2014-10-16 17:30:33",1
"The Titanium SDK ","Windows: Investigate necessity of protect() and unprotect() usage","protect() and unprotect() should be unnecessary for the developer to call directly, but there seem to be some cases where they appear to be required. We need to understand the reasons they are used, and upgrade the infrastructure to remove that necessity.    You need to ensure that `Ti.UI.createAlertDialog` API is exposed, so please copy and paste this into the `TiUIModule.cpp` js string:      You also need to remove the protect/unprotect() calls inside AlertDialog.    Here's the test, and steps to reproduce: (code under steps)    1. Click on the button  2. See the alert dialog  3. Click on any of the two buttons in less than one second since shown  At this point you will see something is the console log  4. Repeat set number 3 but this time wait over a second    At this point the log will not show.        Explanation:    Since the `protect` and `unprotect` have been removed, the alert dialog proxy will die when garbage collection is called. In the button event listener we're calling GC (for testing purposes only) after one second. If you click on the button before GC, you're saved and the event listener of the alert is called. If you wait for the GC to be called, the event listener is not called.    The `share_ptr` is likely hiding a bug. In the click event handler of the alert's button (native event handler), we're checking if the proxy is still alive or not, and if it's not, we just ignore the callback to avoid a crash. But we need to realize that the native alert object and its buttons may still alive. And the question is, when will the native alert and its buttons be release from memory?    This is the reason for a `protect` and `unprotect` in the alert dialog proxy. I added the `protect` and `unprotect` back to test, and everything will go back to normal.",Bug,High,Closed,"2014-10-15 17:52:57","2014-10-15 17:52:57",8
"The Titanium SDK ","iOS: NSLog Fails on iOS simulators","After the recent updates to support Xcode 6, NSLog no longer works with ios-sim. The output of logging information is crucial for projects like tiO2 which require log output to see the results of testing.    This used to work in iOS 7, but we removed some functionality in this commit (https://github.com/<USER>ios-sim/commit/1c01fceb33428259308321989704bd1c790c2cca) because it was causing CPU spikes in iOS 8. Removing this (readInBackgroundAndNotify) fixed the CPU spikes, but it also removed the NSLog functionality on iOS 7. It never appeared to work on iOS 8 simulators.    We need to reproduce the CPU spikes and logging failures, and then see what code is required to make NSLog work again.    This application can help with testing the functionality: https://github.com/<USER>ioslib/tree/master/test/TestApp",Bug,High,Closed,"2014-10-15 17:37:20","2014-10-15 17:37:20",1
"The Titanium SDK ","iOS: Ti.Network.createHTTPClient times out on GET request with POST data","h6.Issue description  I have been getting a Timeout Error for the get xhr httpclient request after upgrading to the latest 3.4 SDK.     We upgrade from 3.2.3.GA, and everything was working fine till I have updated to latest SDK but after the update i cannot proceed ahead as i am always getting a timeout error on the get request.     h6.Steps to reproduce  # Grab app.js and launch iOS simulator  # Click XHR to request server response  # Monitor Logs        This might also fail to connect: https://link.opera.com/  ",Bug,High,Closed,"2014-10-15 15:38:22","2014-10-15 15:38:22",8
"The Titanium SDK ","Android: Please add text settings (font size, family, color) to searchbar and searchview","When I was app developing on Titanium SDK 3.2.3, I was using a custom theme with the parent Theme.Holo.Light. However, after I updated to 3.4.0, we were forced to change the parent theme Theme.AppCompat.Light. Before the change, the color of the searchbar text was black, and it worked fine with the white navigation bar. Now, the color of the text is white, which is almost invisible with the current theme. There is currently no way to change this through Titanium.","New Feature",High,Closed,"2014-10-09 17:37:55","2014-10-09 17:37:55",3
"The Titanium SDK ","Windows: Proxy Device Log Statements",,"Technical task",High,Closed,"2014-10-13 23:16:19","2014-10-13 23:16:19",8
"The Titanium SDK ","Windows: Install app on Device",,"Technical task",Critical,Closed,"2014-10-13 23:15:46","2014-10-13 23:15:46",8
"The Titanium SDK ","Windows: Connect to Device",,"Technical task",High,Closed,"2014-10-13 23:15:24","2014-10-13 23:15:24",8
"The Titanium SDK ","Windows: Proxy Emulator Log Statements",,"Technical task",High,Closed,"2014-10-13 23:14:57","2014-10-13 23:14:57",8
"The Titanium SDK ","Windows: Install app to Emulator",,"Technical task",High,Closed,"2014-10-13 23:14:30","2014-10-13 23:14:30",8
"The Titanium SDK ","Windows: Launch Emulator",,"Technical task",High,Closed,"2014-10-13 23:13:59","2014-10-13 23:13:59",8
"The Titanium SDK ","Windows: Add Issue Detection to 'ti info'",,"Technical task",High,Closed,"2014-10-13 23:12:41","2014-10-13 23:12:41",5
"The Titanium SDK ","Windows: Detect Windows Phone Devices",,"Technical task",High,Closed,"2014-10-13 23:11:03","2014-10-13 23:11:03",5
"The Titanium SDK ","Windows: Detect Windows Phone Emulators",,"Technical task",High,Closed,"2014-10-13 23:10:34","2014-10-13 23:10:34",5
"The Titanium SDK ","Windows: Detect Windows PowerShell Permissions",,"Technical task",High,Closed,"2014-10-13 23:10:02","2014-10-13 23:10:02",5
"The Titanium SDK ","Windows: Detect Windows Phone SDK Versions",,"Technical task",High,Closed,"2014-10-13 23:09:33","2014-10-13 23:09:33",5
"The Titanium SDK ","Windows: Detect Visual Studio installations",,"Technical task",High,Closed,"2014-10-13 23:09:07","2014-10-13 23:09:07",5
"The Titanium SDK ","Android: Cannot Programmatically Open List Picker","h6.Issue description  When the user clicks the (return/next) (ios/android) button on the keyboard after entering the password on iOS and clicking return the list picker is selected with #3. This is what we want to occur on Android as well. However on Android after entering the password and clicking next it select #3 in the list and then moves onto selecting the password field. We want the list picker to be open with #3 selected.     h6.Steps to Reproduce:   # Launch app.js on iOS   # click on the password field.   # enter data   # click return   # notice how the picker is selected and moved to #3   # Launch the app on Android Tablet   # click on the password field   # enter data   # click return   # notice how the picker selected #3 and then moved onto the password field     h6.EXPECTED:  The picker was opened with #3 selected so that they user can change it.     h6.Devices under test  Galaxy Note 10.1 on 4.3  Xperia Play 4.0.4",Bug,High,Closed,"2014-10-13 21:12:20","2014-10-13 21:12:20",8
"The Titanium SDK ","iOS: tabsTintColor is not being honored","h5. Problem Description   tabsTintColor is not being honored    h5. Test Code      h5. Test Result   tabsTintColor is not being honored, it is always set to #929292",Bug,High,Closed,"2014-07-30 01:40:13","2014-07-30 01:40:13",5
"The Titanium SDK ","Android: Default classic & alloy apps stops responding after launch on android 5.0 x86 64 bit emulator","h6.NOTE: 1. The android L x86 64 bit emulator is the first 64 bit emulator(similarly,nexus 6 will also be 64 bit). I am unsure if all apps built with titanium show this behaviour but, I have tried both the default apps (classic & alloy) along with kitchensink & all exibit the same behaviour.   h6.            2. Installed a native app (made by wilson) & it works without any issues. (native app: monkey.apk attached)    h5.Description:  1. Build a classic or an alloy default app to android L x86 64bit emulator.   2. Let the app launch on the emulator.    h5.Actual Result:  1. The app launches but clicking on the app gives app has stopped responding.  2. We get the following logs in android monitor:    3. Tried running kitchensink too & I see the same behaviour as default app.    h5.Expected Result:  1. The app should not stop responding & work successfully.",Bug,High,Closed,"2014-10-13 18:11:31","2014-10-13 18:11:31",8
"The Titanium SDK ","Facebook SDK: Native Like Button","The native Like Button of the Facebook SDK just gone from beta to GA and can now be used in any production app using the latest Facebook SDK. A proxy method like fb.createLikeView() would be a great addition to the existing Facebook module!    More infos:   - iOS: https://developers.facebook.com/docs/ios/like-button/  - Android https://developers.facebook.com/docs/android/like-button/","New Feature",Medium,Closed,"2014-10-10 10:34:35","2014-10-10 10:34:35",1
"The Titanium SDK ","MobileWeb: Update build system to use new windowslib","Integrate the latest https://github.com/<USER>windowslib into Mobile Web's build and ti info.",Improvement,High,Closed,"2014-10-09 22:40:21","2014-10-09 22:40:21",13
"The Titanium SDK ","Run ti-mocha tests as part of Jenkins build","    http://social.technet.microsoft.com/wiki/contents/articles/18173.how-to-launch-windows-phone-8-emulator-without-using-visual-studio-2012.aspx  http://msdn.microsoft.com/en-us/library/windows/apps/dn632395.aspx#BKMK_commandline  ",Story,High,Closed,"2014-10-09 18:57:01","2014-10-09 18:57:01",8
"The Titanium SDK ","iOS - SQLite module throws warnings about deprecated API usage",,Improvement,Medium,Closed,"2014-10-08 18:55:41","2014-10-08 18:55:41",3
"The Titanium SDK ","Android: support for android:lines and android:maxLines","h3. Request    Currently on Titanium.UI.Label, there is no property to support max.Lines or number of lines similar to Android, customer would like to have this feature enabled.    android:lines   http://developer.android.com/reference/android/widget/TextView.html#attr_android:lines     android:maxLines   http://developer.android.com/reference/android/widget/TextView.html#attr_android:maxLines ",Improvement,Medium,Closed,"2014-10-07 20:20:42","2014-10-07 20:20:42",3
"The Titanium SDK ","CLI: Update node-appc to latest version to address timodule caching","There were some fixes in node-appc's timodule library to address module detection caching.",Improvement,Medium,Closed,"2014-10-06 22:45:01","2014-10-06 22:45:01",5
"The Titanium SDK ","CLI: Unable to build to iOS 8.0 simulator with Xcode 6.1","h5.Description    When Xcode 6.1 is selected when attempting to build to an iOS 8.0 simulator the build fails with the error below      It appears that in Xcode6.1 Apple has *removed the option for an iOS 8.0 sim* as there is no option to create or build to a sim with 8.0 within Xcode itself and that this is the root cause of the issue. However when building to a simulator the option is given if Xcode 6.0.1 and Xcode 6.1 are present in the same folder, is 6.0.1 is removed from the folder then the simulator is not longer presented as an option.    When attempting to install to an iOS 8.0.2 device the build does not fail.    *Notes*  This will only occur if you have *both Xcode 6.0.1 and Xcode 6.1 installed in the applications folder*    This occurs on the GA release of Xcode 6.1. The only supported simulators in this release are iOS8.1 and iOS7.1    If Xcode 6.0.1 is set as the default with Xcode 6.1 installed then the option to build to an iOS 8.1 sim is given this then errors with       h5.Steps To Reproduce    1. Ensure that both Xcode 6.0.1 *AND* Xcode 6.1 are installed in Applications  2. Set your Xcode to 6.1 by installing it and using xcode-select -s  3. In the CLI with ios.autoSelectDevice set to false, type ti build -p ios -T simulator  4. When prompted to select a simulator, choose an iOS 8.0 sim    h5.Actual Result    The build fails with the error above    h5. Expected Result    There should not be an option to build with an iOS8.0 simulator if it is not supported by Xcode",Bug,Medium,Resolved,"2014-10-03 18:51:09","2014-10-03 18:51:09",0
"The Titanium SDK ","Android: window.exitOnClose closes app on close(), not just back button","The doc states: Boolean value indicating if the application should exit when the Android Back button is pressed while the window is being shown.  However, exitOnClose closes the app even when the window is closed programatically. The app should be closed only when back is pressed on the window, as written in the doc. There is little sense in closing an app programmatically.    Here is a problematic (but fairly typical) scenario:  1. First time user entry opens login window  2. After login app opens win1  3. Normally, pressing back on win 1 should close the app (win1.exitOnClose = true)  4. If logged in at entry, the login page is not opened, and the app opens win1. Again, win1.exitOnClose = true usually does the job  5. However, if the user elects to logout from the app (e.g. logout menu item on win1), then win1 should close (win1.close() called) and the login window should open. But if win1 closes and exitOnClose == true, then the logout closes the app completely.    Thus, exitOnClose should function for the back button only. Alternatively, exitOnClose can be a dynamic property: win1 in this case will normally have exitOnClose == true, but in case of a logout event win1.exitOnClose should be set to false.",Bug,Medium,Closed,"2014-10-02 07:13:53","2014-10-02 07:13:53",5
"The Titanium SDK ","Android: App fails to install for any Android version other than 5.0 with 3.4.1.v20141001062512","h6. Our CLI automation tests caught this issue. Pretty neat.     h6. Its confusing if its a regression as we never had android L support in 3.4.0.GA so can't call this technically a regression.    h5.Description:  1. Install SDK 3.4.1.v20141001062512.  2. Create a default app in studio.  3. Build for android emulator or device using studio/CLI.    h5.Actual Result:  1. The app fails to install and gives error:  On device:      On emulator:      2. On looking at the android manifest in the build folder we see:    which means when the target sdk version is L it fails.    3. I tried by adding     to the tiapp.xml & the app installed without any issues.    4. Installing the app on android L preview device/emulator works fine out of the box.    h5.Expected Result:  1. The app should install on the device/emulator successfully.",Bug,High,Closed,"2014-10-01 18:22:03","2014-10-01 18:22:03",5
"The Titanium SDK ","iOS: Feature Request to initiate the camera access prompt via Titanium Code","h6.Feature Request  When building with the 3.4.0.GA TiSDK using the iOS 8 SDK on an iPhone 6 this issue is present. The issue is not that the prompt never shows but that its only triggered by launching the camera. If I want to prompt the user before I launch the camera there is no way to prompt the user.     We would like to request the following features for Titanium 3.5.0 SDK:   1. Calling isCameraSupported() triggers the camera allowed prompt   2. If the user says Don't Allow calling isCameraSupported() again should return false, but its returning true which is incorrect.     h6.Steps to reproduce  # Build attached sample with environment specification  # On the device go to settings > general > scroll to bottom, reset > reset Location & privacy   # Launch the app and,  # Click is Camera supported button   # Notice that it returns 1 which is true   # Click Launch Camera (Notice that a prompt is shown asking for access to the camera.   # Click Dont allow   # Take a picture and accept it   # Notice that the picture is black   # Accept the picture   # Click is Camera Supported   # Notice that it returns 1 which is true.     h6.Notes  The user did not allow camera access so the isCameraSupported should return false. Also the prompt to enable camera access should be triggered by the isCameraSupported call or some other call so that we can ask the user if they want to allow camera access before we launch the camera.     Following my steps on step 4 isCameraSupported() returns a 1 that it is supported, and no prompt is shown.     Then if you go to step 6 and launch image capture the prompt shows up but at that point the camera is being launched. We need to be able to trigger the prompt on the isCameraSupported call.     Now in step 7 click the Dont Allow button and take a picture of the black area, notice its black. Now accept or close the image capture viewfinder. Click as stated in step 11 isCameraSupported(). Notice that its still a 1 which indicates that the camera is supported even though the user has not allowed access.     ","New Feature",High,Closed,"2014-10-01 15:36:23","2014-10-01 15:36:23",8
"The Titanium SDK ","CLI: Check for iPhone platform in tisdk3fixes.js breaks Windows environment","At [tisdk3fixes.js:75|https://github.com/<USER>titanium/blob/master/hooks/tisdk3fixes.js#L75] you check for {{cli.sdk.platforms.iphone.path}} but actually {{cli.sdk.platforms.iphone}} is undefined.    You can add at line 74 the following as a solution:    {code:js}  // ...  if (!cli.sdk.platforms.iphone) {    return callback();  }  // ...  {code}    ",Bug,High,Closed,"2014-10-01 10:03:23","2014-10-01 10:03:23",2
"The Titanium SDK ","CLI: All commands fail when Titanium SDK 3.3.0 or older is the selected SDK","When using Titanium CLI 3.4.0 on Windows or Linux and having a selected SDK or specifying {{\-\-sdk}} of 3.3.0.GA or older will cause all Titanium CLI commands to crash:        To reproduce, install Titanium CLI 3.4.0 on Windows or Linux, then run {{ti info \-\-sdk 3.3.0.GA}}.",Bug,Critical,Closed,"2014-09-29 22:35:06","2014-09-29 22:35:06",3
"The Titanium SDK ","iOS8: Refactor SplitViewController","iOS8 has moved over AlertDialog and OptionDialog to UIAlertController    Also the correct way to show popovers is now to set the modalPresentationStyle to UIModalPresentationPopover    Titanium needs to refactor these three proxy classes. Will probably also need to change the supported API.",Improvement,High,Closed,"2014-09-29 22:24:30","2014-09-29 22:24:30",13
"The Titanium SDK ","iOS8: Refactor MediaManager","This ticket encompasses the following changes  1. Move from AudioToolbox/AudioSession to AVFoundation/AVAudioSession  2. Refactor Popover associated items for iOS8  ",Improvement,High,Closed,"2014-09-29 22:24:17","2014-09-29 22:24:17",13
"The Titanium SDK ","iOS8: Refactor Popover","iOS8 has moved over AlertDialog and OptionDialog to UIAlertController    Also the correct way to show popovers is now to set the modalPresentationStyle to UIModalPresentationPopover    Titanium needs to refactor these three proxy classes. Will probably also need to change the supported API.",Improvement,High,Closed,"2014-09-29 22:16:03","2014-09-29 22:16:03",13
"The Titanium SDK ","iOS8: Refactor OptionDialog","iOS8 has moved over AlertDialog and OptionDialog to UIAlertController    Also the correct way to show popovers is now to set the modalPresentationStyle to UIModalPresentationPopover    Titanium needs to refactor these three proxy classes. Will probably also need to change the supported API.",Improvement,High,Closed,"2014-09-29 22:15:49","2014-09-29 22:15:49",13
"The Titanium SDK ","Windows: Cross-platform C++ Logger","A cross platform logger that runs on OS X, Windows Desktop and WinRT (Windows Store and Windows Phone)    Requirements  - Output INFO, WARNING, DEBUG and ERROR logs  - Thread safe  - Type safe  - Cross platform  - Exclude the use of third party libraries",Story,High,Closed,"2014-09-29 18:37:17","2014-09-29 18:37:17",13
"The Titanium SDK ","Studio: iOS Distribution progress continues even long after the project has been packaged","The iOS Distribution progress continues after the project has been published (ad-hoc or iTunes Store) and halts the progress of other actions.    The issue occurs only when the currently selected Xcode is Xcode 6. Is does not happen when tested with XCode 5.1.1    Steps to Reproduce:  1. Use Xcode select to switch to Xcode 6 GM/beta  2. Create a project  3. Select Publish > Distribute - Ad Hoc/Enterprise    Actual Result:  The project build and packaging is successful but the progress bar continues to show iOS Distribution in progress for a long time. Refer to attached screenshot.  With Xcode 5.1.1, the progress stops as soon as the console shows the success message for package.",Bug,High,Closed,"2014-09-10 09:57:36","2014-09-10 09:57:36",5
"The Titanium SDK ","Android: App crashes in TiResponseCache.peek()","My app is crashing when I use Google Play Services to deliver doubleclick <USER>    {code:title=console output|borderStyle=solid}  [ERROR] :  TiDownloadManager: (pool-4-thread-1) [18,3778] Exception downloading http://wwwcache.wral.com/asset/news/local/2014/09/26/14018104/14018104-1411727089-320x180.jpg  [ERROR] :  TiDownloadManager: java.lang.ClassCastException: com.android.okhttp.HttpResponseCache cannot be cast to org.<USER>titanium.util.TiResponseCache  [ERROR] :  TiDownloadManager:  at org.<USER>titanium.util.TiResponseCache.peek(TiResponseCache.java:187)  [ERROR] :  TiDownloadManager:  at ti.modules.titanium.ui.widget.TiUIImageView$1.postDownload(TiUIImageView.java:119)  [ERROR] :  TiDownloadManager:  at org.<USER>titanium.util.TiDownloadManager$DownloadJob.run(TiDownloadManager.java:151)  [ERROR] :  TiDownloadManager:  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)  [ERROR] :  TiDownloadManager:  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)  [ERROR] :  TiDownloadManager:  at java.lang.Thread.run(Thread.java:841)  [DEBUG] :  dalvikvm: DexOpt: --- END 'ads646200884.jar' (success) ---  {code}    (the URL listed in the output is an image that I am loading into an ImageView, so I inferred that the TiDownloadManager is handling the loading of ImageView images)    The problem only goes away if I disable DFP <USER>(I'm using my own ti.dfp module - https://github.com/<USER>ti.dfp).    I found it strange that it was crashing, because this code was working just a few days ago, and the module had not been changed, nor had I really done anything to the app and the way it handles ImageViews.    I scoured android source code, tweets, and forum posts, and I've learned that in android 4.4, Square's okhttp code is supposedly incorporated into HttpUrlConnection.  However, I've never found any code for com.android.okhttp.HttpResponseCache.  The only code I can find is for com.squareup.okhttp.HttpResponseCache, not com.android.      com.squareup.okhttp.HttpResponseCache extends java.net.ResponseCache, just like TiResponseCache does.  But the code in TiResponseCache.peek() is only expecting to get back a TiResponseCache object when it calls getDefault().  Changing that might not be trivial, since it depends on the cacheDir member variable of the returned object, and that's not part of the java.net.ResponseCache class.    Here's what I think has happened -- google released Google Play Services 6.1.09 on September 23, 2014.  It automatically updated on my device.  Inside the new Google Play Services is a call to ResponseCache.setDefault(), and they're setting that default to a com.android.okhttp.HttpResponseCache object.    Titanium assumes that the default system ResponseCache is the one that it set in TiApplication.java, and it doesn't handle things well when somebody else messes with the default.      I don't know what the fix is for this -- I'll leave that to the android platform experts in your employ.  But I think it is a critical issue, and will become more obvious in the coming days as this Play Services update propagates.  Any app that is using Google Play Services (or at least the DFP portion of it) and the TiDownloadManager will crash.  ",Bug,Critical,Closed,"2014-09-26 21:10:26","2014-09-26 21:10:26",5
"The Titanium SDK ","iOS: Add floor property from CLFloor needed for indoor geolocation","In iOS 8 Apple introduced some APIs for indoor geolocation.  See: https://developer.apple.com/library/ios/documentation/CoreLocation/Reference/CLFloor_class/    There is also a slide deck from WWDC 2014 talking about this in more detail.  It is a trivial change, but a useful one.    The only down side is that finding a list of buildings that have been mapped by Apple is a difficult task.    Here is the pull request: https://github.com/<USER>titanium_mobile/pull/6176",Improvement,High,Closed,"2014-09-27 21:14:11","2014-09-27 21:14:11",5
"The Titanium SDK ","Windows Hybrid: console.log() fails when printing large string",,Bug,Medium,Closed,"2014-09-26 19:58:28","2014-09-26 19:58:28",3
"The Titanium SDK ","iOS8: KitchenSink control ButtonBar property 'Style' does not work","Description:    The Style property of ButtonBar control in the KitchenSink doesn't change as per the assigned value.Tested by assigning different constant values like Titanium.UI.iPhone.SystemButtonStyle.BAR,Titanium.UI.iPhone.SystemButtonStyle.BORDERED and Titanium.UI.iPhone.SystemButtonStyle.PLAIN.  Style remains the same for all.    This is not a regression.  It is reproducible with Titanium SDK 3.3.0.GA and Xcode 5.1.1.    STEPS TO REPRODUCE:-  1. Install the KitchenSink on iPhone 6/6+ simulator.  2. Navigate to: Controls => Button Bar    3. Click on image in the middle of Toggle Style    EXPECTED RESULT:  3. Style should be changed    ACTUAL RESULT:  3. Style remains the same.    I tried with the different style values but its not changing for any of them.  ",Bug,Medium,Closed,"2014-09-26 11:22:12","2014-09-26 11:22:12",2
"The Titanium SDK ","iOS Map Module: bump version to 2.0.4 and add titanium_mobile","iOS Map Module: bump version to 2.0.4, add to titanium_mobile, update titanium_released  ",Story,Critical,Closed,"2014-09-25 23:19:18","2014-09-25 23:19:18",2
"The Titanium SDK ","iOS 8: Kitchen Sink - Contacts Picker - can not choose properties ","h5. To reproduce  1. Install and run Kitchen Sink  2. Navigate to Phone> Contacts> Contacts Picker  3. Activate Stop on property, press Show picker and select contact  h5. Actual result  Contact list closes and no contact information is displayed.  h5. Expected result  Ability to choose contact's properties    It happens on iOS 8 ",Bug,High,Closed,"2014-09-25 19:19:11","2014-09-25 19:19:11",5
"The Titanium SDK ","Launch images for iPhone 6 and 6+ in i18n not copied","The [{{titanium-sdk}}|https://github.com/<USER>titanium_mobile/blob/58198c641d77e17d156431666e80bae732b5c130/node_modules/titanium-sdk/lib/i18n.js#L64] module which is part of the SDK needs to be updated for the new iPhone 6 and 6+ launch images.    *If this is not changed, localized apps will not have launch images on iPhone 6 and 6+, preventing them from publishing for these devices correctly.*    I've created a PR that fixes this and is future proof for other subtypes ({{h667}}) and scales ({{@3x}}) as well:    * master: https://github.com/<USER>titanium_mobile/pull/6161  * 3_4_X: https://github.com/<USER>titanium_mobile/pull/6166    To test:    1. Create a project  2. Move the launch images from {{Resources/iphone}} to {{i18n/en}}  3. Add some text to the iPhone 6 and 6+ images in the new folder  3. Build the project  4. Run on iPhone 6 or 6+ and see it is not showing the i18n images",Bug,Critical,Closed,"2014-09-25 10:38:48","2014-09-25 10:38:48",8
"The Titanium SDK ","Unhandled exception when using the CLI to build for iOS","If an app doesn't have iphone as a valid deployment target in tiapp.xml and try to build for iOS with   you'll get an error like this:    [ERROR] Failed to run command build  [ERROR] TypeError: Cannot read property 'cyan' of undefined      at iOSBuilder.loginfo (/Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/iphone/cli/commands/_build.js:1601:73)      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/node_modules/node-appc/node_modules/async/lib/async.js:610:21      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/node_modules/node-appc/node_modules/async/lib/async.js:249:17      at iterate (/Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/node_modules/node-appc/node_modules/async/lib/async.js:149:13)      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/node_modules/node-appc/node_modules/async/lib/async.js:160:25      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/node_modules/node-appc/node_modules/async/lib/async.js:251:21      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/node_modules/node-appc/node_modules/async/lib/async.js:615:34      at iOSBuilder.initialize (/Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/iphone/cli/commands/_build.js:1578:2)      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/node_modules/node-appc/node_modules/async/lib/async.js:610:21      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/node_modules/node-appc/node_modules/async/lib/async.js:249:17  ---------------------------------------------      at exports.execFile (child_process.js:691:9)      at exports.exec (child_process.js:578:18)      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/node_modules/node-appc/lib/environ.js:251:3      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/node_modules/node-appc/node_modules/async/lib/async.js:254:17      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/node_modules/node-appc/node_modules/async/lib/async.js:157:25      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/node_modules/node-appc/node_modules/async/lib/async.js:251:21      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/node_modules/node-appc/node_modules/async/lib/async.js:615:34      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.4.0.v20140916181713/node_modules/node-appc/lib/environ.js:218:7",Bug,Medium,Closed,"2014-09-24 22:41:49","2014-09-24 22:41:49",5
"The Titanium SDK ","Android: Throw an event after each AJAX call inside a webview","h4. Problem Description  The user wants to sync a ecommerce's cart inside a webview with a view showing the number of items in the cart in the app.     Therefore, he wants to have an event in the webview that throws an event when the cart is updated via AJAX.     h4. Extra information  We did some research, and we found some info that could be useful.     http://developer.android.com/reference/android/webkit/WebViewClient.html     And this method    public WebResourceResponse shouldInterceptRequest (WebView view, String url)     StackOverFlow mentioned that method as a way to catch ajax calls:  http://stackoverflow.com/questions/3941969/android-intercept-ajax-call-from-webview      ","New Feature",High,Closed,"2014-09-24 19:28:11","2014-09-24 19:28:11",3
"The Titanium SDK ","iOS: Map cannot pan / zoom after applying camera","h4. Problem Description  After a map view is loaded, and a camera is applied to the map one cannot pan or zoom on the map (touch is lost). The view get's locked in position. Removing the camera by applying a pitch of zero, does not restore it.    The sample code below shows this problem. To test; Load the code.  Pan and zoom the map.  Then tap the 3D Camera ON button to apply the camera.  Now when you try to pan or zoom, is not possible.  Tap the button again to set pitch to 0 and restore the map.  Pan and zoom still don't work.    I should note that the click event is also lost as well if you have any annotations on the map.    h4. Steps to reproduce  1. CReate a new mobile project (classic titanium)  2. Add this to app.js  app.js:    3. Run it in a device",Bug,High,Closed,"2014-09-12 07:14:09","2014-09-12 07:14:09",3
"The Titanium SDK ","Android: Native module onStart() lifecycle method never called for Alloy project","h4. Problem Description  I have created a native module that has some code in an {{onStart()}} method - when importing this module in my alloy controller using {{require()}}, the {{onStart()}} method is called when the root activity is started when using Titanium SDK 3.2.3.GA, but when using 3.3.0, it is never called.    I have properly declared the module in my {{tiapp.xml}} and my {{onStart()}} method is pretty simple:        In 3.2.3.GA I see the debug message in the {{logcat}} output - but using 3.3.0.GA I never see it (however I do see the {{onPause}} and {{onStop}} lifecycle methods are properly called.    My native module depends on some initialization code in {{onStart}} that cannot be moved to {{onAppCreate}}, so it's currently failing as {{onStart}} is never called (nor is {{onPause}} which is a bit suspect).    Also, for a non-Alloy app, this does not happen -- all of the lifecycle methods, including {{onStart}} are called as expected.      h4. Steps to reproduce.  1. Download the module from this [link|https://github.com/jamesfalkner/liferay-android-beacons/blob/master/dist/com.liferay.beacons-android-0.1.zip]  2. Create a titanium classic project  3. Paste this code:        h4. Steps to reproduce the issue with alloy (which is easier to reproduce)  1. Create a new alloy project  2. Paste this to index.js:    3. Run it in a device.     ",Bug,High,Closed,"2014-08-05 18:32:19","2014-08-05 18:32:19",8
"The Titanium SDK ","iOS8: Touch ID Feature Request to support separate call for canEvaluatePolicy","h6.Feature Description  Reviewing the documentation and working with the Ti 3.4 SDK we have discovered that the only call available on the touchid module is to the function authenticate. Without the ability to separately call a function that interfaces with the iOS canEvaluatePolicy:LAPolicyDeviceOwnerAuthenticationWithBiometric we are unable to make a check that determines if Touch ID has being configured correctly on this device. We need to functionality to alert the user when they attempt to setup this feature in our client.     h6.Request  We realize that canEvaluatePolicy is invoked as part of the authenticate function, but this does not suit our needs as we do not want to prompt the user for touch id when all we want to do is determine if its configured.     Ideally we would like a function that implements the following:   ","New Feature",High,Closed,"2014-09-23 20:26:07","2014-09-23 20:26:07",2
"The Titanium SDK ","iOS: Aborting upload causes file to stay in RAM","h4. Problem Description  When aborting a file upload the file that was loaded into ram is kept in ram. The ram does not get cleared unless the upload is completed. So every file thats uploaded and aborted is being kept in active ram on the device.     If a user uploads a file and aborts the upload multiple times ram usage becomes very high and will cause the app to crash. This did not happen with release-3.2.3 the ram would get cleared when the upload was aborted.      When watching instruments while preforming a upload you can watch ram using spike on each upload but never be released.      h4. Steps to reproduce  1. Create new mobile project (classic titanium)  2. Please copy the Attached file to the Resources directory.   3. Paste the Sample Code to app.js ( to test with large upload file that will automatically abort after 2.5 seconds) :  {code:title=app.js|borderStyle=solid}  var win = Titanium.UI.createWindow({backgroundColor:'#fff',layout:'vertical'});     var ind = Titanium.UI.createProgressBar({      width:200,      height:50,      min:0,      max:1,      value:0,      top:10,      message:'Progress',      font:{fontSize:12, fontWeight:'bold'},      color:'#888'  });     win.add(ind);  ind.show();    addButton({      title: 'Upload File',      callback: function(e) {          ind.value = 0;        var canceled = false;          var file = Titanium.Filesystem.getFile(Titanium.Filesystem.resourcesDirectory,'sunset.jpg');          var uploadfile = file.read();             var httpClient = Titanium.Network.createHTTPClient();           httpClient.setTimeout(12000);             var uploadStartTime = new Date().getTime();             httpClient.onsendstream = function(e){               ind.value = e.progress;              // The upload is cancelled at 25%              if (e.progress >= 0.25) {               httpClient.abort();               httpClient = null;              }          };             httpClient.open('POST', 'http://cachefly.cachefly.net');           httpClient.send({media:uploadfile});      }  });    addButton({      title: 'Open Window',      callback: function(e) {          openWindow();      }  });       function addButton(args) {      var b1 = Ti.UI.createButton({          title: args.title,          top: 40      });      b1.addEventListener('click', args.callback);      win.add(b1);  }      function openWindow() {      var win2 = Ti.UI.createWindow({          backgroundColor: 'blue',          layout:'horizontal'      });      for (var i=0;i<500;i++) {          var v = Ti.UI.createView({              backgroundColor: 'red',              height: 50, width: 50,              top:5, left:5          });             var l = Ti.UI.createLabel({text: i})          v.add(l);          win2.add(v);      }      win2.addEventListener('click', function() {          win2.close();      });      win2.open();  }    win.open();  {code}    ",Bug,Medium,Closed,"2014-09-19 03:02:37","2014-09-19 03:02:37",8
"The Titanium SDK ","iOS8: Ti.Ui.iPad.createSplitWindow shows blank screen when orientation is changed","SDK 3.4.0.GA - iPad 2 iOS8    Blank screen comes up when rotating the window.    The code was taken from the documentation which can be found here. http://docs.<USER>com/titanium/latest/#!/api/Titanium.UI.iPad.SplitWindow  ",Bug,Medium,Closed,"2014-09-23 00:00:25","2014-09-23 00:00:25",8
"The Titanium SDK ","iOS: Titanium.Filesystem.File.write - Images don't save properly","h3. Steps to Reproduce I use Titanium Studio 3.4.0.201409161931 and Titanium SDK 3.4.0.v20140909222515  I have a function for save an image from the iphone bibliotheque into the app.  Before update to the last version of Titanium for test to iOs8 they worked correctly.  h3. Actual Result 0  h3. Expected Result The height of the image",Bug,High,Closed,"2014-09-18 08:07:35","2014-09-18 08:07:35",3
"The Titanium SDK ","iOS: ImageLoader doesn't support @3x","The ImageLoader utility class doesn't have support for Retina HD (@3x) images:    - serialize: https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/ImageLoader.m#L249-L251  - entryForKey: https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/ImageLoader.m#L499-L502    Pull Request: https://github.com/<USER>titanium_mobile/pull/6142",Bug,High,Closed,"2014-09-22 07:55:26","2014-09-22 07:55:26",13
"The Titanium SDK ","Installation failed, longjohn.js 185 - has no method 'indexOf'","Hi,   when i try to build an application and launch it on the emulator, the console gives me this error:  {code:borderStyle=solid}  [INFO] :   Installing apk: /home/username/Documenti/Ti_Workspace/projectName/build/android/bin/projectName-dev-debug.apk  [ERROR] Application Installer abnormal <USER>termination. Process exit value was 8  [TRACE] :  Checking if package manager service is started  /usr/local/lib/node_modules/titanium/node_modules/longjohn/dist/longjohn.js:185          throw e;                ^  has no method 'indexOf'  {code}  complete log here:   [Complete Log on PasteBin|http://pastebin.com/Q18pHFsA]    this is my complete environment:   [Complete Environment on PasteBin|http://pastebin.com/jyiAW5ZN]",Bug,Critical,Closed,"2014-07-22 09:30:10","2014-07-22 09:30:10",1
"The Titanium SDK ","Android: Add CanceledOnTouchOutside property to Titanium.UI.Android.ProgressIndicator","i want to use loading dialog in android that is not dismissed when touching outside and use back button to cancel loading operation when using ProgressIndicator and location=Ti.UI.Android.PROGRESS_INDICATOR_DIALOG, it displays loading dialog just fine but when touching anywhere in screen, it dismisses the dialog.    Android use CanceledOnTouchOutside = false to prevent this action.     Please add CanceledOnTouchOutside or find a solution for this problem ",Improvement,Medium,Closed,"2014-08-28 09:57:52","2014-08-28 09:57:52",2
"The Titanium SDK ","Insights: iOS 8: login keyboard causes login menu to disappear","Insights: iOS 8: login keyboard causes login menu to disappear.    Test Steps:    1. View login menu.  2. Invoke login keyboard.    Result:    Keyboard appears, login menu scrolls out of sight to top of screen.    User can enter username and password to login, though the fields are not visible during keyboard use.    Expected Result:    Login menu location persists during keyboard invocation.",Bug,Critical,Closed,"2014-09-16 20:11:19","2014-09-16 20:11:19",8
"The Titanium SDK ","iOS: Support Ti.Platform.displayCaps.logicalDensityFactor","After discussion on TIMOB-17718, we believe that we should enable Ti.Platform.displayCaps.logicalDensityFactor available under iOS as well and return \[UIScreen mainScreen\].scale;",Bug,High,Closed,"2014-09-18 17:57:52","2014-09-18 17:57:52",5
"The Titanium SDK ","iOS8: Provide support for the WKWebView as Titanium's WebView in iOS","h4. Problem Description  There is a new WebView for iOS 8 that it's a lot faster than the previous/classic WebView. It might be useful to provide a better experience to the end users.     h4. Extra info  https://developer.apple.com/library/ios/documentation/WebKit/Reference/WKWebView_Ref/index.html    h4. Benchmarks  http://developer.telerik.com/featured/why-ios-8s-wkwebview-is-a-big-deal-for-hybrid-development/",Improvement,Medium,Closed,"2014-09-18 06:59:47","2014-09-18 06:59:47",13
"The Titanium SDK ","iOS8: Alert dialog does not consider window orientation modes when keyboard is displayed","h3. Issue    When the alert dialog is called with an input text style and a orientation mode restricted to Portrait and the device is rotated to landscape the alertDialog keeps rotating but only if the keyboard is being displayed, if the keyboard is hiding the alert will not rotate.    h3. Step to reproduce    1. Run the test code  2. Tap on the Welcome to Titanium for the alert to be displayed  3. Try to rotate the device.  4. Go back to portrait and tap on the input text box.  5. Try to rotate the device    h5. Expected Results    The alert will not rotate and remain in portrait mode.    h5. Actual results    When the keyboard is hidden the alert will not rotate, once the keyboard is displayed the alert will begin to rotate    h3. Test Code    ",Bug,High,Closed,"2014-09-17 21:08:46","2014-09-17 21:08:46",3
"The Titanium SDK ","iOS8: Ti.Platform.displayCaps.density - requires new value for iPhone 6+ specifically","When running the latest Ti SDK 3.4 16th Sep the app now starts up and correctly reports the display caps.    The density value is high for the @2x devices; iPhone 4, iPhone 4s, iPhone 5, iPhone 5s & iPhone 6 - which is correct.  However the iPhone 6+ which is a @3x should gain a new value for the density property to help distinguish it from the other devices.    The dpi does change, but as that could be different for different families of iDevices it cannot be used without also checking other values to confirm - which will get ever more complicated.    Android devices report back a different value for all of their densities, I think @3x on an iDevice should also be distinct from @1x & @2x devices.    All other values appear correct, quick tests from the top three devices;    iPhone 6+    Ti.Platform.displayCaps.density: high  Ti.Platform.displayCaps.dpi: 480  Ti.Platform.displayCaps.platformHeight: 736  Ti.Platform.displayCaps.platformWidth: 414  Ti.Platform.model: Simulator  Ti.Platform.name: iPhone OS  Ti.Platform.osname: iphone  Ti.Platform.ostype: 32bit    iPhone 6    Ti.Platform.displayCaps.density: high  Ti.Platform.displayCaps.dpi: 320  Ti.Platform.displayCaps.platformHeight: 667  Ti.Platform.displayCaps.platformWidth: 375  Ti.Platform.model: Simulator  Ti.Platform.name: iPhone OS  Ti.Platform.osname: iphone  Ti.Platform.ostype: 32bit    iPhone 5    Ti.Platform.displayCaps.density: high  Ti.Platform.displayCaps.dpi: 320  Ti.Platform.displayCaps.platformHeight: 568  Ti.Platform.displayCaps.platformWidth: 320  Ti.Platform.model: Simulator  Ti.Platform.name: iPhone OS  Ti.Platform.osname: iphone  Ti.Platform.ostype: 32bit",Bug,High,Closed,"2014-09-17 07:24:16","2014-09-17 07:24:16",5
"The Titanium SDK ","Update ti.cloud module shipped with the SDK to v3.2.4","Need to update the ti.cloud to v3.2.4 in titanium_mobile.    h6. ti.cloud 3.2.4 changes:  * TIMODOPEN-416  * TIMODOPEN-423  * TIMODOPEN-432    Also need to update https://github.com/<USER>titanium_releases/blob/master/titanium.json",Story,High,Closed,"2014-09-17 18:35:30","2014-09-17 18:35:30",2
"The Titanium SDK ","iOS: Build does not properly error when no distribution certs exist","When building an iOS app for dist-appstore and you do not have any distribution certs, it does not properly error and exit the build. Instead it displays a message if {{ios.distributionName}} is set, otherwise does not display an error.        The build will continue and eventually die because distributionName is undefined:        In theory the build will not properly error out when you don't have any keychains, you don't have the WWDR cert installed, there are no valid developer certs, there are no valid distribution certs, and no valid development provisioning profiles.",Bug,Critical,Closed,"2014-09-17 18:21:18","2014-09-17 18:21:18",5
"The Titanium SDK ","Android: Cannot open new window after last window closes","After closing the last window on Android, when attempting to open a new window, the app crashes with the Unfortunately app has stopped message. Here is the stack trace that I get:      Here is the test case that I am using:      It successfully closes the first window but crashes when attempting to open the second window. It works when opening the second window before closing the first.",Bug,Medium,Closed,"2014-09-17 02:17:18","2014-09-17 02:17:18",2
"The Titanium SDK ","iOS8: App crashes after starting using open in .. from another app","Using Open in .. to send a file to my app let my app crashing on opening before the first line of code will be executed.  Here is the log:    ",Bug,High,Closed,"2014-09-11 15:33:45","2014-09-11 15:33:45",2
"The Titanium SDK ","iOS8:  if the user rotates the device when exiting image capture the orientation of the device is in the opposite orientation it should be in","I have already consumed the change from TIMOB-17662 by setting autorotate to false in CameraDevice.js and this issue is still present. I initially mentioned this issue in Case 2640 which has been closed so that we can focus on this specific case.     I have uploaded an app called 9-16-OppositeOrientationTest.zip and screenshots which illustrate this issue.     CASE 1 (landscape window in portrait mode)   # Launch the app in Landscape mode with the Home button on the right   # Rotate the app around, notice the UI changes to reflect the orientation correctly.   # Get it back into landscape mode (Home button on right).   # Click Launch Camera   # Click the (X) button and then immediately rotate the tablet to portrait up or portrait down.   ## Notice that the image capture view will close and the app then rotates into landscape orientation. It should rotate to portrait orientation.   See screenshot Home On Bottom.png     CASE 2 (portrait window in landscape)   # Kill the app   # Launch the app in Landscape mode with the Home button on the right   # Rotate the app around, notice the UI changes to reflect the orientation correctly.   # Rotate the app to portrait mode (Home button on bottom).   # Click Launch Camera   # Click the (X) button and then immediately rotate the tablet to landscape left up or landscape right.   ## Notice that the image capture view will close and the app then rotates into portrait orientation. It should rotate to landscape orientation.   See screenshot Home On Right.png     h5. Issue reproducible with the following code  ",Bug,High,Closed,"2014-09-16 23:07:38","2014-09-16 23:07:38",5
"The Titanium SDK ","Android: Ti.Android.getCurrentService() fails with an exception","h1. Problem description  Calling Ti.Android.getCurrentActivity() always fails with an exception in the logs.        h1. Steps to reproduce  Use this simple app to test:        Changing from getCurrentService() to currentService (direct access to the property) works fine.",Bug,Low,Closed,"2014-09-16 22:20:16","2014-09-16 22:20:16",3
"The Titanium SDK ","CLI: SDK contains incomplete/outdated ioslib and fields libraries","The {{ioslib}} module that is distributed with the Titanium SDK is incomplete and missing code.    Additionally, the {{fields}} prompt library is out of date and needs to be updated to fix a number of bugs including prompt issues when you have duplicate select list items such as dupe iOS certs.",Bug,Critical,Closed,"2014-09-16 21:45:54","2014-09-16 21:45:54",5
"The Titanium SDK ","iOS8: Email dialog does not recognize message and recipients","I did use the search and did not find an issue already so I hope it is not a duplicate.    Running the following code on iOS 8 you will notice that the message and the recipient(s) are not set in the email dialog.         The dialog also seems to close automatically after a while but not sure whether it is related to this:        Environment:   * Titanium Command-Line Interface, CLI version 3.4.0-rc2, Titanium SDK version 3.4.0.v20140911135715  * Xcode 6  * Titanium Studio, build: 3.4.0.201409121841  * Alloy 1.5.0 rc  * iPhone 6 Plus simulator but also others are affected ",Bug,High,Closed,"2014-09-14 09:51:56","2014-09-14 09:51:56",2
"The Titanium SDK ","iOS8: change Ti.App.iOS event name from 'backgroundNotification' to 'localnotificationaction'","Change Ti.App.iOS event name from 'backgroundNotification' to 'localnotificationaction'.    The current name of the event does not accurately reflect the purpose of the event. Because of this, it needs to be changed to something more meaningful.    h5. Test Instructions  1. Run the code below  2. Click 'registerUserNotificationSettings' and then Allow  3. Click 'scheduleLocalNotification'  4. Background the app  5. Swipe down from the top of the device to see the notification center  6. Swipe the notification to the left and click one of the buttons  7. If 'localnotificationaction' is displayed in the device log, then the event was fired correctly    ",Improvement,High,Closed,"2014-09-16 21:12:37","2014-09-16 21:12:37",3
"The Titanium SDK ","iOS: TTIDs change on TableView scroll","A customer is seeing incorrect TTIDs being detected on their tableview during a recording. The odd part is that the TTIDs are correctly defined when I look at the tableview before scrolling. After I scroll the table, the TTIDs seem to change. The table is defined as:        After scrolling, I see that the last 3 rows in the second section have the TTIDs of the top rows in the first section. Is there an explanation for this?    Unfortunately, the customer cannot share the source of the project, but they have given me an IPA that is able to be installed on one of our devices.    SOASTA would like to discuss a solution for this with engineering. I will post their questions/requests in the comments.",Bug,High,Open,"2014-09-16 20:19:24","2014-09-16 20:19:24",8
"The Titanium SDK ","iOS8: Handle action types for Remote Notifications as well","Currently only actions on Local Notifications are handled. We, as Titanium Developers, can display Remote Notifications with Actions, but a click on one of the buttons is never received by the app.    In TiApp.m the following is implemented for Local Notifications    See: https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/TiApp.m#L441    A similar AppDelegate function has to be implemented to handle Actions on Remote Notifications    See: https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIApplicationDelegate_Protocol/#//apple_ref/occ/intfm/UIApplicationDelegate/application:handleActionWithIdentifier:forRemoteNotification:completionHandler:    I reckon that the implementation can be similar to     See: https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/TiApp.m#L825    With in addition a key in the event details which action was triggered.",Improvement,,Closed,"2014-09-16 14:27:57","2014-09-16 14:27:57",8
"The Titanium SDK ","Ti.UI.Dashboarditem badges are not correctly displayed on iPhone 6/6+ simulator","h5. Problem description    Ti.UI.Dashboarditem object is not displaying badges and the close 'X' button correctly on iPhone 6 and iPhone 6+ simulators.  Those are correctly displayed on iPad mini device with iOS 8.     h5. Steps to reproduce  Sample code attached extracted from KitchenSink - so to reproduce, either run Kitchensink and go to Views>Dashboard Views or run the attached sample project.    1. Run the sample on both iPhone 6 simulators and iOS device with iOS 8 and check the Dashboarditem badge for the first item.  Result: Badge displayed is on the top left, just a white number. See comparison screenshots.  2. Click and hold to re-order or delete the icons  Result: 'Delete' button is displayed with no 'X' in the middle. See comparison screenshots.",Bug,High,Closed,"2014-09-16 15:18:10","2014-09-16 15:18:10",5
"The Titanium SDK ","Android: TableViewRow: hasCheck icon very small on high DPI screens","On higher DPI Android screens, the hasCheck icon is so small as to be nearly impossible to see. Add to it that it is gray and it's easy to think that the icon is not being shown at all.     Expected results: check mark would display the same relative size on all devices regardless of the screen's DPI. In other words, that we'd be supplying graphics for each of the supported display classes.      ",Bug,High,Closed,"2014-09-16 13:10:00","2014-09-16 13:10:00",3
"The Titanium SDK ","CLI: Hitting the enter key after entering the data for CLI prompts in CLI setup wizard, does not take the cursor to next line","Description:    While doing some regression testing, I have come across an issue due to which I am unable to run number of CLI commands that takes input from user.  The issue is with hitting the enter key after giving the input data. Hitting the enter key will not take the cursor to next line.It is triggering a space on the terminal.Need to do CTR + c to come out of it.Hence not able to run some CLI commands like ti sdk select, ti setup, ti login etc.     Test machine details:  Initially the system had the setup  CLI 3.4.0-rc3 and titanium SDK 3.4.0.v20140915175720.  Then, I have  only switched CLI to CLI 3.3.0 version and titanium SDK remains the same 3.4.0.v20140915175720.  Run the CLI ti sdk select command and faced the above mentioned issue with hitting the enter key.    STEPS TO REPRODUCE:  1. Install CLI 3.4.0-rc3 and titanium SDK 3.4.0.v20140915175720 on machine.The ti SDK is set to 3.4.0.v20140915175720 with CLI.  2. Install the CLI 3.3.0 and ti SDK will remain the same as 3.4.0.v20140915175720.  3. Run ti setup command.Then CLI prompts for various options, then enter the data, hit enter key.  4. Run ti sdk select command and choose the required sdk and hit the enter key.Make sure you are having more than one ti SDK installed on your system.  5. Run ti login command and enter the user name and hit the enter key.    EXPECTED RESULT:  3. The cursor should go to next line and CLI will prompt for the next input data.  4. The required SDK configuration should be set.  5. The cursor moves to next line and CLI should prompt for the password.    ACTUAL RESULT:  3. Hitting the enter key, triggers a space on terminal and not able to go to next prompt.  4. Hitting the enter key triggers a space and does not set the configured sdk.  5. Hitting the enter key does not take the cursor to next line for password prompt.Instead the enter key triggers a space on terminal.    Please refer the attached screenshots.  The issue is reproducible with other machines as well.    I have uninstalled the CLI and all the titanium sdk versions installed on my system.  Then freshly installed only titanium SDK 3.4.0.v20140915175720 and CLI 3.4.0-rc3.  But still facing the same issue with hitting the enter key with the mentioned CLI commands.The enter key is still triggering the space.",Bug,Medium,Closed,"2014-09-16 05:44:47","2014-09-16 05:44:47",1
"The Titanium SDK ","CLI: Running ti build -p iOS -T simulator --no-prompt command outside project directory throws error 'cannot read property deployment-targets of undefined'.","Description:  Running ti build -p iOS -T simulator --no-prompt command outside the project directory throws error instead of giving proper error message for required fields.    This is a regression.With CLI 3.3.0 and Titanium SDK 3.3.0.GA, command gives the proper error message for the missing parameter instead of throwing an error.    [ERROR] Invalid --project-dir value .    STEPS TO REPRODUCE:-  1. Open a terminal window  2. Create a project in the workspace and don't cd to the project.  3. Run ti build -p ios -T simulator --no-prompt command outside the project directory.    EXPECTED RESULT  3. The CLI should give proper message for the required missing parameter instead of throwing an error 'cannot read property deployment-targets of undefined'.    ACTUAL RESULT  4. The CLI throws an error 'Cannot read property 'deployment-targets' of undefined' instead of giving proper error message to user for required missing parameter.          ",Bug,Medium,Closed,"2014-09-16 04:43:18","2014-09-16 04:43:18",3
"The Titanium SDK ","CLI: Can't set search path for detecting Xcode installations","If you try to set a custom search path for Xcode installations, ti config fails with:    ",Bug,High,Closed,"2014-09-15 23:34:49","2014-09-15 23:34:49",3
"The Titanium SDK ","iOS8: enabledRemoteNotificationTypes - enabledRemoteNotificationTypes is not supported message appears if you include Crittercism module","*Details:* enabledRemoteNotificationTypes is not supported message appears if you include the Crittercism module in your app.    *Note:* Through <USER>of elimination, I was able to determine that the Crittercism module was returning the message i.e. enabled each services (Aanalytics, ACS, SOASTA, Crittercism) one by one.    *Steps to reproduce:*  1. Create a default Titanium classic app with services enabled  2. Install app to an iOS 8 device or simulator  3. Once the app launches, press the home button to background the app  4. Then, bring the app back to the foreground    *Actual:* The following message appears in console: {{enabledRemoteNotificationTypes is not supported in iOS 8.0 and later.}}    *Expected:* The *enabledRemoteNotificationTypes is not supported* message should not appear for default apps.",Bug,High,Closed,"2014-09-15 23:23:21","2014-09-15 23:23:21",5
"The Titanium SDK ","iOS: Build fails when Resources has a folder named after the app","If the {{Resources}} folder contains a (non-empty) folder whose name is the same as the name of the app set in {{tiapp.xml}} under {{<name />}} then builds will fail crashing:        This issue has been reported before on Q&A:  https://developer.<USER>com/question/131687/project-cant-run-on-simulator    h1. Solution    Ideally it should work, but if it doesn't, then it would be nice if the CLI refuse to build the project, asking to rename the folder. In Studio a warning could also be given when a user wants to create the folder.",Bug,Medium,Closed,"2014-09-15 14:34:25","2014-09-15 14:34:25",8
"The Titanium SDK ","iOS: Support missing properties for UITextField inside Ti.UI.AlertDialog","h3. Request    Customer is asking to add keyboardType support to createAlertDialog in iOS.    When an AlertDialog is created in iOS with  PLAIN_TEXT_INPUT  is showing UIKeyboardTypeDefault, in certain use cases is required to use other keyboards like the numberPad (Zip Code search, PIN code).    h3. Additional info    This behaviour is possible in native iOS projects like this:    ","New Feature",Medium,Closed,"2014-09-15 21:31:26","2014-09-15 21:31:26",5
"The Titanium SDK ","iOS: Cannot load saved images anymore","This was working fine with SDK 3.3.0, but since 3.4.0-beta, my app cannot load previously saved images anymore...    message = invalid image type;  [ERROR] :      nativeLocation = -[TiUIImageView setImage_:] (TiUIImageView.m:685);  [ERROR] :      nativeReason = expected TiBlob, String, TiFile, was: TiBlob;    Strangely, it seems to expect a TiBlob, and gets one, but doesn't load it...",Bug,High,Closed,"2014-09-10 12:45:10","2014-09-10 12:45:10",3
"The Titanium SDK ","CLI: Running ti build -p iOS -T simulator --retina command throws error 'defaultIosVersion is not defined'","Description:  Running ti build -p iOS -T simulator --retina command throws an error instead of launching the application on retina simulator.  The same error is thrown with two other iOS flags like --tall and --sim-64bit respectively.    The flags were working successfully with Titanium SDK build 3.4.0.v20140912164913 and CLI 3.4.0-rc3 with tiapp.xml sdk set to 3.4.0.v20140912164913.    The problem seems to be with Titanium SDK build 3.4.0.v20140913174915 and CLI 3.4.0-rc3 with tiapp.xml sdk set to  3.4.0.v20140913174915.    This is a regression.The commands were working with CLI 3.3.0 and titanium SDK 3.3.0.GA.    STEPS TO REPRODUCE:-  1. Open a terminal window  2. Create a project and you have to cd to this project to be able to run command build.  3. Run ti build -p iOS -T simulator --retina  4. Run  ti build -p iOS -T simulator --tall  5. Run  ti build -p iOS -T simulator --sim-64bit    EXPECTED RESULT  3. The project should build successfully and get launched on retina simulator.  4. The project should build successfully and get launched on tall simulator.  5. The project should build successfully and get launched on 64 bits simulator.    ACTUAL RESULT  3. The command throws an error when ran with --retina flag instead of building the project and launching it.  4. The command throws an error when ran with --tall flag instead of building the project and launching it.  5. The command throws an error when ran with --sim-64bit flag instead of building the project and launching it.    The following error is thrown on the terminal with all this commands.  ",Bug,High,Closed,"2014-09-15 10:42:34","2014-09-15 10:42:34",1
"The Titanium SDK ","iOS8: UrlSession - enabledRemoteNotificationTypes is not supported message appears if you require in the com.appcelerator.urlSession module","*Details:* enabledRemoteNotificationTypes is not supported message appears if you require in the com.<USER>urlSession module.    *Steps to reproduce:*  1. Create a Titanium app; make sure to include com.<USER>urlSession module in the tiapp.xml  2. In the app.js, require in the module e.g. {{var monkey = require(com.<USER>urlSession);}}  3. In the tiapp.xml, include the following iOS plist keys in the dict node:      4. Install app onto device  5. Background the app  6. Relaunch the app again    *Actual:*  enabledRemoteNotificationTypes is not supported message appears in the console:      *Expected:* enabledRemoteNotificationTypes is not supported message should not appear in the console.",Bug,High,Closed,"2014-09-12 21:53:20","2014-09-12 21:53:20",3
"The Titanium SDK ","CLI: Hook system shows warning 'bad plugin hook that failed to load' at build time","Description:    CLI gives a warning about failed to load plugin hook 'cli:go' hook at the build time.  The issue is reproducible with CLI 3.3.0 and Titanium SDK 3.3.0.GA.    STEPS TO REPRODUCE:-  To test:  1. create an app  2. unzip the attached <USER>zip into you project dir  3. edit tiapp.xml and add enable the plugin:    4. build an app for iOS and watch the build output at the console.    EXPECTED RESULT:  4.The project should build successfully without warning and console output should shown in the below form.      ACTUAL RESULT  4. The project build successfully but shows failed to load hook warning.Although It shows the [EVENT-HOOK] cli:go  in the output.  [WARN]  Bad plugin hooks that failed to load:        ",Bug,Low,Closed,"2014-09-14 14:24:51","2014-09-14 14:24:51",1
"The Titanium SDK ","iOS8: Add ability to request Geo Location Permission","With iOS8 now there is the need to request specific geo location permissions.    The PR for this method is here https://github.com/<USER>titanium_mobile/pull/6073    How to test this can be found here https://gist.github.com/benbahrenburg/4bcda636397cb095025f    The API for this is pretty simple    or  ",Improvement,High,Closed,"2014-09-14 01:24:07","2014-09-14 01:24:07",13
"The Titanium SDK ","iOS8: Refactor Alert","iOS8 has moved over AlertDialog and OptionDialog to UIAlertController    Also the correct way to show popovers is now to set the modalPresentationStyle to UIModalPresentationPopover    Titanium needs to refactor these three proxy classes. Will probably also need to change the supported API.",Improvement,High,Closed,"2014-09-13 18:53:47","2014-09-13 18:53:47",13
"The Titanium SDK ","iOS8: 'rsync failed' and unable to submit apps with Xcode 6 if including DSYM file","When trying to submit an app to the AppStore with Xcode 6 GM an error occurs saying 'rsync failed'. Clicking the 'View Log' button does not show any logs, so I cannot provide more information. I googled the issue and saw at least 1 other having a similar problem on the dev Q&A site.    https://developer.<USER>com/question/177627/app-store-build---340---rsync-failed    The current workaround seems to be to exclude uploading the DSYM file to receive symbolicated crash logs from Apple.",Bug,High,Closed,"2014-09-13 15:33:28","2014-09-13 15:33:28",13
"The Titanium SDK ","iOS8: iPad Snapshot Splash is rotated sideways when in Landscape mode","h6.Issue description  If the device is in landscape mode when the user goes into multitask mode on iOS (Double Tap Home Button) the splash screen snapshot is shown rotated sideways in the portrait orientation (As seen in the Screen shoot attached).    When using the Ti.App.setForceSplashAsSnapshot(true); property and the 3.3.0.GA TiSDK and iOS 7 SDK on iOS 7 device when the user goes into multitask mode on iOS (Double Tap Home Button) the splash screen snapshot is shown in the orientation that the app is in (screen shoot attached to illustrate this).     h6.Steps to reproduce   # Launch App   # In portrait mode double tap home button.   # Notice the splash screen image shown is in the correct portrait orientation   # Rotate it to landscape mode   # Multitask by double tapping the home button   # Notice that the splash screen image is shown rotated sideways. It appears to be stuck in portrait mode.     h6.Sample code  Reproduced at iOS8 Ipad Simulator.      h6.Additional details  Since our docs says it only works at device there is an attached sample app to illustrate: 3.4_Splash_SnapShot_Sideways.zip     A picture is attached which shows the issue called: SplashSnapshotSideways.png     This was also reproduced with iPad (Gen 3) running 8.0 Beta 5 using    - http://docs.<USER>com/titanium/latest/#!/api/Titanium.App-property-forceSplashAsSnapshot",Bug,High,Closed,"2014-09-13 01:40:34","2014-09-13 01:40:34",13
"The Titanium SDK ","MobileWeb: Custom .woff fonts not rendering on app","h3. Issue    When using a custom font in a MobileWeb app the font is not correctly rendered, this used to worked correctly on SDK 3.2.3.GA but stopped working on 3.3.0.GA    h3. Testing     While testing i notice in the index.html that the @font-face is different from 3.2.3.GA than the one in 3.3.0.GA    @font-face in index.html SDK 3.2.3.GA      @font-face in index.html SDK 3.3.0.GA      The source parameter is missing causing an error in the CSS and not rendering the font.    h3. Test code        h3. Steps to Repro    1. Run the attached test case for Mobile Web using SDK 3.3.0.GA    h5. Expected Result    The app will display a label with custom font    h5. Actual Result    The app will not display a label with custom font in SDK 3.3.0 but if the test is run with 3.2.3.GA will be displayed correctly.  ",Bug,Medium,Closed,"2014-09-11 17:57:53","2014-09-11 17:57:53",1
"The Titanium SDK ","iOS8: No options to build for device or simulator and packaging","h5.Description    When 3.3.0.GA is selected using ti sdk select and then in the tiapp.xml of a project 3.4.0 SDK is selected, there is no option to perform any actions relating to iOS (package, build) and when trying to build from the CLI the build fails and the error below is shown.        *Note*  This appears to happen in any 3.4.0 SDK and is not specific to the latest build (3.4.0.v20140909222515)    h5.Steps To Reproduce    1. Change ti sdk to 3.3.0.GA using        2. In your projects tiapp.xml change to 3.4.0.v20140909222515    3. Attempt to build to an iOS device/simulator or package for iOS distribution by using the CLI.    h5.Actual Result    The build will fail due to the error above.    h5.Expected Result    There build should succeed. ",Bug,High,Closed,"2014-09-11 00:25:02","2014-09-11 00:25:02",5
"The Titanium SDK ","CLI : iOS : When more than one iOS devices are connected building to one device builds to all","h5. Description:  1. Connect 2 iOS devices & build an app for any one of the 2 connected device.    h5. Actual Result:  1. The app is built & installed on both the connected devices.  2. Command studio sends:    This command above build's to both connected devices.    3. Using CLI we see the same issue.     The app builds for both the devices.    CLI log :      h5. Expected Result:  1. The app should only be built to the selected device.",Bug,High,Closed,"2014-09-10 23:56:12","2014-09-10 23:56:12",3
"The Titanium SDK ","iOS8: Listview: Separator Insets values are not respected on the side of the title/data if the listview row contains a title/data","h6. This issue is only seen on iOS 8. Works fine on iOS 7.1    h5. Description:  1. Run the code below:    2. Run it on iOS 8 & iOS 7 device & notice the difference.    h5. Actual Result:  1. Separator Insets values should be respected on the side of the title/data if the listview row contains a title/data e.g ONE,TWO,THREE,FOUR.    NOTE: Refer screenshots for reference.    h5. Expected Result:  1. Separator Insets values are not respected on the side of the title/data if the listview row contains a titledata",Bug,High,Closed,"2014-09-10 23:01:05","2014-09-10 23:01:05",5
"The Titanium SDK ","iOS8: Add support for SplitView on iPhones","iOS8 brings the UISplitViewController to iPhones:    https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UISplitViewController_class/index.html    *This means:*    - {{Ti.UI.iPad.SplitWindow}} should be moved to {{Ti.UI.iOS.SplitWindow}}  - The 4-year-old [MGSplitViewController|https://github.com/mattgemmell/MGSplitViewController] that is [used|https://github.com/<USER>titanium_mobile/blob/58198c641d77e17d156431666e80bae732b5c130/iphone/Classes/TiUIiPadSplitWindow.m#L56] now should probably be replaced by [UISplitViewController|https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UISplitViewController_class/index.html]    I'm not sure what originally was the reason for using MG's instead of the official one?    *NOTE:* Credits to Malcolm for bringing this up.","New Feature",High,Closed,"2014-09-10 14:23:43","2014-09-10 14:23:43",21
"The Titanium SDK ","iOS8: DocumentViewer not displaying PDF files","h3. Issue    Using DocumentViewer on iOS 8 is not rendering PDF files.    h3. Steps to repro    1. Run test case  (test.zip)  2. Click on Launch Doc button  3. On the navigation bar press the done button  4. Click on Launch PDF button    h5. Expected result:    After clicking on Launch Doc button the .docx file is rendered in the DocumentViewer and after clicking on Launch PDF button the .pdf file is also  shown in the DocumentViewer.    h5. Actual result:    After clicking on Launch Doc button the .docx file is rendered in the DocumentViewer and after clicking on Launch PDF button the .pdf file is not being shown by the DocumentViewer.    h3. Sample code        h3. Additional info    There are reports of this happening on native also apparently related to changes in how to call the UIDocumentInteractionController    http://stackoverflow.com/questions/25430069/uidocumentinteractioncontroller-displaying-blank-pdf",Bug,High,Closed,"2014-09-10 14:15:48","2014-09-10 14:15:48",5
"The Titanium SDK ","iOS: Two instances of iOS Simulator launched when one of them is iPhone 6/6 plus","The previous instance of iOS simulator is not killed and the second instance is created when one of the iOS simulator is iPhone 6/iPhone 6 plus and the second instance is any other simulator apart from those two.    Steps to Reproduce:  1. Create a project  2. Run the project through studio or CLI on iPhone 6 simulator  3. Once the project runs on the above simulator, try to run the same project on any simulator other than iPhone 6/ iPhone 6 plus    Actual Result:  A second simulator instance is created.    Expected Result:  There should be only one instance on simulator.",Bug,High,Closed,"2014-09-10 07:21:02","2014-09-10 07:21:02",8
"The Titanium SDK ","CLI: ti info fails when invalid Titanium SDK is selected","There's a bug in ti info when an invalid Titanium SDK is selected:        Android SDK    Android Executable          = /opt/android-sdk/tools/android    SDK Path                    = /opt/android-sdk    Android NDK    NDK Path                    = /opt/android-ndk    NDK Version                 = r10 (64-bit)    ",Bug,High,Closed,"2014-09-09 22:42:58","2014-09-09 22:42:58",3
"The Titanium SDK ","iOS8: userLocation is not displayed when using ti.map module","h5. To reproduce  1. Run the sample code, make sure to add ti.map module to tiapp.xml    h5. Actual result  No permission to use the user current location, no pin to display it.",Bug,High,Closed,"2014-09-09 21:09:50","2014-09-09 21:09:50",8
"The Titanium SDK ","iOS: Add @3x images and new icon sizes to new-app templates and samples","To support the iPhone 6/6+ screen sizes, we will need to add new icons and launch screen images to our new-app templates and samples.    See https://developer.apple.com/library/prerelease/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html#//apple_ref/doc/uid/TP40006556-CH27-SW1 for the complete list.    For iPhone 6, launch images:     750 x 1334 (@2x) for portrait  1334 x 750 (@2x) for landscape    For iPhone 6 Plus:    1242 x 2208 (@3x) for portrait  2208 x 1242 (@3x) for landscape    New icons: 180x180, 120x120, 87x87 ",Improvement,Critical,Closed,"2014-09-09 20:24:20","2014-09-09 20:24:20",13
"The Titanium SDK ","iOS8: Feature Request to do not allow the CameraPreview to rotate","h6.Feature Request  Feature Request to do not allow the CameraPreview to rotate. Add the following method inside @implementation TiImagePickerController        - https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/MediaModule.m#L65    h6.Sample code  ",Improvement,Medium,Closed,"2014-09-09 20:13:50","2014-09-09 20:13:50",3
"The Titanium SDK ","iOS8: Alert dialog distortion on rotation","h5. To reproduce  fromgit/titanium_mobile_tests_internal/FeatureTest/Map/module_map  run  5275 test  1. click any annotation, get an alert and rotate the device    h5. Actual result  Alert dialog is cut off    app.js    1. Install",Bug,High,Closed,"2014-09-09 18:59:50","2014-09-09 18:59:50",5
"The Titanium SDK ","iOS8: OptionDialog doesn't work in a Popover","This issue is probably related somehow to TIMOB-17639.    *Problem*  If you want to show an {{Ti.UI.OptionDialog}} in a {{Ti.UI.iPad.Popover}} it won't show - or even crash if you pass a {{view}} property.    *Reproducing*  Build and run the test case on the next 2 configurations to see it crash.    * iOS 7.1 using 3.3.0.GA: Works  * iOS 8.0 using 3.4.0-beta: *Fails*    Uncomment line 31 and repeat to see it fail without crash.    *Test case*      *Crash*  ",Bug,Critical,Closed,"2014-09-09 13:49:11","2014-09-09 13:49:11",3
"The Titanium SDK ","iOS: map camera encounters Collection <__NSArrayM: 0x16460ef0> was mutated while being enumerated","Homes.com is encountering the below error when toggling between annotations on a map when using the map camera. See their message here:    The issue pertains to centering the map on top of an annotation after it is clicked. The idea is that when a user clicks on a map annotation, the map will move over the annotation and then a custom popup will load over the annotation.   We were able to make the map pan over an annotation by updating the map region. However, because specifications provided required that the map be zoomed in a lot closer to the pins, it meant that we had to use the map camera on iOS. Doing this lead to the issue we are now experiencing.   Please find attached a copy of a simple project that shows this issue and a copy of the error log we get.   Also, the error that we get has only happened on the device and not in the simulator.    Below is the crash as I encounter it. Attached is the sample project and the customer's log.  ",Bug,High,Closed,"2014-09-09 18:09:59","2014-09-09 18:09:59",5
"The Titanium SDK ","iOS8: Orientation locked in portrait when returning from image capture and rotating the iPad device","h6.Issue description  Orientation locked in portrait when returning from image capture and rotating the iPad device    h6.Steps to reproduce  Please use the sample attached.  # Launch the app in Landscape mode with the Home button on the right   # Rotate the app around, notice the UI changes to reflect the orientation correctly.   # Get it back into landscape mode.   # Click Launch Camera   # Click the (X) button and then immediately rotate the tablet to portrait up or portrait down.   # Notice that the image capture view will close but then the app gets skewed into an akward orientation. (Seems to be in portrait but its in landscape orientation. See the attached screenshot called iPad_RDC_Oreintation_Akward.png.)   # Keep rotating the device, notice that you cannot get the app back on screen fully. The app is now stuck in this orientation state. ",Bug,High,Closed,"2014-09-09 15:52:51","2014-09-09 15:52:51",13
"The Titanium SDK ","iOS8: Map in a webview does not load","A Map inside a webview does not load on iOS 8 device.    The issue does not occur on iOS 7.    Steps to Reproduce:  1. Run the app with the code below    Actual Result:  The Map contents do not load. It shows the zoom in and zoom out button but the map remains blank. Also it does not prompt for permissions to use location services, as it does on iOS 7.    Expected Result:  The map on the webview should load successfully     ",Bug,High,Closed,"2014-09-09 10:01:56","2014-09-09 10:01:56",3
"The Titanium SDK ","CLI: Running ti build -p iOS -T device --developer-name --pp-uuid --no-prompt should give an error for invalid --pp-uuid.","Description:  The iOS developer certificate default value is set with latest CLI and Titanium SDK.  Running ti build -p iOS -T device --developer-name --pp-uuid --no-prompt should give error for invalid provisioning profile value.    This is a regression.  With CLI 3.3.0 and Titanium SDK ,the same command shows the below error.    KAGRAWAL-MBP:apple <USER> ti build -p ios -T device --developer-name --pp-uuid --no-prompt  Titanium Command-Line Interface, CLI version 3.3.0, Titanium SDK version 3.3.0.GA  Copyright (c) 2012-2014, <USER> Inc.  All Rights Reserved.  Please report bugs to http://jira.<USER>org/  [ERROR] Invalid --developer-name value   [ERROR] Invalid --pp-uuid value     STEPS TO REPRODUCE  1. Open a terminal window  2. Create a project and you have to cd to this project to be able to run command build.  3. Run ti build -p iOS -T device --developer-name --pp-uuid --no-prompt command.    EXPECTED RESULT  3. The CLI should give error message for invalid provisioning profile value and does not build the application.  [ERROR] Invalid --pp-uuid value     ACTUAL RESULT  3.The CLI does not give any error message to user and does not build the application.          ",Bug,High,Closed,"2014-09-09 08:12:08","2014-09-09 08:12:08",5
"The Titanium SDK ","iOS: Option Dialog shown truncated on orientation change when project resources don't have Default-568h@2x.png file","For a project that does not have the file <EMAIL>, required for 4 screen iPhone, in the resources then the option dialog truncates on orientation change.    This is a regression as this issue did not occur with SDK 3.3.0.    Steps to Reproduce:  1. Create a new project  2. Delete the file '<EMAIL>' from Resources > iPhone folder of the project  3. Replace the app.js with the code below  4. Run the app on an iOS device (a 4 screen device) in portrait mode  5. In the app, click on button 'here'. the option dialog is shown  6. Rotate the device to landscape orientation    Actual Result:  The option dialog is shown truncated. Refer to attached screenshot    ",Bug,High,Closed,"2014-09-09 05:21:55","2014-09-09 05:21:55",2
"The Titanium SDK ","CLI: Running ti build -p iOS --ios-version 7.1 command gives an error as invalid value even if Xcode 5.1.1 is installed on the test machine.","Description:  The test machine is having installation for Xcode 5.1.1 and Xcode 6 beta 7 in applications.  Running ti build -p iOS --ios-version 7.1 command gives error message as invalid value and prompt the user with iOS SDK version 8.0 option only as a valid value.    This is a regression.  With CLI 3.3.0 and Titanium SDK 3.3.0.GA, I am able to choose the installed iOS SDK version.    STEPS TO REPRODUCE  1. Open a terminal window  2. Create a project and you have to cd to this project to be able to run command build.  3.Run ti build -p iOS --ios-version 7.1 command.    EXPECTED RESULT  3.Project should build successfully with IOS SDK Version 7.1 and respective Xcode.    ACTUAL RESULT  3. CLI gives an error message for IOS SDK 7.1 as invalid value.It gives IOS SDK 8.0 only as a valid value for the latest CLI and Titanium SDK.    KAGRAWAL-MBP:apple <USER> ti build -p ios --ios-version 7.1  Titanium Command-Line Interface, CLI version 3.4.0-beta, Titanium SDK version 3.4.0.v20140908144913  Copyright (c) 2012-2014, <USER> Inc.  All Rights Reserved.    Please report bugs to http://jira.<USER>org/    [ERROR] Invalid --ios-version value 7.1    Which iOS SDK version would you like to build with?   1)  8.0  Select an iOS SDK version by number or name:   ",Bug,High,Closed,"2014-09-09 00:03:35","2014-09-09 00:03:35",5
"The Titanium SDK ","CLI: Xcode 6 is not hidden from ti info with TiSDK 3.3.0 and older","When running {{ti info -t ios --sdk 3.3.0.GA}} on a machine that has Xcode 6 or newer installed, it doesn't properly remove Xcode 6 from the detected Xcodes.    Note: it does remove Xcode 6 from the build command's perspective.",Bug,High,Closed,"2014-09-08 21:22:53","2014-09-08 21:22:53",8
"The Titanium SDK ","iOS8: iPad Alert dialog does not consider window orientation modes","h2. Description  We have modal window and a button. when user clicks on the button alert pops up.  The app is supposed to have only portrait orientation which is set in tiApp.xml file.  When alert pops up, the device supports orientation change.    h2. Testcase  Step to reproduce:  1.Tap on the button in the main window,which opens modal window.  2.Tap on the button in modal window that brings up alert dialog.  3.Try rotating the device and orientation is supported      In tiapp.xml  ",Bug,High,Closed,"2014-09-08 20:53:49","2014-09-08 20:53:49",5
"The Titanium SDK ","iOS8: Access to currentUserNotificationSettings & didRegisterUserNotificationSettings","iOS 8 has implemented permission dialogs and management around local notifications.  A user can not allow or adjust the local notifications they allow to be registered in this app.    To address this, it would be nice to have the following:    1. A method that returns the types currently registered and allow by the app's [UIApplication sharedApplication] currentUserNotificationSettings    2. An event which fires with the UIUserNotificationSettings provided to the app delegate didRegisterUserNotificationSettings method    An approach on how to do this is available in this gist https://gist.github.com/benbahrenburg/7b65d074c728cba0de4c    PR available here https://github.com/<USER>titanium_mobile/pull/6025",Improvement,High,Closed,"2014-09-07 01:17:07","2014-09-07 01:17:07",13
"The Titanium SDK ","iOS8: Popover: The app does not change orientation when popover is visible","h5. Description:  1. Replace the code in app.js with the code below:    2. Build & run the app on Ipad/Ipad mini (I had I pad mini).  3. Tap the show Gallery button.  4. With the popover visible change the device orientation to landscape or any other orientation.    h5. Actual Result:  1. The orientation does not change.  2. Close the popover & change the orientation of the device, you will see that the orientation now changes.    NOTE: The orientation changes as expected for ipad(mini in my case) devices with iOS 7.0.3 & iOS 6.1.3    h5. Expected Result:  1. The orientation should change when the popover is visible",Bug,High,Closed,"2014-09-08 18:25:01","2014-09-08 18:25:01",5
"The Titanium SDK ","iOS8: First launch - unexpected layout for Ti.UI.Portrait","When launching app in a LANDSCAPE_RIGHT mode, the image layout is wrong. Rotating device to PORTRAIT results in image size reduction.  It happens only on first launch. Killing the app and launching it again will result in an expected  layout.  app.js      ",Bug,High,Closed,"2014-09-08 18:13:55","2014-09-08 18:13:55",8
"The Titanium SDK ","Constant permission requests every time app is compiled to device using Yosemite ","Each time I compile an app using Ti SDK 3.4 and target a physical device I am asked to provide my Mac credentials before the <USER>will place the app on the device.    This occurs after the image optimisation console output and before any mention of the app being transferred to the device.    The device is an iPhone 5 running iOS8b5.    The dialog box context is as follows;      OS X wants to make changes.  Type an administrator's name and password to allow this.    OS X wants to use the System keychain.    The only two buttons offered are 'Deny' & 'Allow'.  There is no option to always allow.    Provided the correct details are entered the app will successfully transfer to the device and does not appear to suffer any issues directly related to the security dialog.",Bug,High,Closed,"2014-09-08 17:34:45","2014-09-08 17:34:45",8
"The Titanium SDK ","iOS8: LANDSCAPE_RIGHT image is cut off and is not centered","h5. To reproduce  Run the following test in portrait mode  app.js    h5. Actual result  Please, refer  to the screen capture",Bug,High,Closed,"2014-09-08 17:17:45","2014-09-08 17:17:45",8
"The Titanium SDK ","iOS8: Add UIApplicationOpenSettingsURLString Support","Add a property to return the application setting URL on iOS 8 so that we can use Ti.Platform.openURL to launch directly into that screen.    For example:    ",Improvement,High,Closed,"2014-09-03 23:30:39","2014-09-03 23:30:39",2
"The Titanium SDK ","iOS8: Add isRegisteredForRemoteNotifications to determine whether the app is currently registered for remote notifications.","Returns a Boolean indicating whether the app is currently registered for remote notifications.    Add support for isRegisteredForRemoteNotifications so that the developer can check if the user has authorized notifications.    ",Improvement,High,Closed,"2014-09-03 23:34:06","2014-09-03 23:34:06",3
"The Titanium SDK ","iOS8: Ti.UI.OptionDialog.show() doesn't work without view-property on iPad","*Problem*  An {{Ti.UI.OptionDialog}} doesn't show on iPads running iOS8, giving the following (quiet) error in the device logs:        *Steps to reproduce*  With the following combinations, build and run the test case and click on the window to open the dialog.    - SDK 3.4 / iOS8 / iPhone: OK  - SDK 3.4 / iOS8 / iPad: *Error*  - SDK 3.3 / iOS7.1 / iPhone: OK  - SDK 3.3 / iOS7.1 / iPad: OK    *Test case*  ",Bug,High,Closed,"2014-09-08 09:27:01","2014-09-08 09:27:01",3
"The Titanium SDK ","iOS8: Support New Geo Permissions","Apple has changed how Location Services Permissions are handled in iOS8. Because of this if iOS8 is the deployment target the Ti SDK Geo functions will stop working.    Approach on now to fix : https://gist.github.com/benbahrenburg/c4c992c8c61d197510ea    PR : https://github.com/<USER>titanium_mobile/pull/6028",Bug,High,Closed,"2014-09-07 22:38:37","2014-09-07 22:38:37",8
"The Titanium SDK ","CLI: Should offer to create the Application Support/Titanium (or other user designated) folder if it does not exist.","h4. Problem  CLI sdk setup fails if Titanium folder does not exist    h4. Expectation  CLI should create the Titanium folder in Application Support if it does not exist    ",Bug,High,Closed,"2014-09-08 03:55:55","2014-09-08 03:55:55",3
"The Titanium SDK ","iOS8: Portrait size window does not resize after rotation to landscape ","h5. To reproduce  app.js      1. Click Win2  2. Return to Tab1   h5. Actual result  Portrait size window in landscape mode  Note: it is a regression against iOS 7.1",Bug,High,Closed,"2014-09-05 21:19:00","2014-09-05 21:19:00",8
"The Titanium SDK ","iOS8: Setting document in a WebView by URL does not work","h5.Description    In KitchenSink->XHR->File Download the Set Web View(url) option does not display the file after it has been downloaded. If you use Set Web View (data) then the file will display fine.    *Notes*    This works in iOS7.    h5.Steps To Reproduce    1. Add the attached app.js to an existing project  2. Tap Set Web View (url)    h5.Actual Result    The file will not show but the web view will be present as shown by the label 'The webview will hide me!' being hidden    h5.Expected Result    The file should show ",Bug,High,Closed,"2014-09-05 18:41:19","2014-09-05 18:41:19",13
"The Titanium SDK ","Debugger does not stop at the correct breakpoint/position","When I debug my application, I need to place the breakpoint exactly one line below the one I want to debug at. This is very frustrating and makes debugging really unpleasant.  The only exception is file app.js for which breakpoints seems to be handled corectly.    The following code illustrates the problem:    {code:title=app.js|borderStyle=solid}  if (Ti.version < 1.8) {    alert('Sorry - this application template requires Titanium Mobile SDK 1.8 or later');  }    var myVar = 5;  var yourVar = 6;  var thirdVar = myVar + yourVar;    var my = require(MyDir/MyThing).MyThing();  my.invoke();    However for the second file, if I need to stop at line 9 I will need to place the breakpoint at line 10. More over, if I need to stop at line 10 I need to put the breakpoint at line 11 which really does not make sence.    Attached is a sample project.",Bug,High,Closed,"2014-08-04 14:46:30","2014-08-04 14:46:30",3
"The Titanium SDK ","iOS: Fix fullscreen transform for Camera","h4. Problem Description  A black stripe on the bottom when using showCamera with a parameter of scale 1 and overlay rotating 90 degree.    The code will show a black Stripe on the Bottom of the Screen and the app is in Landscape mode. Use a 2d matrix to transform the live view of the camera by scaling it 1 to 1.x or whatever scale you want to fill the screen. for me the camera previews full screen at scale 1.75.    h4. Steps to reproduce  1. Create new mobile project (classic titanium)  2. Copy this code into app.js     3. Run it in device.",Bug,High,Closed,"2014-07-07 02:53:15","2014-07-07 02:53:15",13
"The Titanium SDK ","Ti.Media.saveToPhotoGallery() saves pictures without file extension on Android","h4. Problem Description  On Android, *Ti.Media.saveToPhotoGallery()* saves a file or a blob without any file extension, which makes it impossible for the photo gallery to recognize the file.    The issue can be reproduced with the following code, with the picture test.jpg being stored in project/app/assets. Note that in this example, I use *Ti.Media.saveToPhotoGallery* with a blob but I get exactly the same result with a file.        I receive a success, but the image is saved without extension and I get this message in the console:    D/MediaScannerReceiver(25405): action: android.intent.action.MEDIA_SCANNER_SCAN_FILE path: /storage/emulated/0/Pictures/TestApp/tia636479782jpeg    h4. Steps to Reproduce:  1. Create a Classic project.  2. Paste this code in app.js file.  3. Paste a photo to the resources folder named test.jpg.  4. Run this code with the testing environment.    h3.Test Code:  {code:title=app.js}  var win = Titanium.UI.createWindow({   backgroundColor : #000,  });    var photo = Ti.UI.createButton({   title : 'Save Photo',   height : Ti.UI.SIZE,   width : Ti.UI.SIZE,   top : 20,   color : #fff    });    win.add(photo);    // Listen for click events.  photo.addEventListener('click', function() {   file = Ti.Filesystem.getFile(Titanium.Filesystem.resourcesDirectory, test.jpg);   alert(file.nativePath);   Ti.Media.saveToPhotoGallery(file.read(), {    success : function() {     alert('success');    },    error : function() {     alert('error');    }   });    });    win.open();    {code}  ",Bug,None,Closed,"2014-07-29 13:09:33","2014-07-29 13:09:33",3
"The Titanium SDK ","iOS8: Unable to badge an application icon","h5.Description    In KitchenSink->Phone->App Badge when trying to set the App Badge the console prints out the statement below. The App Badge property can't be set by using either the set method or changing the property because of this.  The attached app.js is a test case which can be used to reproduce.    *Notes*    This is a regression as the test case can be used to set the App Badge on both an iOS7 and iOS6 device.        h5.Steps To Reproduce    1. Add the attached app.js to a project and build to and iOS8 Device/Simulator.  2. Tap the either of the Set App Badge labels    h5.Actual Result    The App Badge is not set and the console prints out the above statement.    h5.Expected Result    The App Badge should be set to 20.  ",Bug,High,Closed,"2014-09-04 21:36:39","2014-09-04 21:36:39",2
"The Titanium SDK ","Android: Android ListView setDividerHeight is not exposed in Titanium","There is a native functionality in Android to set the DividerHeight on a ListView. This functionality is not exposed in Alloy.    3 weeks ago this issue was raised: https://developer.<USER>com/question/176416/remove-android-listview-separator    In Android, to set the height of the Divider you need to call this function    listView.setDividerHeight(1);    (as explained here: http://stackoverflow.com/questions/11858180/change-the-divider-height-of-listview-dynamically)    It seems trivial to expose this feature to Titanium Developers.",Improvement,None,Closed,"2014-08-14 12:35:43","2014-08-14 12:35:43",5
"The Titanium SDK ","iOS: The view flickers on orientation change when its container has a layout property","The view flickers on device orientation change when the container window / view has a layout property. The flicker does not show on first orientation change but then on flickers on each change in orientation.    This is a Regression as the views did not flicker with SDK 3.3.0.GA    Steps to Reproduce:  1. Create an app with code below and launch it on a device  2. Change the orientation of the device more than once.    Actual Result:  The blue view can be seen flickering and it shows the white background behind whenever the device orientation is changed.    Expected Result:  The views should not flicker.    ",Bug,High,Closed,"2014-09-04 11:51:31","2014-09-04 11:51:31",13
"The Titanium SDK ","Unable to execute javascript code using evalJS on Android with SDK 3.3.0.GA","After upgrading to the latest Titanium SDK (3.3.0.GA), we are not able to invoke Javascript functions using evalJS on Android. We are developing the application for about 2-3 years now, and we can confirm that the code worked prior upgrading to 3.3.0. Moreover, the iOS version of our app does not have this problem even after upgrading the SDK.  Our application is quite complex, and one of the core features is the integration with web applications provided by our platform. In order this integration to work, we heavily rely on invoking Javascript functions in the webView context in order to retrieve some data, or identify what steps should be taken.    Since we are not allowed to share any productive code, I have prepared a code snippet that presents the issue:    {code:title=app.js|borderStyle=solid}  (function() {      var win = Ti.UI.createWindow();   var webView = Ti.UI.createWebView({    url : 'test.html'   });      var evalJSFunc =  +    (function() { +     var result = '{'; +    var d = document.getElementById('myDiv'); +    if (d && d.children) { +     var childrenLength = d.children.length; +     var delimiter = ''; +     for (var i = 0; i < childrenLength; i++) { +      var child = d.children[i]; +      result = result + delimiter + child.name + ':' + child.value; +      delimiter = ','; +     } +    } +    result = result + '}'; +    return result + '}'; +   })();;      webView.addEventListener('load', function() {    var result = webView.evalJS(evalJSFunc);    alert(result);   });      win.add(webView);   win.open();     })();      When executing the above we get the following error:      After some time (if we wait enough) we get the attached screenshot in Genymotion simulator (no clue where this comes from).    Until now, the workaround for us was to rollback to the previous Titanium SDK (3.2.3.GA). Now, given the fact that Apple will also release the new iOS8 soon, we expect that new Titanium SDK would be rolled out as well, one that we must upgrade to, since iOS8 is a must for us. However, this Android issue is also a blocker, putting us in deadlock situation.  I have noticed that there are few other JIRA issues similar to ours.     https://jira.<USER>org/browse/TIMOB-15896  https://jira.<USER>org/browse/TC-4427    However, I'm not sure if the cause is really the same (one of the issues says that this happens on 3.2.0 with API17 but we are experiencing it on 3.3.0 with API16). In either case, we would highly appreciate if this issue is treated with higher priority and resolved as quick as possible.    ",Bug,High,Closed,"2014-09-03 15:57:15","2014-09-03 15:57:15",3
"The Titanium SDK ","Titanium Android: HTTPClient doesn't decompress gzipped data for error responses","Gzipped data isn't decompressed if the response status code is >=400 (https://github.com/<USER>titanium_mobile/blob/master/android/modules/network/src/java/ti/modules/titanium/network/TiHTTPClient.java#L273-L275)    Whereas for response status codes <400, the response is properly decompressed.  (https://github.com/<USER>titanium_mobile/blob/master/android/modules/network/src/java/ti/modules/titanium/network/TiHTTPClient.java#L285)",Bug,Critical,Closed,"2014-09-03 18:43:36","2014-09-03 18:43:36",5
"The Titanium SDK ","CLI: Xcode 6-beta - Installing to iOS simulator will fail to build on first brand new launch of the simulator","*Details:*  Installing to iOS simulator will fail to build on first brand new launch of the simulator if you are using Xcode 6-betaX. However, if you reinstall the same app again to the *same simulator OS* (regardless of phone form factor), then app will install and launch without any issues.    *Note:*  - This was reproducible from CLI.    *Possible Steps to Reproduce:*  1. Switch to Xcode 6-beta7  2. Create a Titanium or Alloy app  3. Install app to simulator 8.0, 7.1.0, or 7.0.3    *Actual:* If this is the first time launching your simulator, app will fail to build (see attachment).  *Expected:* Should be able to install app to simulators without any issues.",Bug,Critical,Closed,"2014-09-03 18:26:26","2014-09-03 18:26:26",5
"The Titanium SDK ","CLI: CLI throws an error while reading platform input value given for “ti build -p” or “ti build —platform” commands.","Description:  Running ti build -p prompts the user to pick a platform but gives an error while reading the valid input value.  Running ti build --platform  prompts the user to pick a platform but gives an error while reading the valid provided value.    The same error is thrown with CLI 3.3.0 Titanium SDK 3.3.0.GA.    STEPS TO REPRODUCE  1. Open a terminal window  2. Create a project and you have to cd to this project to be able to run command build  3. Run ti build -p command.  4. Run ti build --platform command.    EXPECTED RESULT  3. CLI should read the user provided platform value successfully and then build the project.  4. CLI should read the user provided platform value successfully and then build the project.    ACTUAL RESULT  CLI throws an error while reading the user provided platform value and hence unable to build project successfully.    ",Bug,Low,Closed,"2014-09-03 01:06:08","2014-09-03 01:06:08",3
"The Titanium SDK ","iOS: CLI: Building for all IOS devices throws ReferenceError: i is not defined","h5.Description:  1. Build an app for multiple IOS devices at the same time(I did on 2 devices) using the Run -> On all IOS devices option in studio.    or    1. Build an app for multiple IOS devices at the same time(I did on 2 devices) using the all flag for device id in CLI.    h5. Actual result:  1. We get the error below & the build fails:      h5. Expected Result:  1. The app should build successfully on all IOS the devices attached",Bug,High,Closed,"2014-09-02 22:54:18","2014-09-02 22:54:18",13
"The Titanium SDK ","iOS8: Keyboard is deformed on iPhone","h5. Description  There is a visual deformation of a keyboard, when focus in a text field.  h5. To reproduce  1. Run iOS Keyboard. (titanium_mobile_tests_internal/FeatureTest/iOSKeyboard)  or create the default app and replace app.js    2. Click the text field.   h5. Actual result  The keyboard is deformed  h5. Expected result  2: Not a distorted  keyboard, which  should not disappear and rotate with the device.",Bug,Critical,Closed,"2014-09-02 21:07:14","2014-09-02 21:07:14",0
"The Titanium SDK ","iOS8: Simulator - unexpected behavior before launching the app","h5. Description  When launching the app on iOS8 Simulator, I encountered that as soon as the simulator started, it hanged  with the  black screen for a while before the splash screen appeared. The simulator displays the home screen with the installed app icon. The second attempt to launch the app is successful.    Note: the black screen appears for iOS7 and iOS8 Simulators, the return to the home screen happens on iOS8 Sim only.    h5. To reproduce  1. Create the default app with <USER>services enabled  2. Run iOS Simulator    h5. Actual result  The black screen for a while, the splash screen and return to the home screen.    h5. Expected result  The application should be launched successfully  ",Bug,High,Resolved,"2014-09-02 18:28:29","2014-09-02 18:28:29",21
"The Titanium SDK ","Distribute - iTunes Store option  opens Xcode Device window instead of Organizer window ","When I try to publish a project with *Distribute - Apple iTunes Store* option, Studio opens *Xcode Devices window* instead of *Xcode Organizer window.*    This is more related with Xcode-6 issue. Because when I try to package the app from Studio 3.3.0 with *Xcode 6*, Same thing happens (i.e It opens *Devices Window*).    This is a *regression* since Studio 3.3.0 opens Xcode Organizer window with *Archives* tab for Xcode 5.1. This is the most convenient way to proceed the packaging with Xcode.    h5. Steps to Reproduce   # Create a iOS project   # Package to Apple iTunes Store    h5. Expected Result  Studio should open Xcode Organizer window with Archives tab opened. ",Improvement,High,Closed,"2014-09-01 08:10:46","2014-09-01 08:10:46",5
"The Titanium SDK ","iOS: The app fails to install on iOS device after a second iOS device is also plugged in","The app does not install to the first iOS device after the second iOS device is also attached in the system.    This is a regression as the issue does not exist with SDK 3.3.0.GA  The issue occurs on 3.3.0 CLI as well with 3.4.0.x SDK    Steps to Reproduce:  1. Attach a development iOS device to the system.  2. For any mobile project, either install the project through studio or run the following cli command ti build -p ios -T device -C <UDID of device1>  3. The app gets installed successfully  4. Now plug in another iOS device to the system.  5. Again try to install the same project to the first device  In CLI the build is successful but the <USER>terminates without installing the app. In studio the installer <USER>terminates after the console shows [INFO] :   Image optimization complete    Note: If at this point we try to install the same app on device 2, it is successful. However, if we unplug and plug the device 1 again then it does not install on device 2 now but does so on device 1.    In trying to reproduce this, there are times when the node-ios-device library fails to connect to the device or start the syslog_relay service:        There are also times when node-ios-device crashes with a segmentation fault.",Bug,High,Closed,"2014-09-02 10:23:09","2014-09-02 10:23:09",21
"The Titanium SDK ","CLI: Some iOS build options with ti build -p iOS command is not prompting for input value when run without values","Description:  Running ti build -p iOS -T simulator -D command doesn't prompt the user for the deployment type value and build project with its default value.  Running ti build -p iOS -T command doesn't prompt the user for the target value and build project with its default value..  Running ti build -p iOS -T simulator -S command doesn't prompt the user for the iOS simulator version and build project with its default value.     The issue is not reproducible with CLI 3.3.0 and Titanium SDK version 3.3.0.GA.  With CLI 3.3.0, it prompts for the input value based on the option specified with ti build -p iOS command.  Hence marked as a regression.    STEPS TO REPRODUCE  1. Open a terminal window  2. Create a project and you have to cd to this project to be able to run command build  3. Run ti build -p iOS -T simulator -D command.  4. Run ti build -p iOS -T command.  5. Run ti build -p iOS -T simulator -S command.      EXPECTED RESULT  The CLI should prompt for the input value from user based on the iOS build  option given with the command.    ACTUAL RESULT  The CLI is not prompting for the input value for any of the mentioned options and building the project.",Bug,High,Closed,"2014-09-02 10:00:01","2014-09-02 10:00:01",5
"The Titanium SDK ","CLI: Running ti create --log-level” prompts for minimum log level value but giving an error message as well.","Description:  Running ti create --log-level prompts the user for log level value along with the error message.    The issue is reproducible with CLI 3.3.0.  STEPS TO REPRODUCE  1. Open a terminal window  2. Run 'ti create --log-level'  3. Type in a valid Project name and all prompted values    EXPECTED RESULT  The CLI should prompt the user for log level value without giving the error message.    ACTUAL RESULT  ",Bug,Medium,Closed,"2014-09-02 04:38:38","2014-09-02 04:38:38",5
"The Titanium SDK ","CLI: Running ti create --url does not prompt for  your company/personal URL and creates the project successfully.","Description:  Running ti create prompts the user for your company/personal URL along with other inputs.  Running ti create --url skips that step and creates project successfully.    The issue is reproducible with CLI 3.3.0.    STEPS TO REPRODUCE  1. Open a terminal window  2. Run 'ti create --url'  3. Type in a valid Project name and all prompted values    EXPECTED RESULT  The CLI should notice the missing parameters for the url and ask for a valid input.    ACTUAL RESULT  The CLI creates the project successfully without prompting for the URL value.",Bug,Medium,Closed,"2014-09-02 04:23:31","2014-09-02 04:23:31",5
"The Titanium SDK ","CLI: Running ti create -t module --template does not prompt user for specifying the project template. ","Description:  Running ti create -t module --template does not prompts the user to specify the project template to be used and creates the module.Running ti create -t app --template also doesn't prompt user for the project template.    The issue is reproducible with CLI 3.3.0.  STEPS TO REPRODUCE  1. Open a terminal window  2. Run 'ti create -t module --template' or Run 'ti create -t app --template  3. Type in a valid Project name and all prompted values    EXPECTED RESULT  The CLI should notice the missing parameters for template and ask for a valid input from the user.    ACTUAL RESULT  The command does not prompt user for project template and creates module or app project successfully.",Bug,Medium,Open,"2014-09-02 04:02:08","2014-09-02 04:02:08",5
"The Titanium SDK ","CLI: Running ti create --sdk or ti create -s fails the create command instead of prompting for sdk version.","Description:  Running ti create --sdk or ti create -s does not prompts the user to specify the sdk version.It's showing ' Failed to run command create' error.    The issue is reproducible with CLI 3.3.0.    STEPS TO REPRODUCE  1. Open a terminal window  2. Run 'ti create --sdk' or Run 'ti create -s'  3. Type in a valid Project name and all prompted values    EXPECTED RESULT  The CLI should prompt user for selecting the sdk version with either --sdk or -s options.    ACTUAL RESULT  Running this  fails the create command by showing below error with both the options '--sdk' and 's' .  ",Bug,Medium,Open,"2014-09-02 03:30:53","2014-09-02 03:30:53",8
"The Titanium SDK ","CLI: Running ti create --name” prompts the user for the project name along with the error message.","Description:  Running ti create --name prompts the user for the project name along with the error message.    The issue is reproducible with CLI 3.3.0.  STEPS TO REPRODUCE  1. Open a terminal window  2. Run 'ti create --name'  3. Type in a valid Project name and all prompted values    EXPECTED RESULT  The CLI should prompt for the project name without giving an error message.    ACTUAL RESULT  ",Bug,Medium,Open,"2014-09-02 02:31:16","2014-09-02 02:31:16",5
"The Titanium SDK ","Android: HTTPClient: Invalid Status Codes returned in 3.3.0.GA SDK","h4. Problem Description  When a GET request should be returning a status of 301 or 302, I have the 3.3.0 GA SDK returning a 200.    Switching back to the 3.2.3 GA SDK fixes the problem.    When we have tested using the following code, the status returned is 302 in 3.3.0.GA and 301 in 3.2.3.GA.     h4. Steps to reproduce       a) Create a simple project.      b) Update this code in app.js:            c) Run this with testing environment         h4. Test results    In Titanium SDK: 3.3.0.GA     [DEBUG]: Application booted in 125.191987 ms  [INFO] : Status = 302  [INFO] : This should have returned a 301 not a 200    In Titanium SDK: 3.2.3.GA     [DEBUG]: Application booted in 110.395968 ms  [INFO] : Status = 301  [INFO] : Redirect to http://www.google.co.nz/  ",Bug,High,Closed,"2014-09-01 22:18:50","2014-09-01 22:18:50",5
"The Titanium SDK ","iOS: HTTPClient: AutoRedirect = false returns 200 status code, not 301/302","h4. Problem Description  When a GET request should be returning a status of 301 or 302, I have the 3.3.0 GA SDK returning a 200.    Switching back to the 3.2.3 GA SDK fixes the problem.    When we have tested using the following code, the status returned is 302 in 3.3.0.GA and 301 in 3.2.3.GA.     h4. Steps to reproduce       a) Create a simple project.      b) Update this code in app.js:            c) Run this with testing environment         h4. Test results    In Titanium SDK: 3.3.0.GA     [DEBUG]: Application booted in 125.191987 ms  [INFO] : Status = 302  [INFO] : This should have returned a 301 not a 200    In Titanium SDK: 3.2.3.GA     [DEBUG]: Application booted in 110.395968 ms  [INFO] : Status = 301  [INFO] : Redirect to http://www.google.co.nz/  ",Bug,High,Closed,"2014-08-12 19:26:51","2014-08-12 19:26:51",3
"The Titanium SDK ","CLI: Running ti create --workspace-dir” prompts for the directory to place the project but giving the error message as well","Description:  Running ti create prompts the user for the directory to place the project in.  Running ti create --workspace-dir prompts the user for the directory to place the project along with the error message as well.    The issue is reproducible with CLI 3.3.0.  STEPS TO REPRODUCE  1. Open a terminal window  2. Run 'ti create --workspace-dir'  3. Type in a valid Project name and all prompted values    EXPECTED RESULT  The CLI should prompt for the directory to place the project in without giving an error message.    ACTUAL RESULT   ",Bug,Medium,Open,"2014-09-01 14:33:43","2014-09-01 14:33:43",5
"The Titanium SDK ","iOS: Unable to check if a JS source file exists on iPad device","h6.Issue description  Not able to check if a JS source file exists in the app. It only worked in the iOS simulator but not the ipad device. This was initially reproduced on Alloy but attached is a Classic app sample.     h6.Steps to replicate   1) Please grab the sample attached CaseClassic2559.zip and launch at iOS Simulator (for Alloy, you may want to use Case2559.zip).  2) Notice when compiled in the iOS ipad simulator, you will see I'm Ipad. But it will show This is Not Ipad in the real ipad device.    h6.Additional details  Alloy 1.4.1 - iPad OS 7.0.4. Also on TiSDK 3.4.0 CI and Alloy 1.6.0-dev.",Bug,Medium,Closed,"2014-09-01 12:54:54","2014-09-01 12:54:54",8
"The Titanium SDK ","CLI: Running ti create --platforms does not prompt for the target platform to be used and creates the project successfully.","Description:  Running ti create prompts the user to pick a platform for the project.  Running ti create --platforms skips that step and prompts for the Project name.    The issue is reproducible with CLI 3.3.0.  STEPS TO REPRODUCE  1. Open a terminal window  2. Run 'ti create --platforms'  3. Type in a valid Project name and all prompted values    EXPECTED RESULT  The CLI should notice the missing parameters for the platform and ask for a valid input.    ACTUAL RESULT  CLI creates the project successfully for non of the platforms.    ",Bug,Medium,Closed,"2014-09-01 11:13:39","2014-09-01 11:13:39",5
"The Titanium SDK ","iOS: Unable to Set Multiple Cookies in Request Header","h6.IOS: Fail to Set Multiple Cookie in Request Header for Ti.Network.HTTPClient in SDK 3.3.0      h6.Reproduce and Test Case:  {code:title=app.js}  var sessionid = Ti.App.getSessionId();  var token = example_token;  var contextid = '1234567';  var endpoint = http://127.0.0.1:8888;  //Ti.API.info(endpoint);    var loader = Titanium.Network.createHTTPClient({       onload : function(e) {           Ti.API.info(Received text:  + this.responseText);           alert(Received text:  + this.responseText);           alert('success');       },       onerror : function(e) {           Ti.API.debug(e.error);           alert('error');       },       timeout : 5000  // in milliseconds  });     loader.open(GET, endpoint);  loader.setRequestHeader('Content-Type', 'application/json;charset=utf-8');   loader.setRequestHeader('User-Agent', Titanium.userAgent);   loader.setRequestHeader('Cookie', 'Context='+contextid);   loader.setRequestHeader('Cookie', 'sessionID='+sessionid);  loader.setRequestHeader('Cookie', 'Auth_token='+token);   loader.send();     Context=1234567; sessionID=486E0EFB-C4A1-478A-9A5B-A9EB683B310C; Auth_token=example_token    Auth_token=example_token  {code}    It seems like the previous cookies property will be overwritten by the next when you set multiple cookies information at one request header on SDK 3.3.0.GA.     N.B. Only happens in 3.3.0.GA. It works well in 3.2.3 and 3.2.1. ",Bug,High,Closed,"2014-08-29 03:35:17","2014-08-29 03:35:17",5
"The Titanium SDK ","iOS: ActivityIndicator does not reset when used in ListView","A template in a ListView includes an ActivityIndicator. The first time the activity indicator appears, its spinner works fine but the second and subsequent time it appears, the spinner does not work.     Steps to reproduce:    (1) Create a new Alloy project and drop the three attached files into their usual folders and run the project on an iPhone or iOS Simulator.     (2) Scroll to the bottom. The ActivityIndicator appears as normal for a second, until it's replaced with more ListItems.    (3) Scroll to the bottom again. Now the ActivityIndicator is sans-spinner. Every subsequent scroll will have the same results.    It appears that this is because the ActivityIndicator view is not properly resetting when removed from the ListView. When I set visible=false to the ActivityIndicator before removing it from the view, the spinner works ok. Unfortunately this requires editing a ListView which is an expensive operation. You can see the workaround in action by uncommenting line 95 of the example code.    Note that the word Loading (also part of the ActivityIndicator) does appear even though the spinner does not.",Bug,Medium,Closed,"2014-08-28 21:28:38","2014-08-28 21:28:38",5
"The Titanium SDK ","Hiding the ActionBar using a custom theme misforms app when also using a 9-patch splash screen","If you follow the guide to hide the ActionBar using a custom theme and at the same time also follow the guide to use 9-patch splash screens the application window will be small and sitting in the top left of the screen, uncovering the splash screen under it, as shown in the attached screenshot.    h1. The guides    Just before the 3 steps for custom themes, the introduction of the following splash-guide says you do *not* need a custom theme if you just name your 9-patch splash screen images {{background.9.png}}:    - http://docs.<USER>com/titanium/latest/#!/guide/Icons_and_Splash_Screens-section-29004897_IconsandSplashScreens-Androidsplashscreenconsiderations    The following actionbar-guide shows how to use a {{custom_theme.xml}} together with a small change in {{tiapp.xml}} to hide the action bar on all windows:    - http://docs.<USER>com/titanium/latest/#!/guide/Android_Action_Bar-section-36735509_AndroidActionBar-HidingtheActionBar    h1. The problem    Both of these guides at themselves work just fine. But when you follow both of them you'll get the problem described.    h1. Steps to reproduce    1. Download the attached example project  2. Build to see the expected white application window  3. Rename {{platform/android/res/_drawable}} to {{drawable}}  4. Build to see the white application window in the top left    h1. Explored solutions    I've tried several changes such as using {{android:windowActionBar}} instead of {{windowActionBar}} or setting the splash in a custom theme, but nothing helped. I also compared the builds after step 2 and 4 of the steps laid out to reproduce. All the (non-binary) files were 100% identical, so the error must be in the compiled JAVA and not in the generated XML themes.    h1. Workaround    I can't think of a (satisfying) workaround, so I hope this can be fixed soon.",Bug,High,Closed,"2014-08-28 20:11:46","2014-08-28 20:11:46",3
"The Titanium SDK ","Update the classpath for android module template","The .classpath file of the Android module template is currently placed in the platform folder (Android). These dot files (.classpath, .project and .settings) are required to be in the root of the project to recognize as a valid Java project and to update the library paths.    Studio will copy the dot files from Android folder to root folder. However, the classpath file has to be updated with the correct src path pointing to android/src and android/build/.apt_generated.",Bug,High,Closed,"2014-08-27 23:20:09","2014-08-27 23:20:09",3
"The Titanium SDK ","Android: Converting a blob into a valid image does not maintain dimensions","h6.Issue description  Looking for a cross-platform way to create image thumbnail files asynchronously. Titanium is able to read an image file asynchronously into a buffer and then a blob. If we assign that blob to the image property of an ImageView, it displays as I expect. However, the blob is not recognised as an image by any of the Ti.Blob.image* methods. The blob has a mime type of application/octet-stream and a height and width of 0. Meanwhile Android is able to get height and width properly.    h6.Steps to reproduce  # Launch sample app. You can see that the fishImage ImageView loads its image directly from a file path in its image property.  # earthImage is loaded in index.js asynchronously using a file stream. Once the file contents are read completely, they are assigned to the image property of $.earthImage.   # Notice, the blob you get as a result of earthBuffer.toBlob() can't be used for any other image manipulation (e.g. creating thumbnails). It doesn't have a valid height, or width on Android.     E.G.      h6.Android      h6.iOS  ",Bug,High,Closed,"2014-08-27 22:14:08","2014-08-27 22:14:08",3
"The Titanium SDK ","Android: setting createHTTPClient properties autoRedirect and autoEncodeURL are ignored","h5.Description    When using Ti.Network.createHTTPClient and setting the properties in the create method to false it is ignored and they default to true.     The workaround is to use one of the two ways below to set the properties to false.        or        h5.Steps To Reproduce    1. Create a project and add the app.js attached  2. Build to an Android device/simulator and then tap the button    h5.Actual Result    The properties set to true, the URL is auto-redirected and auto-encoded, in the Studio console you should see what is attached in consoleLog.txt    h5.Expected Result    The properties should stay false and it should not auto-redirect or auto-encode the URL.    ",Bug,Medium,Closed,"2014-08-27 22:09:17","2014-08-27 22:09:17",2
"The Titanium SDK ","Android-L: KS Phone-> Gallery crashes when backing out of test","In KitchenSink, go to Phone -> Photo Gallery. Hit the back button, observe crash        Test should not crash  ",Bug,High,Closed,"2014-08-26 23:55:40","2014-08-26 23:55:40",3
"The Titanium SDK ","Crittercism: Add support for Customizing the Version Name  ","h6.Feature Request  To expose setCustomVersionName Crittercism method since customer would like to be able to customise version name for the performance management section of our Platform.     h6.Android docs   This configuration option allows you to customize the app version diagnostic that is reported to Crittercism. It will allow you to filter crashes, handled exceptions, app loads, and service monitoring data by a custom app version, and this version will appear in the Proguard mapping upload page of the website.    For library versions 3.1.4 and above, use an instance of CrittercismConfig as shown in the following code example:        - http://docs.crittercism.com/android/android.html#setting-advanced-crittercism-options   ",Improvement,High,Closed,"2014-07-01 21:39:53","2014-07-01 21:39:53",3
"The Titanium SDK ","Android: Image incorrectly sized when using windowBackground with custom theme ","h4. Problem Description  There is a strange behavior when using custom theme, basically if you don't use this one:        it will fail (it shows a smaller screen/view in android) - Check Image1.png     If you remove it, it will work just fine. - Check Image2.png    h4. Steps to reproduce  1. Create a new mobile project (classic titanium)  2. Add this app.js:      Add this to your mytheme.xml (inside platform->android->res->values):        Specify in tiapp.xml which theme you going to use (excerpt):       3. Run it into device.     h4. Actual results   if you enable the windowBackground in the custom theme, the views will be smaller.     h4. Extra info  I attached a full testcase in the form of a project with the name viewport-3-3-0-reduced.zip.   ",Bug,High,Closed,"2014-08-26 21:41:50","2014-08-26 21:41:50",5
"The Titanium SDK ","Android: When adding swipe event to a tabGroup, the inside tableview's inside won't scroll nice (parity issue)","h4. Problem Description  I found that attaching a 'swipe' event handler to a tab group with the goal of allowing swiping left and right to change tabs is having the unintended side effect of preventing the native scroll behavior on a table view contained in the tab group on Android.  Normally when you swipe down (fling) on a table view, there's some inertia and the table view keeps scrolling for a little bit. When there is a 'swipe' event handler on a tab group and you swipe down on a table view, as soon as you lift your finger off the screen the table view motion stops. There is no inertia. The scrolling stops as soon as the finger is lifted, making it hard to scroll through a long list.  iOS doesn't seem affected. The swipe handler works and native scroll works as expected.    h4. Test Case      h4. Steps to reproduce  1. Create a new mobile project (Classic Titanium)  2. Paste the test case to app.js  3. Run the sample into a device (Nexus 4)  4. Scroll down and let the tableview roll (it usually continue to scroll until momentum is lost)  5. The scroll will stop right away you stop.     h4. Extra info    Q&A:     http://developer.<USER>com/question/161747/swipe-event-handler-prevents-native-table-view-scroll-behavior-on-android","New Feature",Medium,Closed,"2014-08-26 17:59:25","2014-08-26 17:59:25",3
"The Titanium SDK ","iOS8: widgets extension","Be able to use Titanium to write a widget, or at least bundle a widget extension for the notification screen and interact with it.    Also, some use case examples in your docs would help immensely for it.","New Feature",High,Closed,"2014-08-01 12:58:17","2014-08-01 12:58:17",13
"The Titanium SDK ","TiAPI: Support full date format","In KrollContext.m please add the following code to the function StringFormatDateCallback (at about line 434 in 3.3 SDK)         This will add support for the full date format, which is the same as the long date format, but with the day of the week. You can add the same code to the following function to support the full format for time as well.    A very simple change. Thanks.  ",Improvement,High,Closed,"2014-07-17 21:24:46","2014-07-17 21:24:46",5
"The Titanium SDK ","iOS: APSHTTPRequest send fails with assertion on self.method","HTTP client calls fail and crash the app. The following error is reported:  Assertion failed: (self.method != nil), function -[APSHTTPRequest send], file /Users/<USER>ForkedRepos/APSHTTPClient/APSHTTPClient/APSHTTPRequest.m, line 66.    It looks like something is not properly linked in libAPSHTTPClient.a , as the error is pointing to a path in <USER>s computer.",Bug,High,Closed,"2014-07-23 13:46:34","2014-07-23 13:46:34",3
"The Titanium SDK ","CLI: Choosing the latest version of a module does not pick the latest compatible one","h2. Description    When adding a module to a project, the list of available versions shows only the ones compatible with the chosen SDK. For example, ti.cloudpush 3.3.0 will not show up if the SDK chosen is 3.2.3.    The issue is when chosing the [latest] option: in that case, the system is using the latest version, and the build fails because ti.cloudpush 3.3.0 is not compatible with SDK 3.2.3",Bug,Medium,Closed,"2014-08-25 16:18:39","2014-08-25 16:18:39",5
"The Titanium SDK ","Android: Adding swipe to window with table view causing lag while scrolling table view ","I found that attaching a 'swipe' event handler to a window with the goal of allowing swiping left and right to change content is having the unintended side effect of preventing the native scroll behavior on a table view contained in the window on Android.  Normally when you swipe down (fling) on a table view, there's some inertia and the table view keeps scrolling for a little bit. When there is a 'swipe' event handler on a table view and you swipe down on a table view, as soon as you lift your finger off the screen the table view motion stops. There is no inertia. The scrolling stops as soon as the finger is lifted, making it hard to scroll through a long list.  iOS doesn't seem affected. The swipe handler works and native scroll works as expected.",Bug,High,Closed,"2014-07-23 11:18:46","2014-07-23 11:18:46",0
"The Titanium SDK ","Integrate ioslib into tio2",,Improvement,High,"In Progress","2014-08-20 19:41:10","2014-08-20 19:41:10",3
"The Titanium SDK ","Integrate ioslib into Titanium CLI",,"Technical task",Medium,Closed,"2014-08-20 19:40:39","2014-08-20 19:40:39",8
"The Titanium SDK ","Add device-specific logic to ioslib","Querying what devices are present, installing to device, logging messages from device","Technical task",High,Closed,"2014-08-20 19:40:15","2014-08-20 19:40:15",5
"The Titanium SDK ","Add simulator logic to ioslib","Querying simulators, Launching simulators (Xcode 5 & 6), stopping simulators","Technical task",High,Closed,"2014-08-20 19:39:13","2014-08-20 19:39:13",21
"The Titanium SDK ","Add Xcode functionality to ioslib",,"Technical task",High,Closed,"2014-08-20 19:37:45","2014-08-20 19:37:45",5
"The Titanium SDK ","Add provisioning functionality to ioslib",,"Technical task",High,Closed,"2014-08-20 19:37:11","2014-08-20 19:37:11",5
"The Titanium SDK ","Add environment functionality to ioslib",,"Technical task",High,Closed,"2014-08-20 19:36:42","2014-08-20 19:36:42",3
"The Titanium SDK ","Add certificate functionality to ioslib",,"Technical task",High,Closed,"2014-08-20 19:36:14","2014-08-20 19:36:14",5
"The Titanium SDK ","CLI: Support Android 5.0","Android L is the first version with a letter instead of a number for the version identifier.    It may be that Google will now switch to using non-numeric version numbers fr betas in the future.    To make it easier for users to beta-test Android L and future versions, we update the CLI to support the Android L version",Improvement,High,Closed,"2014-08-20 19:21:17","2014-08-20 19:21:17",8
"The Titanium SDK ","Windows: Refactor windows detection code into windowslib","windowslib is the communication library we use when interacting with Windows devices.    In this case, it does not yet exist, but needs to be pulled from the existing Windows detection code done for the Windows Hybrid SDK. It needs to both the needs of the current Titanium CLI as well as the tiO2 project.    https://github.com/<USER>windowslib    This task involves both the initial refactoring, as well as integrating it back into https://github.com/<USER>tio2 and https://github.com/<USER>titanium.",Improvement,High,Closed,"2014-08-19 16:46:44","2014-08-19 16:46:44",0
"The Titanium SDK ","Android: Refactor androidlib","androidlib is the communication library we use when interacting with Android devices.    It needs to be refactored to handle both the needs of the current Titanium CLI as well as the tiO2 project.    https://github.com/<USER>androidlib    This task involves both the initial refactoring, as well as re-integrating it back into https://github.com/<USER>tio2 and https://github.com/<USER>titanium.",Improvement,High,Closed,"2014-08-19 16:42:55","2014-08-19 16:42:55",55
"The Titanium SDK ","iOS: Refactor ioslib","ioslib is the communication library we use when interacting with iOS devices.    It needs to be refactored to handle both the needs of the current Titanium CLI as well as the tiO2 project.    https://github.com/<USER>ioslib    This task involves both the initial refactoring, as well as re-integrating it back into https://github.com/<USER>tio2 and https://github.com/<USER>titanium.",Improvement,High,Closed,"2014-08-19 16:42:25","2014-08-19 16:42:25",0
"The Titanium SDK ","Android SDK not loading due to EPERM failure","h6.Issue description   After upgrading <USER>Studio the Android SDK isn't properly detected. This prevents developers to deploy applications. Forgive me if this is a dupe of another ticket.     h6.Steps to reproduce  # On <USER>Dashboard tab hit Android SDK to complete setup <USER>(AppcStudio_InstallingAndroid_1.jpg).   # Use Platform Configurations dialog to install required SDKs (2.3.3 is checked. AppcStudio_InstallingAndroid_2.jpg).   # Upon completion everything seems Ok. AppcStudio_InstallingAndroid_3.jpg  # A popup over windows remains static saying API 10 must be installed and suddenly Android isn't fully loaded (AppcStudio_InstallingAndroid_4.jpg).",Bug,High,Closed,"2014-07-18 21:55:45","2014-07-18 21:55:45",8
"The Titanium SDK ","iOS: URLSession Module returns blob instead of file location - causing low memory crash","h4. Problem Description  downloadcompleted returns e.data as a blob in physical memory!! If the file size is large, for example, over 1GB, it could cause low memory crash. Plus, using file.write(e.data) in this case takes too much time to run in the background. iOS only allows 30 seconds. Chances are the app will be either crashed or suspended before the file is saved.    I suggest: upon downloadcompleted move the file to a temp directory and return the path instead of a blob.       h4. TESTING ENVIRONMENT    CLI version 3.3.0,   Titanium SDK version 3.3.0.GA  iOS7    h4. CODE SAMPLE    h3. app.js      h4. STEP TO REPRODUCE    - Create a new Project  - Double-click the Project's tiapp.xml file to open it in the Overview tab.  - In the Modules section, click the Add button (green plus sign) to open the Mobile Modules dialog.  - Locate and select com.<USER>urlSession. This module is part of the Titanium SDK since Release 3.2.0  - Click OK.  - Copy the code segment above to the project app.js file  - Run the Project     h4. OBSERVED RESULT    If the URL is changed to download a large file, progress bar would not response and the app will crash after some time.    ",Bug,Medium,Closed,"2014-07-31 18:57:59","2014-07-31 18:57:59",8
"The Titanium SDK ","Windows: Create WP81 Unit and Performance Tests","1. Create WP81 unit and performance tests for JavaScriptCore that integrates with the CI server setup by Allen.  1.1. The unit tests should be based in test262 (this is item 7 from the Igalia SOW).  1.2. The performance tests should be based on JSBench.",Story,Medium,Closed,"2014-08-12 21:24:11","2014-08-12 21:24:11",21
"The Titanium SDK ","Android: contentOffset property of UI.ScrollView not accessible","The contentOffset property (reflecting what's currently visible in a ScrollView), is undefined on Android.    Documentation of [UI.ScrollView|(http://docs.<USER>com/titanium/latest/#!/api/Titanium.UI.ScrollView-property-contentOffset] says it's available on Android since 0.9, however in version 3.3.0 GA it (still?) doesn't work.    h4. Notes  * contentOffset is not set manually anywhere in the test code  * I'm talking about UI.ScrollView, not tableview or listview    h3. How to reproduce  Create a ScrollView  {code:title=test.xml|borderStyle=solid}  <Alloy>   <ScrollView id=myscrollview />  </Alloy>      h3. Actual result    On iOS : the value is properly displayed and reflects any scrolling (manual or not) done on the ScrollView    On Android : a runtime error occurs with the following message :  {panel:title=Runtime Error}  Message:  Uncaught TypeError: Cannot read property 'x' of undefined  Source:  alert($.myscrollview.contentOffset.x);  {panel}    h3. Expected result  Both iOS & Android should produce the same result.  Looking at the source of [TiUIScrollView.java|https://github.com/<USER>titanium_mobile/blob/master/android/modules/ui/src/java/ti/modules/titanium/ui/widget/TiUIScrollView.java] we see that indeed the property is supposed to be updated upon scrolling. However the property is not accessible from JavaScript on Android. (Could it be a problem in the proxy?)",Bug,High,Closed,"2014-08-11 13:59:17","2014-08-11 13:59:17",3
"The Titanium SDK ","iOS8: Support iOS 8","Set of tickets to support iOS 8.",Epic,High,Closed,"2014-08-11 22:13:29","2014-08-11 22:13:29",0
"The Titanium SDK ","Android: App crashes when using searchBar border properties","App crashes if we use the searchBar properties borderRadius, borderColor, or borderWidth. And use this searchBar in a tableView using search property.  h3.Testing Environment:  Titanium SDK: 3.3.0.GA, 3.2.3.GA  Titanium CLI: 3.3.0,  Android SDK: 4.2.2, 4.4.2  OS X Version: 10.9.3,  <USER>Studio: 3.3.0    h3.Steps to Reproduce the issue:  1. Create classic project.  2. Paste this code app.js file.  3. Run this code with the testing environment.    h3.Test Code  {code:title=app.js}  var win = Titanium.UI.createWindow({   title : search bar  });    // create table view data object  var data = [];    data[0] = Ti.UI.createTableViewRow({   hasChild : true,   title : 'Row 1'  });  data[1] = Ti.UI.createTableViewRow({   hasDetail : true,   title : 'Row 2'  });  data[2] = Ti.UI.createTableViewRow({   hasCheck : true,   title : 'Row 3'  });  data[3] = Ti.UI.createTableViewRow({   title : 'Row 4'  });    var search = Titanium.UI.createSearchBar({     borderRadius : 10,   borderColor : 'red',   borderWidth : 2,   showCancel : true,   height : 60,   hintText : Filter results,  });    // create table view  var tableview = Titanium.UI.createTableView({   data : data,   top : 40,   search : search,   filterAttribute : title,  });    win.add(tableview);    win.open();      Thanks",Bug,High,Closed,"2014-08-11 09:12:07","2014-08-11 09:12:07",5
"The Titanium SDK ","Android: Android menuItem with actionView can't handle invalidateOptionsMenu()"," Android menuItem with actionView can’t handle invalidateOptionsMenu() with Titanium SDK 3.3.0.GA.    h5. TESTING ENVIRONMENT:    Mac OS X 10.9  Ti CLI 3.3.0  Titanium SDK: 3.3.0.RC, 3.3.0.GA and 3.2.3.GA  Android emulator and device 4.4.3    h5. TEST CODE        h5. STEPS TO TEST  • Create a new project  • Update app.js file with sample code  • Run on android emulator/device  • Click the search button, see the searchView appear and works fine.  • Click a row, see the alert (win.getActivity().invalidateOptionsMenu(); i called)  • Click the search button again, now the searchView is not displayed    h5. EXPECTED RESULT  It’s not working as expected in Ti SDK 3.3.0 but works fine in 3.2.3.GA      ",Bug,Medium,Closed,"2014-06-19 10:55:09","2014-06-19 10:55:09",8
"The Titanium SDK ","Android 5.0: KS->Facebook crashes ","Build KS with android-L. Go to Mahups->Facebook->Login/Logout. App crashes with log  ",Bug,High,Closed,"2014-08-08 21:47:54","2014-08-08 21:47:54",3
"The Titanium SDK ","Android 5.0: KS->Photo Gallery crashes ","Build KS with android-L. Go to Phone->Photo Gallery.   1. On emulator, the app crashes with log      2. After fixing the above ART runtime issue, on device (when backing out of the test), the app crashes with the following error  ",Bug,High,Closed,"2014-08-08 21:45:04","2014-08-08 21:45:04",3
"The Titanium SDK ","Android-L: KS->ActionBar crashes ","Build KS with android-L. Go to Controls->Action Bar. App crashes with log  ",Bug,High,Closed,"2014-08-08 21:39:52","2014-08-08 21:39:52",3
"The Titanium SDK ","Create Travis status page across repositories","We are using Travis more frequently now to automatically build repositories. However, it can be tedious to get an at-a-view glance of which repositories are building, and which are failing.    There are Chrome extensions that supposedly automate this display (see https://chrome.google.com/webstore/detail/github%2Btravis/klbmicjanlggbmanmpneloekhajhhbfb/reviews), but it appears that they only work on the individual repository view, and not the repository list:    https://github.com/<USER>modules    For this, let's create a page that sits next to build.<USER>com (so a HTML page using a single-page modern framework) that displays the current build results for repositories in these organizations:    * https://github.com/<USER> Main account for most projects.  * https://github.com/<USER>modules: SDK modules.  * http://github.com/<USER>developer-relations: SDK Samples    It should do the following:    * Gather the list of repositories to show via the GitHub API  * If a repository is enabled for Travis, show the build status (unknown/failing/passing) along with the name of the repo. Don't show non-enabled repositories  * Refresh the status of the repo build without needing to refresh the page    Initially, we can start with public repositories only. Later, we can allow a second view for private repos.",Story,Medium,Closed,"2014-08-08 15:43:26","2014-08-08 15:43:26",21
"The Titanium SDK ","Tooling: Analyze CLI API analytics data for top-used functionality","Our goal is to convert the API data from the CLI into useful information about which are the most used APIs    High-level <USER>    # Grab compressed JSON files from /<USER>analytics.datastore/desktop/2014/07 and later (the feature was only released in mid-July)  # Parse the JSON for all events with feature ID ti.apiusage. A sample item might appear like (note that API data itself is escaped)    ## sid: Session ID  ## guid: CLI App ID  ## mid: Machine ID  ## id: Event ID  # Create a data storage mechanism that allows you to initially provide the following information:  # Top 500 APIs in order of usage, descending. Each unique App ID only contributes once to the tally    jq is a useful tool for parsing JSON. This strips out only the useful events:        Once that's complete, provide a data storage that allows us to query the data easily to ask questions like:    # Given a set of APIs, how many applications can be implemented 100%","New Feature",High,Closed,"2014-08-08 06:44:17","2014-08-08 06:44:17",33
"The Titanium SDK ","Can't use density-independent image as map annotation rightButton","h4. Problem Description  Everytime I try to use a density independent image as map annotation rightButton property, I get the following error (like the image was not there):          h3.Testing Environment:  Titanium SDK: 3.2.3.GA 3.3.0.RC,  Titanium CLI: 3.3.0 –rc,  Android SDK: 4.2.2,4.4.2,  OS X Version: 10.9.3,  <USER>Studio: 3.2.3    h3.Steps to reproduce the issue:                1.Create a Alloy project.                2.Paste this code in index.xml,index.js file and Alloy.js file.                3.configure your tiapp.xml file with Google API key.                4. Paste some density-independent image in Android>images>> folders                5.Run this code with testing environment.    {code:  title=index.xml}  <Alloy>   <Window layout=vertical>    <!-- Use the Alloy.Globals.Map namespace to create a map module view -->    <View id=map ns=Alloy.Globals.Map width='Ti.UI.FILL' height=400 top='10'></View>    <View top=30 width=50 height=50 backgroundImage=/images/infoicon.png backgroundColor=red></View>   </Window>  </Alloy>    {code: title=alloy.js}  Alloy.Globals.Map = require('ti.map');  {code}    ",Bug,Medium,Open,"2014-06-28 17:04:51","2014-06-28 17:04:51",3
"The Titanium SDK ","iOS: Ti.Network.createHTTPClient autoRedirect = false is ignored","Here is why and how it can be fixed.    https://github.com/<USER>APSHTTPClient/pull/16    I debugged why autoRedirect property of Ti.Network.createHTTPClient is ignored for 3.3.0.GA. The default property of autoRedirect is true.    When autoRedirect = false is set, self.response.status is always zero in APSHTTPRequest.m  Therefore the redirect check if statement    if (!self.redirects && self.response.status != 0)    does always fall through.     [self.response updateResponseParamaters:response];    needs to be called in advance",Bug,High,Closed,"2014-07-27 06:09:39","2014-07-27 06:09:39",5
"The Titanium SDK ","Android: JS Global Object - JS global object is undefined after calling Ti.App.addEventListener","*Details:* JS global object is undefined after calling Ti.App.addEventListener.    *Note:*  1. This does *not* occur on iOS  2. This is not a regression with 3.2.3.GA    *Steps to reproduce:*  1. Create a classic Titanium app  2. Download and unzip Archive.zip  3. Copy all contents in the Archive folder and paste them in the Resources directory from step 1  4. Next, install app to an Android device  5. After app is installed, press Start Automation button    *Actual:* After test is complete, Cannot read property runtime error appears (see runtime_error.png attachment).    The bug is in testExecutor.js on line 34.    *Expected:* App should run without throwing a runtime error.",Bug,High,Closed,"2014-08-05 23:55:37","2014-08-05 23:55:37",3
"The Titanium SDK ","Android: ListView crashes when searchableText is not specified","Steps to reproduce:       1. Run code, type something in the search view, app crashes.  ",Bug,High,Closed,"2014-08-05 00:22:48","2014-08-05 00:22:48",3
"The Titanium SDK ","iOS: error when commonjs module exports certain types","h2. problem    If a commonjs module assigns anything other than the following types to {{module.exports}}, the app crashes with no output to the console:    * Function  * Object  * String    For example, returning any of the following in {{module.exports}} will crash the app:    * Number  * Boolean  * null  * undefined  * NaN    This issue does not seem to appear on Android.    h2. test case    Creating the following simple app will crash the simulator when it is run.    h3. foo.js      h3. app.js    ",Bug,Medium,Closed,"2014-08-02 02:59:03","2014-08-02 02:59:03",5
"The Titanium SDK ","Android: TIME Picker is too small when useSpinner is set to true","h4. Problem Description  When you use a Date Picker with TYPE_TIME set, it will look really small. Even if you set the font size.    h4. Steps to reproduce  1. Create a new mobile project (Classic Titanium)  2. Paste the testcase into app.js:  ",Bug,Medium,Closed,"2014-08-02 00:09:55","2014-08-02 00:09:55",5
"The Titanium SDK ","Build scripts should accept flags indicating the path to the platform and i18n folders to use for a build","Our initial solution to ALOY-858 (use Alloy themes override the contents of a project's platform and i18n directories) has proven unworkable and pointed out the need to handle this at the platform level.     Our attempted solution was to make a backup copy of those folders in the build directory, merge themed versions of the i18n/platform folders to the original locations, proceed with the build, then restore the originals when done. This has created problems with inconsistent states, original files being lost, etc.    The better solution for Alloy would be to merge the originals and theme copies to a folder within build, then direct the platform to build using those versions. For that, we need new flags to the build scripts.    As you implement this, please consider how we might also theme the tiapp.xml, as this has also been requested. Again, that should be handled at the platform level not by Alloy making temp copies of files.  ",Improvement,High,Closed,"2014-08-01 21:34:01","2014-08-01 21:34:01",13
"The Titanium SDK ","iOS8: Biometric enhancements to SDK allowing accessing / managing Keychain","Biometric enhancements to SDK allowing accessing / managing Keychain","New Feature",High,Closed,"2014-07-29 21:56:37","2014-07-29 21:56:37",8
"The Titanium SDK ","iOS: Textfield borders - Some border types not displayed","This is a *regression* against Titanium SDK 3.2.3.GA    h5. Description:  There are no borders displayed when specifying Bezel or Line borders    h5. Steps to reproduce:  1) Import and build Kitchensink 3.3.0 with 3.3.0 SDK  2) Install on iOS 6, 7, or 8 device  3) Navigate to KS> Controls> Text Field> Border Style  4) Examine the various border styles    h5. Result:  Bezel and Line border style examples have no visible border    h5. Expected Result:  All examples (except the no border style) have visible borders",Bug,High,Closed,"2014-07-29 20:56:30","2014-07-29 20:56:30",3
"The Titanium SDK ","CLI: Windows 7 hangs on build during Powershell detection","When you try to perform a ti build, the <USER>'node.exe' hangs (0% of CPU) forever. After hours of debugging (with 'node-inspector'), I discover an issue in the 'windows.js' module. Basically the 'spawn' executed (line 385) to detect the powershell, for odd reasons, never emits the 'close' event and so the <USER>hangs. Skipping this detection, the build continue normally. I have described in more details the problem in the following post: http://developer.<USER>com/question/176303/titanium-studio-doesnt-works-anymore-after-330-release#answer-281192.    Not sure why this happens, but I'm not the only one with this issue.",Bug,Critical,Closed,"2014-07-27 21:06:09","2014-07-27 21:06:09",3
"The Titanium SDK ","iOS: Focusing TextField in HeaderView of empty TableView causes application to crash on iOS7.1","h5. Problem Description  Focusing TextField in HeaderView of empty TableView causes application to crash on iOS7.1    h5. TEST ENVIRONMENT:    Ti SDK 3.3.0.GA  Ti CLI 3.3.0  iOS SDK: 7.1  iOS iPhone Simulator: 7.1     h5. STEP TO REPRODUCE:    1. Create a default alloy project.  2. Replace index.xml with the following code:           3. Launch the app. Click on the TextFielfd to write.  4. The keyboard pops up and the application crushes    h5. EXPECTED RESULT    Keyboard should open to enable writing in the TextField.    h5. OBSERVED RESULT    After the Keyboard opens the application crashes.  ",Bug,High,Closed,"2014-07-10 09:07:49","2014-07-10 09:07:49",3
"The Titanium SDK ","iOS8: Ti.UI.iPhone.MODAL_TRANSITION_STYLE_PARTIAL_CURL not working properly","*Steps to reproduce:*  1. Install KS on iOS 8 device.  2. Navigate to BaseUI>ModalWindows  3.Choose Partial Curl option from first Picker and any option from second Picker.  4. Click on Show Modal Button.     {color:red}*Actual Result:*{color}  Option Ti.UI.iPhone.MODAL_TRANSITION_STYLE_PARTIAL_CURL on modalTransitionStyle property is not working as expected one corner of the current view does not curls up to reveal the modal view underneath.  Whole underneath modal view is visible. No curled view is visible.       {color:green}*Expected Result:*{color}  Each pair selection should show the correct animation.  For the option Ti.UI.iPhone.MODAL_TRANSITION_STYLE_PARTIAL_CURL on modalTransitionStyle property   one corner of the current view must curls up to reveal the modal view underneath.",Bug,High,Closed,"2014-07-25 08:50:02","2014-07-25 08:50:02",3
"The Titanium SDK ","iOS8: KitchenSink: Views > Options Dialog: Pop up does not show up on iPad","Steps to Reproduce:  1. Install KS on iOS 8 device.  2. Navigate to BaseUI>Views>Options Dialog   3. Click on any option    Actual result: Option Dialog does not pop up.    Expected result: Option Dialog pop up should be shown with expected options.    Note: Same is working fine on iPhone iOS 8 and below versions.    Refer to the attached screenshot for your reference.  ",Bug,High,Closed,"2014-07-25 08:49:03","2014-07-25 08:49:03",5
"The Titanium SDK ","iTunesArtwork and iTunesArtwork@2x files should be omitted from production builds","The iTunesArtwork and iTunesArtwork@2x graphics are needed only for development and AdHoc builds. They serve no purpose in production/AppStore builds and should be removed before you build & submit your app to the iTunes App Store. (Otherwise they're just making the IPA bigger.) See https://developer.apple.com/library/iOs/qa/qa1686/_index.html for a reference on that. The Titans and I tested with an app published without those files and the icon still appears in the iTunes desktop app (for syncing).    We should update the build scripts to omit these files from AppStore production builds.",Improvement,Low,Closed,"2014-07-24 20:22:39","2014-07-24 20:22:39",3
"The Titanium SDK ","iOS8: Orientation: Screen gets distorted when orientation changes","Steps to reproduce:  1. Install KS on iOS 8 device.  2. Navigate to BaseUI>TabGroups  3. Click on Add/Remove TabGroup  4. Turn Device on Landscape mode.  5.Click on More.Then on Edit Button.    {color:red}Actual Result:{color}  Screen gets distorted.    {color:green}Expected Result:{color}  Screen should not get distorted.    Refer to Screenshots attached ",Bug,High,Closed,"2014-07-23 06:55:57","2014-07-23 06:55:57",13
"The Titanium SDK ","iOS: rightNavButtons and leftNavButtons touch events don't work","Try code below. The events work twice and then no longer function.  index.xml:      index.js:  ",Bug,High,Closed,"2014-07-06 14:00:28","2014-07-06 14:00:28",5
"The Titanium SDK ","Android: Add Ti.UI.MaskedImage support","*Original Request:*  As of Android 5.0 (aka: Android L) you can define bitmaps as an alpha mask and tint them using a color resource. You create these assets only once and color each instance to match your theme. This is done via a Java {{Drawable}} class' {{setTint()}}, {{setTintList()}}, and {{setTintMode()}} method.  https://developer.android.com/reference/android/graphics/drawable/Drawable.html#setTint(int)    *Proposed Solution:*  This should be implemented via our existing {{Ti.UI.MaskedImage}} feature which is currently iOS only. This way we have parity between platforms.  https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.MaskedImage    The concept is exactly the same. You apply a color or image to a grayscaled mask and specify the PorterDuff compositing mode.  https://developer.android.com/reference/android/graphics/PorterDuff.Mode.html    Instead of using Android 5.0's tinting APIs, we should use Android's {{Drawable}} and {{Canvas}} classes instead which support tinting/masking in all Android OS versions. _(The new tinting methods are there out of convenience for a pre-existing feature.)_    *Note:*  This feature would also provide an alternate solution for developers who want to display an ImageView with rounded borders. Since rounded borders have known hardware acceleration bugs on Google's end, an alternative solution is to use a MaskedImage with a circular mask instead. This is how it's usually done by native Android developers anyways.  ","New Feature",Low,Closed,"2014-07-22 16:26:31","2014-07-22 16:26:31",7
"The Titanium SDK ","Android: Add Support for CardView","A new widget that allows you to display pieces of information inside cards.","New Feature",Medium,Closed,"2014-07-22 16:25:26","2014-07-22 16:25:26",21
"The Titanium SDK ","Android: Add Support for RecyclerView","An advanced version of ListView, that provides performance improvements for dynamic views.","New Feature",Medium,Open,"2014-07-22 16:24:59","2014-07-22 16:24:59",13
"The Titanium SDK ","Android: Support View Shadows","In addition to the X and Y properties, views in the Android L Developer Preview have a Z property. This new property represents the elevation of a view, which determines:    The size of the shadow - Views with higher Z values cast bigger shadows.  The drawing order - Views with higher Z values appear on top of other views.    We could use this instead of sorting the views manually like we do now.",Improvement,Medium,Closed,"2014-07-22 16:24:24","2014-07-22 16:24:24",3
"The Titanium SDK ","Android: Refactor notifications","Our current implementation is deprecated, and likely to stop working with Android L.",Bug,High,Closed,"2014-07-22 16:23:47","2014-07-22 16:23:47",13
"The Titanium SDK ","Android: Support Material Theme","The material theme provides a new style for your app, system widgets that let you set their color palette, and default animations for touch feedback and activity transitions.","New Feature",High,Closed,"2014-07-22 16:22:47","2014-07-22 16:22:47",8
"The Titanium SDK ","iOS: SystemButton cannot be changed after creation","h4. Problem Description    The following code demonstrates that the {{systemButton}} property cannot be changed after creation. This is not documented and of course it would be even better if it *could* be changed.      h5. Testing Environment:  Titanium SDK: 3.2.3.GA and 3.3.0.GA  Titanium CLI: 3.3.0  OS X Version: 10.9.3  IOS Simulator: 7.1      h5. TEST CODE:  app.js       h5. STEPS TO REPRODUCE:  - Create a simple project.  - Update this code in app.js  - Run this with testing environment.  - Click to the systemButton or ADD button.     h5. TESTING RESULT:     There is no any change in the systemButton or ADD button.   ",Bug,None,Closed,"2014-07-18 06:51:20","2014-07-18 06:51:20",0
"The Titanium SDK ","iOS - Hyperloop modules might crash when accessing native objects","Using the current version of Hyperloop for iOS. When accessing a variable that holds a native object wrapped by a Hyperloop JS object, the app will crash with this stack trace:    h4. EXC_BAD_ACCESS (code=2,address=0xc)    Note: the line numbers might vary deepening on the SDK version, but they're close enough    The reason for this is very simple. When using Titanium Mobile we have two types of JS object: A normal JS object, and a JS object containing an Objective-C object.   When using a Hyperloop module, there's another JS object added to the equation, a JS object containing a Hyperloop object.  In JavaScriptCore every JS object has a place for a void*. In Titanium Mobile we store an Objective-C id directly there. In Hyperloop, in the other hand, we store a c++ class in that same void* property, and that class has a void* property (called data) and there we sore an objective-c id. This is why it crashes.    Titanium Mobile:  JS Object -> void* -> id  Hyperloop  JSObject -> void* -> c++ class -> void* -> id      In the first line of code we get the void* from the JS object and cast it as an id. Then we call an Objective-C method on it - isKindOfClass:. This is fine in Titanium mobile, but in Hyperloop, that void* is a c++ class, and on that second line, we call an objective-c method on that c++ class, and then the app crashes hard.",Bug,High,Closed,"2014-07-21 17:15:44","2014-07-21 17:15:44",13
"The Titanium SDK ","iOS: Duplicate symbol linker error when using APS libAPSAnalytics.a","h6.Issue description    The developer's app includes a Ti module that wraps a 3rd-party library that uses the iOS Reachability class. It appears that APSAnalytics also uses the iOS Reachability class. Both the 3rd-party library and the APS system include this class in their respective libraries causing a duplicate symbol error during linking.     Below is the error I get when manually building the app:  ",Bug,High,Closed,"2014-07-21 16:18:41","2014-07-21 16:18:41",5
"The Titanium SDK ","CLI: Ti config JSON corrupted resulting in inability to run CLI commands","h5. Description:  Ritu experienced an issue during update to 3.3.0 GA components which resulted in her ti config JSON getting corrupted. The cause or timing of this are not known.     No other team members experienced it during our update testing, so at this point seems isolated to a single system.    When a project is created in Studio in this configuration, the tiapp.xml is not rendered correctly. In addition all commands for the CLI fail, see below for details:        To fix the issue, the JSON structure was manually edited to be valid.    h5. Steps to reproduce:  Steps are mostly unknown, but have more detail on config  # Configure a system in the following manner:  ## One latest development version of the SDK in your titanium folder, but no GA 3.3.0  ## Latest modules from a previous development 3.3.0 build install  ## Studio 3.3.0 Latest version  ## GA npm components (acs 1.0.14, CLI 3.2.3, Alloy 1.3.1, titanium-code-preocessor 1.1.1)  # Check for <USER>updates in studio  # Update your NPM components and SDK  # Check in terminal ti config    h5. Result:  JSON structure is invalid, and the CLI is unable to parse. CLI commands fail, and Studio tiapp.xml editor fails to render (since components are missing from CLI-built project)    h5. Expected Result:  CLI identifies bad structure and offers information on solution",Bug,Critical,Closed,"2014-07-17 22:24:56","2014-07-17 22:24:56",8
"The Titanium SDK ","TiAPI: Text - Add lineHeight property to Ti.UI.Label and Ti.Ui.TextArea","Conscious duplicate of poorly defined ticket  TIMOB-6403.    h2. Problem    Right now, Titanium doesn't have support for the line height property of text. Preferred behaviour would be to be able to have a property `lineHeight`, and the methods `setLineHeight` and `getLineHeight`, on `Titanium.UI.Label` and `Titanium.UI.TextArea`.    LineHeight would be set to control the vertical spacing between lines in a multiline label or textarea.    Available values should be `'normal'`, or any supported dimension measurement. `'normal' ` would indicate the default lineHeight for the set fontsize, any other would apply as the platform it's run on handles it.    h2. Test case    Inserting the following code in some window to get three labels. Expected result would be to have    {code:lang=javascript|title=app.js}  var label1, label2, label3, view;    view = Ti.UI.createView({    height: 1000,    width: 100  });    label1 = Ti.UI.createLabel({    height: Ti.UI.SIZE,    left: 0,    lineHeight: 'normal',    right: 0,    text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sed cursus nunc, id semper risus.',    top: 0  });    label2 = Ti.UI.createLabel({    height: Ti.UI.SIZE,    left: 0,    lineHeight: 20,    right: 0,    text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sed cursus nunc, id semper risus.',    top: 200  });    label3 = Ti.UI.createLabel({    height: Ti.UI.SIZE,    left: 0,    lineHeight: 40,    right: 0,    text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sed cursus nunc, id semper risus.',    top: 400  });    view.add(label1);    view.add(label2);    view.add(label3);  {code}    h2. Logs    Don't apply here.    h2. Discussions    [Want for this feature has been long existent|http://developer.<USER>com/question/38101/line-height-of-text-css-property]. Also, you should have seen the look on our designer's face when I told him we can't control line height with Titanium.    !http://www.survivingcollege.com/wp-content/uploads/2014/04/crying-rain-gif.gif!","New Feature",High,Closed,"2014-06-26 08:32:15","2014-06-26 08:32:15",5
"The Titanium SDK ","iOS8: Add support for Share Extensions","iOS 8 allows developers to add extensions to the Share infrastructure.",Epic,Medium,Closed,"2014-07-15 21:11:33","2014-07-15 21:11:33",5
"The Titanium SDK ","iOS8: Home Kit API Support","Expose the iOS 8 APIs for the Home Kit feature.","New Feature",Medium,Closed,"2014-07-15 21:08:27","2014-07-15 21:08:27",15
"The Titanium SDK ","iOS8: Health Kit API Support","Expose the iOS8 APIs for the Health Kit feature","New Feature",Medium,Closed,"2014-07-15 20:56:33","2014-07-15 20:56:33",15
"The Titanium SDK ","CLI: Xcode 6 simulators fail to launch","h5.Description  Building a project using Xcode 6 will fail when attempting to focus the iOS simulator    h5.Steps To Reproduce  1. Install Xcode 6 (currently in beta)  2. Create an iOS project in Studio  3. Build the project to iOS simulator    h5.Expected Result  Simulator should start and app should install and run.    h5.Actual Result  Simulator fails to launch and console logs that the project failed to build.  ",Bug,High,Closed,"2014-07-11 17:22:07","2014-07-11 17:22:07",21
"The Titanium SDK ","CLI: fails to build to device with Android 5.0","After installing the preview of the new Android version L to my Nexus, the Titanium CLI fails to build apps. It works fine if I build with Titanium Studio.    I know that this may be fixed automatically when L releases with an actual version number. But is there a way to fix it or work around at the moment?    *Steps to reproduce*  1. create new default App (Classic or Alloy)  2. build from CLI with {{--target device}} to device with L installed    *Result*  creates the following error  {code:bash}  TiNy cooked: ti build --platform android --sdk 3.3.0.Beta build --target device --shadow    Titanium Command-Line Interface, CLI version 3.3.0-rc, Titanium SDK version 3.3.0.Beta  Copyright (c) 2012-2014, <USER> Inc.  All Rights Reserved.    Please report bugs to http://jira.<USER>org/    [INFO]  Auto selecting device that closest matches 4.4.2    /usr/local/lib/node_modules/titanium/node_modules/longjohn/dist/longjohn.js:185          throw e;                ^  TypeError: Invalid Version: L.0.0      at new SemVer (/Users/manu/Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/node-appc/node_modules/semver/semver.js:271:11)      at compare (/Users/manu/Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/node-appc/node_modules/semver/semver.js:424:10)      at Function.gte (/Users/manu/Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/node-appc/node_modules/semver/semver.js:473:10)      at Object.gte (/Users/manu/Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/node-appc/lib/version.js:90:16)      at AndroidBuilder.validate (/Users/manu/Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/android/cli/commands/_build.js:1222:22)      at exports.validatePlatformOptions (/Users/manu/Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/titanium-sdk/lib/titanium.js:596:69)      at /Users/manu/Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/cli/commands/build.js:194:19      at callCommandValidate (/usr/local/lib/node_modules/titanium/lib/cli.js:850:7)      at /usr/local/lib/node_modules/titanium/node_modules/async/lib/async.js:551:21      at /usr/local/lib/node_modules/titanium/node_modules/async/lib/async.js:227:13  ---------------------------------------------      at Object.run (/Users/manu/Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/node-appc/lib/subprocess.js:59:8)      at /Users/manu/Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/titanium-sdk/lib/emulators/genymotion.js:319:21      at /Users/manu/Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/async/lib/async.js:511:21      at /Users/manu/Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/async/lib/async.js:227:13      at /Users/manu/Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/async/lib/async.js:111:13      at Array.forEach (native)      at _each (/Users/manu/Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/async/lib/async.js:32:24)      at async.each (/Users/manu/Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/async/lib/async.js:110:9)  {code}    *Expected result*  It should build the app and install it on the device",Bug,High,Closed,"2014-07-07 09:18:03","2014-07-07 09:18:03",8
"The Titanium SDK ","Crittercism: iOS crashes do not show up with 1.0.9 module","iOS crashes do not show up in Performance iFrame with 1.0.9 Crittercism module.    Note: This is a regression, works with 1.0.8 Crittercism module    h6.Steps to reproduce:  1. Create a default titanium application in 3.3.0 stack environment  2. Copy the attached app.js  3. Make sure that you are using 1.0.9 Crittercism module  4. Launch the application on iOS device  5. Generate crashes  6. Check on the Crittercism iframe related to the app    h6.Actual Result:  iOS crashes do not show up in Crittercism iframe when 1.0.9 Crittercism module is used.    h6.Expected Result:  The iOS crashes should show up in the Crittetcism iframe.  ",Bug,Critical,Closed,"2014-07-03 23:25:33","2014-07-03 23:25:33",13
"The Titanium SDK ","Android: Animation is broken if you don't stringify the affected view","h4. Problem Description  Three  (red, blue, green) square views should move from top of the screen ([ 0,50], [0,80], [0,random]) to the same target position [300, 300] (grey square). They **only** move as expected after you add a stringify the view.     See the video attached.  I managed to recreate the issue on the GT-S7562 device as well.    h4. Steps to reproduce  1. Create a new mobile project (classic titanium)  2. Add this code to app.js    3. Comment out the line with the comment Comment out this line in order to see the bug in your emulator..  4. Run it in emulator to see the issue (the animation breaks down when you comment out the line in step 3 - if you add it again, it will work as expected).     h4. Extra info  Please check the video for more information.   ",Bug,High,Closed,"2014-05-30 20:58:20","2014-05-30 20:58:20",5
"The Titanium SDK ","iOS8: Add support for Interactive Notifications","iOS 8 brings a new feature that allows users to perform actions against notifications. A short writeup is here:    http://techcrunch.com/2014/06/02/actionable-push-notifications/    Apple has added notification action support so that user can immediately handle notifications in the home screen or lock screen, without the user having to enter the app. To enable this for both local and remote notifications, the following steps have to followed:  1. Create and Configure Notification Actions  2. Create and assign Notification Actions to Notification Categories  3. Register the Notification Categories and Notification Types  4. After which, add event listeners for notifications received while the app is active, or in background.    *Detailed Steps:*  *1. Create and Configure Notification Actions*        key parameters:   activation Mode: NOTIFICATION_ACTIVATION_MODE_BACKGROUND, NOTIFICATION_ACTIVATION_MODE_FOREGROUND  determines where app should be activated when user selects this action  destructive: if this action does something permanent like delete  authenticationRequired: if this action needs user to enter pin to continue    *2.Create and assign Notification Actions to Notification Categories*        key parameters:   actionsForDefaultContext: default actions to show. Will show all if user has set app to display notifications in alert style.  actionsForMinimalContext(optional) : actions to show when user has set app to display notifications in banner style, and in lock screen.    *3.Register the Notification Categories and Notification Types*        Note: categories: nil will allow local notifications to work without actions    *4.Add event listeners*       Note: To enable interactive remote notifications, steps 1 to 3 should be done as well. Followed by Ti.Network.registerForPushNotifications. Require ACS to add additional field category to aps push packet, so that we can enable this for remote notifications.","New Feature",High,Closed,"2014-06-29 07:57:47","2014-06-29 07:57:47",8
"The Titanium SDK ","iOS: Window in tabGroup flicker on first open","h4. Problem Description  When using Alloy with more than 2 tabs, I get a black flickering when changing tabs for the first time if there are more than 2 tabs. This only happens on an iPad (not iPhone) on an actual device (not on simulator) and when more than 2 tabs.    h4. Steps to reproduce  1. Create a new application, using the default classic module   2. Copy app.js    3. Run app on an iPad device and switch tabs.    h4. Extra info  Might be related to https://jira.<USER>org/browse/TIMOB-16521",Bug,High,Closed,"2014-06-21 08:23:27","2014-06-21 08:23:27",8
"The Titanium SDK ","Android: Google Maps stop loading in Android 4.4 with Google Play Services (4.4.52)","h4. Problema Description  Before navigating for awhile the map stop loading, that only happens when using Android 4.4.x and Google Play Services 4.4.52    h4. Community Extra info  [http://developer.<USER>com/question/174507/google-map-v2---map-data-stop-loading-and-updating-]    h4. Tests  {quote}  Nexus 4, Android 4.4.2, Google Play services 4.4.52 - stopped working    Nexus 4, Android 4.4.2, Google Play services 4.0.33 - OK    Xperia Neo V, Android 4.0.4, Google Play services 4.4.52 - OK    Galaxy Nexus Android 4.3, Google Play services 4.4.52 - OK    Razr D3, Android 4.1.2, Google Play services 4.4.52 - OK  {quote}    h4. Testcase  {code:title=app.js|borderStyle=solid}  var MapModule = require('ti.map');    var code = MapModule.isGooglePlayServicesAvailable();    if (code != MapModule.SUCCESS) {   alert (Google Play Services is not installed/updated/available);  } else {   var win = Ti.UI.createWindow();   var map = MapModule.createView({    userLocation: true,    mapType: MapModule.NORMAL_TYPE,    animate: true,    region: {latitude: -33.87365, longitude: 151.20689, latitudeDelta: 0.02, longitudeDelta: 0.02 }   });   win.add(map);   win.open();  }  ",Bug,High,Closed,"2014-06-26 14:30:52","2014-06-26 14:30:52",13
"The Titanium SDK ","Android: KitchenSink:  Layout/Dimension Properties is not working as expected","*Steps to reproduce*  1. Install KS on android device  2. Navigate to Window properties>Layout/Dimension Properties    {color:green}Expected results{color}  1: Two rectangular views should appear in lower left corner. The one in the foreground is blue and the one behind is pink.  Refer to expected.png    {color:red}Actual Result{color}  1: Two rectangular views appears in mid and views are very thinly colored.   Refer to actual.png    It is regression. Works fine on 3.2.3.GA  Works fine on iOS",Bug,High,Closed,"2014-06-25 11:32:18","2014-06-25 11:32:18",2
"The Titanium SDK ","Android: TextField/TextArea change event should not trigger when setting value or attributedString properties","Try the code below.    A textfield change listener is wrongly triggered also if the value is programmatically set before the creation.    This happen only on Android, and only if the change event listener is created after the ui thread.      ",Bug,High,Closed,"2014-06-24 08:13:15","2014-06-24 08:13:15",1
"The Titanium SDK ","CLI: CLI crashes when ti build -d and ti build -A command is run without path values","titanium build command fails for the flags *-d* and *-A* if there are no path values specified. The behavior of flags are described in following table based on the test result.  || command || behavior ||  | ti build -d | CLI crashes |  | ti build --project-dir (if current directory is a project directory) | build success |  | ti build --project-dir ( if current directory is not a project directory) | CLI crashes |  | | |  | ti build -A | CLI crashes |  | ti build --android-sdk | build success with default android path |  | ti build --android-sdk (without valid android path settings) | Invalid SDK path error is thrown and prompting for new *SDK path* |    For more details, please refer the attached screenshots.    This is *not a regression* since issue is occurring in CLI 3.2.3  GA as well.",Bug,High,Closed,"2014-06-25 04:51:14","2014-06-25 04:51:14",3
"The Titanium SDK ","TextField keyboardType: parity issues between iOS and Android","KeyboardTypes KEYBOARD_NUMBER_PAD and KEYBOARD_DECIMAL_PAD do not act the same on iOS and Android.    h5. Steps to repro:  0. Create a basic app with a window and add a textField to it (text field code is available below).  1. Create a textField with a keyboardType of Ti.UI.KEYBOARD_NUMBER_PAD  2. Run the app on iOS and Android  3. Notice that on iOS there are numbers but no decimal point  4. Notice on Android there are numbers and a decimal point, and you can type as many decimal points as you like.  5. Create a textField with a keyboardType of Ti.UI.KEYBOARD_DECIMAL_PAD  6. Run the app on iOS and Android  7. Notice that on iOS there are numbers and a decimal point, and you can type as many decimal points as you like.  8. Notice on Android there are numbers and a decimal point, but you can only type one decimal point.    In our documentation is says: Use a keyboard with decimal numbers only.   http://docs.<USER>com/titanium/latest/#!/api/Titanium.UI-property-KEYBOARD_DECIMAL_PAD  So this seems like it would be correct behavior of Android, but it is not consistent across both platforms.      h5. Workaround  Set different keyboardtypes for iOS and Android  ",Improvement,Low,Closed,"2014-06-24 21:10:36","2014-06-24 21:10:36",5
"The Titanium SDK ","Android: Orientation does not change for Window inside tabGroup","Orientation does not change When orientation modes property set on Window inside TabGroup.      *Steps to reproduce:*  1.Copy Paste the code on app.js and run the app.  2. Click on Tab2.    Expected Result:  1. App opens in landscape mode, having two tabs sharing 50 % width.   2. App opens in portrait mode, having two tabs sharing 50 % width.    Actual Result:  1. App launches in portrait mode.  2. Tab 2 gets actives and app remains on portrait mode.  Window's orientation modes does not gets changed.    Not a regression.  Working fine for iOS ",Bug,High,Closed,"2014-06-24 07:00:44","2014-06-24 07:00:44",5
"The Titanium SDK ","Android: Geolocation is not turning on in Webview","h4. Problem Description  The geolocation bug which used to exist in version 3.0.0 (TIMOB-4982) has been reintroduced in version 3.2.0 The last working good version is 3.1.3. .  h4. Test Case 1. Create a new mobile project (classic) 2. Paste this to app.js 3.  4. The map never ask for permission for the GPS access, not even if the user presses the location icon google will briefly flash Location could not be identified   h4. Extra information Use case:  When we open a html5 page that as a geolocation titanium does not give access to GPS on the device. ",Bug,High,"In Review","2014-06-15 05:56:42","2014-06-15 05:56:42",5
"The Titanium SDK ","CLI 3.3.0.Beta crashes when no parameter is given to --device-id","Running:    ti build -p android --device-id    Gives me this error    /usr/local/lib/node_modules/titanium/node_modules/longjohn/dist/longjohn.js:185          throw e;                ^  TypeError: Cannot call method 'indexOf' of undefined      at /usr/local/lib/node_modules/tn/lib/utils.js:11:13      at Array.forEach (native)      at _.each._.forEach (/usr/local/lib/node_modules/tn/node_modules/underscore/underscore.js:79:11)      at Object.join (/usr/local/lib/node_modules/tn/lib/utils.js:8:5)      at Object.cook (/usr/local/lib/node_modules/tn/lib/cook.js:57:69)      at /usr/local/lib/node_modules/tn/hooks/tn.js:16:28      at /usr/local/lib/node_modules/titanium/lib/hook.js:235:13      at /usr/local/lib/node_modules/titanium/node_modules/async/lib/async.js:551:21      at /usr/local/lib/node_modules/titanium/node_modules/async/lib/async.js:227:13      at iterate (/usr/local/lib/node_modules/titanium/node_modules/async/lib/async.js:134:13)  ---------------------------------------------      at run (/Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/node-appc/lib/subprocess.js:59:8)      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/iphone/cli/lib/detect.js:415:9      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/async/lib/async.js:511:21      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/async/lib/async.js:227:13      at /Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/async/lib/async.js:111:13      at Array.forEach (native)      at _each (/Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/async/lib/async.js:32:24)      at async.each (/Users/<USER>Library/Application Support/Titanium/mobilesdk/osx/3.3.0.Beta/node_modules/async/lib/async.js:110:9)",Bug,High,Closed,"2014-06-23 18:39:39","2014-06-23 18:39:39",3
"The Titanium SDK ","CLI: ti setup sdk fails on second time when CLI has invalid SDK configuration."," ti setup sdk fails on second time when CLI has invalid SDK configuration.    h5. Steps To Reproduce:   1. Run *ti sdk* command and check the current selected SDK version   2. Rename or delete that SDK folder from your machine   3. Then run *ti setup sdk* command   4. Enter a value to setup default sdk version.   5. Skip Path to find and install Titanium SDKs settings by pressing Enter.   6. Setup main menu will appear. You press 7 or sdk again.     h5. Actual Result:  Error message thrown. Please see the attachment for more info.  [ERROR] RangeError: Invalid array length    h5. Expected Result:  It should display Titanium SDK Settings menu.",Bug,Low,Closed,"2014-06-23 09:40:51","2014-06-23 09:40:51",1
"The Titanium SDK ","iOS: Support settings link in iOS Permission Prompts","h6.Feature Request  To support settings link in iOS Permission Prompts on iOS 7.1 & 8    h6.Description  In iOS 7.1 and iOS 8 there is some functionality for permission dialogs which we would like to take advantage of in the future if its possible.     In the native Apple Maps the first time the user clicks on the [My Location] button they are prompted with the normal location access dialog. If the user clicks [Don't Allow] the prompt goes away as expected. If the user then clicks the [My Location] button again they are prompted with a new second dialog which has 2 options [Settings | Cancel] If the user clicks on [Settings] they are then taken to the Locations Services page where they can enable or disable location access for the Apple Maps application.     Can Titanium add support for the settings link as shown in the second dialog or if that is controlled by iOS so it cannot be accessed. ","New Feature",High,Closed,"2014-06-17 16:00:57","2014-06-17 16:00:57",5
"The Titanium SDK ","Android detection fails if add-ons folder does not exist","If the Android SDK exists, but there are no add-ons (i.e. Google APIs) and thus the add-ons folder does not exist, then the CLI errors out.",Bug,High,Closed,"2014-06-17 00:43:51","2014-06-17 00:43:51",1
"The Titanium SDK ","Android: Add support to HTTPClient for PATCH requests","It would be great if the HTTPClient supported PATCH requests. We use ASP Web Api 2 and the convention is to use a PATCH request for a partial update. ","New Feature",Medium,Closed,"2014-05-22 22:24:28","2014-05-22 22:24:28",5
"The Titanium SDK ","iOS : Ti.Media.takeScreenshot() returns black toolbars","It seems like the old way of taking screenshots results in black toolbars when running the app on a device.    Simply adding [window drawViewHierarchyInRect:window.bounds afterScreenUpdates:YES]; for iOS 7 seems to fix the problem, as mentioned in this StackOverflow answer: http://stackoverflow.com/a/8017292/646859    I've tried it and it seems to work. I'm not used to contributing to open source-projects to I hope someone can take a look at it for me :)    » Marcus",Bug,Low,Closed,"2014-04-10 14:35:05","2014-04-10 14:35:05",5
"The Titanium SDK ","iOS: Application crashes during a numeric search on a ListView","h1. Problem  if you change the position of the listView during a search the app crashes    h1. Reproduction  Drop the following in an app.js.   1) Run it  2) put 555 in the textField and do a search   3) press the button (change top of listview) twice and it will crash.    (values like 555 or 100 crash the application)    warning!: we noticed that if the searched values are less than the listview's height the application will crash.    As a matter of fact, if we put values like '78' or '0' the application does not crash.  {code:title=App.js | borderStyle=solid}  var win = Ti.UI.createWindow({});    var search = Ti.UI.createSearchBar({});    var items = [];  for (var i = 0; i<1000; i++) {   items.push({    properties: {     title: 'item: ' + i,     searchableText: 'item: ' + i    }   });  }    var button = Ti.UI.createButton({   title : 'Change top of listView',   top:50,  });    button.addEventListener('click', function() {   listView.top === 100 ? listView.top = 150 : listView.top = 100;  });    var listView = Titanium.UI.createListView({   top: 100,   sections: [ Ti.UI.createListSection({items: items}) ],   searchView: search,  });    win.add(button);  win.add(listView);    win.open();    ",Bug,Low,Closed,"2014-05-23 10:58:03","2014-05-23 10:58:03",3
"The Titanium SDK ","Android: Activity/Fragment restore can sometimes crash app due to view ID collision","Occasionally when my app is resumed (clicking on it from the task list), it crashes with the following line:    The cause is that the {{TiTableView}} constructor sets a constant id of {{TI_TABLE_VIEW_ID}} (which is 0x65) as the view id. Constant ids should never be used in an application.    This can be easily reproduced like this: build an application with many text views, at least 101. Add one table view. Now to cause the state restore, move the application to the back, enter system settings -> display -> font size, and change the size. Open the task list and select your app to bring it to front. The font size change will cause view state recalculation which will crash the app.    To fix this I added the following method to {{TiUIView}} and used it to set the id:      A quick grep on .setId( turned up other places in the sdk where you use constant ids - these need to be fixed as well.    Full stack dump of the crash:    \\  ----  This often happens with TabGroups as well when a tab's fragment is restored. See...    ",Bug,Critical,Closed,"2014-05-27 06:32:59","2014-05-27 06:32:59",13
"The Titanium SDK ","Android: Map module V2 not rendering map on Android 2.3.X","h3. Issue    When using the Map Module 2.1.3 for Android the map tiles are not being rendered correctly in devices with Android SDK 2.3.x but they work correctly on Android 4.X    h3. Steps to repro    1. Run the testcase on an Android device 2.3.x    Expected Result:  The map will be rendered on screen    Actual Result:  The mapview is rendered and show on screen but the map tiles are never showed (Attachement device-2014-06-06-120722.png).    h3. Test Case      ",Bug,High,Closed,"2014-06-06 17:11:26","2014-06-06 17:11:26",21
"The Titanium SDK ","Unable to package Android Module","Test steps:    1. Create an android module  2. Package it to any mobile app project or titaniumSDK    Actual Result:    Error occurs (edited for clarity):    ",Bug,Medium,Closed,"2014-05-28 11:55:49","2014-05-28 11:55:49",1
"The Titanium SDK ","iOS: Implement NSURLSession Uploading","Request that the NSURLSession module adds support for the [upload task|https://developer.apple.com/library/ios/documentation/Foundation/Reference/NSURLSessionUploadTask_class/Reference/Reference.html#//apple_ref/occ/cl/NSURLSessionUploadTask].","New Feature",Medium,Closed,"2014-06-02 17:18:05","2014-06-02 17:18:05",13
"The Titanium SDK ","Android: tablet in portrait mode not showing splash screen","h3. Issue     The basic scenario is that customer need their app to be portrait for handhelds and landscape for tablets. The splash screens also need to appear properly based on those requirements, everything is working in a sample app with the exception of the splash screen on Portrait mode.    h3. Steps to repro using attached app    1. Hold a tablet in Portrait mode   2. Open the app     Expected result:  The splash screen will be displayed    Actual result:  No splash screen is displayed",Bug,High,Closed,"2014-05-30 23:22:06","2014-05-30 23:22:06",5
"The Titanium SDK ","Build error if Map module in app build with TiSDK prior to 3.3.0","h5.Description:  1. If we try to build an app with map module 2.1.5 & SDK 3.2.3.GA it throws the following errors.      2. In order to make sdk 3.2.3.GA pick up the right compatible module version which is 2.1.4, change the change the minsdk to 3.3.0 in the manifest file of map module 2.1.5.  2. Use SDK 3.2.3.GA and build the map again.    h5.Actual Result:  1. The 3.2.3 SDK should pick up map module 2.1.4 as the latest compatible when its is rebuilt after changing the minsdk version in the manifest file, but rather it still picks up 2.1.5 & throws errors as below:      h5.Expected Result:  1. The SDK should pick up the latest compatible version of the map module build.",Bug,High,Closed,"2014-05-30 18:20:15","2014-05-30 18:20:15",5
"The Titanium SDK ","iOS: Search disappears from ListView","ListView with a search, where the itemclick event opens a window.    This defect works in the ElementsOfListView tutorial app ( https://github.com/<USER>services/ElementsOfListView ). The customer is having the same issue in their own app.    1) Wait for the elements list to open  2) Scroll down a bit, half a screen or more.  3) Click on an element (the name, not the symbol) and wait for the new window to open.  4) Close that new window by clicking the Done button.  5) Scroll back up to the top. Notice there is a white space where the Search was.    At this point, it should be noted that the search is still there, it just appears blank. If you click into it, it'll appear as it should.    h3. Edit:  Simpler test case, copy and paste into app.js  ",Bug,High,Closed,"2014-05-20 20:59:22","2014-05-20 20:59:22",13
"The Titanium SDK ","TiAPI: Remove window.url property","The window.url property was a solution fit for another time in Titanium's history.  That time has long since gone.  Too many newbies are using window.url as if it is the correct pattern to develop their apps against.    The only reason against deprecation is that some older apps still use window.url.  However using this as a reason only serves to increase the number of apps this will affect.    Note: {{Ti.UI.currentWindow}} should be removed as well.",Story,High,Closed,"2014-05-15 12:37:59","2014-05-15 12:37:59",5
"The Titanium SDK ","iOS: SDK should have 0 static analyzer errors (it currently has 77)","The Titanium iOS SDK should have 0 static analyzer errors (it currently has 77). The static analyzer is very accurate and every issue identified by it should be corrected. The majority of these errors are logic errors (e.g. division by zero, dereferencing null pointers, etc.) and memory leaks.    Verification method:  1. in Xcode, Product -> Analyze  2. Results will appear, indicating all the analyzer errors    After resolving all issues, this should result in 0 analyzer errors.",Bug,High,Closed,"2014-05-12 21:13:41","2014-05-12 21:13:41",21
"The Titanium SDK ","iOS: System Info icon size is different between toolbar / toolbar and a view ","h2. Problem    When info system button is added to anything other than toolbar/navbars, it appears distorted (see attached screenshot).    In the following test case, you may notice that I created two info buttons, one for view, the other for toolbar. The one added to view has ' style : Ti.UI.iPhone.SystemButton.INFO_DARK ', which seems not acceptable. But accepting it may itself be a bug. However, it is the only possible way to add info system buttons to view and this feature is quite common everywhere. I'm afraid this distortion may cause Apple rejection.    h2. Test case    {code:lang=javascript|title=ApplicationWindow.js}  //create component instance  var self = Ti.UI.createWindow({   backgroundColor : '#ffffff',   tintColor : 'red'  });    var button1 = Titanium.UI.createButton({   bottom : 64,   left : 16,   style : Ti.UI.iPhone.SystemButton.INFO_DARK,  });  self.add(button1);    var button2 = Titanium.UI.createButton({   systemButton : Ti.UI.iPhone.SystemButton.INFO_DARK,  });  var toolbar = Titanium.UI.iOS.createToolbar({   items : [button2],   bottom : 0,   borderTop : true,   borderBottom : true  });  self.add(toolbar);   self.open();  {code}",Bug,Medium,Closed,"2014-05-06 22:18:44","2014-05-06 22:18:44",5
"The Titanium SDK ","iOS: Font property doesn't work for Picker and PickerColumn","Steps to reproduce:  1. Copy Paste the code in app.js and run the app on iOS device.    Expected Result:  1. Must observe the difference in font size than normal.    Actual Result:  1. No differences appear. Font Size appears the same.    Working fine for Android. See the issue TIMOB-14007        Test case for Date Picker:  ","New Feature",Medium,Closed,"2014-05-09 06:16:35","2014-05-09 06:16:35",5
"The Titanium SDK ","Android: Setting touchEnabled on labels (TextView) crashes intermittently on Axiom device","I'm getting this crash report on Google Play for a Galaxy Axiom      My preliminary research indicates this can happen when calling setEnabled on a TextView that doesn't yet have a value.    You can find our app @     https://play.google.com/store/apps/details?id=com.findingrover.findingrover    If you happen to have a Samsung Axiom laying around running Android 4.1",Bug,High,Closed,"2014-04-25 18:36:52","2014-04-25 18:36:52",5
"The Titanium SDK ","Android: Anti-aliasing does not work properly in views","See the attached image.    1. Seems there is no anti-aliasing at all in case of borderWidth=0  2. Anti-aliasing is not good (especially on the border inner) in case of borderWidth>0  2. Seems the border alpha channel (opacity) is being ignored and the corresponding view opacity is being used instead.    The markup:  ",Bug,Medium,Closed,"2014-05-02 14:39:55","2014-05-02 14:39:55",21
"The Titanium SDK ","Android: Add selected/unselected Tab events for parity with iOS Focus and Blur events","On iOS, the Tab focus and blur events fire for the relevant tabs when a tab is selected. On Android, these events also fire when the window gains or loses focus, such as when the Home button is clicked or when the screen is unlocked. The iOS behavior is the correct one, and should be matched. This is important, since we need a reliable indicator for when a tab is selected and unselected. We currently have no such indicator in Android, thus this is critical.    UPDATE: see PR in comment below. The PR added the selected and unselected tab events for Android, while not modifying focus and blur behavior to maintain app compatibility. In iOS, tab focus and blur were simply renamed to selected and unselected. These events function as expected, and have the benefit of being more appropriately named.  ",Improvement,Low,Closed,"2014-04-20 20:42:57","2014-04-20 20:42:57",1
"The Titanium SDK ","iOS: Converting a blob into a valid image does not maintain dimensions","h6.Issue description  Looking for a cross-platform way to create image thumbnail files asynchronously. Titanium is able to read an image file asynchronously into a buffer and then a blob. If we assign that blob to the image property of an ImageView, it displays as I expect. However, the blob is not recognised as an image by any of the Ti.Blob.image* methods. The blob has a mime type of application/octet-stream and a height and width of 0. Meanwhile Android is able to get height and width properly.    h6.Steps to reproduce  # Launch sample app. You can see that the fishImage ImageView loads its image directly from a file path in its image property.  # earthImage is loaded in index.js asynchronously using a file stream. Once the file contents are read completely, they are assigned to the image property of $.earthImage.   # Notice, the blob you get as a result of earthBuffer.toBlob() can't be used for any other image manipulation (e.g. creating thumbnails). It doesn't have a valid mimeType, height, or width on iOS.     E.G.      h6.Android      h6.iOS  ",Bug,High,Closed,"2014-04-25 21:35:47","2014-04-25 21:35:47",3
"The Titanium SDK ","ScrollableView: Add insertViewsAt() method","The ScrollableView currently supports the .addView() method to programmatically append additional views to the end of the collection. However, it has no method to insert one or more views at the beginning (prepend), or somewhere in the middle of the collection.    A [suggested workaround|http://developer.<USER>com/question/161891/scrollable-view---insert-a-view-into-a-specific-spot] for this limitation involves getting the views array with .getViews(), updating the array, then re-assiging the views array back to the control with .setViews(). While this works, it is not efficient and causes significant flickering on the UI with complex views, every time .setViews() is used.    It would be great to have a method like .insertViewsAt(idx, views) so one item (or more) can be prepended or inserted at specific locations without requiring the entire views collection to be re-bound and rendered.      This would also bring the ScrollableView control in line with ListView and TableView, both of which feature insert methods.    In my particular case; I'm using a ScrollableView to page through over 500 views which are fairly complex. Loading all views into the ScrollableView is not an option as that takes too much memory and crashes the app.  My solution is to have a sliding range that loads 9 views at a time (4 before and 4 after the current page) on the ScrollableView.  And as the user moves left or right, it dynamically prepends or appends more views as needed, removing views also from the opposite end so only 9 views are loaded at any given time. Appending with addView() works well (no need for setViews(), so no flickering), but prepending with the getViews()/update/setViews() <USER>does not work well in these situations.  ","New Feature",High,Closed,"2014-04-16 21:27:17","2014-04-16 21:27:17",5
"The Titanium SDK ","Android: ScrollableView ignores root child view's layout properties","I created a parent view as ScrollableView and gave its width and height as Ti.UI.FILL.  Then I created child view giving its width and height as 80%.    In iOS simulator I get the expected result, but in android device child view takes the whole view    In the attachment I have added my code and also the screenshot from iOS simulator and android device.",Bug,Medium,Closed,"2014-04-22 09:41:41","2014-04-22 09:41:41",5
"The Titanium SDK ","Android: Add searchAsChild to ListView to support Search View in Action Bar","We can use a the SearchView in the ActionBar with a TableView, but not ListView if we can't set searchAsChild to false in ListView. Please add this property to ListView.","New Feature",Medium,Closed,"2014-04-10 05:29:21","2014-04-10 05:29:21",3
"The Titanium SDK ","iOS: ListView under NavigationWindow with extendEdges and autoAdjustScrollViewInsets fails to position properly.","The extendEdges property of a window under a NavigationWindow allows the content of the window to extend under a translucent navigation bar, giving an iOS 7 depth effect.    However, when extendEdges is defined and autoAdjustScrollViewInsets is enabled for the window, the ListView top inset shifts up if the software keyboard is shown and does not automatically adjust down after the keyboard disappears.    Expected Behavior:    When the soft keyboard disappears, the top inset should return back to normal and the top of list should be visible (the section header).    Test:    Using the code below, load the app. The initial view (pic 1) shows the header title of the list section.  Tap on one of the two text fields to show the software keyboard. The list view is then shifted up (pic 2). Tap “Done” on the keyboard to close it. The list section header remains under the navigation bar (pic 3) and cannot be repositioned correctly even by puling the list view down.     index.xml      index.tss        index.js    ",Bug,Medium,Open,"2014-04-03 22:22:49","2014-04-03 22:22:49",8
"The Titanium SDK ","TiAPI: TableView - e.rowData returns different results on each platform","Not a regression since issue occurs on 3.2.2.GA,3.2.1.GA and 3.2.0.GA also.  e.rowData returns different data on different platform    Steps to reproduce:  1.copy paste the code given below in app.js  2.Launch the app and click on Row.        Expected Result:  Both platform must show the same result.    Actual Result:  Both the platform gives different result.    On Android getting the output as:      On iOS getting the output as:  ",Bug,Low,Closed,"2014-04-03 11:48:23","2014-04-03 11:48:23",1
"The Titanium SDK ","Android: Add animation curve support","Titanium's {{Ti.UI.Animation}} object supports a curve property which can be set to one of the following easing type that controls the rate that it animates:  * {{Ti.UI.ANIMATION_CURVE_EASE_IN}}  * {{Ti.UI.ANIMATION_CURVE_EASE_OUT}}  * {{Ti.UI.ANIMATION_CURVE_EASE_IN_OUT}}  * {{Ti.UI.ANIMATION_CURVE_LINEAR}}    The above is currently supported on iOS and Windows.    We'd like to add support on Android for parity.  _(Android animations are currently hardcoded to linear.)_  ","New Feature",Low,Closed,"2014-03-31 16:16:24","2014-03-31 16:16:24",7
"The Titanium SDK ","Android: Kindle HDX Ti.App event listeners stop responding","h6.Issue description  An Android Tablet Kindle HDX device running the same app, at around the 10 time alternation mark the webView event listener stops receiving the events and the webView will not receive any events.    h6.Steps to replicate   # Get example available at: https://www.dropbox.com/s/nzjhsu5as8dc1nf/MapWebViewBugExample_Remove_And_Re-addEvents.zip  # Alternate clicking between the setLocation 1 and setLocation 2 buttons.   # Notice that the map moves when each is hit. Perform this alternate clicking 30+ times.  # Notice how the map always moves and the webView receives the app:map:setLocation event. This never fails on iOS and most Android Tablets.    h6.Devices Affected by this issue:   Kindle Fire HDX 8.9    - 14.3.2.1 Model: GU045RW   - 14.3.2.1 Model: GU045RW    Kindle Fire HDX 7   - 13.3.1.0 - Model: C9R6QM   - 13.3.2.1 - Model: C9R6QM    h6.Devices not affected  None of iOS devices. The 2.3.4 HTC Incredible and Nexus 7 running 4.3 don't seem to exhibit the problem.    h6.Background  This issue seems to occur very quickly on the Kindle HDX 8.9 inch (~10 events) and it is the main use case for the Google Web Map. Another Android Tablets reproduces this although not consistently. ",Bug,High,Resolved,"2014-03-26 23:47:23","2014-03-26 23:47:23",13
"The Titanium SDK "," iOS: SDK should have 0 compiler warnings (it currently has 9)","We should have 0 compiler warnings. An SDK that produces even 1 compiler warning should never make it to QE.    There are 64-Bit issues buried in these 159 warnings, so these issues need to be fixed before our SDK can be certified as 64-Bit clean.    This is Apple's guide to making source code 64-bit clean: [64-Bit Transition Guide for Cocoa Touch|https://developer.apple.com/library/ios/documentation/General/Conceptual/CocoaTouch64BitGuide]",Bug,Medium,Closed,"2014-03-25 18:31:17","2014-03-25 18:31:17",8
"The Titanium SDK ","iOS: listView when views overlap itemclick event return wrong bindId","h3. Issue    When creating a listView template that overlaps UI elements and we use the 'itemClick' to get the bindId we always receive the id from the element on the back instead of the clicked item.    h3. Testing    After adding zIndex and setting bubble parent to false makes no difference and keeps throwing the wrong bindId.    h3. Steps to repro    1. Run the sample code  2. Click on the label     Expected Result:  The alert will show the bindId 'innerLabel'    Actual Result:  The alert show the bindId 'innerThumbnailImageView'    h3. Sample code    index.xml      index.js      h3. Workaround    If we add the event directly to the element of the template we receive the correct id.    ",Bug,Medium,Closed,"2014-03-24 15:46:08","2014-03-24 15:46:08",5
"The Titanium SDK ","Android: File.read() of JS files under Resources directory returns empty string for device/production builds","*Summary:*  {{File.read()}} is unable to read encrypted assets such as {{.js}} files. This only happens when doing a device build or production build. It can only read {{.js}} files from the Resources directory when building for the Android Emulator (aka: development build) since {{.js}} files are not encrypted in this case.    iOS is able to successfully read encrypted assets such as {{.js}}.    *Steps to Reproduce:*  # Create a Titanium app with the below code for it's app.js.  # Build and run on the Android emulator.  # Notice that the alert dialog displays the app.js code. (This is good.)  # Build and run on a physical Android device.  # Notice that the alert dialog on startup is empty. (This is bad. Failed to read app.js.)        *Expected Result:*  Android should be able to read encrypted {{.js}} files just like iOS.    ----  *Original description from Alejandro:*  You have a .js file at Resources/lib named library.js with content:      if you try read the file like a text plain file      value should be {{var a = \hello world\;}}, but value is empty -> .  if you change library.js to library.lib or other extension is fine.  ",Bug,Low,Closed,"2014-03-22 11:15:46","2014-03-22 11:15:46",3
"The Titanium SDK ","iOS: Packaging for iTunes Store first attempt  - Archive Type: Mac App Archive instead of iOS App Archive","h5. Details:   Packaging an app to the iOS iTunes Store at first time archives it as a Mac App. Second attempt to package results in an expected result, which is iOS App Archive.  QE and Dev will investigate and check, if it is a regression.  Due to a large size, .zip files are not attached to compare 2 archives.",Bug,High,Closed,"2014-03-21 23:31:00","2014-03-21 23:31:00",13
"The Titanium SDK ","iOS: ListView with SearchBar under NavigationWindow with extendEdges fails to position properly.","The extendEdges property of a window under a NavigationWindow allows the content of the window to extend under a translucent navigation bar, giving an iOS 7 depth effect.     However, when extendEdges is defined and a SearchBar is added to a ListView the positioning is incorrect. Using contentInsets on the ListView should align the SearchBar to be visible under the navigation bar, but it does not work as expected. It also creates a positioning problem when one clicks the SearchBar to use it, as it gets re-positioned under the navigation bar.    Expected Behavior:    When the SearchBar is added to a ListView, it should show below the navigation bar of the window without the need to use contentInsets. It should also remain in position when the user taps on it to enter some search text.    Test:    Using the code below, load the app. The initial view (pic 1) shows the SearchBar hidden below the navigation bar.     Tapping on the status bar at the top, correctly positions the SearchBar below the navigation bar (pic 2).    Tapping on the search bar to enter text, re-positions the SearchBar again under the navigation bar (pic 3).    app.js:  ",Bug,Low,Closed,"2014-03-12 21:53:03","2014-03-12 21:53:03",13
"The Titanium SDK ","Android: LiveView throws errors if action bar is implemented in the app","NOTE : This is seen on post & pre 3.0 android devices & emulators.    h5. Description:  1. Create a default & replace the app.js with the sample code for action bar from the docs:    2. Build for android device/emulator with live view enabled.    h5. Actual Result:  1. We see following error in console:      h5. Expected Result:  1. We should not see any errors & liveview should work successfully.    ",Bug,High,Closed,"2014-03-12 23:10:30","2014-03-12 23:10:30",8
"The Titanium SDK ","Android: WebView not loading local RGraph library javascript files","I am using web view in my alloy application to render charts using RGraph HTML5 library. My code works perfectly fine on iOS. Unfortunately on Android I keep getting an error indicating that RGraph library files haven't been loaded:    [INFO] :   I/TiWebChromeClient.console: (main) [1259542,1259713] Uncaught ReferenceError: RGraph is not defined (app:///barchart.html)    I have attached the HTML file & function from my controller code that can be used to reproduce the issue.    RGraph library can be downloaded from here :  http://www.rgraph.net/download      I changed the extensions of all js files in the library to .jsf to stop Titanium from compiling them. And this is the structure of my folders in the project    app/assets/android/libraries  {here I've put RGraph library js files}  app/assets/android/barchart.html  {html file to be displayed; attached}    Similar for iOS.  The rest of the project follow the common structure of alloy project.    Please don't hesitate to contact me if you have any questions.      Here is the js code that I'm using:        Here is the HTML that I'm trying to display:    ",Bug,High,Closed,"2014-03-05 11:59:24","2014-03-05 11:59:24",5
"The Titanium SDK ","iOS: base64encode does not handle extended ascii characters","UPDATE: The strings I was using had non-breaking spaces in them (returned form the OS).  Please read comments for more info.    When a string that contains parentheses and spaces is base64 encoded then decoded into a blob, blob.text (and toString()) returns an invalid, truncated, string.    Bug appears to be is in base64encode when creating blob.  If you paste the result encoded string into a decoder tool, you see the truncated string.    mimetype of the resultant blob is 'application/octet-stream'.    Tested on iOS and Android.  Bug appears only to exist on iOS.    Code to reproduce:        Output on iOS Simulator:    ",Bug,Low,Closed,"2014-03-08 19:01:09","2014-03-08 19:01:09",0
"The Titanium SDK ","iOS: Can't create modal transparent Window","Try code above, after animation Window color is reset to Titanium.UI.backgroundColor    ",Bug,High,Closed,"2014-03-07 13:58:29","2014-03-07 13:58:29",2
"The Titanium SDK ","iOS: DocumentViewer shifts up on second tap when it's in Landscape mode","h6.Issue description  The UI at the top of the Ti.UI.iOS.DocumentViewer shifts up after the second tap.    h6.Steps to reproduce  # Open sample attached  # Put the device in landscape mode  # Tap on 'Open PDF  # Tap on the PDF viewer contents (enter fullscreen mode)  # Tap on the PDF viewer contents again (Exit fullscreen mode). Notice that the top of the PDF moves down, to lower than it was when the PDF first opened",Bug,High,Closed,"2014-03-07 01:03:00","2014-03-07 01:03:00",3
"The Titanium SDK ","Get a list of all previously scheduled local notifications","Maintain a list of all previously scheduled local notifications that were created with Ti.App.iOS.scheduleLocalNotification(params).  ","New Feature",Low,Closed,"2014-03-07 00:32:56","2014-03-07 00:32:56",0
"The Titanium SDK ","Android: Kroll bridge passing null/undefined values can throw exceptions when passed to TiConvert methods","h5. Problem Description     Exception is thrown when passing objects with null/undefined values for expected keys values on Android.  Ti.map.TiUIMapView passes this null value to TiConvert.toDouble which causes then throws a NullPointerException.    Here is an example piece of code when setting a map region. This works fine on iOS:    Here is the exception on Android:      This the kroll bridge should either ignore null/undefined values or have each  have maps module defensively check for null values.    I've attached a project showcases the error.  ",Bug,Medium,Closed,"2014-03-06 10:18:03","2014-03-06 10:18:03",8
"The Titanium SDK ","Android: Expose properties/methods for controlling internal padding in TextField (and possibly TextArea)","sometimes, particularly with smaller screen devices, and/or with short fields (like intended only for 1 or 2 characters), the text can get chopped off unexpectedly on either the top, right or the bottom.   This seems to be because the internal 'padding' or margins are NOT scaled according to screen size.","New Feature",Low,Closed,"2014-02-22 04:42:16","2014-02-22 04:42:16",8
"The Titanium SDK ","iOS: Text in label gets truncated (...) when changing fontWeight from normal to bold","If setting either the width or left and right values of a label the text will be truncated when you change the fontWeight of the label. If width or left and right are omitted it resizes the label correctly after changing the fontWeight.     The label container is showing the right size, but text gets truncated anyway.    {code:title=Code to reproduce|borderStyle=solid}  var testLbl = Ti.UI.createLabel({   text: 'Some semi-long text',   font: {    fontWeight: 'normal',    fontSize: 13   },   backgroundColor:'#f00',   color: '#000',   textAlign: 'center',   top: 60,   // left: 10,   // right: 10,   width:'90%'  });  setTimeout(function(e){   testLbl.font = {    fontWeight: 'bold',    fontSize: 13   };   //text gets truncated  }, 1000);  {code}",Bug,Low,Closed,"2014-02-25 10:04:54","2014-02-25 10:04:54",5
"The Titanium SDK ","iOS: Blur event fires twice on TextField","Here is the example XML:    ",Bug,High,Closed,"2014-02-23 21:37:51","2014-02-23 21:37:51",8
"The Titanium SDK ","TiAPI: Allow multiple markers in ListView","The current setMarker implementation works fine for a use case when you want to lazy-load data in a list or otherwise only care about scrolling in one direction. However, I have a use case in which I want to know if the user scrolls in either direction in a ListView. It appears that I can only set one marker on the list at a time.    In the attached project, I populate the list with 100 items, scroll to item 50, and set markers at 30 and 70. I would like the marker event to fire if the user scrolls to either item 30 or item 70. Right now, I have to choose one or the other, which means I can't implement my desired interface with a ListView.    If you allow setting multiple markers, perhaps it will be helpful to also add a clearMarkers method on ListView to remove them all at once.    Although I selected iOS as the platform in the ticket, I assume this impacts all platforms.","New Feature",High,Closed,"2014-02-24 05:24:05","2014-02-24 05:24:05",21
"The Titanium SDK ","Android: Let `transparent` or alpha channel trigger transparent background on heavyweight windows","To have a transparent or non-opaque (heavyweight) window on Android, you have to set {{opacity}} to any value, including {{1.0}}. As you can see on [line 268 of the WindowProxy|https://github.com/<USER>titanium_mobile/blob/c7c578c6ce8286195be7019c2165d4de62b202c7/android/modules/ui/src/java/ti/modules/titanium/ui/WindowProxy.java#L268] this triggers the actual Window to have a transparent background (triggering the Translucent theme. The you can use {{backgroundColor:transparent}} or {{backgroundColor:#5FFF}} even if you leave {{opacity:1.0}} because you want to leave the actual contents the window opaque.    As #TIMOB-16353 shows this is highly confusing, even for <USER>support ;)    I would ask for {{backgroundColor::transparent}} and colors including an alpha-channel like {{#5FFF}} to trigger the transparent background as well.    h1. Doesn't work        h1. Works    ",Improvement,High,Closed,"2014-02-23 20:06:01","2014-02-23 20:06:01",3
"The Titanium SDK ","iOS: Property List lacks of Secure Class Protection - NSFileProtectionKey","h3. Issue    After a revision from customer Vulnerability assessment team they have raised a low priority issue in reference that the Property List lacks of Secure Class Protection  - NSFileProtectionKey    The list of files they are referring to is basically everything in the installed package on the device (Cache.db, Cookies.binarycookies, etc.)    h3. Description    On iOS, every file is encrypted with an unique encryption key as illustrated in the image. The content of a file is encrypted with a per-file key, which is wrapped with a class key (data protection class key) and stored in a file metadata, which is in turn encrypted with the file system key (EMF key). The file system key is generated from the hardware UID. UID is unique per device and it is embedded in hardware and inaccessible to code running on CPU.    A file which is encrypted only with the file system key, upon physical access to the device custom ramdisk techniques can be used to steal the file from passcode protected devices. To overcome this problem Data protection was introduced. Data protection protects the data at rest on iOS devices using encryption keys that are tied to the device passcode and UID. So if the file is protected with a data protection class and the user sets a passcode for the device, an attacker cannot access the file using custom ram disk technique until he knows the passcode. Data protection provides another layer of security to files by encrypting them with a passcode generated key. File protection is enabled by setting an accessibility constant to NSFileProtectionKey file attribute. Later the files are encrypted with a protection class key respective to the accessibility constant marked for that file.    Ex: If a file is marked with NSProtectionComplete accessibility constant then the file is encrypted with Class 1 protection class key and it is available only when the user unlocks the device. If a file is created without specifying any accessibility constant then the file is marked as NSProtectionNone and it is accessible even the device is locked . List of accessibility constants available for files are shown in the below table.    h3. iOS Reference    https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSFileManager_Class/Reference/Reference.html    ",Improvement,High,Closed,"2014-02-20 23:05:26","2014-02-20 23:05:26",13
"The Titanium SDK ","iOS: Ugly / inconsistent border effects when focussing / blurring searchbar","A couple of not so clean effects when focussing and blurring a searchbar. Since I think they are all related I will only create a single issue for them.    1. When you focus a searchbar (e.g. in a listview) for the first time a thin 2-3 pixel gray bottom border appears below the search bar, followed by a bit of white and then the gray results view. (Might also be a white border over the gray results view?)    2. When you blur a search bar and focus it again a full black border appears above the search bar. Now the gray border mentioned in point 1 touches the results view so the white bar is no longer visible.    3. Because of these borders it looks like the searchbar is sort of dropped down a bit when blurring. Hard to explain, watch the 15s video...    I have attached a video showing the behaviour. The code is just a plain listview with a searchbar. I have lowered the listview a bit so you can see the top border issue better.    ",Bug,Low,Closed,"2014-02-13 20:07:09","2014-02-13 20:07:09",1
"The Titanium SDK ","scons doesn't build api.jsca","I can’t generate the jsca file, although I have installed pyyaml following the instructions in the error message (see below).        I ran both easy_install pyyaml (as instructed in the error message) and pip install pyyaml, to no avail.    This didn't work either:        However, with the two ports installed (i.e. libyaml and py27-yaml) I was able to run ./apidoc/docgen.py -f jsca manually (outside of scons), and this worked on my MacBook Pro. This fix will not work on non-Mac platforms.    The SDK's build infrastructure .../apidoc/docgen.py -f jsca --stdout doesn't work (it's as if the --stdout is piped to /dev/null by the scons <USER>.    ",Bug,Low,Closed,"2014-02-12 02:12:56","2014-02-12 02:12:56",1
"The Titanium SDK ","Android: imageAsResized is leaking memory","h4. Problem Description  When using the imageAsResize function in blob, it will start eventually to fail with a warning message about no more memory available.     h4. Test Code      h4. Attachments   Check the attachments for b1.jpg    h4. Steps to reproduce  1. Create mobile project (classic titanium)  2. Copy-Paste the code from the testcase into app.js  3. Copy bg1.jpg into Resources directory  4. Deploy into device  5. Click in resize until the image doesn't appear anymore.    h4. Extra info  when the image doesn't appear anymore, you will see a message in the console saying:         h4. Q&A Link  http://developer.<USER>com/question/162431/android-memory-leaks  ",Bug,Low,Closed,"2014-02-12 00:48:49","2014-02-12 00:48:49",8
"The Titanium SDK ","Module: Can't compile project with Wikitude module included","Hello.      I can't compile empty project with just Wikitude module included. To see this issue, unzip this project: [https://drive.google.com/file/d/0B3_U6pYkC0P6VDltMERMNGlGU28/edit?usp=sharing], go to that directory in terminal app and type: ti build --platform iphone. Here is error log:    {quote}  [TRACE]     /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -arch i386 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk -L/Users/iskugor/Documents/TipsyAndTumbler/Test/build/iphone/build/Debug-iphonesimulator -L/Users/iskugor/Documents/TipsyAndTumbler/Test/build/iphone/lib -L/Users/iskugor/Documents/TipsyAndTumbler/Test/modules/iphone/com.wikitude.ti/3.2.1 -F/Users/iskugor/Documents/TipsyAndTumbler/Test/build/iphone/build/Debug-iphonesimulator -filelist /Users/iskugor/Documents/TipsyAndTumbler/Test/build/iphone/build/Test.build/Debug-iphonesimulator/Test-universal.build/Objects-normal/i386/Test.LinkFileList -Xlinker -objc_abi_version -Xlinker 2 -ObjC -F/Users/iskugor/Documents/TipsyAndTumbler/Test/build/iphone/../../modules/iphone/com.wikitude.ti/3.2.1/platform/iphone -lc++ -lsqlite3 -lz -ObjC -framework AssetsLibrary -framework CoreMedia -framework CoreMotion -framework CoreVideo -framework Security -framework WikitudeSDK -F/Users/iskugor/Documents/TipsyAndTumbler/Test/build/iphone/../../modules/iphone/com.wikitude.ti/3.2.1/platform/iphone -lc++ -lsqlite3 -lz -ObjC -framework AssetsLibrary -framework CoreMedia -framework CoreMotion -framework CoreVideo -framework Security -framework WikitudeSDK -fobjc-link-runtime -Xlinker -no_implicit_dylibs -stdlib=libstdc++ -mios-simulator-version-min=6.0 -weak_framework CoreText -framework EventKit -framework EventKitUI -lti_ios_profiler -weak_framework Security -framework Foundation -weak_framework UIKit -framework CoreGraphics -framework AddressBook -framework AddressBookUI -framework CFNetwork -framework CoreLocation -weak_framework MapKit -framework MessageUI -framework MobileCoreServices -framework OpenGLES -framework QuartzCore -framework SystemConfiguration -lsqlite3 -lz -framework AudioToolbox -weak_framework MediaPlayer -framework AVFoundation -lxml2 -framework StoreKit -lTiCore -lcom.wikitude.ti -ltiverify -lti_ios_debugger -licucore -Xlinker -dependency_info -Xlinker /Users/iskugor/Documents/TipsyAndTumbler/Test/build/iphone/build/Test.build/Debug-iphonesimulator/Test-universal.build/Objects-normal/i386/Test_dependency_info.dat -o /Users/iskugor/Documents/TipsyAndTumbler/Test/build/iphone/build/Debug-iphonesimulator/Test.app/Test  [TRACE] Undefined symbols for architecture i386:  [TRACE]   _ADBannerContentSizeIdentifierLandscape, referenced from:  [TRACE]       +[TiUIiOSAdViewProxy landscapeSize] in TiUIiOSAdViewProxy.o  [TRACE]   _ADBannerContentSizeIdentifierPortrait, referenced from:  [TRACE]       +[TiUIiOSAdViewProxy portraitSize] in TiUIiOSAdViewProxy.o  [TRACE]   _OBJC_CLASS_$_ADBannerView, referenced from:  [TRACE]       objc-class-ref in TiUIiOSAdView.o  [TRACE] ld: symbol(s) not found for architecture i386  [TRACE] clang: error: linker command failed with exit code 1 (use -v to see invocation)  [ERROR] ** BUILD FAILED **  [ERROR] The following build commands failed:  [ERROR]         Ld build/Debug-iphonesimulator/Test.app/Test normal i386  [ERROR] (1 failure)  {quote}        Now, go to Test/build/iphone and import that project to XCode and try to compile project in XCode by pressing Run button and you'll see that project can be compiled directly from XCode.        Seems this issue happens because AdBanner which Wikitude module does not use.          Thanks",Bug,Low,Closed,"2014-01-13 10:23:03","2014-01-13 10:23:03",0
"The Titanium SDK ","ListView: Missing bindId in itemclick event with active search","The itemclick event contains the bindId of the element the click was on (if any). When the ListView has a search bar and something is entered in the search filed, i.e. when the ListView items are filtered, the bindId is missing in the event, even if over an element.    The attached JS contains a small app to reproduce the problem. Clicking on the text shows the txt bindId in the alert box. When a filter text is entered in the search field, the bindId is always undefined.  ",Bug,Low,Closed,"2014-02-09 18:49:48","2014-02-09 18:49:48",3
"The Titanium SDK ","CLI: Genymotion no longer ships with Google APIs, so hack check for 'google apps' in emu name should be reconsidered","Since version 2, genymotion no longer ships with the Google APIs installed.  Users must manually install the Google APIs themselves.  The previous hack to check for the inclusion of Google APIs in a genymotion simulator that is not running no longer apply, and may, in the future, confuse those responsible for the maintenance of the cli.    genymotion.js, line 349  ",Bug,Low,Closed,"2014-02-09 01:22:50","2014-02-09 01:22:50",1
"The Titanium SDK ","Android: App crashes after performing search on listView, scrolling down to the last row and deleting a row","Steps to reproduce :  1. Put the following code into app.js and run it    2. Perform a random search by typing any text (eg. xyhwssj ) into the search bar.  3.Clear out the search  bar completely.  4.Scroll down to the last bottom end.  5.Delete an item by clicking on any row/item.    Description:  After searching for an item on the `listView` and scrolling down to the bottom last end, if you try to delete an item, the app will always crashes. This bug is producible only on android and not on IOS.    *However, the app will not crash if the listView has not reached the scroll end yet and you delete an item* but it will still crash on random occasion should you, after performing a search, tried to scroll down to the last bottom row even without deleting",Bug,High,Closed,"2014-01-30 20:21:32","2014-01-30 20:21:32",5
"The Titanium SDK ","Android: libtiverify.so has text relocations. This is wasting memory and is a security risk","h4. Problem Description  Currently, when the users set the DEBUG option, they will see this in the adb log:        even if those messages are not affecting the apps (and they are happening in a lot of places), some users get stressed about them.    Can we just eliminate that output?         ",Bug,High,Closed,"2014-02-05 23:44:12","2014-02-05 23:44:12",5
"The Titanium SDK ","iOS: HTTPClient on iOS will not POST as multipart/form-data (but Android does)","h3. Steps to Reproduce  Using the exact example given in the Titanium docs at http://docs.<USER>com/titanium/latest/#!/guide/File_Uploads_and_Downloads I am unable to successfully transmit a file on iOS, but it *DOES* work fine on Android.     Inspecting further, the POST request's Content-Type is not getting set properly to 'multipart/form-data' when sent from iOS, but instead is sent as 'application/x-www-form-urlencoded'. The property containing the supposed file will exist, but is merely a string representing the file path (as it exists on the mobile device).     I've tried manually setting the Content-Type between opening the connection and sending the data, but it appears to be ignored.     h3. Actual Result  Content Type: application/x-www-form-urlencoded; charset=utf-8    h3. Expected Result  Content Type: multipart/form-data",Bug,High,Closed,"2014-02-03 23:05:50","2014-02-03 23:05:50",1
"The Titanium SDK ","Android: getLoading method does not exist on Android and causes a crash","I have following error on Android build of application:  [ERROR] :  TiExceptionHandler: (main) [8,127839] ----- Titanium Javascript Runtime Error -----  [ERROR] :  TiExceptionHandler: (main) [0,127839] - In alloy/controllers/widgets/article_big.js:3,31  [ERROR] :  TiExceptionHandler: (main) [0,127839] - Message: Uncaught TypeError: Object #<WebView> has no method 'getLoading'  [ERROR] :  TiExceptionHandler: (main) [0,127839] - Source:         if ($.body && !$.body.getLoading()) {  [ERROR] :  V8Exception: Exception occurred at alloy/controllers/widgets/article_big.js:3: Uncaught TypeError: Object #<WebView> has no method 'getLoading'    Same code works perfectly on IOS. I'm not sure if it's documentation issue(according to apidoc, getLoading() is supported on android) or if it's  an Titanium SDK problem.     ",Bug,Low,Closed,"2014-02-04 09:31:06","2014-02-04 09:31:06",0
"The Titanium SDK ","Android: Disable copy,define,share popup contextual bar inside webview when selecting text","Hi...    In webView when selecting the content or text a default popup menu gets appeared with the options copy, define, share etc.    Is it possible to remove this option without blocking webview text selection? Also, add some new menu option?      ---    We should add a boolean property to disable the default set of context actions in the action bar. We may *also* want to allow disable text selection altogether.    {code:js}  var webView = Ti.UI.createWebView({      disableTextSelection: false,      disableContextMenu: true  });  {code}","New Feature",Critical,Closed,"2014-01-31 10:03:46","2014-01-31 10:03:46",5
"The Titanium SDK ","iOS: separatorInsets should not be used for header/section titles","The new {{separatorInsets}} can only be set for the full {{TableView}} or {{ListView}}. Unfortunately, they affect not only the separator lines, but also the section {{headerTitle}} and {{footerTitle}} while at the same time the {{TableView}} and {{ListView}} direct {{headerTitle}} and {{footerTitle}} are **not** affected.    I would suggest changing the behavior for the section {{headerTitle}} and {{sectionTitle}} to be not affected as well. You can always use a custom header and footer view and the main reason for {{seperatorInsets}} is to disable/customize the inset of the separator line in iOS7 and up.    h1. To reproduce  Run both of this {{app.js}} both with and without the {{separatorInsets}} property and compare the screenshots attached:    ",Bug,Medium,Closed,"2014-02-02 19:16:45","2014-02-02 19:16:45",3
"The Titanium SDK ","iOS: Facebook urlscheme is not added to the info.plist if the app already has a urlscheme","h3. Steps to Reproduce  create a facebook app on facebook.com  create a Ti app  add the facebook module and implement the 'log with fb' feature  add in tiapp.xml , <property name='ti.facebook.appid'>1234567898</property>  add a urlscheme in tiapp.xml for your app  launch the app  log with FB      h3. Actual Result  upon successful login with FB, you get redirect onto an empty page    h3. Expected Result  upon successful login with FB, you go back to your app (thanks to the custom urlscheme)",Bug,Low,Closed,"2014-01-20 22:47:45","2014-01-20 22:47:45",1
"The Titanium SDK ","Android: Module API - Expose access to startIntentSenderForResult like startActivityForResult","In the Module API for the Android SDK, there is a method named launchActivityForResult that allows a module developer to call startActivityForResult and add a listener for when the result is returned. startActivityForResult takes an Intent and launches it for a result.    There is another similar method in the Android SDK named startIntentSenderForResult that does virtually the same thing as startActivityForResult but can take a PendingIntent instead of an Intent.  It would be useful to expose this method under the name launchIntentSenderForResult in the module API and providing the same functionality as launchActivityForResult does for startActivityForResult.","New Feature",High,Closed,"2014-01-21 20:22:10","2014-01-21 20:22:10",1
"The Titanium SDK ","Android: ListView shifts when loaded a second time or loaded into a window without a tab","I've trimmed down the files and code as much as I believe that I can and still maintain the layout / shifting issue. It is very simple compared to the original code.    1) Create a new alloy project or start with the two tab alloy project  2) delete all the .js, .xml and .tss files  3) Add the enclosed index.js, index.tss and index.xml files  4) Compile and run the project on a device or an emulator  5) Note that the text in the first list section is lined up with the text in the second list section. emulator64-armScreenSnapz002.png shows how it looks in my app. It will look different in this project because it has been trimmed down to contain static data with only two sections instead of three.  6) Hit the 'R' button on the top right hand side of the first line of the list view  7) Note that the name on the first line changes color from red to gray to let you know you clicked.  8) Note that all the text after the second column has shifted to the left. emulator64-armScreenSnapz003.png shows what it looks like in my app. The output from these files do not contain any graphics of course and text has been substituted.    Results:  The first 2 items on the left side of the list view don't move but the next 4 shift to the left.    Expected Results:  The text doesn't move.    This seems to work properly on all the iOS devices and emulators that I've tried, so I believe that this is an Android only issue somewhere between the Titanium runtime and the Android OS.    ",Bug,High,Closed,"2013-11-03 23:35:39","2013-11-03 23:35:39",4
"The Titanium SDK ","LiveView: App hangs on splash screen when LiveView is enabled in an iOS device","Application hangs on splash screen after updating the Titanium SDK to 3.2.0.GA if liveView is enabled.     Before updating to 3.2.0.GA, the app was running fine with liveView.    However, they can still build their app using command line interface.    Please find the attached studio and console logs.",Bug,Low,Resolved,"2014-01-20 12:47:19","2014-01-20 12:47:19",0
"The Titanium SDK ","TiAPI: Add scroll end/start events for ListView","Confirmed these two events are left unimplemented in latest SDK 3.2.0.    Really demand for them.    Thanks  ","New Feature",High,Closed,"2014-01-20 02:22:03","2014-01-20 02:22:03",13
"The Titanium SDK ","Android: Images smaller than expected for Buttons, Menu Icons, Map Pins","For Buttons, ActionBar Menu Icons, Map pins, etc (excluding ImageView) depending on the location of the source image, the images are sometimes smaller than expected.    See the following comment for the full details, sample code to tests, assets and screenshots.     https://github.com/<USER>TiShadow/issues/180#issuecomment-32426567    (Please Note: even though the issue is raised in the TiShadow repository the comment _only_ refers to direct usage of Titanium without TiShadow.)",Bug,Critical,Closed,"2014-01-16 10:36:07","2014-01-16 10:36:07",8
"The Titanium SDK ","iOS: Ti.UI.RefreshControl.beginRefreshing() does not work","h2.Test Code        h2.Actual Result    Nothing happens    h2.Expected Result    RefreshControl should show its loading state in other words show the spinning wheel at the top  ",Bug,High,Closed,"2014-01-16 22:46:45","2014-01-16 22:46:45",5
"The Titanium SDK ","Android: ImageView: Image is not getting displayed inside table row","Android: ImageView: Image is not getting displayed inside table row  It is reproducible on SDK 3.2.0.GA as well. It works fine on iOS platform.    Steps to reproduce:  1. Run the below app        Expected:  Should see a tableView rows with <USER>logo in each row. Should be able to scroll up and down without crash    Actual:  Image is not getting displayed.",Bug,Medium,Closed,"2014-01-14 11:50:37","2014-01-14 11:50:37",3
"The Titanium SDK ","Android: App crashes while capturing image from camera with fixed app orientation (portrait only) ","step 1: fixed app orientation(portrait only) using custom AndroidManifest.xml.  step 2: take picture from camera in landscape mode.  step 3: click on done button in landscape mode. app crashes here.   ",Bug,Low,Closed,"2013-01-08 02:46:30","2013-01-08 02:46:30",0
"The Titanium SDK ","Studio 3.2.0 + SDK 3.0.2 does not work for Android build","I am facing following error when I am trying to run the code in android emulator.    [ERROR] :  Failed to run command build  [ERROR] :  TypeError: Object #<CLI> has no method 'sendAnalytics'      at Object.<anonymous> (/Users/suchariya/Library/Application Support/Titanium/mobilesdk/osx/3.0.2.GA/android/cli/commands/_build.js:395:8)      at /usr/local/lib/node_modules/titanium/lib/hook.js:214:18      at /usr/local/lib/node_modules/titanium/node_modules/async/lib/async.js:229:13      at /usr/local/lib/node_modules/titanium/node_modules/async/lib/async.js:139:25      at /usr/local/lib/node_modules/titanium/node_modules/async/lib/async.js:226:17      at /usr/local/lib/node_modules/titanium/node_modules/async/lib/async.js:553:34      at /usr/local/lib/node_modules/titanium/lib/hook.js:207:9      at fire (/Users/suchariya/Library/Application Support/Titanium/mobilesdk/osx/3.0.2.GA/cli/hooks/plugins.js:15:3)      at /Users/suchariya/Library/Application Support/Titanium/mobilesdk/osx/3.0.2.GA/cli/hooks/plugins.js:19:3      at /usr/local/lib/node_modules/titanium/lib/hook.js:205:13  ---------------------------------------------      at exports.execFile (child_process.js:691:9)      at exports.exec (child_process.js:578:18)      at async.series.cached (/Users/suchariya/Library/Application Support/Titanium/mobilesdk/osx/3.0.2.GA/node_modules/node-appc/lib/android.js:81:4)      at /Users/suchariya/Library/Application Support/Titanium/mobilesdk/osx/3.0.2.GA/node_modules/async/lib/async.js:486:21      at /Users/suchariya/Library/Application Support/Titanium/mobilesdk/osx/3.0.2.GA/node_modules/async/lib/async.js:185:13      at iterate (/Users/suchariya/Library/Application Support/Titanium/mobilesdk/osx/3.0.2.GA/node_modules/async/lib/async.js:108:13)      at /Users/suchariya/Library/Application Support/Titanium/mobilesdk/osx/3.0.2.GA/node_modules/async/lib/async.js:119:25      at /Users/suchariya/Library/Application Support/Titanium/mobilesdk/osx/3.0.2.GA/node_modules/async/lib/async.js:187:17  [ERROR] Application Installer abnormal <USER>termination. Process exit value was 1",Bug,Low,Closed,"2014-01-08 13:22:45","2014-01-08 13:22:45",1
"The Titanium SDK ","iOS: Expose navbarhidden property on all TiWindowProxy objects","If you put a SplitWindow inside a Tab in a TabGroup, it will always show the NavBar generated automatically by the Tab, even if you set the Splitwindow's navBarHidden to false.    This is not the case with regular windows, which allow you to show/hide their defaultly created NavBars.    Because SplitWindows have their own NavBars for the master/detail view, it makes it impossible to use a SplitWindow correctly within a TabGroup.    I've attached an example that shows the double NavBars created with the SplitWindow, along with this working correctly for regular windows.","New Feature",Low,Closed,"2014-01-02 10:12:50","2014-01-02 10:12:50",3
"The Titanium SDK ","iOS: Unable to disable animation when using ListView.setItems()","h3. Reproduce Step  # Run below test code. (case1 & case2)  # You can see wired section animation      h3. actual Result  see this video : http://screencast.com/t/rajjRG1g  When items.length is same, it work properly.  But if items.length is changed, it work with wired animation        h3. Expected Result  If set animated to false or animationStyle to NONE, there are no animation.       ",Bug,High,Closed,"2013-12-19 02:56:14","2013-12-19 02:56:14",13
"The Titanium SDK ","iOS9: TextField with passwordMask & fontFamily changes its fontSize","TextField with passwordMask and some fontFamily changes its font size with every focus/blur. It is completely impossible to set own font family...    Attached video.    ",Bug,High,Closed,"2013-12-27 19:02:54","2013-12-27 19:02:54",2
"The Titanium SDK ","Android: Remove Default Sound Effect when touchEnabled = false","Please update registerForTouch in TiUIView.java with        Reasoning: If a developer has specifically set a view to be non-touchable, then there should not be a touch sound on that view.    Alternative would be to add another view property for soundEffectsEnabled, such that in either Alloy        or        Where View is any kind of View (View, Label, Image, etc)",Improvement,High,Closed,"2013-12-17 20:52:08","2013-12-17 20:52:08",2
"The Titanium SDK ","Implement full NodeJS require specs so we can use NPM for modules","I know from [~<USER> that Hyperloop (and thus Ti.Next - likely Titanium 4.x) will support the full [NodeJS require specs|http://nodejs.org/api/modules.html] so to make it possible to use NPM as a package manager for all kinds of modules. This is also the direction ALOY-86 has been going, asking for widget dependency management.    I open this ticket to request looking into the possibility of implementing this in Titanium 3.x already.    * What are the obstacles to change the require implementation to require both JS and native modules from the local and global {{node_modules}} paths?  * What does it take to get Alloy to loading e.g. widgets from local and global installed {{node_modules}}?  * How should the builder copy in global {{node_modules}} to the project when it packages the app?    I think this would spur and new wave of Titanium native/CommonJS modules and Alloy widgets, sync adapters etc that would really boost the platform, as well as making it easier to re-use proprietary components in multiple projects myself.    Ultimately, I think {{tiapp.xml}} and {{manifest}} could even be replaced by {{package.json}}?","New Feature",Critical,Closed,"2013-12-23 08:07:55","2013-12-23 08:07:55",8
"The Titanium SDK ","Android: Large amounts of JavaScript breaks encryption process","If a project contains a large amount of JavaScript files (total number of bytes, rather than number of files), it will fail during the encryption <USER>    [ERROR] :  Failed to encrypt JavaScript files    This is not a regression.    Titanium SDK 3.2.0.GA max app.js size is 524,283 bytes.  Titanium SDK 3.1.3.GA max app.js size is 017,688 bytes.    Test Data:    Titanium SDK 3.2.0.GA  Test File: app.js.524,290 bytes (attached)  app.js size  Pass: 524,283  bytes  Fail: 524,290  bytes  Log:      Titanium SDK 3.1.3.GA  Test File: app.js.17,695 bytes (attached)  app.js size  Pass: 17,688  bytes  Fail: 17,695  bytes  Log:  ",Bug,High,Closed,"2013-12-24 22:32:48","2013-12-24 22:32:48",8
"The Titanium SDK ","Android: Add foreground service support","Some tasks must be done in a background services but they are essential to an app (like playing audio in a music player, radio player or audiobook player). The problem is that when we use standard background services, Android can kill the service, resulting in a bad user experience.    From the Android documentation:    A started service can use the startForeground(int, Notification) API to put the service in a foreground state, where the system considers it to be something the user is actively aware of and thus not a candidate for killing when low on memory. (1)    By default services are background, meaning that if the system needs to kill them to reclaim more memory (such as to display a large page in a web browser), they can be killed without too much harm. You can set this flag if killing your service would be disruptive to the user, such as if your service is performing background music playback, so the user would notice if their music stopped playing. (2)    It will be very appreciated if we can use foreground services in Titanium without the need of writing a native Android module.    # [http://developer.android.com/reference/android/app/Service.html#ProcessLifecycle]  # [http://developer.android.com/reference/android/app/Service.html#startForeground(int,%20android.app.Notification)]","New Feature",High,Closed,"2013-12-21 20:36:49","2013-12-21 20:36:49",13
"The Titanium SDK ","MobileWeb: load event on imageView not firing","When using Ti.UI.createImageView on MobileWeb, the load event never fires.  I tried to use postlayout, but this event fires twice the FIRST time the image is loaded (i.e. is not in the browser cache) and once every subsequent time.    Using Blob (with it's various means of downloading image data into it) is not supported on MobileWeb, so there seems to be no way of actually knowing when an image is completely downloaded.    *Steps to Reproduce*  1. Create empty project in Studio based on Classic->HTML-based Application  2. Remove everything between <body> and </body> in Resources/HTML/index.html  3. Replace everything in app.js with code below  4. Create folder Resources/comics and download panelA.png from http://www.ontonauts.com/reader_indev/comics/panelA.png  5. Run the project          You will see that the image has loaded text is never sent to the Javascript console, i.e. the event is never triggered.  *Test Case*  ",Bug,Critical,Closed,"2013-07-09 11:35:53","2013-07-09 11:35:53",1
"The Titanium SDK ","Mobile Web: createBuffer API throws an error","Run attached the build. The error message is also attached as a screenshot",Bug,Critical,Closed,"2013-06-03 04:41:57","2013-06-03 04:41:57",1
"The Titanium SDK ","iOS7: Toolbar is overlapping Statusbar","Create any dummy project and run with above provided environment for IOS7.    Actual result:  Toolbar is overlapping Statusbar.     Expected:  No overlapping    Found its replica at TIMOB-14283. But it seemed closed without proper fix.",Bug,High,Closed,"2013-10-03 12:11:17","2013-10-03 12:11:17",1
"The Titanium SDK ","Android: Support AttributedString","I saw in Ti SDK 3.2.x we have added new features  [AttributedString| http://docs.<USER>com/titanium/latest/#!/api/Titanium.UI.iOS.AttributedString] for iOS only. But in native android this features is already available from API level 1 but in titanium this is missing.  For more information please visit http://developer.android.com/reference/java/text/AttributedString.html    I would like to request for android also.   ","New Feature",High,Closed,"2013-12-16 10:18:20","2013-12-16 10:18:20",21
"The Titanium SDK ","MobileWeb: Support iOS 7-era Safari","The current version of Mobile Web has some bugs that prevent a pleasant user experience on Safari under iOS 7. This ticket is to diagnose and fix those issues.","New Feature",High,Closed,"2013-12-13 11:40:58","2013-12-13 11:40:58",0
"The Titanium SDK ","Fold Titanium Diagnostic Test into CLI","We have had good luck with an initial implementation of a connection diagnostic test for Titanium:  https://github.com/<USER>titanium-connection-test  We should fold this into CLI  This should result in a tool that customers and sales engineers feel comfortable using at customer sites to diagnose any issues that may be occurring.  We should run this as part of `ti info` and `ti setup`.",Epic,High,Closed,"2013-12-13 11:22:16","2013-12-13 11:22:16",13
"The Titanium SDK ","iOS: Turning the camera around using Ti.Media.switchCamera(Ti.Media.CAMERA_FRONT) causing camera to get  stuck and refuse to snap a picture","Turning the camera around using Ti.Media.switchCamera(Ti.Media.CAMERA_FRONT) and subsequently trying to snap a picture using Ti.Media.takePicture(); causes the camera to freeze/get stuck and this error is shown in the iPad console:    UIImagePickerController: ignoring request to take picture; camera is changing modes.",Bug,Critical,Closed,"2013-11-07 14:35:06","2013-11-07 14:35:06",1
"The Titanium SDK ","Code Analyzer: error analyzing the Alloy TODO sample app","h5. Problem description    An exception is thrown when analyzing the 'TODO' Alloy test app enabling the 'Process Unvisited Code' from the Preferences.   Attaching the sample app.    1. Import the sample in Studio (Sample app attached here)  2. Open the Code Analyzer preferences and enable all the Settings, including the 'Process Unvisited Code' one.   2. Run the Code Analyzer (either for Android or iOS)    Following error is displayed:      h5. Note  Not been able to reproduce the issue with Field Service app or with a default Alloy new template.     h5. Additional log    Additional log running the Code Analyzer from terminal:  ",Bug,Medium,Closed,"2013-12-12 01:56:13","2013-12-12 01:56:13",8
"The Titanium SDK ","iOS: keyboardToolbar fails to disappear","h4. Expectation  Expect keyboardToolbar to disappear AND NEVER RETURN when the parent containing its window is closed.    h4. Reality  keyboardToolbar slides off the screen to the right instead of down, and will slide in right to left under new keyboard    h4. Demonstration    App in the Wild: http://screencast.com/t/U78lP3Lhpv  Test Case Video: http://screencast.com/t/ig9D9PpePY2a    h4. Testcase    This test case shows the weird animation (tool bar left to right, instead of sliding up with keyboard), but the bar does not stick as it does in the video. The test case matches the view layers of the affected app.    ",Bug,High,Closed,"2013-12-10 19:26:33","2013-12-10 19:26:33",8
"The Titanium SDK ","Android: Add Navigation Drawer Support","Add support for the Android Navigation Drawer into Titanium. This is one of the primary methods for navigation provided by Android, and needs to be implemented in Titanium for better Android support. It is extremely useful because:     1. It is built-in Android and is a common UI pattern; and   2. It is explicitly designed to be accessible from any screen in the app - a feature that cannot be achieved in user-land Titanium code in the same way    http://developer.android.com/design/patterns/navigation-drawer.html","New Feature",High,Closed,"2013-12-06 17:58:22","2013-12-06 17:58:22",13
"The Titanium SDK ","Android: Text shadow not working as expected","It is great to see 3.2.0 brings text shadows for Buttons and Labels on Android. However, I does not work as I expected it to work. Only if you set the Android (and MobileWeb) specific {{shadowRadius}} property, the shadow will show. I would assume that leaving it out would default it to {{0}} and result in a hard shadow, [just like in CSS|https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow#Values]. But instead it doesn't show at all, also when I set it to {{0}} myself.    h1. Steps to reproduce    1. Create new project: {{ti create -p android,ios -n shadow --id test.shadow -d .}}  2. Add the shadow properties to {{label1}} in the default {{app.js}}:        3. Run the app on both iOS and Android and notice the shadow is not there on Android.  4. Add the Android (and MobileWeb) specific {{shadowRadius}} property:       5. Try again and see the shadow is still not there on Android.  6. Change the radius to 0.00001 or higher:       7. Try again and see it now finally works.",Bug,Critical,Closed,"2013-12-04 08:56:47","2013-12-04 08:56:47",2
"The Titanium SDK ","iOS: Ti.Media.openPhotoGallery() does not obey videoQuality parameter","h4. Problem Description   Calling Ti.Media.openPhotoGallery with the videoQuality parameter set to Ti.Media.QUALITY_HIGH, has no effect. It's ignored completely - video of medium quality is inserted.     A message is also shown - Compressing... - in the picker, when in fact it should just be straight up inserting the video, not compressing it to medium quality.      h4. Steps to reproduce  1. Create a new mobile project  2. Add this testcase to app.js:    3. Run it in iOS  4. Check the log    h4. Extra information  For detailed information and a complete code sample to test, see my Q&A here: (http://developer.<USER>com/question/159904/recorded-video-vs-video-from-camera-roll-on-ios---recorded-videos-are-3-times-the-file-size)    Note: The documentation for http://docs.<USER>com/titanium/latest/#!/api/PhotoGalleryOptionsType does NOT mentioned the videoQuality parameter, but it is defined in the source code (Line 480 here: https://github.com/<USER>titanium_mobile/blob/master/iphone/Classes/MediaModule.m)    ",Bug,High,Closed,"2013-11-28 11:46:24","2013-11-28 11:46:24",2
"The Titanium SDK ","Android: NPE at android.view.ViewConfiguration.get()","h4. Problem    Google Play Crash reports contain multiple of the following NullPointerExceptions occuring at the same place:                h4. Test Case  Unfortunately, I haven't been able to find steps to reproduce this issue. The best way to go forward in my opinion is to analyze the code and to try and figure out from there, what is going wrong.    h4. My Analysis  From the code I see, that in the TiTableViewConstructor a call to super(proxy.getActivity()) is done. In proxy.getActivity() it is noted, that this may return null. I assume that this would lead to the crash reports above.    Could it be that we have a possible race condition or something similar here, where proxy.getActivity() is called, before the proxy actually has an activity assigned to it?    Is anyone else seeing this problem on a large installation base?    It would be great to improve the stability of Titanium further by fixing this issue.",Story,Medium,Closed,"2013-11-14 10:45:24","2013-11-14 10:45:24",3
"The Titanium SDK ","HTTPClient: setting autoRedirect off for 302s on Android calls onerror","If you set httpclient.autoRedirect to false and then send a GET which returns a 302 (or anything but a 200 I'm guessing), then onerror is called instead of onload.    1. 301, 302, etc. responses shouldn't be deemed an error, but if you're really set on that:  2. Make it consistent. On iOS, onload is called and on Android, onerror is called. Even if you don't, at least...  3. Give us all the information. Provide more than {error:'...'} to onerror. Give us the headers, the status, the responseText, responseData, etc. if they're there in the response.    This really reduces confidence in what you're doing and requires so much more testing.",Bug,Medium,Closed,"2013-11-13 11:35:53","2013-11-13 11:35:53",3
"The Titanium SDK ","Android: Calling Ti.UI.Android.ProgressIndicator.hide() twice crashes app on next show()","If you call {{hide()}} twice on a {{ProgressIndicator}} *positioned in the status bar* the next time you call {{show()}} it will crash. Why I call {{hide()}} twice? Because multiple independent processes share a single (indeterminant) {{ProgressIndicator}} and call {{hide()}} not (needing) knowing what the others did before him.    h1. Steps to reproduce    # Create an app: {{titanium create -p android -n testProgress --id test.progress}}  # Use the following code for {{app.js}}:        # Build it to a device: {{titanium build -p android -T device}}  # Press the button and wait for the progress indicator to finish  # Press the button again and watch the app crash and spit out the following log:      ",Bug,Low,Closed,"2013-08-30 15:15:06","2013-08-30 15:15:06",5
"The Titanium SDK ","Android: Media: Camera is not opening with overlay property set in Ti.Media.showCamera()","Android: Media: Camera is not opening with overlay property set in Ti.Media.showCamera().  It also occur on SDK: 3.1.3.GA  Steps to reproduce  1. Run the below app.    if overlay property is commented then the app works fine.  Expected:   Camera is opened.    Actual:  Camera does not open.",Bug,Medium,Closed,"2013-11-25 12:40:07","2013-11-25 12:40:07",3
"The Titanium SDK ","Ubuntu 12.04 : Debugger Not working for Android Device","Debugger not working for Android Device.    Steps to reproduce:  1. Create new classic/alloy Project.  2. Add breakpoint at proper place.  3. Debug the app on device.    Expected Result:  Must hit the breakpoint and app must be launched successfully.    Actual Result:  Build Failed with logs and screenshot attached.",Bug,Critical,Closed,"2013-11-19 11:23:39","2013-11-19 11:23:39",5
"The Titanium SDK ","Ubuntu: Found Missing Modules error on launching any default Mobile app","h3. Steps Followed:  1. Create a default mobile app.  2. Launch the app on android device/emulator.    Actual Result:  Build fails and 'Modules could not be found' error displayed in Console log file.  Please refer the attached log and console log file for further reference.    h3. Workaround  We manually added the required modules folders from mobile SDK location into our Studio WorkSpace in the respective project's module folder. ",Bug,Critical,Closed,"2013-11-19 09:11:01","2013-11-19 09:11:01",5
"The Titanium SDK ","Android: ScrollableView.setCurrentPage() fires scrollend event when it shouldn't","The setCurrentPage method for Ti.UI.ScrollableView fires the 'dragend' & 'scrollend' events upon completion.    According to the docs:    scrollend: Fired when the view has stopped moving completely.  dragend: Fired when the scrolling drag gesture on the view has been completed.    If setCurrentPage is called programmatically, the 'dragend' event is incorrect as no drag gesture has been occurred.    If setCurrentPage is called programmatically and without animation, the 'scrollend' event is incorrect as no movement has occurred.",Bug,Medium,Closed,"2013-10-30 14:49:34","2013-10-30 14:49:34",5
"The Titanium SDK ","Android: TableView - JNI ERROR (app bug): local reference table overflow (max=512)","h4. Problem Description This code recreates it. Dies with error : [ERROR][dalvikvm( 840)] JNI ERROR (app bug): local reference table overflow (max=512)  h4. Test case    h4. Extra information (output of the code)  OUTPUT:   [INFO][TiAPI ( 840)] Error Hear after 0 itteratopns outer loop, current section[object TableViewSection] [INFO][TiAPI ( 840)] Error Hear after 0 itteratopns inner loop, 0 itterations Outter loop current section row[object TableViewRow] [INFO][TiAPI ( 840)] Error Hear after 1 itteratopns inner loop, 0 itterations Outter loop current section row[object TableViewRow] [INFO][TiAPI ( 840)] Error Hear after 2 itteratopns inner loop, 0 itterations Outter loop current section row[object TableViewRow]  h4. Conversation in the Q&A Thread Reference: http://developer.<USER>com/question/158112/reference-table-overflow-on-select-all-for-tableview-android#comment-193627",Bug,High,Closed,"2013-11-07 18:25:06","2013-11-07 18:25:06",8
"The Titanium SDK ","Android: Images do not scale UP properly on Android (parity issue)","h4. Problem Description  The 320x180 image in the testcase should be scaled UP to fill the width of the window (left: 0, right: 0) with it's height automatically adjusted to maintain the image aspect ratio.     This is exactly what happens on iOS. On android, the ImageViewHeight is contstrained to the original image height, and the image's aspect ratio is maintained, thus leaving a large unfilled area to the left and right of the image.     Since the size is set to Ti.UI.SIZE, the expected behaviour would be that the image is scaled up to fit the full width of the ImageView and it's size adjusted upward to fit the contents of the scaled up image. Again, on iOS this expected behaviour is exactly what happens. But on Android, you get the unexpected result of an image with limited width.    h4. Steps to reproduce  1. Create a new mobile project  2. Add Android to the supported platforms  3. Add this testcase to app.js    4. If you run this in Android, you will see red next to the image. If you run this in iOS it will be nicely filling the space, no red in the screen.     ",Bug,High,Closed,"2013-11-12 18:55:01","2013-11-12 18:55:01",5
"The Titanium SDK ","CLI: Changelog (release notes) shows 3.1.1 as latest entry for the 3.1.2 release","h5. Description:  When studio prompts users to install CLI 3.1.2, the changelog is displayed. Currently the changelog is only listing 3.1.1 as the latest entry. This might cause confusion.    h5. Steps to reproduce:  1) Remove CLI with sudo npm -g remove titanium OR if you have a version earlier than 3.1.2, skip this step.  2) Launch studio and check for <USER>updates  3) Examine the release notes (changelog) displayed    h5. Result:  The latest entry is 3.1.1    h5. Expected Result:  The latest entry is 3.1.2 and describes the fixes made.",Bug,High,Closed,"2013-08-15 21:40:55","2013-08-15 21:40:55",1
"The Titanium SDK ","Android: NPE when running Android app in a distribution or debug version","Using Titanium Studio, build: 3.2.0.201311122225  Titanium SDK 3.2.0, CLI 3.2.0.    To reproduce:  1. Create a default mobile project in studio.   2. Run it as a distribution or debug version on device.    *Studio log file:*      *Diagnostic test output:*      *Output of ti info -o json -t android:*  ",Bug,Critical,Closed,"2013-11-14 19:19:32","2013-11-14 19:19:32",3
"The Titanium SDK ","iOS: tabGroup window flickers on open if barImage or rightNavButton is set","While opening new window from tab group with navigation bar,a blink is seen in the new window title for a while.    In case If we don't set rightnav button or barImage this flicker in the title is not seen.    *Steps To Reproduce* :    1.Copy and paste the below code in the newly created project:      2. Run the application and *Click on the label of first Tab*.    *Expected result* :A new Window should open with no flicker on its title.    *Actual result* :     1. *Classic Titanium* : New window opened with flicker on its title only when *both* BarImage and                            rightNavButton are set.    2. *Alloy* : New window opened with flicker on its title if either BarImage or rightNavButton are set.      *Note* : Please find attached alloy project to reproduce the issue.     ",Bug,Medium,Closed,"2013-11-14 11:21:44","2013-11-14 11:21:44",8
"The Titanium SDK ","Android: Module Packaging - Titanium fails to package android module project","h5.Description  Packaging an android product to the titanium SDK directory, into an already created module or to a specified location does not work.  Packaging claims to have finished in the console, but an alert will be shown saying that the packaging was unsuccessful.    h5.Steps To Reproduce  1. Open Studio  2. Create an android mobile module project  3. Package the project to the Titanium SDK    h5.Result  Opened an alert:  {quote}Launching build and packaging failed.    Reason:  Could not move: /Users/tester/Documents/Titanium_Studio_Workspace/android/dist/com.<USER>android-android-1.0.zip.{quote}    h5.Expected Result  Project should have packaged successfully into the titanium sdk folder.",Bug,High,Closed,"2013-10-09 00:07:43","2013-10-09 00:07:43",5
"The Titanium SDK ","Appcelerator Studio: Titanium CLI command not recognized in Studio terminal","h2. Description  Not able to build our mobile application from the <USER>Studio terminal on Windows using CLI. However it does work from outside in terminal but not in the terminal inside <USER>studio.    h2. Test Case  Please find below the error logs :    and also  ",Bug,High,Closed,"2013-09-13 11:59:25","2013-09-13 11:59:25",8
"The Titanium SDK ","iOS: Debugger - Debugger does not work with iOS","h5. Details  Debugging does not work on iOS simulators and iOS devices.    *This is a regression since this worked with 3.1.3.GA stack.*    h5. To reproduce  1. Create a default Titanium or Alloy project  2. Add a break point to the following places:    In the default Alloy app, add break point in index.js at line 2 (e.g.  alert($.label.text))  In the default Titanium app, add this code and add a break point at the alert      3. Next, debug to either iOS simulator or iOS device    h5. Actual result    Debugging to iOS simulator: if you click on the 'I am Window 1' label, studio will not hit that break point.  Debugging to iOS device: Debug on iOS device dialog will stall (see debug_device.png) and not app will appear on device.",Bug,Critical,Closed,"2013-11-06 19:30:37","2013-11-06 19:30:37",5
"The Titanium SDK ","Android: HttpClient.abort() does not stop file upload","Currently, it's not possible to stop an upload with HttpClient on Android.     Calling abort() does abort the transfer, but the transfer starts over from 0%, and runs to completion, somewhat hidden - even calling the onload() callback when it's done.     On the server-side, it's apparant that the socket connection is closed when abort() is called, but a new socket connection is instantly opened, where the upload is restarted.    Here's some source (app.js) to reproduce the issue - it starts an upload, then abort() is called after 1 second:  {code:js}  var win = Ti.UI.createWindow({    exitOnClose:            true,});  win.open();        var percent_done = 0;     var xhr = Ti.Network.createHTTPClient({       onload : function(e) {          alert(onload: +this.responseText);       },       onerror : function(e) {           alert(e.error: +e.error);       },       onreadystatechange: function(e){          console.log(onreadystatechange: +this.readyState);         },       onsendstream : function(e){          var curr_percent_done = parseInt(e.progress*100);          if (percent_done == curr_percent_done) return;          percent_done = curr_percent_done;          console.log(percent_done+% done. readyState: +this.readyState);       },       timeout: 10000  });        function upload(){      console.log(STARTING UPLOAD);      var url = http://bitfabrikken.dk/upload;    //using this server for simplicity's sake      var file = Ti.Filesystem.getFile(Ti.Filesystem.getResourcesDirectory()+500k_test.mp4); //just use any large-ish file, 500kb+ or so      xhr.open(POST, url);      xhr.send({ file: file });         }            upload();  setTimeout(function(){      console.log(ABORTING UPLOAD - calling xhr.abort);      xhr.abort();  },1000);    [INFO][TiAPI   ( 3108)]  STARTING UPLOAD  [INFO][ActivityManager( 1015)] Displayed dk.bitfabrikken.nettest/.NettestActivity: +636ms  [INFO][TiAPI   ( 3108)]  onreadystatechange: 1  [INFO][TiAPI   ( 3108)]  1% done. readyState: 1  [INFO][TiAPI   ( 3108)]  2% done. readyState: 1  [INFO][TiAPI   ( 3108)]  3% done. readyState: 1  [INFO][TiAPI   ( 3108)]  4% done. readyState: 1  [INFO][TiAPI   ( 3108)]  5% done. readyState: 1  [INFO][TiAPI   ( 3108)]  6% done. readyState: 1  [INFO][TiAPI   ( 3108)]  7% done. readyState: 1  [INFO][TiAPI   ( 3108)]  8% done. readyState: 1  [INFO][TiAPI   ( 3108)]  9% done. readyState: 1  [INFO][TiAPI   ( 3108)]  ABORTING UPLOAD - calling xhr.abort  [INFO][TiAPI   ( 3108)]  0% done. readyState: 1  [INFO][TiAPI   ( 3108)]  1% done. readyState: 1  [INFO][TiAPI   ( 3108)]  2% done. readyState: 1  [INFO][TiAPI   ( 3108)]  3% done. readyState: 1  [INFO][TiAPI   ( 3108)]  4% done. readyState: 1  [INFO][TiAPI   ( 3108)]  5% done. readyState: 1  [INFO][TiAPI   ( 3108)]  6% done. readyState: 1  [INFO][TiAPI   ( 3108)]  7% done. readyState: 1  [INFO][TiAPI   ( 3108)]  8% done. readyState: 1  [INFO][TiAPI   ( 3108)]  9% done. readyState: 1  [INFO][TiAPI   ( 3108)]  10% done. readyState: 1  [INFO][TiAPI   ( 3108)]  11% done. readyState: 1  [INFO][TiAPI   ( 3108)]  12% done. readyState: 1  [INFO][TiAPI   ( 3108)]  13% done. readyState: 1  [INFO][TiAPI   ( 3108)]  14% done. readyState: 1  -----SNIP - LOTS OF REPETITION-----  [INFO][TiAPI   ( 3108)]  93% done. readyState: 1  [INFO][TiAPI   ( 3108)]  94% done. readyState: 1  [INFO][TiAPI   ( 3108)]  95% done. readyState: 1  [INFO][TiAPI   ( 3108)]  96% done. readyState: 1  [INFO][TiAPI   ( 3108)]  97% done. readyState: 1  [INFO][TiAPI   ( 3108)]  98% done. readyState: 1  [INFO][TiAPI   ( 3108)]  99% done. readyState: 1  [INFO][TiAPI   ( 3213)]  100% done. readyState: 1  [INFO][TiAPI   ( 3213)]  onreadystatechange: 2  [INFO][TiAPI   ( 3213)]  onreadystatechange: 3  [INFO][TiAPI   ( 3213)]  onreadystatechange: 4  [INFO][ALERT   ( 3213)] (KrollRuntimeThread) [7533,8510] onload: null  {code}      Previously I've side-stepped this issue by using TCPSocket to handle uploading. However now my client wants SSL, and since that's not supported with TCPSocket, I'm back to being stuck on this error.      Links to a few Q&A threads where this bug is the problem:  http://developer.<USER>com/question/144392/android-httpclientabort-does-not-stop-file-upload  http://developer.<USER>com/question/146555/how-to-abort-an-upload  http://developer.<USER>com/question/158669/how-to-abort-a-file-upload-via-httpclient-android  https://developer.<USER>com/question/154693/httpclient---how-to-stop-an-upload-in-progress---abort  https://developer.<USER>com/question/152916/abort-of-sending-by-http-client-show-progress-of-send--receive-characters-stream  ",Bug,High,Closed,"2013-10-28 10:17:48","2013-10-28 10:17:48",5
"The Titanium SDK ","iOS7: Support built in functionality to add More button(s) when user swipe to delete a cell in rows","h6.Request description   Like in iOS7 Default Mail app, on swipe left the table view row will show options More and Trash which on click will prompt optional dialog to pursue the action.    h6.Feature Request  Titanium Developers would like to request built in functionality for this custom behaviour in upcoming release since many of latest apps requires such a functionality of showing more than one button likewise.    Basically need to implement the same  tableview row with features similar to iOS7 mail App with 2 or 3 options on swipe left. Please find the attached image to have better idea about the request.","New Feature",High,Closed,"2013-10-28 16:34:13","2013-10-28 16:34:13",8
"The Titanium SDK ","Titanium.Utils.base64decode truncates result with foreign characters","h5. Problem description  Titanium.Utils.base64encode generates a truncated blob when operating on Chinese characters.    h5. Code sample:    {code:javascript}  var original = '一些随机的中国文字';  var reference = '5LiA5Lqb6ZqP5py655qE5Lit5Zu95paH5a2X';  var encoded = Titanium.Utils.base64encode(original).text;  console.log('encoded: ' + encoded);  console.log('reference: ' + reference);  console.log('encoded ' + (encoded === reference ? '===' : '!==') + ' reference');  {code}        h5. Steps to reproduce  1. Create a new mobile project  2. Paste this to app.js:   3. Run and check the console.  h5. Output:      h5. Expected output:      When original is Base64-encoded, the result should be equal to reference. However, the blob returned by Titanium.Utils.base64encode is significantly shorter than expected. Titanium.Utils.base64encode apparently cannot properly handle special characters.",Bug,Low,Closed,"2013-10-26 20:35:52","2013-10-26 20:35:52",1
"The Titanium SDK ","Add support for largeIcon in Titanium.Android.Notification","Currently Titanium.Android.Notification (http://docs.<USER>com/titanium/latest/#!/api/Titanium.Android.Notification) only accepts one icon which is used for both the icon on the status bar and the icon displayed on the notification center.    Please add support for the largeIcon (http://developer.android.com/reference/android/app/Notification.html#largeIcon) so it becomes possible to have 2 different icons between the status bar and the notification center.    Many thanks","New Feature",Low,Closed,"2013-10-24 02:15:46","2013-10-24 02:15:46",5
"The Titanium SDK ","iOS7: appicon-Small-40 (and @2x) Icon Not Used for iOS 7 when All Icon Sizes Included in Bundle","The iOS 7 icons for Spotlight, Settings, and Notifications (appicon-Small-40.png, <EMAIL>) are not used when all of the other icon sizes/versions (including iOS 6) are included. Specifically, include the following icons in Resources/iphone:    appicon-Small.png  <EMAIL>  appicon-Small-50.png  <EMAIL>  appicon-Small-40.png  <EMAIL>    When you run on iOS 7 device or simulator, appicon-Small-40.png and <EMAIL> are not used as expected.    Steps to reproduce:  1. Unzip Test.zip, import the Titanium mobile project, and run it in the simulator.    2. Simulate pressing the Home button to close the app and open the default Settings app.    3. Scroll to the bottom and notice the app icon used for Test is white.    4. Expected app icon is black. All iOS7 icons included in Test project are black, all iOS6 icons are white. View appicon-Small-40.png and <EMAIL> and confirm they are black.    See related Q&A post logged over a month ago that others have confirmed:    http://developer.<USER>com/question/157401/spotlight-settings-and-notification-icon-not-using-ios-7-versions",Bug,Medium,Closed,"2013-10-19 21:50:20","2013-10-19 21:50:20",5
"The Titanium SDK ","iOS7: TableViewRow hasChild shows way off compared to iOS6","h4. Problem Description  When adding a Label to a TableViewRow and sets hasChild on IOS7, the label is pushed twice as much to the left as on IOS 6. I know the right/left default on IOS6 is 8 and 15 on IOS7. But when on IOS7 the Label is pushed 2*15 pixels to the left by the hasChild icon on IOS 6 it is only pushed 1*8 pixels      h4. Steps to Reproduce  When adding a Label to a TableViewRow and sets hasChild on IOS7, the label is pushed twice as much to the left as on IOS 6. I know the right/left default on IOS6 is 8 and 15 on IOS7. But when on IOS7 the Label is pushed 2*15 pixels to the left by the hasChild icon on IOS 6 it is only pushed 1*8 pixels    Please see the attached images, or try:    1. Create a new Alloy project.  2. Drop the Attached index.xml to the Views folder  3. Run the project on IOS 7  4. In the Simulator menu select Debug -> Color blended laysers  5. Look at the Right sides of the labelse  6. Do step 3-5 in the IOS 6.1 simulator (edit right to 8 on labels), see the difference    Actual Result  The label is pushed twice on IOS 7    Expected Result  The label should be pushed once like on IOS 6",Bug,Low,Closed,"2013-10-01 09:26:47","2013-10-01 09:26:47",1
"The Titanium SDK ","iOS: Battery Platform event listener doesn't work after first call","Adding the event listener for battery change is never called in ios 7 on iphone 4s and 5.    Ti.Platform.getBatteryLevel() reports current battery level from first launch of the app but never gets updated.  Functions as expected (gives 1% changes) on android         ",Bug,Medium,Closed,"2013-10-18 09:32:01","2013-10-18 09:32:01",5
"The Titanium SDK ","Android: Remove FastDev","In 3.2.0 we deprecated FastDev. In 3.3.0, we need to remove the code altogether.    For now, if you wish to use it, you still can from the command line following the instructions in http://docs.<USER>com/titanium/latest/#!/guide/Fastdev_Reference_for_Android.",Story,High,Closed,"2013-10-17 21:15:26","2013-10-17 21:15:26",3
"The Titanium SDK ","iOS: Add ability to hide bottom border in the window bar","New property for window that hide the bottom border in the window bar. So many guys have had problem with that. Is impossible to set up own color or picture, bottom border hampers developers to make nice design. Workaround is use toolbar or own view what is not really good way, especially not if there is long navigation through whole app or more orientation modes. I think every app that is going to have custom-nice design needs to change default navBar/winBar ,so this property is important.    ","New Feature",Low,Closed,"2013-09-30 21:53:46","2013-09-30 21:53:46",1
"The Titanium SDK ","iOS: Titanium.Media.AudioPlayer needs an error event","Titanium.Media.AudioPlayer really needs a proper error event. 'Change' and 'progress' aren't enough.       Currently, if a stream is broken, or (as is often the case) has the wrong buffer size set (as can be demonstrated in the KitchenSink remote streaming example) we only forced the same alert Unable to configure network read stream.       This error info isn't very useful. Debug logs shows more info logged by AudioStreamer.m which provides more info eg : Audio packets are larger than kAQBufSize.            ","New Feature",Critical,Closed,"2013-10-01 15:05:27","2013-10-01 15:05:27",5
"The Titanium SDK ","iOS: No event generated on click of map annotation title or subtitle","h5. Problem   When clicking on an annotation in a mapview, no event is generated for SDK 7.x/8.x but it’s working well for SDK 6.1.    For more details visit http://developer.<USER>com/question/157471/mapview-click-event-listener-not-working-ios7    h5. Test Code        h5.  Steps to reproduce    Please follow my steps to reproduce this bug:-    # Create new project   # Replace app.js code to my test code  # Run with IOS SDK 6.1   # Click on annotation pin. Annotation appears with title and subtitle  # Click on title or subtitle  # Its shows alert message   # Now change to iOS SDK 7.x/8.x and follow steps 4 to 6  # For iOS 7/8, if you click on title or subtitle, alert message will not display  ",Bug,High,Closed,"2013-10-09 08:27:02","2013-10-09 08:27:02",13
"The Titanium SDK ","Android: Allow full Activity lifecycle access for Titanium modules","The current Android module API offers access to the *application* lifecycle, but this is mostly irrelevant for Android (it's the iOS model!), where code needs access to the *Activity* lifecycle (i.e. onCreate, onResume, onPause, onStop, onDestroy, onActivityResult).    A good example is this class in the Facebook SDK: https://developers.facebook.com/docs/reference/android/current/UiLifecycleHelper    Currently, this class cannot be used in module code that runs in the context of a Window or TabGroup, since the module does not have access to that Activity's lifecycle events. This greatly complicates module porting to Titanium, since using such classes requires creating non-UI activities, and then we need methods to sync between the various Activities.    h3. Proposal  # Add a new dictionary parameter to Ti.UI.createWindow and createTabGroup, attachAndroidModule: 'modulename'  # If attachAndroidModule is specified, the module is loaded prior to Activity creation and its lifecycle events correspond to those of the created UI Activity.  # The Javascript does not change - the module is required and used as before.  # Clearly the module can be attached to multiple Activities in a Titanium app - just as an Android library can be used by multiple Activities in in a native Android app, and in each case the events correspond to the Activity in use.  # I would deprecate the current lifecycle events in the Android module, since they're confusing in the Android context. However, if desired, I suppose it's possible to maintain legacy module behavior (per module) through tiapp.xml configuration parameters.    This is yet another stumbling block to easy porting of 3rd party code. The Titanium community would greatly benefit from this improvement.","New Feature",High,Closed,"2013-10-09 06:26:56","2013-10-09 06:26:56",13
"The Titanium SDK ","CLI: iOS: Support to change BUILD property on iOS project","Would be awesome if we could change build version directly from *tiapp.xml*. This is very important to distribute builds for testing, for example. It allow us to generate builds without change a minor version number.    On Android we can change *versionCode* in manifest file, directly from *tiapp.xml*.","New Feature",Low,Closed,"2013-10-04 10:51:10","2013-10-04 10:51:10",1
"The Titanium SDK ","iOS7: TiRootViewController should use launch image from Info.plist if specified","In iOS 7 you can specify iOS version specific launch images in the Info.plist file like this:        This works fine if specified in the tiapp.xml as iOS display the correct image. Unfortunately after the launch image is displayed and before the first app view opens, the {{TiRootViewController}} displays the launch image again, but this time only the standard files like {{Default.png}} or {{<EMAIL>}} are used. The {{TiRootViewController}} should also use the launch images specified in the Info.plist file (if one is specified for the current iOS version) for a consistent startup behaviour.  ","New Feature",Low,Closed,"2013-09-20 15:21:08","2013-09-20 15:21:08",0
"The Titanium SDK ","Android: Update Facebook Module to version 3.5","We need to update the Facebook SDK Module version.    It's almost 1 year old now as per https://github.com/<USER>titanium_modules/blob/master/facebook/mobile/android/src/com/facebook/FacebookSdkVersion.java we are currently stuck on version 3.0.0 of the Facebook SDK... And there were a lot of improvements since them...    The official Changelog from 3.0.0 to 3.5:  https://developers.facebook.com/docs/android/change-log-3.x/    There are many features and improvements since them, not to mention that the latest 3.5 version brings the Native Share Dialog and a lot of bug fixes","New Feature",High,Closed,"2013-09-25 00:05:41","2013-09-25 00:05:41",21
"The Titanium SDK ","Android: Support for MIPS ABI","With the advent of many low-cost Android Devices (especially tablets) based on MIPS architecture we should expect a lot of near future demand for apps compatible with those devices (take a look for instance on the Ainol Novo 7).    As of todays (Ti SDK 3.1.3.GA), Titanium only supports arm, armv7a and x86 ABIs for Android.    We should start thinking about MIPS as soon as possible.      Some info:    http://www.androidcentral.com/mips-announces-125-jelly-bean-tablet  http://liliputing.com/2012/07/android-4-1-coming-soon-to-mips-based-devices.html  http://www.mipsdroid.com/  http://phandroid.com/2012/07/31/smart-tab-1-is-a-mips-based-jelly-bean-running-tablet-with-low-125-price-tag/","New Feature",Low,Closed,"2013-09-24 03:41:51","2013-09-24 03:41:51",0
"The Titanium SDK ","IOS7: implement UIMotionEffect ","IOS7 introduces UImotionEffect (which is not Dynamics), would be nice to see it( at least UIInterpolatingMotionEffect)  implemented in Titanium SDK.    some excellent examples here:     http://www.teehanlax.com/blog/introduction-to-uimotioneffect/","New Feature",Low,Resolved,"2013-09-20 10:35:07","2013-09-20 10:35:07",0
"The Titanium SDK ","iOS7: TableView with SearchBar does not respect autoAdjustScrollViewInsets Window property","Without searchBar in TableView, the property is respected.    ",Bug,High,Open,"2013-09-19 04:23:01","2013-09-19 04:23:01",8
"The Titanium SDK ","ScrollView while scrolling, the user touchs and the scroll jumps the position","When a user swipes on a scrollview, the content begins scrolling. If the user then touches on the scrollview while it is scrolling/moving, the expectation is that the content will stop where it is. However, when the user touches, the content of the scrollview jumps back to where the user originally released it (end of swipe action).     Test code:  {code:title=index.xml|borderStyle=solid}  <Alloy>   <Window class=container>    <ScrollView id=scrollView showVerticalScrollIndicator=false showHorizontalScrollIndicator=true height=80% width=80% layout=horizontal>              <View id=view backgroundColor=#336699 borderRaduis=10 top=10 height=200 width=400 />              <View id=view backgroundColor=white borderRaduis=10 top=10 height=200 width=400 />              <View id=view backgroundColor=blue borderRaduis=10 top=10 height=200 width=400 />              <View id=view backgroundColor=white borderRaduis=10 top=10 height=200 width=400 />              <View id=view backgroundColor=red borderRaduis=10 top=10 height=200 width=400 />              <View id=view backgroundColor=white borderRaduis=10 top=10 height=200 width=400 />              <View id=view backgroundColor=green borderRaduis=10 top=10 height=200 width=400 />          </ScrollView>   </Window>  </Alloy>  {code}",Bug,Low,Closed,"2013-09-18 23:02:08","2013-09-18 23:02:08",0
"The Titanium SDK ","iOS: Enable ARC by default in Titanium Mobile Module projects","Based on the request as part of TIMOB-12558, this is to enable ARC by default in all newly-created Titanium Mobile Module projects. The current workflow is that a user must manually tweak the project to enable it.","New Feature",High,Closed,"2013-09-18 22:24:28","2013-09-18 22:24:28",5
"The Titanium SDK ","iOS: Facebook module throws FBSession: should only be used from a single thread error on reviving app with Facebook request URL","Test case:  # login into Facebook using your Titanium's app  # kill it from Dock  # try to open app with Facebook user-to-user request URL from your notifications section in Facebook or newsfeed story. It should be something like fb116843021780929://authorize?...  # FBSession: should only be used from a single thread red screen appears    XCode console on a device says:      Test application code is simple as a child's tear:      Don't forget to add into your Info.plist next string for Facebook URL chema support:      So:  # run the app  # click Login button  # login into your Fb account  # you will be bring back to the app  # close simulator  # open simulator stand-alone, without titanium  # try next URL (it's similar as from Facebook native app or Safari's web-version of FB):     # you will see FBSession: should only be used from a single thread    I saw many similar questions on Q&A section with no answers :(    P.S. sorry, no time to make a bundle with test application, but I hope I explained it above.",Bug,Low,Closed,"2013-09-10 10:13:33","2013-09-10 10:13:33",1
"The Titanium SDK ","Android: singleTask launchMode with HeavyWeight window hangs after 1st launch","When launching your app with it's main activity set to {{android:launchMode=singleTask}} and it's main window a HeavyWeight one, it will hang on the second and every following launch.    This bug blocks me from allowing users to open my app by using an URL scheme on a webpage or in a email message, send to them when they lost their password, received an invite to play a game etc.    h1. Why use launchMode?    By default, when launching your app via another app, e.g. using an URL scheme in the browser, your apps main activity will be stacked onto the current app's task. If your app was already running in the background, you will have 2 instances of the app running.    Android has a  [launchMode|http://developer.android.com/guide/topics/manifest/activity-element.html#lmode] attribute that allows you to instruct the OS to always open the activity as the root of a new task, using {{singleTask}} as value.    This works fine, but not when the app's main window is HeavyWeight, for example a {{Ti.UI.TabGroup}} or a {{Ti.UI.Window}} with {{modal:false}}.    h1. To reproduce    # Create a new project: {{titanium create -p android -n test}}  # Build (only) to generate manifest: {{titanium build -b -p android}}  # Open the generated {{build/android/AndroidManifest.xml}} and copy the first {{<activity>}} tree to the {{tiapp.xml}} under {{ti:app/android/manifest/application}}. You will need to create the empty {{<manifest>}} and {{<application>}} elements yourself.  # Add {{android:launchMode=singleTask}} to the {{<activity>}} element and save {{tiapp.xml}}.  # Build the app to the device: {{titanium build -p android -T device}}  # Open the updated {{AndroidManifest.xml}} to confirm the only effective change is the newly added attribute.  # Seeing the app properly launched on the device, move it to the background by clicking the device's home button.  # Lookup the app on the device and launch it again. You'll see a black screen with a titlebar ({{test}}) only.  # Now replace the app's {{app.js}} with a lightweight window instead of the default heavyweight tabgroup:        # Repeat steps 5-8 and this time, the app will properly launch.",Bug,High,Closed,"2013-08-26 08:57:50","2013-08-26 08:57:50",8
"The Titanium SDK ","Android: TableView header and footer cannot be removed or resized dynamically","In contrast with iOS, on Android the {{headerView}} and {{footerView}} of a {{TableView}} cannot be removed or resized ({{height}}) after once the window is opened and the table layed out.    Since the [docs|http://docs.<USER>com/titanium/latest/#!/api/Titanium.UI.TableView] do not mention any platform differences, I'd expect this to work on Android like it does on iOS.    h1. Steps to reproduce    # Create a new project: {{titanium create -p ios,android -n testHeader -d . --id test.header}}  # For {{app.js}} use:        # Run the app on both Android and iOS devices.  # Tap the red headerView and notice that only on iOS it resizes both the header and footerView.  # Tap the green footerView and notice that only on iOS it removes both the header and footerView.",Bug,Low,Closed,"2013-08-15 08:17:21","2013-08-15 08:17:21",5
"The Titanium SDK ","iOS: Ti.Blob.imageAsResized always returns a png image","This is the same issue as [TIMODOPEN-228|https://jira.<USER>org/browse/TIMODOPEN-228] but for Ti.Blob (core).    On iOS, all images created by Ti.Blob.imageAsResized are of type png (mime-type image/png) instead of jpeg.     As a result resized images are much bigger (in terms of bytes) than what they're supposed to be had they been jpegs.    This seems to be related to the handling of alpha channel, according to [TIMODOPEN-228|https://jira.<USER>org/browse/TIMODOPEN-228]     It works fine on android (Ti.Blob.imageAsResized returns jpegs).",Bug,High,Closed,"2013-07-05 16:05:43","2013-07-05 16:05:43",1
"The Titanium SDK ","iOS7: Icon assets included in app based on older naming convention","h5. Description:  When specifying an icon for iOS in an iOS 6 and iOS 7 project, the user will select app icon.png (or any other named icon as base). The icons will be copied over to the project beginning with the base name and then matching any other icons. For example, specification of app icon.png as the base, app <EMAIL> which is the retina version, will be copied.     This presents a challenge in iOS7-only projects. Since we recommend the naming convention formerly followed by apple (appicon.png, <EMAIL>, appicon-72.png, app <EMAIL>, etc...) there is no clarity on how to set the icon names for iOS 7 apps as the name of the base icon we might expect to be <EMAIL>. If there is no icon called appicon.png and this is selected in tiapp.xml then the packaged app may show the correct icons on the various supported devices, but the Xcode archive may show the titanium ribbon.    Apple should attempt to choose the best icon for the purpose, and this is supposed to work regardless of the name. We will investigate. If this is the case, the only change would be to documentation.      h5. Steps to reproduce:  1) Attempt to create a project using iOS 7-only icons using our naming convention  2) Select an icon as the base icon    h5. Result:  Only icons that include the base icon name will be included in the project    h5. Expected Result:  All relevant icons for both iOS 7 and iOS 6 are included, regardless of name",Bug,High,"In Progress","2013-09-14 00:09:19","2013-09-14 00:09:19",8
"The Titanium SDK ","iOS: SDK should have under 10 compiler warnings (it currently has 159)","SDK should have under 10 warnings for a customer application.",Bug,Critical,Closed,"2013-09-11 05:19:52","2013-09-11 05:19:52",8
"The Titanium SDK ","Android: Add support for showContactsParams.selectedProperty","The {{showContactsParams.selectedProperty}} callback never gets called. Only the {{showContactsParams.selectedPerson}} does.    h1. Steps to reproduce:    # Run the following app:        # In the console you won't see {{called}}  # Replace {{selectedProperty}} by {{selectedPerson}} and run again  # This time you *will* see {{called}}","New Feature",High,Closed,"2013-09-03 13:51:37","2013-09-03 13:51:37",8
"The Titanium SDK ","Android: Ti.UI.FILL stretches parent views beyond absolutely-sized parent","The following code has a different result on Android then expected and correctly shown on iOS. Compare the two screenshots and see that while the blue {{v3}} view correctly fills the height of its fixed-sized green {{v2}} view, it causes the red {{v1}} view to fill to its parent instead of size to its child.    h1. Code to reproduce        h1. Workaround    On line 4, replace {{Ti.UI.FILL}} by {{'100%'}} and it will work as expected in *most* cases. The difference is that if in the exampel above you would set {{v3.top: 50}} and {{height: '100%'}} then the height will be 100 and not 50 as with {{Ti.UI.FILL}}!",Bug,Low,Closed,"2013-08-30 10:36:30","2013-08-30 10:36:30",13
"The Titanium SDK ","iOS: Cannot use a module when using a listview childtemplates","The issue is that I cannot use the styled label module that <USER>built in a ListView.  The type for the ChildTemplates is expecting a string and cannot recognize the module.  Please Advise.","New Feature",Medium,Open,"2013-07-18 02:31:24","2013-07-18 02:31:24",13
"The Titanium SDK ","LiveView: cannot see Alloy.Globals in modules when using LiveView","h2. Problem description  When using LiveView, the global variable Alloy.Globals is not defined in modules. Disabling LiveView would not throw the error.    h2. Code to reproduce  Create an Alloy app with this code:    index.js      lib/test.js      Add the global variable in alloy.js:        h2. Actual behavior  When running the app with LiveView on, the following error is thrown:        Without LiveView, the error is not shown. Note that in index.js the error is not thrown.",Bug,High,Closed,"2013-08-29 15:00:03","2013-08-29 15:00:03",13
"The Titanium SDK ","Android: Javascript can't get path of assets folder of module","h6.Problem  Client is trying to get images from Android Titanium Module and refer to them via Javascript.     So instead of return a TiBlob they would like to get path access resolved so they just have to link image in their image proxy on a similar way like:        image.png would be contained at /RootModuleFolder/assets/image.png    As the assets/README suggests, if you put the image.png in an images/ subdirectory under assets. Then try to refer to it from a Javascript file.    h6.assets/README      h6.Steps to reproduce  Create the scenario as follows:  1) Create android module  2) Create directory in assets call 'images'  3) Put an image.png in assets/images  4) Create a test app  5) Replace app.js with snippet below.  6) Public the android module into the Test app  7) Launch the test app in an Android Device  8) Notice how nothing shows up    If you create an iOS module in the same way as the android module and you publish it, when running the test app on an iOS device, you'll see the image.    h6.A Snippet      h6.Additional details  If you try any of these paths and attempt to use a TiUIImageView warning below is thrown as a drawable reference:        - 08-27 09:56:56.778: W/TiDrawableReference(3030): (pool-3-thread-2) [632,632] Could not open stream to get bitmap    Other than parity, this can be just a TIDOC issue. But from javascript how does one refer to an image that's included as part of an android module?",Bug,High,Closed,"2013-08-28 22:20:39","2013-08-28 22:20:39",0
"The Titanium SDK ","Code Processor: Add a plugin option to suppress the results","Currently, if a plugin is included and can generate output, it will always generate output. Sometimes we want to include a plugin, but not show its output. A plugin option called suppressOutput that takes a boolean should be supported","New Feature",Critical,Closed,"2013-08-28 22:02:46","2013-08-28 22:02:46",5
"The Titanium SDK ","Android Build: Run Hook","* run (TIMOB-10763 CLI: Android: run hook for Android apps)  ** validate NEW!  *** verify --device exists  ** post-compile  *** if --build-only  **** exit, do not start adb (TIMOB-12034 CLI: Building for android with '-b' -build only flag starts the daemon & waits for the device after building the app)  *** else  **** verify --device still exists  **** support multiple devices (TIMOB-7053 Tooling: Android - when using Run on Device provide support for multiple devices)  **** wait for device  **** install the app (adb install)  ***** if install fails with error INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES, adb uninstall the app, then try again (TIMOB-8665 Android: INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES when installing different app with same app id)  **** if installed successfully, then adb shell am start  **** adb forward debugger and profiler",Story,High,Closed,"2013-08-28 00:18:14","2013-08-28 00:18:14",5
"The Titanium SDK ","Android Build: Package Hook","* package  ** copy apk file output directory",Story,High,Closed,"2013-08-28 00:01:33","2013-08-28 00:01:33",2
"The Titanium SDK ","Android Build: Package and sign app","* package  ** package assets (aapt package)  ** only package internal Titanium jars that are required based on the AST parsing (TIMOB-6845 Android: Ti should include only the used features/libs into a new app)  ** create unsigned apk (basically a zip file)  *** if production, strip debugging symbols (TIMOB-2363 Android: Strip debugging symbols from JARs when building for production)  *** if classes.dex (returned by dex command) does not exist in apk or has been updated, then write the classes.dex to the apk file  *** for each abi, add the native/libs/<abi>/* to the apk file (TIMOB-14242 Android: x86 libs not included in production APK)  ** run jarsigner on unsigned apk  *** pass in the store password and key password (if exists) (TIMOB-6423 builder.py should accept an alias password)  ** zipalign signed apk",Story,High,Closed,"2013-08-27 23:57:51","2013-08-27 23:57:51",5
"The Titanium SDK ","Android Build: Build Java files and run dexer","* if need to build java files and dex (TIMOB-2209 Android: Re-enable incremental build)  ** build generated classes (aka compile java source)  *** if any modules, update the classpath  *** add titanium-verify.jar to classpath  *** if not production, add debug and profiler jars  *** if production and proguard enabled, allow proguard to run (TIMOB-2782 Android: Generate / Run a Proguard configuration based on API usage)  *** run javac on .java files  **** build for all desired abis (TIMOB-15305 Android: Add x86 support to Distribution Build)  **** NOTE: make sure spaces work, otherwise detect if path has spaces and error before build (TIMOB-3180 Android: JAVA_HOME not recognized when launching some Android applications)  ** make sure jars aren't included twice before running dexer (TIMOB-14963 Android: Ti.Map and Ti.Cloudpush return already added: Lcom/google/android/gms/games/achievement/Achievement)  ** fire build.android.dexer function hook  *** run dexer",Story,High,Closed,"2013-08-27 23:53:54","2013-08-27 23:53:54",5
"The Titanium SDK ","Android Build: Create AndroidManifest.xml","* create AndroidManifest.xml  ** check if using a custom platform/android/AndroidManifest.xml  *** validate for sane values  ** otherwise generate the build/android/AndroidManifest.xml  ** fill in missing info  ** if using Ti.Geolocation, make sure the correct permissions are added to the AndroidManifest.xml (TIMOB-5749 Android: AndroidManifest.xml not properly created when using Ti.Geolocation events)  ** make sure all Titanium Modules have correct dependency permissions added to the AndroidManifest.xml (TIMOB-14899 Tooling: Include Google Maps V2 metadata into timodule.xml so can be added to the manifest with the correct app id)  ** if using custom AndroidManifest, write the default to a separate file  ",Story,High,Closed,"2013-08-27 23:45:31","2013-08-27 23:45:31",5
"The Titanium SDK ","Android Build: Compile resources","* compile resources  ** copy Resources directory (exclude all platform directories)  *** load dependency.json  *** load modules.json  *** handle tiapp.xml ti.android.include_all_modules property  *** walk specified directory  **** ignore globally ignored files and directories (TIMOB-2733 Android: Getting Error at Rebuilding after changing tiapp.xml) (TIMOB-7816 Android: Ignore files that start with ._)  **** if file is a html file, scan for all <script> tags and mark all app:// URLs to the js minification exclusion list  **** if file is a jss file, ignore it  **** if file is a js file:  ***** AST parse the .js files to find Titanium symbols  ****** keep track of what Titanium APIs are being used  ***** fire build.android.compileJsFile function hook  ****** minify the .js files using UglifyJS instead of Closure Compiler (TIMOB-2662 android SDK > 1.5.0 Compiling Javascript Resources each time) (TIMOB-13974 Android: KS takes a long time to package - I've seen nine minutes, others report longer in some cases)  ****** NOTE: make sure we can read utf-8 encoded .js files (TIMOB-3186 Android: Persistent internal compiler error)  **** if file is a drawable resources, copy it to the drawable directories  ***** warn if copying duplicate drawable dirs (i.e. high/medium/low => hdpi/mdpi/ldpi)  ***** allow either .jpg or .png files (TIMOB-6666 Android: Allow users to specify Default.jpg in place of Default.png)  ***** copy xhdpi images (TIMOB-7827 Android: Please add support for extrahigh density (320 dpi) devices)  **** else copy the file  **** NOTE: for each file copied, be sure to fire build.android.copyResource function hook  ** copy Resources/android  *** same as copy Resources  ** copy platform/android  *** same as copy Resources  *** NOTE: be sure all files are merge such as res/layout files (TIMOB-12372 Android: Layout resources in res/layout/filename.xml no longer work)  ** copy module resources  *** same as copy Resources  ** copy commonjs modules  *** same as copy Resources",Story,High,Closed,"2013-08-27 23:38:08","2013-08-27 23:38:08",13
"The Titanium SDK ","Android Build: Init the build/android directory and files","* init the build/android directory and files  ** if force rebuild, remove build/android if exists  ** create build/android if does not exist  ** remove directories, if exists  *** build/android/src  *** build/android/res  ** create directories, if does not exist  *** build/android/assets  *** build/android/gen  *** build/android/gen/<split app id>  *** build/android/lib  *** build/android/res  *** build/android/res/drawable  *** build/android/res/values  *** build/android/src (IS THIS EVEN USED??? if not, we don't need the aidl file)  ** copy over files  *** AppInfo.java => build/android/gen/<split app id>/<classname>AppInfo.java  *** AndroidManifest.xml => build/android/AndroidManifest.xml  *** App.java => build/android/gen/<split app id>/<classname>Application.java  *** Activity.java => build/android/gen/<split app id>/<classname>Activity.java  *** classpath => build/android/.classpath  *** project => build/android/.project  **** make sure the .project file is a valid Eclipse project (TIMOB-11700 Make generated android projects importable into eclipse)  *** default.properties => build/android/default.properties  *** gitignore => build/android/.gitignore  *** NOTE: each of the files must be converted from mako templates to handlebars templates  ** merge custom classpath with build/android/.classpath  ** generate activities from tiapp.xml  ** generate services from tiapp.xml  ** write app_modules to build/android/bin/assets/app.json???  * create directories, if does not exist  ** build/android/bin  ** build/android/bin/assets  ** build/android/bin/assets/Resources  ** build/android/bin/classes",Story,High,Closed,"2013-08-27 23:33:12","2013-08-27 23:33:12",5
"The Titanium SDK ","Android Build: Detect if need to force rebuild","* detect if need to force rebuild (TIMOB-4510 Force full re-build discrepancy between Android and iOS - Android requires modified tiapp.xml)  ** yes if --force flag is set  ** yes if build/android does not exist  ** yes if build/android/AndroidManifest.xml does not exist  ** yes if app id changes  ** yes if app name changes  ** yes if app version changes  ** yes if publisher changes  ** yes if url changes  ** yes if copyright changes  ** yes if description changes  ** yes if icon changes  ** yes if analytics changes  ** yes if guid changes  ** yes if fullscreen changes  ** yes if navbar-hidden changes  ** yes if classname changes  ** yes if deploy type changes  ** yes if compile js changes  ** yes if list of modules change  ** yes if any of the module's manifest or api name changes  ** yes if any module's binary is changed (TIMOB-5837 Tooling: Adding a module requires a clean build)  ** yes if new properties are added to tiapp.xml  ** yes if Android target SDK version changes  ** yes if any changes to activities in the Android <activities> in the tiapp.xml  ** yes if any changes to activities in the Android <services> in the tiapp.xml  ** yes if any jss files change",Story,High,Closed,"2013-08-27 23:30:17","2013-08-27 23:30:17",5
"The Titanium SDK ","Android Build: Validate command line arguments and tiapp.xml settings","* validate command line options  ** --alias  ** --android-sdk  ** --avd-abi  ** --avd-id  ** --avd-name NEW!  ** --avd-skin  ** --device NEW! (TIMOB-12661 CLI: Support adb's -s option for pointing a build to a specific emulator or device)  ** --debug-host  ** --deploy-type NEW! (TIMOB-9139 Android: Tooling: How to set the deploytype)  ** --key-password NEW! (TIMOB-6423 builder.py should accept an alias password)  ** --keystore  ** --output-dir  ** --store-password (formerly --password)  ** --target (emulator, device, dist-playstore)  * if 64-bit Linux  ** make sure i386 architecture has been added (not sure how to check, but to add run dpkg --add-architecture i386)  ** make sure ia32-libs package is installed (TIMOB-13520 Android Emulator: improve error message from missing ia32-libs dependency on linux)  ** make sure /usr/lib/libGL.so exists  * enforce sdk dependencies  ** check java version is <=1.6 (TIMOB-5010 Latest version of Java unusable for building Android projects)  * check that build directory is writeable  * read tiapp.xml  ** read proguard flag (TIMOB-2782 Android: Generate / Run a Proguard configuration based on API usage)  ** determine tool api level  *** ensure correct version fallback (TIMOB-11603 Android: invalid android path in bash profile results in project creation error, improve error message)  ** packageid must contain at least one period (prepend com. if no periods present)  ** appversion should be the tiapp.xml <version> and is injected into the AndroidManifest.xml (TIMOB-559 Android: Appversion never taken from tiapp.xml)  ** default minimum Android SDK is 2.3.3 (10)  ** default target Android SDK is latest or 2.3.3 (10)  ** classname is the app name, capitalized, only alpha-numeric and _, prepend _ if starts with a number  ** make sure deploy type is correct  ** validate ti.ui.defaultunit property (must be 'system', 'px', 'dp', 'dip', 'mm', 'cm', or 'in') (TIMOB-9682 Android: Packaging:No warning displayed for default system value of 'ti.ui.defaultunit')  ** get ti.android.loadfromsdcard property  ** get ti.android.compilejs property  ** get ti.android.include_all_modules property???  * scrub debugger/profiler args  * find the android sdk home  * validate icon from tiapp.xml  * detect modules from tiapp.xml  ** if required module is not found, fail (TIMOB-9930 Android: Packaging: With a non-existing module added to the project in the tiapp.xml,app packages without error and gets installed on device) (TIMOB-14064 Android build select wrong module jars for dex build)  ** load module hooks  *** allow module hooks to modify classpath (TIMOB-14170 Android: Provide mechanism for partners to specify the classpath for builds)",Story,High,Closed,"2013-08-27 23:27:50","2013-08-27 23:27:50",13
"The Titanium SDK ","iOS7: Grouped TableView - First Header has wrong height","*Problem*  On iOS 7, when adding sections with headerTitles the first header is the wrong height. The next header is the right height. See test case.    *Actual Result*  The first header is to high.    *Expected Result*  The first header should be the same hight as the no. 2 3 4…    *Test case*  ",Bug,Medium,Closed,"2013-08-26 07:49:10","2013-08-26 07:49:10",0
"The Titanium SDK ","Android: Ti.Map and Ti.Cloudpush return already added: Lcom/google/android/gms/games/achievement/Achievement","I'm trying to add Push to my app (iOS/Android) but I'm getting the following error message when I compile the android version:       Modules added:      other users confirm that ti.cloudpush and ti.map inside the same project will cause this error for them too.    Thread: http://developer.<USER>com/question/155815/already-added-lcomgoogleandroidgmsgamesachievementachievement",Bug,High,Closed,"2013-08-21 06:25:15","2013-08-21 06:25:15",3
"The Titanium SDK ","CLI: Builds where tiapp.xml sdk-version differs from selected SDK fail to properly fork in Windows","The CLI tries to strip the first argument if it's the actual node executable before parsing the args. The problem is on Windows the node executable can sometimes contain the .exe and the following line of code fails:        This line needs to look like this:    ",Bug,High,Closed,"2013-08-21 20:05:11","2013-08-21 20:05:11",1
"The Titanium SDK ","MobileWeb: <allow-touch> option not properly toggling touch events for Ti.UI and ScrollableView","The <allow-touch> flag needs to override the touch detection, but we forgot to add this to titanium/Ti/UI/ScrollableView.js and titanium/Ti/UI.js. We simply need to change both instances of        to    ",Bug,Critical,Closed,"2013-08-21 18:37:07","2013-08-21 18:37:07",2
"The Titanium SDK ","Tooling: Include Google Maps V2 metadata into timodule.xml so can be added to the manifest with the correct app id.","h6.Feature Request  To add ability to have the application name automatically updated in the timodule.xml file when building an application.     h6.Rationale  Forgive me if I'm missing something obvious. The problem is that if they use the included module they have to assume it will be upgraded and replaced when a new Titanium SDK is released. Since the module will be replaced they cannot use the timodule.xml file to add the app id to the required permissions for the maps module. We have to add the permissions below to the tiapp.xml file.        When we add them like that to the tiapp.xml file we get errors like:        h6.Steps to reproduce  Do a project clean, and build the android app and the map did not load. We then checked the generated AndroidManifest.xml file and looked for the required permissions that are outlined in the index.html file of the maps module. In the AndroidManifest file I found that the following permissions were present:        The other 4 were not present in the manifest file and they need to be included for the Maps Module to work. Client would like to propose that the following be included in the timodule.xml that is included with the maps module that way they are automatically added to the manifest with the correct app id. The 4 which should be added to timodule.xml are:        h6.Additional info  Client also tested this by modifying the timodule.xml file for the module in the following directory:     - /Library/Application Support/Titanium/Modules/android/ti.map/2.1.1/     When they just added those 4 lines the maps module started working properly. Also can be confirmed that the 4 missing permissions/features are now present in the AndroidManifest.xml file.",Bug,High,Closed,"2013-08-16 18:58:53","2013-08-16 18:58:53",3
"The Titanium SDK ","Android Device: support run on device console output","Android Device: support device console output.    Currently if you launch an app on android device, the runtime output does not appear in the console. This is basic functionality.    However, we do support debug on device output and emulator output, so this is also a parity issue.    Test Steps:    1. Launch app on Android Device (Run > Android Device).    Actual Result:    Build logs appear in console, runtime logs do not. The last line in the console is:    [INFO] :   App installer shutdown successfully","New Feature",High,Closed,"2013-08-13 23:07:10","2013-08-13 23:07:10",1
"The Titanium SDK ","LiveView: when device and machine are not on the same network, no graceful error message is displayed","h5. Problem description  In order to work, LiveView development machine and device must be on the same network. When this is not happening, there is no graceful error message to inform the user.     On Android a Runtime error is displayed and on iOS the app is stuck at the splashscreen.",Bug,High,Closed,"2013-08-12 21:23:52","2013-08-12 21:23:52",5
"The Titanium SDK ","ProjectTemplate: values used as comparison to determine device form factor are wrong","h5. Problem description    In <USER>Studio template samples for classic projects, the values used as comparison to determine if the device is a tablet or a handheld are outdated and could lead to a wrong detection.     h5. Steps to reproduce  Create a new Single Window Project and open app.js. Check line:      A Google Galaxy Nexus device (for example) has those values:      As a result, it is being detected as a 'tablet' while is a 'handheld' device.",Bug,High,Closed,"2013-08-10 01:38:09","2013-08-10 01:38:09",5
"The Titanium SDK ","iOS: Prevent clearing TextField after password field had focus","*Problem*  On iOS textfields are cleared by default after some password field had the focus. Is this something that could be prevented. I looked at the docs for textfields, but either I cannot find it or it just isn't there.    *Example code to reproduce*      *Steps to reproduce*  1. click in the password field  2. click in the normal textfield  3. press backspace    *Expected result*  The last character of the textfield is deleted    *Actual result*  The entire contents of the textfield is now cleared instead of only the last character.",Bug,Low,Closed,"2013-08-09 12:58:52","2013-08-09 12:58:52",3
"The Titanium SDK ","CLI: Improve detection of Android SDK and SDK Home locations","The Android environment detection library needs a few additional features for the build command to properly validate the development environment.    * detect Android SDK  ** detect abd location (TIMOB-2760 need to be able to ref adb from either /tools or /platform-tools subdir)  ** detect proguard availability (TIMOB-2782 Android: Generate / Run a Proguard configuration based on API usage)  ** search configured Android SDK path first, then try ANDROID_SDK environment variable (TIMOB-8658 Android: Switch search order of folders/environment variables in androidsdk.py)  ** if 64-bit Linux  *** check if ia32-libs package is installed (dpkg-query -l ia32-libs) (TIMOB-13520 Android Emulator: improve error message from missing ia32-libs dependency on linux)  *** check if /usr/lib/libGL.so exists  *** check if i386 architecture set in dpkg  * detect Android SDK Home (ANDROID_SDK_HOME)    ","New Feature",Critical,Closed,"2013-08-08 18:30:28","2013-08-08 18:30:28",13
"The Titanium SDK ","CLI: Create Genymotion Library","We need an Genymotion library that provides the following functions:    * detect Genymotion (TIMOB-14637 Android: Fix Titanium Build Script in order to support Genymotion Android Emulator)  * launch emulator","New Feature",Critical,Closed,"2013-08-08 17:41:14","2013-08-08 17:41:14",20
"The Titanium SDK ","CLI: Create Android Emulator Library","We need an Android emulator library that provides the following functions:    * create AVD  ** improve emulator naming convention (TIMOB-1872 Android: Fix AVD naming scheme)  * launch emulator  ** make sure adb server is running  ** if the emulator we want is already running, return  ** if avd does not exist, create it  ** if skin is not specified, select a valid skin for the AVD's Android SDK (TIMOB-13582 CLI: Launching emulator without specifying skin will use HVGA and will fail if chosen AVD does not support HVGA)  ** custom launch params (TIMOB-2646 Android: Feature Request: Customized launch params)  ** gracefully handle when emulator doesn't start in timely manner (TIMOB-9153 Android: Deployment: Android Emulator intermittently fails to launch app after timed out)  ** NOTE: do not launch a useless emulator, especially on Windows (TIMOB-4730 Android 3.2 Simulator behavior on windows is very poor (not launched at all or useless emulator launched))  ** pipe emulator output to logger (TIMOB-13381 Android Emulator: <USER>launches in new terminal on Windows)  ** fire callback when emulator has booted  ** fire callback when sdcard is ready  ** fire callback when emulator is quit (TIMOB-12604 Android: Closing the emulator, 'Emulator has exited' log in not printed on console)  ** NOTE: be careful when running multiple x86 instances as to avoid Starting emulator for AVD 'titanium_10_800x1280_armeabi-v7a' \ emulator: The memory needed by this VM exceeds the driver limit. \ HAX is not working and emulator runs in emulation mode errors  * kill emulator  ** NOTE: make sure emulator is properly killed on Windows (TIMOB-7468 Android: tooling - Rhino/V8 - On windows systems during emulator build, console reports error attempting to kill emulator <USER>  * NOTE: make sure to support directories with &, especially on Windows (TIMOB-2527 Android: App launch/build problem if ampersand in home folder name)","New Feature",Critical,Closed,"2013-08-08 17:24:29","2013-08-08 17:24:29",20
"The Titanium SDK ","CLI: Create ADB Library","We need an ADB library that provides the following functions:    * devices  * start-server  * kill-server  * install  ** allow installation to a specific device/emulator (TIMOB-12600 CLI: building for Android device while the emulator open generates a wrong Error Message)  ** gracefully handle FAILED_INSUFFICIENT_STORAGE errors (TIMOB-14701 CLI: Android: For emulator builds, check that emulator has sufficient space)  *** if insufficient storage space, display instructions on how to resolve (TIMOB-9859 Android: increase AVD storage size to reduce \[FAILED_INSUFFICIENT_STORAGE\] errors)  * shell  * push  * forward  * start app (TIMOB-13105 CLI: Add build support for building android apps on emulator without starting the app)  * kill running app","New Feature",Critical,Closed,"2013-08-08 16:47:58","2013-08-08 16:47:58",20
"The Titanium SDK ","iOS: Unable to set Accept-Encoding header on Ti.Network.HTTPClient ","On the iOS platform, a developer can not set the Accept-Encoding header as one would expect. It is always defaulting to Accept-Encoding=gzip.    We are forcing the Accept-Encoding=gzip on our side because of this line:    [request setAllowCompressedResponse:YES];  (TiNetworkHTTPClientProxy.m line 596)    Basically, the ASIHTTPRequest that we are using defaults to overriding the Accept-Encoding to gzip if this flag above is YES (which is the default). In our TiNetworkHttpClientProxy, we are also specifically setting this flag to YES in the send function without checking to see if the user has overridden the Accept-Encoding header. So in this case that means that we can not override the Accept-Encoding header at all, and it will always default to gzip value.    The fix i propose is pretty easy – we just need to allow the user to set an allowCompressedResponse property on the request object, and then check to see what it is when we are going through the send function and set it accordingly.    Here is my replacement code:     if([TiUtils boolValue:[self valueForUndefinedKey:@cache] def:YES]){       [request setAllowCompressedResponse:YES];   }   else{       [request setAllowCompressedResponse:NO];   }    This is pretty quick and dirty and end the end, you would need to set this flag to false on the XHR in order to allow the Accept-Encoding header to be set, so there may certainly be a more elegant way for this to work.","New Feature",High,Closed,"2013-08-07 22:50:00","2013-08-07 22:50:00",3
"The Titanium SDK ","iOS: Ti.UI.orientationModeFilter to app-wide block orientations","Note: While this spec is for iOS only, consideration in the design should include Android.    On iOS, not all view controllers are under Titanium control (e.g., Mail composer, Activities). Because of issues (especially in 5.x and before), we did not control their orientation. But with iOS 6, native applications can control them. We should provide a means similar.    Ti.UI.orientationModeFilter is an array of orientations allowed with the following pseudocode:    On startup, the info.plist is checked. If no such orientation limits are mentioned, the default for the device (all but upside down for iPod/iPhone, all orientations for iPad) is used.    This property can be changed.    Whenever the OS requests the window's orientation, Titanium reports to the OS the orientationModes as such:  # The orientation flags are set to all orientations.  # If the Ti.UI.orientationModeFilter is valid, change the orientations to that.  # If the window's orientationModes are set, bitwise AND it with the orientation flags.  # if the result is 0, replace the orientation flags with the windows orientationModes, and warn about the edge case.  # Return orientation flags.    The behavior of the Ti.UI.orientationModeFilter changed at any time after startup is undefined. There is no guarantee that changes made to it will propagate to existing windows.","New Feature",Low,Open,"2013-08-07 22:11:01","2013-08-07 22:11:01",8
"The Titanium SDK ","iOS: titleid and messageid properties don't work for AlertDialog","titleid and messageid property doesn't work for alertDialog.    *i18n/en/strings.xml*  {code:xml}   <?xml version=1.0 encoding=UTF-8?>  <resources>   <string name=hello>Hello</string>   <string name=world>world!</string>  </resources>  {code}     *app.js*  {code:javascript}   var win = Ti.UI.createWindow();    var alert = Ti.UI.createAlertDialog({   titleid: hello,   messageid: world  });    console.log(L(hello) +   + L(world));    alert.show();  win.open();  {code}    *Docs*  http://docs.<USER>com/titanium/latest/#!/api/Titanium.UI.AlertDialog-property-titleid",Bug,Medium,Closed,"2013-08-04 21:47:04","2013-08-04 21:47:04",2
"The Titanium SDK ","CLI: Toast says android build succeeded when build failed","If a build fails, TiStudio still says it succeeded, console says (correctly) build failed. See screenshot.    The problem is if the build callback receives an error, it says there was an error, but doesn't exit with a non-zero exit code.",Bug,High,Closed,"2013-04-17 17:13:40","2013-04-17 17:13:40",5
"The Titanium SDK ","Android: Telephone numbers in WebView are not getting auto linked ","*Problem*  Telephone numbers (inside html content) are not getting autoLinked in Android. But it is working on iOS.    Numbers are not auto linked after using format-detection meta tag either.     {code:html}<meta name=format-detection content=telephone=yes>{code}    *Test case*  {code:javascript}  var win = Titanium.UI.createWindow({   backgroundColor : '#fff'  });    var html = <head><body><h3>hello:</h3><ul><li>Call immediately on 0800 111 999:</li></ul></body></head>;    var webView = Ti.UI.createWebView({   height : Ti.UI.FILL,   width : Ti.UI.FILL,   html : html  });    win.add(webView);  win.open();  {code}",Bug,High,Closed,"2013-08-02 11:47:40","2013-08-02 11:47:40",0
"The Titanium SDK ","BlackBerry: 'java' processes belonging to 'Appcelerator Studio' might kill the CPU","h5. Problem description  After installing the BlackBerry tools and using <USER>Studio for building BlackBerry apps, I've experienced intermittent issues, leading to a sluggish and clumsy experience and eventually to completely freezing the system (forcing a hard restart).    From the Activity Monitor, a number of java processes were occupying most of the machine CPU. All those processes were belonging to <USER>Studio Process Group.    It seems those processes are related to BlackBerry development and have been experienced so far only when building projects on BlackBerry.    Attached screenshots of my Activity Monitor and detail of a single <USER>    h5. Notes  Another similar issue occurred in the past: https://jira.<USER>org/browse/TISTUD-3514",Bug,Critical,Closed,"2013-07-26 23:21:21","2013-07-26 23:21:21",8
"The Titanium SDK ","Android: Automatically generate ProGuard configuration file","Hi,    Create a sample Android module and build it. Then follow this step by step.    1. Extract the contents of the zip file inside the dist folder.  2. Extract the JAR file obtained from the zip file.  3. Use JAD (Decompile tool) to decompile the any *.class file.    You will observe that the entire source code is displayed. There is no obfuscation. I think <USER>must provide an obfuscation procedure during the build <USER>    If any such <USER>is present (using ProGuard for example), then can you please let us know. If no such <USER>exists then it will be a great idea to add this feature. This will increase the security and also reduce the module size.","New Feature",High,Open,"2013-07-31 10:49:01","2013-07-31 10:49:01",21
"The Titanium SDK ","iOS: Accessibility: ButtonBar: Accessibility does not work on Button Bar ","iOS: Accessibility: ButtonBar: Accessibility does not work on Button Bar. The Label, Value or Hint are not voiced over.  This is not a regression. It occurs since sdk 3.0.0.GA.    Steps to reproduce:  1. Run the app as Accessibility Acceptance Access_1102 iOS Only under Accessibility module.  2. Touch the first Buttonbar (with LVH defined in sequence)     Actual:  if 'red' is touched then 'red button 2 of 3 is spoken.  The Label, Value or Hint are not voiced over.    Expected:  2. The device reads aloud:  buttontext, tab, (button number) of (total number of buttonson buttonbar)  [eg. 2 of 3]  followed by Buttonbar1, Value1, Hint1 ",Bug,Medium,Closed,"2013-08-01 09:54:42","2013-08-01 09:54:42",3
"The Titanium SDK ","CLI: Android: For emulator builds, check that emulator has sufficient space","See if there's a way to check how much space is free in an AVD before install the app. We probably will need to build the app first to get the APK file size.","New Feature",High,Closed,"2013-07-30 21:55:53","2013-07-30 21:55:53",2
"The Titanium SDK ","LiveView: Create Unit Test Suite",,Story,Low,Closed,"2013-07-30 20:08:04","2013-07-30 20:08:04",20
"The Titanium SDK ","Android: Image with Menu text on Menu Item for Android Menu is not being displayed and menu text is cut off","Image with Menu text on Menu Item for Android Menu is not being displayed and menu text is cut off.    Steps to Reproduce:    1.Install and launch KS.  2.Go to Base UI >Menu (Android)>Menu Handlers (Window Options)  3.Press on open window  4.Press the menu button  5.Press on close window.    Expected Result:  3.Window with blue view should show up  4.Should see a graphic with menu text.  5.Window should close.    Actual Result:  3.Window with blue view is seen.  4.No image is seen and menu text is also cut off.  5.Window gets close.    Not a Regression as occurs in 3.1.1.GA also",Bug,Medium,Closed,"2013-07-30 12:10:55","2013-07-30 12:10:55",0
"The Titanium SDK ","CLI: When selected SDK is not 3.0.0 or 3.0.2 and building for 3.0.0 and 3.0.2, verify Node.js version is 0.8.x","If the CLI's selected Ti SDK is 3.1.0.GA and the tiapp.xml is set to 3.0.0.GA or 3.0.2.GA, then those SDKs require Node.js 0.8.x. Today we allow those builds to fail. The build should be smarter to detect those SDKs and if Node.js is not 0.8 and fail gracefully.","New Feature",High,Closed,"2013-07-25 02:33:29","2013-07-25 02:33:29",2
"The Titanium SDK ","Android: Fix Titanium Build Script in order to support Genymotion Android Emulator","Genymotion is an enhanced android emulator that leverages x86 emulation with builtin HAXM-like optimizations and Google APIs.    In order to have an simulator with a performance like the iOS Simulator we need to setup a x86 android emulation with Intel HAXM support. The problem is that by using the native AVD on Android SDK you can do this setup BUT without the Google APIs, namely the GMaps API, which makes testing apps depending on those APIs, impossible on this high performance simulation.    Although it is possible to add Google APIs to a standard x86 AVD, the <USER>is very complex and involves copying the libraries from other non-x86 AVDs and rebuilding a system image which takes a lot of time and effort for each simulator setup you want to have.    So Genymotion does it all under the hood and allows us to select between several android models and even simulate external sensors and GPS location, much like the Apple Simulator does.    The standard Titanium build script has some problems that causes the Simulator session not to be recognized as a valid deployment target (using titanium build -p android -T device), even though adb successfully recognizes the simulation under adb devices.    In order to fix this I have found some hints on a russian weblog and changed it a bit for working on my Mac.    I have successfully run my Titanium app on Genymotion using Titanium CLI by doing the following:      http://reinraus.ru/wordpress/nastraivaem-titanium-studio-dlya-zapuska-prilozhenij-v-android-x86/    It is written in Russian, so please use the Google  Translate tool, he has made 3 changes on the build script.    The tutorial is for windows, so if you're running Titanium on a Mac or Windows, just change the first patch from:        to:        It seems there is still a tiny problem with Logcat on the end, but the app successfully run on Genymotion after this patch.","New Feature",Medium,Closed,"2013-07-23 19:05:26","2013-07-23 19:05:26",3
"The Titanium SDK ","iOS: Typo in saving screen error message","The text given if you call saveToPhotoGallery() with an invalid media type string is:    invalid media type: Exepcted either TiBlob or TiFile, was: String    Exepted is spelled wrong and Invalid should be capitalized to be consistent with other error messaging.",Bug,Trivial,Closed,"2013-07-19 01:20:22","2013-07-19 01:20:22",1
"The Titanium SDK ","LiveView: Create Error/Warning Screen","create window to display liveview errors/warnings.    examples: error connecting to server, parse error, etc..","New Feature",High,Closed,"2013-07-17 18:24:44","2013-07-17 18:24:44",8
"The Titanium SDK ","iOS: keyboardFrameChanged before keyboard is shown","keyboardFrameChanged event doesn't do much good as it is fired after the keyboard has already been displayed. to create responsive layouts with different keyboard sizes we need to know keyboard size BEFORE the keyboard is displayed.    iphone/Classes/AppModule.m line 386-407 could be changed to something like this    {code:objc}  -(void)startup  {   WARN_IF_BACKGROUND_THREAD_OBJ; //NSNotificationCenter is not threadsafe!      NSNotificationCenter * nc = [NSNotificationCenter defaultCenter];      [nc addObserver:self selector:@selector(willShutdown:) name:kTiWillShutdownNotification object:nil];      [nc addObserver:self selector:@selector(willShutdownContext:) name:kTiContextShutdownNotification object:nil];      #if __IPHONE_OS_VERSION_MIN_ALLOWED >= __IPHONE_5_0      if ([TiUtils isIOS5OrGreater])      {          [nc addObserver:self selector:@selector(keyboardFrameChanged:) name:UIKeyboardWillChangeFrameNotification object:nil];      }  #else            [nc addObserver:self selector:@selector(keyboardFrameChanged:) name:UIKeyboardWillShowNotification object:nil];      [nc addObserver:self selector:@selector(keyboardFrameChanged:) name:UIKeyboardWillHideNotification object:nil];      [nc addObserver:self selector:@selector(timeChanged:) name:UIApplicationSignificantTimeChangeNotification object:nil];  #endif             [super startup];  }  {code}    Either that or provide access to both Will and Did.    e.x.    {code:javascript}  Ti.App.addEventListener('keyboardFrameChanged', function(e){   var val = Ti.Platform.displayCaps.platformHeight - e.keyboardFrame.y;   $.container.animate({bottom:val, duration:300}, function() {          Ti.API.log(handleAnimateEnd);      });  });  {code}","New Feature",Low,Closed,"2013-07-12 21:38:11","2013-07-12 21:38:11",8
"The Titanium SDK ","Android: setHeaderView for Titanium.UI.TableViewSection","Currently, it is only possible to set the *headerView* of a TableViewSection at creation-time in Android.    It would be great to use the *setHeaderView* method for Android too. In the Docs there is no note that this method is not available in Android: [http://docs.<USER>com/titanium/latest/#!/api/Titanium.UI.TableViewSection-method-setHeaderView].    There is only a hint at the *headerView* property description (_On Android, must be set at creation._): [http://docs.<USER>com/titanium/latest/#!/api/Titanium.UI.TableViewSection-property-headerView]    Q&A: [http://developer.<USER>com/question/154498/alloy-how-to-set-controller-as-headerview-to-tableviewsection-in-android]  ",Improvement,Medium,Closed,"2013-07-08 19:54:39","2013-07-08 19:54:39",3
"The Titanium SDK ","iOS: Ti.Map should handle touch events on the view not just annotations","Touch events are currently only fired on Map Annotations and not else where on the map view.   Implement touch events on the Map View.","New Feature",Low,Closed,"2013-07-08 13:36:20","2013-07-08 13:36:20",8
"The Titanium SDK ","Android: Add Ti.Platform.canOpenURL() support","As a developer, I would like to be able to determine if the user has a target app installed on their device without opening that target app. I might do so to provide a fallback, prompt the user to install the app (like the way Google does with their integrated suite of apps on iOS where the UI provides Install buttons for apps that are detected to be missing).     iOS supports Ti.Platform.canOpenURL() to provide this functionality. On Android, I have to call Ti.Platform.openURL() and detect the returned boolean -- but that opens the target app.    The code at http://bencoding.com/2013/02/18/determine-if-intent-receiver-exists-on-android-using-titanium/ might provide a starting point.","New Feature",Low,Closed,"2013-07-02 15:46:22","2013-07-02 15:46:22",5
"The Titanium SDK ","Include platform-specific dependency information underneath Mobile SDK platform subfolder","Titanium/<USER>Studio has a file named sdk_info.json that we grab from a server and use to determine extra dependencies for specific platforms. An example is that we have entries that point the range of Tizen SDKs we support, XCode versions, Android addons/api levels, etc. This information is not something Studio should be maintaining, and it does not take into context the current project's Mobile SDK - so we apply the dependencies globally, regardless of whether the user is using 1.7.5 or 3.2.0 - which can mean the dependencies are not correct (older versions of the SDK supported older ranges of XCode and Tizen, e.g.).    This knowledge and maintenance of dependencies should be pushed to the individual platforms, ideally in some relatively standard dependency.json file that is effectively just the segment of the sdk_info.json for that platform.    Here's the current sdk_info.json file. This is a good starting point, but there are deficencies I will point out after:      In particular for Android the regular expressions used are brittle and difficult to reconstruct since they match against the expected installed directory/filenames, while we need to compare against an xml file with the segments broke out into fields. i.e. addon-google_apis-google-10 is the directory on disk, but in xml the google_apis is the name-id value, google is the vendor_id value and 10 is the api level. Ideally we'd break that out more explicitly: Here's a suggestion for how the android platforms' file would look:      In general my suggestions are to use Node/npm semantic versioning strings rather than our haphazard version, range or regex approach. Additionally, explicitly state the addon unique id as a key (here I'm assuming the unique id is a combination of name_id and vendor_id). Lastly, break out the dependencies required by mobile versus module development.    As for the URLs we have here, I'm not sure if we should be including them here or not.",Story,High,Closed,"2013-07-01 14:02:39","2013-07-01 14:02:39",1
"The Titanium SDK ","LiveView: iOS simulator is no longer updated once Android emulator is terminated when both are run with LiveView","1. Create a mobile project (e.g. the default two-tab classic project);  2. Run iPhone simulator with LiveView;  3. Run Android emulator with LiveView;  4. Updating app.js and confirm LiveView is working for both;  5. Exit Android emulator;  6. Updating app.js.    Expected result: iPhone simulator will continue to update the app.    Actual result: iPhone simulator no longer updates.    Here is the end of the log:        It appears the LiveView server got disconnected when Android emulator exited, but it didn't try to re-launch the server, and future reload events, although fired, could not update the app.  ",Bug,Critical,Closed,"2013-06-27 23:28:08","2013-06-27 23:28:08",8
"The Titanium SDK ","Android: JS proxies are prematurely cleaned up when dalvik gc is triggered ","Originally from https://jira.<USER>org/browse/TIMOB-13664:    The problem is about Javascript scope for Titanium objects. In the logs, the problem was clearly after a garbage collect, so, first of all, we created a small module called androidgc which simply launch Android garbage collector (not the V8 GC).  You can find this module here : https://github.com/ChrOnOs83/TiModuleAndroidGC    Then, we decided to use your files and made it as simple as possible. We finally got a unique app.js file with this content :        When you run this code on your Android Device, you should press many times on the GC button, because garbage collector may not clean your ressources each time...    If GC has be done correctly, the second button press will fail, because the label is not here anymore.  If you add the label to the view, and then change its title, no problem  If you create the label in the event listener, no problem    *If you makes a reference to a global variable (without the _var_ keyword for example), it works*    If you put the function in a CommonJS module, the same rules apply.    So... Titanium objects created in a function (all the Ti.something) may be killed by garbage collector at any time if they are not attached to a view/window, or declared as global var.    It breaks the Javascript scope pattern...  ",Bug,High,Closed,"2013-06-26 18:46:16","2013-06-26 18:46:16",34
"The Titanium SDK ","Android: Enable Media.openPhotoGallery to select multiple media items instead of 1 at a time.","In relation to this Q&A thread:    http://developer.<USER>com/question/153838/select-multiple-images-using-photo-gallery-picker-android-and-ios    Would it be possible to add a property/the functionality to Media.openPhotoGallery() to enable the selection of multiple media items? Maybe something like: itemLimit, which defaults to 1, but by setting to a greater value enables multiple selection functionality?","New Feature",Critical,Closed,"2013-06-25 20:47:14","2013-06-25 20:47:14",3
"The Titanium SDK ","Android: applyProperties() does not apply custom properties to proxy","h2. problem    When using {{applyProperties()}} to add a number of properties to a Titanium proxy object, custom properties are not added on Android. On iOS and Mobileweb all properties, including custom ones, are added with the {{applyProperties()}} call. Android leaves the custom properties as {{undefined}}.    h2. expected    Android should behave like other supported platforms and attach custom properties to the Titanium proxy object when they are added via {{applyProperties()}}.    h2. test case      h2. output    iOS does not show the {{backgroundGradient}} after the {{applyProperties()}} call, but this is a peripheral issue not associated with this ticket.    h4. iOS 6.1 iPhone sim      h4. Android 2.3.3 HVGA emulator      h4. mobileweb + chrome  ",Bug,Low,Closed,"2013-06-19 15:08:03","2013-06-19 15:08:03",8
"The Titanium SDK ","LiveView - Running multiple instances of the application on iOS and Android, iOS instances lose connection to LiveView Server","When trying to run multiple instances of the application with Liveview enabled across multiple devices/platform notice that Android will continue to update, however iOS instances lose the connection and do not continue to update.    (have validated this against iOS on Device and iOS on Simulator).    See attached video for further clarification.    steps to reproduce:    1) enable an existing application (simple screen) for LiveView  2) run android and iOS builds (emulator/simulator)  3) make a change to the code    Expected Behavior:  Both instances of the application should update continuously    Actual Behavior:  Android will continue to update, however iOS will stop updating after it updates once. Simulator or Device will need to restart to show updates.      ",Bug,Critical,Closed,"2013-06-17 18:48:58","2013-06-17 18:48:58",8
"The Titanium SDK ","LiveView: Does not trigger code errors","*Steps to reproduce* 1. Create a default application 2. Enable LiveView in Run Configurations 3. Run on iOS simulator 4. Replace win1.add(label1); into win1.add(mylabel); 5. Save app.js  *Actual Result* LiveView error is not triggered  *Expected Result* LiveView error is triggered  ",Bug,High,Closed,"2013-06-15 06:09:24","2013-06-15 06:09:24",13
"The Titanium SDK ","Android: x86 libs not included in production APK","I was going to upload my app to the Google play store when I saw that x86 native SDK libraries were not included in the APK (libkroll-v8.so, libtiverify.so, libtiprofiler.so, libstlport_shared.so).    I noticed these lines in builder.py (lines from 1696):    {quote}  if abi == 'x86' and ((not os.path.exists(lib_source_dir)) or self.deploy_type == 'production'):  # x86 only in non-production builds for now.  continue  {quote}    and removing them did the trick. It is normal behaviour not to including that libraries in production releases or it is a mistake? And if it is normal what is the reason?    Way to reproduce:  - Use the feature Distribute - Android App Store  - Open the created APK with some zip reader  - Navigate in lib/x86  - No native libraries included",Bug,High,Closed,"2013-06-14 09:31:20","2013-06-14 09:31:20",3
"The Titanium SDK ","Android: TextArea.maxLength doesn't work","*Problem*  TextArea.maxLength not working in android, works perfectly fine on iOS    *Steps to Reproduce*  1. run code provided on iOS (notice the maxLength is working, limits characters to 20)  2. run code provided on android (unlimited characters can be entered)        see : http://developer.<USER>com/question/153431/maxlength-in-textarea-doesnt-work",Bug,High,Closed,"2013-06-14 10:00:35","2013-06-14 10:00:35",3
"The Titanium SDK ","TiAPI: Problem with floating point numbers in Titanium","*Problem*  The output of floating point values in Titanium differ from browser JavaScript parsers such as [jsbin.com|http://www.jsbin.com/].    For example, Ti.API.info(94.1) displays 94.0999999    On jsbin.com the output of alert(94.1) is 94.1    *Note*  Since I have to input floating number for some modules, I must use floating number solution. I can't use a string method. I have also tried parseFloat(x.toFixed(1)), Math.round(x*10)/10 etc. The output was the same.    *Test case*      *Extended test case*      *Log - Unusual Titanium values*  ",Bug,Medium,Closed,"2013-06-07 09:13:03","2013-06-07 09:13:03",5
"The Titanium SDK ","Android: Real Switch on Android","It would be nice to have a Real Android Switch when developing for Android 14 and above. The one supplied with Titanium now is not very nice.","New Feature",High,Closed,"2013-06-10 10:51:20","2013-06-10 10:51:20",5
"The Titanium SDK ","Android: Add support for creating video thumbnails","h2. Problem    Unable to create a thumbnail of a video on Android using Titanium SDK 3.1.0.GA. Titanium.Media.VideoPlayer.thumbnailImageAtTime(Number time, Number option) and Titanium.Media.VideoPlayer.requestThumbnailImagesAtTimes(Number[] times, Number option, Callback<ThumbnailResponse> callback) appear to be the only methods available to achieve this, but they are not supported for Android, only on iOS. Would like to see similar functionality to get a thumbnail from a video. It appears to be supported by the Android APIs per http://developer.android.com/reference/android/provider/MediaStore.Video.Thumbnails.html     h2. Test case    N/A - not currently supported    h2. Logs    N/A - not currently supported    h2. Discussions    Q/A: http://developer.<USER>com/question/152946/video-thumbnails-on-android  ","New Feature",High,Closed,"2013-05-30 15:25:48","2013-05-30 15:25:48",8
"The Titanium SDK ","Android: App crashes when properties of the actionBar are changed while the current window/tabGroup has navBarHidden set to true","*Problem*  The app crashes with Unfortunately, app has stopped. if actionBar properties are changed at runtime while the current window/tabGroup has navBarHidden set to true.    *Test case*  ",Bug,Low,Closed,"2013-05-20 19:38:04","2013-05-20 19:38:04",0
"The Titanium SDK ","Android: layout vertical and zIndex problem","*Expected result*  The red view should be located on the black view.    *Actual result*  The black view is missing.    *Note*  Works on iOS (both the red view and black view show), but not Android.    *Test case*  ",Bug,High,Open,"2012-10-25 10:17:54","2012-10-25 10:17:54",8
"The Titanium SDK ","Android: showDatePickerDialog and showTimePickerDialog can't be cancelled","The callback of showDatePickerDialog and showTimePickerDialog always return with the cancel property set to false. It doesn't matter if you press the back button or press outside the modal dialog, cancel gets never true.    Furthermore, if you click on the Set/Ok/Done/Ready button, the callback is called twice.    Note that in the picker dialog, we have only a single button Set, so no Cancel button. This is fine as you should be able to cancel dialog with the back button. Clicking the back button fires wrongly a success (cancel=false) event.    {code:title=Example code|borderStyle=solid}    var picker = Ti.UI.createPicker( {        type : Ti.UI.PICKER_TYPE_TIME    });         picker.showDatePickerDialog({        callback: function(e) {            if (e.cancel) {                Ti.API.info('user canceled dialog');            } else {                Ti.API.info('user selected date: ' + e.value);            }        }    });  {code}     Problem does not occur on older Android devices, like Android 2.3.    See https://github.com/<USER>titanium-test-picker for a working project to reproduce.",Bug,Medium,Closed,"2013-05-27 12:52:01","2013-05-27 12:52:01",5
"The Titanium SDK ","LiveView: App not updating upon editing localization files","Steps to reproduce:    # Create a new SingleWindow application from a template  # Start the project under LiveView (in this case, iOS simulator)  # Edit the files in i18n. Note that saving those files doesn't restart the app.    Expected behavior    Editing a *.xml file in the i18n folder would refresh the application.",Story,High,Closed,"2013-05-28 01:45:20","2013-05-28 01:45:20",13
"The Titanium SDK ","iOS: add setCameraFlashMode feature for custom overlays in Ti.Media ","h4. Problem Description  When users sets a custom overlay in the camera, there is no way to set the flash on or off.    h4. More info  https://developer.<USER>com/question/152715/flash-mode-in-camera","New Feature",Low,Closed,"2013-05-28 00:37:46","2013-05-28 00:37:46",0
"The Titanium SDK ","iOS: backgroundImage of view from remote URL not loading","*Problem*  The backgroundImage of the view from a remote URL is not loading on iOS. It works fine on Android.    *Test case*  ",Bug,Medium,Closed,"2013-05-24 21:46:13","2013-05-24 21:46:13",3
"The Titanium SDK ","Android: KS takes a long time to package - I've seen nine minutes, others report longer in some cases","h5. Description:  While verifying some JIRA tickets I was packaging KS (from 3.1.X branch). Hieu reported having this take a long time, so I monitored the <USER>    The console ticked slowly away, and it took 9 minutes and 30 seconds to finish the task. This was from clean.    h5. Steps to reproduce:  1) Pull KS from 3_1_X branch  2) Import into Studio  3) Package for distribution  4) Monitor the duration of the task    h5. Result:  It took 9:30 in my first test and others have reported longer.    h5. Expected Result:  Much quicker packaging <USER>    h5. Notes:  I'll be checking to see if this is a regression and will add it here.",Bug,Medium,Closed,"2013-05-23 23:02:38","2013-05-23 23:02:38",3
"The Titanium SDK ","TiAPI: Select Locale for L() at runtime","*Problem*  It would be great if it was possible to let the user select which language to use at runtime. So instead the L() would only look at device language, it could also check if a Ti.App.LanguageXMLSetting property has been defined. That way we do not need to create homemade localization systems anymore.    The use case is included below. The problem is that L is undefined in style.tss because I redefine it in the controller.    *alloy.js*      *Controller*       *Style*      *View*  {code:xml}  <Alloy>   <Window>    <Button id=menuBtn></Button>   </Window>  </Alloy>  {code}    *Custom languageHelper*  {code:javascript}  /**   * Language Helper   * Makes it possible to change language at runtime    * @version 1.0   */    var lookup = null;  exports.locale = Ti.App.Properties.getString('SETTING_LANGUAGE', Ti.Locale.getCurrentLanguage() );      /**   * Private function   * Loads the language xml file.   * It has fallback for english if file does not exist.   */  function loadFile() {   lookup = {};      // LOAD FILE   var file = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, 'i18n/' + exports.locale + '/strings.xml');   if (!file.exists()) {    file = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, 'i18n/en/strings.xml');    if (!file.exists()) {     Ti.API.warn(Language file for both ' + exports.locale + ' and 'en' fallback do not exist);     return;     }   }      // PARSE XML   var xml_string = file.read().text;     var doc = Ti.XML.parseString(xml_string);   var strings = doc.getElementsByTagName(string);   for (var i = 0; i < strings.length; i++) {    var node = strings.item(i);    var value = node.text;    if (node.hasAttributes()) {     for (var att_index = 0; att_index < node.attributes.length; att_index++) {      var att = node.attributes.item(att_index);      if (att.nodeName === name) {       lookup[att.nodeValue] = value;      }     }    }   }     }    /**   * Set the current language of the app.    * @param {String} language   */  exports.setLanguage = function(language){   if(language === null){    return;   }   // clean old lookup   exports.clear();      // save language   Ti.App.Properties.setString('SETTING_LANGUAGE', language);   exports.locale = language;         // parse new lookup   loadFile();         return lookup;  }    /**   * Clear the parsed xml translations   */  exports.clear = function() {   lookup = null;  };    /**   * Lookup function. require this at each controller   * Example usage:   * var L = require('languageHelper').fetchString;   * @param {Object} string   * @param {Object} hint   */  exports.fetchString = function(string, hint) {   if (lookup === null) {    loadFile();   }   return lookup[string] !== undefined ? lookup[string].replace(/\\n/g, \n) : (hint || string);  };   {code}","New Feature",High,Closed,"2013-05-16 10:13:41","2013-05-16 10:13:41",8
"The Titanium SDK ","Android: KitchenSink: text does not size to fit in buttons","Please see screenshots for references.    Test steps:  1. Install and run KS>Base UI>Window Layout  or  2. KS> Base UI> Window(Standalone) and press any of the buttons    Actual result:  Text of the button is being cut off.    Expected:  Text should fit inside the button",Bug,Medium,Closed,"2013-05-20 20:58:42","2013-05-20 20:58:42",3
"The Titanium SDK ","Android: 'longpress' event is not working in ListView","'longpress' event is not working in listView. Here is the test case:  ",Bug,High,Closed,"2013-05-20 12:44:09","2013-05-20 12:44:09",5
"The Titanium SDK ","iOS: Reading TableView's sectionCount property crashes app","*Summary:*  Reading a TableView's {{sectionCount}} property causes the app to crash.    *Steps to reproduce:*  # Build and run the below on iOS.  # Notice the app crashes. No error dialog appears.        *Work-Around:*  Fetch the {{sections}} array and read its {{length}} property.    ",Bug,Low,Resolved,"2013-05-17 09:17:33","2013-05-17 09:17:33",5
"The Titanium SDK ","iOS: Accessibility - Label.accessibilityLabel does not work properly inside a ScrollView properly","Label.accessibilityLabel does not work properly inside a ScrollView properly i.e. the device's VoiceOver will not read the label.    This is not a regression. Issue also exist on SDK 3.1.0    *Steps:*  1. Create a Titanium app with the following app.js code:    2. Install app to device. Make sure VoiceOver is on: Settings > General > Accessibility > VoiceOver > On  3. Double-press on app to launch app  4. Double-press on the label    *Actual:* Label on first Scrollview is not read out.  *Expected:* Label on first Scrollview should be read out.  ",Bug,Medium,Closed,"2013-05-17 11:39:19","2013-05-17 11:39:19",8
"The Titanium SDK ","iOS: Accessibility: Accessibility does not work on Slider Control","iOS: Accessibility: Accessibility does not work on Slider Control    This is not a regression. Issue also exist on SDK 3.1.0.    Steps:  1) Run Acceptance Access_1109 on Accessibility module.  2) Touch the second slider (with LVH defined in sequence)    Actual Result: Device just reads 50.0.    Expected Result: Device should read aloud LVH(This is slider2 label , This is slider2 value , This is slider2 hint) followed by 'seek control'value(android) and value adjustable    ",Bug,High,Closed,"2013-05-17 10:42:57","2013-05-17 10:42:57",3
"The Titanium SDK ","Inactivity Timer for receiving an event if the user has not interacted with the app for a period of time","Inactivity Timer for receiving an event if the user has not interacted with the app for a period of time    Any app that displays sensitive data should be able to have a timeout so that if the user does not interact with the device for a period of time, the app can log the user out or close down. This is common for banking and brokerage apps both on the web and on mobile versions. It is also very important for Enterprise apps that may provide an offline experience and authenticate a user offline.    While this may be achievable by the programmer today manually, it is very onerous since the developer would ned to reset the timer on every user action (button click, page swipe, list item click, etc...). It would be better for this to be a platform feature that is enable and configured by the developer and then have the platform generate the inactivity timer event and the developer can popup a reminder to the user or logout or shut down the app.","New Feature",Low,Resolved,"2013-05-16 17:16:51","2013-05-16 17:16:51",0
"The Titanium SDK ","CLI: tiapp.xml sdk-version not honored if selected sdk has same base digits","If the tiapp.xml is set to 3.1.1.v20130514180723, but the CLI is set to 3.1.1.v20130513120107, since both start with 3.1.1, the CLI thinks they are the same version which is wrong.",Bug,High,Closed,"2013-05-15 05:08:55","2013-05-15 05:08:55",3
"The Titanium SDK ","CLI needs to support the ability to specify different login endpoints","Different environments will have different login endpints: test, dev, pre-prod, enterprise, vpc. To accommodate these different environments, the cli will have to make the login endpoint configurable - currently it is hard-coded to api.<USER>net. This can be configured via the config file or via a parameter    This is preventing Studio from working properly against the enterprise cluster, ie unable to login means users can't create projects. As a work-around, users would have to have the same username/password on all api.<USER>net type servers",Story,Medium,Closed,"2013-04-23 20:48:29","2013-04-23 20:48:29",8
"The Titanium SDK ","CLI: Launching emulator without specifying skin will use HVGA and will fail if chosen AVD does not support HVGA","If you pass in an AVD ID without Skin, HVGA is used as default and passed with the emulator command. If the AVD you chose does not support HVGA, the launch will fail with:      The behavior I was expecting was for the default skin listed with the AVD would be used. You can see the set default in the output of android list.    Steps to reproduce:  1) Run command android list in the terminal to see available AVDs   2) Make a note of an AVD ID that does not support HVGA Skin  3) Create a new project  4) Run command ti build -p android -I <AVD ID from step 2>    Result:  HVGA Skin is chosen as Default, and will fail if AVD ID does not support that skin.    Expected:  AVD launches with AVD default skin if no skin passed in.",Bug,High,Closed,"2013-04-16 00:00:03","2013-04-16 00:00:03",5
"The Titanium SDK ","Android: ImageView: Remote image with @ character doesn't display","*Problem description*  If you set an image with a @ in the path, the image won't be loaded. This is because getCleanUri thinking it's a domain address. Therefore the test on the hash will return false. So the image is downloaded but not drawn.    *Repro notes*  Paste the @2x URL in the browser to verify the URL is valid.  Uncomment cd-mini-graphic image to verify it working for standard images.  Only the URL with @2x doesn't work.  Works on iOS, not on Android.    *Test case*  ",Bug,High,Closed,"2013-04-12 13:01:44","2013-04-12 13:01:44",5
"The Titanium SDK ","Android Emulator: improve error message from missing ia32-libs dependency on linux","The first android emulator run experience of a linux user on a clean system is:        It seems a bit cryptic.    Please improve error message if possible.",Bug,High,Closed,"2013-04-11 00:52:52","2013-04-11 00:52:52",8
"The Titanium SDK ","iOS 6: insertRowBefore uses animation with animated set to false and animationStyle set to none","*Description*  insertRowBefore uses a fade animation although animated is set to false and animationStyle is set to NONE (see code sample)    *Expected result*  row is simply inserted without an animation    *current result*  row is inserted with fade animation    *additional notes*  might also apply to insertRowAfter and appendRow and deleteRow (not tested)    *sample*  ",Bug,Medium,Closed,"2012-12-06 10:24:14","2012-12-06 10:24:14",5
"The Titanium SDK ","iOS: support ellipsize property of Ti.UI.Label (parity)","Android and mobileweb support the ellipsize property of Ti.UI.Label.  Please add support for this property under iOS as well.",Bug,Low,Closed,"2012-12-21 16:08:14","2012-12-21 16:08:14",5
"The Titanium SDK ","Android: Implement Scrollable Tabs","As seen in the [documentation|http://developer.android.com/design/patterns/actionbar.html] [(another place)|http://developer.android.com/design/building-blocks/tabs.html], there's a new subtype of tab bar in the Android, called Scrollable Tabs.","New Feature",High,Closed,"2012-12-12 09:10:24","2012-12-12 09:10:24",13
"The Titanium SDK ","TiAPI: Add support for console.time and console.timeEnd","it would be very useful to have the ability to output timing to the log for testing and debugging.    JS in WebKit and Gecko as well as NodeJS support this... we should too. ","New Feature",Low,Closed,"2013-04-04 20:49:21","2013-04-04 20:49:21",8
"The Titanium SDK ","iOS: Allow HTML Styled Text on Label","ios equivalent to https://jira.<USER>org/browse/TIMOB-1734","New Feature",Low,Closed,"2012-12-31 13:56:47","2012-12-31 13:56:47",0
"The Titanium SDK ","Android: TextArea maxLength not working in Android","According to the docs, TextArea supports maxLength property from SDK 3.0. However, maxLength does not work in Android.     In TiUIText.java, the code that reads the maxLength is:    if (d.containsKey(TiC.PROPERTY_MAX_LENGTH) && field) {      maxLength = TiConvert.toInt(d, TiC.PROPERTY_MAX_LENGTH);  }    TextArea has field boolean set to false, so maxLength is always ignored.    Steps to reproduce. Create simple App.js:        Launch app and start writing in the text area. You can enter more than 10 chars, despite maxLength is set to 10. Tested with SDK 3.0.0.GA in Android 2.3.3 and Android 4.1",Bug,Critical,Closed,"2013-04-03 17:19:52","2013-04-03 17:19:52",3
"The Titanium SDK ","Mobile Web: TableView deleteRow does not work if filled by setting data property to array of sections","*Test case*  ",Bug,,Closed,"2012-11-23 04:29:45","2012-11-23 04:29:45",3
"The Titanium SDK ","CLI: Add support for Windows Mobile platform","This task is for writing the {{create}}, {{build}}, {{install}}, and {{run}} builtins for the CLI for Windows platform as per the [CLI spec|https://wiki.<USER>org/display/spe/Command+Line+Interface].  ",Epic,High,Closed,"2013-03-28 22:38:40","2013-03-28 22:38:40",0
"The Titanium SDK ","Windows: Implement Ti.UI.WebView","Implement TI.UI.WebView functionality. This may require some other functionality to be implemented first.","New Feature",High,Closed,"2013-03-28 22:36:20","2013-03-28 22:36:20",21
"The Titanium SDK ","BlackBerry: support project creation with multiple deployment targets","Description:  1.Create a default app with templates in the studio & select other deploy targets along with blackberry  2.Now open the resources folder of the created app in studio    Actual Result:  1.The 'blackberry' folder does not get created in the resources folder as 'android','iphone','mobileweb'  2.due to this running the app gives errors:      NOTE : If we create a default app with only blackberry as target then the 'blackberry' folder is getting created    Expected Result:  1.The 'blackberry' folder gets created along with other targets      ",Bug,High,Closed,"2013-03-25 17:57:52","2013-03-25 17:57:52",5
"The Titanium SDK ","iOS: Kerning for fonts in Titanium.","Client require new feature like, kerning of fonts.    Kerning is the spacing between each character.","New Feature",Low,Closed,"2013-03-25 06:28:18","2013-03-25 06:28:18",1
"The Titanium SDK ","mobileweb rendered @font-face declaration is not valid","*When using a custom font, rendered CSS code is not valid.*    h3. Steps to reproduce    # create a new Titanium project (Single Window Application template)  # _alloy new_ it  # create assets/fonts directory and put any -- supported non-system -- font in there  # change Label element style so it calls the mentioned font    # see the font not being applied to the element    h3. Analysis    When opening the built mobileweb/titanium.css, our font declaration at the very end of the file is      To be usable by browser, it should be      To be working, Some Font Name should be a valid string and the same as in the defined _tss_ file.    h3. Workaround    I cannot see any workaround since the rendered _font-family_ is expecting a *user defined* font identifier.  May be adding a _font-face_ declaration could do the trick.",Bug,Critical,Closed,"2013-03-14 11:07:07","2013-03-14 11:07:07",0
"The Titanium SDK ","Android: Unexpected layout when adding images and labels to TableViewRow","When adding an imageview and labels to a tableview row with horizontal layout will push the label down to the next line instead of wrapping the text, on iOS it will correctly wrap the text.    Images attached    Example code:  ",Bug,Low,Closed,"2013-03-07 23:07:28","2013-03-07 23:07:28",13
"The Titanium SDK ","TiAPI: Cannot add a whitespace at the end of string in i18n strings.xml","Use the following xml in the i18n en strings.xml file:      And use the following in app js:        The result is different in 3.0 vs 2.1.3. In 3.0, it seems all whitespaces from strings from the language file are trimmed.  The same behavior is seen in Android also.    ",Bug,Medium,Closed,"2013-03-05 11:58:54","2013-03-05 11:58:54",1
"The Titanium SDK ","Android: Using the camera on certain devices causes the app to crash","Call Ti.Media.showCamera and the camera opens up fine, takes the picture fine, then click ok, and the app crashes before reaching the success function.    The picture does manage to get saved into the photo gallery.    Sample code. Paste this into a new Android application.    ",Bug,Critical,Closed,"2012-12-17 05:46:41","2012-12-17 05:46:41",13
"The Titanium SDK ","Backport: Windows: Android SDKs not recognized without moving them","This is a regression. Works correctly in TISTUD 2.1.2.    Windows: Android SDKs not recognized in Preferences.    Steps to Reproduce:    1. Open Titanium Studio.  2. Open Preferences > Titanium Studio > Titanium.  3. Clear Android SDK Path and Apply.  4. Browse to Android SDK to select path.    Actual Result:    Android SDKs not recognized.    Expected Result:    Android SDKs recognized.",Sub-task,Critical,Closed,"2013-02-15 23:44:38","2013-02-15 23:44:38",8
"The Titanium SDK ","Windows: Android SDKs not recognized without moving them","This is a regression. Works correctly in TISTUD 2.1.2.    Windows: Android SDKs not recognized in Preferences.    Steps to Reproduce:    1. Open Titanium Studio.  2. Open Preferences > Titanium Studio > Titanium.  3. Clear Android SDK Path and Apply.  4. Browse to Android SDK to select path.    Actual Result:    Android SDKs not recognized.    Expected Result:    Android SDKs recognized.",Bug,Critical,Closed,"2013-02-15 23:39:49","2013-02-15 23:39:49",8
"The Titanium SDK ","CLI: Build failure for projects with illegal character '_' in App id","Building *imported* from git or created in studio projects, that contain underscore('_') in application's id, return build failure. It does build on simulator.    Not a regression, occurs in 3.0.0.GA    Test steps:  1. Create project with illegal character in app id (e.g '_')  2. Build on to device    Actual result:  [ERROR] :  ** BUILD FAILED **  [ERROR] :  The following build commands failed:  [ERROR] :   ProcessProductPackaging Entitlements.plist build/Build_timob7674.build/Debug-iphoneos/Build_timob7674-universal.build/Build_timob7674.xcent       ",Bug,Medium,Closed,"2013-02-12 23:31:33","2013-02-12 23:31:33",5
"The Titanium SDK ","CLI: Support adb's -s option for pointing a build to a specific emulator or device","It would be extremely helpful, and give the CLI more power with Android, if developers were able to specify specifically which device or emulator for which they would like to build. Right now the build <USER>allows us to specify and avd id which would let you pick an emulator, but even that is not ideal as you don't really have a way of knowing an emulator's id from the *android list avd* as it isn't listed.    Ideally, I should be able to call *adb devices*, see my listing of emulators and devices, than be able to pass that serial number to the *titanium build* command as an option, directing the build <USER>to that specific emulator or device. The build <USER>_tries_ to be intelligent about this, but more often than not I get errors like:    * It fails if there is a connected device AND an emulator open  * Even with an emulator already it open, it often attempts to load an entirely different one  * Tries to use emulators not compatible with the app (like a non-Google API emulator with an app that uses maps)    Allowing a command like the following would make it really easy for developers to have multiple open emulators and connected devices and still get expected behavior:        Obviously I leave the choice of the option flag to the implementor. -s would correspond to the adb command, but this is already in use for *titanium build* for specifying the target Titanium SDK. ","New Feature",Medium,Closed,"2013-02-11 16:54:58","2013-02-11 16:54:58",3
"The Titanium SDK ","iOS: TableViewRow selection causes child view's backgroundColor to disappear","Platform: iOS  Device: iOS Simulator 6.0 & iPod Touch (4th gen, software version 6.0.1)  Repro:  1. Create a TableView  2. Create a TableViewRow  3. Create a View with a backgroundColor  4. Add the view to the row  5. Add the row to the table  6. Tap and hold on the row  Result: The row's selectedBackgroundColor becomes visible and the view's backgroundColor becomes transparent  Expected: The row's selectedBackgroundColor becomes visible and the view's backgroundColor remains visible    Additional Notes:  1. If the view inside of the row has children, they are still displayed. Only the view's backgroundColor is affected.  2. Setting the row's selectionStyle to NONE prevents the backgroundColor of the view from disappearing.",Bug,High,Closed,"2012-11-08 20:21:48","2012-11-08 20:21:48",8
"The Titanium SDK ","Android: Closing the emulator, 'Emulator has exited' log in not printed on console.","Android: Closing the emulator, 'Emulator has exited' log in not printed on console.  Its not a regression.    Steps to reproduce:  1. Run a application in android emulator.  2. Close the emulator.    Actual:  no new log occur on console.    Expected:  'Emulator has exited' should occur on console.  ",Bug,Low,Closed,"2013-02-06 10:26:22","2013-02-06 10:26:22",2
"The Titanium SDK ","CLI: building for Android device while the emulator is open generates a wrong Error Message","h6. Problem  Building for Android device from CLI, while the Android emulator open, generates an Error Message at the end. However the app is actually correctly installed.    h6. Steps to reproduce  1. Be sure to have the Android Emulator open  2. Attach a device and build a project for the device from CLI:  $ ti build -p android -T device    Result: application is correctly installed on the device, however from console there is an Error message in the end.    (also note the typo: appliation in the [INFO] line)",Bug,Medium,Closed,"2013-02-06 00:20:54","2013-02-06 00:20:54",2
"The Titanium SDK ","JavaScript-to-JavaScript optimizing compiler","The performance of native bridge invocations shall be improved in Q1  for both iOS and Android. This will be done by creating an optimizing  javascript-to-javascript compiler that identifies non-performant  Titanium API use-cases and transforms them into performant native  bridge invocations.    The plan for completing this task is:    1. Automate collection of app performance data.    2. Identify Titanium performance bottlenecks from performance data.    3. Analyze javascript AST for common Titanium API idioms.    4. Create optimization algorithms (AST transformations) for these     idioms identified as performance bottlenecks.      From <USER>s README.md in his compiler prototype project:    Compiler Prototype  ==================    The compiler prototype is a simple set of compile-time optimizations  that are applied to speed up native bridge invocations.    Concept  -------    The concept is very simple.      The Javascript native bridge binds a set of JavaScript objects (the  Titanium API) and eventually a method is bound into a callback  implementation in native land.  The JS engine performs native bridge  calls to lookup the JavaScript object and eventually invoke the bound  native function in this simple example:     > Ti.API.log('foo')    The JS engine makes the following invocations underneath the cover:     > Ti => Object   > Object.API => Object   > Object.log => Function   > Function('foo')    So, a simple one-liner requires 4 invocations in the JS engine.    Additionally, in this example, foo is an argument that must be  marshalled from a JS native object into a native object.  In  Objective-C, this turns a JSValueRef (or JSStringRef) into a  NSString. This happens before the underlying JSFunction is mapped into  an Objective-C method.  To make matters worse, in Objective-C, we have  to do additional lookups to find the appropriate TiModule and then  build an NSInvocation to invoke the method against the Objective-C  class.  All of this takes time.    This prototype attempts to speed up the invocation above by performing  a few simple steps.    First, we avoid the Object lookups by turns a Titanium API into a  bound symbol in the JS engine. So, Ti.API.log become T$1 (as an  example).    Second, we attempt to speed up static arguments that are required to  be marshalled during invocation into a symbol table which are only  marshalled once. The symbol table is pre-compiled and subsequent  references of the same symbol will use a pre-marshalled copy.    Third, we pre-bind a compiled method and set of pre-marshalled  arguments into a jump table. This is similar to using a function  pointer (but as an instance of a compiled pointer to a module and  invocation).    The result is that you can get 50-75% pure invocation speed ups.  For  methods that have static arguments, you can achieve even better  results.    Limitations  -----------    The current prototype uses a titanium module and requires a compile  method to be called at the top of each compiled file to load up the  symbols and bind the symbols. This has convenience in that we can do  it without having to make any changes to Titanium itself.  However, we  may want to consider adding the compile method into Titanium  (unpublished) to make maintenance easier and eliminate the need for a  module.    The second limitation is that we are speeding up only function calls  and a few global symbols (such as Ti.UI.FILL).  Eventually, we may  want to do the same to properties.    Third, the prototype is using a compiler hook (good) but only is  working with Alloy.  This is not a limitation per se, but i didn't  want to have to deal with figuring out how to redirect the compiled JS  files into a separate temporary directory and causing XCode to point  at that instead of Resources -- since we don't want to override  Resources (except in Alloy, that's how it operates, so that's OK).    Fourth, I'm using a uglify-based compiler by hand instead of using  Bryan's titanium code processor.  The current implementation of the  code processor doesn't allow you to mutate code in his plugins (or in  the processor itself).  Ideally, this would actually be a code  processor plugin that would simply mutate code in a pipeline during  compilation.    Fifth, the current prototype is iOS only.  This is because I'm most  familiar with iOS and don't know the Android compiler / bridge for V8  as well as the old version.  However, I think this same concept works  for Android conceptually.    Six, since I'm not using the code processor, I'm not using the JSCA  file to understand the API. Moving to the code processor eliminates  that issue.    The last overall limitation is that we might want to actually  pre-compile out the jump tables and use actually compiled function  callbacks instead of the TiCompiledMethod object.  If we moved to more  of a true compiled / generated code, that would be rather trivial.  This would likely give us even more speedup and much less object  garbage and much lower memory.  You would simply generate the C  function that would directly call the module and method instead of  having to have a generic TiCompiledMethod and you could by pass the  entire Kroll overhead. I believe the new V8 compiled bindings do  something similar in Android.    Components  ----------      ## CLI Hook    The CLI hook file is under plugins/ti.compiler/hooks and in the file  ti.compiler.js      ## Module Source    The module source for iOS is under compiler_module.      Notes  -----    The ti.compiler plugin must come after the ti.alloy in tiapp.xml.      Afterthought  ------------    I think this concept can be dramatically further expanded to really  build a compiler that can pre-<USER>code and optimize, compile and  generally make performance a lot faster than it does today.    ## Collapsing properties    For example, take the following code:     var v = Ti.UI.createView();   v.width = Ti.UI.FILL;   v.height = Ti.UI.FILL;   v.backgroundColor = red;   w.add(v);    This could easily be re-written to be much faster (prior to  optimizations from prototype):     w.add(Ti.UI.createView({width:Ti.UI.FILL,height:Ti.UI.FILL,backgroundColor:red}));    After optimizations further:     w.add(T$1());     ## Multiple invocations    Another example that is common, adding multiple objects to a view  heirarchy.     w.add(view1);   w.add(view2);   w.add(view3);    This could be optimized into:     w.add(view1,view2,view3);    In this example, passing 3 objects over a view to add to the window  will be MUCH faster because you go from 3 separate invocations to one  and more importantly, because this method is required to be invocked  on the UI Thread, 3 separate UI thread blocks.    Additionally, at some point, you could move the same optimized method  onto the native side such as it would turn into the following:     T$1();    And on the native side, it would simply do the work of adding the 3  views to a window by native references.    ## Subsequent code blocks    My ultimate belief is that most of the static code written in Titanium  JS can be pre-compiled and essentially reduced into few JS engine  functions.    Take the following static code block:     var w = Ti.UI.createWindow();   var v = Ti.UI.createView({width:TI.UI.FILL,height:TI.UI.FILL,backgroundColor:white});   var b = Ti.UI.createButton({    text:Hello,    width:TI.UI.SIZE,    height:Ti.UI.SIZE   });   v.add(b);   w.add(v);   b.addEventListener(function(){    alert(hello world);   });   w.open();    This should be able to be reduced in JS code to:     var r$1 = T$1(), w = r$1[0], v = r$1[1], b = r$1[2];   b.addEventListener(function(){    alert(hello world);   });   w.open();    We should be able to take subsequent code blocks that are static and  collapse them into code blocks in native that can be mapped to one JS  symbol pointer.    ## String consts    We might be able to get much better optimizations in the JS engine by  turning static code strings into JS consts at compile time.  In a ton  of cases in an app, you will use inline strings.  Its generally faster  to declare them as a const and then use the const variable name  instead.  This could be a simple optimizations done by the compiler.    ## Dead code removal    We need to remove dead code or unused variables and functions.  For  example, in Alloy in the alloy.js file, we define a function named  isTabletFallback.  This method isn't used.  We could simply optimize  on compile and deterine which functions / symbols are reachable and  then remove them if not.    For example, Alloy generates the following:     var Alloy = require(alloy), _ = Alloy._, Backbone = Alloy.Backbone;     Alloy.createController(index);    This is useful is you need to reference Backbone or underscore  libraries in the app.js stub.  However, in almost all scenarios, the  developer never does this in a standard Alloy app.    The code above could be easily reduced to the following if it's not  modified:     require('alloy').createController('index')    This creates no variables in memory that have to be later garbage  collected and is much more efficient in execution.        - <USER> ",Story,Low,Closed,"2013-02-01 18:47:21","2013-02-01 18:47:21",0
"The Titanium SDK ","BlackBerry: Implement important Titanium.UI.Toolbar functionality",,Story,Medium,Closed,"2013-01-31 08:17:21","2013-01-31 08:17:21",15
"The Titanium SDK ","iOS: Ti.Locale.currentLocale and currentCountry issues","h6.Ti.Locale issue  Ti.Locale is NOT working as expected after reading the doc.    h6.Expected  currentLocale and getCurrentLocale() to work like language i.e. http://docs.<USER>com/titanium/latest/#!/api/Titanium.Locale-method-getCurrentLocale    h6.Repro sequence      h6.returns        h6.yet another console output      I am not competent enough in objective-C and mobile SDK knowledge but the implementation of locale module here looks fishy to me (I would expect implementations for currentLocale and currentCountry). I tested w/ SDKs 1.8.2, 2.1.2.GA and 3.0.0.GA on Mac OSX for iOS.",Bug,High,Closed,"2013-01-05 09:04:06","2013-01-05 09:04:06",2
"The Titanium SDK ","The value if Titanium.UI.Tab.active is incorrect after switching tabs","Steps to reproduce:    1. Create a tab group with two tabs.    2. Programmatically set the active property to true, or call setActive(true), for the non-active tab (the second tab).    3. Check the active property of the tab. The first tab still returns true but should return false; the second tab returns false but should return true.    Note:     - Titanium.UI.Tab.active actually changed the tab (the other tab appeared).   - There are no such problem after clicking on the tab manually.  - Checking the properties asynchronously (after a timeout, in a callback) does not resolve the problem.    Example:  ",Bug,Critical,Closed,"2013-01-11 06:30:31","2013-01-11 06:30:31",0
"The Titanium SDK ","Ti.UI.TableViewSection.rows property is not implemented","Implement Ti.UI.TableViewSection.rows property.","New Feature",Low,Closed,"2012-12-26 13:11:22","2012-12-26 13:11:22",1
"The Titanium SDK ","Android: Ti.Android.getCurrentActivity() fails with an exception","h1. Problem description  Calling Ti.Android.getCurrentActivity() always fails with an exception in the logs.        h1. Steps to reproduce  Use this simple app to test:        Changing from getCurrentActivity() to currentActivity (direct access to the property) works fine.",Bug,Low,Closed,"2013-01-24 11:29:38","2013-01-24 11:29:38",3
"The Titanium SDK ","BlackBerry: Implement important Titanium.App functionality","Implement at least:    * Titanium.App.deployType  * Titanium.App.getArguments  * Titanium.App.guid  * Titanium.App.id",Story,High,Closed,"2013-01-24 08:34:07","2013-01-24 08:34:07",21
"The Titanium SDK ","BlackBerry: Implement important Titanium.Platform functionality","Implement at least:    * Titanium.Platform.createUUID  * Titanium.Platform.openURL",Story,High,Closed,"2013-01-24 08:29:46","2013-01-24 08:29:46",21
"The Titanium SDK ","Android: TabGroup activity should work like Window activity","With Windows, it's possible to create menus before opening the window, by assigning Window.activity.onCreateOptionsMenu.        For a TabGroup, although TabGroup.activity is now exposed, you cannot assign an onCreateOptionsMenu function until after the TabGroup is opened. The following code demonstrates the issue:        As written, it doesn't add a menu item. If you comment out the standalone addMenu call and uncomment the addEventListener call, the menu item is added as expected.    Expected Results:    Menu item is added as on a Window, without needing to add an open event listener or call invalidateOptionsMenu.  ",Bug,Low,Closed,"2013-01-23 20:09:06","2013-01-23 20:09:06",0
"The Titanium SDK ","Android: Layout resources in res/layout/filename.xml no longer work","h4. Description    Android layout resources no longer work as they did in 2.1.4GA.    h4. Code to reproduce    To customize the tab group in Android so that it is hidden, we used to be able to add a file in /platform/android/res/layout/titanium_tabgroup.xml.    Code inside titanium_tabgroup.xml:          app.js      This no longer works in 3.0GA.",Bug,High,Closed,"2013-01-22 18:18:54","2013-01-22 18:18:54",3
"The Titanium SDK ","iOS: Add support for CoreMotion API","h1. Feature description  Add support for the new Core Motion API on iOS, as stated here: http://developer.apple.com/library/ios/#documentation/EventHandling/Conceptual/EventHandlingiPhoneOS/MotionEvents/MotionEvents.html#//apple_ref/doc/uid/TP40009541-CH4-SW26    With the new APIs, it will be possible to handle acceleration events even when the app is in background.","New Feature",Low,Closed,"2013-01-22 15:49:52","2013-01-22 15:49:52",0
"The Titanium SDK ","Log messages lost when logging commands are placed in a loop","While testing TISTUD-3120 I ran into the issue where log output in a for loop did not appear (see screenshot). I can only reproduce this issue in 3.0.2 not 3.1.0 or 3.0.1 using the attached app.js file in a standard titanium project.    This is a regression.    Steps to reproduce:  1. Open the Titanium project.  2. Run in Simulator.    Expected results:  All console output should be shown filtered based on settings.    Actual results:  Console output missing lines from the looped log calls.",Bug,High,Closed,"2013-01-14 17:28:13","2013-01-14 17:28:13",8
"The Titanium SDK ","Android: Auto correct set to false on TextField with KEYBOARD_DECIMAL_PAD doesn't allow decimal point","h2.Problem  When the keyboardType propery of a TextField is set to Ti.UI.KEYBOARD_DECIMAL_PAD and autocorrect is set to false, the decimal point is not allowed to be entered into the textfield.  This leaves no way to enter dollar amounts without using the default keyboard, which allows any character, and is therefore not appropriate.    h2.Expected Behavior  autocorrect should not be interfering with numbers in the text field.    h2.Actual Behavior  When auto correct is set to false The numbers and punctuation keyboard appears, but clicking on the decimal point has no effect.    h2.Testcase  {panel:title=app.js}    {panel}",Bug,Critical,Closed,"2012-12-04 16:29:42","2012-12-04 16:29:42",3
"The Titanium SDK ","BlackBerry: Implement important Titanium.Map.View functionality","Need to implement at least:    * Titanium.Map.View.add  * Titanium.Map.View.addAnnotation  * Titanium.Map.View.addEventListener  * Titanium.Map.View.removeAnnotation  * Titanium.Map.View.setLocation",Story,High,Closed,"2013-01-07 13:22:44","2013-01-07 13:22:44",21
"The Titanium SDK ","BlackBerry: Implement important Titanium.Map.Annotation functionality","Need to implement at least:    * Titanium.Map.ANNOTATION_GREEN  * Titanium.Map.ANNOTATION_PURPLE  * Titanium.Map.ANNOTATION_RED",Story,High,Closed,"2013-01-07 13:22:15","2013-01-07 13:22:15",21
"The Titanium SDK ","BlackBerry: Implement important Titanium.Map functionality","Need to implement at least:    * Titanium.Map.createAnnotation  * Titanium.Map.createView  * Titanium.Map.STANDARD_TYPE",Story,High,Closed,"2013-01-07 13:21:34","2013-01-07 13:21:34",21
"The Titanium SDK ","BlackBerry: Implement important Titanium.Analytics functionality",,Story,Medium,Closed,"2013-01-07 13:20:27","2013-01-07 13:20:27",15
"The Titanium SDK ","BlackBerry: Implement important Titanium.Contacts functionality",,"New Feature",High,Closed,"2013-01-07 13:19:43","2013-01-07 13:19:43",15
"The Titanium SDK ","BlackBerry: Implement important Titanium.Accelerometer functionality","h3. Acceptance Test      # Try moving the device around. No updates should be displayed.  # Click Toggle Accelerometer. Move device and you should now see updates (x, y, z values).  # Click the toggle button again and the updates should stop. Repeat and verify.  ",Story,Medium,Closed,"2013-01-07 13:17:57","2013-01-07 13:17:57",15
"The Titanium SDK ","BlackBerry: Implement important Titanium.Media.VideoPlayer functionality",,Story,Medium,Closed,"2013-01-07 11:56:02","2013-01-07 11:56:02",15
"The Titanium SDK ","BlackBerry: Implement important Titanium.Media.MusicPlayer functionality",,Story,Medium,Closed,"2013-01-07 11:53:27","2013-01-07 11:53:27",15
"The Titanium SDK ","BlackBerry: Implement important Titanium.Media.Item functionality",,Story,Medium,Closed,"2013-01-07 11:52:22","2013-01-07 11:52:22",15
"The Titanium SDK ","BlackBerry: Implement important Titanium.Media.AudioPlayer functionality",,Story,Medium,Closed,"2013-01-07 11:51:26","2013-01-07 11:51:26",15
"The Titanium SDK ","BlackBerry: Implement important Titanium.Facebook functionality",,"New Feature",Low,Closed,"2013-01-07 11:46:00","2013-01-07 11:46:00",17
"The Titanium SDK ","BlackBerry: Implement Titanium.UI.WebView","Add at least:    * Titanium.UI.WebView.addEventListener  * Titanium.UI.WebView.evalJS  * Titanium.UI.WebView.html  * Titanium.UI.WebView.onCreateWindow  * Titanium.UI.WebView.remove  * Titanium.UI.WebView.url",Story,High,Closed,"2013-01-07 11:39:59","2013-01-07 11:39:59",21
"The Titanium SDK ","CLI: Project compilation - no build.log is being created","Building a mobile project to iOS device or simulator wont create build.log if CLI is enabled.  Occurs in 3.0.0 and 3.1.0      Test steps:  1. Create a project in Titanium Studio  2. Run it as iOS simulator or build it to device  3. Check project's build folder for build.log    Actual result:  No build.log    Expected result:  build.log should be created in both scenarios (success or failure)  ",Bug,Medium,Closed,"2012-12-30 06:58:11","2012-12-30 06:58:11",13
"The Titanium SDK ","Android : Scrollview with a tableview does not scroll if contentHeight is set to 'auto'","Run the below code snippet to see scrollview with a tableview inside not scrolling if contentHeight is set to 'auto'. It works fine if it is set to 500 or 1000. But works fine in ios with 'auto'.  ",Bug,Low,Closed,"2012-12-26 19:57:14","2012-12-26 19:57:14",3
"The Titanium SDK ","CLI: Implement minification with source number line mapping","When the user minifies his app, he will generate a source map file that maps the minified code to the actual source code. We will update the TiCore to send additional information so that 3rd-party services can do the above mapping and identify where the crash occurred.    This will likely involve a switch to using Uglify 2.","New Feature",Low,Closed,"2012-12-21 01:14:42","2012-12-21 01:14:42",0
"The Titanium SDK ","Create a Titanium benchmark","In order to measure the performance of Mobile Web, we need a benchmark that measures various aspects such as creating TableViews with a 10,000 rows and so on. The benchmark needs to output some sort of measurement data that we can compare between builds. I'm not sure if the benchmark should be a score or a time or what.",Story,High,Closed,"2012-12-18 23:57:09","2012-12-18 23:57:09",0
"The Titanium SDK ","BlackBerry: Implement Titanium.Database","Need to implement at least:    * Titanium.Database  * Titanium.Database.DB  ** Titanium.Database.DB.close  ** Titanium.Database.DB.execute  ** Titanium.Database.DB.lastInsertRowId  ** Titanium.Database.DB.remove  * Titanium.Database.install  * Titanium.Database.open  * Titanium.Database.ResultSet  ** Titanium.Database.ResultSet.close  ** Titanium.Database.ResultSet.fieldByName  ** Titanium.Database.ResultSet.getRowCount  ** Titanium.Database.ResultSet.isValidRow  ** Titanium.Database.ResultSet.next",Story,High,Closed,"2012-12-18 17:53:30","2012-12-18 17:53:30",21
"The Titanium SDK ","CLI: Building for android with '-b' -build only flag starts the daemon & waits for the device after building the app","Steps to reproduce:  1.Launch CLI by typing 'titanium' in the terminal.  2.Run 'ti build -p android -b -d <project-dir> --log-level trace -s  3.0.0.v20121211130203'.    Actual results:  1.The app builds but it starts the deamon & waits for the device.    Expected results:  1.The app should build but the deamon should not start & not wait for the android device as we have specified the '-b' i.e build only flag.    Trace output:  ",Bug,Medium,Closed,"2012-12-12 01:07:12","2012-12-12 01:07:12",3
"The Titanium SDK ","Android: blur event not called when keyboard is hidden","h1. Problem description  When a TextArea is focused, and the user clicks the back button to hide the soft keyboard, the blur event is not fired. It is not also possible to use the 'android:back' event, as it is not fired when hiding the keyboard.    h1. Steps to reproduce  - Use the following code to test the bug.  - Click on the black window to open a second one with a TextArea  - Click on it to show the keyboard  - Hit the back button: the 'blur' and 'android:back' events are not fired when keyboard is being hidden    ",Bug,Medium,Closed,"2012-12-04 10:06:03","2012-12-04 10:06:03",5
"The Titanium SDK ","BlackBerry: Implement important Titanium.Media functionality",,Story,Medium,Closed,"2012-12-02 05:04:29","2012-12-02 05:04:29",17
"The Titanium SDK ","CLI: Creating MobileWeb module with ti.cloud as appid prohibits any MW Project to run on MWBrowser or Emulator.","Steps To Reproduce:  1. Create MW module with app-id ti.cloud  2. Package it in a default project. (Project with cloud service enabled)  3. Try running same project or new default project in MW Preview in Browser or Emulator.[issue appears here]  4. Now try running a project with disabled cloud service and run same on MW Browser and Emulator.[This runs fine]    Actual:  The folder /Users/pragyarastogi/Library/Application Support/Titanium/modules/mobileweb/ti.cloud prohibits any MW project to run in browser and emulator. Refer screenshot for Emulator error and Browser error. The folder is created when MW module is Package to Titanium SDK.  Note: In 2.1.4.GA SDK the error appears is somewhat different. Refer Screenshot.  Expected: Project must run on MW Emulator or Browser without any error.",Bug,Medium,Closed,"2012-12-01 11:28:10","2012-12-01 11:28:10",3
"The Titanium SDK ","CLI: Alloy: Mobile Packaging Failed","Steps To Reproduce:  1. Create Alloy project  2. Package to Mobile Web Project    Actual:  Failed to package appears  Expected:   Mobile Package must occur without error",Bug,High,Closed,"2012-11-27 13:58:04","2012-11-27 13:58:04",8
"The Titanium SDK ","CLI: colors, lines, and messages ill-formatted with CLI enabled","Console: colors, lines, and messages ill-formatted with CLI enabled (see screenshots).    Steps to Reproduce:    1. Run code:        Actual Result:    colors, line formatting misaligned, and some messages do not display at all.    Expected Result:    colors, lines, and messages should appear and be properly formatted",Sub-task,Medium,Closed,"2012-11-02 22:02:32","2012-11-02 22:02:32",8
"The Titanium SDK ","Android: Make generated projects importable into Eclipse","When we build an android projects using our build scripts, it would be nice if we could directly import that project into eclipse and run it from there to debug.  We will need to create things like .project to make this an eclipse project.","New Feature",High,Closed,"2012-11-08 01:23:49","2012-11-08 01:23:49",3
"The Titanium SDK ","BlackBerry: Invocations","As a BlackBerry developer, I want the ability to integrate with  other applications on the platform in order to provide better  multitasking for the user.",Story,Low,Closed,"2012-11-07 17:30:29","2012-11-07 17:30:29",3
"The Titanium SDK ","Ti.Network.HTTPClient needs to be implemented",,Story,High,Closed,"2012-11-01 20:59:02","2012-11-01 20:59:02",21
"The Titanium SDK ","Correct spacing and grammar in Android NDK console warning.","When packaging an Android module and you forget to make a link to the NDK, it provides a warning, but the warning is missing a space and a period.    Check your modules' build properties)You may need to install",Bug,Low,Closed,"2012-10-21 23:41:51","2012-10-21 23:41:51",3
"The Titanium SDK ","Android: invalid android path in bash profile results in project creation error, improve error message","Failed to build a project for Android in Titanium Studio due to incorrect path to android SDK in a bash profile.  *It happens only in 3.0.0.version of Studio.* It creates projects in Studio 2.1.2  Test steps:  1.Go to Titanium Studio > Preferences > Titanium  2. Browse and set Android SDK Home  3. Browse and set Android NDK Home    Note the difference with a bash profile.  export ANDROID_SDK=/myname/Documents/android-sdk-macosx   export ANDROID_NDK=/myname/Documents/android-ndk-r8   4. Create a project for Android.    Actual result:  Fail to create a project. Failed to locate android-8 and android 2.2  Expected result:  A project should be created successfully.      ",Bug,Medium,Closed,"2012-10-29 21:25:14","2012-10-29 21:25:14",3
"The Titanium SDK ","Ti API: Add new Facebook 3 views","Facebook recently updated their API for iOS to 3.1 and for Android to 3.0. TIMOB-10422 is to update the FB SDK. This ticket is to introduce new functionality brought about by FB3. As such, there will be parity issues to consider.","New Feature",Low,Closed,"2012-10-25 18:37:19","2012-10-25 18:37:19",1
"The Titanium SDK ","Android: TabGroup.backgroundColor doesn't change background.","Unable to set the background color of a tab group.  This appears to be caused by having no native view setup  to handle the view property changes in TiUIView.    h4. Test Case  {code:JavaScript}  var tabGroup = Ti.UI.createTabGroup({    backgroundColor: 'blue'  });    tabGroup.open();  {code}    Pass: Background color of the tab group is blue.  Fail: Background color isn't blue, but black.",Bug,Medium,Closed,"2012-10-11 20:19:00","2012-10-11 20:19:00",1
"The Titanium SDK ","Android Device Debugging: console window fails to display console output after port forward","Titanium Studio Console output fail to display output results.    Steps to Reproduce:  1. Create default project, add sample code:    2. Run 'debug' on Android Device. Port forward message should appear on console.  3. Launch app from device.    Actual Result:  Titanium Studio console log fail to display the console output    Expected Result:  Titanium Studio console log display the console output as DDMS or Catlog.     ",Bug,Critical,Closed,"2012-09-10 15:20:58","2012-09-10 15:20:58",13
"The Titanium SDK ","iOS: Debugger: breakpoints ignored if app is only primitive assignment statements","Breakpoints ignored if the app is only comprised of primitive assignment statements.    This is not a regression. This does not occur on Android. This is a parity issue.    This is basic functionality.    Steps to Reproduce:    1. Run code in debug (manually insert breakpoints as per code comments):        Actual Result:    All breakpoints ignored.    Expected Result:    All breakpoints should be hit (as 'Resume' is pressed).",Bug,Low,Closed,"2012-09-27 00:41:24","2012-09-27 00:41:24",1
"The Titanium SDK ","iOS: Debugger: breakpoint at unassigned variable declaration skipped","Breakpoints at unassigned variable declarations are skipped.    For example:        Running this code in debug mode will skip all breakpoints.    This does not occur in Android, this is a parity issue.    Steps to Reproduce:    1. Run code in debug (manually insert breakpoints as per code comments):        Actual Result:    App exits without hitting any breakpoints.    Expected Result:    The first breakpoint should be hit and pressing 'Resume' should hit the next breakpoint.    Here is the expected console log for the sample code:    ",Bug,Low,Reopened,"2012-09-26 20:39:37","2012-09-26 20:39:37",1
"The Titanium SDK ","Tooling: don't rebuild local project app if project is not dirty","Currently, if a project has not been edited, and build is called, the entire project rebuilds. We could detect if destination app matches last build in project to enhance build time. This is particularly relevant for device debugging.    Steps to Reproduce:    1. Open Titanium Studio.  2. Import KitchenSink.  3. Run on Device (Android or iOS) and wait for <USER>to complete.  4. Run on Device again.    Actual Result:    App is rebuilt, could take around 30 seconds.    Expected Result:    App should not be rebuilt, should take 1 second.","New Feature",Low,Closed,"2012-09-25 23:54:29","2012-09-25 23:54:29",5
"The Titanium SDK ","iOS: Update jscore to 538.11.1 version","Ticket for tracking the update of JSCore to the version shipping with a later version of iOS. Document is here: https://wiki.<USER>org/display/pe/iOS+-+Updating+JSCore.     We can pick a version based on a tag from https://trac.webkit.org/browser/tags?order=name. Some versions we have been able to ascertain, but it is unclear why we wouldn't just pick the latest stable version.    iOS 8.X: https://trac.webkit.org/browser/tags/Safari-600.1.4  iOS 8.1.0: AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12B411 Safari/600.1.4  iOS 8.0.2: AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A405 Safari/600.1.4  iOS 8.0.0: AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A365 Safari/600.1.4    iOS: 7.1: https://trac.webkit.org/browser/tags/Safari-537.51.2  7.1: AppleWebKit/537.51.2 (KHTML, like Gecko) Version/7.0 Mobile/11D167 Safari/9537.53    iOS 6.1.3: http://www.opensource.apple.com/release/ios-613/  ",Story,Medium,Closed,"2012-09-25 03:39:02","2012-09-25 03:39:02",34
"The Titanium SDK ","iOS: Ti.Facebook.dialog feed broken for large description texts.","When I use a large description text inside Ti.Facebook.dialog(feed), it displays some unescaped / uninterpreted html data throughout the text.    I'm not exactly sure if this is a Titanium Mobile bug or the bug lies within the Facebook SDK version used under the Ti Module itself.      Sample Code:          It shows the text, and after a certain amount of chars it shows the html code (not interpreted):    {code:html}  <span class=text_exposed_hide>...</span><div class=text_exposed_show>rest of the text...</div>  {code}      Follows an image attached with the output...",Bug,Low,Closed,"2012-09-20 03:49:23","2012-09-20 03:49:23",1
"The Titanium SDK ","Windows: Implement UI.PickerRow title and setTitle",,"New Feature",Low,Closed,"2012-09-14 12:33:21","2012-09-14 12:33:21",3
"The Titanium SDK ","Blackberry: Implement important UI.TableView functionality","Use the implementation matrix to see what's remaining (these are things that are not implemented but supported in Cascades):  https://docs.google.com/a/macadamian.com/spreadsheet/ccc?key=0Ajs-e76-B0yIdG1oLVVleVVxaGRYd3lWWXd0czhqUFE    Implement at least:    * Titanium.UI.TableView.addEventListener  * Titanium.UI.TableView.appendRow  * Titanium.UI.TableView.setData",Story,High,Closed,"2012-09-12 11:47:31","2012-09-12 11:47:31",21
"The Titanium SDK ","Blackberry: Implement important Titanium.UI.Switch functionality","Use the implementation matrix to see what's remaining (these are things that are not implemented but supported in Cascades):  https://docs.google.com/a/macadamian.com/spreadsheet/ccc?key=0Ajs-e76-B0yIdG1oLVVleVVxaGRYd3lWWXd0czhqUFE",Story,Medium,Closed,"2012-09-12 11:44:44","2012-09-12 11:44:44",15
"The Titanium SDK ","Blackberry: Implement important Titanium.UI.Slider functionality","Use the implementation matrix to see what's remaining (these are things that are not implemented but supported in Cascades):  https://docs.google.com/a/macadamian.com/spreadsheet/ccc?key=0Ajs-e76-B0yIdG1oLVVleVVxaGRYd3lWWXd0czhqUFE",Story,High,Closed,"2012-09-12 11:43:59","2012-09-12 11:43:59",15
"The Titanium SDK ","Blackberry: Implement important Titanium.UI.ProgressBar functionality","Use the implementation matrix to see what's remaining (these are things that are not implemented but supported in Cascades):  https://docs.google.com/a/macadamian.com/spreadsheet/ccc?key=0Ajs-e76-B0yIdG1oLVVleVVxaGRYd3lWWXd0czhqUFE",Story,High,Closed,"2012-09-12 11:42:30","2012-09-12 11:42:30",15
"The Titanium SDK ","BlackBerry: Implement important Titanium.UI.ImageView functionality","Use the implementation matrix to see what's remaining (these are things that are not implemented but supported in Cascades):  https://docs.google.com/a/macadamian.com/spreadsheet/ccc?key=0Ajs-e76-B0yIdG1oLVVleVVxaGRYd3lWWXd0czhqUFE",Story,Medium,Closed,"2012-09-12 11:25:21","2012-09-12 11:25:21",19
"The Titanium SDK ","BlackBerry: Implement important Titanium.UI.TextField functionality","Use the implementation matrix to see what's remaining (these are things that are not implemented but supported in Cascades):  https://docs.google.com/a/macadamian.com/spreadsheet/ccc?key=0Ajs-e76-B0yIdG1oLVVleVVxaGRYd3lWWXd0czhqUFE    Implement at least:    * Titanium.UI.TextField.blur  * Titanium.UI.TextField.focus  * Titanium.UI.TextField.keyboardType",Story,High,Closed,"2012-09-12 11:24:07","2012-09-12 11:24:07",21
"The Titanium SDK ","BlackBerry: Implement important Titanium.UI.ActivityIndicator functionality","Use the implementation matrix to see what's remaining (these are things that are not implemented but supported in Cascades):  https://docs.google.com/a/macadamian.com/spreadsheet/ccc?key=0Ajs-e76-B0yIdG1oLVVleVVxaGRYd3lWWXd0czhqUFE    Add at least:    * Titanium.UI.ActivityIndicator.style (does not appear to be applicable in Cascades)",Story,High,Closed,"2012-09-12 11:19:11","2012-09-12 11:19:11",21
"The Titanium SDK ","Blackberry: Implement important Titanium.UI methods","Use the implementation matrix to see what's remaining (these are things that are not implemented but supported in Cascades):  https://docs.google.com/a/macadamian.com/spreadsheet/ccc?key=0Ajs-e76-B0yIdG1oLVVleVVxaGRYd3lWWXd0czhqUFE",Story,Medium,Closed,"2012-09-12 11:17:51","2012-09-12 11:17:51",2
"The Titanium SDK ","Ti Studio: when creating a new project, <iphone> and <mobileweb> sections are added to TiApp.xml.  Project is Android only.","h2. Problem  When you create a New | Titanium Mobile Project, <iphone> and <mobileweb> sections get added to the initial TiApp.xml file, even though the project is Android only (iPhone and Mobile Web were unchecked).    h2. Expected Behavior  No <iphone> or <mobileweb> sections should be added to the initial TiApp.xml file when creating a new Android-only project.    Likewise, no <android> or <mobileweb> sections should be added when creating an iPhone-only project.    h2. Actual Behavior  # Create a New | Titanium Mobile Project.  # Uncheck Mobile Web and iPhone.  # The resulting TiApp.xml file will have <iphone> and <mobileweb> sections in it.  ",Story,Low,Closed,"2012-09-05 10:38:05","2012-09-05 10:38:05",0
"The Titanium SDK ","Blackberry: Implement important Ti.UI.Label functionality","Implement at least:    * Titanium.UI.Label.opacity  * Titanium.UI.Label.touchEnabled  * Titanium.UI.Label.url",Story,High,Closed,"2012-09-11 14:32:24","2012-09-11 14:32:24",21
"The Titanium SDK ","TiAPI: HTTPClient: new event for continuous data stream","h2. Feature description  HTTPClientProxy should support didReceiveData method.    h2. Customer's original description of the request  I needed to have a comet session using Titanium on iOS. Right now the implementation of TiNetworkHTTPClientProxy doesnt allow this because it doesnt implement didReceiveData of ASIHTTPRequest. Though using didReceiveData would have broken ondatastream and onsendstream.  So what i did was create a third one ondatastream for live data processing.  In the meantime i renamed(for now) ondatastream to ondownloadprogress and onsendstream to onsendprogress.    WARNING: on ios using the new ondatastream will break responseText and responseData. This is due to the ASIHTTPRequest implementation    h2. Pull request  See https://github.com/<USER>titanium_mobile/pull/2844 and related links and discussions.","New Feature",Low,Closed,"2012-07-31 00:27:55","2012-07-31 00:27:55",1
"The Titanium SDK ","Blackberry: Upgrade to R8",,Story,Medium,Closed,"2012-09-10 05:31:33","2012-09-10 05:31:33",8
"The Titanium SDK ","Blackberry: Fix Anvil issue caused by sync",,Story,High,Closed,"2012-09-07 14:01:55","2012-09-07 14:01:55",2
"The Titanium SDK ","iOS: TableView scrolls back to focused text field on scroll end","*Code*  http://pastie.org/4674079    *Expected Behaviour*  The user should be able to scroll through the table without being taken back to focused textField. The textField should stay focused.    *Actual Behaviour*  TableView of textFields scrolls back to focussed text field on scroll end.      *Notes*  - Tested on iOS 5.1  - To Replicate the issue, click on textField in row 6 then once the textfield gains focus scroll down the table, as soon the scrolling ends it will take you back to row 6.",Bug,High,Resolved,"2012-09-06 14:03:15","2012-09-06 14:03:15",13
"The Titanium SDK ","BlackBerry: Sync with Appcelerator branch (Sprint 13)",,Story,Medium,Closed,"2012-09-05 07:48:03","2012-09-05 07:48:03",2
"The Titanium SDK ","CLI: Android: run hook for Android apps",,"New Feature",Medium,Closed,"2012-09-04 15:33:30","2012-09-04 15:33:30",3
"The Titanium SDK ","CLI: Module Build","The task involves a few things before implementing the platform specific logic.    h4. {{cli/commands/build.js}}    In the {{project-dir}} callback function, determine if the project is an app or a module. If the project has a {{tiapp.xml}}, then it is an app. If the project has a {{timodule.xml}}, it is a module. When a module project is found, the {{timodule.xml}} should be parsed and saved into the {{cli.timodule}} variable. If the the project is neither a app or module, error and exit. You should set the {{cli.argv.type}} to the appropriate value. Remember that you need to scan up the directory tree since the {{project-dir}} may be a subdirectory.    In the {{validate()}} function, if it is an app, then do the {{ti.validateCorrectSDK()}} and {{ti.validatePlatform()}} stuff. If it is a module, then validate module stuff.    In the {{run()}} function, I think you only need to call {{ti.resolvePlatform()}} for apps. The {{buildModule}} should be {{path.join(__dirname, '..', '..', platform, 'cli', 'commands', '_build.js')}} for apps and {{path.join(__dirname, '..', '..', platform, 'cli', 'commands', '_build_module.js')}} for modules. If {{_build_module.js}} file does not exist, error and exit.    h4. {{node_modules/titanium-sdk/lib/builder.js}}    Add {{this.timodule = cli.timodule;}} to the {{run()}} function after the {{this.tiapp}} line.",Epic,High,Closed,"2012-09-04 14:48:48","2012-09-04 14:48:48",0
"The Titanium SDK ","Blackberry: AlertDialog inherits from View rather than Proxy","AlertDialog inherits from the wrong parent.    To change this, the properties of UI.AlertDialog need to be moved to TIProxy otherwise the properties don't work on AlertDialog and this is why it is currently this way.  This will be the case for all UI objects that should extend Proxy directly instead of View.",Bug,Medium,Closed,"2012-09-04 13:19:29","2012-09-04 13:19:29",19
"The Titanium SDK ","Android: Modules: remove gperf as a build dependency","When trying to build an android module on windows 7, there was an uninformative failure/error.        Upon further investigation (using titanium studio > android module project > build.xml > right click > run as ant) it was found that gperf was somehow removed from the path or uninstalled from that machine, and it needed to be reinstalled and added to the system path.    This does not occur on a fresh studio/sdk install on windows 7.    It is suggested to remove gperf as a dependency to build android modules.    Note that gperf is not documented as a dependency.    Android Module Documentation (wiki.<USER>org):    https://wiki.<USER>org/display/guides2/Android+Module+Development+Guide#AndroidModuleDevelopmentGuide-Step0%3AInstallingtheNecessaryComponents    Steps to Reproduce:    1. Install Titanium Studio and Titanium SDK on Windows 7.  2. Install Android SDK and Android NDK.  3. Uninstall gperf or remove from the system path.  4. Create an Android Module and build the module (i.e., Publish > Package Module > to Titanium Project).    Actual Result:    Build failure if gperf is not installed.    Expected Result:    Success (no gperf dependency), or a meaningful error message.    Note that the inclusion of gperf causes overhead for Titanium Studio to include built-in software prerequisites.",Improvement,High,Closed,"2012-08-30 13:24:09","2012-08-30 13:24:09",8
"The Titanium SDK ","Blackberry: Implement Titanium.UI.TextField value property","Create TextField. Try to set Value or get value during some action (for example button click event).  for getValue() -  undefined is returned.  for setValue() - doesn't set the textfield value.    ",Story,Medium,Closed,"2012-08-30 08:53:13","2012-08-30 08:53:13",0.5
"The Titanium SDK ","BlackBerry: Anvil: Add ability to run on device",,Story,Medium,Closed,"2012-08-30 06:19:04","2012-08-30 06:19:04",2
"The Titanium SDK ","Tooling: Android emulator silently fails","When I try to run the android emulator I see the following in the Debug output:    A bit of poking around finds that the emulator does not launch when the armeabi-v7a argument is attached.     I think this has something to do with the x86 emulators I had tested against, but can not figure out how to undo that change.    Steps to reproduce:  1. Create an Android project.  2. Run the project in the emulator.    Expected results:  The app should run in the emulator or should throw a relevant error.    Actual results:  The debug shows the above message before flipping the view to waiting for the emulator to be ready which finally times out.",Bug,High,Closed,"2012-08-15 08:22:45","2012-08-15 08:22:45",8
"The Titanium SDK ","iOS: webView.loading always returns null","h3. Expected    webView returns `true` if loading, `false` if not.      h3. Actual    webView always returns null      h3. Testcase    Click around on some links and see that it only reports `<null>` in Studio.    ",Bug,Medium,Closed,"2012-08-11 11:57:16","2012-08-11 11:57:16",3
"The Titanium SDK ","Blackberry: Merge Appcelerator's KS branch with our branch",,Story,Medium,Closed,"2012-08-16 07:32:35","2012-08-16 07:32:35",2
"The Titanium SDK ","BlackBerry: Anvil: Make list of anvil tests that can be run for BlackBerry",,Story,Medium,Closed,"2012-08-14 08:34:14","2012-08-14 08:34:14",0.5
"The Titanium SDK ","Blackberry: Imageview parity for scaling behavior","As part of TIMOB-3749 scaling behavior of imageViews was changed. If either width or height of image view are set to follow SIZE behavior('auto',Ti.UI.SIZE,undefined) then the image is scaled with aspect ratio intact. Otherwise the image is scaled ignoring aspect ratio. Test code below  ",Story,Medium,Closed,"2012-08-09 11:08:59","2012-08-09 11:08:59",8
"The Titanium SDK ","Blackberry: Implement applyProperties({}) method on Ti.UI objects to take a list of json properties as is done at create time.",,"New Feature",High,Closed,"2012-08-08 11:45:59","2012-08-08 11:45:59",8
"The Titanium SDK ","BlackBerry: Add support of javascript implementation of parts of the Ti API","Unmbrella task to link to all the bug and issue of the current framework that prevent easy extension of the api using js.    Will also need to be figured out: inheritance between native objects and js objects",Story,Medium,Closed,"2012-08-03 11:03:30","2012-08-03 11:03:30",8
"The Titanium SDK ","Blackberry: Support overriding the default UI unit via tiapp.xml","On Android and iOS, the default unit can be overriden on a per-application level by setting the ti.ui.defaultunit property in tiapp.xml. For example, to use DIPs as the default on all platforms, set defaultunit to dip:    <property name=ti.ui.defaultunit type=string>dip</property>    The value for ti.ui.defaultunit can be any of the unit specifiers defined above, or system to specify that the platform's default unit should be used.",Story,Low,Closed,"2012-08-03 08:36:26","2012-08-03 08:36:26",5
"The Titanium SDK ","Blackberry: Update API doc to state what is NOT implemented","This activity should be done at the feature complete stage of the project",Story,Medium,Closed,"2012-08-02 07:12:22","2012-08-02 07:12:22",3
"The Titanium SDK ","Android: Modules with upper case in project name fails to create with internal error.","When creating an android module in studio using upper case letters in the project name (e.g., MyAndroid, as opposed to myandroid), the creation fails with internal error: could not move file. This appears to be related to TISTUD-1633.    This is not regression.    This does not occur with mobileweb modules, nor does it occur on OS X.    When an android module is created using the command line, the module is created correctly, but the project name is automatically converted to lower case.    Steps to Reproduce:    1. Create new android module from studio with project name containing uppercase letters.    Actual Result:    Module fails to create with cannot move folder errors.    Expected Result:    Module creates without error.",Bug,Low,Closed,"2012-08-01 14:46:35","2012-08-01 14:46:35",5
"The Titanium SDK ","Android: Intermittent debugger variable fails to stay expanded","1. Import debug_test into TiStudio (attached)  2. From TiStudio go to debug view   3. In the breakpoint window, right-click to Import Breakpoints...   4. Browse to breakpoint-4013.bkpt (attached)_   5. Run in debug   6. Click 'App event/timer' button (breakpoint hits: app.js:131)   7. Expand 'e' variable   8. Expand 'x' property of 'e'   9. Hightlight 'e' (select in variables pane)   10. Resume (breakpoint hits: app.js:135)     Actual: Intermittently, after step 10 the disclosure triangle will collapse unexpectedly on the 'x' property of 'e'. See screen shot.  Expected: Both 'x' and 'e' values are fully expanded.    ",Bug,Low,Closed,"2011-07-20 17:33:39","2011-07-20 17:33:39",1
"The Titanium SDK ","BlackBerry: Implement important Titanium.Network functionality","Implement at least:    * Titanium.Network.httpURLFormatter  * Titanium.Network.networkType  * Titanium.Network.online  * Titanium.Network.registerForPushNotifications",Story,High,Closed,"2012-07-31 14:04:56","2012-07-31 14:04:56",21
"The Titanium SDK ","BlackBerry: Finish size and position methods / properties on R6 UI View","Implement:    getHeight  getWidth  getBottom  setBottom  getRight  setRight  getSize  setSize",Story,Medium,Closed,"2012-07-31 12:21:02","2012-07-31 12:21:02",3
"The Titanium SDK ","BlackBerry: Implement getZIndex on R6 UI View",,Story,Medium,Closed,"2012-07-31 12:16:25","2012-07-31 12:16:25",2
"The Titanium SDK ","BlackBerry: Implement getWidth, getHeight in R6 UI View",,Story,Medium,Closed,"2012-07-31 12:14:25","2012-07-31 12:14:25",2
"The Titanium SDK ","BlackBerry: Implement Ti.UI.View setLayout / getLayout",,Sub-task,Medium,Closed,"2012-07-31 12:11:56","2012-07-31 12:11:56",4
"The Titanium SDK ","BlackBerry: Complete Ti.UI.View methods / properties / events","Complete UI View methods / properties / events NOT required by Kitchen Sink    Add at least:    * Titanium.UI.View.animate  * Titanium.UI.View.append  * Titanium.UI.View.backgroundGradient  * Titanium.UI.View.borderColor  * Titanium.UI.View.borderRadius  * Titanium.UI.View.borderWidth  * Titanium.UI.View.control  * Titanium.UI.View.currentIndex  * Titanium.UI.View.currentY  * Titanium.UI.View.fireEvent  * Titanium.UI.View.id  * Titanium.UI.View.layout  * Titanium.UI.View.on  * Titanium.UI.View.refreshRssTable  * Titanium.UI.View.reset  * Titanium.UI.View.scrollView  * Titanium.UI.View.showArticle  * Titanium.UI.View.shuffle  * Titanium.UI.View.state  * Titanium.UI.View.titleId  * Titanium.UI.View.toggle  * Titanium.UI.View.toImage  * Titanium.UI.View.touchEnabled  * Titanium.UI.View.updateHandheldNav  * Titanium.UI.View.updateSubNav  * Titanium.UI.View.videoId    ",Story,High,Closed,"2012-07-31 10:35:55","2012-07-31 10:35:55",21
"The Titanium SDK ","Blackberry: adjust UI controls based on R8","This umbrella task is to address functional delta in controls that were previously implemented using R4 release of Cascades. It could either mean implementing new functionality now available in R6, or redoing something that no longer works or was implemented as a workaround.    Refer to the implementation matrix to see what elements need to be implemented",Story,Medium,Closed,"2012-07-31 10:22:24","2012-07-31 10:22:24",2
"The Titanium SDK ","BlackBerry: Implement Titanium.IOStream","IOStream is the interface that all stream types implement.  Methods: 5  Sub Classes: 4",Story,Medium,Closed,"2012-07-31 07:52:03","2012-07-31 07:52:03",3
"The Titanium SDK ","BlackBerry: Sync with Appcelerator branch (Sprint 11)",,Story,Medium,Closed,"2012-07-30 11:11:23","2012-07-30 11:11:23",2
"The Titanium SDK ","Blackberry: Implement startLayout, finishLayout, updateLayout methods",,Story,Medium,Closed,"2012-07-30 01:39:52","2012-07-30 01:39:52",3
"The Titanium SDK "," iOS : Events not getting fired for tabs in tab group","TabGroup click event is not fired.  This is not regression. This issue occurs from 2.0.1.    Steps to Reproduce:  1. Create an app using the code below.  2. Launch app. and click on TabGroup.    Expected Result:  TabGroup click event should be fired and should be reflected on the console.    Actual:  TabGroup click event is not fired.    ",Bug,High,Closed,"2012-07-26 03:04:02","2012-07-26 03:04:02",5
"The Titanium SDK ","iOS: Add Organization and Organizational Unit certificate information to titanium info command","A customer has asked that we provide the organization attached to a certificate to display in the iOS packaging dialog. The information about the current certificates Studio derives from prereq.py.    It is suggested that the certificate JSON string be amended to include:    * Organization  * Organizational Unit    It is suggested we do this as part of prereq.py as perhaps there is other uses for this information in the context of the CLI","New Feature",Medium,Closed,"2012-07-24 08:16:03","2012-07-24 08:16:03",5
"The Titanium SDK ","BlackBerry: Revisit UI.AlertDialog implementation based on R6","Depends on Cascades R6    An alert dialog is a modal view that includes an optional title, a message and buttons, positioned in the middle of the display.    In iOS:  https://developer.apple.com/library/ios/#documentation/UIKit/Reference/UIAlertView_Class/UIAlertView/UIAlertView.html",Story,Medium,Closed,"2012-07-20 10:38:43","2012-07-20 10:38:43",2
"The Titanium SDK ","BlackBerry: Sync with Appcelerator branch",,Story,High,Closed,"2012-07-18 13:27:38","2012-07-18 13:27:38",3
"The Titanium SDK ","CLI: fastdev builtin for Android",,Story,Medium,Closed,"2012-07-17 01:56:03","2012-07-17 01:56:03",0
"The Titanium SDK ","BlackBerry: Implement UI.Tab.open and .setWindow, needed for KitchenSink","To get this to work in KS, we need TIMOB-9879 and whatever else to fix the click event for TableView, but the Tab.open and setWindow can still be implemented separately.    Take a look at android/modules/ui/src/js/tab.js for .open(), but currently we can't use the bootstrapping to extend the API because we create different objects instead of using the prototype.",Story,High,Closed,"2012-07-16 13:38:00","2012-07-16 13:38:00",7
"The Titanium SDK ","BlackBerry: Complete 'remove' method in UI View","Implement 'remove' method for removing child controls from a container.",Story,Medium,Closed,"2012-07-16 12:52:27","2012-07-16 12:52:27",3
"The Titanium SDK ","BlackBerry: Fix logging/exception tags and exception output","Currently, when we throw an exception while a file is being loaded by include or require, both files are shown in the message (eg file1.js line 2: file2.js line 5: Missing argument).  We need to make changes so the following is true:  # the exception has the [ERROR] tag  # only the filename containing the actual error is shown  ** might need to get rid of some TryCatch's  ** might need to use Message::GetScriptResourceName  # the filename shows the full path (minus the .../assets/)  # an exception thrown from an event handler shows the filename and crashes the app (eg calling Ti.API.debug() with no params in a button handler)    Also need to clean/split up TiRootObject::executeScript and implement Ti.API.log in .js.",Story,Medium,Closed,"2012-07-12 12:26:36","2012-07-12 12:26:36",2
"The Titanium SDK ","BlackBerry: Fix/implement relative include/require","Currently, include()'s method of doing relative files only works if all done in successive order. It does not work for windows with a url (not implemented) or if include is used in a function of a file in a subdir.  Also, require() does not have any method right now.    My proposal is to store the filepath in each TiObject so it can be retrieved later when needed.    Also, we need to make sure that require() properly handles a native Titanium module by its ID (eg com.example.module).",Story,High,Closed,"2012-07-12 11:54:04","2012-07-12 11:54:04",2
"The Titanium SDK ","BlackBerry: make sure that TiObjects get to the destruction state",,Story,Medium,Closed,"2012-07-11 07:04:11","2012-07-11 07:04:11",2
"The Titanium SDK ","Android: Packaging: With a non-existing module added to the project in the tiapp.xml,app packages without error and gets installed on device","This is not a regression. IT exists as far as 1.8.2.  Adding a module to the project in the tiapp.xml which does not exist such as <module version=1.0>not.there</module> should prevent the app from getting packaged but it is not. App gets successfully packaged and gets installed on android device.It runs on emulator also without error/warnings.  If I try to install it directly on simulaor or iOS/android device, it gives appropriate error for module not found like:  For iOS simulator and device error is:  [ERROR] Could not find the following required iOS modules:  [ERROR] id: not.there version: 1.0    For android device, error is:  [ERROR] Failed installing com.<USER>timob9090:  pkg: /data/local/tmp/app.apk  Failure [INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES]    Steps to reproduce  1. Create a new app in TiStudio  2. Add a module to the project in the tiapp.xml which does not exist such as <module version=1.0>not.there</module>  3. Package the app/run on android emulator    Actual result:  The app gets packaged/runs on emulator without error.    Expected result:  The app should fail packaging with appropriate error result like  [ERROR] Could not find the following required iOS modules:  [ERROR] id: not.there version: 1.0    And give error for emulator also like(as we get in case of device)   [ERROR] Failed installing com.<USER>timob9090:  pkg: /data/local/tmp/app.apk  Failure [INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES]",Bug,Low,Closed,"2012-07-10 22:58:12","2012-07-10 22:58:12",3
"The Titanium SDK ","BlackBerry: Upgrade Cascades to R6",,Story,High,Closed,"2012-07-10 08:17:41","2012-07-10 08:17:41",3
"The Titanium SDK ","Blackberry: address comments from Martin's review",,Story,Medium,Closed,"2012-07-06 09:11:05","2012-07-06 09:11:05",3
"The Titanium SDK ","Android: increase AVD storage size to reduce [FAILED_INSUFFICIENT_STORAGE] errors","h2. Expected results:    I should be able to build and install more than a few Ti apps to an Android emulator.    h2. Actual results:    Due to defaults defined in builder.py, I can fit only a couple of Ti apps before the emulator runs out of storage space. This results in a  [FAILED_INSUFFICIENT_STORAGE] error. I can delete other apps to free space. However, if I need to work on multiple apps, I end up having to delete/install frequently.    h2. Fix    In builder.py (in my version, line 491) increase the partition size value. Current value is 128 (MB). I suggest at least 1024.      ","New Feature",High,Closed,"2012-07-02 12:19:20","2012-07-02 12:19:20",1
"The Titanium SDK ","BlackBerry: Integrate Anvil unit test framework and get tests to run","- Implement platform specific file in anvil/driver/platforms (closest match likely to be android.js)  - minor updates to anvil/driver/driver.js to add BB as a known platform  - select a socket port for BB in anvil/driver/config.js created from a copy of exampleConfig.js  - Identify necessary Ti API calls needed for the harness app and implement them  - Figure out the communication between driver and harness",Story,Medium,Closed,"2012-06-29 05:59:00","2012-06-29 05:59:00",7
"The Titanium SDK ","BlackBerry: Support UI Controller property which value is another controller",,Story,Medium,Closed,"2012-06-28 04:55:19","2012-06-28 04:55:19",5
"The Titanium SDK ","BlackBerry: Implement important Titanium.UI.Picker functionality","Need to implement plain picker using BB drop down control.    Use the implementation matrix to see what's remaining (these are things that are not implemented but supported in Cascades):  https://docs.google.com/a/macadamian.com/spreadsheet/ccc?key=0Ajs-e76-B0yIdG1oLVVleVVxaGRYd3lWWXd0czhqUFE","New Feature",Low,Closed,"2012-06-25 05:17:01","2012-06-25 05:17:01",17
"The Titanium SDK ","iOS: Facebook - On iPod 3rd Gen (4.0.2), Facebook login dialog gets dismissed after it launches","Steps to reproduce:  1. Import KS from Samples pane in TiStudio  2. Install KS to iPod  3. Go to Mashups > Facebook > Login/Logout  4. Press Login with Facebook button    Actual: Facebook login dialog gets dismissed once it launches.  Expected: Facebook login dialog should not be dismissed once it is launched.    Note:  * This is *not a regression.* This still occurs in 2.0.2.GA  * Facebook login *still works as expected* on ipod (4.3.5) and iphone 4 (5.1)",Bug,Low,Closed,"2012-06-23 14:59:09","2012-06-23 14:59:09",1
"The Titanium SDK ","Blackberry: Resolve and clean TODOs and FIXMEs in the code",,Story,Medium,Closed,"2012-06-21 06:46:23","2012-06-21 06:46:23",8
"The Titanium SDK ","Android: Packaging:No warning displayed for default system value of 'ti.ui.defaultunit'.","It is not a regression.It exists as far as 1.8.2    While packaging the app,when the value of ti.ui.defaultunit is 'abc' -  Expected - Display warning during packaging, use default system value  Actual - No warnings are displayed while packaging.    Logs generated while packaging are attached with the bug.",Bug,Low,Closed,"2012-06-20 22:59:20","2012-06-20 22:59:20",3
"The Titanium SDK ","Blackberry: fix property enumeration on JS object created by the framework","calling toString() on an object created by the Ti framework fails.  We think that the property enumeration doesn't enumerate the inherited properties.  ",Story,High,Closed,"2012-06-20 14:23:17","2012-06-20 14:23:17",1
"The Titanium SDK ","BlackBerry: Add JavaScript bootstrapping to framework","Some of the Titanium implementation can be done using JavaScript so we need to provide a way to run our own bootstrapping .js files before we load app.js. There is possibly a lot of JavaScript code we can reuse from the android directory.    The method I suggest is to package the .js files into the .bar file. The files should be put into a new folder called framework that is next to, not inside, the assets folder. The assets and framework folders should be separate so we don't have conflicts. The only complication would be that the require() and include() functions might need a flag to know whether the app has been bootstrapped or not (ie read from framework if bootstrapping and assets if not). A flag may not be sufficient if things are done asynchronously so the other solution would be to check if the file calling the require/include is in framework or assets and make sure to load the file from the same directory.    There should be one file called boostrap.js that will include/require the other files, as needed.","New Feature",High,Closed,"2012-06-20 08:37:26","2012-06-20 08:37:26",5
"The Titanium SDK ","TiAPI: Allow configuration of the default unit (pixels, dpi, etc.)","Titanium provides universal unit support by allowing the developer to specify unit types when specifying absolute layout parameters ( ie: width, height, left, etc.).    if the developer specifies a layout parameter without specifying a unit, the system selects the default unit type ( currently pixels ).    The developer must explicitly specify the layout type for unit types that are not the default pixel unit.    example:       width: 123dp        or     width: 123mm    Rarely do application developers create applications that mix units. Therefore devleopers must append to every unit specification the unit type if they do not want to use the default pixels.    Causing the following issues:     - reduces the efficiency of the developer,      - increases the probability of user created bugs in the application code.     - increases the size of the executing code,     - decreases the performance do to the increased code execution size.    Adding a default unit override would resolve these issues allowing the developer to set the number and omit the unit type.          ","New Feature",Low,Closed,"2012-06-18 08:31:41","2012-06-18 08:31:41",5
"The Titanium SDK ","BlackBerry: Implement important Titanium.UI.Window functionality","Use the implementation matrix to see what's remaining: https://docs.google.com/a/macadamian.com/spreadsheet/ccc?key=0Ajs-e76-B0yIdG1oLVVleVVxaGRYd3lWWXd0czhqUFE  Implement at least:  * Titanium.UI.Window.modal (sheets/dialogs in Cascades?) * Titanium.UI.Window.setKeepScreenOn",Story,High,Closed,"2012-06-18 07:26:57","2012-06-18 07:26:57",21
"The Titanium SDK ","BlackBerry: Implement important Titanium.UI.TabGroup functionality","Use the implementation matrix to see what's remaining (these are things that are not implemented but supported in Cascades):  https://docs.google.com/a/macadamian.com/spreadsheet/ccc?key=0Ajs-e76-B0yIdG1oLVVleVVxaGRYd3lWWXd0czhqUFE    Add at least:    * Titanium.UI.TabGroup.enabled  * Titanium.UI.TabGroup.touchEnabled",Story,High,Closed,"2012-06-18 07:24:31","2012-06-18 07:24:31",21
"The Titanium SDK ","Android: Emulator: Not recognized by adb, unable to install to Emulator.","When Android emulator deployed, adb fails to recognize the emulator.   This is intermittent issue, it effect all emulator versions. This is not an regression it occurred in 2.0.2     Step to reproduce:    1) Create default project.  2) Right Click, Select Run As, Select Run Configurations...  3) Select Titanium Android Emulator   4) Select platform Android API: Google API Android 4.0.3  5) Apply and Run.      Expected Result: adb should recognized the emulator or if this occur then studio should be provide error correction to handle the error properly.    Actual Result: adb doesn't recognize the emulator. Studio fails to notified to developer of the failure and App never installed. ",Bug,High,Closed,"2012-06-14 11:26:08","2012-06-14 11:26:08",13
"The Titanium SDK ","BlackBerry: Implement Ti.BufferStream",,Story,Medium,Closed,"2012-06-14 08:27:46","2012-06-14 08:27:46",3
"The Titanium SDK ","BlackBerry: Implement important Titanium.Buffer functionality",,Story,Medium,Closed,"2012-06-14 08:26:43","2012-06-14 08:26:43",15
"The Titanium SDK ","BlackBerry: Implement include()","Needed for unit tests and Kitchen Sink",Sub-task,Medium,Closed,"2012-06-14 08:08:51","2012-06-14 08:08:51",19
"The Titanium SDK ","MobileWeb: Focus event in tabgroup not being fired","h4. Problem Description  Tabgroup's focus event is not working as with iOS.     h4. Actual Results  The focus event is never fired     h4. Expected results  The focus event should fire.    h4. Testcase  1. Create new mobile Project.  2. Paste app.js:    3. Test this code in iOS, compare with this code in MobileWeb.    ",Bug,Low,Closed,"2012-06-11 15:38:20","2012-06-11 15:38:20",3
"The Titanium SDK ","iOS: cancelLocalNotification on iOS is broken","In 'bg.js' of kitchensink, notifications cannot be cancelled using 'id' passed as userinfo dictionary to the notification.    {panel:title=bg.js}      This is fixed by Pedro and the fix is available here.    https://gist.github.com/48a765c50f64aa7c47ed",Bug,High,Closed,"2012-06-11 11:12:10","2012-06-11 11:12:10",3
"The Titanium SDK ","BlackBerry: Implement UI.TableView - Part 2",,Sub-task,Low,Closed,"2012-06-08 05:53:19","2012-06-08 05:53:19",216
"The Titanium SDK ","BlackBerry: Complete Layout Handling of UI View","Part of this task need to clean left and top properties from inherited classes that don't need to override the default implementation.  One such occurence is in NativeListViewObject",Story,Medium,Closed,"2012-06-07 20:10:58","2012-06-07 20:10:58",5
"The Titanium SDK ","BlackBerry: Implement UI.Label - part3",,Sub-task,Low,Closed,"2012-06-06 05:33:18","2012-06-06 05:33:18",147
"The Titanium SDK ","Android: Map - Add centerOffset property to Ti.Map.Annotation","This is the parity ticket for Android to see if such functionality can be ported over.    ------  Add centerOffset property to a custom annotation to be able to set a x & y offset to the image of the annotation.  Right now the center of the annotation is the center of the image size. This makes that some images appear not to be in their proper place at certain zoom levels.    Reference to official documentation: http://developer.apple.com/library/ios/#documentation/MapKit/Reference/MKAnnotationView_Class/Reference/Reference.html#//apple_ref/doc/uid/TP40008207    I have already coded the feature and I open this ticket in order to get the pull request accepted.","New Feature",High,Closed,"2012-06-05 15:12:16","2012-06-05 15:12:16",2
"The Titanium SDK ","Blackberry: Get standard JS keywords to work in V8","things like the following don't currently work in V8:    var v = new String('bla bla'); // v is undefined after executing that line    var i = parseInt('5');         // TypeError: parseInt not a member of #error      These are just 2 examples, many more likely have the same behavior.    ",Story,High,Closed,"2012-06-05 13:52:28","2012-06-05 13:52:28",5
"The Titanium SDK ","BlackBerry: Add script to create and install debug token","[Tatyana] A note to myself: this task is a necessary step to be able to deploy an app to a device.    This could be added to the devicemanagement.py script.        This is an example of what the script should do:  ",Story,Low,Closed,"2012-06-05 07:39:47","2012-06-05 07:39:47",2
"The Titanium SDK ","BlackBerry: bring in the latest Appcelerator code into BB branch",,Story,Medium,Closed,"2012-06-04 12:42:52","2012-06-04 12:42:52",3
"The Titanium SDK ","Android: Add radial support to view backgroundGradient property","Android's radial gradient shader only supports a single point circle radial gradient.  The Titanium radial gradient follows what is specified in the HTML Canvas specification  and is also the native behavior on iOS.    We should investigate a way to implement our own radial gradient that follows  the HTML Canvas specification or wait for Android to expose this type of gradient in the future.  It has been implemented in Skia, so it is possible this will be added in a future API level.  ","New Feature",Low,Closed,"2012-06-04 11:51:56","2012-06-04 11:51:56",3
"The Titanium SDK ","BlackBerry: Convert argparse to optparse","The argparse module was introduced in python 2.7 but we need to support 2.6 so we need to use optparse instead. It's fairly similar except it doesn't support sub-parsers.",Story,High,Closed,"2012-05-30 10:38:42","2012-05-30 10:38:42",7
"The Titanium SDK ","Blackberry: add a universal logging mechanism for tibb","Need to add a universal logger to the framework.  May use exceptions and stop the app in debug mode and only log in release mode.    Also go over all existing qDebug and printf to update them to use the new logger.    The logger will also need to do some locking to ensure that logging from concurrent threads doesn't result in logs cut and merged in the middle.",Story,High,Closed,"2012-05-30 07:31:17","2012-05-30 07:31:17",5
"The Titanium SDK ","BlackBerry: Create string table for Titanium error messages","Error messages during runtime are, in most cases, not returning a readable message. A centralized string table should be created with properly formatted messages to help users with debugging.",Story,Medium,Closed,"2012-05-29 08:42:56","2012-05-29 08:42:56",10
"The Titanium SDK ","BlackBerry: Generate moc files during the build",,Story,High,Closed,"2012-05-28 14:35:56","2012-05-28 14:35:56",5
"The Titanium SDK ","Android: Animation code review","The current state of Android animation APIs and its limitations/bugs needs a review to address various animation issues.",Story,Medium,Closed,"2012-05-25 17:12:36","2012-05-25 17:12:36",5
"The Titanium SDK ","BlackBerry: Refactoring event handler implementation","Add event handler embedded class for each native controllers, which will be responsible for handling QT cascade events.",Story,High,Closed,"2012-05-24 06:18:58","2012-05-24 06:18:58",5
"The Titanium SDK ","BlackBerry: Implement UI.Switch part2",,Sub-task,Low,Closed,"2012-05-24 01:29:45","2012-05-24 01:29:45",137
"The Titanium SDK ","BlackBerry: Bring API doc up to date","Updating API doc is now part of the patch cycle.  However, some components added in the past have not been reflected in API doc:  - ImageView  - TextField  - ActivityIndicator (maybe, check it out)    This task is to add past work to the API doc.",Story,Medium,Closed,"2012-05-23 08:35:36","2012-05-23 08:35:36",2
"The Titanium SDK ","BlackBerry: Handle JavaScript exceptions in runtime","Currently the Titanium runtime haults JS execution prints information to the stdout during an exception and then the Cascades message loop is entered. This should be changed to shutdown the app and return an error code.    Pull request: https://github.com/Macadamian/titanium_mobile/pull/66  ",Story,Medium,Closed,"2012-05-23 08:23:31","2012-05-23 08:23:31",3
"The Titanium SDK ","BlackBerry: Implement important Titanium.UI.OptionDialog functionality","For now used native DropDown component for OptionDialog. In future when modal dialog will be supported by cascades, we need to switch to something more similar thing for OptionDialog, as already in Android and iPhone.",Story,Medium,Closed,"2012-05-23 07:03:35","2012-05-23 07:03:35",15
"The Titanium SDK ","BlackBerry: Implement UI.ProgressBar part2",,Sub-task,Low,Closed,"2012-05-23 06:53:17","2012-05-23 06:53:17",123
"The Titanium SDK ","BlackBerry: Implement UI.Button part2",,Sub-task,Low,Closed,"2012-05-23 06:41:16","2012-05-23 06:41:16",136
"The Titanium SDK ","Blackberry: [Studio integration] regenerate the bar-descriptor file at packaging time","the bar-descriptor file needs to be updated everytime we package to pick up potential changes to the tiapp.xml file",Story,Medium,Closed,"2012-05-17 09:20:30","2012-05-17 09:20:30",8
"The Titanium SDK ","Blackberry: Update the tibbapp project to work with the R4 release of Cascades","- remove extra libs from common.mk  - adjust paths to R4 ndk for default detection in blackberryndk.py  - And other things that might not work",Story,Medium,Closed,"2012-05-16 15:12:12","2012-05-16 15:12:12",3
"The Titanium SDK ","Android: Deployment: Android Emulator intermittently fails to launch app after timed out","Emulator launches and fails to load app with timed out log:    [INFO] logfile = /Users/<USER>Documents/Titanium Studio 2.0.0 Workspace/NewProject/build.log  [INFO] Building NewProject for Android ... one moment  [INFO] Titanium SDK version: 2.0.0 (03/28/12 18:32 7c5487f)  [ERROR] Timed out waiting for emulator to be ready, you may need to close the emulator and try again    Steps to Reproduce:    1. Create project, launch on emulator.    Expected Result:    App should launch.    Actual Result:    Intermittently app does not install. Timed out error.",Bug,Medium,Closed,"2012-03-29 13:37:17","2012-03-29 13:37:17",2
"The Titanium SDK ","BlackBerry: Implement BB push","registerForPushNotifications() for starting point    BB push should be available after R6 release early in July.    To see an overview of the BB10 push system see http://developer.blackberry.com/cascades/documentation/device_comm/push/index.html    Java Based Server Side SDK  http://developer.blackberry.com/devzone/develop/platform_services/push_overview.html    To enable ASC some server side work is require.    Make sure to give the ASC/360 teams early heads before working on this task. ","New Feature",Medium,Closed,"2012-05-16 07:26:37","2012-05-16 07:26:37",8
"The Titanium SDK ","BlackBerry: Implement BB Application Menu (Crosscut Menu)","On BB10 devices swiping from the top of the screen will display a menu bar of action items it is used to control not often use actions that apply (crosscut) across the entire app. See    https://developer.blackberry.com/cascades/reference/bb__Application.html#function-swipedown     https://developer.blackberry.com/cascades/documentation/ui/navigation/menus.html     Look at NativeWindowObject.cpp to see how to do ActionItems","New Feature",Medium,Closed,"2012-05-16 07:25:22","2012-05-16 07:25:22",2
"The Titanium SDK ","BlackBerry: Implement BB animations","In matching what's currently available on other platform, look for 2Dmetric, 3Dmetric and other references to animation","New Feature",High,Closed,"2012-05-16 07:23:51","2012-05-16 07:23:51",17
"The Titanium SDK ","Android: Tooling: How to set the deploytype ","h4. Problem Description  When you do a deployment for distribution, you will think that the deploytype in analytics will switch to production. But it's not happening with some projects. A customer is not getting analytics from his app, and he reported it, the people in the Cloud replied that he didn't set the app to be in prod:     The second issue, for the other app GUID 473b9203-836a-4d48-ac13-2993873efa2c, the problem is that the user is using deploytype:test, and analytics only shows up for deploytype:production.    When I asked the client to do for production (i.e., deploy it to the Market), he already did that, as the attached image shows.     h4. Actual Results  App is not set for production in the deploytype.    h4. Expected results  If you build an app for distribution in the market, the deploytype should be production.    h4. Extra info   See attached image. ",Bug,Medium,Closed,"2012-05-15 09:44:52","2012-05-15 09:44:52",3
"The Titanium SDK ","TiAPI: Ti.Utils.base64encode behaves different between Android and iOS/Android","h3. Problem    The result of Ti.Utils.base64encode is different between iOS and Android. On iOS there are newline characters included when the string is long enough, on Android the newline characters are stripped out (which is the correct way to do base64 UTF8 encoding). Please see the attached screenshot explaining the issue.     h3. Sample Code    ",Bug,High,Closed,"2012-05-11 12:28:30","2012-05-11 12:28:30",5
"The Titanium SDK ","iOS: getVisible() / getEnabled() functions could return null value","h2. Problem description  Boolean functions like getVisible() or getEnabled() can return null value    h2. Code sample        Result: After running the sample code, click on the button to execute view.getVisible(), which return value 'null'.  Expected result: If the property was never defined by the user, then the default value should be returned.   ",Bug,Medium,Closed,"2012-05-06 01:45:04","2012-05-06 01:45:04",5
"The Titanium SDK ","BlackBerry: Implement UI.ActivityIndicator - Part2","Implement the rest based on TIMOB-8810  To be implemented:    Properties  color : String  font : Font  message : String  messageid : String  style : Number    Methods  getColor( )  getFont( )  getMessage( )  getMessageid( )  getStyle( )  setColor( String color )  setFont( Font font )  setMessage( String message )  setMessageid( String messageid )  setStyle( Number style )  ",Sub-task,Low,Closed,"2012-05-10 07:25:51","2012-05-10 07:25:51",12
"The Titanium SDK ","iOS: Update SBJSON to latest","Currently iOS ships with two distinct versions of the {{SBJSON}} library - one which is compatible with (and has been modified for) Titanium since the early pre-0.9 release cycle, and a more modern, maintained version which ships for compatibility with the Facebook module.    We need to remove the older SBJSON library, update the latest version with the relevant parsing abilities from our managed SBJSON implementation, and clean code to make the code base more unified, consistent, and remove cruft.",Improvement,Low,Closed,"2012-05-09 21:41:40","2012-05-09 21:41:40",0
"The Titanium SDK ","BlackBerry: Implement UI.TextField - Part 2","Implement features available after Cascades R4 release.",Sub-task,Low,Closed,"2012-05-08 08:36:56","2012-05-08 08:36:56",220
"The Titanium SDK ","BlackBerry: Implement UI.ImageView - Part 2","Continue implementing new elements once Cascades R4 is integrated.",Sub-task,Low,Closed,"2012-05-08 06:26:38","2012-05-08 06:26:38",166
"The Titanium SDK ","CLI: Implement export command","Exports a project to a standalone project without any dependencies on Titanium. The arguments will be similar to the build command.","New Feature",Medium,Open,"2012-05-07 17:25:32","2012-05-07 17:25:32",34
"The Titanium SDK ","CLI: build command for Android apps","Port the Python-based Android builder.py to Node.js. Portions of this has already been completed.    h3. Build Process    * Validate command line arguments and tiapp.xml settings (TIMOB-14973)  * fire build.pre.construct event  * create Builder object  * fire build.pre.compile event  * Detect if need to force rebuild (TIMOB-14974)  * Init the build/android directory and files (TIMOB-14976)  * if not --build-only  ** make sure adb server is running (adb lib does this for us)  ** wait for the emulator/device to boot  ** detect if app is already installed (adb lib does this for us)  * Compile resources (TIMOB-14977)    * determine Google APIs are required (true unless not build only and building for emulator running non-Google API AVD)  * if building for emulator and using Ti.Map.MapView, make sure the emulator is running Google APIs (TIMOB-5438 Compiler Warning When Using Maps with Non-Google APIs SDK) (TIMOB-6860 Tooling: Android build <USER>requires Google APIs even if Ti.Map.createView only occurs in comments)    * generate build/android/bin/assets/index.json with contents of build/android/bin/assets  * generate jss stylesheet => build/android/gen/<split app id>/ApplicationStylesheet.java  * generate aidl  * <USER>build/android/res/*.xml for all i18n strings  ** support app.xml to localize app name (TIMOB-2824 Android: App name localization)  * handle splash screen  * generate build/android/res/values/theme.xml  * Create android.manifest (TIMOB-14978)  * remove duplicate res in xml files???    * Build Java files and run dexer (TIMOB-14979)    * if not --build-only and not package build, push deploy.json to emulator/device  ** wait for sdcard  *** gracefully handle timeouts (TIMOB-11827 Android: Installing an app to Android with 4.2 version takes long time)    * Package and sign app (TIMOB-14980)  * fire build.post.compile event  * fire build.finalize event    ----    h3. Hooks    * Package Hook (TIMOB-14981)  * Run Hook (TIMOB-14982)    ----    h3. Misc    * logcat  * wait for emulator  * delete unused support/android/templates/AppUserData.java  * when subprocessing Java-based tools (android, etc), override _JAVA_OPTIONS environment variable (TIMOB-14322 CLI: Setting _JAVA_OPTIONS global variable breaks building of project)  * convert default dark splash screen to a red-based one (TIMOB-4517 Android: default.png file is a gray image, should be the red default image)  * TIMOB-11120 Android: Expose a way for users to exclude js files from being encrypted  * TIMOB-339 Android: Missing Icons  * TIMOB-13311 Android: CLI: possibility to build apk for beta release (like ios adhoc) (should be resolved with build profiles)  * remove dependency on old Android SDKs (TIMOB-13983 Android: Titanium should use the latest stable Android SDK and NDK and not depend on 2.2 API 8)",Epic,Critical,Closed,"2012-05-07 17:06:33","2012-05-07 17:06:33",8
"The Titanium SDK ","iOS: UI.Switch - does not display if value is not set when rendered","h2. Problem    Unless the [Titanium.UI.Switch.value|http://docs.<USER>com/titanium/2.0/index.html#!/api/Titanium.UI.Switch-property-value] property has been set, the switch does not render on iOS.    This is not necessary for Android, so adding the parity label to this ticket.    h2. Test Case    {code:lang=javascript|title=app.js}  var win = Ti.UI.createWindow({    backgroundColor: 'white',    layout: 'vertical'  });    function printSwitchProperties(obj){   var props = ['enabled', 'value'];   for (var p in props){    Ti.API.info('Switch property ' + props[p] + ': '+ obj[props[p]]);   }  }    var basicSwitch = Ti.UI.createSwitch({   // value:true // uncomment to display switch   });  win.add(basicSwitch);  printSwitchProperties(basicSwitch);    basicSwitch.addEventListener('change',function(e){   printSwitchProperties(e.source);  });    win.open();  {code} ",Bug,Low,Closed,"2012-05-06 07:11:30","2012-05-06 07:11:30",1
"The Titanium SDK ","BlackBerry: Complete remaining issues from code review","See pull request: #18      1. void TiUIBase::setTiMappingProperties(const TI_PROPERTY* prop, int propertyCount)  prop should be props since it's a pointer to an array of prop objects    --    2. TiUIBase::setParametersFromObject(Local obj)        Local propValue;  +    Handle propString;  +    TiObject* foundProp;    3 last lines,  It's cleaner to declare variables inside the smallest scope they are to be used in and also helps prevent referencing them outside of their scope. In this case the declarations should be inside the for    --    3. int NativeContainerObject::initialize()  add protection agains multiple invocations    --    4. if((args.Length()!=2)||(!args[0]->IsString())||(!args[1]->IsFunction()))  This line is definitely worth a comment. How come args[0] needs to be a string and args[1] needs to be a function? reminds me of perl :S    --    5. blackberry/tibb/TiUIObject.cpp  •   createXXXX_ methods  out of 14 lines of code in the functions, only 1 really differs. It'd be nice to have a way of abstrating that to remove code duplication which would be a maintenance nightmare as i also forsee many many such functions being created for all the UI controls we need to implement    Similarly the associtated classes look very bare and very much alike, is there actual value in having all these look alike classes? Maybe the actual question is can we avoid them?    --    6. VALUE_MODIFY TiPropertyMapObject::onValueChange(Handle oldValue, Handle newValue)  the 3 lines inside the the ifs are the same in all cases, they should be rolled into a helper function.    --    7. we should review the logical separation of classes with regards to cascades awareness, separation into folders    --    8. review error handling strategy  - run it by <USER>   --    9. class TiEventContainer  please add spaces around the = sign for consistency with the rest of the code. The formatter doesn't enforce it here.    There is at least another instance of that in TiEvent.h    --    10. blackberry/tibb/TiUIBase.h  description comment references TiCascadesApp when it should be TiUIBase    --    11. embed class TiInternalEventListener inside TiV8EventContainer? To reenforce it's internalness",Story,High,Closed,"2012-05-04 12:12:27","2012-05-04 12:12:27",5
"The Titanium SDK ","Blackberry: Add formatting check in git pre-commit hook",,Story,Medium,Closed,"2012-05-03 19:57:17","2012-05-03 19:57:17",3
"The Titanium SDK ","Blackberry: Implement proper packaging of blackberry mobile sdk","Add building of libtibb.ca in the scons script and package it properly in the resulting zip file, also remove any unnecessary files from the zip",Story,Medium,Closed,"2012-04-30 09:26:35","2012-04-30 09:26:35",5
"The Titanium SDK ","Blackberry: Add support for debugging titanium apps in studio",,Story,Low,Closed,"2012-04-30 09:03:46","2012-04-30 09:03:46",8
"The Titanium SDK ","Android: Support FILL behavior on contentWidth/contentHeight property of scroll view","    Expected results:  The contentHeight should be the size of the scroll view (which prevents it from scrolling)    Actual results:  The contentHeight follows SIZE behavior and is scrollable since the children's height is bigger than the scroll view height",Improvement,Low,Closed,"2012-04-26 11:18:59","2012-04-26 11:18:59",1
"The Titanium SDK ","BlackBerry: Implement important Titanium.Blob functionality","* Titanium.Blob * Titanium.Blob.text * Titanium.Blob.toString  Implement basic Blob functionality: accessing data, getting size, appending, convert to string. Blobs are primarily used to wrap native data structures or sources (ex: file descriptor, image, buffers). The goal of this ticket is just implement the proxy front facing APIs. Internally it should be architected to support wrapping various data sources. For the initial implementation support buffer based blobs would be a good first step.  Blobs are not creatable, but returns by various API methods in Titanium. For testing this ticket implement the Buffer.toBlob() method. This should return a Blob which should allocate a buffer and copy the data over.  Blob streams and to image conversions will not be implemented at this time. Separate tickets for those will be created.  h3. Acceptance Test  Look into using the test in Anvil for Blobs. The test is currently very small, so try to improve it. Anvil may not run right now on BlackBerry, but we can just copy the test into an application for now.",Story,Medium,Closed,"2012-04-26 08:25:15","2012-04-26 08:25:15",17
"The Titanium SDK ","BlackBerry: Integrate Cascades R4","Condition: Cascades R4 needs to be available - tentative date April 30th    1) resolve conflicts, pay special attention to things that have already been implemented in Titanium.API  2) investigate if there is anything new added to controls that we already implemented  3) if any, implement new additions to controls that we already implemented",Story,High,Closed,"2012-04-24 06:00:06","2012-04-24 06:00:06",10
"The Titanium SDK ","iOS: Update default tiapp.xml to reflect changes to iOS-specific properties","See TIDOC-585 and TIMOB-7664",Story,Low,Closed,"2012-04-23 15:58:30","2012-04-23 15:58:30",5
"The Titanium SDK ","Core: Integrate Drillbit into the CI Loop",,Story,High,Closed,"2012-04-20 13:04:22","2012-04-20 13:04:22",5
"The Titanium SDK ","Core: Write a specification for the new Unit Test Harness","We need to write a specification for these components of our new Unit Test Harness:    * CLI interface  * Unit test APIs that cover basic assertions, and UI testing  * Test Results output (JSON) for collection by CI    This task is evolving with data found from prototyping and integration.",Sub-task,Critical,Closed,"2012-04-20 12:57:10","2012-04-20 12:57:10",5
"The Titanium SDK ","Core: Create a new Titanium Unit Test Harness","Problem Statement:    Titanium needs a standalone unit test system for testing the various peices of the platform, including: Core functionality, UI tests, and high level CLI tests. The existing unit test driver, Drillbit, was written on Titanium Desktop, which has been turned over to the open source community. We need to re-evaluate the base technology based on the new CLI work.    Drillbit components:  * Platform-specific test harness application  * Test APIs  * Command Line Interface  * UI interface  ",Epic,Critical,Closed,"2012-04-20 12:54:32","2012-04-20 12:54:32",0
"The Titanium SDK ","BlackBerry: Implement UI.WebView",,Story,Medium,Closed,"2012-04-20 11:39:36","2012-04-20 11:39:36",5
"The Titanium SDK ","BlackBerry: Implement UI.View based on R4","Every UI control in Titanium extends the View and as such inherit methods from it.  This implementation is missing from the current framework.  It needs to be implemented asap so as to minimize the rework to be done in existing controls at the time this is implemented.    To facilitate this change, we will likely include a container for all controls that we have, so the View methods to act upon.",Story,High,Closed,"2012-04-20 11:34:17","2012-04-20 11:34:17",30
"The Titanium SDK ","BlackBerry: Implement UI.TextField - Part 1",,Story,Medium,Closed,"2012-04-20 11:33:50","2012-04-20 11:33:50",8
"The Titanium SDK ","BlackBerry: Implement important Titanium.UI.TextArea functionality",,Story,Medium,Closed,"2012-04-20 11:33:25","2012-04-20 11:33:25",17
"The Titanium SDK ","BlackBerry: Implement important Titanium.UI.TableViewSection functionality","A TableView section object.  Usually contains TableViewRows    In iOS, this is an abstract non-iOS class used to group rows into sections. There is no native analog.",Story,Medium,Closed,"2012-04-20 11:33:00","2012-04-20 11:33:00",17
"The Titanium SDK ","BlackBerry: Implement Simple TableViewRows","h3. Feature  Implement TableViewRow proxies which support the simple row style.  For simple rows (title, leftImage, etc) can probably use the Cascades  StandardListItem. This is already implemented for using plain objects for the data array.  Developers should also be able to listen for click and swipe events on rows.    h3. Acceptance Test    1. Download the test case (tableview-test.zip) which includes the resources.  2. Create a project with the resources and run the app.  3. A list of items should appear with title text and a left image.  4. After a few seconds the last item should change to a pear.  5. Try clicking various rows. The text should change to Click! for a few seconds.     The text should revert back to its original value.    ",Story,Medium,Closed,"2012-04-20 11:32:13","2012-04-20 11:32:13",19
"The Titanium SDK ","BlackBerry: Implement UI.TableView - Part 1",,Story,Medium,Closed,"2012-04-20 11:31:44","2012-04-20 11:31:44",10
"The Titanium SDK ","BlackBerry: Implement UI.TabGroup elements needed for KitchenSink",,Story,Medium,Closed,"2012-04-20 11:31:03","2012-04-20 11:31:03",12
"The Titanium SDK ","BlackBerry: Implement UI.Tab elements needed for KitchenSink","A tab instance for a TabGroup<http://docs.<USER>com/titanium/2.0/#%21/api/Titanium.UI.TabGroup>.  A TabGroup tab instance. Each tab includes a button and one or more windows, which holds the contents of the tab. Users can select a tab by clicking on the tab button.    In iOS, this actually is more of a combination of UITabBarItem and UINavigationController meant to go into a tab group. Android does not have a navigationController concept, so it depends on what Blackberry provides.  https://developer.apple.com/library/ios/#documentation/UIKit/Reference/UITabBarItem_Class/Reference/Reference.html#//apple_ref/doc/c_ref/UITabBarItem<https://developer.apple.com/library/ios/#documentation/UIKit/Reference/UITabBarItem_Class/Reference/Reference.html%23//apple_ref/doc/c_ref/UITabBarItem>  https://developer.apple.com/library/ios/#documentation/UIKit/Reference/UINavigationController_Class/Reference/Reference.html#//apple_ref/doc/c_ref/UINavigationController<https://developer.apple.com/library/ios/#documentation/UIKit/Reference/UINavigationController_Class/Reference/Reference.html%23//apple_ref/doc/c_ref/UINavigationController>  ",Story,Medium,Closed,"2012-04-20 11:30:37","2012-04-20 11:30:37",5
"The Titanium SDK ","BlackBerry: Implement UI.Switch part1",,Story,Medium,Closed,"2012-04-20 11:30:12","2012-04-20 11:30:12",5
"The Titanium SDK ","BlackBerry: Implement UI.Slider",,Story,Medium,Closed,"2012-04-20 11:29:45","2012-04-20 11:29:45",2
"The Titanium SDK ","BlackBerry: Implement important Titanium.UI.SearchBar functionality","A specialized text field for entering search text.  The SearchBar object is closely modeled on an iOS native search bar. As such, not all features are supported on other platforms.    In iOS, a direct mapping of UISearchBar  https://developer.apple.com/library/ios/#documentation/UIKit/Reference/UISearchBar_Class/Reference/Reference.html",Story,Medium,Closed,"2012-04-20 11:29:24","2012-04-20 11:29:24",15
"The Titanium SDK ","BlackBerry: Implement important ScrollView functionality","As a developer, I want a view that provides a viewport of a content  view that can be scrolled using gestures both horizontally and vertically.    The existing Titanium API for this feature is Ti.UI.ScrollView.  Cascades does provide a control (ScrollView) which should meet  the requirements for this view.",Story,Medium,Closed,"2012-04-20 11:28:41","2012-04-20 11:28:41",17
"The Titanium SDK ","BlackBerry: Implement important Titanium.UI.ScrollableView functionality","As a developer, I want a view that allows displaying a set of child  views that can be navigated through by using swipe gestures.    The existing Titanium API for this view is Ti.UI.ScrollableView.  While Cascades does not provide a built-in control for this type of view,  it does appear possible to implement our own custom control.","New Feature",High,Closed,"2012-04-20 11:28:09","2012-04-20 11:28:09",17
"The Titanium SDK ","BlackBerry: Implement UI.ProgressBar part1",,Story,Medium,Closed,"2012-04-20 11:27:08","2012-04-20 11:27:08",5
"The Titanium SDK ","BlackBerry: Implement UI.PickerRow",,Sub-task,Low,Closed,"2012-04-20 11:26:33","2012-04-20 11:26:33",143
"The Titanium SDK ","BlackBerry: Implement UI.PickerColumn",,Sub-task,Low,Closed,"2012-04-20 11:25:53","2012-04-20 11:25:53",140
"The Titanium SDK ","BlackBerry: Implement UI.Picker",,Story,Medium,Closed,"2012-04-20 11:23:36","2012-04-20 11:23:36",10
"The Titanium SDK ","BlackBerry: Implement UI.OptionDialog part1",,Story,Medium,Closed,"2012-04-20 11:23:04","2012-04-20 11:23:04",5
"The Titanium SDK ","BlackBerry: Implement important Titanium.UI.Notification functionality","Use the implementation matrix to see what can be implemented (look for elements supported in Cascades):  https://docs.google.com/a/macadamian.com/spreadsheet/ccc?key=0Ajs-e76-B0yIdG1oLVVleVVxaGRYd3lWWXd0czhqUFE","New Feature",Medium,Closed,"2012-04-20 11:22:32","2012-04-20 11:22:32",15
"The Titanium SDK ","BlackBerry: Implement UI.Label - part2",,Story,Medium,Closed,"2012-04-20 09:55:32","2012-04-20 09:55:32",10
"The Titanium SDK ","BlackBerry: Implement UI.ImageView - Part 1",,Story,Medium,Closed,"2012-04-20 09:55:03","2012-04-20 09:55:03",8
"The Titanium SDK ","BlackBerry: Implement UI.Button part1",,Story,Medium,Closed,"2012-04-20 09:52:09","2012-04-20 09:52:09",8
"The Titanium SDK ","BlackBerry: Implement UI.AlertDialog","Depends on Cascades R6    An alert dialog is a modal view that includes an optional title, a message and buttons, positioned in the middle of the display.    In iOS:  https://developer.apple.com/library/ios/#documentation/UIKit/Reference/UIAlertView_Class/UIAlertView/UIAlertView.html",Story,Medium,Closed,"2012-04-20 09:48:52","2012-04-20 09:48:52",3
"The Titanium SDK ","BlackBerry: Implement important Titanium.UI.Clipboard functionality","Implement the methods for accessing and modifying data within the clipboard.    h3. Acceptance Test      # The three labels should display (in order from top to bottom)...     #* No text.     #* No custom text.     #* No custom blob.  # Click Set Text then restart the app. The first label should read Text Inserted! now.  # Close the app and open another app on the device (ex: browser). Copy some text into the clipboard.  # Relaunch the test case app and the first label should now contained the text you copied.  # Click Set Custom Data then restart the app.  # The second label should read Custom Text! and the third label Custom Blob!.  # Click Clear Data and restart the app. The labels should be back to their initial values (step 1).",Story,Medium,Closed,"2012-04-20 09:48:00","2012-04-20 09:48:00",15
"The Titanium SDK ","BlackBerry: Implement UI module root methods and properties",,Story,Low,Closed,"2012-04-20 09:46:54","2012-04-20 09:46:54",8
"The Titanium SDK ","BlackBerry: Implement UI.ActivityIndicator - Part1",,Story,Medium,Closed,"2012-04-20 09:42:42","2012-04-20 09:42:42",5
"The Titanium SDK ","BlackBerry: Implement UI.2DMatrix","The 2D Matrix is an object for holding values for an affine transformation matrix.  A 2D matrix is used to rotate, scale, translate, or skew the objects in a two-dimensional space. A 2D affine transformation can be represented by a 3 by 3 matrix:  a  b  0  c  d  0  tx  ty  1    The third column is constant (0,0,1).    In iOS, this maps to CGAffineTransform, but is rather primitive in 2D and 3D graphics. If using OpenGL, consider http://stackoverflow.com/questions/6971898/2d-matrix-to-3d-matrix","New Feature",Low,Closed,"2012-04-20 09:40:48","2012-04-20 09:40:48",17
"The Titanium SDK ","MobileWeb: TextField doesn't stretch properly in Firefox","TextFields are being stretched in Firefox to fill the correct size.",Bug,Low,Closed,"2012-04-19 19:55:28","2012-04-19 19:55:28",3
"The Titanium SDK ","Android: Failure building with Java 1.7.0 (Java 7)","We currently do not check to make sure the user has jdk 1.6.0 installed in our build scripts.  We should add this feature since there are known issues with using jdk 1.7.0 (at least for windows).  We need to determine the following requirements in this task, and then notify studio in regards to these new requirements.    - Minimum/Maximum version of jdk required  - Where to grab this particular version of sdk (from oracle?)  - Narrow down if the jdk requirements affect ALL platforms (linux,osx, windows).  We know there are issue with jdk 1.7.0 in windows, but this needs to be verified in other platforms  - Mechanism for reporting this error from the build scripts (ideally studio would be able to take this error and prompt the user to resolve it accordingly in studio)    After this ticket has been resolved, we should file a separate ticket on the studio side for them to take action (and probably sync up with them regarding the requirements).  ",Story,High,Closed,"2012-04-19 14:04:03","2012-04-19 14:04:03",2
"The Titanium SDK ","BlackBerry: Implement foundation",,Story,Medium,Closed,"2012-04-18 16:49:01","2012-04-18 16:49:01",20
"The Titanium SDK ","BlackBerry: Implement ACS CloudPush module",,Story,Medium,Closed,"2012-04-18 14:48:48","2012-04-18 14:48:48",8
"The Titanium SDK ","BlackBerry: Add support for ACS Cloud module",,"New Feature",Medium,Closed,"2012-04-18 14:47:59","2012-04-18 14:47:59",20
"The Titanium SDK ","iOS: ScrollView does not scroll if contentHeight and contentWidth are not provided","h3. Problem  Scrollview in Release 2.0.x does not scroll if contentHeight and contentWidth are not provided.    h3. Code Sample  ",Bug,High,Closed,"2012-04-17 16:54:20","2012-04-17 16:54:20",2
"The Titanium SDK ","Android: Alignment Issues on Android, layout appears broken","8 Buttons are added to the window, and have a background image. When they are aligned together in a line, it appears broken. It looks continuous on iOS.    I have attached images to explain this. Also have included the code sample.    ",Bug,High,Closed,"2012-04-17 15:50:20","2012-04-17 15:50:20",2
"The Titanium SDK ","Android: Intermittent app 'freeze' issue","*Issue*  -The app randomly freezes when it's on the loading screen.  -Comments: User reported a hanging login (loading bar went to full green, but then nothing happened) directly after a force-close and relaunch. Log attached.  -Attached is the log file. App source code can also be attached, if required.    *Notes*  -Name of the actual app has been removed and replaced.",Bug,Critical,Closed,"2012-04-16 13:44:03","2012-04-16 13:44:03",3
"The Titanium SDK ","Android: Intermittent 'force close' issue","*Issue*  -The app randomly 'force quits' when launched, I personally don't seem to be able to reproduce this (yet).  -What one of the users reported back: I launch and it's basically frozen...the small black app name bar appears at the top but nothing happens...now finally after minutes (3-5) got the error message sorry! Activity APPNAME (in application APPNAME is not responding...force close...wait...report  -Attached are the log files. App source code can also be attached, if required.      *Notes*  -Name of the actual app has been removed and replaced with 'APPNAME'.",Bug,Critical,Closed,"2012-04-16 13:33:18","2012-04-16 13:33:18",2
"The Titanium SDK ","Android: When invoking other intent from the app, the pause event is not being triggered ","h4. Problem Description  If we call another app or activity in the android app, the pause event is not being fired.     h4. Actual Results  Event is not fired     h4. Expected Results  The event pause should be fired.    h4. Test case  1. Create mobile project.  2. Paste this into the app.js    ",Bug,High,Closed,"2012-04-13 17:08:07","2012-04-13 17:08:07",1
"The Titanium SDK ","Android: TextField: Text is not visible, and view appears to redraw before keyboard is displayed","In TextField cannot see any texts that is being typed in and the cursor blinks outside the text field. For a second previous view is shown    Steps to reproduce  1:Install and run the app  2: Tap inside the text field  3:type in word      Actual result: Could not see the text typed in,on focus the window returns to the previous view for a second.    Expected result:should be able to see the text and the cursor should blink inside the text field     *Note : this is not a regression bug,it goes back to 1.8.2* ",Bug,Low,Closed,"2012-04-13 16:40:23","2012-04-13 16:40:23",5
"The Titanium SDK ","BlackBerry: Implement module API","This is the api that will be available for 3rd party module extensions.    This api also needs to be well documented.      The Extending Titanium set of guides might be a good starting point: http://docs.<USER>com/titanium/2.1/index.html#!/guide/Extending_Titanium_Mobile    There will need to be a C/C++ API for module developers. You can look at the API documentation  for Android and iOS to get an idea of what sort of native API we expose for extensions. Module  developers should be able to create their own proxy and views.    Need to also figure out how these external modules get compiled into the application.  I am guess module developers will provide some sort of static/dynamic library that gets  included into the application.    For application developers they use the require() function to load these external modules.  So you will need to add support into your require implementation to search for these external modules  if it can't find any files in the applications resources folder. For external modules we use the module's ID  string for the require lookup. Ex: require('com.my.module')    We also support external CommonJS modules. The Titanium Cloud module is an example of this type of module.  This document provides some details: https://wiki.<USER>org/display/guides/CommonJS+Modules+in+Titanium  Basically this allows module developers to distribute JS only modules. This works by extending the require() search path  to include these modules when the application developers adds them to their tiapp.xml <modules> section.    So I hope that gives you a good starting line. Feel free to ask for detailed questions on each of these requirements.  We should also loop in the module team and work closely with them on any requirements they require for   creating modules for BB.      --  <USER>Roesslein  Platform Engineer  <USER> Inc.     <EMAIL>",Story,Medium,Closed,"2012-04-13 11:41:45","2012-04-13 11:41:45",15
"The Titanium SDK ","Core: Compare possible CLI technologies","In order to select the appropriate tool for the new CLI, we need to perform a side-by-side evaluation for the following proposed technologies:    * node.js (TIMOB-8640)  * Python 2.7.x (TIMOB-8715)  * Python 3.2.x (TIMOB-8715)  * Ruby (no ticket, proposed)  * Java + RHINO (no ticket, hat tip to <USER>for the suggestion)    Advantages, disadvantages, etc. of each of these technologies is documented in their specific tickets and via meeting notes being compiled by Marshall.    Note that one of the suggestions proposed in the node.js meeting was to create a pluggable {{git}}-like infrastructure, so that the command {{titanium xxx}} would call out to a {{titanium-xxx}} script, which could be in any scripting language (or a compiled tool). This evaluation may recommend this approach if we believe multiple technologies are appropriate for different tasks.    These are the high level tests we should use in judging any solution:  * Subprocess / Child <USER>APIs ([ipc side-by-side comparison|https://gist.github.com/2583397])  ** A test that executes a short-lived <USER>and collects it's results  ** A test that executes a long-lived <USER>and collects it's stdout / stderr output and reprints that output in real time  * Logging APIs ([log side-by-side comparison|https://gist.github.com/2581199])  ** A test that creates a simple unified logger with a base string format and configures certain log levels as visible  ** A test that associates multiple loggers with various system components  * Compression (zip) APIs ([zip side-by-side comparison|https://gist.github.com/2572795])  ** A test that opens a ZIP file, scans the contents, and extracts one of the files for processing  ** A test that creates a new ZIP file using a mix of normal files, deep paths, and symlinks  * Javascript AST parsing / manipulation: *NOTE:* This is now part of a separate technology evaluation. See TIMOB-8947 for discussion relating to AST. We have been delivered the requirement for a single AST for the product, and it is assumed that CLI tooling will call out to this rather than have an AST.  ** A test that parses a simple Javascript file, and reports back an AST  ** A test that does minor manipulation of the AST, and transforms back to JS    Each test should include performance metrics over many runs, and information about external module(s) used along with versions.",Sub-task,Medium,Closed,"2012-04-13 11:28:52","2012-04-13 11:28:52",3
"The Titanium SDK ","Android: 'focus' events are not correctly handled for windows in a tabGroup","h2. Problem description  'Focus' events might not correctly handled when associated to a window set in tabGroup and with the url property    h2. Steps to reproduce     h3. Steps  - Create a tabGroup with 2 windows.  - Set the url property for each window and define 'focus' event listener in the two 'win1.js' and 'win2.js' files.  - Don't set event listeners in the app.js  Result: 'focus' event listeners ae not triggered on Android (on iOS works fine).      h3. Code  {code:lang=javascript}  // app.js  var tabGroup = Titanium.UI.createTabGroup();    var win1 = Titanium.UI.createWindow({        title:'Tab 1',      backgroundColor:'#fff',      url:'win1.js'  });    var tab1 = Titanium.UI.createTab({        icon:'KS_nav_ui.png',      title:'Win 1',      window:win1  });    var win2 = Titanium.UI.createWindow({        title:'Tab 2',      backgroundColor:'#fff',      url:'win2.js'  });    var tab2 = Titanium.UI.createTab({        icon:'KS_nav_ui.png',      title:'Win 2',      window:win2  });    tabGroup.addTab(tab1);  tabGroup.addTab(tab2);    tabGroup.open();        {code:lang=javascript}  // win2.js  var win2 = Ti.UI.currentWindow;    win2.addEventListener('focus',function(e){   alert('test win2');  });  {code}      h2. Additional notes:  Customer ticket : http://support-admin.<USER>com/display/APP-221687/conversation/read_all",Bug,Medium,Closed,"2012-04-13 01:07:59","2012-04-13 01:07:59",1
"The Titanium SDK ","Core: Research source code validation tool","Investigate the use of a validation tool for source code against our defined language standards.  Do we need one per language?  Can we use a single tool with plugins perhaps?",Story,Medium,Closed,"2012-04-12 17:21:05","2012-04-12 17:21:05",1
"The Titanium SDK ","Android: Database Install fails to install from applicationDataDirectory","The documentation doesn't state that its impossible to run Ti.Database.install(Ti.Filesystem.applicationDataDirectory, 'mydb');    However not matter what you do, it is impossible, further more its a little frustrating as many a database strategy will involve remote files and source files that can be used for later purposes.    I can see no reason why the command has to default to the Resources directory.  Could there be some clarification on what you can and can't do. And if currently, you can't install from the appDataDirectory, can i suggest it goes high up on the roadmap.    this will cost days of developers time a) figuring out what works and doesn't work, then having to write a very long <USER>in evaluating and inserting data, when its not necessary.    At the moment you can write to the DB storage space on iOS, it mainly affects android, but I think the SDK should allow for this behaviour. ",Bug,Low,Closed,"2012-04-11 17:44:36","2012-04-11 17:44:36",5
"The Titanium SDK ","Core: Define C/C++ coding standards","Define a document that outlines all C/C++ coding standards any C/C++ written for <USER>(internal or community contributions) should adhere to.  This should represent more than syntax, but general design approaches and <USER>flow.  This document will be focused on language only.  Platform Specific information will be contained inside another document.",Story,High,Closed,"2012-04-11 12:33:27","2012-04-11 12:33:27",5
"The Titanium SDK ","Core: Define Javascript coding standards","Define a document that outlines all Javascript coding standards any javascript written for <USER>(internal or community contributions) should adhere to.  This should represent more than syntax, but general design approaches and <USER>flow.  This document will be focused on language only.  Platform Specific information will be contained inside another document.    This is a collaboration ticket.",Story,High,Closed,"2012-04-11 12:17:58","2012-04-11 12:17:58",5
"The Titanium SDK ","Android: INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES when installing different app with same app id","When an android app is installed, and that app is already installed using a different deploy type (i.e., production vs. testing), or a different app is installed with the same app id, there is an error INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES logged to the console.    I would expect the script to fail with a meaningful error message (and Titanium Studio to have an error prompt if necessary) indicating an app with the same app id and a different certificate is already installed on device, remove this app to continue installation.    Steps to Reproduce (Scenario 1):    1. Create a new Android project.  2. Distribute for production and install to device.  3. Deploy again to device from studio.    Steps to Reproduce (Scenario 2):    1. Create a new Android project.  2. Install to device in development mode.  3. Create another Android project with the same app id.  4. Deploy second app to device.    Expected Result:    Script fails with meaningful error message, studio prompts error if necessary.    Actual Result:    Failure [INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES] logs to console, difficult to know exactly what the problem is.",Bug,Medium,Closed,"2012-04-10 16:26:53","2012-04-10 16:26:53",3
"The Titanium SDK ","Tooling: Write a CLI specification","Write a CLI specification that covers:  * CLI workflow  * Argument naming and value standards  * Initial set of CLI commands  * Initial set of CLI arguments  * External CLI APIs (for CLI modules)      The target list of commands should contain:  * Validation of project (module+app) creation arguments per platform  * Project creation - modules + apps  * Project migration between Titanium SDK versions  * Per-platform setup  * Environment / project validation  * Build project (APK, IPA, deployable web app in MobileWeb)  * Publish (may be type of build)  * Obfuscation/minification  * Optional Lint  * Emulator/Simulator launch  * Deploy project (to a device, to an emulator)  * Debugger / REPL    Other requirements that were gathered:  * Studio needs standardized logging and errpr message parsing  * Standard interfaces to basic commands across platforms  * Have a list of command capabilities / implementations per platform  ",Sub-task,High,Closed,"2012-04-10 15:41:03","2012-04-10 15:41:03",5
"The Titanium SDK ","Android: Switch search order of folders/environment variables in androidsdk.py","I accidentally updated my ANDROID_SDK environment variable to a bad value, and suddenly Studio was unable to find my Android platforms, even though I had a correct SDK specified in preferences.    Digging into the code, I see that we pass a specific directory to search to avd.py, by androidsdk.py/find_sdk() defers to ANDROID_SDK before utilizing supplied.    It seems we should respect the passed-in directory first before defaulting to backup options like environment variables.",Story,Low,Closed,"2012-04-10 14:52:45","2012-04-10 14:52:45",2
"The Titanium SDK ","Tooling: Separate SDK from the Platform","This task comprises a few high level tasks:  * The SDK should live as it's own standalone component, with it's own git repository  * The SDK and Platform should be able to have their own release cycles, and the SDK should be able to work with multiple versions of the Platform",Sub-task,High,Closed,"2012-04-10 14:10:10","2012-04-10 14:10:10",5
"The Titanium SDK ","iOS: Refine Obj-C, Obj-C++ coding standards","iOS currently has some [coding standards|https://wiki.<USER>org/display/pe/Coding+Standards] available, with an uncrustify (to beautify source) in [tidevtools|https://github.com/<USER>tidevtools]. We need to evaluate the uncrustify (and manually written instructions) for:    * Correctness  * Completeness  * Consistency  * Tabs vs. spaces (we need to standardize on one!)    These standards should apply to Objective-C and Objective-C++ only, but may require some preliminary drafts for C and C++ style. This ticket is *not* for establishing design patterns or workflow (unlike the broad scope of TIMOB-8241, which is being narrowed.)    Part of this ticket is also deciding how to enforce code formatting (i.e. coerce all submitters to make their source conform to the standard).",Story,Medium,Closed,"2012-04-09 14:41:41","2012-04-09 14:41:41",0
"The Titanium SDK ","Android: Error creating Module projects with new installation of SDK r18 and Google APIs r8","When creating an Android module project, the <USER>ends in error:      1. Create a new module project using titanium, for example:      Expected Result:  Module project should be created.",Bug,High,Closed,"2012-04-04 11:11:48","2012-04-04 11:11:48",0.5
"The Titanium SDK ","iOS: Problem getting responseText/headers from onerror response","h3. Problem    The HTTPClient does not seem to be able to get the responseText/headers from the server in onerror response(the console shows everything I print in the example below as null).    h3. Code        The getResponseHeader is responding as null. The onload method works fine but on trying to get the data from onerror null is returned.      h3. Related Community Ticket    http://developer.<USER>com/question/50501/problem-getting-responsetextheaders-from-error-response      ",Bug,Low,Closed,"2012-04-09 09:08:39","2012-04-09 09:08:39",0
"The Titanium SDK ","Android: Tab.open(windowName) doesn't open a new window inside the Tab container","In android tab.open(windowName) doesn't open a new window inside the tab container. It works fine in iOS.  h4. tab.open(windowName) works in iOS     and   h4. tab.add(windowName);  h4. windowName.open();  h4. works fine in android  I have commented it in the app.js file as well. Please find it attached.  h4. Repo Steps   1. Run the attached app.js file.  2. Click the window 1 and you can see the new window is opening outside the tab container.",Bug,Medium,Closed,"2012-04-06 16:09:35","2012-04-06 16:09:35",2
"The Titanium SDK ","BlackBerry: Integrate the final deliverable into the current build, testing and development infrastructure",,Story,High,Closed,"2012-04-06 06:52:41","2012-04-06 06:52:41",20
"The Titanium SDK ","BlackBerry: Setup and test guide","Guide for QE/developers to setup and test the Blackberry port of Titanium SDK using KitchenSink    Should be placed on a separate page in this space:  https://wiki.<USER>org/display/PEBKBRY/Home",Story,Medium,Closed,"2012-04-06 06:49:35","2012-04-06 06:49:35",2
"The Titanium SDK ","BlackBerry: Get KitchenSink to work",,Story,High,Closed,"2012-04-06 06:48:39","2012-04-06 06:48:39",30
"The Titanium SDK ","BlackBerry: Full support for builder script","Implement all targets",Story,Medium,Closed,"2012-04-06 06:46:58","2012-04-06 06:46:58",20
"The Titanium SDK ","BlackBerry: Implement important Titanium.Yahoo functionality",,Story,Low,Closed,"2012-04-06 06:44:57","2012-04-06 06:44:57",15
"The Titanium SDK ","BlackBerry: Implement important Titanium.XML functionality",,Story,Medium,Closed,"2012-04-06 06:44:31","2012-04-06 06:44:31",17
"The Titanium SDK ","BlackBerry: Implement important Titanium.Utils functionality",,Story,Medium,Closed,"2012-04-06 06:44:00","2012-04-06 06:44:00",17
"The Titanium SDK ","BlackBerry: Implement important Titanium.Stream functionality",,Story,Low,Closed,"2012-04-06 06:42:39","2012-04-06 06:42:39",8
"The Titanium SDK ","BlackBerry: Implement Network module for Anvil",,Story,Medium,Closed,"2012-04-06 06:38:53","2012-04-06 06:38:53",8
"The Titanium SDK ","BlackBerry: Implement Media module",,Story,Medium,Closed,"2012-04-06 06:37:51","2012-04-06 06:37:51",20
"The Titanium SDK ","BlackBerry: Implement important Titanium.Locale functionality",,Story,Medium,Closed,"2012-04-06 06:37:02","2012-04-06 06:37:02",19
"The Titanium SDK ","BlackBerry: Implement important Gesture functionality","Implement the Gesture module.    h3. Acceptance Test      # Rotate the device and flip it around. The first two labels should be equal and display the current orientation.  # Try shaking the device, nothing should happen.  # Click the Toggle Shake button and shake again. The background should flash yellow.  # Try clicking the Toggle Shake button and shake again. Nothing should happen.",Story,Medium,Closed,"2012-04-06 06:36:38","2012-04-06 06:36:38",17
"The Titanium SDK ","BlackBerry: Implement important Titanium.Filesystem functionality","* Titanium.Filesystem  * Titanium.Filesystem.applicationDataDirectory  * Titanium.Filesystem.File  * Titanium.Filesystem.File.append  * Titanium.Filesystem.File.createDirectory  * Titanium.Filesystem.File.deleteFile  * Titanium.Filesystem.File.exists  * Titanium.Filesystem.File.getNativePath  * Titanium.Filesystem.File.nativePath  * Titanium.Filesystem.File.read  * Titanium.Filesystem.File.writable  * Titanium.Filesystem.File.write  * Titanium.Filesystem.getFile  * Titanium.Filesystem.resourcesDirectory  * Titanium.Filesystem.tempDirectory      h3. Test code:  Reading a file from the Resources dir    Creating, writing, and reading a file from the data dir    Getting the directory listing from the data dir  ","New Feature",High,Closed,"2012-04-06 06:35:46","2012-04-06 06:35:46",17
"The Titanium SDK ","BlackBerry: Implement Facebook module",,Story,Medium,Closed,"2012-04-06 06:35:24","2012-04-06 06:35:24",8
"The Titanium SDK ","BlackBerry: Implement Contacts module",,Story,Medium,Closed,"2012-04-06 06:34:41","2012-04-06 06:34:41",20
"The Titanium SDK ","BlackBerry: Implement important Titanium.Codec functionality",,"New Feature",Low,Closed,"2012-04-06 06:34:14","2012-04-06 06:34:14",2
"The Titanium SDK ","BlackBerry: Implement important Ti.API functionality","This may be completed. It only looks like the following are required:  * Titanium.API.debug * Titanium.API.error * Titanium.API.info * Titanium.API.log * Titanium.API.timestamp * Titanium.API.trace * Titanium.API.warn",Story,Medium,Closed,"2012-04-06 06:33:21","2012-04-06 06:33:21",19
"The Titanium SDK ","BlackBerry: Implement BlackBerry specific components",,Story,Medium,Closed,"2012-04-06 06:32:44","2012-04-06 06:32:44",3
"The Titanium SDK ","BlackBerry: Implement Analytics module",,Story,Medium,Closed,"2012-04-06 06:31:47","2012-04-06 06:31:47",20
"The Titanium SDK ","BlackBerry: Run on simulator and device","minimum BB10 for demo",Story,High,Closed,"2012-04-06 06:22:02","2012-04-06 06:22:02",5
"The Titanium SDK ","BlackBerry: Integrate unit tests","need more info from Vishal, drillbit vs module tests?",Story,High,Closed,"2012-04-06 06:17:13","2012-04-06 06:17:13",20
"The Titanium SDK ","BlackBerry: Integrate with the cascades framework",,Story,High,Closed,"2012-04-06 06:14:35","2012-04-06 06:14:35",3
"The Titanium SDK ","BlackBerry: Build blackberry native app","Build blackberry native app from shell application, v8 and Kroll from titanium (tie in with builder)",Story,Medium,Closed,"2012-04-06 06:12:27","2012-04-06 06:12:27",10
"The Titanium SDK ","BlackBerry: Build v8 on the QNX ndk as static lib","Possibly create wrappers for the v8",Story,High,Closed,"2012-04-06 06:10:17","2012-04-06 06:10:17",3
"The Titanium SDK ","BlackBerry: Extend the ndk classes to create the shell application","    Extend the ndk classes to create our shell application that will contain the app.js and the kroll and v8 runtimes (equiv. android/titanium/.project)          - learn what is needed to create the blackberry shell app to contain the app.js as resource          - Create actual classes extending the classes in the ndk, they will form the titanium library          - Do the minimum to get the app up and loading the js file, leave the rest stubbed out with TODOs          - create file templates for the shell app          - link with libV8 and Kroll",Story,High,Closed,"2012-04-06 06:05:04","2012-04-06 06:05:04",2
"The Titanium SDK ","BlackBerry: Run and debug on device/simulator from Titanium Studio","- Some testing/investigation required to figure out how this can be accomplished, can likely use help from RIM technical contact to mimic what's available in the QNX IDE  - minimum: trap console logging",Story,Medium,Closed,"2012-04-06 05:50:07","2012-04-06 05:50:07",7
"The Titanium SDK ","BlackBerry: Support ability to create new blackberry project in Titanium Studio","Work with the studio team to integrate project creation ",Story,Medium,Closed,"2012-04-06 05:47:20","2012-04-06 05:47:20",2
"The Titanium SDK ","BlackBerry: Adapt scons script (SConstruct) [build script for mobile_sdk] to build for blackberry",,Story,High,Closed,"2012-04-06 05:22:13","2012-04-06 05:22:13",3
"The Titanium SDK ","iOS: Transport.py is not working in CI ","h4. Problem Description  I've been running into issues with the 2.X CI builds and transport.py.  Due to how we handle builds, I need to use transport.py for all submissions and ad hoc builds.  Any of the 2.X or Master builds have this build issue.    h4. Actual Results  The build via transport.py is failing.    h4. Expected Results  The build via transport.py working just fine    h4. Test Case  1. Create a new Titanium project targeting a 2.X CI build  2. Run the transport.py <USER>as usual  3. Open in xcode and try to run in the simulator    h4. Extra info  When xcode tries to compile you will get the below error    [TRACE] app property, ti.ui.defaultunit : system  [INFO] wrote Resources/stylesheet.plist  Traceback (most recent call last):    File titanium/iphone/compiler.py, line 7, in <module>      import os, sys, re, shutil, time, run, sgmllib, codecs, tempfile    File /Users/benjamin/Dev/Projects/Ti/myTravel/test/build/iphone/titanium/iphone/run.py, line 2, in <module>      from tools import ensure_dev_path  ImportError: No module named tools  Command /bin/sh failed with exit code 1  I tried this again today using the below build version.    h4. HD Discussion  http://support-admin.<USER>com/display/APP-522817  ",Bug,High,Closed,"2012-04-05 13:05:22","2012-04-05 13:05:22",2
"The Titanium SDK ","Android: Memory Managment Issue","*Code*  http://pastie.org/3732988    *Steps to reproduce*  Run the app inside the emulator/device, load up ddms, watch the heap size increase.    *Expected behavior*  The code is creating and releasing Ti objects, so it should allocate and deallocate memory over time.    *Actual behavior*  It actually keeps building up and gradually increases the heap size, it doesn't seem to go down a lot, it mainly increases.     *Notes*  -You might have to run this for a few minutes, in order to replicate this behavior.   -The app is opening a new window, and releases it. So you will see the window going back and forth, which is the expected behavior. It will automatically open/close the window over time. You should only have to observe the 'heap size' and 'allocated' in ddms.  -Only tested on the emulator.  -HD ticket: http://support-admin.<USER>com/display/APP-341636",Bug,High,Closed,"2012-04-05 10:34:17","2012-04-05 10:34:17",5
"The Titanium SDK ","iOS: Add Ti.Geolocation.ACCURACY_HIGH / ACCURACY_LOW","iOS needs to support the two new common geolocation accuracy settings, by aliasing them to existing properties:    {{Ti.Geolocation.ACCURACY_HIGH}}  {{Ti.Geolocation.ACCURACY_LOW}}","New Feature",Low,Closed,"2012-04-04 14:43:57","2012-04-04 14:43:57",0
"The Titanium SDK ","Android: runtime error in ti/window.js","A client has encounter a problem in the window.js file in the SDK.    I have not been able to reproduce it.    There is a delete account button than when pressed, it will fire a global app event. Ti.App.fireEvent();  This event will close all the open windows, except the BaseWindow (heavyweight window in declared in app.js), including the one where the button is. The button is in a lightweight window that sits on top of the BaseWindow. After the windows are closed, a lightweight window (login window) opens on top of the BaseWidow (in place of the previously closed one). And this is where they're seeing this runtime error.  ",Bug,High,Closed,"2012-04-04 14:07:08","2012-04-04 14:07:08",3
"The Titanium SDK ","iOS: Tableview shifting after 1.8.2 update","h4. Problem Description  I have a tableview in a window. If I open that window using tab1.open(theWindow), the tableview appears as it should. BUT if I close that window using tab1.close(theWindow) and open it again later using the same tab1.open(theWindow), the tableview quickly shifts up to it's position. It is almost like it is animating 20px when the window is opened. I am NOT using any animations. Sample code below    h4. Actual Results  After the first time, the tableview appears animated.    h4. Expected results  Tableview without animation    h4. Test Case   1. Create new mobile project.  2. Paste this code  ",Bug,High,Closed,"2012-04-04 09:03:42","2012-04-04 09:03:42",2
"The Titanium SDK ","Android: Module build.xml no longer compiles C++ source code in the jni directory","Marshall's post on using native libraries in an Android module (http://developer.<USER>com/blog/2011/01/titanium-and-the-android-ndk.html) states that you need to place C++ source files in the jni directory of the module project and they will be compiled into .so files and included in the module.  This is not the case in version 1.8.2 of the SDK -- the build.xml file under TITANIUM_HOME/mobilesdk/osx/1.8.2/modules/android never looks in that directory.  To get the described behavior, the following targets can be added to the module's build.xml file:        Ideally, these targets would be part of the SDK's build.xml.  In the meantime, it would be good to update the blog post to indicate that it is out of date.",Bug,High,Closed,"2012-03-16 10:22:16","2012-03-16 10:22:16",1
"The Titanium SDK ","Android: Impossible to lock the app in Landscape mode","h4. Problem Description  Have been trying to setup a tab app to be locked in landscape mode via tiapp.xml (modifying the android manifest):        h4. Actual Results  The tabbed app doesn't show in landscape    h4. Expected results  The tabbed app showing in landscape mode.    h4. Test Case.  1. Create a new mobile Project  2. Replace the default android manifest section in the tiapp.xml with this:      4. Run    h4. HD Discussion   http://support-admin.<USER>com/display/APP-654753",Bug,Medium,Closed,"2012-04-02 15:40:30","2012-04-02 15:40:30",2
"The Titanium SDK ","iOS: VideoPlayer does not fire touch events since 1.8.1","VideoPlayer is not firing touch events anymore on iOS (other platforms not tested).    The next code works with sdk 1.7.5 and 1.8.0.1 on iOS, but is not working with sdk 1.8.1 nor 1.8.2    I tried to capture click, dblclik and touchstart events with same result.    Bug has been confirmed by the community at Q&A [http://developer.<USER>com/question/132645/bug-videoplayer-does-not-fire-touch-events-sdk-181]      {code:title=Test case: App.js|borderStyle=solid}  var win = Ti.UI.createWindow();     var videoObject = Titanium.Media.createVideoPlayer({      contentURL:'test.mp4',       scalingMode:Titanium.Media.VIDEO_SCALING_MODE_FILL,      top:0,      left:0,      height:'100%',      width:'100%',      autoplay:true  });     videoObject.addEventListener('click', function(){      alert('click!');  });     win.add(videoObject);  win.open();  {code}",Bug,High,Reopened,"2012-03-05 02:57:36","2012-03-05 02:57:36",2
"The Titanium SDK ","iOS: Ti.UI.Window not restoring correctly after a youtube-in-app view exits","*Code*  http://pastebin.com/NXYbpfRH    *Expected behavior*  When you run the app, watch the YouTube video, it should return without messing up any UI.    *Actual behavior*  Once the video has finished, it actually shows the status bar overlapping the window.    *Steps to reproduce*  1) Click Watch YouTube Video  2) Click on webview to play Youtube video while holding device in PORTRAIT orientation  3) While video is loading, turn device to LANDSCAPE. You will notice that status bar moves to the PORTRAIT orientation.  4) While video is playing in LANDSCAPE, return device to PORTRAIT orientation (you will notice that statusbar is in proper position).  5) Return device to LANDSCAPE orientation, and end video by clicking Done.  6) The Youtube player will close and the window will reopen with window's navbar underneath the status bar.    *Notes*  -Only happens on a device, I tried with an iPhone 3GS running 5.0.1.  -HD ticket: http://support-admin.<USER>com/display/APP-333237",Bug,Medium,Closed,"2012-04-02 09:14:18","2012-04-02 09:14:18",3
"The Titanium SDK ","Android: setting backgroundImage of TableViewRow to null or empty string crashes app","h6.Problem  Setting the backgroundImage property of a TableViewRow to null crashes the app with a NullPointerException/force close.  Setting backgroundImage to an empty string locks up the app (which will eventually crash if you keep clicking or try to back out).    h6.Rationale  This is a problem because we have the need to apply a background image to a row, and then at some point later remove that background image completely.    h6.Tested on  Droid Razr 2.3.5  Android 2.2 emulator    h6.Runtime engines  V8/Rhino    h6.Reproduction steps  1. Drop the following app.js code into a new project - initially, the row has no background image (property no specified)  2. click the row once...a background image appears (and the caption changes)  3. click the row again...a Force Close messaage appears on the screen, and a NullPointerException appears in the console    if you repeat the test with the 1st test line commented out and the 2nd test line uncommented, the app will freeze (nothing new appears in the console window) and then crash if you click the row again or try to back out.    h6.Repro sequence  {code}  var win1 = Ti.UI.createWindow({        backgroundColor:'black'  });    var TheListBox=Ti.UI.createTableView({width:'auto'});  var BIRow=Ti.UI.createTableViewRow({color:'white',                                      title:'No background image...click to toggle'});  TheListBox.appendRow(BIRow);    win1.open();  win1.add(TheListBox);    BIRow.addEventListener('click',ToggleBI);  function ToggleBI()  {    if (!BIRow.backgroundImage)    {      BIRow.backgroundImage='appicon.png';      BIRow.title='Titanium background image...click to toggle';    }    else     {      BIRow.backgroundImage=null; // 1st test...NullPointerException      //BIRow.backgroundImage=''; // 2nd test...lockup/freeze...crash on next click      BIRow.title='No background image...click to toggle';    }  }  {code}    h6.Console output      h6.API docs  http://developer.<USER>com/apidoc/mobile/latest/Titanium.UI.TableViewRow.backgroundImage-property.html  ",Bug,High,Closed,"2012-02-08 13:29:18","2012-02-08 13:29:18",1
"The Titanium SDK ","Android: Picker in scrollView not working","h6.Issue  Picker in scrollView not working.    h6.Tested on  Android Emulator 2.2  Droid Razr 2.3.5    h6.Runtime Engines  Rhino / V8    h6.Steps to reproduce  1. Run code below  2. Click the picker     h6.Expected behavior  See fully operational Pickers whose options render on screen    h6.Repro sequence   ",Bug,Medium,Closed,"2012-03-31 20:18:49","2012-03-31 20:18:49",1
"The Titanium SDK ","Android: Activities don't get correctly handled if first opening a Window and then a TabGroup ","h2. Problem description  The app opens a window for login - then opens a tabGroup. Android activities are no longer handled correctly.    h2. Steps to reproduce  See location for the project in the comments. Attaching logs relative to successful and failing case.    Successful scenario:  The first window is not included in a tab group. Click on on connect with facebook - then click the 'buy' button and click the facebook friends button (window i snow included in a tabGroup). Facebook friends are displayed.     Failure scenario:  Click on login with buddy beers and use the credentials:  - test case added below      h2. Additional notes  login window when you start the app is 'ui/login/start.js' ; tabgroup is in 'ui/common.js' ; facebook api are invoked in 'ui/send/person_via_faceboook.js' and in 'lib/webservice.js'    ",Bug,High,Closed,"2012-03-30 21:45:33","2012-03-30 21:45:33",1
"The Titanium SDK ","Android: KitchenSinkNook - Photo Gallery - After selecting an image from the photo gallery, it is not displayed","Steps to reproduce:    1. Launch KS Nook on the Kindle Fire  2. Navigate to Miscellaneous > Photo Gallery  3. Choose a photo    Actual result:  A gray image view is displayed    Expected result:  The image is displayed in the image view  *Note* works in 1.8.2  Log is attached",Bug,Medium,Closed,"2012-03-30 14:28:19","2012-03-30 14:28:19",1
"The Titanium SDK ","Android: Email Dialog - Email View does not appear on Kindle Fire","Description:  While testing Email Dialog, I noticed that after picking an image email view does not appear.   Does not occur on 1.8.2.    Spets:  1. Run KitchenSink  2. Go to Base UI-Views-Email Dialog  3. Pick an image    Expected result:  Email view should appear    Actual result:  Email view is not shown",Bug,Medium,Closed,"2012-03-30 13:08:48","2012-03-30 13:08:48",1
"The Titanium SDK ","Android: Unable to get any results when pulling events by date range","h6.Issue  Exception is thrown as Android is unable to get any results when pulling events by date range    h6.Tested on  sdk-version: 2.1.0.v20120329000337    h6.Runtime engines  Same thing happens with V8 and Rhino.    h6.Device  Galaxy Tab 7 Plus model GT-P6210  Android version 3.2  Kernel 2.6.36-P6210UEKJC-CL567728 se.infra@SEI-20 #3    h6.Repro sequence      h6.Console output  ",Bug,High,Closed,"2012-03-30 09:05:24","2012-03-30 09:05:24",2
"The Titanium SDK ","Android: TextField layout bug on tablet","h6.Issue  When using the texfield on android tablet in the following way, the background of the textfield and its cursor becomes invisible. Modal property true should cause the issue.    h6.Tested on    Droid Razr 2.3.5 > non affected    Asus Transformer Tf101 with honeycomb(3.1) > affected    h6.Repro sequence      ",Bug,Medium,Closed,"2012-03-30 07:14:28","2012-03-30 07:14:28",3
"The Titanium SDK ","iOS: 4.3: KitchenSink: Base UI > Views > Map View: mapview annotation view does not appear","When KitchenSink > UI > Views > Map View is run, the annotation view (white box with title and subtitle) is not displayed on mapview load. However, clicking the annotation pin will correctly display the annotation view. Otherwise, the annotation view correctly displays on mapview load on the iPad3 5.1 and iPad/iPhone Simulator 5.0. This is a regression, as it works on iPad/iPhone Simulator 4.3 using SDK 1.8.2.     This is not directly related to https://jira.<USER>org/browse/TIMOB-5305, as the bug is fixed on the iPad 4.3 device and simulator.    Steps to Reproduce:    1. Run KitchenSink > UI > Views > Map View on iOS.    Expected Result:    Annotation view should be visible.    Actual Result:    Annotation view not visible.",Bug,Medium,Closed,"2012-03-29 16:50:21","2012-03-29 16:50:21",1
"The Titanium SDK ","iOS: Project does not rebuild when new modules are added to tiapp.xml","Noted by <USER>H during a demo. Note that these steps _do_ appear to work for me, so I'm not sure if this was fixed already, or if there is a nuance I'm missing in the reproduction case.    # Build an iOS project  # Edit app.js to require the module  # Add a new module to the project and edit the tiapp.xml manually to add the module  # Rebuild the project. The app fails to run because it can't find the module. Doing a Project > Clean fixes it.    In speaking with Steven, it appears that platform needs to keep track of the last time the tiapp.xml was touched to know if it needs to do a rebuild.",Bug,High,Closed,"2012-03-29 15:23:11","2012-03-29 15:23:11",5
"The Titanium SDK ","iOS: Textfield in scrollview does not slide back to original position on blur","h3. Code    Test this code in landscape orientation        h3. Expected Behavior    Clicking on the textfield should bring up the keyboard and on textfield blur (keyboard down), the textfield should scroll back to original position    h3. Actual Behavior    Textfield does not scroll back to original position and there is a gap that can be seen between the textfield and the border of the scrollview.",Bug,High,Closed,"2012-03-29 13:53:48","2012-03-29 13:53:48",1
"The Titanium SDK ","iOS: AudioPlayer is failing for some mp3, even if are in a supported format/encoding.","h4. Problem Description  This doesn't seem to work for me, the mp3 plays fine via a web browser though. The code is correct so internally it doesn't like the file format. Is there a reason for this or something I can do (including encoding the audio differently) so that it's compatible. 90% of the audio files I encode all work, it's only a small number that don't and they are encoded the same way always.    Replacing the audio file with something else works fine.    This is the last stumbling block to release my app.    h4. Actual Results  One file it's working, one it's not. EVen if they are encoded in the same way.     h4. Expected results  Similar encoded mp3 files should play just fine    h4. Test Case  1. Create a new mobile Project  2. Add this code    3. If you change the vurl to http://www.voxsci.com/turtle1.mp3, it will work just fine.     h4. Extra info  I checked the files, they are similar: Mono, 44100hz, 32 bits float and they work in browser and audacity. ",Bug,High,Closed,"2012-03-29 11:35:59","2012-03-29 11:35:59",2
"The Titanium SDK ","iOS: Textfield in a scrollview scrolls if bluetooth keyboard is connected to iPad","h3. Code    h1. Please test on the iPad device        h3. Expected Behavior  Clicking on the textField should not scroll it up when a bluetooth keyboard is connected to the iPad.     h3. Actual Behavior  On connecting the keyboard and clicking on the textfield, the textfield scrolls up as if the soft keyboard is present.",Bug,Medium,Closed,"2012-03-29 11:17:54","2012-03-29 11:17:54",1
"The Titanium SDK ","Android: Debugger - On V8, JNIUtil error messages appear when debugging with breakpoints","Steps to reproduce:  1. Unzip and import attachment  2. From https://wiki.<USER>org/display/tp/Debugger+Test+Plan, execute test case 1013    Actual: After step 9, the following error messages appear:      Even though these error messages appear, it does not seem to affect the debugger i.e. the debugger does not terminate and I am still getting expected results from the debugger test plan.    Expected: Error messages should not appear.    Note:  * The error messages do not appear in 1.8.2  * Only tested in v8. Did not test in rhino.  * The error messages appear only when using breakpoints.",Bug,High,Closed,"2012-03-29 10:37:16","2012-03-29 10:37:16",0.5
"The Titanium SDK ","iOS: Feature to add a property to detect if keyboard is being displayed or not","It has been requested to add a new feature to check if soft keyboard on the device is displayed or not. ","New Feature",Medium,Closed,"2012-03-28 16:47:11","2012-03-28 16:47:11",1
"The Titanium SDK ","iOS: soft keyboard behavior during orientation change is now different across handheld devices","Description:  While writing bug TIMOB-8363 we checked the behavior of this iOS feature on a variety of devices and found new behavior but unique in all of them.     For the 4.0.2 device, the keyboard is not rendered correctly during rotation (see TIMOB 8363)    On 4.3.5 when starting with the soft keyboard on screen, on orientation change, the keyboard animates off-screen then is redrawn after the UI has handled the orientation change. This occurred on both portrait to landscape and landscape to portrait orientation changes.    On iPod 5.1 the same behavior like on iPod 4.3.5, but this occurs only when making a portrait to landscape orientation change. For landscape to portrait orientation changes, the soft keyboard does not leave the screen during the orientation change, it simply rotates with the other UI elements.    Steps to reproduce:  1) Using SDK 2.0.0.v20120328000206 build and install KS  2) Bring up the soft KB  3) Rotate the device    Result:  All devices show unique behavior, but in general there is a KB redraw. The older behavior was that the KB stayed on screen and rotated with the UI.    Expected:  The KB stays on screen and rotates with the UI.    Notes:  Does not occur with 1.8.2",Bug,High,Closed,"2012-03-28 15:17:42","2012-03-28 15:17:42",1
"The Titanium SDK ","Android: Ti.UI.createScrollView sizing incorrectly in a vertical layout","h2.Problem  Setting Ti.UI.createScrollView.height to Ti.UI.SIZE causes the scrollView to take up the entire screen.  If navBarHidden:true is set in app.js, a scrollView whose contents are minor will now scroll.   This did not occur in Android 2.2.    h2.Steps to Reproduce  # Make a project with the below app.js.  # Run in Android 4.0 emulator    You will see that most of the screen (excluding the custom navbar) is red.  If you click and drag, you will see it scroll even though the components are very minor.    One other point of interest, I added a label at the bottom of the window, but it is not visible since the scrollview wants to take up the entire parent.      {code:title=Bar.java|borderStyle=solid}  var win = Ti.UI.createWindow({    backgroundColor: '#7B6700',    exitOnClose:true,    layout:'vertical',    navBarHidden:true  });    var NavBarView = Ti.UI.createView({height: '25dp',                                     top:0,                                     backgroundColor: 'green',                                     width:'100%'});                                       var View1 = Ti.UI.createScrollView({left:'3dp',                                      right:'3dp',                                      height: Ti.UI.SIZE,                                      showVerticalScrollIndicator:true,                                      scrollType:'vertical',                                      layout:'vertical',                                      backgroundColor: 'red',                                      showHorizontalScrollIndicator:false,                                      touchEnabled: true                                     });    var button = Ti.UI.createButton({title: 'Click',                                   width: '100dp',                                   height: '50dp'                                  });                     button.addEventListener('click', ButtonClick);    function ButtonClick(e)  {    Ti.API.info('View1 height: ' + View1.size.height);  }    Label1 = Ti.UI.createLabel({text:'Label 1'});    View1.add(button);  win.add(NavBarView);  win.add(View1);  win.add(Label1);  win.open();    {code}",Bug,High,Closed,"2012-03-27 12:08:24","2012-03-27 12:08:24",3
"The Titanium SDK ","iOS: open event fires multiple times at startup, plus whenever focused when using NavigationGroup","h2.Problem  The open event of a window fires 3 times when first opened, then whenever the window re-receives focus (when navigating back to it using a NavigationGroup), the open event fires again.    h2.Expected Result  The open event should only fire once...when it is first opened, period.  And it should not fire when the window re-receives focus.    h2.Steps to Reproduce  # drop the following app.js code into a new project  # build with SDK 1.8.1  # run in the iPhone simulator.  You will see:    # Say to yourself: Why did OPEN fire 3 times?!?!?!?!?!  # click the open new window button and watch the console log.  You will see:    # click the back button and watch the console log.  You will see:    # Say to yourself: Why did OPEN fire again?!?!?!?!?!    Repeat steps 5, 6, and 7 and continue to get the same result until you're bored with this game.    h2.Testcase  {code:title=app.js}  var rootWin   = Ti.UI.createWindow();  rootWin.addEventListener('focus', function()  {    Ti.API.info(rootWin FOCUSED);  });    rootWin.addEventListener('open', function()  {    Ti.API.info(rootWin OPEN fired);  });    var btnOpenWin = Ti.UI.createButton({    title : open new window,    width : 200,    height  : 35  });    btnOpenWin.addEventListener('click', function()  {    var win2 = Ti.UI.createWindow();    ng.open(win2, {animated:true});    Ti.API.info(2nd wind);  });    rootWin.add(btnOpenWin);    ng = Ti.UI.iPhone.createNavigationGroup({window:rootWin});  var NavBase = Ti.UI.createWindow();  NavBase.add(ng);  NavBase.open(); // this opens the root window, automatically  {code}      In a larger project, sometimes when you go back to the main window, no events fire at all (no focus, no open).  I would expect the focus event to fire each time.  Just something to keep in mind while you're looking into the code, as I haven't been successful in reproducing this in a small testcase.  ",Bug,Medium,Closed,"2012-02-09 13:46:29","2012-02-09 13:46:29",1
"The Titanium SDK ","Android: keyDispatchingTimedOut when trying to resume an app from background to foreground","*Code*  I personally would say majority of Titanium Android apps, but for this ticket, please try it with the KitchenSink app.    *Expected behavior*  When you put an app into the background, and bring it back into the foreground, it should work perfectly fine.    *Actual behavior*  The app seems to show a black background for 1-2 seconds and then restarts.    *Steps to reproduce*  I can reproduce this issue 3 out of 5 times, by doing the following:    *1.* If you have the KitchenSink app open in memory from before, kill it. We want to make sure we start from a clean slate.  *2.* Make sure you have your USB cable connected to your laptop and phone.  *3.* Run the KitchenSink app, wait for it to load and press the home button (don't press the back button, but instead the home button!)  *4.* Run a few other apps in the background, I ran 'Gmail', 'Contacts', 'Internet', 'Peep', 'Places', 'Stocks' and 'Market'. It's important that you press the home button and NOT the back button! (NOTE if it doesn't work for you the first time, try opening more or even less apps, it might make a difference, depending on the device's specs).  *5.* Once you have some apps running in the background, make sure you are back on the main home screen.  *6.* Press the power button (lock your screen, turn the screen off, but don't power the device off!)  *7.* Unplug the USB cable.  *8.* Unlock your phone.  *9.* Press on the KitchenSink app icon.  *10.* Expect to see a black background for a second or two and then it will restart the app.  *11.* If you don't, repeat from step 1.      *Notes*  -Different apps behave differently. The KitchenSink app, for example, seems to show a black background for 1-2 seconds and then restart the whole app. Other apps, such as Mister (from Google Play), actually shows a black screen and never continues to do anything else. The Jiffy Lube app, restarts and has the loading screen image visible as the background border.    -KitchenSink was packaged with a 2.0 CI build.    -Mister on Google Play is packaged with a 1.9.0.v20120209110134 build.    -Jiffy Lube on Google Play is packaged with the 1.8.2 build.    -If it doesn't work the first time, please keep trying for a while. Sometimes it takes a few tries, before you can reproduce this issue. Also try to restart your device, so all other apps are unloaded from memory. Try to open a few more apps, or maybe even less apps, it should eventually be reproducible.    -Only tested on a HTC Sensation 4G, running Android 2.3.x.",Bug,High,Closed,"2012-03-27 20:47:28","2012-03-27 20:47:28",1
"The Titanium SDK ","Android: tableView textField focus is lost while typing","h2. Problem description  TableView textField loses focus when typing in.     h2. Steps to reproduce  Create a tableView and a tableViewRow with a textField.  Click on the textField and start typing some text    Result: after the first character, focus on the textField is lost.     {code:lang=javascript|name=app.js}  var win = Ti.UI.createWindow({   backgroundColor:'black'  });    var data = [];    var tableview;  var row = Ti.UI.createTableViewRow({   clickName: 'row'  });    var textfield = Titanium.UI.createTextField({   width: '80%',   height: 80,   color: '#000',   returnKeyType: Titanium.UI.RETURNKEY_DONE,   enableReturnKey: true,   keyboardType: Titanium.UI.KEYBOARD_ASCII,   autocorrect: false,   hintText: 'Enter text Field',   textAlign: 'left',   clearOnEdit: false,   borderStyle: Titanium.UI.INPUT_BORDERSTYLE_ROUNDED,   clearButtonMode: Titanium.UI.INPUT_BUTTONMODE_ONFOCUS,   leftButtonMode: Titanium.UI.INPUT_BUTTONMODE_ALWAYS  });    textfield.font = {   fontSize: '15sp',   fontFamily: 'Arial'  };  textfield.autocorrect = true;  textfield.borderStyle = Titanium.UI.INPUT_BORDERSTYLE_NONE;    row.add(textfield);    data = [row];  tableview = Titanium.UI.createTableView({   data: data,   rowBackgroundColor: 'white',    });  win.add(tableview);    win.open();  {code}    h2. Additional notes  Ticket associated: http://support-admin.<USER>com/display/APP-682796",Bug,Medium,Closed,"2012-03-27 13:14:58","2012-03-27 13:14:58",3
"The Titanium SDK ","Android: Regression: TableView no longer responds to touch events (touchstart, touchmove, touchend, touchcancel)","h2.Problem  TableView does not respond to touch events (touchstart, touchmove, touchend, touchcancel).  This is a regression, as this worked fine in 1.7.5 and the 1.8.0.v... continuous build from September.  This also works fine in iOS.  Only Android is affected.    h2.Test Case  # drop the following app.js code into a new project  # build with SDK 1.8.1  # run on the Android 2.2 emulator  # press and hold any row.  *No touchstart event occurs.*  # while still holding the row, move the mouse around a little.  *No touchmove event occurs.*  # let go of the row.  *No touchend event occurs.*    {code:title=app.js}  var win1=Ti.UI.createWindow({              backgroundColor:'#fff',              exitOnClose:true,              layout:'vertical',              navBarHidden:false,              backgroundColor:'black'           });    var TopLabel=Ti.UI.createLabel({text:'Last row will only be half visible when scrolled',                                  color:'black',                                  left:0,                                  right:0,                                  height:25,                                  backgroundColor:'yellow'});    win1.add(TopLabel);    var MyListbox=Ti.UI.createTableView({backgroundColor:'black'});    for (var i=1; (i <= 10); i++)    MyListbox.appendRow(Ti.UI.createTableViewRow({title:'Row '+i}));    Ti.API.info('adding EventListener for touchstart');  MyListbox.addEventListener('touchstart',TchStart);  function TchStart(evt)  {    Ti.API.info('TchStart');  }    Ti.API.info('adding EventListener for touchmove');  MyListbox.addEventListener('touchmove',TchMove);  function TchMove(evt)  {    Ti.API.info('TchMove');  }    Ti.API.info('adding EventListener for touchend');  MyListbox.addEventListener('touchend',TchEnd);  function TchEnd(evt)  {    Ti.API.info('TchEnd');  }    Ti.API.info('adding EventListener for touchcancel');  MyListbox.addEventListener('touchcancel',TchCancel);  function TchCancel(evt)  {    Ti.API.info('TchCancel');  }    Ti.API.info('adding EventListener for click');  MyListbox.addEventListener('click',LBClick);  function LBClick(evt)  {    Ti.API.info('LBClick');  }    win1.add(MyListbox);  win1.open();  {code}  ",Bug,High,Closed,"2012-02-10 07:39:52","2012-02-10 07:39:52",3
"The Titanium SDK ","iOS: Close event is not firing when closing a window","h4. Problem description  I have a NavigationGroup, and two windows. Intermittently, when the second window is closed, the first window goes comatose (won't respond to any clicks).    h4. Actual results  the window is not throwing the close event when closing.     h4. Expected results  the window should throw the close event when closing    h4. Test case  1. Create a mobile project  2. Add this three files  {code:title=app.js|borderStyle=solid}  var FirstWindow=Ti.UI.createWindow({                    url:'MOMain.js',                    layout:'vertical',                    navBarHidden:false                  });  Ti.App.NavGroup=Ti.UI.iPhone.createNavigationGroup({window:FirstWindow});  var NavBase=Ti.UI.createWindow();  NavBase.add(Ti.App.NavGroup);  NavBase.open(); // this opens the root window, which is FirstWindow, automatically      {code:title=MOMain.js|borderStyle=solid}  var Win2=Ti.UI.currentWindow;      function HandleiPhoneCloseEvent()    {      if (Ti.App.DevelopmentMode)        Ti.API.info('# Window HandleiPhoneCloseEvent fired');      Win2.removeEventListener('close',HandleiPhoneCloseEvent);      Win2=null; // attempt to release the window's memory    }    Win2.title='Window 2';  Ti.App.CurrentWindow=Win2;  Win2.addEventListener('close',HandleiPhoneCloseEvent); // catches the iPhone NavGroup back button close  {code}    3. Run the app  4. Click on the Hit Me button  5. Click the navgroup's back button  6. Try to click on the Hit Me button again    h4. Extra info  This seems to be timing dependent, so you may have to repeat the 2 clicks several times. I can make it happen in under 30 seconds...usually within 5 seconds. My best reproduction comes by waiting 2.5 seconds before clicking the back button. If you have trouble reproducing this, vary the time between seeing the second window and clicking the back button (faster and then slower).    After some investigation, I can see that the 'close' event of the second window never fires when the problem occurs (neither does the focus event of the first window).    This seems to point to a serious flaw. In a larger app, the failure occurs 80% of the time. Our app is totally dead in the water because of this, and we need to release it soon. Can you please take a look into this?    Please note that I've reduced this down about as far as possible, while still demonstrating the error. Removing any of the references to Ti.App or removing any of the event listeners hides the problem, but all of my apps are dependent on these.",Bug,High,Closed,"2012-03-26 15:26:27","2012-03-26 15:26:27",3
"The Titanium SDK ","Android: Javascript array [] seems to have some inconsistence behavior compared to iOS","*Code*  Attached with this ticket.    *Expected behavior*  When you tap on the button, DDMS should show the following in the output:      *Actual behavior*  What it actually prints out is the following:      *Notes*  -As you can see, it doesn't even print out 'object data.screen_name[0]', since the array itself seems to be 'undefined'.  -The expected behavior is what I get from the iOS simulator's output.  -Only tested on the iOS simulator and HTC Sensation 4G running 2.3.x.  -Marked as a parity issue, not sure if this is correct, please edit the ticket as appropriate.  -HD ticket: http://support-admin.<USER>com/display/APP-927227",Bug,Medium,Closed,"2012-03-26 11:40:01","2012-03-26 11:40:01",1
"The Titanium SDK ","Android: Upgrade V8 to 3.9.24","We should upgrade to a newer version of V8. One of the main new features  that has been implemented is incremental GC. This also exposes some additional  API that can help us better tune the GC.    Targeting V8 version 3.9.24 (3.9 stable branch).",Story,High,Closed,"2012-03-26 11:20:43","2012-03-26 11:20:43",3
"The Titanium SDK ","iOS: Text Field/Area needs hasText method","h2. Problem    TextField and TextArea hasText() method not functioning.    h2. Test Case    {code:lang=javascript|title=app.js}  var win = Ti.UI.createWindow({   backgroundColor : 'white',   exitOnClose : true,   fullscreen : false,   layout : 'vertical',   title : 'hasText Demo'  });     var textField = Ti.UI.createTextField({      color: '#336699',      backgroundColor:'#eee',      top: 10, left: 10,      width: 250, height: 60,      borderStyle: Ti.UI.INPUT_BORDERSTYLE_ROUNDED  });  win.add(textField);     var textArea = Ti.UI.createTextArea({      borderStyle: Ti.UI.INPUT_BORDERSTYLE_ROUNDED,      backgroundColor:'#eee',      color: '#336699',      top: 10, left: 10,      width: 250, height: 200  });  win.add(textArea);        win.open();     textField.addEventListener('change', function(e){      Ti.API.info('hasText? ' + e.source.hasText());  });     textArea.addEventListener('change', function(e){      Ti.API.info('hasText? ' + e.source.hasText());  });  {code}",Bug,Medium,Closed,"2012-03-26 08:28:50","2012-03-26 08:28:50",0.5
"The Titanium SDK ","Android: official support for Holo Themes ","h2. Request description  Customer is asking for supporting officially Holo Themes: http://developer.android.com/design/style/themes.html    h2. Additional notes  Ticket request: http://support-admin.<USER>com/display/APP-839258    ","New Feature",Low,Closed,"2012-03-25 18:11:43","2012-03-25 18:11:43",5
"The Titanium SDK ","Android: Unable to create mapview","The user is having a tabbedview application. And he is trying to access mapview, by calling the Ti.map.createview.    I dont have the complete code sample, but the mapview snippet, and the crash log.  Here is the code        i have attached the crash log.",Bug,Medium,Closed,"2012-03-25 17:29:45","2012-03-25 17:29:45",2
"The Titanium SDK ","iOS: Subsequently setting the html property of a webview does not show the changed html but shows blank content","h2. Problem    In our app we create one instance of Ti.UI.WebView and reuse it for showing html content which is stored in a sql db. As the user navigates to different entries within a messages list, the new selected content is pushed into the webview by asigning the value to the html property of the webview.    The first time the value is set, the content shows up as expected.    If the value is set the second time the webview shows up empty.    h2. Test case  Create a fresh mobile project and replace the default app.js with the following code:  {code:lang=javascript|title=app.js}  // this sets the background color of the master UIView (when there are no windows/tab groups on it)  Titanium.UI.setBackgroundColor('#000');    // create tab group  var tabGroup = Titanium.UI.createTabGroup();      //  // create base UI tab and root window  //  var win1 = Titanium.UI.createWindow({        title:'Tab 1',      backgroundColor:'#fff'  });  var tab1 = Titanium.UI.createTab({        icon:'KS_nav_views.png',      title:'Tab 1',      window:win1  });    var button1 = Titanium.UI.createButton({   title:'open webview window',   width:220,   height:40  });    win1.add(button1);    var winwebview = Titanium.UI.createWindow({        title:'Window with webview',      backgroundColor:'#fff'  });    var webview = Titanium.UI.createWebView({  });    winwebview.add(webview);    var counter = 0;  button1.addEventListener('click',function(e)  {     counter++;     webview.html = '<h1>Counter is: ' + counter + '</h1>';     tab1.open(winwebview,{animated:true});  });    //  // create controls tab and root window  //  var win2 = Titanium.UI.createWindow({        title:'Tab 2',      backgroundColor:'#fff'  });  var tab2 = Titanium.UI.createTab({        icon:'KS_nav_ui.png',      title:'Tab 2',      window:win2  });    var label2 = Titanium.UI.createLabel({   color:'#999',   text:'I am Window 2',   font:{fontSize:20,fontFamily:'Helvetica Neue'},   textAlign:'center',   width:'auto'  });    win2.add(label2);        //  //  add tabs  //  tabGroup.addTab(tab1);    tabGroup.addTab(tab2);        // open tab group  tabGroup.open();  {code}    # Build an run the app in simulator.  # Tap on the button open webview window.   # The webview shows the line Counter is: 1.  # Navigate back to Tab 1 and tap again on the button open webview window.  # The webview should show the line Counter is: 2, but the webview shows up empty.    With Titaniums SDK 1.8.0.1 and 1.8.1 this works as expected.  ",Bug,High,Closed,"2012-02-24 02:51:35","2012-02-24 02:51:35",1
"The Titanium SDK ","Android: ScrollView - If a view is added to a scrollview, the view will not fill the screen","Steps to reproduce:  1. Run the following code on Android:      Actual: A white view appears.  Expected: A red view should fill the screen similarly to iOS. See attachments",Bug,Medium,Closed,"2012-03-23 12:34:01","2012-03-23 12:34:01",2
"The Titanium SDK ","Core: Define Java coding standards","Define a document that outlines all Java coding standards any Java written for <USER>(internal or community contributions) should adhere to.  This should represent more than syntax, but general design approaches and <USER>flow.  This document will be focused on language only.  Platform Specific information will be contained inside another document.",Story,High,Closed,"2012-03-23 12:23:31","2012-03-23 12:23:31",5
"The Titanium SDK ","TiAPI:  investigate addition of action bar","Investigate the addition of the action bar feature that was introduced by Android.  Can this be done in a cross platform way (should it be platform specific)?  Where should this live namespace wise, what should the feature set be, etc.",Story,High,Closed,"2012-03-23 11:59:05","2012-03-23 11:59:05",5
"The Titanium SDK ","Android: webViews has a white background when turning on hardware acceleration ","h6.Issue  When using android:hardwareAccelerated=true (most likely in android manifest), the transparency of the WebView is lost and replaced by plain white background. Not all devices seem affected by this issue.    h6.Non affected devices  Droid Razr 2.3.5  Samsung Galaxy Tab p1000, Froyo(2.2)    h6.Affected device  Asus Transformer TF101, Honeycomb(ver3.1)    h6.Repro sequence  {code:title=app.js}  var win = Ti.UI.createWindow({   backgroundImage : 'KS_nav_ui.png', //'/images/guide_fond_notice.png',   navBarHidden : true,   exitOnClose : true,   top : '0dp',   left : '0dp',   right : '0dp',   bottom : '0dp'  });    var webView = Ti.UI.createWebView({   backgroundColor : 'transparent',   html : 'This WebView\'s Background Must Be transparent',   top : '50dp',   left : '470dp',   right : '0dp',   bottom : '50dp'  });  win.add(webView);    win.open();       h6.Or via Manifest  {code:title=platform/android/AndroidManifest.xml}  <?xml version=1.0?>  <manifest xmlns:android=http://schemas.android.com/apk/res/android android:versionCode=1 android:versionName=1                  package=com.<USER>com android:installLocation=preferExternal>     <tool-api-level>11</tool-api-level>   <uses-sdk android:minSdkVersion=7 android:targetSdkVersion=11/>    <supports-screens android:anyDensity=true android:largeScreens=true android:normalScreens=true android:smallScreens=false/>      <application android:hardwareAccelerated=true android:debuggable=true android:name=ActifryApplication>        <activity android:configChanges=keyboardHidden|orientation android:screenOrientation=portrait android:name=.ActifryActivity android:theme=@style/Theme.Titanium>          <intent-filter>              <action android:name=android.intent.action.MAIN/>              <category android:name=android.intent.category.LAUNCHER/>          </intent-filter>      </activity>        <!-- TI_APPLICATION -->        <activity android:configChanges=keyboardHidden|orientation android:launchMode=singleTask android:name=ti.modules.titanium.media.TiVideoActivity android:theme=@android:style/Theme.NoTitleBar.Fullscreen/>        <activity android:configChanges=keyboardHidden|orientation android:name=org.<USER>titanium.TiActivity/>      <activity android:configChanges=keyboardHidden|orientation android:name=org.<USER>titanium.TiTranslucentActivity android:theme=@android:style/Theme.Translucent/>      <activity android:configChanges=keyboardHidden|orientation android:name=org.<USER>titanium.TiModalActivity android:theme=@android:style/Theme.Translucent/>      <activity android:configChanges=keyboardHidden|orientation android:name=ti.modules.titanium.ui.TiTabActivity/>      <activity android:name=ti.modules.titanium.ui.android.TiPreferencesActivity/>        <service android:exported=false android:name=org.<USER>titanium.analytics.TiAnalyticsService/>      </application>    <uses-permission android:name=android.permission.ACCESS_WIFI_STATE/>  <uses-permission android:name=android.permission.ACCESS_NETWORK_STATE/>  <uses-permission android:name=android.permission.WRITE_EXTERNAL_STORAGE/>  <uses-permission android:name=android.permission.INTERNET/>    </manifest>  {code}",Bug,Medium,Closed,"2012-03-22 13:58:47","2012-03-22 13:58:47",4
"The Titanium SDK ","iOS: Feature request to add X.509 certificate authentication over SSL in HTTPClient connection","It has been requested to add the functionality to send x.509 certificate through SSL to the server while establishing HTTPClient connection.    So basically, during authentication <USER> client would be able to send a (.cer) file through HTTPS.    Essentially, something like this:    1) Package .p12 files/ .cer files as part of Resources, and   2) Extract data from these files (an API from TiHTTPClient) and send it over to server.","New Feature",High,Open,"2012-03-22 10:48:23","2012-03-22 10:48:23",3
"The Titanium SDK ","iOS: TextField loses focus if resized","h2. Problem  TextField in a TableViewRow loses focus if it has been resized after being focused    h2. Code and steps to reproduce  {code:lang=javascript|title=app.js}  var win = Ti.UI.createWindow({   title:'pippo',   backgroundColor:'white'  });    function addRow(addTextArea)  {   var row = Ti.UI.createTableViewRow({height:200});        var $tTF = Ti.UI.createTextField({    height: 30,    top : 30,    width: 100,    borderStyle:Titanium.UI.INPUT_BORDERSTYLE_ROUNDED   });      $tTF.addEventListener('focus',function(_e){       Ti.API.error(focus +_e.source.height);       Ti.API.error(_e);       _e.source.animate({height:  _e.source.height*2});   });            row.add($tTF);   row.selectionStyle = Ti.UI.iPhone.TableViewCellSelectionStyle.NONE;   row.className = 'control';   return row;  }    // create table view data object  var data = [];    for (var x=0;x<1;x++)  {   if (x==1){    data[x] = addRow(true);   } else {    data[x] = addRow();   }    }    var tableView = Ti.UI.createTableView({   data:data,   style: Titanium.UI.iPhone.TableViewStyle.GROUPED  });  win.addEventListener('focus', function()  {   Ti.API.info('window focus fired');  });  win.add(tableView);    win.open();    {code}    To reproduce:  - Run the app and click the textField: textField is animated increasing in height.  Result: focus on textField is lost.    h2. Additional notes  Ticket associated: http://support-admin.<USER>com/display/APP-995689/conversation/read_all",Bug,Medium,Closed,"2012-03-22 10:47:49","2012-03-22 10:47:49",5
"The Titanium SDK ","iOS: Rejection for use of deprecated UDID property","We have had reports of two Apple rejections today for Titanium apps submitted for clients using an older 2.0 CI build and 1.8.2.  The rejection is based on the use of deprecated UDID property.  Was confirmed by a Titanium developer with at least one other native dev who got rejected:    https://twitter.com/#!/<USER>status/182640647113687040    This seems to be a very recent occurrence, so little data is available at this time.  This will require investigation and validation, along with a measured approach at dealing with moving totally over to the new UDID generation mechanism.",Bug,High,Closed,"2012-03-21 18:46:22","2012-03-21 18:46:22",2
"The Titanium SDK ","Android: memory leaks opening/closing tabGroups","h2. Problem  Memory leaks when opening and closing a window including a tabGroup    h2. Code and steps to reproduce  {code:lang=javascript|title=app.js}  var mainwin = Ti.UI.createWindow({      title:'TEST WINDOW',      backgroundColor:'#fff',      fullscreen:true,        statusBarHidden: true,      navBarHidden:true,       exitOnClose:true  });    var button = Ti.UI.createButton({      title: create tabGroup  });    var MY_TABGROUP = null;    Titanium.App.addEventListener('tabGroupclosed', function(e) {      Ti.API.debug('MY_TABGROUP close...');      MY_TABGROUP = null;  });    button.addEventListener('click', function(e) {        MY_TABGROUP = require('/myNewTabGroup').innerTabGroup();        MY_TABGROUP.open({          animated: true      });    });        var button2 = Ti.UI.createButton({   bottom: 200,   title:'show MY_TABGROUP'  });  button2.addEventListener('click', function(){   alert(MY_TABGROUP)  });  mainwin.add(button2);      var button3 = Ti.UI.createButton({   bottom:5,   title:'GC'  });  button3.addEventListener('click', function(){    views1 = [];       views2 = [];       MY_TABGROUP=null;  });  mainwin.add(button3);      mainwin.add(button);    mainwin.open();      Steps followed with allocated memory and # of objects:  1. Run the app (memory 3144MB - #Objects 60,139) and click on 'create tabGroup' button (mem 8053 - Obj 148,156)   2. Hit back button (mem 4457 - 91,059). Reference to MY_TABGROUP is still present and is still not GC  3. Click the GC button to set MY_TABGROUP to null (mem 4234 - Obj 86,654)    4. Click on create tabGroup button (mem 9007 - 172,396)  5. Hit back button (5408 - 115,292)    Memory increase in size subsequently repeating the steps.    Attaching also the log file.    h2. Additional info  Customer ticket: http://support-admin.<USER>com/display/APP-355811",Bug,High,Closed,"2012-03-21 17:08:11","2012-03-21 17:08:11",4
"The Titanium SDK ","iOS: Ti.UI.iPad.DocumentViewer add a property to reference the 'done' button","There doesn't seem to be a way to reference the 'done' button of a Ti.UI.iPad.DocumentViewer object. In other words, the customer would like to be able to call the 'done' button programmatically, something like DocumentViewer.close();   Currently there is no way of doing this.    HD ticket: http://support-admin.<USER>com/display/APP-658343","New Feature",Low,Closed,"2012-03-21 10:58:13","2012-03-21 10:58:13",0
"The Titanium SDK ","iOS: Coverflow - @2x images don't have a very clear retina display","h6.Issue  Images in the carrousel don't have a very clear retina display. It does show the @2x image but there's not much difference in the quality of the image.    h6.Tested on  iPhone 4  iOS simulator retina    h6.Current behavior  Same image is shown both in the coverflow and in an imageview, the rendered final image shows differently.    h6.Steps to reproduce  Import Resources.zip into a Studio project. Attached ZIP.     ",Bug,High,Closed,"2012-03-20 22:38:08","2012-03-20 22:38:08",2
"The Titanium SDK ","iOS: You can't call the Facebook Authorization from a Dialog (not even with app events)","h4. Problem Description  Customer adds a Facebook.authorize(); from an app, without any results.     h4. Actual Results  The function never goes and logs into facebook.    h4. Expected results   The app should be able to login into fb    h4. Test Case   1. Create a new mobile project  2. Add the code in the example to a button  3. Run it       h4. Extra info  There is a bug where platform didn't want to launch the FB authorize from a dialog, since it's bad practice to get a dialog from a dialog. So, we recommended the customer to add an app event catching this, closing the dialog and then adding the other dialog. It's not runnning.     The customer creates a small function doing a setTimeout, and that way, the function it's called properly within the if. ",Bug,High,Closed,"2012-03-20 15:31:37","2012-03-20 15:31:37",1
"The Titanium SDK ","Android: Ti.UI.WebView doesn't seem to load pages that try to open a new window","*Code*  * app.js      * index.html      *Expected behavior*  When you click on either of the two links, it should load up Google.    *Actual behavior*  What actually happens, is that the first link doesn't seem to do anything, only the second one seems to work.    *Notes*  -Only tested on a HTC Sensation and Samsung Galaxy S2, both giving me the same result.  -Same result, whether I use the Rhino or V8 engine.  -When testing the same code on the iOS simulator, both links seem to work fine.  -The issue is 'target=_blank' without this, it seems to work fine.  -HD ticket: http://support-admin.<USER>com/display/APP-257637",Bug,High,Closed,"2012-03-20 11:25:42","2012-03-20 11:25:42",3
"The Titanium SDK ","iOS: barImage hides nav buttons after window transition","In window with a navbar that has a barImage and nav buttons (such as a rightNavButton), if we go to a child window and then back the nav buttons will be hidden by the barImage (but are still there and react to the touch).    STEPS TO REPRODUCE:    * Put the app.js (code below and attached) and navbar.png (attached) in the Resources directory    * Run the code in the iOS simulator    * Click on the Open Window 2 button    * Click on the back button to return to window 1    The right nav button will now be hidden (although you can still click it)    app.js example code follows.          Possibly related to:    http://developer.<USER>com/question/131672/rightnavbutton-and-leftnavbutton-not-displaying-in-181      ",Bug,Medium,Closed,"2012-02-10 04:05:24","2012-02-10 04:05:24",2
"The Titanium SDK ","Android: App crashes on the device while uploading images, Memory issues","The app uses camera to click pictures, and upload to their server. Before uploading they perform image compression and resizing. Ti.imagefactory module is used for these purposes. The pictures are high resolution images, taken by a 8MP camera on the Motorola Droid X. The issue arises, when he uploads more than 1 image or multiple similar images or displaying the image in imageview. He gets Unable to load bitmap.Not enough memory.bitmap size exceeds VM budget. error on the device.    You can see the crash log here           Created sample apps, using the ti.imagefactory module, but could not reproduce this issue. Also tested the code on Motorola Droid3, LG OptimusV but still could not reproduce the issue.   ",Bug,High,Closed,"2012-03-19 17:18:52","2012-03-19 17:18:52",3
"The Titanium SDK ","iOS: TableView - setContentInsets not working correctly, values assigned are not always respected","When using many or complex rows in a table view, in connection with a pull to refresh UI, the table does not always stay stuck down (with things like a reloading message showing).    To reproduce, do the following:  - Run the following code on device (simulator works fine)  - Scroll down the table a bit.  - scroll back up and try to do a pull to refresh a few times.    The result:  The table will not always stay pulled down by 60. sometimes it will, but more often it will be around 5. If however you pull down and hold the table down for about a second before releasing, it seems to work correctly.    The code to re-create this issue is in the kitchen sink, I just am having it run with more rows to make the issue more clear... the issue is also clear when using more complex row layouts.  ",Bug,Medium,Closed,"2012-03-14 07:03:24","2012-03-14 07:03:24",2
"The Titanium SDK ","Android:  V8:  GC lag can cause crash on older devices","On older devices like Droid 2, GC lag cause result in a crash when:  1) alot of object are created resulting in high memory allocation on the java side  2) said objects are available for cleanup (no reference maintained in JS)  3) GC has not scanned yet due to the memory overhead on the V8 side not causing enough pressure on the GC    We need a way to notify V8 that we are running low on memory so that a GC occurs sooner than V8 would normally do on it's own.    A ticket has been linked that provides a fail case for this issue (original test case in ticket - not the one attached in the comments)",Bug,High,Closed,"2012-03-19 09:19:04","2012-03-19 09:19:04",5
"The Titanium SDK ","Android: While debugger is running, cannot back out and go back into an app","If you debug an Android app, you can't back out of that app and go back into it.  It hangs then at the splash screen, and shows both Bad Socket and Connection Refused errors in logcat.    Logcat:    [https://gist.github.com/43b1285ca8743eaaf672]    Screencast:    [http://screencast.com/t/m0C2c9Ojxo]  ",Bug,Low,Closed,"2011-03-29 16:48:47","2011-03-29 16:48:47",2
"The Titanium SDK ","Android: xhdpi density folder for extra large screens is not working ","Adding res-notlong-port-xhdpi and other related xhdpi folders to android -> images folder does not work as the image is not taken from those folders.     As per the Android Developer website, I tried to create a 640 x 960 resolution avd to test this issue for xhdpi.    To test:    1. Create an AVD for 640 x 960 resolution for titanium to run on. (This link explains the resolution needed for different densities: http://developer.android.com/guide/practices/screens_support.html)    *You might have to edit the already created AVD to appropriate resolution since Titanium creates a new AVD by itself (unless there is another way)*    2. Create any default app with res-long-port-xhdpi, res-long-land-xhdpi, res-notlong-port-xhdpi, res-notlong-land-xhdpi folders under android and add differen images to these folder to differentiate easily. (See Screenshot for the folder structure)    3. Run the app with the desired AVD. The starting screen image that appears is not of xhdpi but of mdpi folder.    Please clarify about this issue.    *Note: You would also need to set the tool-api-level and some other properties as below since the xhdpi has been added to android after api level 8.*      ",Bug,High,Closed,"2012-03-16 14:51:42","2012-03-16 14:51:42",2
"The Titanium SDK ","Android: removeEventListener does not work for the CI Builds","removeEventListener does not work on android, when used to remove and eventlistener on 'focus' event.      Run the code below. Do the following:    open app  alert comes up - clear it  click on Win 2's tab  click on Win 1's tab  Observed behavior: alert comes up again (the event listener wasn't removed during the call to onFocus ()).    Expected behavior: the second alert should not come up (the event listener should have been removed during the call to onFocus())    Thinking that maybe it was because I was calling removeEventListener() from within the event listener function, I also added a button that should remove the event listener from the window. It doesn't work either.      ",Bug,Medium,Closed,"2012-03-15 19:40:44","2012-03-15 19:40:44",2
"The Titanium SDK ","MobileWeb: Button: button selection only highlights the text and not the button","Steps to Reproduce:  1. Run the Button Module test TIMOB-6644  2. Click on the No image button    Actual:  Selection only highlights the text    Expected:  Should highlight the button",Bug,Low,Closed,"2012-03-14 10:57:20","2012-03-14 10:57:20",3
"The Titanium SDK ","MobileWeb : Gradients - Various browsers support gradient backgrounds while others do not (e.g. Safari on iOS >= 5.0 does while Safari on iOS < 5.0 does not)","*Note this may not be a Titanium specific issue because obviously not all browsers support the same features*    Steps to reproduce  1. Launch the sample app provided once on an iOS device with OS >= 5.0 and once on iOS device < 5.0    Actual result:  Gradient backgrounds are shown on the buttons in iOS 5.0+, while they are not in iOS < 5.0 (Also not on Galaxy Tab 10.1 OS 3.0)    Expected result:  Gradient backgrounds are shown in both browsers",Bug,Low,Closed,"2012-03-14 09:49:09","2012-03-14 09:49:09",0
"The Titanium SDK ","iOS: Replace Node.text with Node.textContent","For MobileWeb parity in 2.0, we need to deprecate the current {{Node.text}} property in our XML API, and rename it to {{textContent}}. We won't be fully implementing {{textContent}} from the DOM3 spec as it requires read-write access, and the traversal rules are slightly different than our current implementation. This is mainly for source level equivalence, until we have time to implement it properly.","New Feature",High,Closed,"2012-03-12 20:50:28","2012-03-12 20:50:28",1
"The Titanium SDK ","Android: Replace Node.text with Node.textContent","For MobileWeb parity in 2.0, we need to deprecate the current {{Node.text}} property in our XML API, and rename it to {{textContent}}. We won't be fully implementing {{textContent}} from the DOM3 spec as it requires read-write access, and the traversal rules are slightly different than our current implementation. This is mainly for source level equivalence, until we have time to implement it properly.","New Feature",High,Closed,"2012-03-12 20:49:12","2012-03-12 20:49:12",1
"The Titanium SDK ","Android: Invalid column visibility when querying events in Ti.Android.Calendar","Here is the sample app from our Calendar TDoc that shows the error. The error seems to happen when {{getEventsInYear}} is called        Also make sure you add READ_CALENDAR and WRITE_CALENDAR permissions to your tiapp.xml:      And finally, here is the trace:  ",Bug,Medium,Closed,"2012-03-09 11:15:52","2012-03-09 11:15:52",1
"The Titanium SDK ","Android: Memory leak by windows not properly cleaning up after close.","Windows appear to be leaking memory by not properly cleaning up  after they have been closed. This only affects heavy windows that have their own activity.    h3. Test Case: Opening a window and adding many child views.    Run the application and click the button to open a window.  Wait for an alert dialog to popup telling you its okay to back out now.  Hit the back button to close out the window. Repeat this <USER>    Expected: Memory usage should peak and remain steady.  Actual: Memory usages constantly rises until out of memory crash occurs.    ",Bug,Critical,Closed,"2012-03-06 13:50:48","2012-03-06 13:50:48",1
"The Titanium SDK ","Android: XML - On V8, parsing xml multiple times crashes the phone","Details: When running the app.js in SDK build 2.0.0.v20120302093154 for V8, the app will eventually crash and GC will be continuously called. See attachment 2.0_logcat.txt. And when running the app.js in SDK build 1.8.2 for V8, I get a out of memory exception. See attachment 1.8.2_logcat.txt.     However, the app.js does not crash when running on Rhino for both builds.     Steps to reproduce:  1. Create new project.  2. Replace app.js with attached app.js.  3. Run app.  4. Press 'load' until app crashes.    Actual: App crashes. See attachments.  Expected: The app should not crash.",Bug,High,Closed,"2012-03-02 11:45:48","2012-03-02 11:45:48",0.5
"The Titanium SDK ","iOS: UIPopover background color","Previous to 5.0 there was no way to customize the UIPopover background color.  From reading the docs and around the web since 5.0 people have been doing it.    References:  https://developer.apple.com/library/ios/#documentation/uikit/reference/UIPopoverController_class/Reference/Reference.html#//apple_ref/occ/instp/UIPopoverController/popoverBackgroundViewClass  https://developer.apple.com/library/ios/#documentation/uikit/reference/UIPopoverBackgroundView_class/Reference/Reference.html#//apple_ref/occ/cl/UIPopoverBackgroundView  http://stackoverflow.com/questions/5974439/customizing-the-uipopovercontroller-view-background-and-border-color  http://stackoverflow.com/questions/8490261/change-color-navigation-controller-in-a-popover","New Feature",High,Closed,"2012-03-02 07:56:43","2012-03-02 07:56:43",1
"The Titanium SDK ","iOS: Ti.Gesture.landscape and Ti.Gesture.portrait are undefined","1. Unpack the attached application and run it on Android. Note that as you rotate the view, the Ti.Gesture.landscape and Ti.Gesture.portrait properties change.  2. Run the same application on iOS.   EXPECTED RESULT: same values for landscape and portrait as Android.  ACTUAL RESULT: both values are undefined no matter the device orientation.    NB: if this was previously working in prior versions this could break existing applications if they are recompiled with 1.8.2.",Bug,High,Closed,"2012-02-29 18:27:29","2012-02-29 18:27:29",2
"The Titanium SDK ","Tooling: Add support for a common CommonJS module installation folder","With our current module system, modules must either be installed into a project or in the system Titanium folder. In both cases, modules are platform-specific compiled binaries (a static lib for iOS, shared lib for Android).    It would be nice to allow pure Javascript / CommonJS modules in a common place that could simply be distributed as JS files, for example a {{common}} or {{commonjs}} folder under the system Titanium directory that would be analogous to today's {{iphone}} and {{android}} directories.","New Feature",Critical,Closed,"2012-02-27 19:16:16","2012-02-27 19:16:16",1
"The Titanium SDK ","iOS: Autoupdate plist with custom font info","Currently iOS requires developers using custom fonts to manually update the Info.plist generated during a project build (or have a custom Info.plist). We should be able to automate this <USER>rather than require it to be done by hand.    h4. Testing  ----    Create a project with custom fonts and build without updating the Info.plist, to see if the font loads.",Bug,Low,Closed,"2012-02-27 11:20:35","2012-02-27 11:20:35",5
"The Titanium SDK ","Android: Ignore files that start with ._","On a Mac, some editors will generate a ._ file. When you compile an Android app, the android/compiler.py's make_function_from_file() function will error saying:        Just need to ignore ._ files.",Bug,Low,Closed,"2012-02-25 19:37:42","2012-02-25 19:37:42",3
"The Titanium SDK ","Tooling: Bundle ACS (and potentially MQTT) module binaries with the MobileSDK ","We need to bundle the new ACS module alongside the MobileSDK. Android may also require a second MQTT module that the ACS module will depend on. A brief overview for how this should work:  * The ACS (and MQTT) modules will be provided as zip binaries by the Modules team, preferably living under something like support/common  * {{site_scons/package.py}} will need to be updated so those zips are extracted and live in the modules top level directory of the MobileSDK zip. This will ensure that when the MobileSDK zip is extracted, the modules are installed in the system directory as well    h3. Testing    1. Download the two ti.* modules attached to this ticket (ignore bogus.zip).  2. Copy these two zips into titanium_mobile/support/module/packaged  3. Run scons to build the SDK.  4. Extract the SDK zip in dist/ and verify the file structure in modules/ matches as described in this ticket (see comments).  ","New Feature",Critical,Closed,"2012-02-24 13:44:25","2012-02-24 13:44:25",0.5
"The Titanium SDK ","Android: Typos in Ti.Codec exception messages","In decodeNumber(), the exception code has mistakenly said encodeNumber instead of decodeNumber.    Also, the source parameter is referred to as src instead of source.",Bug,Low,Closed,"2012-02-22 20:35:03","2012-02-22 20:35:03",1
"The Titanium SDK ","Android: Enable searchBar to animate cancel button","From the original iOS issue:    When a searchBar is NOT attached to a tableView, instead attached to a view on the window, the cancel button isn't animated. Nor does there seem to be a property to enable it. The cancel button IS animated when a searchBar is attached to a tableView.    iOS now has an optional argument in setShowCancel, of setShowCancel(BOOL,{animated:true}) wherein the cancel button is animated in its hiding. If Android offers something similar, we probably should support it for parity's sake.","New Feature",Low,Closed,"2012-02-16 17:16:00","2012-02-16 17:16:00",1
"The Titanium SDK ","iOS: Allow for custom Info.plist values via tiapp.xml","It would be great if we didn't have to create our own Info.plist file to override common values. We can already specify android manifest parameters in tiapp.xml.    Examples:  I need an app with a shorter name for the Home screen (Bundle Display Name)  I would like to have a custom url scheme (URL Schemes array)  I want to specify all my icon files for a universal app (Icon files)    Since Info.plist is an XML file anyway, it seems like the same logic that went into the Android Manifest section of tiapp.xml could be applied here.    This would be something *really great* to have in 1.9 to bring parity between iOS & Android.","New Feature",High,Closed,"2012-01-23 15:38:06","2012-01-23 15:38:06",3
"The Titanium SDK ","Coverage: Fix error in coverage generation script","Currently the coverage.py script is failing whenever it is run without arguments, which impedes us from automating and getting metrics about API docs and the APIs themselves.",Bug,High,Closed,"2012-02-15 10:16:44","2012-02-15 10:16:44",0.5
"The Titanium SDK ","iOS: Moving rows between sections & hard crash","Moving rows between sections causing crashes. See attached examples. Repro steps at the top of each attached file.    Some other tickets referencing this issue:    https://jira.<USER>org/browse/TIMOB-2655  https://jira.<USER>org/browse/TIMOB-2117  https://jira.<USER>org/browse/TIMOB-5430    Let me know if there's any other info I can provide.",Bug,Critical,Closed,"2012-02-14 20:47:40","2012-02-14 20:47:40",1
"The Titanium SDK ","iOS: backgroundSelectedImage does not scale in iPod 2nd gen","The backgroundSelectedImage property doesn't scale in iPod 2nd gen. You can only see a cropped image. The image scales fine in iPod 3rd gen.  h4. Repro Steps  1. Run the below code.  2. In iPod 2nd gen the images will not scale  ",Bug,High,Closed,"2012-02-15 00:37:13","2012-02-15 00:37:13",1
"The Titanium SDK ","Android: Permissions failure in android.calendar Drillbit test","Looks like the android.calendar test recently started failing due to missing permissions, log:    ",Bug,High,Closed,"2012-02-14 16:37:39","2012-02-14 16:37:39",1
"The Titanium SDK ","Tooling: Add clean option to titanium build scripts","Based on ticket TISTUD-1180, it seems odd that Titanium Studio knows how to clean a build, especially since it doesn't know how to do the build itself. From here: https://wiki.<USER>org/display/guides/Titanium+Command+Line+Interface, it seems that a titanium clean --platform=p1,p2 command (or if omitted, cleans all platforms) would be good, as then Studio does not need to internalize a very platform-specific function.",Story,Medium,Closed,"2012-02-14 12:20:54","2012-02-14 12:20:54",1
"The Titanium SDK ","Tooling: Update SDK version number to 2.0","Titanium Mobile is still reporting the SDK version as 1.9. Studio is now restricting UI elements for ACS based on an anticipated version # of 2.0. Until the SDK version # is updated, the UI elements will not appear.",Story,Critical,Closed,"2012-02-14 10:32:31","2012-02-14 10:32:31",0
"The Titanium SDK ","iOS: Memory is not being released when a tab is removed from tabGroup","Memory is not being released when a tab is removed from a tabGroup on iOS using 'removeTab'.    *Sample Code*      *STEPS TO REPRODUCE*    - Drop the above sample code into app.js.  - Start the application and open Instruments to profile it.  - Click the 'Remove Tab1' label.  - Search for 'proxy' in instruments and it can be seen that tab proxy(along with window and label proxies inside tab1) are not released even if memory warnings are simulated.    *EXPECTED BEHAVIOR*  Proxies related to tab and elements inside it should be released.    *OBSERVED BEHAVIOR*  Memory is not being freed.",Bug,Critical,Closed,"2012-02-14 10:08:01","2012-02-14 10:08:01",0.5
"The Titanium SDK ","Android: Implement the UI Composite Layout Behavior Spec","Spec: https://wiki.<USER>org/display/spe/UI+Composite+Layout+Behavior+Spec  Detailed QE Test Case: https://wiki.<USER>org/display/tp/UI+Composite+Layout+Behavior+Test+Case","New Feature",Critical,Closed,"2012-02-14 09:37:28","2012-02-14 09:37:28",5
"The Titanium SDK ","iOS: Memory Leak when local html file is used in a WebView","Memory is not being released when a webview, with a local HTML file, is added to a window and then removed from it. But this does not happen when a remote URL is used. Below is the sample code and the local HTML file has been attached.    *Sample Code*      *STEPS TO REPRODUCE*  - Drop the above sample code into app.js and copy the attached 'local_webview.html' to Resources folder.  - Start the application and open Instruments to profile it.  - Click the 'Add' button and then the 'Remove' button.  - Search for 'proxy' in instruments and it can be seen that webview proxies are not released even if memory warnings are simulated.    *EXPECTED BEHAVIOR*  Proxies related to webview should be released.    *OBSERVED BEHAVIOR*  Memory is not being freed.    *OTHER OBSERVATIONS*  Memory is being freed when a remote URL (uncomment the line with google.com and comment out the line with local_webview.html) is used.",Bug,High,Closed,"2012-02-13 19:07:37","2012-02-13 19:07:37",2
"The Titanium SDK ","iOS: UI - Email/SMS Dialog does not change orientation properly","h3.Issue  When you create a window and set win.orientationModes = [Titanium.UI.PORTRAIT]; or set it in Tiapp.xml. Then create an emailDialog or SMSDialog and open that window.     If you proceed to rotate the device into LANDSCAPE the window itself rotates into LANDSCAPE but the statusbar and keyboard remain in PORTRAIT.    h6.Expected behavior  The keyboard and statusBar rotate accordingly. Used to work in 1.7.x - as seen in the screenshots.    h6.Tested on  iPhone 4  iOS simulator 5    TiSDK 1.7 > OK  TiSDK 1.8 > Fail  TiSDK 1.9 > Fail    h6.Steps to reproduce  1) Run code below  2) Click Email button  3) Select a field from Email dialog - the keyboard shows up.  4) Rotate device  5) Misbehavior appears suddenly.     h6.Repro sequence  {code:title=app.js}  // this sets the background color of the master UIView (when there are no windows/tab groups on it)  Titanium.UI.setBackgroundColor('#000');     // create tab group  var tabGroup = Titanium.UI.createTabGroup();        //  // create base UI tab and root window  //  var win1 = Titanium.UI.createWindow({        title:'Tab 1',      backgroundColor:'#fff'  });  var tab1 = Titanium.UI.createTab({        icon:'KS_nav_views.png',      title:'Tab 1',      window:win1  });     var label1 = Titanium.UI.createLabel({      color:'#999',      text:'I am Window 1',      font:{fontSize:20,fontFamily:'Helvetica Neue'},      textAlign:'center',      width:'auto'  });     var button = Ti.UI.createButton({      title:'Email',      height:40  });  button.addEventListener('click', function(){      var emailDialog = Ti.UI.createEmailDialog();      emailDialog.open();  });     win1.add(label1);  win1.add(button);  //  // create controls tab and root window  //  var win2 = Titanium.UI.createWindow({        title:'Tab 2',      backgroundColor:'#fff'  });  var tab2 = Titanium.UI.createTab({        icon:'KS_nav_ui.png',      title:'Tab 2',      window:win2  });     var label2 = Titanium.UI.createLabel({      color:'#999',      text:'I am Window 2',      font:{fontSize:20,fontFamily:'Helvetica Neue'},      textAlign:'center',      width:'auto'  });     win2.add(label2);           //  //  add tabs  //  tabGroup.addTab(tab1);    tabGroup.addTab(tab2);          // open tab group  tabGroup.open();  ",Bug,Critical,Closed,"2012-02-13 07:20:59","2012-02-13 07:20:59",1
"The Titanium SDK ","Android: Ti.API - enable logging methods to accept either an array of strings or a string","h2. Problem    To bring parity with iOS to the [Titanium.API|http://developer.<USER>com/apidoc/mobile/latest/Titanium.API-module] logging methods, enable them to accept arrays of strings in addition to the existing string arguments.",Bug,Medium,Closed,"2012-02-10 18:56:37","2012-02-10 18:56:37",1
"The Titanium SDK ","iOS: Titanium.UI.WebView: iOS5: evalJS causes app freeze and deadlock warning","iOS 5.0 apps running SDK 1.9.0 beta freeze with deadlock warning:    [WARN] Timing out waiting on main thread. Possibly a deadlock?  in TiThreadPerformOnMainThread (TiBase.m:213)    Regression. Works in 1.8.1.    Steps to Reproduce:    1. Run WebViewTest project. Attached.    Expected Result:    App should display an alert indicating html javascript function call.    Actual Result:    App freeze with deadlock warning.    Note: Test case exists in titanium_mobile_tests_internal/FeatureTest/WebView/WebViewModule => TIMOB 4885",Bug,Critical,Closed,"2012-02-10 14:12:28","2012-02-10 14:12:28",0
"The Titanium SDK ","iOS: Status Bar disappears when video is closed in landscape/portrait mode","h5. Expected    When the video is closed in landscape/portrait mode, Status bar should be visible.    h5. Actual    Currently its not visible.    Below is attached the sample app.js, and screen shots to explain the issue.    h5. Test Code  ",Bug,High,Closed,"2012-02-09 17:25:32","2012-02-09 17:25:32",1
"The Titanium SDK ","iOS: httpClient file transfers appear to be cached in 1.8.0.1","I'm writing a file-syncing app which requires transfer certain files multiple times into folders to then display the resulting html. This means that some files - like css, js, icon images, etc. - get transferred multiple times. This worked like a charm on 1.7.5. When I upgraded to 1.8.0.1, the SDK now only transfers the file once. The call to httpClient.send appears to work - no error gets thrown, all the callbacks fire as expected - but the actual file that is requested never gets saved where it is told to save.    We're using the standard way of transferring files, where 'assetrowsresult' is the results from the database of the source and destination paths of files to be moved:    c.open('GET', assetrowsresult.fieldByName('source'));  c.file = Titanium.Filesystem.getFile(basepath(current_project) + assetrowsresult.fieldByName('dest'));  c.send();    Again, this worked fine in 1.7.5 ... so something changed. I'd be happy just knowing how to turn the cache off for transfers if such a switch exists.",Bug,Critical,Closed,"2012-01-25 21:00:34","2012-01-25 21:00:34",0
"The Titanium SDK ","iOS: image saved to filesystem using toImage() loses it's transparency","h2. Problem  Saving an image to the filesystem using toImage() method, does not keep the transparent property of the image    h2. Steps to reproduce  See attached code  {code:lang=javascript|title=app.js}  var window = Ti.UI.createWindow({      backgroundColor:'#ff0'  });    var view = Ti.UI.createImageView({      image:'KS_nav_ui.png',  // var view = Ti.UI.createView({      backgroundColor:'transparent',      borderWidth:2,      borderColor:'#f00',      width:100,      height:100,      top:10  });    window.add(view);    var image = Ti.Filesystem.getFile(Ti.Filesystem.applicationDataDirectory, 'tst.png');  image.write(view.toImage());    var img = Ti.UI.createImageView({      width:200,      height:200,      bottom:10,      image:image.nativePath  });    window.add(img);  window.open();  {code}    h2. Link  Ticket : http://support-admin.<USER>com/display/APP-785915",Bug,High,Closed,"2012-02-09 10:41:56","2012-02-09 10:41:56",1
"The Titanium SDK ","Android: opening a new window, background color is briefly displayed before objects are added to the screen","h2. Problem  When opening a new window, the background color of the new window is displayed for a brief moment and then objects are drawn and added to the screen. This is happening from 1.8.0.1 - it's not reproducible on 1.7.5.  Opening the new window on 1.8.0.1 with V8 is still overall faster than on 1.7.5 (around 4-5 times faster, something around 120ms against 500ms).    h2. Steps to reproduce  The behavior is noticeable especially on the emulator (since is less reactive).    {code:lang=javascript|title=app.js}  var win = Ti.UI.createWindow({    navBarHidden : true,    backgroundColor : 'green',  });    function createNewWin() {    var win2 = Ti.UI.createWindow({      navBarHidden : true,      backgroundColor : 'black',    });      for( i = 0; i < 20; i++) {      var view = Ti.UI.createView({        backgroundColor : 'blue',      });      win2.add(view);    }      return win2;  }    var button = Ti.UI.createButton({    title : 'Open New Win',    width : 150,    height : 60,    top : 20  });    win.add(button);    button.addEventListener('click', function() {    var win3 = createNewWin();    win3.open();  });    win.open();  {code}      h2. Link  Ticket related: http://support-admin.<USER>com/display/APP-175314",Bug,High,Closed,"2012-02-08 18:48:03","2012-02-08 18:48:03",3
"The Titanium SDK ","iOS: user should be able to run the app on device directly inside the Studio","User should be able to run the app directly on real iOS device from inside the Titanium Studio.  Current procedure involve creating a binary for iTunes and then use Xcode (set up with the correct provisioning profile and certificates) to actually run the app on the device, making it a long procedure.","New Feature",High,Closed,"2012-02-06 18:46:44","2012-02-06 18:46:44",5
"The Titanium SDK ","iOS: Titanium.UI.View: view with layout property set to horizontal or vertical does not display children","When the layout property of a View is set to 'vertical' or 'horizontal', children do not display. Works on Android.    Tested on Views and Windows using Labels, TextFields, and Buttons.    Steps to Reproduce:    1. Run Code:    {code:title=app.js}  var win = Ti.UI.createWindow({   backgroundColor:'red',   layout:'horizontal'  });    var left = Ti.UI.createLabel({   title:'Left',   backgroundColor:'blue',   color:'black',   width:'50%',   height:'100%'  });    var right = Ti.UI.createLabel({   title:'Right',   backgroundColor:'green',   color:'black',   width:'50%',   height:'100%'  });    win.add(left);  win.add(right);    win.open();  {code}    Expected Result:    There should be a blue bar and a green bar (two labels in a horizontal layout). Screenshot attached.    Actual Result:    Red background (only the window background). Screenshot attached.",Bug,High,Closed,"2012-02-06 18:27:26","2012-02-06 18:27:26",0
"The Titanium SDK ","Android: Invalid package names do not produce meaningful error messages.","If an invalid app id is created, Android compilation phase just gives a generic Error generating R.java from manifest error message. A meaningful error message should be displayed.    Example invalid app ids:  com  com.123  1com.com",Bug,Low,Closed,"2012-02-06 16:52:12","2012-02-06 16:52:12",5
"The Titanium SDK ","iOS: CommonJS require: undeclared variable referenced from module fails to generate error","Undeclared variables referenced from a module fail to generate an error. Android does generate the error. Screenshot attached.    The undeclared variable can then be used in further logic, such as adding it to a window. Screenshot attached.    If an undeclared variable is used in the module itself, there is an error.  If an undeclared variable is returned from an exports function-call, there is an error.  If an undeclared variable is defined as a return value in an exports function, but the function is never called, there is no error.  If an undeclared variable is returned from an exports function-call and assigned to a new variable outside the module, there is no error, and the variable can continue to be used.    Steps to Reproduce:    1. Run Code (also attached):    {code:title=app.js}  var undeclaredVar = require('Module').getUndeclaredVar();    Ti.UI.createWindow().add(undeclaredVar);      Expected Result:    Runtime error indicating undeclared variable.    Actual Result:    No runtime error.",Bug,Low,Closed,"2012-02-06 16:36:11","2012-02-06 16:36:11",2
"The Titanium SDK ","iOS: Titanium.UI.Button: touchmove event fails to fire","Button touchmove event fails to fire.    Steps to Reproduce:    1. Run code.    {code:title=app.js}  var win = Ti.UI.createWindow({backgroundColor:'white'});  var button = Ti.UI.createButton({width:'200',height:'200'});  button.addEventListener('touchmove',function(){   Ti.API.info('touchmove fired');  });  button.addEventListener('touchstart',function(){   Ti.API.info('touchstart fired');  });  button.addEventListener('touchend',function(){   Ti.API.info('touchend fired');  });  button.addEventListener('touchcancel',function(){   Ti.API.info('touchcancel fired');  });  button.addEventListener('click',function(){   Ti.API.info('click fired');  });  button.addEventListener('dblclick',function(){   Ti.API.info('dblclick fired');  });    win.add(button);  win.open();  {code}    2. Press button, move, and release.    Expected Result:    Console should output three event types: 'touchstart', 'touchmove', 'touchend'.    Actual Result:    No 'touchmove' is printed.",Bug,High,Closed,"2012-02-06 14:26:55","2012-02-06 14:26:55",0
"The Titanium SDK ","when using titanium create from command line to create a new ios module it fails to correctly configure titanium.xcconfig file for OSX lion","when using titanium create from command line to create a new ios module it fails to correctly configure titanium.xcconfig     The TITANIUM_SDK is incorrect for OSX lion it should have a ~ in front of the path.",Bug,Trivial,Closed,"2012-02-03 10:32:28","2012-02-03 10:32:28",1
"The Titanium SDK ","iOS - on modal window orientation misplaces children","h3. The Problem:  When the window changes orientation, if it's modal, it's children end up behind the nav bar.    h3. Code Sample:      h3. To Reproduce:  Run the code above in app.js and rotate the device/simulator    h3. Behavior:    - What happens: View with the label with text lalalala ends up under the navbar and invisible to the user  - What has to happen: View containing the label has to resize accordingly",Bug,High,Closed,"2012-01-31 15:08:53","2012-01-31 15:08:53",0.5
"The Titanium SDK ","iOS: Map Annotation Memory Leak","h4. PROBLEM DESCRIPTION  User added and removed annotations from the map, it was releasing the TiMapAnnotationProxy but not the TiMapPinAnnotationView. It kept them Living and continued to add to their live bytes instead of moving the old ones into Transitory.    h4. ACTUAL BEHAVIOR   TiMapPinAnnotationView is not being released.    h4. EXPECTED BEHAVIOR  TiMapPinAnnotationView should be released when not needed.    h4. TEST CASE      h4. COMMUNITY DISCUSSION  http://developer.<USER>com/question/131291/map-annotation-memory-leak  ",Bug,High,Closed,"2012-01-30 10:14:16","2012-01-30 10:14:16",8
"The Titanium SDK ","Tooling: api.jsca is generated with invalid xml tags resulting in content assist disparities","Using content assist, in the studio editor, Ti.Media.videoPlayer.repeatMode and other sdk properties have incomplete content assist property descriptions.    The api.jsca file in the sdk has invalid tags for these properties in 1.8.0.1 and 1.8.1. Screenshot attached.    The xml tags were correct and the properties were properly described in content assist using sdk 1.7.5. Screenshot attached.    Steps to Reproduce:    1. Open studio.  2. Create a new project.  3. Select sdk 1.8.0.1 or 1.8.1.  4. In the app.js file, type:    {code:title=app.js}    var videoPlayer = Ti.Media.createVideoPlayer();  videoPlayer    {code}    5. Open content assist. If it is not open by pressing cntrl + space.  6. Next to videoPlayer, type .repeatMode (e.g., videoPlayer.repeatMode)  7. Click on the content assist description for the property.    Expected Result:    Property description should be fully populated with descriptive elements (i.e., other properties).    Part of the description should read: 'Defaults to Titanium.Media.VIDEO_REPEAT_MODE_NONE.'    Actual Result:    There are holes in the description.    Part of the description reads: 'Defaults to .'",Bug,High,Closed,"2012-01-27 16:35:15","2012-01-27 16:35:15",1
"The Titanium SDK ","Android: Push Notification: Android 3.0+ is not getting notifications when the application has quit","Steps To Reproduce:  1. Run the attached application  2. Launch the application  3. Enable Push  4. Go to UrbanAirship and send a push notification to the APID  5. Force Quit the application  6. Send again    Actual:  The push is not received    Expected:  Should receive the push    Note:  Works on Nexus s (2.3.6)",Bug,High,Closed,"2012-01-26 10:37:48","2012-01-26 10:37:48",2
"The Titanium SDK ","Tooling: As a Ti documentation writer, I would like to have access to enhanced TDoc tools","Enhance TDoc2 tools to support the following functionality.    - Enhance documentation generators  - Support Code Snippets  - Support Modules  - Support Localization  ",Story,High,Open,"2012-01-26 09:12:41","2012-01-26 09:12:41",3
"The Titanium SDK ","Android: V8/Rhino: Animation: Setting animation on a lightweight window makes the window color go transparent","Steps To Reproduce:  1. Run the attached code:    2. Click Animate    Actual Result:  The window background color became transparent    Expected Result:  The window background color should stay black    Note:  Existed in 1.8.0.1 and works in 1.7.5",Bug,High,Closed,"2012-01-25 16:22:38","2012-01-25 16:22:38",2
"The Titanium SDK ","As a developer, I want to be able to pass arbitrary arguments to the Android emulator","This is a blocker issue for TISTUD-623.    When a run/debug configuration is created, we need the ability to pass additional command-line arguments to the android emulator. Specifically, the -scale argument in order to use skins whose full scale causes them to be larger than the screen you are running on. For example, I am using the Motorola MD860 skin for the Atrix 4G whose screen is 960 pixels high. The resulting emulator window is some 1200 pixels high but my screen is only 900 pixels high. If you run the AVD from the AVD Manager, it offers the option to run with a particular screen size which uses the -scale argument. We need the capability to do this in Studio. I would recommend simply adding an extensible option to specify any additional command line arguments. The standard Eclipse launch configurator allows this on the configuration's Target tab but that appears to be disabled in Studio.    I believe we are not allowed to pass arbitrary arguments to the emulator. I could not find a duplicate issue, but if one exists, please mark this as such.",Story,High,Closed,"2012-01-25 06:25:14","2012-01-25 06:25:14",1
"The Titanium SDK ","Android: Ti.Geolocation.locationServicesEnabled is always false","Ti.Geolocation.locationServicesEnabled always return false even when the Use wireless networks and Use GPS satellites are checked. alert('Please enable location services')  h4. Repro Steps    Run the below code in the android device    {code}    var win = Ti.UI.createWindow({     backgroundColor:'white'    });    if (Ti.Geolocation.locationServicesEnabled) {        //Ti.Geolocation.purpose = 'Get your current location';    } else {        alert('Please enable location services');    }    win.open();    {\code}  ",Bug,High,Closed,"2012-01-24 18:16:02","2012-01-24 18:16:02",0.5
"The Titanium SDK ","Tooling: titanium.py create does not add platform tiapp.xml tags as expected","When 'titanium.py create' is run from the command line, the created project does not contain platform tag information in tiapp.xml file, as would be expected.    Note: When the new project is imported into studio, the tags are added based on the presence of the platform-specific Resources sub-folder (i.e., Project/Resources/android). This seems unexpected, but this is how it works as of now.    Steps to Reproduce:    1. Run 'titanium.py create' from the terminal using the following arguments:        2. Inspect tiapp.xml in the new project folder.    Expected Result:    Deployment target tags would be present.        Actual Result:    No deployment targets exist.",Bug,Low,Closed,"2012-01-24 16:48:47","2012-01-24 16:48:47",5
"The Titanium SDK ","Android: Ti.Media.AudioPlayer.getUrl not exposed as method","Both getUrl, setUrl work on iOS, but only setUrl works on Android. I believe this is just a typo,  note missing @Kroll.method annotation:          @Kroll.getProperty      public String getUrl() {          return TiConvert.toString(getProperty(TiC.PROPERTY_URL));      }           @Kroll.setProperty @Kroll.method      public void setUrl(String url) {          if (url != null) {              setProperty(TiC.PROPERTY_URL, resolveUrl(null, TiConvert.toString(url)));          }  ",Bug,High,Closed,"2012-01-24 16:25:43","2012-01-24 16:25:43",0.5
"The Titanium SDK ","iOS: EXC_BAD_ACCESS (SIGSEGV) crash while parsing xml","EXC_BAD_ACCESS (SIGSEGV) crash while parsing xml.    Occurs 1 times out of 10.    Steps to Reproduce:    1. Create new project.  2. Replace app.js with attached app.js.  3. Run app.  4. Press 'load' until app crashes.    Expected Result:    App should not crash.    Actual Result:    App crashes. Crash logs attached.",Bug,High,Closed,"2012-01-23 12:20:25","2012-01-23 12:20:25",0.5
"The Titanium SDK ","Allow specification of arbitrary AVD in build/launch scripts","Related to TISTUD-998, right now in Studio you can select (some of) the properties of an AVD (Run->Run Configurations->Titanium Android Emulator) but this isn't configurable enough for some cases (although you can modify an AVD created by Studio in the {{android}} tools, as long as it has the right name). It would be nice to have the feature to select a pre-existing AVD in the run configurations, so that you can use an existing AVD without having Studio create a new one for you.    It appears to require build script modifications allowing for the specification of an arbitrary AVD.","New Feature",High,Closed,"2012-01-23 11:58:02","2012-01-23 11:58:02",2
"The Titanium SDK ","Ti API: Label, TextArea support add method on iOS only","See related Q&A Item:    http://developer.<USER>com/question/130925/about-textaress-methodadd    Need to define which controls can/should accept children and which cannot or should not.",Bug,High,Closed,"2012-01-20 14:04:33","2012-01-20 14:04:33",1
"The Titanium SDK ","iOS: Change Ti.Network.BonjourService/BonjourBrowser to take a Ti.Network.Socket.TCP object","In order to correctly deprecate (and remove) `Ti.Network.TCPSocket` which has been deprecated since the introduction of better sockets in 1.7.0, without disrupting the ability to use these features, the Bonjour code needs to be updated to take `Ti.Network.Socket.TCP` objects. This should not be a difficult task, although we will need to make developers aware of the change prior to release.",Bug,Low,Closed,"2012-01-20 10:15:03","2012-01-20 10:15:03",8
"The Titanium SDK ","Android: JSS with import and js with include files not working","h3. Actual behavior  Working with an app.js with an include an app.jss with a require, and adding labels to the window, those are not getting the styles dictated by the jss files    h3. Expected behavior  Jss working as used to work on 1.7.6 with the same structure    h3. Files  {code:title=app.js|borderStyle=solid}  var gt = {};  gt.ui={};      Ti.include('/incs/incs.js');    gt.ui.makeWin =  function(){      var win1 = Titanium.UI.createWindow({         backgroundColor:'#fff',    navBarHidden:true   });      var label1 = gt.ui.makeLabel('label1');     var label2 = gt.ui.makeLabel('label2');     win1.add(label1);   win1.add(label2);   return win1;  };      var win = gt.ui.makeWin();  win.open();       {code:title=incs/incs.js|borderStyle=solid}  Ti.API.info('Including the <USER>file');  gt.ui.makeLabel =  function(id) {      var label = Titanium.UI.createLabel({    id:id,    className:'button'   });      return label;  };  ",Bug,Trivial,Closed,"2012-01-19 13:49:19","2012-01-19 13:49:19",5
"The Titanium SDK ","Report classes used during building for device or production","A useful data point is to find out what classes and modules fall under heavy use and which don't. During the build <USER>for iOS, this information is indirectly gleaned in generating USE_TI_ compiler flags. If Titanium Studio could relay this information back to the cloud, we could have a better idea on what classes we could safely remove or which classes has the best ROI in terms of code fixes.","New Feature",Medium,Closed,"2012-01-17 17:59:26","2012-01-17 17:59:26",5
"The Titanium SDK ","Android: Gesture - orientation change fires on app start when initial orientation is landscape","h2. Problem    If initial orientation of the emulator is landscape, two orientationchange events are fired when re-orienting to portrait. Thereafter, it works as expected.    The same does not happen when initial orientation is portrait.    h2. Test case    * set emulator to landscape (CTRL+F11)  * launch app with code below    {code:lang=javascript|title=app.js}  var win = Ti.UI.createWindow({    title: 'Rotate device to test',    backgroundColor: 'white',    orientationModes: [ Titanium.UI.PORTRAIT, Titanium.UI.UPSIDE_PORTRAIT, Titanium.UI.LANDSCAPE_LEFT, Titanium.UI.LANDSCAPE_RIGHT ],    fullscreen: false, // same results regardless of whether its a heavyweight window    exitOnClose: true  });    Ti.Gesture.addEventListener('orientationchange',function(e){    Titanium.API.info(orientation changed =  + Ti.Gesture.orientation + , is portrait?  + e.source.isPortrait() + , is landscape?  + e.source.isLandscape());  });  win.open();    ",Bug,High,Closed,"2012-01-17 10:58:26","2012-01-17 10:58:26",1
"The Titanium SDK ","Android: Intent - getData(), getAction(), and getType() do not work","h2. Problem    When deciding how an app should handle an incoming Android Intent, knowing the type, action, and data values that were sent with the Intent are critical. If your app only handles one very specific Intent, this is OK, but if you have an app that handles images, URIs, video,, etc... you need to know these values.     Right now when an Intent is received via Intent Filter in Titanium, the following lists the values/errors you will get for the data, type, and action functions and properties of an Intent:    * {{getData()}} always equals {{null}}   * {{getType()}} and {{getAction()}} always throw this exception, despite the fact that logic and documentation dictates that these functions do not require arguments:  {code}Uncaught Error: Requires property name as first argument{code}  * The {{data}} property always returns {{null}}  * The {{action}} and {{type}} properties always return {{undefined}}    h2. Proposed Solution    The above listed functions and properties need to return the appropriate values for {{data}}, {{type}}, and {{action}} so that developers will know what to do with the Android Intent that they are receiving. Like I said, if you are handling only one type of data as dictated by your Intent Filter, you are OK. But if you plan to handle images, video, etc... and you need to read them from Ti.Android.EXTRA_STREAM, you have no way of knowing which type of Intent you are receiving.    Also, I believe the implementation of {{getAction()}} and {{getType()}} need to change so that they do not require a parameter.    h2. Test Case    {code:javascript}  var win = Ti.UI.createWindow({      backgroundColor: '#fff',      fullscreen: false,      exitOnClose: true  });  win.addEventListener('open', function(e) {      var intent = Ti.Android.currentActivity.getIntent();      var iname = Ti.Android.EXTRA_STREAM;         if (intent && intent.hasExtra(iname)) {       Ti.API.info(intent.getAction());       Ti.API.info(intent.getData());       Ti.API.info(intent.getType());      } else {          Ti.API.info('No extra named ' + iname + ' found in Intent');      }  });  win.open();  {code}    It will also be necessary to add an intent filter to a custom AndroidManifest.xml to get this test case to receive intents. The only below needs to go in the main activity and will receive all image share intents. You can easily trigger an image share intent by long clicking on an image in the android gallery then select 'share' from the intent list. Then just select your test case app from the list.    {code:xml}  <intent-filter>      <action android:name=android.intent.action.SEND />      <category android:name=android.intent.category.DEFAULT />      <data android:mimeType=image/* />  </intent-filter>  {code}",Bug,High,Closed,"2012-01-17 06:53:32","2012-01-17 06:53:32",0.5
"The Titanium SDK ","iOS - Window Proxy does not get release if animated with callback","h3. The Problem:  A window that has some type of animation with a callback function leaks.    h3. Test case  Open instruments and look for proxies while opening and closing the window in the following code sample:    h3. Code  ",Bug,Critical,Closed,"2012-01-16 18:50:39","2012-01-16 18:50:39",21
"The Titanium SDK ","Android: evalJS and evalFile methods deprecated in TiContext","h3.Issue  One of the General changes while porting modules to our current SDK 1.8.0.1 was remove TiContext.    h6.Customer's remarks  Inside my Android module, I have to execute some JavaScript statements in the current context. I was using TiContext to do that in pre-1.8.0.1 versions of SDK. Since TiContext is deprecated where in 1.8.0.1 Android module SDK can I find evalJS() and evalFile() methods?    h6.General changes      h6.evalJS and evalFile methods migrated  {code:title=TiContext.java}   public Object evalFile(String filename)    throws IOException   {    return evalFile(filename, null, -1);   }     public Object evalJS(String src)   {    if (krollBridge == null)    {     Log.e(LCAT,on evalJS, evaluator is null and shouldn't be);    }    return krollBridge.evalJS(src);   }  {code}    h6.References  https://wiki.<USER>org/display/guides/Android+Module+Porting+Guide+for+1.8.0.1  ",Bug,Critical,Closed,"2012-01-16 15:35:17","2012-01-16 15:35:17",3
"The Titanium SDK ","iOS: Memory Leak: Objects created in a Ti.UI.tabGroup are not released when the tabGroup is closed","h3. Problem    Objects created in a Ti.UI.tabGroup are not released when the tabGroup is closed.    h3. Reproducible steps:     1. Run the code below.  2. Use the instruments application to monitor the memory  3. Click on Open tabgroup button  4. Click on close button    Please see TiUITabproxy on the category. It is never released from the memory.      h3. Expected behavior:  Customer wants to release the memory of a tab.    h3. Tested with the next specs:    Simulator    iPhone 4  Version of the device: 5.0.1    Titanium Studio, build: 1.0.8.201112291658  Titanium SDK: 1.8.0.1     h3.More info:  Please see the video attached.    h3. Code:  {Code}  function createTabGroup()   {   var colors = ['#ff9966', '#99ff66', '#6699ff', '#66ffff', '#ffff66'];     function openWindowOnStack(i)    {    var win = Ti.UI.createWindow(    {     title : 'Window ' + i,     backgroundColor : colors[i]    });        win.addEventListener('open', function(evt)     {     Ti.API.info('Opened: ' + evt.source.title);     if(i < 4)      {      setTimeout(function()       {       openWindowOnStack(i + 1);      }, 500);     }    });        win.addEventListener('close', function(evt)     {     Ti.API.info('Closed: ' + evt.source.title);     trackClosedWindow(tab1, evt.source);    });        openInTab(tab1, win);   }     var navButton = Ti.UI.createButton(   {    title : 'Open Windows'   });     var outer = Ti.UI.createWindow(   {    title : 'Root Window',    backgroundColor : '#d0d0d0',    rightNavButton : navButton   });     outer.rightNavButton.addEventListener('click', function()    {    openWindowOnStack(0);   });      function trackClosedWindow(thistab, window)    {    var windows = thistab.windows || [];        for(var w = windows.length - 1; w >= 0; w--)     {     if(windows[w] == window)      {      windows[w] = null;      windows.splice(w, 1);      break;     }    }        thistab.windows = windows;   }     function closeAllInTab(thistab)    {    var windows = thistab.windows || [];        for(var w = 0; w < windows.length; w++)     {     windows[w].close();     windows[w] = null;    }        thistab.windows = windows = [];   }     function openInTab(thistab, window)    {    var windows = thistab.windows || [];    windows.push(window);    thistab.open(window);    thistab.windows = windows;   }     var tabGroup = Ti.UI.createTabGroup();      var tab1 = Ti.UI.createTab(   {    window : outer,    title : 'Touch Me'   });      tabGroup.addTab(tab1);     var button2 = Ti.UI.createButton(   {    title : 'close',    height : 35,    width : 200   });      outer.add(button2);      button2.addEventListener('click', function(e)    {      outer.remove(button2);    outer.rightNavButton = null;    button2 = null;    navButton = null;      closeAllInTab(tab1);    tabGroup.removeTab(tab1);    tab1.window = null;    tab1 = null;      tabGroup.tabs = null;    tabGroup.close();    tabGroup = null;      outer.close();    outer = null;      Ti.API.info('Closed tab group');   });      return tabGroup;    }    var win1 = Ti.UI.createWindow(  {   backgroundColor : '#fff',   title : Home  });    var button1 = Ti.UI.createButton(  {   title : 'Open tabgroup',   height : 35,   width : 200  });    button1.addEventListener('click', function(e)   {   var tabGroup1 = createTabGroup();   tabGroup1.open();   Ti.API.info('Opened tab group');  });    win1.add(button1);    win1.open();    {Code}    h3. Helpdesk  APP-443889               ",Bug,High,Closed,"2012-01-12 17:09:44","2012-01-12 17:09:44",1
"The Titanium SDK ","Android: KitchenSink - Platform > Sockets > Connecting Socket - Connect without setting field causes crash","In KitchenSink, Platform > Sockets > Connecting Socket, pressing Connect when the module first loads causes crash.    This is not a new behavior, and is a general Android issue.    Steps to Reproduce:    1. Launch KitchenSink.  2. Run Platform > Sockets > Connecting Socket.  3. Press 'Connect'.    Expected Result:    Runtime error.    Actual Result:    Crash.",Bug,High,Closed,"2012-01-12 16:00:11","2012-01-12 16:00:11",0.5
"The Titanium SDK ","Android: Tab icons are not being shown when are in density folders","Problem: Images in density folders will not show if you re-install the app without rebuilding AND you didn't set ti.android.fastdev property to false. This property is true by default. Note that this bug affect Emulators and Devices.    Steps to reproduce:  1. Download and import the attached project, change line 49 in app.js in the test project to 'KS_nav_views.png' (Since the other image isn't included in the proj)  2. Launch emulator/device (uninstall the app if already installed).  3. Install and run the app  4. Observe the tab1 image is showing up correctly.  5. Now uninstall the app from emulator/device, and reinstall/run the app via Titanium Studio's play button. (DO NOT rebuild).        ",Bug,Medium,Closed,"2012-01-12 00:30:39","2012-01-12 00:30:39",2
"The Titanium SDK ","MobileWeb: Ti.Blob implementation","Need to implement Ti.Blob. Extends Evented. Need to investigate binary data support in browsers. Might try using canvas?    Be sure to also test setting the data property of a WebView.",Bug,Low,Closed,"2012-01-10 18:33:15","2012-01-10 18:33:15",3
"The Titanium SDK ","iOS: CommonJS - JavaScript module require()d by a url-based Window can't see Ti.Network","h2. Problem  A CommonJS (JavaScript) module which is require()d by a url-based Window (a window created with the 'url' property) from inside of that window's 'open' event tries to access Ti.Network.online, but instead a runtime error is produced:    Please see the attached project (code repeated at the bottom of this description).  It's a 5-step <USER>to expose this error.  The attached code has been minimized down from an actual project, so while it may look weird and seem to contain unnecessary steps, keep in mind that this is an excerpt from a real project with a real problem.  I have reduced it down to the bare minimum necessary to reproduce the problem.    The normal workaround of adding a reference to Ti.Network in app.js does *not work* in this case.    Another problem that is evident in the example:  - In app.js, you shouldn't have to reference Ti.App to get past the use of Ti.App in deep.js, but without that line in app.js, you get the same undefined error on Ti.App.    The problem does *not occur on Android*...the app works fine.    h2. Steps to Reproduce  - Unzip the attached project and run it to the iPhone simulator.  - Look at the console log.  - Right after ** trying Network, you will see this error      h2. Expected Result  The app should run without error and give the console message ** Network is there!.    h2. Testcase Code  {code:lang=javascript|title=app.js}  var Sequencer=require('Sequencer');  Sequencer.SetML('deep',require('deep'));    Ti.App; // without this here, the Ti.App in deep.js crashes.  Ti.Network; // this workaround doesn't work.    var w1=Ti.UI.createWindow({url:'win1.js'});  w1.Sequencer=Sequencer;  w1.open();    {code:title=deep.js}  exports.RegisterWindowLoadEvent=function(TheWindow,OnLoadEvent)  {    Ti.App.CurrentWindow=TheWindow;    Ti.App.CurrentWindow.addEventListener('open',OnLoadEvent);  };      {code:title=win2.js}  Ti.API.info('** trying Network');    if (Ti.Network.online)      Ti.API.info('** Network is there!');  Ti.API.info('** done trying Network');  {code}  ",Bug,Low,Closed,"2012-01-06 10:39:56","2012-01-06 10:39:56",0
"The Titanium SDK ","Tooling: iOS - Xcode build fails for project using a module, when directory exists in the Resources directory with same name as project","h2. Problem  Xcode build fails for project when directory exists in the Resources directory with same name as project.    This issue *only* occurs for projects with modules.    h2. Discussion and Workaround    Q&A: [http://developer.<USER>com/question/119869/ios]    h2. Steps to reproduce    1. Create a Titanium mobile project named NameConflict  2. Create a directory inside Resources also named NameConflict  3. Create a JS file inside of the newly created directory  4. Add a module to the tiapp.xml file and place the module inside the project  5. Try to build... in Xcode 3.2.6 you'll get a SystemExit: 1 and in Xcode 4.2 you'll get a SystemExit: 65",Bug,Trivial,Closed,"2011-10-21 20:21:17","2011-10-21 20:21:17",5
"The Titanium SDK ","Tooling: builder.py + iOS  - current directory alias passed as project argument causes i18n directory to be omitted from package","h2. Problem    Passing a dot to denote the current directory (and possibly all relative paths) as an argument to {{builder.py}} causes the {{i18n/}} directory in the root of the project to be omitted from the package. It should work with both relative and absolute project paths    h2. Test case    The following (using an absolute path as the third argument) builds the project correctly for distribution:          The following (using dot as the third argument) causes the {{i18n/}} folder in the root of the project to be omitted from the package.         h2. Discussions    Helpdesk: [APP-473421|http://support.<USER>com/tickets/APP-473421/tickets]    h2. Workaround    Use an absolute path  ",Bug,Low,Closed,"2011-11-03 10:29:50","2011-11-03 10:29:50",5
"The Titanium SDK ","Tooling: standardize the location of build.log","Currently the {{build.log}} file is in the project root for Android and {{project/build/iphone/build/}} for iPhone. Could we standardize them, by creating them in, for example, the {{build}} folder, and naming them {{<PLATFORM>-build.log}}?    There may be a better location and naming convention, but hopefully you can see that this would be cleaner and more intuitive than the current situation.      ","New Feature",Low,Closed,"2011-12-31 07:40:35","2011-12-31 07:40:35",5
"The Titanium SDK ","Android: Network - HTTPClient cannot retrieve non-ascii data","h2. Problem    When loading some JSON file (UFT-8) from the web and displaying the data, the Non-Ascii-chars text is garbled.    See attached screenshot of this problem on 1.7.2    Note that this works fine on iPhone.    The Kitchen Sink Demo of XHR has the same problem. It works on the iPhone but fails on Android.    h2. Test case    {code:lang=javascript|title=app.js}  Ti.UI.setBackgroundColor('#ddd');   var win = Ti.UI.createWindow({});    var loadDataButton = Ti.UI.createButton({    title: Let's load UTF-8 from the web!, width: 260, top: 50, height: 40  });  win.add(loadDataButton);  loadDataButton.addEventListener('click', function() {    var test1 = loadFromWeb(http://crossplattformvergleich.dnsalias.org/test.js);  /* file contains in UTF8: { result : áäüÖßÉ? }  and a comment */    var test2 = loadFromWeb(http://crossplattformvergleich.dnsalias.org/test2.js);  /* this is a 36-byte file. Appears as 0 bytes on android */  });    function loadFromWeb(url) {    var asyncRequest = Ti.Network.createHTTPClient();    asyncRequest.timeout = 30*1000;    asyncRequest.open(GET, url);     asyncRequest.onload = loadCallback;    asyncRequest.send();  }    function loadCallback() {    alert(this.responseText);  }    win.open();  {code}    h2. Discussions    Q&A: [problem fetching uft-8 content on android|http://developer.<USER>com/question/126712/problem-fetching-uft-8-content-on-android#comment-101538]  ",Bug,Medium,Closed,"2011-10-23 13:15:03","2011-10-23 13:15:03",2
"The Titanium SDK ","Tooling: Android build process requires Google APIs even if Ti.Map.createView only occurs in comments","h2. Problem    For a Titanium mobile project on Android, if Titanium sees that you're using a Ti.Map.createView in your project, running on the emulator will fail unless your run configuration indicates use of one of the Google APIs Android API.  I assume it is scanning the source js files for this.  That's fine.    The problem is that if the only place you have the text Ti.Map.createView is in a comment (// comment), Titanium does the same thing, and fails to install with the message, {{Package com.testing.testing9 requires unavailable shared library com.google.android.maps; failing!}}.  I have to think that there are other things like that too.    Titanium's build <USER>should not detect things like this that are in comments, thus triggering the Google APIs requirement.    I do not know if this affects iOS as well.    h2. Test case    {code:lang=javascript|title=app.js}  var win = Ti.UI.createWindow({    layout:'vertical',    exitOnClose:true,    navBarHidden:true  });  var label = Ti.UI.createLabel({    color:'white',    text:'Hello World',    width:'auto'  });  win.add(label);    // some day add a Ti.Map.createView to this    win.open();      403          AndroidRuntime  D  >>>>>>>>>>>>>> AndroidRuntime START <<<<<<<<<<<<<<    403          AndroidRuntime  D  CheckJNI is ON    403          AndroidRuntime  D  --- registering native functions ---     87           PackageParser  D  Scanning package: /data/app/vmdl28961.tmp     87          PackageManager  D  Scanning package com.testing.testing9     87          PackageManager  E  Package com.testing.testing9 requires unavailable shared library com.google.android.maps; failing!     87          PackageManager  W  Package couldn't be installed in /data/app/com.testing.testing9-1.apk    403          AndroidRuntime  D  Shutting down VM    403          AndroidRuntime  I  NOTE: attach of thread 'Binder Thread #3' failed  {code}  ",Bug,Low,Closed,"2011-11-14 11:46:53","2011-11-14 11:46:53",3
"The Titanium SDK ","Android: Ti should include only the used features/libs into a new app","h4. PROBLEM DESCRIPTION  For iOS, when you create a new mobile project in Titanium Studio and run it on device, the ipa file it generates is well over 4MB.    h4. STEPS TO REPRODUCE  1. Create new mobile project  2. Compile it to device  3. Check the size of the app.    h4. ACTUAL RESULTS  App bigger than 4MB, even if it's an almost empty app.    h4. EXPECTED RESULTS  Ti only adding the needed functionality, according to the namespaces used in the app.     ","New Feature",High,Closed,"2011-12-22 10:40:21","2011-12-22 10:40:21",3
"The Titanium SDK ","APIDoc: docgen.py with --colorize flag is colorizing inline code spans","When invoked with the --colorize flag, docgen is invoking the colorizer on anything with a <code> tag, not just code samples.    If doc includes phrases like: the <code>Titanium.UI</code> module the Titanium.UI portion is treated as a code sample, broken out into a <pre> block and colorized. This is not correct.    The current web app is doing some colorizing, but if you compare the 1.7.5 docs with the 1.8.0.1RC1 docs (created without --colorize) you can see the results are not the same:    http://developer.<USER>com/apidoc/mobile/1.8.0.1.RC2/Titanium.UI.Window-object  http://developer.<USER>com/apidoc/mobile/latest/Titanium.UI.Window-object  ",Bug,Low,Closed,"2011-12-19 15:36:06","2011-12-19 15:36:06",1
"The Titanium SDK ","Android: ICS: anyDensity=false in manifest ruins layout & scaling","h2. Summary    Whenever you build any app in Titanium Mobile for Android for the Galaxy Nexus (Android 4.0) while *Force GPU rendering* is enabled in the developer options, using         The formatting and scaling are thrown off entirely, as shown in the attached image file. Removing *anyDensity=false* or disabling gpu rendering resolves the issue, but requires the developer to use 'dp' notation everywhere even if they don't plan to support multiple densities.    h2. basic code to reproduce        With *anyDensity=false* in the tiapp.xml android manifest, this will generate the attached screenshot on a Galaxy nexus running 4.0. If *anyDensity=false* is removed from the manifest, you will get the expected white background covering the whole screen for the window.",Bug,Medium,Closed,"2011-12-19 13:47:11","2011-12-19 13:47:11",1
"The Titanium SDK ","iOS: Disappearing events in views/elements nested in ScrollViews","h4. PROBLEM DESCRIPTION  If you have a view inside a scrollview with the property vertical, you will lose the events in the nested views/elements.     h4. STEPS TO REPRODUCE  1. Create a new mobile project  2. Paste the code below into app.js  3. Singletap on the label or the scroll.    h4. ACTUAL RESULTS  The singletap event is not fired.    h4. EXPECTED RESULTS  Singletap event should be fired.     h4. CODE    {code:title=app.js|borderStyle=solid}  var win = Ti.UI.createWindow({      backgroundColor:'white',      borderColor:    'black',      borderWidth:    1,      width:      '100%',      height:     '100%',      navBarHidden:   true  });  var scrollView = Ti.UI.createScrollView({      layout:     'vertical',      height:     '100%',      contentWidth:   'auto',      contentHeight:  'auto',      showVerticalScrollIndicator: true,      touchEnabled:   true  });  var textLabel = Ti.UI.createLabel({      color:      'black',      text:       Tab here to fire the singletap event!,      textAlign:  'left',      left:       6,      right:      6,      top:        6,      height:     'auto',      touchEnabled:   false  });  scrollView.add(textLabel);  win.addEventListener('singletap', function(){      Ti.API.info('singletap event fired!');  });  win.add(scrollView);  win.open();    {code}",Bug,Low,Resolved,"2011-12-15 15:55:58","2011-12-15 15:55:58",0
"The Titanium SDK ","Sort Rows in the TableView","PROBLEM DESCRIPTION  Customer has a TableView, with different elements like a Name and Distance to certain point. On an update of certain criteria, like GPS, or price, would be nice to start an event that will sort and redraw the rows in the TableView, in an automatic fashion.     ","New Feature",Low,Closed,"2011-12-15 15:36:04","2011-12-15 15:36:04",0
"The Titanium SDK ","Android: Allow users to specify Default.jpg in place of Default.png ","h6.Feature request  Establish the way to choose which image format should be used as splash image.     i.e. Use JPEG image rather than PNG image.    h6.Associated HD ticket  APP-493615","New Feature",Trivial,Closed,"2011-12-14 13:49:51","2011-12-14 13:49:51",3
"The Titanium SDK ","Android: building 3rd party module fails if lib directory isn't present","Building a 3rd party module fails if the lib directory is not present.  Simple work around for this is to just create the lib directory but the build script should be updated to not require this.",Bug,Low,Closed,"2011-12-12 17:48:05","2011-12-12 17:48:05",5
"The Titanium SDK ","TiAPI: deployType - Add a deployType flag for modules","In line with TIMOB-6513, it has been requested that developers can include modules only for development","New Feature",Low,Closed,"2011-12-08 08:17:29","2011-12-08 08:17:29",5
"The Titanium SDK ","Android: Implement API Coverage for V8","We need to re-implement our coverage report data for the new V8 runtime","New Feature",High,Closed,"2011-12-07 11:18:35","2011-12-07 11:18:35",5
"The Titanium SDK ","iOS: Titanium.Media.takeScreenshot fails to orient captured image to reflect hardware orientation","h4. Expected Behavior:  Take an horizontal screenShot and attach it to an email and the image attached goes horizontal too, or save the screenshot on the Photo Gallery and save it horizontal too.    h4. Actual Behavior:  The image saves and attach to the email vertically, even if i create a matrix transformation and rotate this one, if i add to the window the image rotated looks good, but if i save to the photo gallery or attach it to an email, looks vertical again    h4. Test Case:   ",Bug,High,Closed,"2011-12-06 16:45:55","2011-12-06 16:45:55",3
"The Titanium SDK ","iOS:JavaScript Object is incorrectly garbage collected.","Javescript object has been incorrectly garbage collected in some case.    h4. Repro Steps.  1. Build a project based on the following code snippet and run the project.  2. Touch the first row textfield then continuously click the next buttons on the keyboardToolbar for more than 4 times.    Expected Result: You should be able to move the focus to the next textfield by clicking the next button.  Actual Result: The buttons on the toolbar get frozen and you can not switch the focus.        h4. Workaround Method  Define an empty callback function in the blur eventlistener to prevent the inputTextField from being GCed.",Bug,Critical,Closed,"2011-12-05 14:49:29","2011-12-05 14:49:29",0
"The Titanium SDK ","iOS : TableView - When running QTS on an iOS device 5.0+, after finishing a test and navigating back to the main list of tests, one cannot run any other tests without terminating the app","Steps to reproduce:    Grab the QTS app from <EMAIL>:<USER>titanium_mobile_tests_internal.git    1. Launch the app on an iOS device running iOS 5+  2. Once the app is running, press any table view row (you don't have to run the test)  3. Navigate back to the main table view with all the tests  4. Press a new table view row    Expected result:  Able to run tests one after the other    Actual result:  Pressing the new table view row doesn't launch any new tests",Bug,High,Closed,"2011-12-02 13:53:52","2011-12-02 13:53:52",0
"The Titanium SDK ","Android: Build should accept an alias password","The ADT supports packaging an apk using a specific keystore/password and a key/password. It appears that we require both the keystore and alias passwords to be the same. When I run the builder.py script using the correct keystore password, but use a alias with a different password, the script hangs.",Bug,High,Closed,"2011-12-01 15:10:11","2011-12-01 15:10:11",3
"The Titanium SDK ","iOS: Update jscore to iOS 5.0 version (JSCore-903)","Ticket for tracking the update of JSCore to the version shipping with iOS 5.0 (JSCore-903) and documenting the <USER>",Bug,Critical,Closed,"2011-11-23 11:43:05","2011-11-23 11:43:05",3
"The Titanium SDK ","Android (and mobileweb): Move simplejson and mako out of Android-specific folders to make them generally available","Our Mobile Web team needs simplejson, and it's packaged under support/android.  There shouldn't be a need for mobileweb to depend on android (i.e., if someone builds the sdk with {{scons mobileweb=true}} they won't even get android.)",Story,High,Closed,"2011-11-22 18:21:43","2011-11-22 18:21:43",0
"The Titanium SDK ","Android: Animations provided to Window.open() and close() on Lightweight windows aren't being applied","animation properties or proxy given to open() or close() methods on a LW window are not supported currently in 1.8.    FROM DUPLICATE TIMOB-11790:    Note: Heavyweight windows are addressed in TIMOB-10302.    h3. Issue    Animations on opening a lightweight window are not working.     h3. Steps to Reproduce    1. Run the sample code below        2. No animation occurs.  The new window is stuck at position 320.    ","New Feature",High,Closed,"2011-11-20 23:43:13","2011-11-20 23:43:13",3
"The Titanium SDK ","iOS: Blurring Textfield in Modal Window Doesn't Dismiss Keyboard","When using the MODAL_PRESENTATION_FORMSHEET modal style, iOS by default does not dismiss the keyboard even when text fields are blurred. iOS 4.3 and later allows us to override this, but this property is not currently exposed.    This will be an iOS-only property on the Ti.UI.Window class, and will not apply to Android.    In the mean time, MODAL_PRESENTATION_PAGESHEET is perfectly sufficient.    (Not a bug, but leaving old comments)    h1. Problem  When blurring a text field in a modal window, the keyboard doesn't go away.    h2. Reproduction  Drop the following in an app.js, and click in the text field. It automatically blurs itself after gaining focus. If you change modal: true to modal: false, the keyboard will properly hide itself.    {code:title=app.js}  var win = Ti.UI.createWindow({      backgroundColor: '#fff'  });    var textField = Ti.UI.createTextField({      value: '1. Touch Me',      height: 34, top: 10, left: 10, right: 10,      borderStyle: Ti.UI.INPUT_BORDERSTYLE_ROUNDED  });  textField.addEventListener('focus', function () {      Ti.API.info('blurring');      textField.blur();      Ti.API.info('blurred');  });  win.add(textField);    win.open({      modal: true,      modalStyle: Ti.UI.iPhone.MODAL_PRESENTATION_FORMSHEET  });  {code}","New Feature",High,Closed,"2011-11-08 09:04:10","2011-11-08 09:04:10",5
"The Titanium SDK ","Android: Ti.App.Properties - Cannot retrieve property value set in tiapp.xml ","1. Include the following code into app.js:    Titanium.UI.setBackgroundColor('white');  var win = Titanium.UI.createWindow();  var text = '' + Ti.App.Properties.getString('appstate');  alert(text);  win.open();    2. Add the following line to tiapp.xml:  <property name=appstate type=string>DEV</property>    3. Run the app for Android  Result: See null in the alert dialog    Expected: Should see DEV in the alert dialog    Note: This bug is already fixed for iOS -> http://jira.<USER>org/browse/TIMOB-4696",Bug,High,Closed,"2011-11-07 11:36:09","2011-11-07 11:36:09",0.5
"The Titanium SDK ","Android: Modify ScrollableView.removeView() to support integer indexes","h1. Feature  On iOS, ScrollableView's removeView method accepts either a view or an index to a view. Android only supports passing in a view.    h2. Solution  We need to either remove the undocumented feature from iOS, or add it to Android and to the documentation.    h2. How To Reproduce  Drop the following in an app.js. If you get a modal error screen or an error in the log, the feature is not present. If you don't, then everything is working as it should.    {code:title=app.js}  Ti.UI.createScrollableView({      views: [ Ti.UI.createView() ]  }).removeView(0);  {code}",Improvement,Low,Closed,"2011-11-04 12:48:25","2011-11-04 12:48:25",1
"The Titanium SDK ","Android: Button's image attribute behaves the same as the backgroundImage attribute","h4.Problem  The button's image attribute does not work as described in documentation the image to display on the button to the left of the title. Image scales to fill the entire button background.    h6.Titanium API - Image property  http://developer.<USER>com/apidoc/mobile/latest/Titanium.UI.Button-object    h6.Tested on  Android Emulator v2.2 & Android LG Ally device v2.2.1    h6.Repro sequence  {code:title=app.js}  var win1 = Titanium.UI.createWindow({        title:'Win 1',      backgroundColor:'#fff'  });    var button = Titanium.UI.createButton({   top: 60,   title : 'Hello',   width : '140',   height : '40',   //backgroundImage : 'button.png',   image: 'button.png',   //backgroundLeftCap:12,   //backgroundTopCap:12,   //textAlign: Titanium.UI.TEXT_ALIGNMENT_RIGHT  });    win1.add(button);    win1.open();  {code}    h6.Associated HD ticket  APP-379158",Bug,Trivial,Closed,"2011-11-04 09:12:55","2011-11-04 09:12:55",2
"The Titanium SDK ","iOS 7: Setting a tableview row header incorrectly inserts a blank headerTitle","h3.Problem  Setting a row's header property as '' now inserts a blank headerTitle. This causes a much bigger gap than usual in grouped tableviews (see attachment).  Problem exists only with iOS5. On iOS4 everything works as expected and there is no extra gap.    h3.Reproducible Steps  1. Execute the test case    h3.Sample Code      h3.Associated HelpDesk Ticket  http://appc.me/c/APP-139179",Bug,Low,Resolved,"2011-10-28 12:09:03","2011-10-28 12:09:03",1
"The Titanium SDK ","iOS: needs to handle thrown exceptions (revisiting)","Bad news! iOS does not forward exceptions properly to the JSCore system, meaning that unhandled exceptions result in crashes. What we need to do is catch exceptions from Kroll invokes (and potentially on other threads via the uncaught exception handler...) and forward them to the JSCore system so that they can be caught on the user side (although if they're uncaught, we need to figure out what to do about that, and how JS responds.)    Could be handed off.",Bug,Medium,Closed,"2011-10-27 17:57:53","2011-10-27 17:57:53",0
"The Titanium SDK ","iOS: Add support for adding custom URL schemes to Info.plist","On some of my projects, I needed to add additional URL schemes to my iOS applications. Right now that involves manually editing the build/iphone/Info.plist file.    With this change I can just make a new property on tiapp.xml and it automatically adds the custom url scheme on the next build.    Github push request [https://github.com/<USER>titanium_mobile/pull/591]","New Feature",Low,Closed,"2011-10-26 09:22:05","2011-10-26 09:22:05",5
"The Titanium SDK ","iOS: Add Android Style Picker On iPhone","Titanium currently allows the option to force Android to use an iOS-style spinner picker. Would it be possible to also allow an option to force iOS to use an Android-style flat picker?    An example use-case for this is when wanting a picker mechanism as part of the layout of a screen (kind of like how an HTML form has a dropdown list), or in any case where the iOS picker's size (216px/pt tall) is too large for the desired UX.     Setting this override could use the existing useSpinner option (and default to true on iOS), or replace the useSpinner property with probably a more flexible spinnerStyle property with options like system default, android, and iphone. The default would be, obviously system default, while the other two options would provide overrides for their opposite platform (ie - setting style:iphone on an iPhone would simply use the default, but setting style:android on an iPhone would trigger the override).","New Feature",Low,Resolved,"2011-10-27 04:17:45","2011-10-27 04:17:45",0
"The Titanium SDK ","Tooling: Adding a module requires a clean build","Currently when a new 3rd party module is added to the code and TiApp.xml file, the user must also do a clean build rather then Titanium detecting that the newly requested module is available and including it automatically",Bug,High,Closed,"2011-10-24 06:03:39","2011-10-24 06:03:39",2
"The Titanium SDK ","iOS: Support building to device, directly to the device, skipping iTunes","When building to device, it would be good to build directly to the device rather then building, then having to sync via iTunes.    Here is a good jumping off point:  http://stackoverflow.com/questions/5010062/xcodebuild-simulator-or-device    For those people who wish to sync to iTunes, we will inject a fake device ID that represents iTunes Sync and this will revert to using the existing mechanism.","New Feature",Critical,Closed,"2011-10-19 12:03:42","2011-10-19 12:03:42",8
"The Titanium SDK ","Android: keyboard type set as number pad permits input of non-numeric values","h2. Problem    New minor version of Titanium SDK has a new look of numeric keyboard.     The problem is that it allows input of non-numeric values.     h2. Test case    How to reproduce the issue:    run this example with 1.7.4 version of Titanium SDK, click on text field and type * or # symbol. You'll see that they are present in text field, while they shouldn't be present.    Compile and run same example with 1.7.3 SDK version and try to do same thing. You'll see that you can't input * or # symbols (or any other that is not a number).            Also, it would be nice if there was key in this new keyboard that would minimize keyboard (if that is possible).",Bug,High,Closed,"2011-10-20 01:18:34","2011-10-20 01:18:34",3
"The Titanium SDK ","iOS: Support UIMenuController","!http://i.stack.imgur.com/yQKL4.png!    Would be a useful feature to have. Already need it for so much. This is something that should be built-in.","New Feature",High,Closed,"2011-10-19 10:52:21","2011-10-19 10:52:21",8
"The Titanium SDK ","Android: Child element does not respect opacity of parent","h3. Original test case.  A child element attached to a parent with an opacity of 0 is still visible, but should be hidden.        h3. Child and Parent View w/ sliders to control opacity.    Try adjusting the opacity of the parent and child views.  The child's opacity should be properly composited with that of the  parent. As you lower the opacity of the parent, the child should also  become more transparent. But if you only lower the child's opacity, the  parent should not be affected.    ",Bug,Medium,Closed,"2011-10-19 12:37:50","2011-10-19 12:37:50",3
"The Titanium SDK ","Android: Add the ability to add multiple polygons to the MapView","h5.Feature Request  To add routes and allow for multiple polygons to be added to the MapView as well as have fill, opacity and color properties.    h6.Utilities  That would allow developers to implement geofencing (see http://en.wikipedia.org/wiki/Geo-fence) a common technique for Android apps.    h6.Customer notes  We'd like to be able to hook into the events when a user enters and leaves a geo-fenced polygon or a radius around a geolocated point.","New Feature",High,Closed,"2011-10-17 08:04:06","2011-10-17 08:04:06",34
"The Titanium SDK ","Android: AndroidManifest.xml not properly created when using Ti.Geolocation events","Using the code below, the appropriate <uses-permission> entries are not added to the AndroidManifest.xml file to allow for using location services.     {code:lang=javascript}  var win = Ti.UI.createWindow();  win.open();    var locationAdded = false;  var handleLocation = function(e) {   if (!e.error) {    Ti.API.info(e.coords);   }  };  var addHandler = function() {   if (!locationAdded) {    Ti.Geolocation.addEventListener('location', handleLocation);    locationAdded = true;   }  };  var removeHandler = function() {   if (locationAdded) {    Ti.Geolocation.removeEventListener('location', handleLocation);    locationAdded = false;   }  };    Ti.Geolocation.accuracy = Ti.Geolocation.ACCURACY_BEST;  Ti.Geolocation.preferredProvider = Ti.Geolocation.PROVIDER_GPS;  if (Ti.Geolocation.locationServicesEnabled) {   addHandler();      var activity = Ti.Android.currentActivity;   activity.addEventListener('destroy', removeHandler);   activity.addEventListener('pause', removeHandler);   activity.addEventListener('resume', addHandler);  } else {   alert('Please enable location services');   }      are absent from the generated AndroidManifest.xml. If you add the following line of code into the above code, the AndroidManifest.xml generates just fine.    {code:lang=javascript}  Ti.Geolocation.getCurrentPosition(function(e) {});  {code}",Bug,High,Closed,"2011-10-13 11:37:16","2011-10-13 11:37:16",3
"The Titanium SDK ","MobileWeb: Implement Ti.Network.networkType property for Android",,Story,Low,Closed,"2011-06-29 23:25:44","2011-06-29 23:25:44",0
"The Titanium SDK ","MobileWeb: Method add works incorrectly with imageView","When adding a label to imageView by method add the label does not appear. The label present in the code of imageView element but i can't see it in a browser window.  {code:JavaScript}  var win = Ti.UI.currentWindow;    var imageView = Ti.UI.createImageView({   top: 10,   left: 10,   width: 200,   height: 50,  });      win.add(imageView);     var l1 = Ti.UI.createLabel ({    text: 'You add me!',    backgroundColor: 'red',    width: 40,    height: 20,    left: 30,    top: 5   });    imageView.add(l1);  {code}",Sub-task,Low,Reopened,"2011-06-01 02:33:13","2011-06-01 02:33:13",3
"The Titanium SDK ","MobileWeb: Method add works incorrectly with searchBar","When adding a label to searchBar by method add the label does not appear. The label present in the code of searchBar element but i can't see it in a browser window.  {code:JavaScript}  var win = Ti.UI.currentWindow;    var searchBar = Ti.UI.createSearchBar({   top: 10,   left: 10,   width: 200,   height: 50,  });      win.add(searchBar);     var l1 = Ti.UI.createLabel ({    text: 'You add me!',    backgroundColor: 'red',    width: 40,    height: 20,    left: 30,    top: 5   });    searchBar.add(l1);  {code}","Technical task",Low,Reopened,"2011-06-01 02:38:57","2011-06-01 02:38:57",3
"The Titanium SDK ","MobileWeb: Event 'selected' doesn't work with textArea.","Event 'selected' not works with textArea object. The label should be appear when the text in the textField is selected.   {code:JavaScript}  win = Ti.UI.currentWindow;    ta = Ti.UI.createTextArea({   width: 200,   height: 100,   top: 10,   left: 10,   value: 'textArea'  })    ta.addEventListener('selected', function(){   var label = Ti.UI.createLabel({    text: 'selected works',    backgroundColor:'red',    top: 150   })   win.add(label);  })  win.add(ta);  {code}",Bug,Low,Closed,"2011-05-24 06:08:32","2011-05-24 06:08:32",3
"The Titanium SDK ","MobileWeb: Constants FACE_UP, FACE_DOWN, UPSIDE_PORTRAIT don't returned in orientationchange.orientation of Ti.Gesture module","Constants FACE_UP, FACE_DOWN, UPSIDE_PORTRAIT don't returned in orientationchange.orientation of Ti.Gesture module. ",Bug,Low,Closed,"2011-06-27 05:35:55","2011-06-27 05:35:55",3
"The Titanium SDK ","iOS: Expose Current Window of Tab in Tab Group","h1. Feature  Expose a currentWindow feature for a tab so that developers can access the visible window on the tab's stack.    h2. Expected Behavior  Whenever a window is opened on the tab, currentWindow would point to the newly opened window. The same applies to whenever you close a window: through clicking a back button, programmatically calling tab.close(someWindow), or tapping the tab's button.    h2. Why This Is Necessary  The end goal of this is to be able to pop back to the root window of a tab group, cleaning up and closing each window along the way. By exposing currentWindow, we give developers access to data we have internally already.    h2. Why Name It currentWindow?  For parity with Ti.UI.currentWindow.    h2. Sample Implementation  {code:title=TiUITabProxy.m}  -(id)currentWindow  {      return [current window];  }      h2. Sample Consuming Code  Drop the following in an app.js. Touch S1: Touch Me and a series of windows will be popped on to the tab's stack. Then hit S2: Touch Me, and the code will utilize the new currentWindow property to cascade back to the root window.    {code:title=app.js}  function openWindowOnStack(i) {      var win = Ti.UI.createWindow({          title: 'Window ' + i,          rightNavButton: Ti.UI.createButton({ title: 'S2: Touch Me' })      });      win.rightNavButton.addEventListener('click', function() {          popToRoot();      });      win.addEventListener('open', function() {          Ti.API.info('Opened: ' + tab.currentWindow.title);          if (i < 4) {              openWindowOnStack(i + 1);          }      });      win.addEventListener('close', function(evt) {          Ti.API.info('Closed: ' + evt.source.title);          if (evt.source.cascadeClose && !tab.currentWindow.rootWindow) {              tab.currentWindow.cascadeClose = true;              tab.close(tab.currentWindow, { animated: false });          }      });      tab.open(win);  }    function popToRoot() {      tab.currentWindow.cascadeClose = true;      tab.close(tab.currentWindow, { animated: false });  }    var outer = Ti.UI.createWindow({      title: 'Root Window',      rightNavButton: Ti.UI.createButton({ title: 'S1: Touch Me' }),      rootWindow: true  });  outer.rightNavButton.addEventListener('click', function() {      openWindowOnStack(0);  });    var tabGroup = Ti.UI.createTabGroup();  var tab = Ti.UI.createTab({      window: outer  });  tabGroup.addTab(tab);  tabGroup.open();  {code}","New Feature",Low,Closed,"2011-10-07 02:03:19","2011-10-07 02:03:19",0
"The Titanium SDK ","Android: Add compiler warning when using maps with Non-Google APIs SDK","Currently, we don't provide a clear error message if the developer attempts to use the Google Maps APIs in their Titanium application with a vanilla Android SDK version.  It would be good to put in some kind of compiler warning to let the developer know that they are trying to run a Maps-enabled application on an Android flavor that does not support it.","New Feature",Medium,Closed,"2011-10-05 07:26:32","2011-10-05 07:26:32",3
"The Titanium SDK ","iOS: Expose SystemAlert","h1. Feature  Not all sounds that an app plays are media, so we should expose the SystemAlert through the Media module. This will let developers choose the most appropriate way to play a sound.    h2. Example Usage  {code:title=app.js}  var systemAlert = Ti.Media.createSystemAlert({      url: 'bad.wav'  });    for (var i = 0; i < 10; i++) {      systemAlert.play();      var until = new Date().getTime() + 300;      while (until > new Date().getTime()) {}  }      {code:title=TiMediaSystemAlertProxy.m}  #import TiMediaSystemAlertProxy.h    @implementation TiMediaSystemAlertProxy    #pragma mark Proxy Lifecycle    -(id)init  {      return [super init];  }    -(void)_destroy  {      if (sound) {          AudioServicesDisposeSystemSoundID(sound);      }      RELEASE_TO_NIL(url);      [super _destroy];  }    #pragma mark System Sound    -(NSURL*)url  {      return url;  }  -(void)setUrl:(id)url_  {      RELEASE_TO_NIL(url);            if ([url_ isKindOfClass:[NSString class]])      {          url = [[TiUtils toURL:url_ proxy:self] retain];                    if ([url isFileURL]==NO)          {              // we need to download it and save it off into temp file              NSData *data = [NSData dataWithContentsOfURL:url];              NSString *ext = [[[url path] lastPathComponent] pathExtension];              tempFile = [[TiFile createTempFile:ext] retain]; // file auto-deleted on release              [data writeToFile:[tempFile path] atomically:YES];              RELEASE_TO_NIL(url);              url = [[NSURL fileURLWithPath:[tempFile path]] retain];          }      }      else if ([url_ isKindOfClass:[TiBlob class]])      {          TiBlob *blob = (TiBlob*)url_;          //TODO: for now we're only supporting File-type blobs          if ([blob type]==TiBlobTypeFile)          {              url = [[NSURL fileURLWithPath:[blob path]] retain];          }      }      else if ([url_ isKindOfClass:[TiFile class]])      {          url = [[NSURL fileURLWithPath:[(TiFile*)url_ path]] retain];      }            if (sound) {          AudioServicesDisposeSystemSoundID(sound);      }      AudioServicesCreateSystemSoundID((CFURLRef)url, &sound);  }    -(void)play:(id)args  {      if (url == nil)          return;      AudioServicesPlayAlertSound(sound);  }    @end  {code}    h2. Android Implementation  I'm not sure what the corresponding feature on Android would be.","New Feature",Low,Closed,"2011-10-05 02:03:15","2011-10-05 02:03:15",8
"The Titanium SDK ","iOS: showCamera leaves a black background if saveToPhotoGallery or allowEditing are true","If you use showCamera and have either allowEditing or saveToPhotoGallery set to true the screen will be black after taking a picture, after the camera disappears.    Step 1: run the code below on device  Step 2: click on the window  Step 3: take a picture  Step 4: notice the camera view disappears but the window is still all black  Step 5: repeat the above steps with 1.7.2 and it will work fine (not leave a black background)      {code:title=app.js}  var win = Ti.UI.createWindow({   backgroundColor : 'white'  });  win.open();  win.addEventListener('click', function(e) {   Titanium.Media.showCamera({    // allowEditing : true,    saveToPhotoGallery : true,    mediaTypes : [Ti.Media.MEDIA_TYPE_VIDEO, Ti.Media.MEDIA_TYPE_PHOTO],    success : function(event) {     alert('success');    },    cancel : function() {     alert('cancel');    },    error : function() {     alert('error');    }   });  });  {code}    h4. Associated Helpdesk Ticket  http://appc.me/c/APP-821739",Bug,High,Resolved,"2011-09-26 19:05:31","2011-09-26 19:05:31",1
"The Titanium SDK ","Android: UI view size property values incorrect","h2. Problem    The view's size property values are intended to reflect the rendered dimensions. However, if these properties are queried too soon after rendering has completed, the old values will be output.    The advice of querying property values within a window open event listener does not work.    h2. Test case    {code:lang=javascript|title=app.js}    var win = Ti.UI.createWindow({  // fullscreen: false, // once fixed, please check with this line uncommented  backgroundColor:'red'  });    var view = Ti.UI.createView({    backgroundColor:'blue',    width:'50',    height:50  });    win.add(view);    Ti.API.info(*** Before window open - view.size.width = 50 ***);  Ti.API.info(view.size w x h:  + view.size.width +  x  + view.size.height); // incorrect    view.width = 100;    win.addEventListener('open', function(){    Ti.API.info(*** Window open - view.size.width = 100 ***);    Ti.API.info(view.size w x h:  + view.size.width +  x  + view.size.height); // incorrect  });      Ti.Gesture.addEventListener('orientationchange', function(){    Ti.API.info(*** orientationchange - view.size.width = 200 ***);    view.width = 200;    Ti.API.info(view.size w x h:  + view.size.width +  x  + view.size.height); // incorrect  });  win.open();      h2. Discussions    See Q/A topic: http://developer.<USER>com/question/124426/how-does-dimensions-work#216821    h2. Workaround    Using setTimeout allows the size values to be updated to reflect the re-rendered view.  ",Bug,High,Closed,"2011-08-19 02:01:07","2011-08-19 02:01:07",0.5
"The Titanium SDK ","iOS: iPad Table View w/ Cuts Text Field Off Screen","h1. Problem  A table view with a text field doesn't size properly to account for the keyboard in portrait orientation. This will be easier to see in practice, so please take a look at the example.    h2. Example  Perform the following steps:    1. Drop the following code in an app.js, and run it in the iPad simulator.  2. The app automatically focuses the last text field in the table view, popping up the keyboard.  3. Verify that you can see the text field, and everything looks as it should.  4. Now scroll to the top of the table view.  5. Try to scroll back down so the last text field is visible. The height of the table view is such that you cannot keep the text field on screen.    {code:title=app.js}  var win = Ti.UI.createWindow({ title: 'Focus Test', backgroundColor: '#fff' });    var rows = [];  for (var i = 0; i < 20; i++) {      var row = Ti.UI.createTableViewRow({          height: 40      });      row.add(row.textField = Titanium.UI.createTextField({          value: 'Last row focused; Scroll up, and then try to scroll back down.',          color: '#000',          top: 5, right: 10, bottom: 5, left: 10,          borderStyle: Titanium.UI.INPUT_BORDERSTYLE_ROUNDED      }));      rows.push(row);  }    win.add(Ti.UI.createTableView({      data: rows  }));    win.addEventListener('open', function() {      rows[rows.length - 1].textField.focus();  });    win.open();  {code}",Bug,Medium,Closed,"2011-09-18 09:28:48","2011-09-18 09:28:48",1
"The Titanium SDK ","iOS: Extra Border seen in default button on iPad","When a button with no specific style is created, it always has an extra border on the bottom. This is visible on iPad.    Sample Code  ",Bug,Low,Closed,"2011-09-09 19:45:54","2011-09-09 19:45:54",0
"The Titanium SDK ","Android: Splash screen stretched on the app launch if device in landscape","h5.Problem  Splash screen is stretched if window orientation mode is locked up, when launching the app in landscape mode.    h5.Target Environment      h5.Repro sequence  {code:title=app.js}  var win1 = Titanium.UI.createWindow({        title:'Tab 1',      backgroundColor:'#fff'  });    win1.orientationModes = [ Titanium.UI.PORTRAIT];     var label1 = Titanium.UI.createLabel({   color:'#999',   text:'I am Window 1',   font:{fontSize:20,fontFamily:'Helvetica Neue'},   textAlign:'center',   width:'auto'  });    win1.add(label1);    win1.open();  {code}",Bug,Low,Closed,"2011-09-08 10:20:15","2011-09-08 10:20:15",0.5
"The Titanium SDK ","Android: Add Ti.App.idleTimerDisabled support","This is the iOS side of android ticket TIMOB-2102","New Feature",Medium,Open,"2011-09-01 10:21:54","2011-09-01 10:21:54",3
"The Titanium SDK ","iOS: Ti.Database.ResultSet fieldCount is a property beginning in 3.3.0. Update Anvil, KS, etc.","iOS incorrectly has fieldCount as a function fieldCount(). In addition:    * The DB tests must be updated to catch mistakes like this going forward, if possible, and also test correct values  * The documentation for Ti.Database.ResultSet must be updated",Bug,Low,Closed,"2011-08-29 15:02:14","2011-08-29 15:02:14",3
"The Titanium SDK ","Latest version of Java unusable for building Android projects","1) Download and install latest Java JDK 7  http://www.oracle.com/technetwork/java/javase/downloads/java-se-jdk-7-download-432154.html  2) Create a new Android project and launch to emulator    Results:  build.log has the following contents    Logfile initialized  [INFO] logfile = C:\Users\alan\My Documents\Titanium Studio Workspace\Hello\build.log  [DEBUG] C:\ProgramData\Titanium\mobilesdk\win32\1.8.0.v20110811101746\android\builder.py simulator Hello C:\Users\alan\android-sdk C:\Users\alan\My Documents\Titanium Studio Workspace\Hello com.<USER>hello 17 WVGA854  [INFO] Building Hello for Android ... one moment  [ERROR] JDK version 1.7.0 detected, but 1.6 is required    ",Bug,Medium,Closed,"2011-08-15 11:18:52","2011-08-15 11:18:52",3
"The Titanium SDK ","Android: Expose dragstart and dragend event on ScrollView (Parity)","API 11 recently exposed the onDragEvent listener in View, which would allow us to reach parity by exposing the dragStart and dragEnd events on Titanium.UI.ScrollView.  http://developer.android.com/reference/android/view/View.html#onDragEvent(android.view.DragEvent)","New Feature",Medium,Closed,"2011-08-10 14:54:11","2011-08-10 14:54:11",5
"The Titanium SDK ","toImage() on device with retina display is pixellated (captured at half resolution)","If you call {{var a = view.toImage()}} on a view, and set an ImageView to that blob i.e. {{imageView.image = a}}  on an Iphone with retina display, then the image is displayed at normal resolution and thus is pixelated on an iPhone 4.    There is a very simple fix to this already out there in the wild, see [https://github.com/<USER>titanium_mobile/|https://github.com/<USER>titanium_mobile/commit/b7ac93e257339e60510a88a5767455f6b1120034#iphone/Classes/TiViewProxy.m]    I would recommend that change is made to all appropriate UI controls which have a toImage() method.         Please remember this issue is only visible when using an iOS 4 Retina Device.",Bug,High,Closed,"2011-07-22 09:38:01","2011-07-22 09:38:01",0
"The Titanium SDK ","Request for default i18n strings file","I have just started using the i18N localisation features, and feel that there is a sorely needed feature which is to have a default locale.    I realise you can get a default value by simply using the hints, but I feel this is an inadequate solution because it means you still have to embed your default text inside your standard JS code/view files, something I am trying to avoid.    What I propose should happen is that there should be a folder/file structure like this:  /i18n/strings.xml (or possibly i18n/default/strings.xml)  /i18n/en/strings.xml  /i18n/es/strings.xml    Then when you call L('my_key') it will default to the value in the default strings.xml if there is no match on locale.  This solution is far more elegant than the current solution where you have to pass in a hint.    In the mean time, I am building a simple workaround solution which uses JSON with a default JSON file instead.    <USER>","New Feature",High,Open,"2011-08-03 09:57:47","2011-08-03 09:57:47",8
"The Titanium SDK ","iOS: imageAsCropped rotates image","imageAsCropped seems to be rotating the image 90 degrees when applied.    Before Crop: http://support-admin.<USER>com/files/cf1c121c-b9ae-11e0-8901-12313b1264a1/Before_crop.PNG  After Crop: http://support-admin.<USER>com/files/cf110d22-b9ae-11e0-8901-12313b1264a1/After_crop.PNG    Repro Code:  ",Bug,Low,Closed,"2011-08-01 18:12:44","2011-08-01 18:12:44",5
"The Titanium SDK ","Ti.UI.backgroundColor/Ti.UI.backgroundImage not translucent","h3. Setting background on Root Window    1) Create project in TiStudio and replace app.js with     {code:JavaScript}  Ti.UI.backgroundColor = '#f00';  Ti.UI.backgroundImage = 'KS_nav_ui.png';    var win = Ti.UI.createWindow();  win.open();    ",Bug,Medium,Closed,"2011-07-26 17:26:38","2011-07-26 17:26:38",2
"The Titanium SDK ","Worker threads spec",,"New Feature",High,Closed,"2011-07-26 13:11:09","2011-07-26 13:11:09",0
"The Titanium SDK ","Android 3.2 Simulator behavior on windows is very poor (not launched at all or useless emulator launched)","1.update your sdk install to include 3.2  2.target 3.2 as the run config and launch the emulator     results: we see 2 things occur  1.time out with no emulator launched  2. emulator launches, but is useless (half the screen renders, buttons do not work etc)    fwiw, lion and 10.6.8 work as expected    Also, as per Don this is not a studio or TIMOB issue",Bug,Medium,Closed,"2011-07-20 11:30:11","2011-07-20 11:30:11",2
"The Titanium SDK ","iOS: New properties of Titanium.UI.View beginning with get always link to main object","New properties of Titanium.UI.View beginning with get always link to main object    ",Bug,Critical,Closed,"2011-06-15 18:01:05","2011-06-15 18:01:05",3
"The Titanium SDK ","SDK switch causes build errors in TiStudio","Mirror for TISTUD-472 for time/progress tracking on Mobile. Issue is with build scripts/project template.",Bug,Low,Closed,"2011-07-06 17:06:47","2011-07-06 17:06:47",1
"The Titanium SDK ","Android: Natively Compiled JS Modules","h1. Feature  Support natively compiled JavaScript modules like we do on iOS.    h2. Example Module  The following steps create a compiled module that you could distribute as a zip on iOS. Once implemented, the same <USER>would work on Android.    1. Create a new module for Android: titanium create --platform=android --type=module --name=jsmod --id=ti.jsmod --android=/path/to/android-sdk  2. Drop the below in assets/ti.jsmod.js:  {code:title=assets/ti.jsmod.js}  exports.createBox = function() {      return Ti.UI.createView({          width: 100, height: 100,          backgroundColor: 'red'      });  };    4. Enjoy your luscious red rectangle    h2. Workaround  Until this feature is available, you can always distribute just the JS file. Developers can utilize it in its un-compiled state, although your code isn't protected from prying eyes.    h3. Associated Helpdesk Ticket  http://appc.me/c/APP-487811","New Feature",High,Closed,"2011-06-29 08:26:10","2011-06-29 08:26:10",2
"The Titanium SDK ","Force full re-build discrepancy between Android and iOS - Android requires modified tiapp.xml","Android requires that tiapp.xml is modified (touched) to force a full rebuild, whereas iOS checks for files in the build/iphone directory. To demonstrate this, follow these steps:    * cd $PROJECT/build/android  * touch ../../tiapp.xml  * rm -rf * (delete all files and folders within build/android)  * launch app with the following code:    {code:lang=javascript}  Ti.UI.backgroundColor = white;  var win = Ti.UI.createWindow({    exitOnClose: true  });  var prod_button = Ti.UI.createButton({    width:81,    height:21,    top:125,    left:150,    title:'View Online',    font:{fontSize:10,fontWeight:'bold'}  });  win.add(prod_button);  win.open();      The app does not launch, nothing is output to logcat, but the following Application Installer console errors occur:        * no improvement is observed when the app is relaunched any number of times  * once the tiapp.xml file is touched, a Detected tiapp.xml change, forcing full re-build... message is output to the console, and the app is launched as expected    ",Bug,High,Closed,"2011-06-27 17:48:09","2011-06-27 17:48:09",3
"The Titanium SDK ","Platform inconsistencies around custom fonts","The handling of custom fonts is inconsistent across platforms.  For iOS it requires a custom Info.plist setting - also, to my knowledge, fonts have to be placed at the top level Resource directory to be usable.  For Android, fonts must be placed in Resources/fonts.  There's not clear guidance on either platform on how to use these fonts in JavaScript.    Consistent handling and documentation on proper use is needed for custom fonts.",Bug,Low,Closed,"2011-06-21 07:48:32","2011-06-21 07:48:32",1
"The Titanium SDK ","Implement getPressure in Android view","Can you expose the getPressure value on android devices:  http://developer.android.com/reference/android/view/MotionEvent.html#getPressure%28int%29  ","New Feature",Low,Closed,"2011-06-06 11:04:31","2011-06-06 11:04:31",2
"The Titanium SDK ","Android: webview content height and width too large","Since 1.7.0, webview content on Android is way too long and wide by default. This leads to a webview where you can scroll way too much to the right and the bottom with no more content being visible inside the webview.  On 1.6.3 the height and width of a webview was properly adopted to the text length and the width/height properties. Here's an example code snippet you can run:      app.js:        On 1.6.3 this will look just fine, no scrollbars appear in the webview. Since 1.7.0 you will get a webview where you can scroll vertically and horizontally way beyond the size / length of the visible text.    ",Bug,Low,Closed,"2011-06-04 01:26:34","2011-06-04 01:26:34",1
"The Titanium SDK ","2nd instance of application run from a separate process causes NullPointerException","The latest version of the Urban Airship SDK supports a new notification handling <USER> whereby the PushService can be configured to run in a separate <USER> When it is configured in that manner it creates a 2nd instance of the application which in turn results in the OnCreate method of TiApplication being called a 2nd time. The result is a NullPointerException occurring somewhere in that method.    The workaround for now is to configure the PushService to run within the current application <USER> but UA recommends running it in a separate <USER>to conserve memory.    The following excerpt is from the Urban Airship documentation on how to resolve this issue:      Process Management    It is possible to run the push service either in your application <USER>or as a separate stand-alone <USER> We recommend that most applications run it in a separate <USER> The primary benefit to this approach is that it allows the service to run with a relatively small memory footprint even if your application is resource intensive. In a low memory situation the OS can kill a backgrounded application's main <USER>without disrupting the service.    To run the service in a separate <USER> simply add the android:<USER> attribute to the service element and provide a name for the <USER> If the name starts with a colon, the <USER>will be private to your application:    <service android:name=com.urbanairship.push.PushService android:<USER>:aPrivateProcess/>  Note that when the service runs in a separate <USER>it will create a separate instance of the application when the service is started. This means that your application's onCreate() method will be called again in another context. For most applications this is not an issue, but if the onCreate method invokes any code that should only be called once (such as analytics code that changes state outside of the application) you will want to ensure that it only runs in one of the processes. The following sample illustrates a method for determining which <USER>your application is running within:    public class MyApplication extends Application {      public void onCreate() {          // the main <USER>for this application is named for the package          // if this is the default <USER> run some special code          if (isProcess(context.getPackageName()) {              //run default <USER>operations here          }      }        private boolean isProcess(String processName) {          Context context = getApplicationContext();          ActivityManager actMgr = (ActivityManager)context.getSystemService(Context.ACTIVITY_SERVICE);          List<RunningAppProcessInfo> appList = actMgr.getRunningAppProcesses();          for (RunningAppProcessInfo info : appList) {              if (info.pid == android.os.Process.myPid() && processName.equals(info.processName)) {                  return true;              }          }          return false;      }    }  ",Bug,Low,Closed,"2011-06-07 07:28:44","2011-06-07 07:28:44",1
"The Titanium SDK ","iOS: searchHidden value does not stay when window containing scroll view is blurred/focused","The use of searchHidden:true is losing its value in that once a window containing a table with this property is blurred, on return the search is displayed. Code example below:  {code:lang=javascript|title=app.js} Titanium.UI.setBackgroundColor('#fff');  var tabGroup = Titanium.UI.createTabGroup();  var win1 = Titanium.UI.createWindow({  title:'Tab 1' }); var tab1 = Titanium.UI.createTab({  title:'Tab 1',  window:win1 });  var data = [{  title:'row 1' }];  var s1 = Titanium.UI.createSearchBar(); var tb = Ti.UI.createTableView({  data:data,  search:s1,  searchHidden:true }); win1.add(tb);  var win2 = Titanium.UI.createWindow({  title:'Tab 2' }); var tab2 = Titanium.UI.createTab({  title:'Tab 2',  window:win2 });  var label2 = Titanium.UI.createLabel({  text:'I am Window 2' });  win2.add(label2);  tabGroup.addTab(tab1); tabGroup.addTab(tab2);  tabGroup.open(); {code}",Bug,Medium,Closed,"2011-06-01 08:46:13","2011-06-01 08:46:13",3
"The Titanium SDK ","iOS: Enable searchBar to animate cancel button","When a searchBar is NOT attached to a tableView, instead attached to a view on the window, the cancel button isn't animated. Nor does there seem to be a property to enable it. The cancel button IS animated when a searchBar is attached to a tableView.    On the Q&A site, there is this:  [http://developer.<USER>com/question/67231/searchbar-animate-cancel-button]    <USER> looked at the source and wrote:    {code:title=iphone/Classes/TiUISearchBar.m (about line 70)}    Change:    [search setShowsCancelButton:[TiUtils boolValue:value]];    to    [search setShowsCancelButton:[TiUtils boolValue:value] animated:YES];  {code}    Could be a configurable option, I suppose, but having it match the tableView searchBar would probably make sense. The latter is not configurable.","New Feature",High,Closed,"2011-05-25 06:10:33","2011-05-25 06:10:33",1
"The Titanium SDK ","Android: Debugger: Breakpoint hits prior to value change when condition is set","Steps to Reproduce:  1. Run Debug test 1014 and 1015 from http://wiki.<USER>org/display/tp/Debugger+Test+Plan    Actual Result:  Frames 1-7 is not being displayed in the debug window    Expected Result:  Call frames in the debug window should be: 9 call frames:  frame[0] : [Eval script] [app.js:24]  frame[1]-frame[7] : [Eval script] [app.js:28]  frame[8] : [Top-level script] [app.js:53]     Workaround:  Click Resume twice",Bug,Low,Closed,"2011-05-20 12:26:04","2011-05-20 12:26:04",3
"The Titanium SDK ","Android: TabGroup: most events not do not fire (only focus works)","Environment:    * TiStudio Preview  * Android 2.3.3  * Titanium SDK (all versions)    The following code demonstrates that only the focus event is fired for tabGroups:    ",Bug,High,Closed,"2011-05-12 18:08:40","2011-05-12 18:08:40",2
"The Titanium SDK ","Android:  Add separatorStyle property to Ti.UI.ListView","Users have requested the ability to eliminate the Separator in a tableview so when they are using backgroundImages for the TableViewRow there is no break in between the rows.  See screenshot: http://screencast.com/t/5lDQUpCyHpxv    Setting the tableView seperatorColor to 'transparent' shows the table backgroundColor.    Sample project is attached.    The API should match iOS as closely as possible, so we are moving the existing iOS* constants into the top level UI namespace, and keeping the existing separatorStyle property that iOS uses. The valid styles should be:    Ti.UI.TableViewSeparatorStyle.NONE  Ti.UI.TableViewSeparatorStyle.SINGLE_LINE    In the future we can also implement custom separator drawables by passing them to this property (Android only)","New Feature",Low,Closed,"2011-05-10 20:56:44","2011-05-10 20:56:44",5
"The Titanium SDK ","Android: Image taken in portrait orients itself to landscape ","# phone > camera > camera basic  # in portrait, take an image, then hit okay and look at resulting image     results: image is landscape  expected: should reflect users orientation when image was taken    notes: not seen when using landscape orientation to take image",Bug,Medium,Closed,"2011-05-03 15:12:58","2011-05-03 15:12:58",5
"The Titanium SDK ","Android: Debugger breakpoint conditions with failures should report an error in the debugger console, but still break",,Bug,Low,Closed,"2011-04-27 13:14:13","2011-04-27 13:14:13",1
"The Titanium SDK ","TableViewRow.header/footer is undocumentated","{html}<div><p>Usage example in the Kitchensink: <a href= https://github.com/<USER>KitchenSink/blob/master/Resources/examples/table_view_api_custom_rowheader.js> https://github.com/<USER>KitchenSink/blob/master/Resources/e...</a></p> <p>But the current API documentation doesn't know this attribute: <a href= http://developer.<USER>com/apidoc/mobile/latest/Titanium.UI.TableViewRow-object> http://developer.<USER>com/apidoc/mobile/latest/Titanium.UI....</a></p></div>{html}",Bug,Low,Closed,"2011-04-15 03:47:02","2011-04-15 03:47:02",1
"The Titanium SDK ","Android: Geolocation displays error alert for Current location","{html}<div><p>Steps to Reproduce<br>  1. Launch KitchenSink<br>  2. Run Phone &gt; Geolocation<br>  3. Go back and then go back into geolocation again</p>  <p>Actual Result:<br>  Alert error{<a href=></a><a href=2}>code</a></p>  <p>Expected Result:<br>  To return the geolocation values</p>  <p>Note:<br>  Droid 1 happens on first launch<br>  Nexus S, sometimes happen on first launch, sometimes require a  second launch<br>  See also bug # 2418</p>  <p>Tested on:<br>  Nexus S 2.3.2 Titanium SDK version: 1.7.0 (Apr 12 2011 15:24  rcc9dd9e1)<br>  Droid 1 2.2.1 Titanium SDK version: 1.7.0 (Apr 12 2011 15:24  rcc9dd9e1)</p></div>{html}",Bug,High,Closed,"2011-04-15 03:46:58","2011-04-15 03:46:58",1
"The Titanium SDK ","Titanium.UI.iPhone.SystemButton does not exist","Sometimes it does, other times not... ditto for {{SystemButtonStyle}}. (iPhone emulator)  Restarting Titanium developer and deleting the build folder brought it back. But...",Bug,Low,Closed,"2011-04-15 03:46:46","2011-04-15 03:46:46",2
"The Titanium SDK ","iOS: Implement Composite Layout Behavior Spec","Implementation of the new (Composite) Behavior Spec for IOS.  ","New Feature",Critical,Closed,"2011-04-15 03:46:28","2011-04-15 03:46:28",8
"The Titanium SDK ","Android: Ti.Properties do not accept undefined as value","This is feature request to allow undefined to be set as part of Ti.Properties, specifically the setBool and getBool. This works fine on iOS but does not on Android. Currently getBool accepts true, false and null.  There is a http://support.<USER>com/tickets/BUQ-42972-167/homepage ticket asking for this.",Bug,High,Closed,"2011-04-15 03:46:20","2011-04-15 03:46:20",1
"The Titanium SDK ","Android: Context menu","h1. Feature  Support Android Context Menu    h2. Relies On  The context menu feature relies on [TIMOB-1653]","New Feature",High,Closed,"2011-04-15 03:45:50","2011-04-15 03:45:50",0
"The Titanium SDK ","Android: support font-style strike line-through","{html}<div><p>Requesting suport for line-through decoration of text.<br>  Also known as strike/strikethrough.<br>  <strike>Example</strike></p></div>{html}","New Feature",Low,Closed,"2011-04-15 03:45:49","2011-04-15 03:45:49",0
"The Titanium SDK ","iOS: Clear app url from App Arguments on resume","{html}<div><p>A <a href=  http://developer.<USER>com/helpdesk/view/76659>helpdesk  ticket</a> encounter a problem while coming back to the app after  it has been in the background (multitasking).</p>  <p>If the app is opened from being close, Ti.App.getArguments().url  return nothing, and if it is opened again from backgrounding, it  also returns nothing. This is fine, but when the app is launched  from Safari (for example: app://), getArguments().url returns  app:// (or whatever the name of the app is) as expected. If the  app is placed in the background again and reopened normally, the  same url appears as if it was opened through safari.</p>  <p>More details and sample app.js in helpdesk ticket <a href=  http://developer.<USER>com/helpdesk/view/76659>76659</a>.</p></div>{html}",Bug,High,Closed,"2011-04-15 03:45:08","2011-04-15 03:45:08",1
"The Titanium SDK ","Ti API: Provide EXIF data interface","As Exif data is stored in photo files created using the device camera, it can be exploited to simplify apps as the information does not need to be implemented/duplicated using the DB. Hence, propose that access to the data be considered for inclusion in a future release.    This functionality is available for iOS from version 4.0, according to http://developer.<USER>com/helpdesk/view/63941.    This request also raised for Android.","New Feature",Low,Closed,"2011-04-15 03:45:04","2011-04-15 03:45:04",3
"The Titanium SDK ","iOS: Titanium.Media.createItem does not exist","{html}<div><p>I tried to call the method however I get an error in 1.6.1,  1.6.0 and 1.5.1 telling me that the method doesn't exist. Still no  luck after emptying build folder and forcing full rebuild. So it's  impossible to save and deserialize media data picked from the  library at the moment.</p>  <p>Here is the relevant part of the crash log:</p>  <p>*** Terminating app due to uncaught exception 'XXX', reason:  'invalid method (createItem) passed to MediaModule'</p></div>{html}",Bug,Low,Closed,"2011-04-15 03:45:01","2011-04-15 03:45:01",1
"The Titanium SDK ","iOS: Expose Ti.UI.Label.textAlign justify","Please put this into the next release. Allows for prettier text aligning in Labels.",Bug,Low,Closed,"2011-04-15 03:43:55","2011-04-15 03:43:55",2
"The Titanium SDK ","TiAPI: Implement several missing Ti.Media.AudioPlayer features","*Problem description*  Ti.Media.AudioPlayer is lacking several features. Because of this, developing an audio player with the current API is not possible. For example, Ti.Media.Sound has a duration property, which isn't available in Ti.Media.AudioPlayer.    *Proposed fixes (available in linked repositry)*  - ADD duration read-only property  - ADD time property (for seeking)  - ADD volume property  - ADD next/prev and seeking remote control events  - FIX play/pause remote controls don't work when using background audio  - FIX changing the URL doesn't work (unless you stop first)  - FIX progress events only fire for the first URL    Also suggested on http://stackoverflow.com/q/35157844/4626813  - Expose contentType header to be send when retrieving the file/stream","New Feature",High,Closed,"2011-04-15 03:43:29","2011-04-15 03:43:29",0
"The Titanium SDK ","Android: Support service constants","{html}<div><p>Is it possible to add support for the constants for services for  better control over the instances through Ti.Android.Service and  the start event handler?</p>  <p>I'm finding my Android background service is getting cleared up  when the device is running low on memory. I guess the alternative  is support for foreground services.</p>  <p>Android Docs: <a href=  http://developer.android.com/reference/android/app/Service.html#START_STICKY>  http://developer.android.com/reference/android/app/Service.html#STA...</a><br>  QA Thread: <a href=  http://developer.<USER>com/question/116757/creating-services-with-startsticky>  http://developer.<USER>com/question/116757/creating-services...</a></p></div>{html}","New Feature",High,Closed,"2011-04-15 03:41:19","2011-04-15 03:41:19",1
"The Titanium SDK ","iOS: Picker 'select'-event requested","{html}<div><p>At this moment, the only Picker-event is the change-event. A  user, however, can click on a row. If he does so, a blue selection  bar appears. But there is no way to detect that event. Could you  add a 'select'-event so that we can write an event-handler for this  behavior?</p></div>{html}","New Feature",Medium,Closed,"2011-04-15 03:41:10","2011-04-15 03:41:10",0
"The Titanium SDK ","Facebook.authorize not firing on Android with 1.6.0","{html}<div><p>Nothing happens on the Android emulator when firing the authorize call. (Same code works on iOS)</p> <pre> <code>Ti.Facebook.appid = 'xxx'; Ti.Facebook.permissions = ['publish_stream']; Ti.Facebook.authorize();</code> </pre> <p>But some action is happening behind the scenes.</p> <pre> <code>[TRACE] W/InputManagerService( 64): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@450d0020 [TRACE] D/Facebook-WebView( 290): Webview loading URL: https://m.facebook.com/dialog/oauth?display=touch&amp;client_id=xxx&amp;scope=publish_stream&amp;type=user_agent&amp;redirect_uri=fbconnect%3A%2F%2Fsuccess [TRACE] D/Facebook-WebView( 290): Webview loading URL: http://www.facebook.com/connect/uiserver.php?app_id=xxx&amp;method=permissions.request&amp;display=touch&amp;next=fbconnect%3A%2F%2Fsuccess&amp;type=user_agent&amp;fbconnect=1&amp;perms=publish_stream [TRACE] D/Facebook-WebView( 290): Redirect URL: http://www.facebook.com/connect/uiserver.php?app_id=xxx&amp;method=permissions.request&amp;display=touch&amp;next=fbconnect%3A%2F%2Fsuccess&amp;type=user_agent&amp;fbconnect=1&amp;perms=publish_stream [TRACE] D/Facebook-WebView( 290): Webview loading URL: http://touch.facebook.com/login.php?app_id=xxx&amp;cancel=fbconnect%3A%2F%2Fsuccess%2F%3Ferror_reason%3Duser_denied%26error%3Daccess_denied%26error_description%3DThe%2Buser%2Bdenied%2Byour%2Brequest.&amp;fbconnect=1&amp;next=http%3A%2F%2Fwww.facebook.com%2Fconnect%2Fuiserver.php%3Fmethod%3Dpermissions.request%26app_id%3Dxxx%26display%3Dtouch%26redirect_uri%3Dfbconnect%253A%252F%252Fsuccess%26type%3Duser_agent%26fbconnect%3D1%26perms%3Dpublish_stream%26from_login%3D1&amp;rcount=1 [TRACE] D/Facebook-WebView( 290): Redirect URL: http://touch.facebook.com/login.php?app_id=xxx&amp;cancel=fbconnect%3A%2F%2Fsuccess%2F%3Ferror_reason%3Duser_denied%26error%3Daccess_denied%26error_description%3DThe%2Buser%2Bdenied%2Byour%2Brequest.&amp;fbconnect=1&amp;next=http%3A%2F%2Fwww.facebook.com%2Fconnect%2Fuiserver.php%3Fmethod%3Dpermissions.request%26app_id%3Dxxx%26display%3Dtouch%26redirect_uri%3Dfbconnect%253A%252F%252Fsuccess%26type%3Duser_agent%26fbconnect%3D1%26perms%3Dpublish_stream%26from_login%3D1&amp;rcount=1</code> </pre></div>{html}",Bug,Low,Closed,"2011-04-15 03:39:50","2011-04-15 03:39:50",1
"The Titanium SDK ","iOs 1.6.0 - iPad - Modal FormSheet BUG","{html}<div><p>Hi,<br> I'm currently use an window in modal, in modalStyle:Ti.UI.iPhone.MODAL_PRESENTATION_FORMSHEET, opened with flip animation. On 1.5.2 this works correctly, but in 1.6.0 this modal takes all height of screen and hide the current window.</p></div>{html}",Bug,Trivial,Resolved,"2011-04-15 03:39:39","2011-04-15 03:39:39",0
"The Titanium SDK ","Android: Add radio button group support","*Summary:*  We should add a radio button group like feature on all platforms (Android, iOS, and Windows) where a horizontal layout of buttons are displayed, but only one option can be selected at a time.    On Android and Windows, this is a built-in UI component that we should use.  https://developer.android.com/guide/topics/ui/controls/radiobutton    On iOS, this should be implemented via a {{UISegmentedControl}}.  https://developer.apple.com/design/human-interface-guidelines/ios/controls/segmented-controls    *Recommend Solution:*  Should be implemented in Titanium similar to {{Ti.UI.TabbedBar}}...  https://docs.<USER>com/platform/latest/#!/api/Titanium.UI.TabbedBar    The idea is that the Titanium developer creates the group view, but does not have access to the individual buttons within the group. This will help make it more portable between Android and iOS.    The radio buttons will be created via a creation-only labels property, which is assigned an array of strings, just like how it works with {{Ti.UI.TabbedBar}} and {{Ti.UI.ButtonBar}}.    We should also support an index property to indicate which button is selected and the click event when a button has been clicked on. This is how it's implemented in {{Ti.UI.TabbedBar}} as well.    The layout should be horizontal by default. Especially since iOS' {{UISegmentedControl}} can only be displayed horizontally. Vertical layout support would be nice, but it is only natively supported on Android and Windows.    *Future:*  We may also want to support the Choice Chips feature as shown in Google's material design below. New {{Chip}} and {{ChipGroup}} Java classes have been added to Google's Support Library version 28. This could be implemented via the view's style property in the future.  https://material.io/design/components/chips.html  ","New Feature",Medium,Closed,"2011-04-15 03:39:18","2011-04-15 03:39:18",13
"The Titanium SDK ","Android: GridView support","{html}<div><p>Hi,<br> I would like to see support of GridView in Titanium.<br> Currently the only way to do something similar is to emulate it with a TableView and internal views, but this brings performance, usability problems and a non-native experience.</p> <p>Something like<br></p> <pre> <code class=javascript>// create grid view var gridView = Titanium.UI.Android.createGridView({ data:data });</code> </pre> would be desirable.</div>{html}","New Feature",Low,Closed,"2011-04-15 03:39:17","2011-04-15 03:39:17",0
"The Titanium SDK ","Android: Persistent internal compiler error","h2. Error Message:        h2. Version Info:    * Titanium Mobile 1.5.1  * Android SDK r8 and r9    h2. Repo Steps:    * Create a new titanium project  * Add attached BigInt.js to the /Resources directory  * Recompile *Error occurs here*  * Remove BigInt.js from /Resources directory  * Recompile *Compiler error still occurs*    It appears that the entire titanium mobile project is trashed  from this point and will not recompile again.    Edit: fixed the formatting",Bug,High,Closed,"2011-04-15 03:39:00","2011-04-15 03:39:00",3
"The Titanium SDK ","Android: JAVA_HOME not recognized when launching some Android applications","Googled and found that spaces in the Java paths would create complications: http://developer.<USER>com/question/34701/error-jdk-version-javac-is-not-recognized-as-an-internal-or-external-command-testing-on-android    We moved the JDK location to C:\Java\java-jdk-folder and it appeared to work fine after updating JAVA_HOME and the Path environment variables to the new location.",Bug,Medium,Closed,"2011-04-15 03:38:57","2011-04-15 03:38:57",3
"The Titanium SDK ","Android: Ti.API.log doesn't work with one argument only","{html}<div><p>I used Ti.API.log with one argument in an external JS file  wrongly. It works on iPhone and a message is printed as info log.  But on Android, it fails without error message and scripts after  the log line are not executed.</p></div>{html}",Bug,Medium,Closed,"2011-04-15 03:38:25","2011-04-15 03:38:25",0.5
"The Titanium SDK ","iOS: Modal Window Animated False","If a modal window is opened with animated:false, it will be  opened without animation but will close with animation.    Example code:    {code:js}  var win = Titanium.UI.createWindow({ backgroundColor:'#fff' });  var button = Ti.UI.createButton({title:'open', width:200, height:50});  win.add(button);  button.addEventListener('click', function(){      var win2 = Ti.UI.createWindow({backgroundColor:'#ccc'});      var button2 = Ti.UI.createButton({title:'close', width:200, height:50});      win2.add(button2);      button2.addEventListener('click', function(){          win2.close();          //win2.close({animted:false});      });      win2.open({modal:true, animated:false});  });  win.open();  {code}",Bug,Low,Closed,"2011-04-15 03:35:49","2011-04-15 03:35:49",1
"The Titanium SDK ","iOS Feature Request: Add a byte() Method to Titanium.Filesystem","{html}<div><p>User is trying to read a binary blob file. Specifically this  users is trying to read the last 128 bytes from the data within the  blob.</p>  <p>Ticket reference: <a href=  http://developer.<USER>com/helpdesk/view/66511>http://developer.<USER>com/helpdesk/view/66511</a></p>  <p>Code he is attempting:<br></p>  <pre>  <code>var ansi = Ti.Filesystem.getFile(Titanium.Filesystem.resourcesDirectory,'4THDS-05.DRK');<br>  <br>      </code>  </pre>  <pre>  <code><code>Ti.API.info('Native = ' + ansi.nativePath);  var content = ansi.read();  var sauce = content.getByte(content.size-128);    Ti.API.info('SAUCE = ' + sauce);&lt;/code&gt;</code></code>  </pre>  <pre>      <br>  </pre></div>{html}","New Feature",Trivial,Closed,"2011-04-15 03:33:37","2011-04-15 03:33:37",0
"The Titanium SDK ","iOS: Switch - Disable animation on init and allow developer to disable for setValue","When loading a switch with a value set to 'true' the switch shows an animation going from 'off' to 'on'.    Users would like a property added to the switch object of 'animate' as a boolean value, to turn off the animation on-load if the value of the switch is preset to true.    Reference ticket: http://developer.<USER>com/helpdesk/view/67301",Bug,Trivial,Closed,"2011-04-15 03:32:37","2011-04-15 03:32:37",2
"The Titanium SDK ","iOS: HTTPClient intermittently errors on HTTPS requests","{html}<div><h1>Problem</h1>  <p>The HTTPClient errors intermittently (around half the time) when  making an HTTPS request. The following error message is sent:</p>  <pre>  <code>Error Domain=ASIHTTPRequestErrorDomain Code=1 A connection failure occurred UserInfo=0xb236b70 {NSUnderlyingError=0xb234cf0 The operation couldn&rsquo;t be completed. Connection reset by peer, NSLocalizedDescription=A connection failure occurred}</code>  </pre>  <h1>Tested On</h1>  <p>All platforms tested with clean builds from both Titanium Mobile  1.5.1 and 1.6.0 (pulled January 8th, 2011).<br>  BROKEN on iPhone Simulator 4.2<br>  BROKEN on iPod Touch 4.2<br>  WORKS on Android Simulator 2.2<br>  WORKS in browser (hitting the URL)  </p>  <h1>Sample Code</h1>  <pre>  <code class=  javascript>var win = Titanium.UI.createWindow({ backgroudColor: '#333' });  var statusLabel = Titanium.UI.createTextArea({      top: 10, right: 10, left: 10, bottom: 45  });  win.add(statusLabel);    function runRequest() {      var xhr = Titanium.Network.createHTTPClient();      xhr.onload = function () {          statusLabel.value = this.responseText;          //Ti.API.info(this.responseText);      };      xhr.onerror = function (e) {          statusLabel.value = e.error;          Ti.API.error(e.error);      };      statusLabel.value = 'Waiting for response...';      xhr.open('GET', 'https://acomsx1.cos.agilent.com/QueryOpenNotificationsCount');      xhr.send();  }    var refresh = Ti.UI.createButton({      title: 'Refresh',      bottom: 10, left: 10, right: 10, height: 25  });  refresh.addEventListener('click', runRequest);  win.add(refresh);    win.open();    runRequest();</code>  </pre>  <h2>Associated Helpdesk Ticket</h2>  <p><a href=  http://developer.<USER>com/helpdesk/view/64561>http://developer.<USER>com/helpdesk/view/64561</a></p></div>{html}",Bug,Medium,Closed,"2011-04-15 03:29:54","2011-04-15 03:29:54",2
"The Titanium SDK ","iOS: Facebook permissions return false positives","{html}<div><h1>Problem</h1> <p>If a user clicks Don't Allow when an app asks for additional information, evt.success and hasPermission will still return true for this permission, when they should return false. This false positive only occurs in iOS, in my testing.</p> <h1>Sample Code Demonstrating Problem</h1> <p>The following sample code demonstrates the problem.</p> <p>Use the following steps to reproduce in sample code:<br> 1. Click Connect with Facebook<br> 2. Sign in<br> 3. Click Don't Allow</p> <pre> <code class=javascript>/** * Function that logs the user into Facebook, and makes sure they have * granted us the user_checkins permission. */ function checkIfUserIsLoggedIntoFacebook() {     // if user hasn't logged in yet, don't do anything     // (they need to click the Connect with Facebook button)     if (Titanium.Facebook.isLoggedIn() === false) {     }     // if the user hasn't given us the permissions we want, request them.     else if (!Titanium.Facebook.hasPermission(user_checkins)) {         Titanium.Facebook.requestPermission(user_checkins, function (evt) {             if (evt.success) {                 alert('Permission GRANTED');             } else {                 alert(Permission DENIED);             }         });     }     // otherwise, we should be good to go     else {         alert('Permission ALREADY GRANTED');     } }  /** * Add a login event listener so we can check if we have all the permissions * we want. */ Titanium.Facebook.addEventListener('login', function (evt) {     if (evt.success) {         checkIfUserIsLoggedIntoFacebook();     } });  // create our window var win = Ti.UI.createWindow({ backgroundColor: '#fff' }); win.add(Ti.Facebook.createLoginButton({     apikey: '645bf1d897d1fa8dc93ed45bc37edc04',     secret: '49d146f85b8429438262380b85f2ebac',     style: 'wide' })); win.open();</code> </pre> <h1>Tested On</h1> <p>Tested on CI build 1.6.0 from January 8th, 2010.<br> BROKEN on iPhone Simulator, 4.2<br> WORKS on Android Simulator APIs 2.2</p> <h2>Associated Helpdesk Ticket</h2> <p><a href= http://developer.<USER>com/helpdesk/view/63481>http://developer.<USER>com/helpdesk/view/63481</a></p></div>{html}",Bug,Low,Closed,"2011-04-15 03:29:41","2011-04-15 03:29:41",1
"The Titanium SDK ","iOS: Need more methods to manipulate localnotification ","{html}<div><p>Local notification created for iOS can not be manipulate after  the application has been closed and re opened.<br>  It's really a need, per exemple, to be able to cancel one, or  modify another..</p>  <p>We need some tools to retrieve and manipulate them.</p></div>{html}","New Feature",Low,Resolved,"2011-04-15 03:29:26","2011-04-15 03:29:26",0
"The Titanium SDK ","Android: Generate a Proguard configuration based on API usage","This will decrease the final APK size, improve performance, and further obfuscate bytecode.    More info here: http://developer.android.com/tools/help/proguard.html","New Feature",Medium,Open,"2011-04-15 03:29:25","2011-04-15 03:29:25",3
"The Titanium SDK ","need to be able to ref adb from either /tools or /platform-tools subdir","{html}<div><p>as it stands users have to make a symlink in /tools to  /platform-tools/adb</p></div>{html}",Bug,Medium,Closed,"2011-04-15 03:28:52","2011-04-15 03:28:52",3
"The Titanium SDK ","Android: Getting Error at Rebuilding after changing tiapp.xml.","Hi, I am developing Android application using Titanium. Earlier i was using {{Titanium.Platform.displayCaps.platformHeight}} and i tried solution provided here:    http://developer.<USER>com/question/91631/titaniumplatformdisplaycapsplatformheight-runtime-error    Now i am getting following error        Suggest Something ASAP.  Regards, Rahul",Bug,High,Closed,"2011-04-15 03:28:04","2011-04-15 03:28:04",3
"The Titanium SDK ","App names containing Titanium break the iPhone build","{html}<div><p>If the (case-sensitive) string Titanium appears is used in a project name, the Xcode project files (*.pbxproj) get mangled and can't be built from the Titanium Developer GUI.</p> <p>I can reproduce this reliably with the following versions:<br> Titanium Developer 1.2.2<br> Titanium Mobile SDK 1.1.0<br> Mac OS X 10.6.5<br> Xcode 3.2.3</p> <p>Details for reproducing:</p> <p>When I create a new Mobile project from Titanium Developer, called Hello Titanium, building the app throws an error because the named Xcode target doesn't exist. (I found that in <code>build/iphone/build/build.log</code>)</p> <p><code>$ xcodebuild -list</code></p> <pre> <code>Information about project Hello Titanium: Targets:     Hello HelloTitanium (Active)     Hello HelloTitanium-iPad  Build Configurations:     Debug (Active)     Release  If no build configuration is specified Release is used.</code> </pre> <p>These cases also fail:</p> <ul> <li>Hello2Titanium =&gt; Hello2Hello2Titanium</li> <li>Hello4Titanium =&gt; Hello4Hello4Titanium</li> <li>Titanium7Hello =&gt; Titanium7Hello7Hello</li> <li>Hello8Titanium8Hello =&gt; Hello8Hello8Titanium8Hello8Hello</li> <li>Welcome Titanium Howdy =&gt; Welcome WelcomeTitaniumHowdy Howdy</li> </ul> <p>But these cases are just fine:</p> <ul> <li>Hello5Titanius =&gt; Hello5Titanius</li> <li>some titanium in lowercase =&gt; some titanium in lowercase</li> </ul></div>{html}",Bug,Medium,Closed,"2011-04-15 03:27:30","2011-04-15 03:27:30",1
"The Titanium SDK ","android SDK > 1.5.0 Compiling Javascript Resources each time","With SDK older than 1.5.0, when Ti developer Launch button is clicked, application is immediately displaying in the emulator:        With 1.5.0 & 1.5.1 each time I get a compiling Android Resources:    ",Bug,Trivial,Closed,"2011-04-15 03:26:19","2011-04-15 03:26:19",3
"The Titanium SDK ","Android: Complex/autogenerated remote image URLs fail, whereas simple URLs succeed","h2. Problem    A complex url to an image, used in an imageView do not render.    The issues is not present in 1.4.3 (21Nov).      h2. Test case    The following code will cause an exception:    {code:lang=javascript|title=app.js}  var window = Titanium.UI.createWindow({        backgroundColor:'red'  });    var graph = Titanium.UI.createImageView({      top: 20,      image: 'http://chart.apis.google.com/chart?chco=666666,555555,444444,333333,222222&amp;cht=p&amp;chd=t:36,15,12,10,26&amp;chdl=xyz|abc|def|ghi|jkl&amp;chdlp=b&amp;chf=c,s,ffffff|bg,s,ffffff&amp;chl=36%|15%|12%|10%|26%&amp;chs=288x150'  //    image: 'http://developer.<USER>com/assets/img/sprites.png'  });  window.add(graph);  window.open();    ",Bug,Medium,Closed,"2011-04-15 03:25:57","2011-04-15 03:25:57",3
"The Titanium SDK ","Android: Support passing customized launch params to Android emulator","Developers would like to have the ability to add custom launch parameters to the android emulator such as setting a HTTP proxy.      Here is one example of the parameters they would like to be able to include:      Reference HD Tickets:   http://appc.me/c/APP-364571  http://appc.me/c/EPH-39417-198","New Feature",Trivial,Closed,"2011-04-15 03:25:45","2011-04-15 03:25:45",3
"The Titanium SDK ","iOS: invalid method (createTabGroup) passed to UIModule at app.js","{html}<div><p>When i build for simulator everything works as expected, but  when i build for device it installs onto the phone, then when i  open the application the errors below appear and the app locks on  the splash screen. I've really tried everything and it looks like a  couple of other people have experienced similar issues:</p>  <p><a href=  http://developer.<USER>com/question/85671/invalid-method-createtoolbar-passed-to-uimodule-on-device>  http://developer.<USER>com/question/85671/invalid-method-cre...</a><br>  <a href=  http://developer.<USER>com/question/45181/test-working-in-ipad-simulator-not-on-ipad>  http://developer.<USER>com/question/45181/test-working-in-ip...</a></p>  <p>The errors are:</p>  <p><a href=/projects/32238/changesets/WARN title=  Changeset [WARN]>[WARN]</a> attempted to load: TiUITabGroupProxy  <a href=/projects/32238/changesets/ERROR title=  Changeset [ERROR]>[ERROR]</a> Script Error = invalid method  (createTabGroup) passed to UIModule at app.js (line 1). <a href=  /projects/32238/changesets/ERROR title=  Changeset [ERROR]>[ERROR]</a> application received error: invalid  method (createTabGroup) passed to UIModule at app.js (line 1)  <a href=/projects/32238/changesets/DEBUG title=  Changeset [DEBUG]>[DEBUG]</a> application booted in 275.932014  ms</p>  <p>This issue has just started and i'm struggling to move past it,  i've done the following and it's still causing the issue:</p>  <ul>  <li>Uninstalled titanium from my system, user folder, application  support folder etc</li>  <li>Reinstalled everything</li>  <li>Removed build folder</li>  <li>Created a new user account on my mac</li>  <li>Repeated above steps</li>  <li>Created new project etc</li>  </ul>  <p>I've attached my app.js which seems to be in order, i also  created a new project and replaced the app.js in that project and  it seemed to run ok, but i cannot find any reason why my app.js  wouldn't run...</p>  <p>please help, i've spent 2 whole days trying things now!!!!!</p></div>{html}",Bug,Low,Resolved,"2011-04-15 03:24:05","2011-04-15 03:24:05",1
"The Titanium SDK ","Android: App launch/build problem if ampersand in home folder name (windows)","http://developer.<USER>com/question/86611/ampersand-in-user-path-prevents-creation-of-avd-windows-vista    The user folder (C:\users...) for my profile contains an ampersand (C:\users\<USER>amp;jerry\ - real names hidden). This is preventing Titanium from creating the Android AVDs needed to test apps, giving the following error:    [TRACE] Error: 'C:\Users\<USER> is not recognized as a valid sdcard value. It looks like the command that creates the avd is stripping away part of the string when it tries  to create an avd. I've manage to track down a function 'create_avd' in 1.4.0/android/builder.py which I think may be the culprit, but I'm not sure where to go from there. The sdcard has been created, so the problem must be after that point.    There are a multitude of methods for renaming the user folder, none of which are straight forward (registry edits, etc.). I'm hoping someone can tell me a way of making Titanium function with this, albeit rare and idiotic, usage case.    Does anyone have any suggestions?",Bug,Low,Closed,"2011-04-15 03:21:58","2011-04-15 03:21:58",5
"The Titanium SDK ","iOS: Httpclient ssl problem without different port","{html}<div><p>If I put a port 443 or a different one the connection does not  work</p></div>{html}",Bug,Medium,Closed,"2011-04-15 03:20:59","2011-04-15 03:20:59",1
"The Titanium SDK ","Android: Strip debugging symbols from JARs when building for production","It might be a good space saving measure to strip debugging symbols from our JARs when building apps for production mode. The biggest implication this has is not having line numbers in stack traces from production apps.","New Feature",Low,Closed,"2011-04-15 03:17:47","2011-04-15 03:17:47",3
"The Titanium SDK ","iOS: Add the ability to add Vector Overlay on Maps","I couldn't find an existing ticket for this, but I remember it being mentioned somewhere before.    Would like to be able to draw vector shapes on top of a map with various colours / opacity / textures. Bonus points for code that assists with drawing and manipulating the vector with touch events, placing markers on the corners for resizing etc. Otherwise, at the very least some event triggering for clicking + interacting with the vector shape.    This adds a whole other dimension to mapping applications for plotting areas and recording information against these areas.","New Feature",Low,Closed,"2011-04-15 03:14:16","2011-04-15 03:14:16",34
"The Titanium SDK ","Android: Re-enable incremental build","Before all of our new changes for stylesheet and RA.java code generation we knew when new Java code was generated so we could skip the javac and dex parts of the APK building <USER> We need to go back through and make sure to only dex/javac when necessary.",Bug,Low,Closed,"2011-04-15 03:13:36","2011-04-15 03:13:36",3
"The Titanium SDK ","Android: Support Scroll Event on Tableview","{html}<div><p>Should fire the standard event.</p></div>{html}    ","New Feature",Medium,Closed,"2011-04-15 03:11:12","2011-04-15 03:11:12",0
"The Titanium SDK ","Android: Implement Video Recording",{html}{html},"New Feature",Medium,Closed,"2011-04-15 03:11:06","2011-04-15 03:11:06",3
"The Titanium SDK ","Android: border properties broken for Label","{html}<div><p>Adding border:1, borderColor:'black' to a label works fine on  1.4.1 under iOS, but not on 1.4.2 under Android. Under android, the  entire label is blacked out, instead of a border being placed  around the label.</p></div>{html}",Bug,Medium,Closed,"2011-04-15 03:10:25","2011-04-15 03:10:25",1
"The Titanium SDK ","Android: WebView No Longer Fires Click Event","{html}<div><p>Bill triaged the problem.</p> <p>In April you added this code to disallow registering for touch on the WebView:</p> <p><a href= http://github.com/<USER>titanium_mobile/commit/d47e4e06456d033af0eede50469633054bfc65cc#L1R149> http://github.com/<USER>titanium_mobile/commit/d47e4e06456d0...</a></p> <p>I'm going to mark this as a regression since I didn't comment on the commit well enough to know if I disabled it on purpose. Will need to check interference with clickable items in a webview and scrolling.</p></div>{html}",Bug,Medium,Closed,"2011-04-15 03:08:13","2011-04-15 03:08:13",1
"The Titanium SDK ","iOS: Scrollview can scroll to much on ipad when keyboard is up","{html}<div><p>This can be recreated in KS Controls&gt;Text Field&gt;Border  Style.</p></div>{html}",Bug,High,Closed,"2011-04-15 03:05:07","2011-04-15 03:05:07",1
"The Titanium SDK ","Android: Fix AVD naming scheme","{html}<div><p>The current script for naming AVDs is based on the download order of the emulators. For instance if you download API 4 and API 8 and run the API 8 emulator. Then later you download the Google API emulator 4. It will launch the API 8 emulator.</p> <p>If possible, we should also try and detect that the problem exists in their environment and fix the AVDs name to the new solution based on the contents of the AVD configuration file.</p></div>{html}",Bug,Low,Closed,"2011-04-15 03:04:26","2011-04-15 03:04:26",2
"The Titanium SDK ","iOS: Clear button does not show when paddingRight is used in text field","{html}<div><p>Code below shows this. Happens on iPhone and iPad:</p>  <p>var win = Ti.UI.currentWindow;<br>  var input1 = Ti.UI.createTextField({<br></p>  <pre>  <code>hintText:'e.g. 30000  ',  height:35,  width:120,  borderColor:'#000',</code>  </pre>  <p>// COMMENT OUT THIS LINE AND THE CLEAR BUTTON WILL SHOW</p>  <pre>  <code>paddingRight:5,</code>  </pre>  <p>//END</p>  <pre>  <code>textAlign: 'right',  font:{fontSize:15},  color:'#000',  returnKeyType:Titanium.UI.RETURNKEY_DONE,  clearButtonMode:Titanium.UI.INPUT_BUTTONMODE_ONFOCUS,  keyboardType:Titanium.UI.KEYBOARD_NUMBERS_PUNCTUATION</code>  </pre>  <p>}); win.add(input1);</p></div>{html}",Bug,Low,Resolved,"2011-04-15 03:03:49","2011-04-15 03:03:49",1
"The Titanium SDK ","iOS: Analytics causes app crash when no network is available - iphone","{html}<div><p>A customer reports that if analytics is enabled and no network  (cell or wifi) causes a crash. I cannot reproduce this but at the  request of the customer I am logging this ticket so we can  investigate further.</p></div>{html}",Bug,High,Closed,"2011-04-15 03:02:44","2011-04-15 03:02:44",2
"The Titanium SDK ","Android: Allow OptionDialog to not Have Radiobuttons","{html}<div><p>See <a href= http://developer.<USER>com/helpdesk/view/42631>Helpdesk 42631</a> basically provide a configuration option that allows hiding the radiobuttons that appear on the option dialog if possible.</p></div>{html}","New Feature",Low,Closed,"2011-04-15 03:02:34","2011-04-15 03:02:34",0
"The Titanium SDK ","Ti.UI.View center property not implemented on Android, no warning in documentation","{html}<div><p>Docs for Ti.UI.View and its fellow view types lists a center property:</p> <p><a href= https://developer.<USER>com/apidoc/mobile/latest/Titanium.UI.View-object> https://developer.<USER>com/apidoc/mobile/latest/Titanium.UI...</a></p> <pre> <code>center   object      a dictionary with properties x and y to indicate the center of the views position relative to the parent view</code> </pre> <p>This property is very useful for positioning things under, over, or next to other views, however it appears to be unimplemented on Android.</p> <pre> <code>/*  * This code demonstrates the missing center property on Android...  * on iPhone shows: 160, 230  * on Android shows: wtf? null  */  var window = Titanium.UI.createWindow({ }); var button = Titanium.UI.createButton({     title: Where am I?,     width: 200,     height: 50 }); button.addEventListener('click', function() {     var center = button.center;     var msg;     Ti.API.info('center: ' + center);     if (center) {         Ti.API.info('center.x: ' + center.x);         Ti.API.info('center.y: ' + center.y);         msg = center.x + ', ' + center.y;     } else {         msg = 'wtf? ' + center;     }     button.title = msg; }); window.add(button); window.open();</code> </pre> <p>Changing it to check an actual 'View' object makes no difference; View, Button, and Label have all been tested, and there's no sign of a 'center' property implementation in the titanium_mobile/android source tree.</p></div>{html}","New Feature",Trivial,Closed,"2011-04-15 03:01:56","2011-04-15 03:01:56",0
"The Titanium SDK ","Android: Implement Dashboard","{html}<div><p>iPhone added a dashboard control. We need to support it.</p></div>{html}","New Feature",Medium,Closed,"2011-04-15 03:00:30","2011-04-15 03:00:30",0
"The Titanium SDK ","Feature: interactive console","It would be great to have a javascript-based interactive console to your running app along the lines of http://probablyinteractive.com/2010/8/20/ios-interactive-console.html.","New Feature",Low,Closed,"2011-04-15 02:59:18","2011-04-15 02:59:18",1
"The Titanium SDK ","Android Market Licensing Service","h5. Implement Android Market Licensing Service, which is available to all paid apps on the Android Market.    http://developer.android.com/guide/google/play/licensing/index.html","New Feature",Low,Closed,"2011-04-15 02:56:23","2011-04-15 02:56:23",0
"The Titanium SDK ","Android: Ti.Geolocation doesn't work from app.js","{html}<div><p>On android (at least the emulator), geolocation services will always appear false when called from app.js.</p> <p>This<br> <code>Ti.API.warn('Ti.Geolocation.locationServicesEnabled:'+Titanium.Geolocation.locationServicesEnabled);</code> always displays 'false' from app.js, while displaying 'true' from an open window.</p></div>{html}",Bug,Low,Closed,"2011-04-15 02:56:11","2011-04-15 02:56:11",1
"The Titanium SDK ","TiAPI: tableViewRow subtitle","{html}<div><p>Support for the UITableViewRow  initWithStyle:UITableViewCellStyleSubtitle by adding a property  named subtitle to the tableView object.</p>  <p>This would make it easy to create the default title + subtitle  tables many apps use.</p></div>{html}","New Feature",Trivial,Closed,"2011-04-15 02:55:50","2011-04-15 02:55:50",0
"The Titanium SDK ","iOS: add textAlign and verticalAlign support for buttons","{html}<div><p>This was implemented for android as ticket 1479.</p>  <p>support on butons for:</p>  <p>Titanium.UI.TEXT_ALIGNMENT_LEFT<br>  Titanium.UI.TEXT_ALIGNMENT_CENTER<br>  Titanium.UI.TEXT_ALIGNMENT_RIGHT<br>  Titanium.UI.TEXT_VERTICAL_ALIGNMENT_TOP<br>  Titanium.UI.TEXT_VERTICAL_ALIGNMENT_CENTER<br>  Titanium.UI.TEXT_VERTICAL_ALIGNMENT_BOTTOM</p>  <p>there is a test casein kitchenSink at</p></div>{html}",Bug,Low,Closed,"2011-04-15 02:54:52","2011-04-15 02:54:52",0
"The Titanium SDK ","iOS: Photo viewer","{html}<div><p>Titanium could really use a photo viewer built-in.</p>  <p>I have a lot of projects that needs a photo viewer, right now I  use a webview with a html/css photoviewer.</p>  <p>(I know you have the coverflow thingy, but it's not very usable  for photographs).</p>  <p>Something like the Three20 photo viewer would be awesome:  <a href=  http://github.com/facebook/three20>http://github.com/facebook/three20</a></p>  <p>It's open source, so maybe you can just use that?</p></div>{html}","New Feature",Low,Closed,"2011-04-15 02:54:22","2011-04-15 02:54:22",0
"The Titanium SDK ","TiAPI: Unable to set offset when using custom pins on mapview","{html}<div><p>So ticket <a href=/projects/32238/tickets/1197 title=  Ticket #1197>#1197</a> added support for custom pin images on  mapviews, which works awesome. However, there's currently no way to  set the centerOffset which means that the top of the image is  always aligned with the point on the map. That might work well for  some custom pin images, but if I actually use an image of a pin for  the custom pin image (imagine that :p) then the offset is wrong. If  I zoom in on it I see the head of the pin is attached to the point  on the map rather than the base of the pin (which is what should  be).</p>  <p>The solution is pretty simple, if <a href=  http://stackoverflow.com/questions/1185611/mkpinannotationview-are-there-more-than-three-colors-available/2945217#2945217>  http://stackoverflow.com/questions/1185611/mkpinannotationview-are-...</a>  is correct: you just need to allow us to set  MKAnnotationView.centerOffset when using a custom image. Could this  be included in 1.5.0?</p>  <p>(I'm a subscriber)</p></div>{html}","New Feature",Low,Closed,"2011-04-15 02:54:04","2011-04-15 02:54:04",0
"The Titanium SDK ","Android: Using _ For Assets in Path Prevents Loading","If you try and include a .js, or .css file from a path that starts with _ (e.g. _shared) it fails to load. Remove the underscore and it works.    Documenting, it may be a WebKit issue.",Bug,Low,Resolved,"2011-04-15 02:53:59","2011-04-15 02:53:59",1
"The Titanium SDK ","iOS: add support for textAlign on button","{html}<div><p>add support to be able to align text using textAlign property  for a button</p></div>{html}",Bug,Low,Closed,"2011-04-15 02:53:53","2011-04-15 02:53:53",0
"The Titanium SDK ","iPad - OptionsDialog - fails to display last option / height bug","{html}<div><p>Just created a new two button optiondialog on an ipad  webview.</p>  <p>when it is shown on the page only the first of the options is  shown</p>  <p>var dialog = Titanium.UI.createOptionDialog({<br></p>  <pre>  <code>    title: 'you have options',      options: ['option 1','option 2'],      destructive:0,      cancel:1  });</code>  </pre>  <p>dialog.show();</p>  <p>if you place a third option the resulting optiondialog has 1 and  a half buttons,</p>  <p>var dialog = Titanium.UI.createOptionDialog({<br></p>  <pre>  <code>    title: 'you have options',      options: ['Option 1','Option 2',''],      destructive:0,      cancel:1  });</code>  </pre>  <p>dialog.show();</p>  <p>images attached for your convenience</p></div>{html}",Bug,Low,Closed,"2011-04-15 02:53:01","2011-04-15 02:53:01",1
"The Titanium SDK ","Android: setUrl in AudioPlayer not working","Can't dynamically change the url of the audio player. The streamer.url variable does change, but it seems as if the url is cached somewhere, such that if you play again, the same audio will play (not the updated url). Here's the proof/test code of app.'s to show this bug.    http://pastie.org/1051158>http://pastie.org/1051158",Bug,Low,Resolved,"2011-04-15 02:50:19","2011-04-15 02:50:19",0
"The Titanium SDK ","Audio Seeking and Buffering","{html}<div><p>I would like to have the possibility to control the seek function with the media comp,<br> i also would be glad if i could play with buffer option to stream better my music.</p> <p>thank you in advance,<br> my compliments to the great <USER>team.<br> <USER>/p></div>{html}","New Feature",Low,Closed,"2011-04-15 02:47:33","2011-04-15 02:47:33",0
"The Titanium SDK ","iOS: Label background disappears in tableRow on selection","{html}<div><p>Label in a tableRow has a background color set.<br>  On tableRow selection the background of the Label disappears  regardless of the label colour used.</p>  <p>See two states in <a href=http://yfrog.com/jmujcp>this  image</a></p>  <p>On deselection the background color of the Label waits for the  tableRow selection to fade out completely before redisplaying.</p>  <p>I'm sure this is just a z sorting issue but it looks like the  tableRow selection is overriding any text label backgrounds.</p></div>{html}",Bug,Low,Closed,"2011-04-15 02:47:32","2011-04-15 02:47:32",0
"The Titanium SDK ","iOS: Drag and drop map pin annotations","{html}<div><p>MKAnnotationView has support for allowing a map annotation to be  draggable (in iOS 4).<br>  Boolean property on Annotation object - draggable:true/false<br>  Add associated Events - e.g. DragStart &amp; DragEnd etc.</p></div>{html}","New Feature",High,Closed,"2011-04-15 02:47:30","2011-04-15 02:47:30",5
"The Titanium SDK ","Android: Titlebar is displayed when fullscreen splash screen is used.","{html}<div><p>There are a couple of possibly related problems with trying to  run a fullscreen application in Android. The first is with the  splash screen. There should be a way to have the splash screen  display on the whole screen, but this is not the case despite the  tiapp.xml configuration in this screenshot which shows both the  emulator and the code:</p>  <p><a href=  http://skitch.com/<USER>dgmps/fullscreen>http://skitch.com/<USER>dgmps/fullscreen</a></p>  <p>Also, once the app launches, you should be able to open a window  fullscreen with no title - this would be necessary for an app to go  totally fullscreen:</p>  <p><a href=  http://skitch.com/<USER>dgmp7/fullscreen>http://skitch.com/<USER>dgmp7/fullscreen</a></p></div>{html}    h5. Test Code      h5. Expected behavior  The splash screen should be displayed full screen with no title bar    h5. Actual behavior  The title bar, is displayed. During build the theme.xml gets reset, causing the title bar to be displayed.  h5. Work-around    There is a workaround posted in community Q and A.  out one way to resolve this problem. 1) Create folders <your project>\platform\android\res\values (see KitchenSink folder structure) 2) Put in folder values the file theme.xml modifyed (i.e. )  ",Bug,Medium,Closed,"2011-04-15 02:43:59","2011-04-15 02:43:59",2
"The Titanium SDK ","iOS: Numeric and phone keypads have no return key and can't be easily dismissed on iPhone","{html}<div><p>numeric and phone keypads have no return key</p>  <p>see discussion here:</p>  <p><a href=  http://developer.<USER>com/question/30821/add-a-done-button-to-phone-keyboard#65051>  http://developer.<USER>com/question/30821/add-a-done-button-...</a></p>  <p>possible solution suggested here:</p>  <p><a href=  http://stackoverflow.com/questions/584538/how-to-show-button-done-on-number-pad-on-iphone>  http://stackoverflow.com/questions/584538/how-to-show-button-done-o...</a></p></div>{html}","New Feature",None,Closed,"2011-04-15 02:43:09","2011-04-15 02:43:09",0
"The Titanium SDK ","iOS: Support image view aspect fill"," See https://developer.<USER>com/question/23931/imageview-scaling-mode","New Feature",Low,Closed,"2011-04-15 02:39:35","2011-04-15 02:39:35",0
"The Titanium SDK ","Android: Border properties are broken for ImageView",,Bug,Medium,Closed,"2011-04-15 02:34:22","2011-04-15 02:34:22",2
"The Titanium SDK ","Android: Support custom annotation views on maps","{html}<div><p>from this premium support ticket:</p>  <p><a href=  http://helpdesk.<USER>net/tickets/1661>http://helpdesk.<USER>net/tickets/1661</a></p></div>{html}","New Feature",Low,Closed,"2011-04-15 02:33:59","2011-04-15 02:33:59",0
"The Titanium SDK ","Android: TabGroup stops window being re-shown","start with a standalone window that fires an event, a listener  in app.js then closes the window and opens a tabgroup (think logon  window) - all good.    the tabgroup fires an event which is listened to in app.js which  closes the tabgroup and opens the initial window. This fails - the  tabgroup goes away, logging shows the original window is being  re-built, but it is never shown. It is shown in iPhone.    Pseudo code for app.js...        * Should this work?  * Should I raise this sort of thing as a query or ask in the forums in future?  ",Bug,Low,Closed,"2011-04-15 02:33:13","2011-04-15 02:33:13",0
"The Titanium SDK ","Android: Appversion never taken from tiapp.xml","I found this bug while I created new release for Android Market.    appversion is never changed from tiapp.xml file (version tag). I send you patch to correct this, to apply on 1.0.0/android/android.py",Bug,Medium,Closed,"2011-04-15 02:31:55","2011-04-15 02:31:55",3
"The Titanium SDK ","Android: Missing Icons","Android images need to be copied for some icons. They're not being exposed via android.R.    DONE, Refresh, and a few others.    UPDATE!    What needs to happen is we need to expose whatever system icons via Titanium.Android.R.",Bug,Low,Closed,"2011-04-15 02:27:30","2011-04-15 02:27:30",3
