Name,Title,Description,Type,Priority,Status,Creation_Date,Estimation_Date,Story_Point
"Command-Line Interface","Update to acs 2.1.10","h5.Description    Update the acs package from 2.1.8 to 2.1.10.    We will need to update the {{appc login}} command to write to the new acs config file at {{~/.axway/acs/acs.json}} -as well as the old location- instead of the old location",Story,High,"In Review","2020-10-20 16:10:59","2020-10-20 16:10:59",3
"Command-Line Interface","Update to titanium cli 5.2.3","We discovered a bug where symlinks in the Titanium SDK zip would not be preserved on extraction, this is important for 9.2.0 where xcframeworks make extensive use of symlinks internally.    Updating to titanium cli 5.2.3 will fix this",Story,High,Closed,"2020-09-14 17:17:02","2020-09-14 17:17:02",1
"Command-Line Interface","Always prompted for iOS code base on modules even if set","h5.Description    When providing the {{--ios-code-base}} option it will still be prompted for, it should not be prompted for if it wasnt provided    h5.Steps to reproduce    1. Select an SDK >= 9.1.0 and run {{appc new --type timodule --name testmodule --id com.awam --project-dir /Users/awam/Desktop/Test/testmodule --platforms ios,android --no-prompt --log-level info --android-code-base kotlin --ios-code-base objc}}=    h5.Actual    Prompted for iOS code base    h5.Expected      No prompt",Bug,High,Closed,"2020-09-09 15:47:46","2020-09-09 15:47:46",1
"Command-Line Interface","Allow passing template option through when creating a classic application","h5.Description    To support the creation of webpack enabled classic projects we want to allow passing the {{--template}} option through to classic applications too, currently the code will not pass the template option through to the {{titanium create}} command only to the {{alloy new}} command",Improvement,High,Closed,"2020-07-17 18:32:48","2020-07-17 18:32:48",5
"Command-Line Interface","Improve handling of no MBaaS entitlement","h5.Description    When creating a new project we will try to create a MBaaS resource, it seems that his creation is completely unguarded in terms of whether the user has access to MBaaS, and results in an ugly and confusing error being thrown like the below. We should improve this so that we don't create an MBaaS resource if they don't have access, and maybe logging if not entitled?    ",Improvement,None,Closed,"2020-04-28 19:42:03","2020-04-28 19:42:03",5
"Command-Line Interface","Android: Packaging an unregistered app does not encrypt files","h5. Steps to reproduce:  1. Make sure the project it not registered to your org.  2. Try to package (production build) the project for android distribution.  3. Unzip the {{.apk}} file & check the contents in {{./assets/resources}}.    h5. Actual results:  1. The {{app.js}} and other files are not encrypted.    h5. Expected results:  2. The {{app.js}} and other files should be encrypted.",Bug,None,Closed,"2020-02-19 23:36:56","2020-02-19 23:36:56",3
"Command-Line Interface","Remove API Builder (arrow) in 8.0.0","API Builder 3 will be EOL at the end of April 2020 and has been deprecated in the 7.x CLI already. Since the 7.x CLI is supported past this EOL date we should be able to get away with cleaning up the 8.0.0 release with a breaking change to remove it, making the footprint significantly smaller.    [~cmcgovern] has approved this decision.  ",Story,None,Closed,"2020-01-15 10:44:52","2020-01-15 10:44:52",3
"Command-Line Interface","No watchos simulators shown in studio","h5.Description    Update ioslib to v2.5.3 to pull in the fix for DAEMON-306 ",Bug,None,Resolved,"2019-11-21 14:00:37","2019-11-21 14:00:37",1
"Command-Line Interface","Update to daemon 3.x","We should ship the long awaited appcd 3.X line with CLI 8.0.0, this is already being tracked in the next branch but this makes it official",Story,High,Closed,"2019-11-15 15:59:16","2019-11-15 15:59:16",3
"Command-Line Interface","For Push in Preproduction & Older environments require '/v1' extension for acs-base URL","For Push in Preproduction & Older environments require '/v1' extension for acs-base URL.    If we change:     to       in the tiapp.xml. titanium in preprod will create URL successfully and ti.cloudpush will not throw an error. This is not the case in production where '/v1' is not needed.    but against Production it seems as per my tests we dont need to add '/v1' to the tiapp.xml.",Story,High,Resolved,"2019-10-21 11:37:02","2019-10-21 11:37:02",1
"Command-Line Interface","Remove longjohn dependency","We use [longjohn|https://www.npmjs.com/package/longjohn] in our CLI to improve stack traces for async code. However, longjohn has quite a few negative impacts and shouldn't be used in procution code, mainly due to performance reasons.    Additionally longjohn has issues with source maps, which we now try to parse in our JS processing build step. This can lead to obscured error messages coming from longjohn instead of the original error, e.g. missing or corrupt source map.    We should remove longjohn to avoid all of the above issues in our shipped CLI.",Improvement,None,Closed,"2019-09-13 17:07:37","2019-09-13 17:07:37",1
"Command-Line Interface","Daemon: update to ioslib 2.5.1 to support apple certificate detection","ioslib was updated in TIMOB-27358 to support detecting the new apple certs, we need to update ioslib in the daemon to support detecting these so Studio can show them",Improvement,High,Closed,"2019-09-03 10:32:57","2019-09-03 10:32:57",1
"Command-Line Interface","Daemon: Can't detect iOS 13 simulators","h5.Description    DAEMON-282 needed an update to ioslib 2.x detection which is used by appcd, we need to update to 2.5.0 of ioslib, but do so surgically so we dont bring in a ton of changes and risk",Bug,Critical,Closed,"2019-08-14 17:49:18","2019-08-14 17:49:18",3
"Command-Line Interface","When commenting out modules in the Tiapp.xml and running a build all modules move to one line","*Test Steps*  # Create a new Titanium application using an SDK > 8.0.0.GA (In this instance 8.0.2.GA was used)  # Open the {{Tiapp.xml}}  # Add some modules  # Comment out the modules in the {{Tiapp.xml}}  # Run the app    *Expected result:*   Each module should be on a separate line like:    *Actual result:*  All modules are shown in one line like:      ",Bug,None,Closed,"2019-07-05 14:19:51","2019-07-05 14:19:51",3
"Command-Line Interface","Compiling platform native modules contains more packages than necessary","h5.Description    The CLI uses the existence of a postinstall step as a method of determining that a module is a native module. This isn't always the case as packages such as core-js use this as a method of gathering contributions, this doesn't cause any problems but it's a minor cosmetic issue and might cause a slight speed reduction in install time    ",Bug,Medium,Resolved,"2019-06-12 14:05:36","2019-06-12 14:05:36",3
"Command-Line Interface","Android appc run will always trigger rebuild if tiapp.xml is missing encryption policy property","*Summary:*  If the tiapp.xml file is missing property appc-sourcecode-encryption-policy, then an Android appc run will alway trigger a *rebuild*.    This is preventing incremental Android builds from working.    *Steps to reproduce:*  # Create a default Alloy or Classic app from template.  # Build for Android via: {{appc run -p android --build-only}}  # Build for Android again using the above command line.  # In the build log, notice the following message    {code}  [INFO]  Forcing rebuild: JavaScript files need to be re-encrypted  {code}    *Cause:*  The CLI's {{precompileHook()}} code is wrongly setting the {{AndroidBuilder}} object's encryptJS property to {{undefined}} if the appc-sourcecode-encryption-policy property was not found. This code should *+only+* set the encryptJS field to {{true}} if the encryption policy was found and set to remote. Otherwise, it should leave the encryptJS field alone.  [titanium.js#precompileHook()|https://github.com/appcelerator/appc-cli-titanium/blob/cd6a63dbeac0cb6a2327f24e6b2f2e53a54b2984/hook/titanium.js#L216]    *Work-around:*  Add the following property to the tiapp.xml file.  {code:xml}  <?xml version=1.0 encoding=UTF-8?>  <ti:app xmlns:ti=http://ti.appcelerator.org>   <property name=appc-sourcecode-encryption-policy type=string>none</property>  </ti:app>  {code}",Bug,Medium,Closed,"2019-06-11 04:11:36","2019-06-11 04:11:36",3
"Command-Line Interface","Include alloy 1.14.0","h5.Description    We want to include alloy 1.14.0 in the cli 7.1.0 release. Initially we will include the prerelease version {{1.14.0-0}} and then when we're ready we'll cut the release of alloy and include that in the cli.    We will need PRs for appc-cli and appc-cli-titanium",Story,None,Closed,"2019-06-06 13:37:20","2019-06-06 13:37:20",1
"Command-Line Interface","Reduce time to check Titanium downloads","- Currently, the CLI checks Titanium downloads when a {{new}} or {{run}} occurs after a 24 hour period.  - This is too long, it should re-check after thirty minutes so customers can receive the latest modules shortly after being released.",Bug,None,Closed,"2019-04-19 19:09:42","2019-04-19 19:09:42",3
"Command-Line Interface","Update to latest arrow version","h5.Description    API Builder team will be updating arrow to handle the recent change to the iconset dashboard ships. We should include this version, the version number is unknown at this time, and it might contain some security fixes too    cc [~<USER>",Story,Medium,Closed,"2019-04-02 11:30:37","2019-04-02 11:30:37",1
"Command-Line Interface","Support passing a custom template directory to alloy new command","h5.Description    ALOY-1632 introduced passing a path to a template to the {{alloy new}} command. It would be good to bubble this up to the appc cli. There is an existing {{\-\-testapp}} option that can be used, but it might be better to go with something like {{\-\-template-path}}, it should be clear that this option is only used for Alloy projects",Improvement,Medium,Closed,"2019-03-20 10:13:33","2019-03-20 10:13:33",1
"Command-Line Interface","componentForDownload is not defined error when running a project","h5.Description    I tried to build a project, and hit the following error        h5.Steps to reproduce    1. Remove the {{lastUpdateCheckTiDownloads}} property from the appc-cli.json  2. Build a project using {{appc run}}    h5.Actual    Above error    h5.Expected    No error should occur",Bug,None,Closed,"2019-02-20 13:43:48","2019-02-20 13:43:48",1
"Command-Line Interface","Improve the CLI install flow","h5.Description    Currently the CLI install process does the following looks for packages that contains native modules and reinstall them. For example, appcd contains a native module, so whenever I download the appc cli, the appcd version in the CLI is reinstalled.    We have mostly operated on the basis that a CLI distribution is locked down, but by reinstalling a package we're effectively recreating the dep tree underneath that package, leading to issues like DAEMON-270    I propose that rather than reinstalling the package, we take a similar approach to what's done elsewhere in the CLI where we run {{npm rebuild}} in the root dir. This has two advantages    1) CLIs become locked down again as we're just rebuilding native modules, not reinstalling  2) A CLI install becomes much faster I believe, on my machine a rebuild is way faster than an install",Improvement,None,Closed,"2019-02-12 22:34:08","2019-02-12 22:34:08",5
"Command-Line Interface","Running Api builder throws Cannot find module error/CLI 7.0.10 MASTER -6 &7.0.10 master-7","*Steps To reproduce:*  1.Create a new API builder app from cli  2.Run api builder app    Actual:  error requiring package: /Users/<USER>Documents/Appcelerator_Studio_Workspace/testbu/app.js { Error: Cannot find module 'json-pointer'      at Function.Module._resolveFilename (module.js:548:15)      at Function.Module._load (module.js:475:25)      at Module.require (module.js:597:17)      at require (internal/module.js:11:18)      at Object.<anonymous> (/Users/<USER>.appcelerator/install/7.0.10-master.6/package/node_modules/arrow/node_modules/arrow-admin-api/dist/endpoints/mockUtils.js:10:19)      at Module._compile (module.js:653:30)      at Object.Module._extensions..js (module.js:664:10)      at Module.load (module.js:566:32)      at tryModuleLoad (module.js:506:12)      at Function.Module._load (module.js:498:3) code: 'MODULE_NOT_FOUND' }  *Expected:*  Api should run successfully    *Commands:*      NOte:  with cli7.0.9 it works fine and with cli 7.0.10 MASTER 7 getting cannot find module 'path-to-regexp' added screenshot for reference",Bug,High,Closed,"2019-02-06 00:06:16","2019-02-06 00:06:16",10
"Command-Line Interface","Packaging module with CLI 7.0.10-master.7  throws uncaught exception error","*Steps To Reproduce:*  1.Create a new mobile module project from command line  2. Build it  for android or iOS from CLI    *Expected:*  Module should be packaged successfully.    *Actual:*  2019-02-05T23:09:08.817Z | DEBUG  | Titanium Downloads Last Checked: 1549391907761  2019-02-05T23:09:08.817Z | ERROR  | An uncaught exception was thrown!  tiapp.xml not found  2019-02-05T23:09:08.818Z | ERROR  | tiapp.xml not found  2019-02-05T23:09:08.818Z | TRACE  | Error: tiapp.xml not found      at Object.load (/Users/<USER>.appcelerator/install/7.0.10-master.7/package/node_modules/tiapp.xml/lib/tiapp.xml.js:57:9)      at updateConfig (/Users/<USER>.appcelerator/install/7.0.10-master.7/package/node_modules/appc-cli-titanium/plugins/run.js:68:26)      at Object.getTiConfig (/Users/<USER>.appcelerator/install/7.0.10-master.7/package/node_modules/appc-cli-titanium/plugins/util.js:177:9)      at /Users/<USER>.appcelerator/install/7.0.10-master.7/package/node_modules/appc-cli-titanium/plugins/run.js:44:8      at /Users/<USER>.appcelerator/install/7.0.10-master.7/package/node_modules/appc-cli-titanium/plugins/util.js:713:11      at fn (/Users/<USER>.appcelerator/install/7.0.10-master.7/package/node_modules/async/lib/async.js:746:34)      at /Users/<USER>.appcelerator/install/7.0.10-master.7/package/node_modules/async/lib/async.js:1213:16      at /Users/<USER>.appcelerator/install/7.0.10-master.7/package/node_modules/async/lib/async.js:166:37      at /Users/<USER>.appcelerator/install/7.0.10-master.7/package/node_modules/async/lib/async.js:706:43      at /Users/<USER>.appcelerator/install/7.0.10-master.7/package/node_modules/async/lib/async.js:167:37    Command used:      *Note:*  This is not happening with 7.0.10 master 6 CLI    ",Bug,High,Resolved,"2019-02-05 23:37:30","2019-02-05 23:37:30",2
"Command-Line Interface","Android: Setting appc-sourcecode-encryption-policy to remote crashes on startup as of 7.3.0","This issue was reported via the [7.3.0 announcement blog post|https://www.appcelerator.com/blog/2018/08/ga-release-titanium-sdk-7-3-0-cli-7-0-5/]:    {quote}  App fail to run with the following error    [ERROR] : V8Exception: Exception occurred at ti:/invoker.js:101: Uncaught Error: abstract method “java.lang.String[] org.appcelerator.kroll.util.KrollAssetHelper$AssetCrypt.getAssetPaths()”  {quote}",Bug,None,Closed,"2018-08-24 07:54:29","2018-08-24 07:54:29",13
"Command-Line Interface","Login error when using Node 10 in Windows","On a fresh Windows 10 installation I've installed Node 10, Java 8, the Android SDK and the Appcelerator parts with {{npm install -g appcelerator titanium alloy}}. The open source version works fine but when trying to login to my appc account it will stop during the login part.    *appc info*        When running {{appc -l trace setup}} or {{appc -l trace login}} the login will stop at:  {quote}  Get the registry...  {quote}    *Workaround*  Commenting out these lines:    in install\7.0.9\package\lib\commands\login.js will skip the registry part and the login will continue up to the end.",Bug,Critical,Closed,"2019-01-03 18:44:18","2019-01-03 18:44:18",5
"Command-Line Interface","Failed to register an app for test services when using JDK 11 ","h5.Description    When using JDK 11 test services fail to get enabled with the following error, this is because the jar uses the java.activation module which was deprecated in JDK 9 and is now removed. CLI-1311 added the compatibility for JDK 9 but as they are removed this is no longer valid.    Personally I think we should detect if the user is using JDK 11 and then error/warn that test cannot be enabled using that JDK version as test is now only supported for orgs with existing subscriptions        h5.Steps to reproduce    1. Install JDK 11  2. Make sure it is your active version (check using {{appc ti info -t jdk}}) you can enable it via JAVA_HOME or {{appc ti config java.home <path>}}  3. Create an app in an enterprise org with test enabled (e.g. qe enterprise orgs) and enable test    h5.Actual    Error occurs    h5.Expected    Unsure, I don't believe we can (or even should) make it work for JDK 11 so I believe we should error/warn that JDK 11 and test are not compatible ",Bug,None,Closed,"2018-10-04 13:29:46","2018-10-04 13:29:46",3
"Command-Line Interface","appc use --prerelease -o json will try to download version json","h5.Description    When running {{appc use --prerelease -o json}} or {{appc use --prerelease --output json}} the cli will try to download a core version of json, using {{appc use -o json --prerelease}} or {{appc use --output json --prerelease}} will do the correct thing and list the version info.    h5.Steps to reproduce    1. Run {{appc use --prerelease -o json}}    h5.Actual    An attempt is made to download version json    h5.Expected    The version info should be listed",Bug,Medium,Closed,"2018-09-18 07:57:34","2018-09-18 07:57:34",3
"Command-Line Interface","AppC CLI --no-prompt flag broken.","I run this following command in appcelerator CLI:       Expected behavior:       But I'm getting this from CLI:       I did not get return any error code.   Instead, CLI prompts me to get logged in once again.  Though I did check it in 7.0.6, I have got same results. ",Bug,Critical,Closed,"2018-09-12 18:27:29","2018-09-12 18:27:29",1
"Command-Line Interface","Fix tar extraction method","- Our core CLI {{tar}} bundles are failing to extract on Windows  - To fix this we can simplyify the {{targz}} method in the installer to only use the {{tar}} module",Bug,Critical,Closed,"2018-08-24 05:09:35","2018-08-24 05:09:35",3
"Command-Line Interface","Bump min-appc-version to 4.2.14-1","Bump min-appc-version to enforce fixes for CLI-1324    Expected to see following warnings when running appc commands:  ",Improvement,None,Reopened,"2018-08-23 19:16:20","2018-08-23 19:16:20",1
"Command-Line Interface","[Windows] Unable to install latest version of the CLI (7.0.6-master.5)","When trying to install latest version of the CLI on pre-prod the installation seems to get stuck.    *Test Steps*  # Make sure you are on pre-prod  # Use {{appc use --prerelease}} to see all releases   # Use {{appc use 7.0.6-master.5}} to get the latest version     *Expected*  CLI should install without any issues     *Actual*  CLI gets stuck on Installing    *Note:* Seems to have been broken since {{7.0.6-master.2}} on Windows. ",Bug,Critical,Closed,"2018-08-23 16:34:55","2018-08-23 16:34:55",8
"Command-Line Interface","Hyperloop: Windows platform is not added to tiapp.xml","{{<module platform=android>hyperloop</module>}} is only added on creation, if you add it after creation android and windows are added.    *Steps to reproduce*   # Create a new application in studio with services and hyperloop     *Error*    Only {{<module platform=android>hyperloop</module>}} is added on creation.     *Expected*    {{<module platform=windows>hyperloop</module>}} is not added on creation.",Bug,Medium,Closed,"2018-07-23 23:37:44","2018-07-23 23:37:44",1
"Command-Line Interface","Reduce number of vulnerabilities found by npm audit","h5.Description    Currently npm audit shows the following number of vulnerabilities, {{found 39 vulnerabilities (14 low, 15 moderate, 7 high, 3 critical) in 920 scanned packages}}. Note that some of these are only dev dependencies, but we should try and fix as many as possible. The npm audit output is pretty noisy so here's a reduced version of modules that will need updating, assume that the version bump is in range unless noted    ",Improvement,Medium,Closed,"2018-07-02 18:08:24","2018-07-02 18:08:24",5
"Command-Line Interface","ABC: Issue enabling cloud and performance services for new apps","H5.Customer created a new app called BackupTest in VPC-Prod today.   He selected enable Axway platform services but, cloud and performance services were not enabled. I tried to enable them again by clicking the enable services and still didn't work.   After clicking it 4 times, finally the performance is enabled but, the cloud is still not getting enabled.     He created another new app testBackup and this time it worked fine.   but is still not able to enable the cloud service for the previous app.    I've attached the configuration file for their environment.   ",Bug,High,Closed,"2018-04-19 19:06:30","2018-04-19 19:06:30",5
"Command-Line Interface","Can't start appc daemon with 7.0.3-master.36","This appears to be a regression. Not seen in 7.0.3-master.34.    I did not find any changes merged which would have caused this issue but not 100% sure.    h5.Steps to reproduce:  1. Install appc core 7.0.3-master.36.  2. Run . (Daemon was not running after I installed the core).    h5.Actual results:  1. Daemon start fails:  https://gist.github.com/lokeshchdhry/3340ef8fd04d074b7eb2838885234fdf    h5.Expected results:  1. Daemon should start successfully.",Bug,Critical,Closed,"2018-04-10 01:13:36","2018-04-10 01:13:36",1
"Command-Line Interface","Android: Fix/update soasta make app touch testable to work with java 9/10","This appears to be an issue with java 9/10. Works with java 8.    h5. Steps to reproduce:  1. Try to create a titanium app from CLI/studio.  2. When asked to enable test services enter yes.  3. Enter password when prompted.    h5.Actual result:  1. The test enablement fails:      h5.Expected result:  1. Test service should be successfully enabled.",Bug,None,Closed,"2018-03-30 18:53:28","2018-03-30 18:53:28",5
"Command-Line Interface","appc login no longer shows account lockout info after multiple failed logins","So i tried to login today using `appc login --username=<EMAIL> --password=xx` , and at one time it failed to help me out any further by outputting You do not have access privileges to view this content..    I was under the assumption the password was wrong. So i tried logging in on https://platform.appcelerator.com/ where I got the message Too many failed login attempts. Access has been denied for an hour.    It would be great if this would somehow show in the appc cli as well. Preferably with a time-remaining that indicates when i can retry login again.",Bug,Critical,Closed,"2018-03-28 16:12:22","2018-03-28 16:12:22",3
"Command-Line Interface","Include titanium@5.1.0 for CLI is unable to recognise JDK 9 fix","(Note JDK 9 is not supported yet, ticket is for reference)     When trying to set {{java.home}} in the CLI to JDK 9 using {{appc ti config java.home path/to/jdk}}. The CLI does not set it to JDK 9 and instead will revert back to 1.8. (switching from 1.7 to 1.8 and vice versa works as expected)    *Test Steps*  1. Download JDK 9   2. Use the CLI to set java.home to JDK 9 using {{appc ti config java.home path/to/jdk}}  3. Run {{appc info}}  4. Note that the CLI does not recognise it and reverts back to an older JDK version    *Actual result*  Should be able to switch to JDK 9. ",Bug,Critical,Closed,"2018-02-27 18:29:38","2018-02-27 18:29:38",1
"Command-Line Interface","'appc use' offline doesn't show installed versions","**Reproduce Step**  1. make sure you have appc core installed  2. run {{appc use}} offline    **Actual Result**  {{TypeError: Cannot read property 'version' of undefined}}    **Expected Output**  Installed appc core should be listed.  ",Bug,High,Closed,"2018-03-13 22:57:13","2018-03-13 22:57:13",2
"Command-Line Interface","Information link about replacing ArrowDB keys is dead","h5.Description    When importing an existing app using {{appc new --import}} a short-link is printed out that informs a user the impact of replacing arrowdb app keys in the tiapp, the page in 360 no longer exists. Side note that we also need to replace arrowdb/acs with MBS (I think?)    Link redirects to https://platform.axway.com/#/product/migrate-app        h5.Steps to reproduce    # Create an app with services enabled  # Import the app using {{appc new --import}}  # Go to the link printed to understand the impact of replacing arrowdb keys in the tiapp    h5.Actual    Dead link    h5.Expected    A link with information",Bug,None,Closed,"2018-02-26 21:13:03","2018-02-26 21:13:03",0
"Command-Line Interface","Error thrown when an uncaughtException is thrown by the CLI process","h5.Description    When an uncaughtException occurs in the CLI it's possible the CLI will actually error out with the below, we just need to check if logger exists before using it like the other instances.        h5.Steps to reproduce    # Cause an uncaught exception in the CLI (TODO)    h5.Actual    An error in our code is logged, causing us to lose the uncaughtException error    h5.Expected    Exception should be logged",Bug,None,Closed,"2018-02-26 17:20:44","2018-02-26 17:20:44",8
"Command-Line Interface","Bump min node version to 8.1.2 or 8.9.0 ( first LTS version)","h5.Description    There's an issue with Node 8.0.0 - 8.1.1 that is seen when building Titanium apps (https://github.com/archiverjs/node-archiver/issues/236) this is fixed in Node 8.1.2, I've seen a few people on slack be burned by this, I propose we bump our minimum required node in appc-install to either 8.1.2 or 8.9.1.",Improvement,Medium,Resolved,"2018-01-03 14:34:54","2018-01-03 14:34:54",0
"Command-Line Interface","registry.handleResponse does not handle the code returned from a platform call","h5.Description    In the appc.registry.handleResponse function of the appc-cli [here|https://github.com/appcelerator/appc-cli/blob/15276722f124cc573e4bb3c59ab5712f54b1473c/lib/registry.js#L451-L490], if there is an error it will return the body.id value to the function, however since the move to 360 this is no longer correct as it returns an object like {{\{message:Application not registered.,code:com.appcelerator.platform.app.notregistered,success:false\}}}, we should probably do something like body.id || body.code so we return the correct response from 360.",Bug,Medium,Closed,"2018-01-02 11:36:09","2018-01-02 11:36:09",1
"Command-Line Interface","npmconf causing errors when resolving plugins","The following error appears when running arrow tests. (which exec an appc run -l trace from a generated project) I never fully traced down the location of the issue in npmconf, but running the app generated by the tests directly does not show this error, so it's possibly something to do with the cwd.         These config options which are causing the error are npm defaults, however, and not set directly by me.  The error is being thrown by the npmconf module, which is now deprecated with warnings of _Do not use this package._.     While the suggested alternative is to use npm for this check, I don't feel like having npm as a dependency is a good idea, and I don't think that it is expected. Other packages seem to be using https://github.com/kevva/npm-conf instead.    I've created a branch which uses npm-conf instead of npmconf and this no longer throws errors or emits warnings. ",Bug,Medium,Closed,"2017-12-11 14:58:50","2017-12-11 14:58:50",3
"Command-Line Interface","Update AppPreview hook","https://jira.appcelerator.org/browse/PREVIEW-24    CLI needs to update {{appc-app-preview}} once the hook's URL is updated and ssl cert set up correctly.",Improvement,Medium,Closed,"2017-12-05 16:35:45","2017-12-05 16:35:45",1
"Command-Line Interface","CLI Core 7.0.0-master.34 fails to install ioslib/node-ios-device with error","h5.Steps to reproduce:  1. Go to preprod & run .    h5.Actual results:  1. Core installation goes well but it fails at installing {{ioslib/node-ios-device}}.      h5.Expected results:  1. Core installation should not error installing {{ioslib/node-ios-device}}.",Bug,Critical,Closed,"2017-11-21 07:41:48","2017-11-21 07:41:48",1
"Command-Line Interface","appc use must stop the daemon, if present, prior to switching core","We need {{appc use}} to stop the daemon prior to switching the core so that the old daemon code will no longer be used.    Here's the basic steps    1. Switch to the new core    2. Check if the new core has {{appcd}}      - If it does, run {{appcd stop}}  ",Improvement,Critical,Closed,"2017-11-20 13:47:10","2017-11-20 13:47:10",2
"Command-Line Interface","appc use pre-release versions are not listed numerically","This is triggering my ocd.      Perhaps an ascending sort will create a better experience. Especially when the list is long, it is a pain to keep scrolling up to see the latest version.  ",Improvement,Medium,Closed,"2017-11-17 05:53:06","2017-11-17 05:53:06",2
"Command-Line Interface","CLI: Cannot create projects when using 7.0.0-master.11","When using CLI 7.0.0-master.11, I am unable to create a new project. I get the below error:      *Steps to reproduce issue*  1. Create a new project with {{appc new}}  2. Enter valid project information    *Expected Results*  The project is created successfully    *Actual Results*  Project creation fails with the above error after entering the app id",Bug,Critical,Closed,"2017-11-14 23:34:18","2017-11-14 23:34:18",0
"Command-Line Interface","Include API Builder 3.*","Bump API Builder major version.",Improvement,Critical,Closed,"2017-11-14 22:29:47","2017-11-14 22:29:47",1
"Command-Line Interface","Android build always enables JavaScript encryption","Subsequent Android builds always have the {{encryptJS}} flag set to true when writing the build manifest, regardless of current deployment type.    *Steps to reproduce the behavior*  # Run a clean build  # Run the app a second time without any changes    *Actual behavior*  Second build and onwards always forces a full rebuild indicated by the following logs:      *Expected behavior*  The build does an incremental build instead of a full rebuild. The above log message should not appear.  ",Bug,None,Resolved,"2017-11-13 18:58:15","2017-11-13 18:58:15",1
"Command-Line Interface","Ti.Database.execute() should return null when no results are found","- Our current {{ti.database.test.js}} test case is failing  - {{Titanium.Database.execute()}} should return {{null}} when no results are found    *TEST CASE*  {code:js}  var db = Ti.Database.install('made.up.sqlite', 'category'),      rows = db.execute('pragma table_info(\'category\');');    Ti.API.info('rows: ' + JSON.stringify(rows, null, 2));    db.remove();  {code}",Bug,High,Closed,"2017-10-16 23:24:22","2017-10-16 23:24:22",3
"Command-Line Interface","Alloy: remove 'mobileweb' from config template","Remove occurrence of 'mobileweb' from alloy config template.",Improvement,None,Closed,"2017-10-17 00:38:36","2017-10-17 00:38:36",1
"Command-Line Interface","async function without callback warning when downloading hyperloop","h5.Description    Running appc with node 8.5.0 will emit a deprecation warning, tried to get the stack trace but nodes {{--trace-deprecation}} flag isn't getting passed down through all the subprocessing I think, based off the timing though pretty sure it's here https://github.com/appcelerator/appc-cli-titanium/blob/e39aed61b04d62508d26b93af57a8dd73869b5ee/plugins/util.js#L626        h5.Steps to reproduce    # Install node 8.5.0  # Remove latest hyperloop module and plugin  # Set lastUpdateCheckTiDownloads in appc-cli.json to null  # Run a build    h5.Actual    Deprecation warning    h5.Expected    No deprecation warning",Bug,Low,Closed,"2017-09-20 11:53:01","2017-09-20 11:53:01",1
"Command-Line Interface","appc cli include acs cli 2.0.6","We have just upgraded tiger to 1.6.0 and released latest acs cli 2.0.6. Can you please include the latest acs cli? ","New Feature",Critical,Closed,"2017-09-12 08:05:21","2017-09-12 08:05:21",0
"Command-Line Interface","Android: appc-security-jailbreak-detect and appc-sourcecode-encryption-policy property throw an error for the normal device.","h6.description    I would like to prevent jailbroken or rooted device to install our apps. According to the doc, we can set the jailbreak property to true, but the source code encryption need to be set to remote  - http://docs.appcelerator.com/platform/latest/#!/guide/tiapp.xml_and_timodule.xml_Reference-section-src-29004921_tiapp.xmlandtimodule.xmlReference-appc-security-jailbreak-detect    How would the source code encryption gets it keys then? How does it work?    I had added the property as per the doc                But it throws an error to the normal device. But not sure with the rooted device, I don't have rooted Android device.    h6.Steps To Reproduce    1. Create a new App  2. Add that property to the tiapp.xml file  3. Run it on the normal device      {code:title=error}  [ERROR] :  TiAssetHelper: Error while reading asset Resources/app.js:  [ERROR] :  TiAssetHelper: java.io.FileNotFoundException: Resources/app.js  [ERROR] :  TiAssetHelper:  at android.content.res.AssetManager.openAsset(Native Method)  [ERROR] :  TiAssetHelper:  at android.content.res.AssetManager.open(AssetManager.java:316)  [ERROR] :  TiAssetHelper:  at android.content.res.AssetManager.open(AssetManager.java:290)  [ERROR] :  TiAssetHelper:  at org.appcelerator.kroll.util.KrollAssetHelper.readAsset(KrollAssetHelper.java:62)  [ERROR] :  TiAssetHelper:  at org.appcelerator.titanium.TiLaunchActivity.loadActivityScript(TiLaunchActivity.java:128)  [ERROR] :  TiAssetHelper:  at org.appcelerator.titanium.TiLaunchActivity.windowCreated(TiLaunchActivity.java:183)  [ERROR] :  TiAssetHelper:  at org.appcelerator.titanium.TiRootActivity.windowCreated(TiRootActivity.java:172)  [ERROR] :  TiAssetHelper:  at org.appcelerator.titanium.TiBaseActivity.onCreate(TiBaseActivity.java:682)  [ERROR] :  TiAssetHelper:  at org.appcelerator.titanium.TiLaunchActivity.onCreate(TiLaunchActivity.java:169)  [ERROR] :  TiAssetHelper:  at org.appcelerator.titanium.TiRootActivity.onCreate(TiRootActivity.java:161)  [ERROR] :  TiAssetHelper:  at android.app.Activity.performCreate(Activity.java:5459)  [ERROR] :  TiAssetHelper:  at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1093)  [ERROR] :  TiAssetHelper:  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2364)  [ERROR] :  TiAssetHelper:  at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2458)  [ERROR] :  TiAssetHelper:  at android.app.ActivityThread.access$900(ActivityThread.java:172)  [ERROR] :  TiAssetHelper:  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1305)  [ERROR] :  TiAssetHelper:  at android.os.Handler.dispatchMessage(Handler.java:102)  [ERROR] :  TiAssetHelper:  at android.os.Looper.loop(Looper.java:146)  [ERROR] :  TiAssetHelper:  at android.app.ActivityThread.main(ActivityThread.java:5598)  [ERROR] :  TiAssetHelper:  at java.lang.reflect.Method.invokeNative(Native Method)  [ERROR] :  TiAssetHelper:  at java.lang.reflect.Method.invoke(Method.java:515)  [ERROR] :  TiAssetHelper:  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1283)  [ERROR] :  TiAssetHelper:  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1099)  [ERROR] :  TiAssetHelper:  at dalvik.system.NativeStart.main(Native Method)  [ERROR] :  TiAssetHelper: Error while reading asset Resources/app.js:  [ERROR] :  TiAssetHelper: java.io.FileNotFoundException: Resources/app.js  [ERROR] :  TiAssetHelper:  at android.content.res.AssetManager.openAsset(Native Method)  [ERROR] :  TiAssetHelper:  at android.content.res.AssetManager.open(AssetManager.java:316)  [ERROR] :  TiAssetHelper:  at android.content.res.AssetManager.open(AssetManager.java:290)  [ERROR] :  TiAssetHelper:  at org.appcelerator.kroll.util.KrollAssetHelper.readAsset(KrollAssetHelper.java:62)  [ERROR] :  TiAssetHelper:  at org.appcelerator.kroll.runtime.v8.V8Runtime.nativeRunModule(Native Method)  [ERROR] :  TiAssetHelper:  at org.appcelerator.kroll.runtime.v8.V8Runtime.doRunModule(V8Runtime.java:196)  [ERROR] :  TiAssetHelper:  at org.appcelerator.kroll.KrollRuntime.handleMessage(KrollRuntime.java:321)  [ERROR] :  TiAssetHelper:  at android.os.Handler.dispatchMessage(Handler.java:98)  [ERROR] :  TiAssetHelper:  at android.os.Looper.loop(Looper.java:146)  [ERROR] :  TiAssetHelper:  at org.appcelerator.kroll.KrollRuntime$KrollRuntimeThread.run(KrollRuntime.java:118)  [ERROR] :  File: fail readDirectory() errno=2      {code}    h6. Expected Behaviour  1. Should show security alert at the jailbroken or rooted device  2. Run normally at the normal device    Thanks  ",Story,None,Resolved,"2017-08-05 06:59:25","2017-08-05 06:59:25",8
"Command-Line Interface","Unable to do appc config without appc core","This is only happens when setting up CLI for the first time.     After npm install appcelerator, there's no way to set config values, i.e. proxyServer, cafile, through {{appc config}} command. This is an issue for users try to setup CLI behind proxy.     Workaround is to use environment variables. ",Improvement,None,Closed,"2017-08-03 19:10:59","2017-08-03 19:10:59",5
"Command-Line Interface","Remove download of hyperloop module for SDKs with pre-packaged module","We shouldn't need to prompt the user if they plan to use hyperloop or dynamically download the native module anymore once it's been folded into the SDK as of 7.0.0.    It should simply just be there int he SDK without additional friction to use it.",Story,High,Closed,"2017-08-02 18:29:01","2017-08-02 18:29:01",5
"Command-Line Interface","Add support for allowing a proxy pac file to be specified in configuration","h5.Description    Some customers are behind a proxy where they use a proxy PAC file, when using the Appc CLI this can lead to a bad UX where the customer may have two possible proxy URLs and only through trial and error can they tell which URL will work, a working URL can also go to not working without easy warning also.    There are node packages that exist to allow resolving a proxy URL from a given PAC file, for example https://www.npmjs.com/package/pac-proxy-agent, I'm not sure how useful this would be and whether this problem is better solved in a lower level module such as request itself    Example usage    I would imagine this would be similar to the CA File support we have, so setting it would be set in the appc config like so {{appc config set proxypac C:\Users\Ewan\proxy.pac}}","New Feature",None,Resolved,"2017-08-02 15:26:10","2017-08-02 15:26:10",5
"Command-Line Interface","Remove duplicated -v parameter in appc-cli help","in [CLI-675] we added CLI options -v (--vpc-env). However, this conflicts with the short -v option. It appears the simplest approach is to just remove the -v short form for -vpc-env, since that wouldn't have worked.",Bug,Low,Resolved,"2017-07-18 07:00:20","2017-07-18 07:00:20",1
"Command-Line Interface","appc login --host option is not recognized","{{appc login --host \[dashboard url\]}} doesn't recognize the custom host option.",Bug,None,Closed,"2017-06-30 19:09:34","2017-06-30 19:09:34",2
"Command-Line Interface","Improve visibility of update notify text","h5.Description    It was raised to me that it is very easy to miss the text notifying a user of an update to the CLI as it is only output at the start when running a command, and the message is quite minimal.    The following improvements were suggested    # Output it at the start and end of a command  # Make the message stand out more      * Although the package didn't work for us, maybe we could look to [update-notifier|https://github.com/yeoman/update-notifier], for some inspiration here. Such as surrounding the update notification is a box to separate it from the log output.  ",Improvement,None,Open,"2017-06-26 10:40:41","2017-06-26 10:40:41",5
"Command-Line Interface","Trim any spaces from auth code entered for two-factor verification","UX team has recommended that we make a change to the CLI to trim and spaces from the auth code as part of the two-factor verification step. An extra space is added when users copy and paste the auth code from their emails.    Links for the Usability teardown  [Usability Study #1|https://axway.jiveon.com/docs/DOC-100696]  [Usability Study #2|https://axway.jiveon.com/docs/DOC-100695]",Improvement,Medium,Closed,"2017-06-22 06:18:10","2017-06-22 06:18:10",1
"Command-Line Interface","If you build appc-cli with NPM 3.X and Node 6.10.3, then you will get listener argument must be a function when creating a mobile project","*Details:* If you build appc-cli with NPM 3.X and Node 6.10.3, then you will get {{listener argument must be a function}} error when creating a mobile project.    *Notes:*  * This bug will appear when our (or ECD's) Jenkins build system start using NPM 3.X and Node 6.X to build appc-cli.  * To *workaround* the issue, you will need to use the {{--legacy-bundling}} flag: {{npm install --production --legacy-bundling}}  * On Jenkins, you will need to replace this line with the above command: https://github.com/appcelerator/<USER>dsl/blob/master/jobs/appc_cli.groovy#L55    *Technical Notes:*  * It seems like the {{wrap}} function from {{lib/logger.js}} (https://github.com/appcelerator/appc-cli/blob/master/lib/logger.js#L99) is being destroyed when {{lib/core.js}} is processing {{node_modules/arrow/lib/plugin/new.js}}; specifically, here: https://github.com/appcelerator/appc-cli/blob/master/lib/core.js#L230    *Steps to reproduce:*  # Clone https://github.com/appcelerator/appc-cli  # From terminal, run the following commands in the appc-cli repo:    # After the tarball is created, create a folder in {{~/.appcelerator/install}} and name it the version from the package.json file i.e. the {{version}} property.  # Untar the tarball and move the {{package}} folder to the folder created in the above step  # Run {{appc use <VER_YOU_PREV_CREATED>}}  # Run {{appc new --name monkey --id com.appc.monkey --type titanium --force --no-services -l trace}}    *Actual:* The following error will appear (also, see attached log for full stack trace):      *Expected:* You should be able to create mobile project regardless how app-cli is built.",Bug,None,Closed,"2017-06-20 21:52:53","2017-06-20 21:52:53",1
"Command-Line Interface","Update descriptions in appc cloud -help  (ACS CLI)","Rename some of the descriptions in the ACS CLI help to refer to new naming    Specific lines:  Function: Cloud/ACS command line interface and app runner    Usage: cloud/acs [COMMAND] [COMMON OPTIONS] [COMMAND OPTIONS]    login to the API Runtime cloud    logout of the API Runtime cloud    restart an app from the API Runtime cloud. If no appname provided it can run in app dir or with -d to specify an app dir.    ",Improvement,Medium,Closed,"2017-06-19 15:27:54","2017-06-19 15:27:54",0
"Command-Line Interface","Update create arrow app command ","As part of the product rebranding and renaming initiative, we are replacing the Arrow name.    appc new -t arrow    should be replaced with    appc new -t  api     !image-2017-06-16-17-07-49-385.png|thumbnail!     Should be backward compatible so the previous scripting that used arrow should continue to work.  Alias approach is OK.",Improvement,None,Closed,"2017-06-16 22:12:18","2017-06-16 22:12:18",1
"Command-Line Interface","Rename appc new options","As part of product rebranding and renaming initiative we need the following changes to the  appc new  command:     !image-2017-06-16-17-02-32-741.png|thumbnail!     This should not affect any existing functionality.    ",Improvement,High,Closed,"2017-06-16 22:04:46","2017-06-16 22:04:46",2
"Command-Line Interface","Automate AppSpider test","We need to test our APIs using AppSpider and upload the results    # Using the AppSpider Application, run a scan manually (https://axway.jiveon.com/docs/DOC-80884) against the REST endpoint for preproduction  ## URL: http://software-preprod.cloud.appctest.com/arrow/swagger.json  ## Inside the AppSpider application, import the Swagger document  ## Configure the scan and run it once manually. Save the configuration.  # https://axway.jiveon.com/groups/product-security-group/blog/2016/10/14/automating-appspider-and-nessus-with-hakbot  ## Recommend copying the Fortify scans to run this nightly: https://github.com/appcelerator/<USER>dsl/tree/master/fortify-jobs",Improvement,High,Resolved,"2017-06-12 17:54:17","2017-06-12 17:54:17",5
"Command-Line Interface","LiveView: Upgrade to handle ES6 sytax","h5.Description    When using ES6 syntax in an application LiveView will currently error out (however you wont see LiveView error out because of TIMOB-24694).    It's possible we could just update the acorn to a newer version allowing ES6 (and newer) code, but    # We don't own the package https://www.npmjs.com/package/jsparse-tools  # The repo doesnt exist (or is private)    We could grab the source from an npm install and update where necessary, I believe MIT allows this.     *Notes*    I had a quick try of updating to the latest acorn version and these were my observations    # The return data from the detect function stays the same across versions, so the acorn upgrade should not problematic  # Using const will throw an error, this seems to be because LiveView makes some assumptions about the length of a variable declaration, let works (let and var are both 3 characters long). (https://github.com/appcelerator/liveview/blob/de6bb766edf10b83e28e5f941528d420ef50798d/lib/fserver.js#L314-L324)   #* There is a note about usage of const in the docs but I cannot track down the origins of this warning https://wiki.appcelerator.org/display/guides2/LiveView#LiveView-Troubleshooting  # This is only run for app.js files I believe",Improvement,Medium,Resolved,"2017-05-24 00:38:15","2017-05-24 00:38:15",3
"Command-Line Interface","appc-install improve subprocess npm rebuild","Use spawn instead of exec for cleaner code and not worry about buffer overflow.  https://github.com/appcelerator/appc-install/pull/75",Improvement,Medium,Closed,"2017-05-23 20:14:34","2017-05-23 20:14:34",3
"Command-Line Interface","The liveview does not connect when run to Genymotion emulator when the Genymotion emulator is not already launched","As [~<USER> reported here TISTUD-7138, The liveview does not connect when run to Genymotion emulator when the Genymotion emulator is not already launched. This is irrespective of the IP configured in preferences or nothing set in preferences at all.    Verified with latest version of liveview 1.1.15 built and studio 4.9.0.201705200305.     Below table lists the different scenarios checked  ||Liveview IP setting||Genymotion - not launched||Genymotion - already launched||Device||  |None (no liveview IP set in preferences)|Does not Connect|Connects|Connects|  |IP set to Genymotion Virtual Box IP |Does not Connect|Connects|Does not connect (expected)|  |IP set to wifi IP address|Does not Connect|Connects|Connects|  |Invalid IP|Does not connect (expected)|Does not connect (expected)|Does not connect (expected)|",Bug,High,Open,"2017-05-22 04:24:47","2017-05-22 04:24:47",13
"Command-Line Interface","Include Alloy 1.10.*","Alloy@1.10.0 introduced ES6 support in controller.   https://jira.appcelerator.org/browse/ALOY-1312",Story,Medium,Closed,"2017-05-19 20:50:41","2017-05-19 20:50:41",0
"Command-Line Interface","appc run removes last arg","Last option is removed from the command.    ",Bug,Critical,Closed,"2017-05-12 21:52:34","2017-05-12 21:52:34",1
"Command-Line Interface","Update appc-platform-sdk dependency to ~2.1.3 in appc-cli-titanium",.,Story,High,Closed,"2017-05-12 00:26:12","2017-05-12 00:26:12",1
"Command-Line Interface","Support Appc unpublish specific version","we should support upublishing components by passing flags such as version",Bug,None,Closed,"2017-05-11 00:42:12","2017-05-11 00:42:12",3
"Command-Line Interface","Emojis should be removed from Appc CLI NPM ","*Details:* Since majority of our customers are (and will be) from the enterprise space, having emojis in our Appc CLI NPM seems unprofessional; see [^emojis.png].    Emojis should be removed from Appc CLI NPM.    *Steps to reproduce:*  # Run {{appc use <CORE_VER>}}  # When the CLI starts downloading, immediately press {{ctrl+c}} to cancel the download    *Actual:* Emojis will appear when you abort the download; see [^emojis.png]. ",Improvement,Low,Closed,"2017-05-09 21:36:24","2017-05-09 21:36:24",1
"Command-Line Interface","Appc-CLI-Titanium: Deprecation warning in crypto.pbkdf2 when using appc-security features","When including our security features in the tiapp.xml, like    after building, a deprecation note is printed to the developer:      The build succeeds and it looks fine, but we should still fix the usage, since it may confuse people and sooner or later an enterprise customer will raise prio on it anyway :-). I am not sure where the log is created, but maybe [here|https://github.com/appcelerator/appc-security/blob/master/nodejs/lib/index.js#L99]?",Story,None,Closed,"2017-05-06 12:44:52","2017-05-06 12:44:52",1
"Command-Line Interface","Appc CLI integration tests can't handle alphanumeric authorization code","In production, the Appc CLI integration tests can't handle alphanumeric authorization code from 360.    This issue is purely on the integration tests side i.e you can still enter the alphanumeric code manually when prompted.",Bug,None,Closed,"2017-05-03 23:38:12","2017-05-03 23:38:12",3
"Command-Line Interface","Pass app original org_id with every build upload",https://github.com/appcelerator/appc-cli-titanium/pull/217,Bug,Critical,Closed,"2017-04-26 01:28:51","2017-04-26 01:28:51",1
"Command-Line Interface","cannot create app when ACA is installed","Using CLI 6.2.0-master.53 (havent tested all CLI) it will fail to near the last stages of appc new    the issue is on this line here (https://github.com/appcelerator/appc-cli-titanium/blob/master/plugins/new.js#L916)    and some quick investigation shows that (https://github.com/appcelerator/appc-cli-titanium/blob/master/plugins/new.js#L869) modInfo[ACA_ID] does not have a data property. However it is needed in (https://github.com/appcelerator/appc-cli-titanium/blob/master/plugins/new.js#L916)      If i change the logic here (https://github.com/appcelerator/appc-cli-titanium/blob/master/plugins/new.js#L869) from an OR to AND it will work as expected. Im not sure what the correct solution is here, but it needs fixing.      stack trace:    Appc:sdk api response, err=null, body='{success:true,result:{id:b94c0efa148c4d1da1bb3b16cdb99bd100555300}}' +976ms  2017-04-10T22:59:15.079Z | ERROR  | An uncaught exception was thrown!  Cannot read property 'id' of undefined  2017-04-10T22:59:15.079Z | ERROR  | Cannot read property 'id' of undefined  2017-04-10T22:59:15.080Z | TRACE  | TypeError: Cannot read property 'id' of undefined      at /Users/<USER>.appcelerator/install/6.2.0-master.53/package/node_modules/appc-cli-titanium/plugins/new.js:920:32      at fn (/Users/<USER>.appcelerator/install/6.2.0-master.53/package/node_modules/async/lib/async.js:746:34)      at /Users/<USER>.appcelerator/install/6.2.0-master.53/package/node_modules/async/lib/async.js:1213:16      at /Users/<USER>.appcelerator/install/6.2.0-master.53/package/node_modules/async/lib/async.js:166:37      at /Users/<USER>.appcelerator/install/6.2.0-master.53/package/node_modules/async/lib/async.js:706:43      at /Users/<USER>.appcelerator/install/6.2.0-master.53/package/node_modules/async/lib/async.js:167:37      at /Users/<USER>.appcelerator/install/6.2.0-master.53/package/node_modules/async/lib/async.js:1209:30      at /Users/<USER>.appcelerator/install/6.2.0-master.53/package/node_modules/appc-cli-titanium/plugins/new.js:912:17      at Request._callback (/Users/<USER>.appcelerator/install/6.2.0-master.53/package/node_modules/appc-platform-sdk/lib/index.js:124:10)      at Request.self.callback (/Users/<USER>.appcelerator/install/6.2.0-master.53/package/node_modules/request/request.js:188:22)      at emitTwo (events.js:106:13)      at Request.emit (events.js:191:7)      at Request.<anonymous> (/Users/<USER>.appcelerator/install/6.2.0-master.53/package/node_modules/request/request.js:1171:10)      at emitOne (events.js:96:13)      at Request.emit (events.js:188:7)      at IncomingMessage.<anonymous> (/Users/<USER>.appcelerator/install/6.2.0-master.53/package/node_modules/request/request.js:1091:12)    ",Bug,Critical,Closed,"2017-04-10 23:59:41","2017-04-10 23:59:41",3
"Command-Line Interface","Unable to run appc cloud publish","*This is a regression from 6.1.0*    *Workaround*    Add your global node_modules to the NODE_PATH env variable in your bash_profile (or similar)    h5.Description      When running {{appc cloud publish}} the CLI will error out with {{\[ERROR\] npm not found. Please install npm and try again.Error: Cannot find module 'npm'}}. Originating from acs [here|https://github.com/appcelerator/arrow-cloud-docker/blob/f657ac582f1fa17e35c36b84865593d7515fc6e8/nettle/lib/util.js#L685]. This works fine when using the acs directly, i.e one installed using npm i acs -g. I believe the require in the gobal install of acs works because when require traverses looks npm, acs has added the necessary directory to NODE_PATH [here|https://github.com/appcelerator/arrow-cloud-docker/blob/ae6b4951889ebb82364dd741a3cbf2315a14fdf4/nettle/lib/nettle.js#L20-L26] it ensures my NODE_PATH includes the global node_modules directory, however when this is run in the context of the appc cli all it does is add {{/Users/<USER>.appcelerator/install/6.2.0-master.54/package/node_modules}} to my NODE_PATH.     npm being required from the global space can be confirmed by    1. Edit the require to the below, check the log. It will point to your global npm install     2. Change the folder name of the global npm to something that isn't npm. The global acs will now no longer work    This may just be a documentation issue and a duplicate of NODEJS-2851    h5.Steps to reproduce    # Run appc cloud publish in a directory    h5.Actual results    The CLI will error out with {{\[ERROR\] npm not found. Please install npm and try again.Error: Cannot find module 'npm'}}    h5.Expected results    No error or output that can inform a user/point a user to how to rectify the issue  ",Bug,None,Closed,"2017-04-10 15:49:51","2017-04-10 15:49:51",1
"Command-Line Interface","Update appc-cli devDependencies to latest and handle false positive assertions","The {{devDependencies}} in appc-cli should be updated to the latest version: https://github.com/<USER>appc-cli/blob/master/package.json#L123-L136    And after updating the {{devDependencies}} to the latest versions, will need to fix the false positive assertions from the {{should}} module: https://github.com/shouldjs/should.js/wiki/Breaking-changes#changes-for-7x",Improvement,None,Closed,"2017-04-06 17:58:47","2017-04-06 17:58:47",2
"Command-Line Interface","CLI rebuild check should determine if a rebuild is needed from the modules version property in node","h5.Description    Currently the rebuild check works off process.version which represents the node version. This rebuild is needed because native modules need to be rebuilt when moving between node versions that have a different ABI version (process.versions.modules), CLI-827.     I propose that rather than rebuilding on a node version change the rebuild should be determined from the process.versions.modules version, this should lead to less rebuilds. I admit that it wont get us much other than that though :)    From an end user (read customer) standpoint this should be invisible, I do not believe that many users switch between CLIs or node versions that often, the main benefit of this would probably be time savings internally.",Improvement,None,Closed,"2017-03-28 14:14:03","2017-03-28 14:14:03",3
"Command-Line Interface","appc-cli build is not passing appcJs:check","The appc-cli master branch is not passing {{appcJs:check}} when running Grunt:        This will prevent the appc-cli from building on Jenkins.",Bug,None,Closed,"2017-03-22 18:37:41","2017-03-22 18:37:41",3
"Command-Line Interface","appc -v with no cores installed throws TypeError","h5.Description    *This only occurs in Node 6 and greater*    When running {{appc -v}} on a machine with no cli cores installed the cli will error with the below.        h5.Steps to reproduce    # Rename ~/.appcelerator/install to ~/.appcelerator/foo  # Run {{appc -v}}    h5.Actual    TypeError is thrown    h5.Expected    TypeError should not be thrown",Bug,Low,Closed,"2017-03-22 13:34:42","2017-03-22 13:34:42",1
"Command-Line Interface","appc-cli/Gruntfile.js is not loading grunt-bump","In https://github.com/appcelerator/appc-cli/blob/master/Gruntfile.js, needs to load {{grunt-bump}} i.e. {{grunt.loadNpmTasks('grunt-bump');}}.",Bug,None,Closed,"2017-03-21 23:47:36","2017-03-21 23:47:36",1
"Command-Line Interface","Error: Error attempting to login to Arrow Cloud","Logging in via the appc-cli, we get the following:    ",Bug,Critical,Resolved,"2017-03-21 19:26:19","2017-03-21 19:26:19",3
"Command-Line Interface","cannot find module session","When trying to perform an *appc install* i got the following message:            ",Bug,Critical,Resolved,"2017-03-21 18:09:19","2017-03-21 18:09:19",1
"Command-Line Interface","TypeError: Data must be a string or a buffer thrown when running commands if sid is undefined in config","h5.Description    *To fix this delete your appc-cli.json and login again, using preproduction not preprod*    When running commands I am seeing the following error get thrown {{TypeError: Data must be a string or a buffer thrown when running commands}}, full stacktrace below. The error is coming from [this line|https://github.com/appcelerator/appc-cli/blob/e9b5892216ec43b98ae592473aaba032fdcd41c4/lib/commands/config.js#L158]    The CLI is calling config.get('sid') which has somehow gone walkabouts from my config so it is undefined, I believe this is during the {{appc config set defaultEnvironment}} step below.        h5.Steps to reproduce    # Switch to production {{appc logout && appc config set defaultEnvironment production && appc login}}  # Switch back to preproduction  {{appc logout && appc config set defaultEnvironment preproduction && appc login}}  # {{appc config set defaultEnvironment preprod}}  # appc whoami/appc login    h5.Actual result    Above error is thrown    h5.Expected result    Error not thrown",Bug,None,Closed,"2017-03-15 23:18:17","2017-03-15 23:18:17",1
"Command-Line Interface","Correct NSP errors in appc-cli-titanium","nsp check flags minimatch@0.3.0.  update dev to fix the issue: tar.gz@1.0.2 > mocha@2.5.3 > glob@3.2.11 > minimatch@0.3.0 ",Bug,Critical,Resolved,"2017-03-08 22:22:14","2017-03-08 22:22:14",1
"Command-Line Interface","Integrate with latest acs cli 1.2.3","we just published acs npm 1.2.3 please update appc cli to include it ",Story,Medium,Resolved,"2017-02-09 22:55:54","2017-02-09 22:55:54",0
"Command-Line Interface","Allow platform-sdk overrides","When trying to setup an onpremise or custom install of 360/SEC/REG, the CLI needs to be able to set the options to match the installation. The fields that need to be allowed override are:    *Already overrideable:*  * AppC.baseurl  * AppC.registryurl  * AppC.securityurl    *Needs implementation*  * AppC.pubsuburl  * AppC.webeventurl  * AppC.cacheurl  * AppC.isProduction  * AppC.supportUntrusted  * AppC.secureCookies    *Reference*  https://github.com/appcelerator/appc-cli/blob/0300436e1a7ebcbdc1f1c6661da15a7180150782/lib/constants.js#L296    ",Improvement,None,Resolved,"2017-01-13 01:09:01","2017-01-13 01:09:01",3
"Command-Line Interface","appc-inquirer skips predefined answers","In CLI-1133 the inquirer dependency of appc-inquirer was updated because of issues in Travis builds. There was a slight behavior change in inquirer which removes unasked question from the answers object. To remain backwards compatible we need to get the unaltered answers object with any default answers provided through options arguments in the CLI.",Bug,Critical,Resolved,"2016-12-08 13:54:31","2016-12-08 13:54:31",2
"Command-Line Interface","Fatal error: The config file node_modules/grunt-appc-js/.jscsrc was not found if grunt-appc-js is called within another grunt plugin","*Details:* {{Fatal error: The config file node_modules/grunt-appc-js/.jscsrc was not found}} error is returned if grunt-appc-js is called within another grunt plugin; see attachment.    *Steps to reproduce:*  # Clone or pull https://github.com/appcelerator/appc-registry-server from master branch  # Run {{npm install}}  # In Gruntfile.js, comment out these lines: https://github.com/appcelerator/appc-registry-server/blob/master/Gruntfile.js#L68-L70  # Run {{grunt appc_js}}    *Actual:* Fatal error is returned; see attachment.  *Expected:* Fatal error should not be returned and {{jscs:src}} task should be executed without any issues.",Bug,None,Closed,"2016-12-08 01:38:48","2016-12-08 01:38:48",2
"Command-Line Interface","Arrow app crashes with Uncaught Exception Cannot find module './ReactHostOperationHistoryHook'","h5.Description    When attempting to run an arrow app the app will crash with the below, while at first glance this may appear to be an issue with arrow, the root cause lies in the {{appc publish}} command as checking <USER>shows that this file is being excluded as it matches one of these[regexes|https://github.com/appcelerator/appc-cli/blob/96ca28c6b63482d9a956beaf8c321f4bd910fa56/lib/publish.js#L113-L116], changing them to use the {{^}} character will fix the issue to include {{./ReactHostOperationHistoryHook}} but will then fail to include two files called {{History.js}} from react-router (these do not cause a crash to my knowledge, but they should be included) and also the {{logs}} folder from arrow-admin-api (this does cause a crash), this folder is required        h5.Steps to reproduce    # Download 6.1.0-300 {{appc use 6.1.0-300}}  # Create an arrow app {{appc new -t arrow -n myarrowapp && cd myarrowapp}}   # Run the app {{appc run}}    h5.Actual result    Crash with the above error    h5.Expected result    App should not crash",Bug,None,Closed,"2016-11-29 14:19:59","2016-11-29 14:19:59",2
"Command-Line Interface","appc ti create shows logging warning about a possible EventEmitter memory leak","h5.Description    When running {{appc ti create}} the below will be printed out warning about a possible EventEmitter memory leak        h5.Steps to reproduce    1. Run {{appc ti create}}    h5.Actual result    The above will be printed out    h5.Expected result    Although it is not the supported workflow, the above message should not be printed out and the user should be able to create an app successfully, or a message should be printed telling users to use {{appc new}}",Bug,Medium,Closed,"2016-04-08 20:28:14","2016-04-08 20:28:14",3
"Command-Line Interface","When unpublish an arrow app the version in package.json is not considered","Steps to reproduce:  1. Publish arrow app with version 1.0.0 specified in package.json        2. Change the version in package.json from 1.0.0 to 0.0.3. Type      in the root folder of the app. Your app will be unpublish.    Desired behavior: It should display some message that the local version of the app is different from that in the cloud, i.e. 'Missing app with version v.0.0.3' or kind of.  ",Bug,None,Closed,"2016-11-15 10:07:00","2016-11-15 10:07:00",5
"Command-Line Interface","Update dependencies of appc-inquirer","Building PRs on Travis for appc-cli currently fails due to a bug in the outdated {{inquirer}} module which is part of {{appc-inquirer}}, which in turn is a dependency of {{appc-cli}}. This just occurred recently and only affects Travis builds.    Testing with a fork of appc-inquirer with updated dependencies fixed the appc-cli build on Travis. ",Story,High,Resolved,"2016-11-15 01:07:31","2016-11-15 01:07:31",2
"Command-Line Interface","appc use does not show 6.0 version when selected","*Description:*  In prod environment, when entering appc use or appc use --prerelease, the resulting list does not show release 6.0.0-61, although that release was selected to be used.    *Steps to reproduce:*  1. Type in Mac terminal appc use 6.0.0-61  2. Type appc use  3. Type appc use --prerelease    *Result:*  The following output shows the results. These results always occur (not intermittent).  <USER>Titanium <USER> appc use 6.0.0-61  6.0.0-61 is now your active version  <USER>Titanium <USER> appc use  The following versions are available:    5.5.1      Installed (Latest)                        5.5.0      Installed                                 5.4.0      Not Installed                             5.3.1      Not Installed                             5.3.0      Not Installed                             5.2.2      Not Installed                             5.2.1      Not Installed                             5.2.0      Not Installed                             5.1.0      Not Installed                             5.0.4      Not Installed                             5.0.3      Not Installed                             5.0.2      Not Installed                             5.0.1      Not Installed                             5.0.0      Not Installed                             4.1.3      Not Installed                             4.1.2      Not Installed                             4.1.1      Not Installed                             4.1.0      Not Installed                             4.0.2      Not Installed                             4.0.1      Not Installed                             4.0.0      Not Installed                               <USER>Titanium <USER> appc new  Appcelerator Command-Line Interface, version 6.0.0-61  Copyright (c) 2014-2016, Appcelerator, Inc.  All Rights Reserved.    *Expected Result:*  6.0.0-61 should have been on the list from appc use, or appc use --prerelease, but it is not in either case.  Note from the results, when appc new is typed, the correct version is used, it is just not appearing in the list of versions available/installed.",Bug,Low,Closed,"2016-10-17 20:08:02","2016-10-17 20:08:02",2
"Command-Line Interface","Use node.js os.homedir to get homedir","Currently we use a custom way of getting a users home dir, which isn't perfect and can break CLI-949. When I made the fix for that ticket I couldn't replace it with os.homedir as it was introduced in node v4 and we still supported 0.12. Well, now we no longer support 0.12 so lets use it :)    Refs:  https://nodejs.org/dist/latest-v4.x/docs/api/os.html#os_os_homedir  https://github.com/nodejs/node/pull/1791",Improvement,Medium,Closed,"2016-10-28 14:21:06","2016-10-28 14:21:06",3
"Command-Line Interface","Update cli to include acs cli 1.2.2 ","We have just released arrowcloud 1.5.3 and new acs cli 1.2.2. Please update cli to include latest acs cli. ",Improvement,Critical,Closed,"2016-10-18 19:06:18","2016-10-18 19:06:18",2
"Command-Line Interface","ACA and APM being downloaded everytime when lastUpdateCheckTiDownloads has expired","h5.Description    When building an application in an enterprise org, when lastUpdateCheckTiDownloads has expired I am always seeing ACA and APM modules downloaded.    After placing some console logs I believe the reason that these modules are always downloaded is because the CLI is checking for the iOS modules in {{/Users/<USER>Library/Application Support/Titanium/modules/iOS/com.appcelerator.apm}} and {{/Users/<USER>Library/Application Support/Titanium/modules/iOS/com.appcelerator.aca}}, because these folders aren't fuond the CLI returns null for the iOS module version on the system and decide to download a new one, *related code is [found here|https://github.com/appcelerator/appc-cli-titanium/blob/master/plugins/util.js#L471]*    It may be that the payload data from 360 is incorrect as that is where the platforms are sourced from I believe    *This happens on both run and new*      h5.Steps to reproduce    # Login to an enterprise org in preprod  # {{appc config set lastUpdateCheckTiDownloads null}}  # {{appc run -p ios -l trace --build-only}}    h5.Actual result    ACA and APM are downloaded every time, CLI is checking incorrect location for iOS module    h5.Expected result    ACA and APM should not be downloaded every time, CLI should check for correct locations",Bug,None,Closed,"2016-10-17 12:38:54","2016-10-17 12:38:54",3
"Command-Line Interface","Remove version attribute from tiapp.xml when creating new app","In 6.0 prerelease, when a new project is created, we added the modules version in tiapp.xml to prevent incompatible modules being used when building a project.  i.e       With TIMOB-23912 fixed, we should not set version, so project build will pickup the latest compatible module version.  So the modules tag should be like this:       Unless developers want to use a specific version, they can do so by knowingly update the project's tiapp.xml.  ",Improvement,Critical,Resolved,"2016-10-13 00:33:41","2016-10-13 00:33:41",3
"Command-Line Interface","Incorrect APM module version is set in tiapp.xml module tag","**Reproduce Steps**  1. {{appc new -t titanium}}  2. check {{tiapp.xml}} {{modules}} tag for {{com.appcelerator.apm}}    **Expected Result**  the module version should be in the format of a.b.c.     **Actual Result**  the module version is set to a long string of digits. ",Bug,None,Resolved,"2016-10-11 23:07:07","2016-10-11 23:07:07",3
"Command-Line Interface","Hyperloop is downloaded everytime lastUpdateCheckTiDownloads expires on Windows","h5.Description    When building a project on Windows, during the build if lastUpdateCheckTiDownloads has expired it performs a check for any modules that need to be downloaded, on Windows as we now do not extract the iphone for hyperloop the CLI will download and extract hyperloop every day, When combined with CLI-1106 (the download and extraction process taking anywhere from ~3-10 minutes) this a real nuisance    h5.Steps to reproduce     # appc config set lastUpdateCheckTiDownloads null  # Build a project  # appc config set lastUpdateCheckTiDownloads null  # Build a project    h5.Actual result    The CLI will download it hyperloop every time    h5.Expected result    The CLI should only check for an iphone folder on OSX",Bug,Critical,Closed,"2016-10-05 16:40:42","2016-10-05 16:40:42",5
"Command-Line Interface","Handle a bad/failed module download better","h5.Description    At the time of filing this ticket the hyperloop download links in preprod are broken, APPTS-8918, due to this the CLI returns the following. This happens at [this line|https://github.com/appcelerator/appc-cli-titanium/blob/9391f9a4e9c64678904404f67617bc1522fea11c/plugins/util.js#L629] where the CLI tries to extract the download file, the file that is downloaded is [here|https://gist.github.com/ewanharris/6aac094a842c9d7d2cdec092622d844c]        h5.Steps to reproduce    *This should work fine once APPTS-8918 is fixed*    # Run {{appc new --type titanium --name tenfoursix --id com.appc.tenfoursix --force}}    h5.Actual result    Error above is thrown    h5.Expected result    CLI should handle a bad/failed download better",Improvement,Medium,Open,"2016-10-03 13:28:50","2016-10-03 13:28:50",3
"Command-Line Interface","checkSession endpoint is hit twice when building","h5.Description    When building an application (and other commands that require a user to be logged in) the CLI appears to be hitting the checkSession endpoint twice, once before executing the command and then once again in the command that has been executed.             h5.Steps to reproduce    # Run {{appc -p ios -l trace}} in a titanium project    h5.Actual result    checkSession endpoint is hit twice    h5.Expected result    checkSession endpoint only needto be hit once",Bug,High,Closed,"2016-09-23 14:12:31","2016-09-23 14:12:31",1
"Command-Line Interface","Set Node 4.x as minimum supported version","h5.Description    In 6.0.0/4.8.0 it's planned to move to 4.X as the minimum supported version. This is implemented in the [SDK/Titanium|TIMOB-23448] and in [TISTUD|TISTUD-8509] but there is no implementation for this in the CLI. It seems to me like we should want to restrict the version in the CLI also and maybe introduce something similar to Titanium i.e warnings for node versions higher than a certain version etc    h5.Steps to reproduce    # Set node 0.12.7 as your selected node version using your favourite node version manager or the official installer  # Download a 6.0.0 CLI, {{appc use 6.0.0-47}}  # Use the CLI for non titanium tasks (as Titanium has this already implemented)    h5.Actual result    The appc cli is perfectly happy with you using 0.12.7    h5.Expected result    As we are moving to a minimum of 4.X for every other product. So should the CLI",Improvement,Critical,Resolved,"2016-09-21 15:55:37","2016-09-21 15:55:37",2
"Command-Line Interface","appc switch org: errors when I only have one org","When I run {{appc switch org}} while I only have one org it errors:        Instead, it should simply say there are no other orgs to switch to.",Bug,Low,Resolved,"2016-09-19 20:16:59","2016-09-19 20:16:59",1
"Command-Line Interface","appc switch org: should not prompt if there's only one other org","When I have 2 orgs and run {{appc switch org}} it shouldn't prompt since there's only one option. It should just switch directly to the other org.    ",Improvement,None,Open,"2016-09-19 20:15:19","2016-09-19 20:15:19",5
"Command-Line Interface","CLI to pull sdk downloads from registry","as part of the PRD installation, we SDK should be moved into the registry server, and the CLI needs to be modified such that it can grab the SDK's from this new location.","New Feature",High,Open,"2016-09-17 01:02:45","2016-09-17 01:02:45",3
"Command-Line Interface","deprecated minimatch. Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue","We should update all the places this appears    appcelerator@5.5.0 /Users/<USER>.appcelerator/install/5.5.0/package  ├─┬ acs@1.2.1  │ ├─┬ npm@2.14.22  │ │ ├─┬ node-gyp@3.3.0  │ │ │ ├─┬ glob@4.5.3  │ │ │ │ └─┬ minimatch@2.0.10  │ │ │ ├─┬ minimatch@1.0.0  ├─┬ arrow@1.8.6  │ ├─┬ babel@5.8.38  │ │ ├─┬ babel-core@5.8.38  │ │ │ ├─┬ minimatch@2.0.10  │ ├─┬ forever-monitor@1.7.0  │ │ ├─┬ minimatch@2.0.10  ├─┬ recursive-readdir@1.3.0  │ └─┬ minimatch@0.3.0  ├─┬ tar.gz@1.0.2  │ ├─┬ mocha@2.5.3  │ │ ├─┬ glob@3.2.11  │ │ │ └─┬ minimatch@0.3.0",Bug,None,Resolved,"2016-09-15 22:57:56","2016-09-15 22:57:56",1
"Command-Line Interface","appc new to use SDK compatible version of soasta plugin","At the moment, {{appc new}} and enable test service will always use the latest installed soasta plugin regardless of SDK version.    In APPTS-8874,  there'll be different versions of the plugin for ti sdk 6.0.0/newer, and ti sdk 5.5.X. {{appc new}} will need to be updated to use the compatible plugin version.",Improvement,Critical,Resolved,"2016-09-08 21:45:52","2016-09-08 21:45:52",5
"Command-Line Interface","appc login error when specify arrowcloud url without protocol","*Step to Reproduce*  Do {{appc login --cloud admin.cloudapp-enterprise.appcelerator.com}}    *Expected Result*  Login should succeed.    *Actual Result*  Login failed with error:  {{ERROR  | Invalid URI admin.cloudapp-enterprise.appcelerator.com/login}}",Bug,Critical,Closed,"2016-09-08 19:24:51","2016-09-08 19:24:51",1
"Command-Line Interface","Include Hyperloop version to plugin tag in the tiapp.xml","At the moment, when enabling Hyperloop, no version property is assigned to the plugin tag. Under {{tiapp.xml}} you see:       Since we started versioning Hyperloop plugin, we should specify the plugin version in tiapp.xml.    ",Improvement,None,Closed,"2016-09-08 00:25:26","2016-09-08 00:25:26",1
"Command-Line Interface","Studio: Keep showing offline when behind the proxy","Customer is facing following problem.     Behind the proxy, they are able to login to studio, but once the studio lunched. It shows still offline. Like dashboard can't open, build process will stop because of offline. (attached screen shot about this and proxy setting)    Can you please advise or any info we need for this problem?  ",Bug,Critical,Reopened,"2016-07-13 01:54:00","2016-07-13 01:54:00",5
"Command-Line Interface","Build got stuck at validating the session","*Details:*    While I'm building a project with iOS simulator - build got stuck at {{check if session is invalidated}} state for more than {color:red}4mins{color}.    You can observe the time from the below trace log.          *Expected:*    It should timeout after 10sec or so.",Bug,None,Closed,"2016-09-06 05:21:13","2016-09-06 05:21:13",5
"Command-Line Interface","update-notifier still getting installed","h5.Description    API-1310 removed update-notifier, however when installing appcelerator npm package it still gets installed, this is because the npm shrinkwrap file still references the package [here|https://github.com/appcelerator/appc-install/blob/f5025900a1f056bc9c404f16d9d51a573dc447a1/npm-shrinkwrap.json#L579].     h5.Steps to reproduce    # Install appc npm using {{npm i -g appcelerator@4.2.8-6}}    h5.Actual results    update-notifier is installed    h5.Expected results    update-notifier should not be installed as it's not used",Bug,Critical,Closed,"2016-09-01 17:04:12","2016-09-01 17:04:12",1
"Command-Line Interface","Allow more than one attempt at entering an auth code","h5.Description    Currently the CLI only allows a user 1 attempt at entering an auth code. This should be changed to allow the user unlimited attempts until the auth code expires, like the online login, or exit after a certain number of retries while outputting some information to the user.    h5.Steps to reproduce    # {{appc logout -D}}  # {{appc login}}  # Enter an incorrect auth code    h5.Actual result    The CLI will exit on one incorrect auth code    h5.Expected result    CLI should allow some retries on auth code",Improvement,Medium,Closed,"2016-09-01 14:16:58","2016-09-01 14:16:58",3
"Command-Line Interface","CLI should not re-prompt a user once their account has been locked out","h5.Description    APPTS-8562 introduced the ability for accounts to be locked out after a certain amount of failed login attempts, the CLI does not handle this appropriately and outputs an access privileges error while also re-prompting the user.    The CLI should inform the user what has happened and provide any other details deemed necessary      h5.Steps to reproduce    # Run {{appc login}} and enter an incorrect password  # GOTO 1    h5.Actual result    After 6 attempts the error message changes to {{You do not have access privileges to view this content.}} the CLI will keep prompting the user to login    h5.Expected result    If a user is locked out of their  account, the CLI should not re-prompt and inform the user of the lockout, while displaying any information that is deemed helpful e.g Directing them to check their emails to disable the lockout",Improvement,Medium,Closed,"2016-09-01 13:57:22","2016-09-01 13:57:22",3
"Command-Line Interface","limit the size of a symbol file uploaded to crashserver to 250Mb","in CRASH-65 we limit the size of a symbol file that can be uploaded to the crashserver to 250Mb. this is based on discussions that incorporate competing products and the likely size of a symbol file in the near future weighed against the requirements to support large files.    Ideally, the Studio and CLI components should also prevent anything larger than 250Mb from even being posted to the server. This can allow the user to know about the limitation as well.    ",Story,Medium,Resolved,"2016-08-16 00:13:18","2016-08-16 00:13:18",3
"Command-Line Interface","Unzipping module throws exception when download url is not accessible","On rare occasions, the urls returned by the module download api are not accessible. CLI ignores the download state and attempt to unzip an invalid file, this results in an uncaught exception.    https://github.com/appcelerator/appc-cli-titanium/blob/master/plugins/util.js#L597",Bug,High,Open,"2016-08-22 21:43:09","2016-08-22 21:43:09",3
"Command-Line Interface","Modules update failed with Error: Invalid URI ","*Steps to reproduce*  1. {{appc config set lastUpdateCheckTiDownloads null}}  2. {{appc new}} or {{appc run}}    *Expected result*   There should be no {{Error: Invalid URI}} error.    *Actual result*  The process terminates with {{Error: Invalid URI}} error.",Bug,Critical,Resolved,"2016-08-22 19:14:45","2016-08-22 19:14:45",1
"Command-Line Interface","'SyntaxError: Unexpected end of input' on appc use --prerelease","h5.Description    When I ran {{appc use --prerelease}} I got the following error, I can't reproduce this, error comes from [this line|https://github.com/appcelerator/appc-install/blob/master/lib/util.js#L605],     *Notes*  After this I checked whether http://software-preprod.cloud.appctest.com/ was up, it was but I was met with [this|https://github.com/appcelerator/appc-registry-server/blob/master/web/views/index.hbs#L55], both issues appear related to me, maybe to do with caching registry side? I ran this command around 12:30 BST 22/08/2016 incase that is useful for any logging        h5.Steps to reproduce  *This steps probably won't reproduce the error, but are what I did*    # run {{appc use --prerelease}}    h5.Actual result    You will get the error above    h5.Expected result    You should not get an error",Bug,High,Closed,"2016-08-22 12:39:29","2016-08-22 12:39:29",3
"Command-Line Interface","Modules and plugins are not overwritten if the files already exist","Hyperloop plugin is picked to illustrate the issue, but this should be reproducible with any modules, plugins or components.    *Steps to reproduce*  1. Make sure Hyperloop plugin is installed  2. Modify {{../plugins/hyperloop/package.json}} to a different version, i.e 1.1.1  3. Do {{appc config set lastUpdateCheckTiDownloads null}} or remove Hyperloop module folder to trigger an update  4. Do {{appc new}}     *Actual Results*  Once the project is created, verify that {{../plugins/hyperloop/package.json}} is not updated.    *Expected Results*  The Hyperloop plugin should be updated .",Bug,High,Closed,"2016-08-18 00:22:09","2016-08-18 00:22:09",1
"Command-Line Interface","CLI outputting non-JSON warning to Studio","While doing some Studio work, I saw that the CLI is spitting out warning text in it;s output, when it's being invoked by Studio (presumably with some command asking for JSON output). Since the warning test is not JSON, Studio's parsing breaks:    ",Bug,Critical,Closed,"2016-08-12 15:38:32","2016-08-12 15:38:32",3
"Command-Line Interface","Unable to configure which IP should the LiveView use","h4. Problem Description  When your windows machine has several network adapters (either physical or virtual) you can't configure the LiveView to use certain IP.     In this case, I have two IPs, one internal for Virtual Box and other external connecting with the Wifi Access Point. For testing liveview with genymotion, I would like to use the internal, when using a device, it should be using the external network adapter (wifi).     Any suggestion on how to modify the liveview IP is more than welcomed. ","New Feature",Critical,Resolved,"2016-08-10 06:03:12","2016-08-10 06:03:12",5
"Command-Line Interface","Install hyperloop module directly through CLI command","*Current behaviour:*  While creating a new project CLI identifies whether it's required to install or update the hyperloop module based on the selected SDK version.      *CLI way to update Hyperloop:*  # Find the selected SDK  # Fetch {{api/v2/downloads}} from 360 dashboard  # Identify what version is installed in the system  # Identify what is available on the dashboard 360  # If required to install - download the zip, identify folders based on the OS(for example for windows we shouldn't install iOS module) and extract to the target location.    *Appcelerator Studio way to update Hyperloop:*  Repeat above steps 1-5 again in Java    Can we do something like this to avoid duplicate effort and also to maintain the consistency across the tooling (studio/CLI)        This command will follow the above steps and install the appropriate Hyperloop module    Studio will also use the same command to install the Hyperloop.     ","New Feature",Medium,Closed,"2016-08-05 10:26:57","2016-08-05 10:26:57",5
"Command-Line Interface","Windows: A iPhone module folder is downloaded for Windows OS","h4. Description  A iPhone folder containing {{com.appcelerator.apm}} and {{hyperloop}} module is downloaded for Windows OS.  h4. Steps to reproduce:  # {{appc new}} create an application with Hyperloop enabled, this will download Hyperloop.  # Navigate to {{C:\ProgramData\Titanium\modules\iphone}}    h4. Actual  The iPhone folder containing {{com.appcelerator.apm}} and {{hyperloop}} is present.    h4. Expected  There should be no iPhone folder on Windows OS",Bug,Critical,Closed,"2016-08-03 23:55:18","2016-08-03 23:55:18",3
"Command-Line Interface","We don't see Would you like to enable hyperloop for the app prompt while enabling services for new app","h5.Steps To Reproduce:  1. Create a new project in appc studio.  2. Fill in all the necessary details in the New mobile app project dialog.  3. Make sure you have Enable appcelerator platform services enabled.  4. Click next & then finish.    h5.Actual Results:  1. We do not get the Would you like to enable hyperloop for this app prompt.  2. Hyperloop is enabled & the module is included in the project default.  *NOTE*: CLI prompts you if you would like to enable hyperloop for the app.    h5.Expected Result:  1. We should get a prompt Would you like to enable hyperloop for this app.   ",Bug,High,Closed,"2016-08-04 00:45:45","2016-08-04 00:45:45",5
"Command-Line Interface","Hyperloop: If you have an older version of Hyperloop in your module global space, you cannot get the newer Hyperloop version","*Details:* If you have an older version of Hyperloop in your module global space, you cannot get the newer Hyperloop version.    *Notes:* To workaround this issue, you will need to remove both (Android and iOS) Hyperloop modules from the global space.    *Steps to reproduce:*  # In your global module space, {{~/Library/Application Support/Titanium/modules}} or {{C:\ProgramData\Titanium\modules}}, rename your Hyperloop module version to an older version e.g. {{modules/android/hyperloop/1.2.5}} -> {{modules/android/hyperloop/1.2.4}}.  # On Mac, you should remove {{modules/iphone/hyperloop/<ver>}} folder.  # Get the latest Hyperloop module via {{appc new}}; go through all the prompts  # Check your module global space again    *Actual:* The latest Hyperloop module is not downloaded.  *Expected:* The newest Hyperloop module should be downloaded if you have an older version of it.",Bug,Critical,Closed,"2016-08-04 00:10:47","2016-08-04 00:10:47",5
"Command-Line Interface","CLI doesn't relay the error message to Studio when login failed","Studio and CLI will exchange the data in the form of json format through socket connection.    If a trial plan is expired, studio is keep asking for login credential without showing what was wrong with the credentials. As studio depends on CLI for login, CLI should return the error message as part of the socket communication message protocol.    For example:  *CLI request for login prompt:*  {code:json}  {type:question,question:[{type:input,name:username,message:Appcelerator ID:},{type:password,name:password,message:Password:}]}      If the password is wrong or it was unable to login due to some other issue(ex: trial account expired),CLI should also send the error message.    *Here is my proposal for expected response:*  {code:json}  {type:question,question:[{type:input,name:username,message:Appcelerator ID:},{type:password,name:password,message:Password:}], errormessage:Unable to login, your trial plan is expired. Renew your subscription today!}  {code}",Improvement,High,Closed,"2016-08-02 05:20:40","2016-08-02 05:20:40",5
"Command-Line Interface","Set connection timeout for appc use command","*Details:*  {{appc use -o json --full}}  command is not getting timed out if it's unable to get the response.    *To reproduce:*  # Configure invalid proxy server through CLI  Example: {{appc config set proxyServer https://username:password@10.10.12.13:4567}}  # Run {{appc use -o json --full}} command    *Actual:*  It's waiting for indefinite time and command is not returning at all.    *Expected*  As we provided invalid proxyServer, it should timeout after 10sec    ",Bug,Critical,Closed,"2016-07-26 10:16:58","2016-07-26 10:16:58",3
"Command-Line Interface","Fix Jenkins and travis for appc-cli-titanium","There's a number of things.  1. Currently the <USER>build is failing because it didn't fulfil the required coverage threshold.  2. While unskipping this unit test https://github.com/appcelerator/appc-cli-titanium/blob/master/test/new_test.js#L217, we realise that travis (and <USER> will break because it prompts for Do you wish to install Hyperloop? we may need a flag to suppress this prompt.  3. This configuration is messed up. https://github.com/appcelerator/appc-cli-titanium/blob/master/test/travis_configure.sh#L23 it installs 4.0.0.GA when we should be either installing the latest G.A. version available, or latest master build  4. If we use master branch (6.0.0) it will complain about node version 0.10.x is not supported. which is correct so we should consider changing the CI script to support node 4.x  5. Same issue with <USER> the ci script is here:  https://github.com/appcelerator/<USER>dsl/blob/master/jobs/appc_cli_dependencies.groovy",Story,Critical,Resolved,"2016-07-25 08:55:21","2016-07-25 08:55:21",3
"Command-Line Interface","appc login: Deauthorize message does not include -D flag","When using {{appc login}} for the first time on a new machine (or after Deauthorizing one) the CLI will return a message stating the ID of the system being authorized, as well as instructions on how to deauthorize the machine. However the command given to do so is {{appc logout}},  which does not deauthorize the machine.     h2. Steps to Reproduce   1. {{appc login}} to an unauthorized machine / {{appc logout -D}} to deauthorize a machine and then {{appc login}}.  2. Enter credentials.  3. You will be prompted to enter an authorization code, which is sent to your account email.  4. Enter the authorization code.    h2. Expected Result     CLI should return the message You can deauthorize this computer by logging out with appc logout *-D*    h2. Actual Result     CLI returns the message You can deauthorize this computer by logging out with appc logout",Story,Critical,Closed,"2016-07-22 22:27:33","2016-07-22 22:27:33",1
"Command-Line Interface","appc switch and appc login org selection should be consistent ","h5.Description    Currently {{appc switch}} and {{appc login}} are inconsistent in the style of org selection. They should be consistent in displaying the same information.    {code: title=appc switch}  ? To which organization would you like to switch? (Use arrow keys)  > Accenture Preprod (100000559)    Appcelerator Staff (100000295)    APPTS-5484-developer (100001665)    APPTS-5484-enterprise (100001668)    APPTS-5484-individual (100001666)    APPTS-5484-team (100001667)    APPTS-6045-Chrome (100001594)  (Move up and down to reveal more choices)  ",Improvement,Low,Closed,"2016-07-19 20:11:11","2016-07-19 20:11:11",1
"Command-Line Interface","Getting the correct module versions from dashboard","When Ti SDK 6.0.0 is released, we'll be support a new version of android v8. And because of that, all titanium modules have to be recompiled to support it, and it's not backward compatible.   i.e. ti.facebook v3.X.X works for ti.sdk 6 and newer vs ti.facebook v2.X.X works for ti sdk 5.4.0 and older.    Therefore, the following modules:  Hyperloop, ACA, APM that are downloaded automatically with CLI, has to be smart enough to be able to obtain the right versions when doing appc run or appc new. Its ok to have both versions co-exist in the local machine. And it's also ok that we can't control the developer if he chooses to use a 5.4.0 module on a 6.0.0 project.    Dashboard has recommended that the payload can be expanded to provide different urls for both versions. This will be a cross-team effort.",Improvement,Critical,Resolved,"2016-07-15 06:57:51","2016-07-15 06:57:51",5
"Command-Line Interface","CLI 5.4.0-31 can not create apps in EU region","When testing out CLI 5.4.0-31 I could not create an arrow app in the EU region.    `$ appc use 5.4.0-31`  `$ appc logout; appc config set defaultEnvironment production-eu; appc login`  `$ appc new`      expected behavior: app to be created succesfully  actual behavior: CLI prompts for user signin. session issue?  ",Bug,Critical,Closed,"2016-07-15 01:13:13","2016-07-15 01:13:13",5
"Command-Line Interface","MobileWeb Platform is deprecated","With 5.4.0 CLI/SDK, MobileWeb platform is deprecated.    While running a build against MobileWeb, show a warning message on the console that MobileWeb Platform has been deprecated!    This also applicable for creating and packaging modules.  ",Story,High,Closed,"2016-07-08 11:35:29","2016-07-08 11:35:29",2
"Command-Line Interface","Unable to build a project on Windows from the same directory as an appc.js file","h5.Description    When building a project using {{appc run}} from the same directory as an appc.js file the build process will not begin and instead you will be prompted to select the application to open the appc.js in or the file will automatically open depending on your settings.    *Notes*     *Workaround and explanation*  This happens because of {{.js}} being present in the {{PATHEXT}} environment variable that contains all files that are seen to Windows as executable. Removing {{.js}} from {{PATHEXT}} will make this work, but I am unsure of any consequences to the CLI from doing so.       This behaviour does not always happen in Powershell, if {{appc run}} is run in Powershell then the build process will take place. If just {{appc}} is run then it will open the file.    h5.Steps to reproduce    # On a Windows machine clone https://github.com/appcelerator/hyperloop-examples  # Attempt to build using {{appc run -p android -T device --build-only}}    h5.Actual result    You will be prompted for the application to open {{appc.js}} with or the file will open    h5.Expected result    The build process should run",Bug,Critical,Reopened,"2016-07-04 15:57:58","2016-07-04 15:57:58",5
"Command-Line Interface","reference to latest acs cli 1.2.1","we just released a new acs cli 1.2.1 please include in the cli. ",Story,Critical,Closed,"2016-06-30 18:18:58","2016-06-30 18:18:58",1
"Command-Line Interface","Hyperloop: Entitlement verification when building","Currently, even thought we implemented a way for developers to be able to only obtain the hyperloop module if they have the entitlements, anyone can still build it as long as they get their hands on the module.   We need to modify the CLI such that during the build, if hyperloop is enabled, we will check the entitlements to ensure that the developer has permissions to build using hyperloop.  ",Improvement,Critical,Closed,"2016-06-30 16:59:09","2016-06-30 16:59:09",5
"Command-Line Interface","Update appc-app-preview-cli-hook to latest version","I've just made some improvements to appc-app-preview-cli-hook to show better logging messages in Studio.  This needs to gets included in the core CLI distribution.  Current version is 0.4.1 and has been published to NPM.",Improvement,High,Closed,"2016-06-30 02:05:57","2016-06-30 02:05:57",2
"Command-Line Interface","Improve failure message when trying to build Titanium 6.0.0 with Node < 5","I just tried a recent build of the Titanium SDK 6.0.0 and got the following error:    {quote}  Titanium SDK 6.0.0 is incompatible with Node.js v0.12.7    You will need to install Node.js v5 in order to use this version of the Titanium SDK.  {quote}    We should include an install-command to upgrade to Node.js and (optionally) a link on how to upgrade properly. Many people will run into this issue, so we should help them as best as possible.    h4. Steps to reproduce  Run {{ti create}} from the console using a nightly Titanium SDK 6.0.0 build and NodeJS < 5 (e.g. 0.12.7)    h4. Expected behavior  The build fails, but throws a warning on how to upgrade to NodeJS safely    h4. Actual behavior  Only the above error is thrown, the user has to find out how to upgrade Node manually.",Improvement,High,"In Review","2016-06-29 23:22:34","2016-06-29 23:22:34",3
"Command-Line Interface","Add EU region to appc-cli","Appc-CLI should allow a new environment for the eu region. Currently if the environment is not recognized, the cli will exit. We should create a new environment such that the CLI can point to the new region.",Improvement,High,Resolved,"2016-06-25 01:57:47","2016-06-25 01:57:47",3
"Command-Line Interface","Alloy: CodeAssist in the Appcelerator Studio does not work","When I try to type Alloy. in my controller (index.js), I expect to get CodeAssist options for type ahead. But that does not seem be working in my Studio instance. It works when I type Ti. but does not work for Alloy.",Bug,Critical,Resolved,"2016-02-09 17:13:18","2016-02-09 17:13:18",5
"Command-Line Interface","ti info returned the invalid json output","Here's a bunch of stack traces from my session this morning:    ",Bug,Critical,Closed,"2016-05-31 10:04:59","2016-05-31 10:04:59",5
"Command-Line Interface","If you set access to an Arrow connector, Successfully set access for <ACCESS_RIGHT> to null. will appear","*Details:* If you set access to an Arrow connector, Successfully set access for <ACCESS_RIGHT> to null. will appear.    *Notes:* This is not a regression from current GA stack.    *Steps to reproduce:*  # Generate an empty connector with {{appc generate}}  # Publish the connector  # In the connector, run: {{appc access set public}}    *Actual:* The following message should appear:      *Expected:* Confusing message should not appear.",Bug,Critical,Resolved,"2016-05-25 01:27:41","2016-05-25 01:27:41",3
"Command-Line Interface","appc user remove returns invalid action error","*Details:* If you run {{appc user remove}}, {{Error: invalid action remove}} is returned.    *Notes:* This is not a regression from current GA stack.    *Steps to reproduce:*  # In terminal, run {{appc user remove}}    *Actual:*  {{Error: invalid action remove}} is returned:      *Expected:* No errors should be returned.",Bug,None,Closed,"2016-05-25 00:43:17","2016-05-25 00:43:17",1
"Command-Line Interface","Support login via GitHub","Users can sign up with GitHub and use it to sign in to the dashboard, but not the CLI.    See APPTS-7024 for the discussion.    We need to investigate if signing in to the CLI with GitHub is possible (with a good UX).    !cli.png|thumbnail!    If so, and Studio (TISTUD-8507) is able as well we need to implement it. If not, then we should remove the ability to sign up with GitHub in the first place.","New Feature",Medium,Open,"2016-05-24 08:53:53","2016-05-24 08:53:53",13
"Command-Line Interface","appc should invoke acs cli with -h http://on-premise cluster","Rantha reported that he deployed an on-premise cluster with http only and when he used appc cli, the ~/.acs file ( result of invoking acs) uses port 443 instead of port 80. This is because appc cli didn't invoke acs cli properly , see ticket NODEJS-2513. ",Improvement,High,Closed,"2016-05-20 19:36:10","2016-05-20 19:36:10",3
"Command-Line Interface","An error is returned when packaging after using appc switch ","*Steps to reproduce:*   # appc login to a indie org  # appc switch to a team  # appc new create a new application  # appc run -p android -T dist-playstore -l trace        *Actual Prod:*      *Actual Preprod:*            *Expected:*  No error is returned ",Bug,None,Closed,"2016-05-20 01:10:00","2016-05-20 01:10:00",5
"Command-Line Interface","Enterprise subscr w/out Test - tooling should not download new soasta versions","We have an enterprise subscription without the Test component. Yet, I have to wait an interminably long time after entering {{appc run}} while a new version of soasta is downloaded and installed. Any time I open Studio or a project with Studio, I have to wait while it checks for then downloads new soasta builds. If I import a project, I'm prompted to enable Test. These actions waste my time and add confusion to our use of your tooling.    If a customer does not have a Test subscription, the tooling should not interact with Test. ",Bug,Critical,Closed,"2016-05-18 19:54:08","2016-05-18 19:54:08",5
"Command-Line Interface","LiveView hook should be moved to the Unified CLI","LiveView is a CLI plugin that lives under Studio and is not hooked into the (Unified) Titanium CLI until it has been run via Studio. Every time the LiveView version changes because you've updated Studio you also have to run it once via Studio to have the hook path updated.    The LiveView hook should be moved to the Unified CLI so that it no longer depends on Studio.",Improvement,High,Closed,"2016-05-18 07:32:18","2016-05-18 07:32:18",8
"Command-Line Interface","appc ti -v should not require login","Currently {{appc ti -v}} requires login, which it should not since you should always be able to get the version, just as you can for {{appc alloy}} and {{appc acs}}:    ",Bug,None,Closed,"2016-05-06 19:26:49","2016-05-06 19:26:49",1
"Command-Line Interface","CLI to use security server instead of registry for login","Part of the [SEC-4] arrow port of security server, we should have CLI point to the new security endpoint rather than registry. We will also need to probably have a proxy server re-route traffic from registry's old login endpoint to the new security server as we cannot guarantee all CLI will be updated at the same time.      There are the URLs that have been changed.    POST https://www.software.appcelerator.com/api/login  GET https://www.software.appcelerator.com/api/checkSession  GET https://www.software.appcelerator.com/api/orgs  POST https://www.software.appcelerator.com/api/org  GET https://www.software.appcelerator.com/api/whoami  ","New Feature",Medium,Closed,"2016-05-04 23:52:14","2016-05-04 23:52:14",5
"Command-Line Interface","If you run appc setup with the help flag, then appc setup will try to find/download the latest core first","*Details:* If you run {{appc setup}} with the help flag, then {{appc setup}} will try to find or download the latest core first before displaying the help options.    *Note:* This *is not a regression*.    *Steps to reproduce:*  # Run {{appc setup --help}} or {{appc setup -h}}    *Actual:* The CLI will try to find or download the latest core first:      *Expected:* The CLI should not find or download the latest core when running {{appc setup}} with the help flag.",Bug,High,Closed,"2016-05-04 19:32:51","2016-05-04 19:32:51",3
"Command-Line Interface","If you pass --help or -h flag to appc ti, then Cannot read property 'match' of undefined error is returned","*Details:* If you pass {{--help}} or {{-h}} flag to {{appc ti}}, then {{Cannot read property 'match' of undefined}} error is returned.    *Notes:*  * This is *not a regression*.  * The help usage sill appears even though you will encounter the error.    *Steps to reproduce:*  # From terminal, run: {{appc ti -h}} or {{appc ti --help}}    *Actual:* {{Cannot read property 'match' of undefined}} error is returned:      *Expected:* No errors should be returned when using the help flag.",Bug,High,Closed,"2016-05-03 23:26:29","2016-05-03 23:26:29",3
"Command-Line Interface","Uploading app to app preview progress bar is seen multiple times in the studio console ","h5.Steps to reproduce:  1. Package an app for app preview from studio.  2. In the app preview configuration put in the email of the testers to invite.  3. Click on OK.    h5.Actual Results:  1. After the app is packaged & the app is uploaded to app preview you will see multiple progress bars.  NOTE: Attached screenshot for reference.    h5.Expected Results:  1. We should see only one progress bar. ",Bug,Medium,Closed,"2016-05-03 01:50:57","2016-05-03 01:50:57",3
"Command-Line Interface","(node:19181) fs: re-evaluating native module sources is not supported. message appears when you run appc new with Node 6","*Details:* If you run {{appc new}} with Node 6, then {{(node:19181) fs: re-evaluating native module sources is not supported.}} message will appear.    *Steps to reproduce:*  # Make sure you installed Node 6  # Run {{appc new}}    *Actual:* {{(node:19181) fs: re-evaluating native module sources is not supported.}} message will appear:      *Expected:* No weird messages should appear.",Bug,Critical,Closed,"2016-04-28 01:19:02","2016-04-28 01:19:02",3
"Command-Line Interface","We are displaying an OEM vendor name in logging and should not","We are displaying soasta in logging during new project setup and we should not.  The correct product name is AppC Test.  ",Bug,High,Closed,"2016-04-26 19:09:35","2016-04-26 19:09:35",2
"Command-Line Interface","appc ti config -r <key> does not remove the key but instead asks for login","h5.Steps to reproduce:  1. Run appc ti config -r <key>.    h5.Actual Results:  1. You will be asked to login to CLI. (I double checked & I was logged in already)  2. appc ti config --remove <key> works as expected.    h5.Expected Results:  1. -r flag should remove the key.  ",Bug,Critical,Closed,"2016-04-20 22:43:25","2016-04-20 22:43:25",1
"Command-Line Interface","If you create a mobile project with appc new --project-dir, then the CLI will prompt you to override the specified directory","*Details:* If you create a mobile project with {{appc new --project-dir}}, then the CLI will prompt you to override the specified directory e.g.:      *Notes:*  * This is *not a regression*.  * To workaround this issue, you will need to specify the project name at the end of the project-dir:    * This issue does not appear with {{appc ti create}}:       *Steps to reproduce:*  # Create a mobile project with all the required flags:      *Actual:* CLI will prompt you to override the specified project-dir; see above for output.  *Expected:* CLI should not prompt you to override the specified project-dir and just create the project in the specified project-dir.",Bug,Medium,Closed,"2016-04-19 18:24:42","2016-04-19 18:24:42",3
"Command-Line Interface","CLI not responding on self signed certificate","h6.description  When we use self signed certificate internally for the firewall,  we are getting the following error for appc or appc setup command    {code:title=Error}  [010132125106:bin cprice$ DEBUG=* appc setup -l trace   appc:bin install bin is undefined +0ms   appc:bin main subcommand setup +4ms   appc:bin main setup found +9ms   appc:bin main - !installBin or couldn't find it null +0ms   appc:install preflight checks, is this windows? 0 +1ms   appc:install home directory located at /Users/cprice +1ms   appc:install install, wantVersion: , url: https://software.appcelerator.com/api/appc/install/, bin: +59ms   appc:download download start, quiet 0, banner 1 +2ms   appc:download download called with arguments: { '0': false, '1': false, '2': '', '3': '/var/folders/zs/hnjjcnrn72j7mrd6hhnj50k5z62p65/T/appc-1460744471524.tar.gz', '4': { _writableState: { objectMode: false, highWaterMark: 16384, needDrain: false, ending: false, ended: false, finished: false, decodeStrings: true, defaultEncoding: 'utf8', length: 0, writing: false, corked: 0, sync: true, bufferProcessing: false, onwrite: [Function], writecb: null, writelen: 0, bufferedRequest: null, lastBufferedRequest: null, pendingcb: 0, prefinished: false, errorEmitted: false }, writable: true, domain: null, _events: { finish: [Object] }, _maxListeners: undefined, path: '/var/folders/zs/hnjjcnrn72j7mrd6hhnj50k5z62p65/T/appc-1460744471524.tar.gz', fd: null, flags: 'w', mode: 438, start: undefined, pos: undefined, bytesWritten: 0 }, '5': 'https://software.appcelerator.com/api/appc/install/', '6': [Function], '7': false } +0ms   Finding latest version ... appc:download connection attempt 1 of 10 +4ms   appc:util request {url:{protocol:https:,slashes:true,auth:null,host:software.appcelerator.com,port:443,hostname:software.appcelerator.com,hash:null,search:null,query:null,pathname:/api/appc/install/,path:/api/appc/install/,href:https://software.appcelerator.com/api/appc/install/},headers:{user-agent:Appcelerator CLI/4.2.4 (darwin),host:software.appcelerator.com,appc-token:null}} +179ms   - appc:util request error +1s { [Error: self signed certificate in certificate chain] code: 'SELF_SIGNED_CERT_IN_CHAIN' }   appc:download error from download was: { [Error: self signed certificate in certificate chain] code: 'SELF_SIGNED_CERT_IN_CHAIN' } +2ms   appc:error creating AppCError Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at <EMAIL>., com.appcelerator.install.download.server.response.error +1ms   appc:util fail { [AppCError: Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at <EMAIL>.] id: 'com.appcelerator.install.download.server.response.error', name: 'AppCError', message: 'Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at <EMAIL>.' } +2ms      appc:error creating AppCError Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at <EMAIL>., com.appcelerator.install.download.server.response.error +1ms   appc:util fail { [AppCError: Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at <EMAIL>.] id: 'com.appcelerator.install.download.server.response.error', name: 'AppCError', message: 'Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at <EMAIL>.' } +2ms   AppCError: Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at <EMAIL>.   at Object.exports.createError (/usr/local/lib/node_modules/appcelerator/lib/error.js:157:10)   at /usr/local/lib/node_modules/appcelerator/lib/download.js:49:29   at Request.<anonymous> (/usr/local/lib/node_modules/appcelerator/lib/util.js:535:10)   at Request.emit (events.js:107:17)   at Request.onRequestError (/usr/local/lib/node_modules/appcelerator/node_modules/request/request.js:831:8)   at ClientRequest.emit (events.js:107:17)   at TLSSocket.socketErrorListener (_http_client.js:271:9)   at TLSSocket.emit (events.js:129:20)   at TLSSocket.<anonymous> (_tls_wrap.js:942:18)   at TLSSocket.emit (events.js:104:17)     Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at <EMAIL>.        {code}",Bug,Critical,Resolved,"2016-04-15 19:40:50","2016-04-15 19:40:50",13
"Command-Line Interface","-o (org-id) is not honored with appc login","*Details:* If you use {{-o}} to specify the org id with {{appc login}}, then you will still be prompted to specify the org.    *Notes:*  * This is not a regression from Appc CLI Core 5.2.2.  * {{--org-id}} still works with {{appc login}}.    *Steps to reproduce:*  # Login from the CLI with {{-o}}: {{appc login --username <user> --password <pass> -o <org-id>}}    *Actual:* You will be prompted for the org id; see attachment.  *Expected:* You should not be prompted for the org id.",Bug,Medium,Closed,"2016-04-15 19:04:49","2016-04-15 19:04:49",1
"Command-Line Interface","Appcelerator Login not triggered when login is required on production build ","h3. When I try to build for Play Store while Appcelerator Login is required, an error is triggered, and the login screen is not shown. Error below.    This is from Appcelerator Studio.        ",Bug,Critical,Closed,"2016-04-01 12:15:46","2016-04-01 12:15:46",3
"Command-Line Interface","Windows: Modules cannot be compiled using appc","Windows modules cannot be compiled using {{appc run}}        ",Bug,High,Closed,"2016-04-07 17:42:49","2016-04-07 17:42:49",8
"Command-Line Interface","Add retire.js to build process to check for security issues","*Notes*  The {{appc-cli}} package, amongst others, utilizes the [https://github.com/appcelerator-modules/grunt-appc-js](grunt-appc-js) task to run a grunt plugin for retire.js during its build. The configuration of the retire.js grunt plugin is not working though    *Steps to reproduce:*  # Within the appc-cli package run: {{grunt}}    *Actual:*  retire.js does not check any source code, neither from appc-cli source nor any node modules.      *Expected:*  retire.js should check all module source code files and all node module dependencies.",Story,High,Reopened,"2016-04-06 17:28:47","2016-04-06 17:28:47",8
"Command-Line Interface","Appc config get <key> always returns null","h5.Description    When running {{appc config get <key>}} the value will always return null when using 5.2.0 or higher. *This is a regression from 5.1.0*    {code: title=5.2.1}  C:\Users\Ewan\Documents>appc config get environmentName  Appcelerator Command-Line Interface, version 5.2.1  Copyright (c) 2014-2016, Appcelerator, Inc.  All Rights Reserved.    null      h5.Steps to reproduce    1. Run appc config get environmentName    h5.Actual result    {{null}} will  be returned    h5.Expected result    The correct value should be returned",Bug,Critical,Closed,"2016-04-01 20:45:41","2016-04-01 20:45:41",3
"Command-Line Interface","appc use seems to broken with core 5.2.1-18 in preprod","h5.Steps to reproduce:  1. Install core 5.2.1-18 in preprod & run appc use    h5.Actual Results:  1. Error is thrown:    2. It seems to be intermittent.    h5.Expected Results:  1. appc use should list the available core versions.",Improvement,High,Resolved,"2016-03-22 21:32:10","2016-03-22 21:32:10",3
"Command-Line Interface","iOS: i18n and platform folders not handled correctly by Alloy in CLI","Please see ALOY-1365 for information about the changes made for Alloy referred to in this ticket.    When trying to build an Alloy project with existing {{i18n}} and {{platform}} folders (without an {{alloy_generated}} file present in them), no message is shown to move the folders/files and the build succeeds when it should fail.    *Steps to reproduce issue*  1. Create a new project with {{appc new}}  2. {{cd}} into the project  3. Create {{i18n}} and {{platform/ios}} directories. Place files in them  4. Build the project with {{appc run -p ios}}    *Expected Results*  The build fails and a message is shown indicating that the {{i18n}} and {{platform}} folders should be moved into the app directory    *Actual results*  No message is shown and the build succeeds    *Notes*  The project will correctly show the message and fail the build using {{ti build -p ios}}",Bug,Critical,Closed,"2016-03-22 18:28:24","2016-03-22 18:28:24",1
"Command-Line Interface","proxyServer not working when building for the first time on CLI","This issue happens when the {{proxyServer}} property is set in CLI ({{appc config set proxyServer http://myproxy.local}}).    If I try to login to platform ({{appc login}}) it works well, as it correctly performs the http connection to Appcelerator servers.    BUT, once I try to build my app to a destination (being simulator or device) it fails with the following error: {{You are offline but this is the first time you are building this application with this configuration. You must be online once with this build configuration and then you can do subsequent builds offline}}.     Off course, this issue doesn't happen when I have the opportunity to connect without a proxy (hence without the {{proxyServer}} property set).",Bug,Critical,Closed,"2016-03-16 10:36:21","2016-03-16 10:36:21",5
"Command-Line Interface","If you install Appc CLI Core >= 5.2.1-3, then a corrupted appcelerator tgz will appear in the package folder","*Details:* In preprod, if you install Appc CLI Core >= 5.2.1-3, then a corrupted appcelerator tgz will appear in the package folder.    *Notes:*  * This does not occur with Appc CLI Core 5.2.0.  * On preprod, Appc CLI Cores < 5.2.1-3 does not contain the corrupted .tgz file.  * It does not seem to be the Appc CLI Core itself.    *Steps to reproduce:*  # Go to preprod  # Run {{appc use 5.2.1-16}} or later  # Go to {{~/.appcelerator/install/5.2.1-16/package/}}    *Actual:* The .tgz file will appear; see attachments.    *Expected:* The .tgz file should not appear in that directory.  ",Bug,Low,Resolved,"2016-03-17 22:41:26","2016-03-17 22:41:26",3
"Command-Line Interface","-h flag returns error despite it running correctly ","h5. Description:    when running appc <command> -h the options for the specified command is returned correctly, however the following error occurs: {{error: unknown option `-h'}} . Additionally -h is not recognised when run with appc use.     h5. Steps to reproduce:  1. appc use 5.2.1-12  2. run any appc command with -h following.  3. run appc use -h    h5. Result:    2. Error is returned.  3. appc use -h ignores the flag and instead runs the command.    h5. Expected Result:    2: Error should not be returned.  3: Should return help options for appc use.   ",Bug,None,Resolved,"2016-03-09 23:08:06","2016-03-09 23:08:06",0
"Command-Line Interface","CLI: enable template options when creating Alloy project","At the moment there is no way to create the {{two_tabbed}} alloy project from CLI, a strongly desired feature related to linked tickets.    Command to use:  {{appc new -t titanium --template two_tabbed}} ",Improvement,Medium,Closed,"2016-03-09 19:10:37","2016-03-09 19:10:37",3
"Command-Line Interface","Unable to build modules from Appc CLI","I am unable to build modules from the Appc CLI.    *Steps to reproduce issue*  1. Create a new module using: {{appc new -n testMod --id com.appc.testmod}}  2. When prompted, select Titanium Module  3. {{cd}} into {{testMod/iphone}}  4. Build the module with {{appc run -p ios --build-only}} or {{appc ti build -p ios --build-only}}    *Actual Results*  The module fails to build with respective errors:  {{ERROR  | No valid targets for run. Are you in a project folder?}}  and  {{[ERROR] Unable to find undefined module}}    *Expected Results*  The module build succeeds without issue, like the Titanium CLI command will:  {{ti build -p ios --build-only}}",Bug,Critical,Closed,"2016-03-04 18:46:03","2016-03-04 18:46:03",3
"Command-Line Interface","CLI should not tell a user to install a pre-release CLI as an update from a GA version","h5.Description    When telling a user that there is a new CLI we currently will tell them to update to a pre-release version. We should only tell a user to update if the version is not pre-release. See the below.        In the updateCheck method we appear to be [calling the|https://github.com/appcelerator/appc-install/blob/master/lib/util.js#L747] {{api/appc/list}} endpoint, we should either filter the pre-release CLIs from this using the prerelease parameter or we should use the {{api/appc/latest}} endpoint.    *This also shows that the logic used is incorrect or does not compare the actual version numbers as 5.2.0-265 should not be considered an update to 5.2.0*    h5.Steps to reproduce    1. Remove the lastUpdateCheck property from your appc-cli.json file  2. Run an appc command such as {{appc config}}    h5.Actual result    1. The following will be printed out, prompting the user to update to a pre-release version     h5.Expected result    1. We should only prompt a user to update to if the version is not pre-release",Bug,High,Closed,"2016-03-03 20:20:23","2016-03-03 20:20:23",3
"Command-Line Interface","Install Appcelerator CLI - package wasn't found in unpacked tree","I'm getting the following warnings when running sudo npm install appcelerator -g.        The CLI still finished install and works OK      http://stackoverflow.com/questions/35626627/cannot-install-appcelerator-cli-package-wasnt-found-in-unpacked-tree",Bug,Medium,Resolved,"2016-03-03 13:45:10","2016-03-03 13:45:10",3
"Command-Line Interface","CLI should ask to register Titanium app if needed","When you publish an Arrow app that has not been registered it says:        When you build a Titanium app that has not been registered it says:        It would improve the developer experience if it would show a similar message and prompt:        The second prompt is also important because in a lot of scenarios (tests, samples..) you don't want to (which is the default).",Improvement,High,Open,"2016-03-03 12:55:59","2016-03-03 12:55:59",5
"Command-Line Interface","unpublish version flag confusion","See attached screenshot.  The CLI docs say you can use the flag --version when unpublishing a version but per the screenshot..it doesn't recognize it exists.  When you use the flag --ver it does work however.    Either both should work (as the docs indicate) or make one work and remove the indication that both should work.",Improvement,Medium,Closed,"2016-03-02 02:56:08","2016-03-02 02:56:08",5
"Command-Line Interface","Process doesn't cleanup children in certain scenarios","While running the arrow unit tests from the CLI, some of the cluster tests fail because the cli isn't properly given the arrow run plugin the time to run it's process exit handlers - orphaning child processes created by the plugin.",Bug,High,Resolved,"2016-02-27 03:57:02","2016-02-27 03:57:02",8
"Command-Line Interface","Windows: config files are written to different drive than process.env.HOME","On Windows, some users are not able to create an arrow app from a different drive than the home drive.  This may also happen when {{HOME}} is not set initially, in either case appc will fallback to {{HOMEPATH}}. On Windows {{HOMEPATH}} is relative path.  \\  h5. Reproduce steps  1. appc use 5.2.0  2. appc logout  3. go to another drive  4. create an arrow appc  \\  h5. Expected result  An arrow app should be created after login  \\  h5. Actual result  `ERROR  | Error: You are not logged in. Please login again.`",Bug,High,Closed,"2016-02-27 03:04:30","2016-02-27 03:04:30",5
"Command-Line Interface","In preprod, appc whoami --full command returns only half output to Studio ","Studio calls {{appc whoami --full}} command during its startup to load all organization details. However, on preproduction environment with Node 4.x version, then Studio receives truncated output for appc whoami command for staff users.    Node 4.x can not pipe the process output for more than 65k characters. Since Studio receives truncated output, it wasn't able to parse the orgs data, and the auto-login fails as well.",Bug,High,Closed,"2015-11-11 01:25:41","2015-11-11 01:25:41",8
"Command-Line Interface","APPC publish should honor --no-prompt flag","{{appc publish --no-prompt}} flag should be honored, and if used there should be no prompts.",Improvement,High,Closed,"2016-02-23 22:22:10","2016-02-23 22:22:10",3
"Command-Line Interface","APPC publish prompt does not have a default selection","At the moment {{appc publish}} prompt doesn't select any components by default:       It will be more intuitive  to have a default selection highlighted :   ",Improvement,Low,Open,"2016-02-23 21:54:55","2016-02-23 21:54:55",1
"Command-Line Interface","Core 5.2.0 displays incorrect/confusing warning if NPM is still < 4.2.3","We hard-coded a minimum version for the NPM part of the CLI, but haven't updated it to use the GA so it's still asking for 4.2.3-2.    We need CLI-757 and CLI-696 resolved to prevent this in the future.",Bug,High,Resolved,"2016-02-23 09:10:05","2016-02-23 09:10:05",2
"Command-Line Interface","Running appc access get on an unpublished app won't throw correct error","h5. Description  Trying to run this command should throw up an incorrect error.    h5. Steps to Reproduce  1. Create a connector  2. Run appc access get before publishing    h5. Expected Results  Error to appear along the lines of The server returned an empty response.  Note that components that have not been published yet will return empty responses like this.    h5. Actual Result  Error thrown says No matching component!",Bug,Critical,Closed,"2016-02-04 21:48:29","2016-02-04 21:48:29",5
"Command-Line Interface","iOS: Unable to package project. 'Undefined is not a function'","When trying to package a project for iOS, store or adhoc, I receive the following error:      *Steps to reproduce issue*  1. Create a new project (Classic or Alloy)  2. Try to package the project for App Store or Adhoc    *Expected Results*  The project is packaged successfully without error.    *Actual Results*  The above error is encountered and packaging fails.    *Notes*  Packaging from the CLI is working as expected.  No Studio logs are generated.",Bug,Critical,Closed,"2016-02-11 23:42:29","2016-02-11 23:42:29",5
"Command-Line Interface","If you use -o json, then text is returned along with the JSON data","*Details:* If you use -o json, then text is returned along with the JSON data.    *Notes:*   * This is  a *regression* from Appc CLI Core 5.1.0.  * This is *affecting Studio* from running an Android project; see no_android.png and no_android2.png attachments and see stack trace from Studio:    * This is *affecting Studio* from launching the dashboard:      *Steps to reproduce:*  # Create a Titanium mobile project  # In the mobile project, run {{appc ti project -o json}}    *Actual:* The warning message appears along with the JSON data:      *Expected:* Only JSON data should appear; no warning messages.",Bug,High,Closed,"2016-02-10 18:38:37","2016-02-10 18:38:37",1
"Command-Line Interface","appc command random results command.opts is not a function error ","h5. Reproduce steps  1. appc use 5.2.0-249   2. do any appc command, add another string after it appc new meinkampf errors out:      h5. Expected result  1. the command should carry on with no exception.",Bug,High,Closed,"2016-02-09 21:12:40","2016-02-09 21:12:40",3
"Command-Line Interface","Output warning message if appc-install is less than 4.2.3-2","AppC CLI 5.2.0 requires appc-install 4.2.3 to work, refer to linked issues for details.    ",Improvement,High,Closed,"2016-02-09 20:12:28","2016-02-09 20:12:28",1
"Command-Line Interface","Unable to unpublish appc-cli from registry","# Log into the production registry  # Do `appc use`  # Find a 0.2.X-era CLI  # `appc unpublish appc-cli/appcelerator@<version>`    Error: ERROR  | No component found or specified for unpublish",Bug,Critical,Resolved,"2016-02-09 00:27:16","2016-02-09 00:27:16",5
"Command-Line Interface","create is an unrecognized command error when selected sdk is removed","QEs unearthed this while verifying CLI-885    h5. Reproduce steps  1. delete current selected sdk  2. 'appc new' errors out:  ",Bug,None,Open,"2016-02-08 22:04:21","2016-02-08 22:04:21",5
"Command-Line Interface","Alloy/Titanium via Unified CLI exits with code 0 while child process exits with 1","As reported on Twitter (https://twitter.com/ercpe/status/694852549652975616), the cli interface always exits with code 0, even on build errors which makes executing it as a part of continuous integration nearly impossible.    Setup: Linux, 64 bit (haven't tried to run the build on a Mac yet).    I haven't done the initial installation of appcelerator myself, but appcelerator and titanium appears to be installed in the global node_modules directory:        Whenever i call {{appc}} or {{ti}} the binary exits with 0:            Executing the {{node}} command line from the output above fails because of the missing config json but uses a proper exit code:    ",Bug,High,Closed,"2016-02-04 08:07:28","2016-02-04 08:07:28",3
"Command-Line Interface","9.2.1 iPhone crashes when jailbreak-detect is enabled","A customer has reported that a test app (source code attached) will crash on an iOS device at 9.2.1 when jailbreak-detect is setup in tiapp.xml    *Environment info*  SDK 5.1.2.GA  CLI 5.1.0    *Tested devices*  iPhone @ 9.2.1    *Test Case*       *Expected Result*  App runs basic hello world app    *Actual Result*  App crashes, no useful logs appear in the console      ",Bug,Critical,Closed,"2016-02-03 21:57:50","2016-02-03 21:57:50",8
"Command-Line Interface","When installing new SDK, the CLI Does not allow ctrl + c","When installing new SDK using {{appc ti sdk install -d -b 5_2_X}}, the CLI does not install or allow ctrl + c to cancel.    *Steps to reproduce issue*  1. Run {{appc ti sdk install -d -b 5_2_X}}    *Expected results*  The SDK downloads and is set to the default    *Actual results*  The SDK is not downloaded and will not let you ctrl + c (see image)",Bug,Critical,Closed,"2016-02-01 23:39:11","2016-02-01 23:39:11",3
"Command-Line Interface","Error during arrow app publishing: unknown option `--username' with CLI 5.2.0-233","--username argument is not recognised with CLI  5.2.0-233          ",Bug,Critical,Closed,"2016-01-25 18:18:37","2016-01-25 18:18:37",2
"Command-Line Interface","CLI flags are not being honored","h5. Description:  When trying to create a new project in studio, under platform services, the organization is not recognised    when running the commands {{appc whoami --no-progress-bars}} & {{appc whoami --no-prompt}} the options are not recognised.  the aforementioned commands work correctly when using appc CLI 5.1.0.    *This is a {color:red}regression{color}.*     h5. Steps to reproduce:  1. appc use 5.2.0-231  2. run the command: {{appc whoami --no-progress-bars}}.  3. run the command: {{appc whoami --no-prompt}}  h5. Result:    {{error: unknown option `--no-progress-bars'}}    h5. Expected Result:    commands should be recognised.",Bug,Critical,Closed,"2016-01-21 00:40:10","2016-01-21 00:40:10",5
"Command-Line Interface","appc-security-jailbreak-detect does not prevent application launch on rooted Android device","[Documentation|http://docs.appcelerator.com/platform/latest/#!/guide/tiapp.xml_and_timodule.xml_Reference-section-29004921_tiapp.xmlandtimodule.xmlReference-appc-security-jailbreak-detect] specifically says android rooted devices.   {quote}  The special property appc-security-jailbreak-detect can be used to increase the security of your application by preventing the mobile app from running on a Jailbroken (iOS) or rooted (Android) device.  {quote}    In my testing this does not work.     h2. Steps to reproduce    h3. Create app      h2. Add properties just to be extra sure that the properties in enabled  // note I test with no properties too      h2. Build the app      h3. Launch  Open the app on the device    h3. Expected vs Actual  *Expected*  App closes right away or doesn't open   *Actual*  App opens and works like a normal app",Bug,Critical,Closed,"2016-01-15 20:31:13","2016-01-15 20:31:13",5
"Command-Line Interface","-d flag error on appc ti sdk install","When trying to download an SDK and set it to default, in one command, I get the below error:      *Steps to reproduce issue*  1. Run {{appc ti sdk install -b 5_2_X -d}}    *Expected results*  The SDK downloads and is set to the default    *Actual results*  The SDK is not downloaded and the above error is shown    *Notes*  if the '-d' flag is immediately after the word 'install' the command succeeds ({{appc ti sdk install -d -b 5_2_X}})",Bug,None,Closed,"2016-01-14 19:36:14","2016-01-14 19:36:14",3
"Command-Line Interface","Appc alloy -v returns error","When trying to run {{appc alloy -v}} I get the below error      *Steps to reproduce issue*  1. Run {{appc alloy -v}}    *Actual results*  I get the above error    *Expected results*  My alloy version is returned",Bug,Critical,Closed,"2016-01-14 19:28:37","2016-01-14 19:28:37",5
"Command-Line Interface","The prompt for the name should say WatchOS2 project name and have the name of the Titanium project filled in as default.","While creating a watchos2 project from studio, the prompt for the name should say _WatchOS2 project name_ and have the name of the Titanium project filled in as default.    Currently in the prompt it shows What's the project name ? rather it should be What's the WatchOS project name ?    Please find the attachment.    ",Improvement,High,Closed,"2015-12-31 03:09:51","2015-12-31 03:09:51",8
"Command-Line Interface","Jailbreak detection fails with <property name=appc-sourcecode-encryption-policy type=string>embed</property>","An application will launch on a jailbroken device with the following property:      *Expected behavior*  Application closes or displays security exception splash screen    *Actual behavior*  Application loads regardless of jailbroken state    *Tested against the following*  iPhone 6 @ 9.0.2 fails to detect JB with embed policy  iPhone 4s @ 7.1.0 fails to detect JB with embed policy    *SDK and environment*  appc ti sdk  -> 5.1.1.GA  tiapp.xml sdk -> 5.1.1.GA    *Steps to test*  1) Open test app // vanilla alloy application  2) Add valid GUID  3) run   4) Record if the app launches on a jailbroken device     *Attached files*  Example application // guid stripped from tiapp.xml  ",Improvement,Critical,Resolved,"2015-12-29 20:29:56","2015-12-29 20:29:56",2
"Command-Line Interface","NPM 3 Flat node_modules Breaks CLI","cli and appc-cli-titanium, at the very least, have paths inside of them that depend on nested node_modules. With npm 3, all of the dependencies and their dependencies are flatly stored in the one node_modules directory, which breaks these references in our code. We need to be less brittle with these references.    To reproduce, I am able to simply `appc use 5.2.0-155`, then try to do something like `appc ti clean` and you should see an error about not being able to find `node_modules/appc-cli-titanium/node_modules/titanium/bin/titanium`.",Bug,High,Resolved,"2015-12-11 21:28:44","2015-12-11 21:28:44",3
"Command-Line Interface","appc config exposes private token info","appc config from version 5.1.0 exposes authentication tokens used between dashboard and ArrowCloud/DB:    acsAuthToken  nodeACSAuthToken    This should not be seen by any uses and poses a security risk.    ",Story,Critical,Closed,"2015-12-09 09:42:03","2015-12-09 09:42:03",3
"Command-Line Interface","Investigate locking down NPM dependencies","When deploying NPM modules, even if we specify exact versions in our package.json file, those dependencies could be less strict in what they choose to use. The end result is that every install of our NPM modules could be different, leading to difficult-to-reporduce bugs.    One solution is to use tools like shrink-wrap or lockdown:    https://www.npmjs.org/doc/cli/npm-shrinkwrap.html  https://www.npmjs.org/package/lockdown    Some goals:    * People can use NPM install from the NPMJS repo like before  * They only get the exact set of direct and indirect dependencies we've tested    There is a concern (as noted in APPTS-1879) that a dependency could be unpublished from NPM. It's unclear how prevalent that is, but it is a possibility.    If we instead decided to host a version of our nodules external to NPMJS, then we'd need to make sure we removed them from the main repo to avoid confusion.  ",Improvement,High,Resolved,"2014-07-21 20:09:25","2014-07-21 20:09:25",13
"Command-Line Interface","Windows: appc-ti stdio can sometimes not register input","On Windows, I found when attempting to switch SDKs using:        That my input was not registered and my SDK was never changed.    Although the documentation for [stdio|https://nodejs.org/api/child_process.html#child_process_options_stdio] says _inherit_ is the same as _process.stdin/stdout_, replacing the current {{[process.stdin, process.stdout, 'pipe']}} with {{['inherit', 'inherit', 'pipe']}} solves the problem.  ",Bug,High,Resolved,"2015-12-07 13:20:31","2015-12-07 13:20:31",3
"Command-Line Interface","Improve CLI Performance","Ingo wants it improved.",Improvement,None,Open,"2015-12-04 19:45:00","2015-12-04 19:45:00",3
"Command-Line Interface","Components being published with prerelease option should match version format m.m.p-x","The components such as appc-cli can now be published with prerelease option even with a version such as 4.0.0. However, according to the prerelease semantic versioning policy, the components should match version format m.m.p-x for being published with prerelease option.    If the version is not matched with that format, then CLI should throw error message and should not publish.",Story,High,Resolved,"2015-12-04 19:08:28","2015-12-04 19:08:28",5
"Command-Line Interface","In production, appc use should not display all 100 published cores in a list","*Details:* Currently in production, if you run {{appc use}}, 100 published cores are displayed in a list:      This seems very unsightly and overwhelming. To make the list seem more manageable:  * The list should only display the latest ten published cores like before.  * *Or,* the list should be displayed in multiple columns.  * *Or,* there should be a pagination system either through flags or interactive prompting.",Improvement,None,Resolved,"2015-12-04 02:32:26","2015-12-04 02:32:26",0
"Command-Line Interface","CLI should not honor invalid url in proxy settings","Studio might be writing down an invalid URL in the proxy configuration such as {{proxyServer: https://null”}}    CLI should not attempt to make a connection using this invalid URL, and it should rather attempt to remove the URL from its configuration.",Bug,Medium,Closed,"2015-12-02 18:54:58","2015-12-02 18:54:58",5
"Command-Line Interface","CLI fails to find core dependencies, incorrect location. ","h5. Description:  Appc CLI fails to find the core dependencies as they are not located in the correct path:       When checking the node_modules folder under apps-cli-titanium, the following modules are missing: {{alloy , titanium , appc-security , node-appc}}    h5. Steps to reproduce:  1. appc use 5.2.0-131  2. navigate to cli folder ( Default location on OSX: {{/Users/harrybryant/.appcelerator/install/5.2.0-131/package/node_modules/appc-cli-titanium/node_modules}} )  3. compare the above list of required modules to the modules found in the path location from step 2.    h5. Result:  Missing modules: {{alloy , titanium , appc-security , node-apps}}    h5. Expected Result:  Missing modules should be placed under path: {{/Users/harrybryant/.appcelerator/install/5.2.0-131/package/node_modules/appc-cli-titanium/node_modules}}",Bug,High,Closed,"2015-12-01 20:01:24","2015-12-01 20:01:24",8
"Command-Line Interface","Windows: Using Node 4.2.2 32-bit results in failure to login","h5. Description:  NOT a regression, as this occurs with CLI 5.0.4.GA as well.  DOES NOT occur with Node 4.2.2 64-bit    While trying to login on Windows with Node 4.2.2 installed, after org selection we get an error:        h5. Steps to reproduce:  1) Install Node 4.2.2 32-bit on a windows machine  2) Run {{appc login}}  3) Enter credentials and select an org    h5. Result:  Failure as see above    h5. Expected Result:  Successful login",Bug,High,Resolved,"2015-11-19 22:20:02","2015-11-19 22:20:02",5
"Command-Line Interface","Appc new should be more cautious when unable to read Ti activeSDK value","When appc new failed to retrieve active Ti SDK version, following error occurred with the command {{appc new}}        h5. Reproduce steps  1. appc use 5.1.0  2. remove/rename {{.titanium/config.json}}  3. remove/rename {{Application Support/Titanium/mobilesdk}}  4. appc new    h5. Expected  result  you should see the following prompt instead of the undefined error      h5. Actual result  Project type selection prompt is not shown, and process errors out:  {{ERROR  | Cannot read property 'split' of undefined}}      ",Bug,Medium,Closed,"2015-11-18 22:45:59","2015-11-18 22:45:59",1
"Command-Line Interface","Cannot create an Arrow project with DEBUG=* and -l trace","*Details:* Cannot create an Arrow project with DEBUG=* and -l trace.    *Note:* This is a *regression* from 5.0.4 core.    *Steps to reproduce:*  # In terminal, run {{DEBUG=* appc new -l trace}}  # Select Arrow App  # Specify a name for your project    *Actual:* Arrow project will fail to be created:      *Expected:* You should be able to create an Arrow project with DEBUG=* and -l trace.",Bug,High,Closed,"2015-11-16 22:39:04","2015-11-16 22:39:04",5
"Command-Line Interface","If you create an Arrow project with European character sets, then the next prompt will be What is the api name?","*Details:* If you create an Arrow project with European character sets, then the next prompt will be What is the api name?.    *Steps to reproduce:*  # In terminal, run {{appc new}}  # Select Arrow App  # Create a project name with European characters like umlaut u    *Actual:* What is the api name? prompt appears; see attachment.  *Expected:* The What is the api name? prompt should not appear when you create an Arrow project.",Bug,High,Closed,"2015-11-16 22:33:58","2015-11-16 22:33:58",2
"Command-Line Interface","appc use command should allow --prerelease option","{{appc use}} command will receive only stable versions by default. If the user wants to pull prerelease versions as well as part of appc use command, then they should use a new option such as {{--prerelease}}.","New Feature",High,Closed,"2015-11-11 20:09:32","2015-11-11 20:09:32",5
"Command-Line Interface","include acs 1.0.31","acs cli 1.0.30 had to be removed because it was published with code from master instead of 1.3.1. we republished 1.0.31. appc cli needs to be updated as well. ",Story,High,Closed,"2015-11-10 02:50:05","2015-11-10 02:50:05",3
"Command-Line Interface","appc cli should use orglist returned by login call instead of contacting dashboard to get the orglist","Currently appc login calls dashboard to get a list of org  the user belongs to then calls acs login which also calls dashboard to get a list of orgs . node.acs server actually caches this org list. To speed up appc login, nodejs-2357 will return the list of orgs it retrieved so that appc login doesn't have to call dashboard at all. ",Improvement,None,Closed,"2015-11-06 23:55:27","2015-11-06 23:55:27",3
"Command-Line Interface","Improve the download payload of appc-cli package by de-duping modules","Currently some modules like appc-platform-sdk are referenced at multiple instances, and there is no need to have multiple copies of same module.     The build should run {{npm dedupe}} before shrinkwrap, so that it will aggregate into a higher package level.",Improvement,Medium,Resolved,"2015-11-06 00:49:37","2015-11-06 00:49:37",5
"Command-Line Interface","In preprod, you cannot import a mobile project with a non-platform guid","*Details:* In preprod, you cannot import a mobile project with a non-platform guid.    *Notes:*  * If you point the current 5.1.0 stack to production, you cannot reproduce this issue.  * The *workaround* is to create another mobile project in preprod and use that project's guid.  * Even though importing a mobile project a non-platform guid works in production and a workaround is available, *this makes testing in preprod with AppcStudio very difficult.*    *Steps to reproduce:*  # Download and unzip XMLModule.zip  # Make sure you are pointing to *preprod*  # Run: {{appc new --import --project-dir <PATH_TO>/XMLModule -l trace}}    *Actual:* You will not be able to import the project. Login required error will be returned:      *Expected:* Should be able to import a mobile project with a non-platform guid in preproduciton.",Bug,High,Closed,"2015-11-03 19:07:14","2015-11-03 19:07:14",5
"Command-Line Interface","Add CLI version installation status in appc use -o json output","Can we add CLI version installation status as part of appc use -o json command output.     Probably something like this or whatever is the best way possible.      Adding a new entry will not break existing consumers.",Improvement,High,Resolved,"2015-11-03 09:56:27","2015-11-03 09:56:27",3
"Command-Line Interface","If incorrect credentials are input on login then the CLI will error with 'The registry server is currently unavailable'","h5.Description    *This is a regression*     The regression seems to be caused by the change [from this check|https://github.com/appcelerator/appc-cli/blob/5_0_4/lib/registry.js#L455] in 5.0.4 to [this check|https://github.com/appcelerator/appc-cli/blob/5_1_X/lib/registry.js#L455] in 5_1_X      When logging in using {{appc login}} and inputting incorrect credentials the CLI will error out with the below after retrying the login 10 times        *This is a regression* from 5.0.4 as the CLI will reprompt when incorrect credentials are input with 5.0.4        Running with DEBUG=* shows that the output received from registry is the same for both versions    {code:title=5.0.4}  arrow:sdk sending request to https://software.appcelerator.com/api/login  arrow:sdk response received err=null, body={ message: 'Invalid Appcelerator ID and password combination.',    code: 400,    success: false,    'request-id': '7a594b36-2dbe-4c0b-b77b-8df4ab6ccbc3' }, status code=500  registry result 500 application/json false undefined true 1  registry returned { message: 'Invalid Appcelerator ID and password combination.',    code: 400,    success: false,    'request-id': '7a594b36-2dbe-4c0b-b77b-8df4ab6ccbc3' }  login returned { [Error: Invalid Appcelerator ID and password combination.] code: 400 } { message: 'Invalid Appcelerator ID and password combination.',    code: 400,    success: false,    'request-id': '7a594b36-2dbe-4c0b-b77b-8df4ab6ccbc3' }  Invalid Appcelerator ID and password combination.  Invalid Appcelerator ID and password combination.      h5.Steps to reproduce    1. Run {{appc login -l trace}}  2. Enter some incorrect credentials    h5.Actual result    The CLI will send a login request 10 times and then error with {{ Error: The registry server is currently unavailable.}}    h5.Expected result    The CLI should throw a prompt asking for the correct credentials",Bug,High,Closed,"2015-10-30 23:59:05","2015-10-30 23:59:05",3
"Command-Line Interface","Plugins directory generated on build for a classic project","h5.Description    When building a classic project there is a plugins directory generated when building the project. When running with {{-l trace}} it shows this line {{TRACE  | Update project alloy hook from version false to 1.0.0}} which originates from [here|https://github.com/appcelerator/appc-cli-titanium/blob/master/plugins/run.js#L137].     h5.Steps to reproduce    1. Create a project using {{appc new --type titanium --name classicApp --id com.appc --classic}}   2. Build the project using {{appc run -p ios}}  3. Check the applications directory    h5.Actual result    There will be a plugins folder in the app directory    h5.Expected result    There should not be a plugins directory in a classic application",Bug,None,Resolved,"2015-10-30 23:24:41","2015-10-30 23:24:41",1
"Command-Line Interface","The --output flag does not work with appc use command","*Details:* The {{--output}} flag does not work with {{appc use}} command.    *Notes:*  * {{appc use --output}} seems to be for internal usage: CLI-468.  * {{appc use -o}} still works.  * This issue appears in the current GA as well.    *Steps to reproduce:*  # Run {{appc use --output json}}    *Actual:* The output from the {{appc use}} command is not in JSON format:      *Expected:* The {{--output}} flag should work along with {{-o}} flag.",Bug,None,Closed,"2015-10-30 18:32:02","2015-10-30 18:32:02",1
"Command-Line Interface","If you build a mobile project to an emulator or simulator while offline, then Error: getaddrinfo ENOTFOUND appears in the console","*Details:* If you build a mobile project to an emulator or simulator while offline, then Error: getaddrinfo ENOTFOUND appears in the console.    *Note:*  * This is *not a regression* since the issue occurs in the current GA stack.  * This occurs with both iOS simulator and Android emulator.  * Even though the error appears, the app still launches fine on the simulator or emulator.    *Steps to reproduce:*  # Create an Alloy project from Studio  # Install the project to simulator or emulator *while online first*  # Disable your internet connection  # Install the project again to simulator or emulator  # Wait for project to launch    *Actual:* Error: getaddrinfo ENOTFOUND appears in the console:      *Expected:* The error should not appear while you are offline.",Bug,None,Open,"2015-10-29 20:07:09","2015-10-29 20:07:09",8
"Command-Line Interface","In Appc CLI, if you create a project with European character sets, then the CLI prompt will not accept them","*Details:* In Appc CLI, if you create a project with European character sets (e.g. B??ckerei H??chste), then the CLI prompt will not accept them.    *Note:*  * To workaround this issue, use the {{--name}} flag with the {{new}} command e.g. {{appc new --name  B??ckerei H??chste}}  * This issue does not appear in Studio since they are using the {{--name}} flag.    *Steps to reproduce:*  # Create a mobile or Arrow project with {{appc new}}  # Go through the steps until you reach What's the project name?  # Enter a name with European character sets e.g. B??ckerei H??chste    *Actual:* Appc CLI prompt will not accept the European characters:      *Expected:* Appc CLI prompt should accept European characters when creating a project.",Bug,High,Closed,"2015-10-28 21:38:55","2015-10-28 21:38:55",5
"Command-Line Interface","appc run can not set port for Arrow apps","According to the documentation, we can set the port for an Arrow application using:  acs run --port XX  http://docs.appcelerator.com/platform/latest/#!/guide/Arrow_Cloud_Command-Line_Interface_Reference   But, using appc CLI there's no way to set a port for the Arrow app  http://docs.appcelerator.com/platform/latest/#!/guide/Appcelerator_Command-Line_Interface_Reference-section-43294287_AppceleratorCommand-LineInterfaceReference-run     ",Improvement,Medium,Closed,"2015-10-26 17:59:26","2015-10-26 17:59:26",5
"Command-Line Interface","Add additional debug logging for error conditions in `appc use` and `appc login` ","When the registry server is down, the amount of information output to the console in debug mode is limited or non-existent.    Things to instrument:    * Retry of requests  * Error codes returned",Improvement,Medium,Resolved,"2015-10-14 21:17:27","2015-10-14 21:17:27",1
"Command-Line Interface","If you install a mobile app to device or simulator/emulator, the parent process does not fully terminate if you try to kill it","*Details:* If you install a mobile app to device or simulator/emulator, the parent process does not terminate if you try to kill it.    *Steps to reproduce:*  # In Studio or CLI, create a mobile project  # Install to device or simulator  # Wait for app to launch  # From Studio, press the terminate button. From CLI, kill the parent process    *Actual:* The parent process does not fully terminate.  *Expected:* The parent process should be completely killed.",Bug,High,Closed,"2015-10-16 19:38:42","2015-10-16 19:38:42",8
"Command-Line Interface","If you run appc -v -o json, then Appc CLI NPM will not understand the -o flag","*Details:* If you run {{appc -v -o json}}, then the Appc CLI NPM will not understand the {{-o}} flag i.e. The version specified -o was not found error will be returned.    *Notes:*  * This is a regression from Appc CLI NPM 4.2.0 *and* 4.2.1-4.  * The {{-o}} flag still works with other commands e.g. {{appc use -o json}} still returns the Appc CLI core versions in JSON format.  * To workaround this issue, you can specify the long format e.g. {{appc -v --output json}}    *Steps to reproduce:*  # Make sure you installed Appc CLI NPM version 4.2.1-5 or greater  # Run the command: {{appc -v -o json}}    *Actual:* Appc CLI NPM will not understand the {{-o}} flag:      *Expected:* Appc CLI NPM should understand the {{-o}} flag.",Bug,Medium,Closed,"2015-10-15 01:08:11","2015-10-15 01:08:11",5
"Command-Line Interface","Improve performance of appc -v command","When the registry server is not reachable, or slow to respond, then {{appc -v}} command takes a long time to execute, and print package's version. Since it is just about printing the local package version, the availability of registry server shouldn't impact on {{appc -v}} command's performance.",Improvement,High,Resolved,"2015-10-15 00:01:31","2015-10-15 00:01:31",5
"Command-Line Interface","Switch org: Error thrown when logging into org that user is currently logged in to","h5.Description     When switching to the org that is currently logged into the CLI will throw the following error {{ERROR  | Invalid organization value.}}. This is because the [org is deleted from the org list|https://github.com/appcelerator/appc-cli/blob/master/lib/commands/switch.js#L53].     h5.Steps to reproduce    1. Log using {{appc login}} and then get the org id from {{email logged into organization org \[org-id]}}  2. Switch to that org using {{appc switch org --org-id <org-id>}}    h5.Actual Result    The CLI will throw the error {{ERROR  | Invalid organization value.}}    h5.Expected Result    The CLI should print out {{You are already logged in to the organization.}} as seen [here|https://github.com/appcelerator/appc-cli/blob/master/lib/commands/switch.js#L57]",Bug,High,Closed,"2015-10-13 00:57:17","2015-10-13 00:57:17",2
"Command-Line Interface","Cannot login to prod; body parameters error","When using Appc CLI 5.1.0-36 and trying to log in to Production, I get the following error:        *Steps to reproduce issue*  1. Select CLI 5.1.0-36  2. Log out with {{appc logout}}  3. Login with {{appc login}}    *Actual Results*  I get the above error and cannot login    *Expected Results*  No error is encountered and login is successfull",Bug,Critical,Closed,"2015-10-09 16:53:08","2015-10-09 16:53:08",5
"Command-Line Interface","Packages should be rebuild if NodeJS version has changed since last use","When user updates (or downgrades) NodeJS this can break NPM packages or cause strange side effects like CLI-827. This seems in particular an issue with native extensions.    To handle this, the CLI should keep track of the NodeJS version used for each core package and if the NodeJS version has changed it should use re-install that package or use {{npm rebuild}}.",Improvement,High,Closed,"2015-10-09 12:59:08","2015-10-09 12:59:08",5
"Command-Line Interface","Add additional logging for Arrow cloud login calls","The command {{DEBUG=* appc login}} doesn't log the requests and responses from the Arrow cloud login calls.",Improvement,Medium,Closed,"2015-10-06 23:53:01","2015-10-06 23:53:01",2
"Command-Line Interface","Add bugs URL to package.json","Adding a URL to the location of where bugs are filed makes it easier for developers.    ",Improvement,High,Closed,"2015-10-06 05:32:20","2015-10-06 05:32:20",5
"Command-Line Interface","Only CLI 5.0.2 & NodeJS 0.12.7 give: [Error: Module did not self-register.]","Only CLI 5.0.2 and NodeJS 0.12.7 show the following error during different commands:        CLI 5.0.1 with NodeJS 0.12.7 works fine, as does CLI 5.0.2 with NodeJS 0.10.40.    (x) CLI 5.0.2 & NodeJS 0.12.7  (/) CLI 5.0.1 & NodeJS 0.12.7  (/) CLI 5.0.2 & NodeJS 0.12.7  (/) CLI 5.0.2 & NodeJS 0.10.40    The workaround is to use appc use 0.X.X --force",Bug,High,Resolved,"2015-10-05 15:54:22","2015-10-05 15:54:22",5
"Command-Line Interface","Publishing a stable version of appc-cli doesn't tag it as latest","I notice this issue when I was releasing appc-cli into our production servers. Though I had successfully published appc-cli@5.1.0, the latest version tag still references to something like 5.0.0 only.    If {{appc publish --prerelease}} command is executed, then the latest tag should still be the previous stable version. Otherwise, the latest version should be considered.",Bug,High,Resolved,"2015-10-01 01:07:46","2015-10-01 01:07:46",5
"Command-Line Interface","Appc CLI causes iOS Simulator builds to be encrypted","When trying to solve TIMOB-19612, it was discovered that the appc cli causes iOS Simulator builds to sometimes be encrypted and other times not encrypted. This is triggered when you are online and buildVerify() was not skipped (whatever that means).    iOS Simulator builds should probably not be encrypted unless the --deploy-type is explicitly set to test.",Bug,High,Closed,"2015-09-29 08:43:13","2015-09-29 08:43:13",5
"Command-Line Interface","libtiverify.a in Ti SDK is replaced by libappcverify.a","Do {{appc run -p ios -T device}} on a project with {{<property name=appc-sourcecode-encryption-policy type=string>remote</property>}} set in {{tiapp.xml}}.    The file {{mobilesdk/osx/<VERSION>/iphone/libtiverify.a}} in Ti SDK itself gets replaced by {{appc-cli-titanium/support/ios/libappcverify.a}}    Subsequent builds on projects without {{appc-sourcecode-encryption-policy}} enable will result in build failure.  ",Bug,High,Resolved,"2015-09-28 22:06:24","2015-09-28 22:06:24",3
"Command-Line Interface","If a login is required before switching orgs it shouldn't switch at all","If you use the newly added {{appc switch org}} and a login is required first because the session expired, you shouldn't not be asked what organisation to login to followed by the question which organisation to switch to.    ",Bug,High,Closed,"2015-09-23 15:20:26","2015-09-23 15:20:26",5
"Command-Line Interface","Update alloy hook file in the project before invoking alloy build","When Alloy's hook file is changed, existing Alloy projects' hook in the plugins directory should also be updated prior to invoking the build process. So the new hook file will be used to build the project.  ",Improvement,Medium,Closed,"2015-09-22 22:43:20","2015-09-22 22:43:20",5
"Command-Line Interface","App icon did not update on dashboard.","h6.Reproduce    1. Try to create a new alloy project, check the dashboard. The app icon in dashboard is still a default classic default icon, not the alloy icon.    2. Try to create a new classic project, change the dafaulticon.png in root folder and also change the appicon.png in Resources/iphone folder. It works well in mobile deice, But dashboard's icon get no reflected.     h6.Note:  Asked Patrick checked the dashboard end, seems this no any icon upload to dashboard, so dashboard will use the default one all the time. ",Bug,Medium,Resolved,"2015-09-22 04:49:00","2015-09-22 04:49:00",5
"Command-Line Interface","Failed to parse titanium config file: TypeError: Cannot read property 'selected' of undefined","This may be a duplicate, but I can't find one. Please repurpose as necessary.    From https://community.appcelerator.com/topic/3309/error-encountered-during-update-appcelerator-cli-is-currently-installing-or-upgrading-please-wait-until-it-has-finished-and-retry-your-command-afterwards/9    The error is:        The error appears to be in https://github.com/appcelerator/appc-cli-titanium/blob/master/plugins/run.js#L116",Bug,Critical,Closed,"2015-09-20 17:10:01","2015-09-20 17:10:01",2
"Command-Line Interface","Error when generating developer certificate and public/private keys when logging into preprod","h5. Description  When trying to log in to preproduction through CLI an error will display say The request is not recognized! after trying to generate developer certificate and private/public keys.    h5. Steps to recreate  1.Enter log in details in CLI   2. Choose a preproduction environment    h5. Actual Result  An error is displayed, although it appears it still logs into preproduction    h5. Expected Result  No error should be displayed",Bug,Critical,Resolved,"2015-09-19 00:05:37","2015-09-19 00:05:37",0
"Command-Line Interface","appc run -p ios is forcing rebuild for subsequent runs when there's no changes"," is forcing rebuild for every subsequent run, even when there's no changes in the project.    h4. Steps to reproduce.  1. appc new  2. appc run -p ios -l trace  3. appc run -p ios -l trace    h4. Expected result  If you look at the trace, invoking xcodebuild should happen for 2., skipping xcodebuild will happen for 3.    h4. Actual result  If you look at the trace, invoking xcodebuild happens for 2 and 3.    The line of code in question is here:  https://github.com/appcelerator/appc-cli-titanium/blob/master/hook/titanium.js#L201  If this is commented out, the problem here is solved, but unsure if there are other dependencies that might be affected by this line of code.",Bug,High,Closed,"2015-09-16 18:54:22","2015-09-16 18:54:22",3
"Command-Line Interface","Cannot create Apple® Watch™ App from Appc CLI","I get a failure when trying to create an Apple Watch app in the Appc CLI.      *Steps to reproduce issue*  1. Run {{appc new}}  2. Select {{Apple® Watch™ App}}  3. Create the project    *Actual Results*  The creation fails with the above error    *Expected Results*  The project can be created without error    *Notes*  In the above log, you can see that creating the Apple® Watch™ App asks for the project name and ID. Doing a {{ti create}} asks for the project directory. Why the difference?",Bug,Critical,Closed,"2015-08-06 22:33:32","2015-08-06 22:33:32",5
"Command-Line Interface","Appc CLI core fails to install with memwatch errors with node 0.10.13 & 4.0.0","h5.Steps To Reproduce:  Follow the same steps for node 0.10.13 & 4.0:  1. Do appc use latest.  2. The 4.1.3 core will be downloaded & installation will begin.    h5 Actual Results:  1. The installation errors out at memwatch install :  *With node 0.10.13:*      *With node 4.0:*      h5. Expected Result:  1. The appc core installation gets completed successfully. ",Bug,Critical,Resolved,"2015-09-10 22:08:25","2015-09-10 22:08:25",0
"Command-Line Interface","Node 4.0 GA doesn't work with CLI","Running appc just immediately exits    Tried re-installing the npm with same result.  ",Improvement,Critical,Closed,"2015-09-08 20:36:54","2015-09-08 20:36:54",3
"Command-Line Interface","Logout with deauthorize should notify security server","Logout with de-authorize should send request details to security server to mark the certificate as de-authorized (active:false in db which needs to be added). If the security server cannot be contacted, should fail gracefully.  ",Improvement,None,Closed,"2015-09-08 19:25:26","2015-09-08 19:25:26",5
"Command-Line Interface","For android, we're sending unnecessary data in build-verify","Notice the bindings property that is attaching a bunch of stuff that is unnecessary and wasteful.  We should remove this (and any other) key from the tiapp object before sending api.  ",Improvement,Medium,Closed,"2015-08-31 14:55:57","2015-08-31 14:55:57",3
"Command-Line Interface","Add a command to get component information","We need a command similar to npm info to get information about a component.    since info is already taken we can't take one.    maybe we should just refactor the main commands to be actions under component such as:    appc component access get | set  appc component owner add | list | rm  appc component org add | list | rm  appc component user add | list | rm    and then for info:    appc component info  appc component version set 1.2.1  appc component info version","New Feature",None,Open,"2015-08-28 18:24:34","2015-08-28 18:24:34",8
"Command-Line Interface","Create appc.json file when a new module is created","When a new module project is created, then it should create appc.json file in the root directory of the module. This should contain metadata such as name, description, version, author, access level etc. This information will be used when the user choose to publish the module to marketplace.",Story,High,Reopened,"2015-08-27 18:11:36","2015-08-27 18:11:36",3
"Command-Line Interface","appc new --type applewatch should default to watchos2 instead of watchkit1","Since from now on people will likely create Watch OS 2 apps instead of WatchKit 1 extensions we should default to {{watchos2}} for {{appc new --type applewatch}}.",Improvement,High,Resolved,"2015-08-27 09:04:59","2015-08-27 09:04:59",3
"Command-Line Interface","Regression running project","⚡ appc run -l trace  fs.js:761    return binding.readdir(pathModule._makeLong(path));                   ^  Error: ENOENT, no such file or directory 'lib/commands'      at Error (native)      at Object.fs.readdirSync (fs.js:761:18)      at Object.<anonymous> (/Users/<USER>.appcelerator/install/5.0.0-20/package/index.js:61:19)      at Module._compile (module.js:460:26)      at Object.Module._extensions..js (module.js:478:10)      at Module.load (module.js:355:32)      at Function.Module._load (module.js:310:12)      at Module.require (module.js:365:17)      at require (module.js:384:17)      at Object.<anonymous> (/Users/<USER>.appcelerator/install/5.0.0-20/package/bin/appc:11:12)",Bug,Critical,Closed,"2015-08-26 16:27:01","2015-08-26 16:27:01",1
"Command-Line Interface","If login is needed it should end with a message before continuing with original command","The following shows that when a login is required for a command, there's nothing between the prompt for the login and the logs of the actual command - which in this case is a question as well.    This is confusing. There should be at least a blank line, but probably some message (_You are logged in_) before continuing.    ",Improvement,High,Closed,"2015-08-26 12:24:18","2015-08-26 12:24:18",3
"Command-Line Interface","use not listed in help","Running {{appc}} does not list the {{use}} command.",Bug,High,Closed,"2015-08-26 11:20:53","2015-08-26 11:20:53",2
"Command-Line Interface","In preprod, appc setup installs older version then shown via appc use","I've switched to preproduction because that seems to be the only way that {{appc use}} will list beta versions. I can install and select one fine, but I was surprised to see that {{appc setup}} installs and selects an older version, which seem to come from prod:    ",Bug,High,Reopened,"2015-08-26 11:13:03","2015-08-26 11:13:03",8
"Command-Line Interface","Prompts/Options for creating WatchOS2 project are confusing when not ran in project dir","The questions/options for {{appc new -t applewatch}} are confusing and need to be improved:    * Where's the project directory? ./appc-sample-ti500  ** Of the existing Titanium app or for the Watch app? Should say _Titanium project_  * What's the project name? appc-sample-ti500  ** Of the existing Titanium app or for the Watch app? Can it be the same? If so, it should have that as default. If not, it should say so and validate it is not.  * Do you want to overwrite? Yes  ** Any existing extension or the Titanium app? If it's about the extension then it should say so and only if one is present (when I did it hadn't). If it is about the app.. then I don't get it.  * Please provide your password for enabling Test service:  ** For the Watch app? If it's for the Titanium app then why prompt when I create a Watch app?    The question to overwrite is even more confusing because when there *is* already an extension with the given name it will fail:        *UPDATE:* I've seen that if I run {{appc new -t applewatch}} in the project directory itself it will only ask for the name.",Improvement,High,Closed,"2015-08-26 10:52:33","2015-08-26 10:52:33",1
"Command-Line Interface","New workflow for handling the multiple orgs without switching organizations","Having worked with Studio for a while now, while being member of multiple organizations, I've found it cumbersome to switch organizations, in particular in Studio. I have to logout by clicking on my name and then re-open studio, login and select the other organization.    The prefered solution would be to have a button to switch organizations, which would show a similar popup to the one you get when you login. It would then switch organization without ever closing Studio of requiring you to login again.","New Feature",High,Open,"2015-08-26 04:11:36","2015-08-26 04:11:36",8
"Command-Line Interface","Odd authorization code behavior","While running appc setup, during the login step where it asks for an authorization code, I chose to have it text me.  While typing in the code, each digit I typed, added another output line to my console (see attached).  Just odd more than anything else... ",Bug,None,Closed,"2015-08-20 21:52:37","2015-08-20 21:52:37",3
"Command-Line Interface","Update check from the appcelerator npm does not inform the user of available update","Update check in the appcelerator npm relies on response from {{/api/appc/list}}, specifically the attribute {{latest}}, to check against installed versions and determine if there is new appc-cli package. However, the response does not have the {{latest}} attribute, the user is not informed of any updates.    bq. appc:util update check completed, latest is undefined +3ms",Bug,Medium,Resolved,"2015-08-19 21:57:07","2015-08-19 21:57:07",5
"Command-Line Interface","Community: 502 Bad Gateway is returned when building a mobile project with GA stack","*Details:* In the community, there are reports that when you build a mobile project, a *502 Bad Gateway* is returned: https://community.appcelerator.com/topic/2982/problem-with-build-application-on-mac-502-bad-gateway/2    *Notes:*  * Currently, we are unable to reproduce this issue internally.  * This issue seems to affect developers with an indie account, however, issue is still unreproducible internally with indie account.  * Clean install does not seem to remedy the issue.    *Possible steps to reproduce:*  # Switch to an indie account  # Make sure you have the GA stack installed on your machine; see Environment field  # Create a mobile project with {{appc new}}  # Then, run project with {{DEBUG=* appc run -p ios -l trace}}    *Actual:* 502 Bad Gateway is returned during mobile project build:      Also, see attachment for full community trace log.    *Expected:* Should be able to build a mobile project without any issues.  ",Bug,None,Closed,"2015-08-19 18:56:52","2015-08-19 18:56:52",3
"Command-Line Interface","Support appc new WatchKit 2 app --template option ",,Sub-task,None,Closed,"2015-08-17 17:38:16","2015-08-17 17:38:16",5
"Command-Line Interface","Support for WatchOS2 project in appc","With the latest Titanium CLI and SDK, we are finally able to build watch OS2 apps. We need *appc new* and *appc run* to support the following:    To create a watch OS 2 and titanium Project, follow these steps:  1. Create a new project: ti create --type app --name foo --id com.appc.foo --platforms all --url http://foo --workspace-dir .  2. cd into the project: cd foo  3. Add a WatchKit 2 app: ti create --type applewatch --name bar --template watchos2  4. Build the app: ti build -p ios -I 9.0 --launch-watch-app",Bug,Critical,Closed,"2015-08-17 04:29:17","2015-08-17 04:29:17",8
"Command-Line Interface","Alloy app fails to build on window's with error Alloy compiler failed","*This is a regression. Builds successfully with 4.1.2, 4.2.0-1 appc CLI. Did not check all the versions of the 4.2.0-X CLI as there are a lot. Went back till 4.2.0-40 & it failed. The build fails with 4.1.3-1 appc CLI as well.*    h6. Created this ticket In Unified CLI project as building with older CLI works fine. Please move to other project if suitable.    h5.Steps To Reproduce:  1. Create an alloy project on windows machine. (I used win 8.1 64 bit).  2. Build the app for windows or android.    h5.Actual Result:  1. The alloy compiler fails:      h5.Expected Results:  1. The alloy app build successfully on windows.",Bug,High,Closed,"2015-08-13 02:35:11","2015-08-13 02:35:11",8
"Command-Line Interface","Missing required option: --id <value> error is returned if you specify all the required flags to create an app","*Details:* {{Missing required option: --id <value>}} error is returned if you specify all the required flags to create an app.    *Steps to reproduce:*  # Run the following command:  {{appc new --type titanium --subtype new  --platforms iphone --id com.appcelerator.testing --name monkey --project-dir ~/monkey  --url http:// --log-level trace}}    *Actual:* {{Missing required option: --id <value>}} error will appear:      *Expected:* No errors should appear.",Bug,High,Closed,"2015-08-13 01:56:09","2015-08-13 01:56:09",3
"Command-Line Interface","appc new --type app is not available in the Appc CLI","*Details:* {{appc new --type app}} is not available in the Appc CLI.    *Note:* The following {{--type}} values are available in the Titanium CLI:      *Steps to reproduce:*  # In Appc CLI, run: {{appc new --type app}}    *Actual:* {{Unable to find plugin for project type app}} error appears:      *Expected:* {{appc new --type app}} should be available.",Bug,Medium,Resolved,"2015-08-13 01:01:39","2015-08-13 01:01:39",1
"Command-Line Interface","Publish titanium project templates to Marketplace","The appc-cli currently supports publishing only Arrow services to registry. It has to add support for publishing project templates into registry.    Users should be able to publish any existing titanium project as a template to Marketplace. If the root directory of the project already contains appc.json file specifying the type as 'template', then it should be able to publish the component to Marketplace, or if some information is missing, then appc-cli should prompt while the user is trying to publish.","New Feature",High,Resolved,"2015-08-10 20:01:52","2015-08-10 20:01:52",5
"Command-Line Interface","Publish titanium module into Marketplace","The appc-cli currently supports publishing only Arrow services to registry. It has to add support for publishing titanium modules into registry.    While appc-cli creates a module, it should create a appc.json file in the root of the project directory and should contain information about the author/owner, type (timodule), module description, version, license, support details, access level, license etc.    If the appc.json file is not available during publish, then it has to prompt for basic information, and then auto-create appc.json file, and then publish the module into registry.","New Feature",High,Resolved,"2015-08-10 19:52:20","2015-08-10 19:52:20",8
"Command-Line Interface","Project creation prompts for App ID; --id not supported","If creating a project in Studio (or specifying the --id option), you are prompted for the app ID.    *Steps to reproduce issue*  1. Create a new project in Studio or from the CLI with the {{--id}} option    *Actual Results*  You are prompted for the app ID, despite providing it before    *Expected Results*  You are not prompted for the app ID    *Notes*  Studio is running the below command.  {code}  /usr/local/bin/appcelerator new --type titanium --platforms android,mobileweb --id com.appc.createthis --name createthis --sdk 4.2.0.v20150807112024 --project-dir /Users/<USER>Documents/Appcelerator_Studio_Workspace/createthis --force --no-services --no-colors --no-progress-bars --no-prompt --no-banner  {code}  However,  does not have an entry for {{--id}}",Bug,High,Closed,"2015-08-10 18:31:39","2015-08-10 18:31:39",5
"Command-Line Interface","Cannot install 4.2.0-12+; memwatch-next install errors","When trying to install any CLI Core version 4.2.0-12 or higher, I get the below error:      *Steps to reproduce issue*  1. Do not have CLI 4.2.0-12 or higher installed  2. Run {{appc use 4.2.0-12}} or any 4.2.0-X where X > 12    *Actual Results*  I get the above error and cannot install    *Expected results*  I do not get an error and can install the CLI    *Notes*  Tested 4.2.0-12 through 4.2.0-24",Bug,Medium,Closed,"2015-08-10 17:13:13","2015-08-10 17:13:13",1
"Command-Line Interface","Cannot run appc commands with CLI 4.2.0-5+","When using CLI core 4.2.0-5+ I am unable to build, clean, or run {{appc info}}. I get the below error:      *Steps to reproduce issue*  1. Install and use CLI core 4.2.0-5+  2. Build a project from the CLI    *Actual Results*  Commands fail with above error    *Expected Results*  Commands run without error    *Notes*  Workaround is to go to your appc-cli-titanium folder and run {{npm install}}    ",Bug,High,Closed,"2015-08-06 18:16:14","2015-08-06 18:16:14",5
"Command-Line Interface","CLI: Add support for --no-progress flag to hide progress bars","The appc command uses a progress bar to show how much of an SDK has been downloaded or published. The problem is the progress bar keeps writing to stdout and if you subprocess the appc sdk command or pipe the output to a file, the output is all messed up. It would better to just have a flag that disables the progress bar.","New Feature",Medium,Closed,"2015-08-06 03:28:07","2015-08-06 03:28:07",1
"Command-Line Interface","Node processes are getting orphaned in certain cases","If you kill a top level process like appc run (the first process), the sub processes that are spawned are not killed and become orphaned.    I am easily able to reproduce this with a test case.  Sometimes you can reproduce it with killing the process with CTRL+C before fully started running.    You can probably also easily reproduce this by starting an arrow server successfully then just sending a kill SIGINT to the main appc process from ps.  ",Bug,Medium,Resolved,"2015-07-29 05:37:30","2015-07-29 05:37:30",1
"Command-Line Interface","Add SPDX-compliant license string","We should use the SPDX LicenseRef-LICENSE instead of Appcelerator Commercial in our package.json files to avoid the warning license should be a valid SPDX license expression    This would also include the addition of a LICENSE.md file at the root",Improvement,High,Closed,"2015-07-29 00:18:54","2015-07-29 00:18:54",5
"Command-Line Interface","Allow for refreshing of session without logging in again explicitly","Although we have lengthened the session duration to three days, the better approach is to allow silent refresh of the session behind the scenes. Both Google and Salesforce have such a mechanism:    https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/intro_understanding_refresh_token_oauth.htm    https://developers.google.com/identity/protocols/OAuth2WebServer?hl=en",Improvement,High,Closed,"2015-07-28 15:54:42","2015-07-28 15:54:42",8
"Command-Line Interface","Remove unnecessary secondary call to retrieve user information","h6.Accounts Details  {quote}  Account:   <EMAIL>     Joined:   Jul 20, 2015 10:19 PM   Last Updated:   ---   Organization:   FIS Mobile Sandbox   (100000356)         Account:   <EMAIL>     Joined:   Jul 20, 2015 10:20 PM   Last Updated:   ---   Organization:   FIS Mobile Sandbox   (100000356)  {quote}    h6.Still asking for the auth code. Here is the terminal output:   ",Bug,Critical,Closed,"2015-07-22 18:50:29","2015-07-22 18:50:29",5
"Command-Line Interface","Files are encrypted on first build when building with development deploy type","h5.Description    When building with a deploy type of development(simulator/emulator build) on the first build the files are being encrypted. On iOS and Android this appears to be handled fine, however on Windows there appears to be issues as the build will not get further than the encryption stage. See the below logging for a comparison between 4.1.0 and 4.1.1-7 CLI.     I am *unsure if this is a regression* as it may be expected with the changes to build verification but it is a *change in behavior*.     Due to this on the first build to a Windows Phone emulator the build will stop at {{Processing JavaScript files}} and not continue, killing the build and rebuilding will fix this.    {code: title=4.1.0}  [INFO]  Building for Windows Phone emulator: 8-1-1  [INFO]  Deploy type: development  [INFO]  Debugging disabled  [INFO]  Profiler disabled  [INFO]  Forcing rebuild: C:\Users\WINDO_~1\AppData\Local\Temp\hmm10\build-manifest.json does not exist  [INFO]  Launching emulator: 8-1-1  [INFO]  Processing JavaScript files  [INFO]  Generating i18n files  [INFO]  Generating Native Type Wrappers  [INFO]  Generating stubs for: Platform.Object  [INFO]  Setting up native modules for CMakeLists.txt...      h5.Steps to reproduce    1. Create a project using {{appc new --type titanium --classic --name appName --id com.appc --force}}  2. Build using appc CLI 4.1.0 using {{appc run -p ios -T simulator}}  3. Create a project using {{appc new --type titanium --classic --name appName --id com.appc --force}}  2. Build using appc CLI 4.1.1 using {{appc run -p ios -T simulator}}    h5.Actual result    When building to simulator/emulator for the first time on 4.1.1-7 the files will be encrypted    h5.Expected result    Based on historical behavior when building to simulator/emulator the files should not be encrypted at all",Bug,High,Closed,"2015-07-18 00:26:26","2015-07-18 00:26:26",5
"Command-Line Interface","Android : If remote encryption property is set & app is built to emulator when machine is offline, no security violation is seen","h6. This is a regression. This issue was not see when last time security was tested (Don't remember what CLI version we tested last time).    h5.Steps To Reproduce:  1. Create a classic app.  2. Add the security property to the apps tiapp.xml    3. As its a new app it has to be built once before we go offline on our machine, but we also don't want to auto launch the app by building it from studio. To prevent this, build the app using -b (build only) flag from CLI when your machine is online.  4. Now go offline & build to android emulator from studio.    h5.Actual Results:  1. We see no security violation & the app launches fine.    h5. Expected Results:  1. We should see security violation.",Bug,High,Resolved,"2015-07-17 00:55:06","2015-07-17 00:55:06",5
"Command-Line Interface","Developer banner should not show when a command is run with --no-banner or -o json","h5.Description    When logged into a developer account and running commands with {{\-o json}} or {{--no-banner}} the developer banner should not be shown. This is causing issues such as the dashboard not opening in Studio as seen [here|https://community.appcelerator.com/topic/2607/dashboard/3]            h5.Steps to reproduce    1. Log into a developer account  2. Run {{appc info -o json}} and {{appc new --no-banner}}    h5.Actual result    The developer banner is shown    h5.Expected result    The developer banner should not be shown",Bug,High,Closed,"2015-07-17 00:40:20","2015-07-17 00:40:20",5
"Command-Line Interface","When building for Windows with encryption the build never gets further than JavaScript files need to be encrypted","h5.Description    When building for Windows with encryption the build does not get further than {{JavaScript files need to be encrypted}}. This *is a regression* from 4.1.1-4 as the build works fine there    h5.Steps to reproduce    1. Build a Windows project using {{appc run -p windows -T wp-device}}    h5.Actual result    The build will not pass {{JavaScript files need to be encrypted}}    h5.Expected result    The build should continue",Bug,High,Closed,"2015-07-16 22:37:59","2015-07-16 22:37:59",5
"Command-Line Interface","Error when publishing app","found publishable component appc-web-server at /Users/<USER>work/proto/appc-web-server  loading for publish /Users/<USER>work/proto/appc-web-server/package.json  Publishing application ... this could take several minutes  loaded config host=https://admin.cloudapp-enterprise-preprod.appctest.com, port=443, sid=connect.sid=s%3AcknqSFoZhNpq3XLrN8OEr26e.bR0sqEdPpbZOvn8SGNSdgzajFwBikOBVvGBQSorYBlg  sending {method:get,url:https://admin.cloudapp-enterprise-preprod.appctest.com:443/publish/appc-web-server,headers:{Cookie:connect.sid=s%3addbR0sqEdPpbZOvn8SGNSdgzajFwBikOBVvGBQSorYBlg,User-Agent:Appcelerator/1.1.2 (Macintosh; Intel Mac OS X 14_3_0; en_US) Version/1.1.1 Safari/0.0.0 appcelerator/4.1.1-1,Accept:text/json, application/json},gzip:true,json:{orgid:14301}}  receiving err=null, body={success:true,message:Published version: 1.0.1. No version is deployed currently.}  ERROR  | TypeError: Cannot read property '1' of null      at /Users/<USER>.appcelerator/install/4.1.1-1/package/node_modules/arrow/lib/cloud/index.js:229:24      at Request._callback (/Users/<USER>.appcelerator/install/4.1.1-1/package/node_modules/arrow/lib/cloud/index.js:186:4)      at Request.self.callback (/Users/<USER>.appcelerator/install/4.1.1-1/package/node_modules/request/request.js:197:22)      at Request.emit (events.js:110:17)      at Request.<anonymous> (/Users/<USER>.appcelerator/install/4.1.1-1/package/node_modules/request/request.js:1050:14)      at Request.emit (events.js:129:20)      at Gunzip.<anonymous> (/Users/<USER>.appcelerator/install/4.1.1-1/package/node_modules/request/request.js:996:12)      at Gunzip.emit (events.js:129:20)      at _stream_readable.js:908:16      at process._tickCallback (node.js:355:11)  ",Bug,Medium,Closed,"2015-07-15 06:32:31","2015-07-15 06:32:31",1
"Command-Line Interface","Appc info should not require login","h5.Description    When running appc info, if not logged in then the user is asked to login. A user should not have to be logged in to run appc info        h5.Steps To Reproduce    1. Logout using {{appc logout}}  2. Run {{appc info}}    h5.Actual Result    You will be asked to log in    h5.Expected Result    Shouldn't have to be logged in to run appc info",Improvement,Low,Closed,"2015-07-13 18:30:24","2015-07-13 18:30:24",1
"Command-Line Interface","Support for building Titanium 4.2 iOS apps","In Titanium 4.2, the iOS build changed how it copies files and this causes the encrypted files to be deleted prior to being packaged. appc-cli-titanium simply needs to unmark the encrypted files for deletion.",Improvement,High,Resolved,"2015-07-10 19:21:03","2015-07-10 19:21:03",5
"Command-Line Interface","Fixed user-agent header for registry client","Reporting:    userAgent: Appcelerator Arrow SDK/1.0.0,    For user-agent header for registry client in CLI.  We should set it to the value of AppC.userAgent (from appc-platform-sdk) so we can get the correct version in our analytics.  ",Improvement,High,Resolved,"2015-07-10 16:17:24","2015-07-10 16:17:24",1
"Command-Line Interface","appc info: Should display all relevant versions, not just Installer + Core","Now we're wrapping Titanium + ACS + Alloy CLI in the AppC CLI which itself is 2 parts, things get confusing :) It would help if {{appc info}} would give you more detail like:        It would even better if it would show incompatibilities etc.    I think in the end we have to find an effective merge of {{appc ti info}} and {{appc info}} which has a good balance between detail and clarity.",Improvement,High,Resolved,"2015-07-09 18:49:26","2015-07-09 18:49:26",0
"Command-Line Interface","Appc info output is incorrect","The output for {{appc info}} is wrong. No platforms are shown, there are two banners, commands listed are for {{appc ti <command>}}, two newlines are needed before the Appcelerator CLI section, and the general output of the command seems to be for a different command altogether.        *Steps to reproduce issue*  1. Run {{appc info}}    *Actual Results*  The output is incorrect as explained above    *Expected Results*  The output should reflect the correct info for Appc CLI",Bug,Medium,Closed,"2015-07-08 18:28:33","2015-07-08 18:28:33",3
"Command-Line Interface","Improve feedback when creating a module","h5.Description    When creating a Windows platform module the process takes a lot longer than the other platforms, just android takes ~2s, Windows takes ~40s. This is unavoidable because there are certain steps to be taken such as moving all files to a temp directory if necessary due to path length issues.    If module creation occurs from the Titanium CLI using {{ti create}} then there is logging as shown in logging.txt, this logging is not shown by the Appc CLI and there is just a spinner for ~40s, there should be some more feedback from the CLI to let the user know what is happening.    h5.Steps to reproduce    1. Create a module using {{appc new --type timodule --name module  --id com.module --force}}    2. Create a module using {{ti create --type module --name module --id com.module --platforms all --urlblah --workspace-dir . --force}}    h5.Actual result    1. No logging occurs  2. Logging occurs    h5.Expected result    Due to the long creation time there should be some sort of feedback to the user other than a spinner",Improvement,Medium,Closed,"2015-07-06 23:51:47","2015-07-06 23:51:47",3
"Command-Line Interface","Update platform sdk to use new api on login","{{lastname}} property is now available on login response. we can use this instead of calling User.find to get it.    ",Improvement,None,Closed,"2015-07-02 02:27:22","2015-07-02 02:27:22",1
"Command-Line Interface","Appc run -h from within a Titanium project errors out on Windows with SyntaxError: Unexpected token ILLEGAL","h5.Description      When running {{appc run -h}} or {{appc run --help}} on Windows the command errors out with the below        Comparing the logging against {{appc run}} which run with no problems it appears that they are using a different titanium binary with the -h flag using {{C:\Users\Windo_000\.appcelerator\install\4.1.0-4\package\node_modules\appc-cli-titanium\node_modules\.bin\titanium}} and without the -h {{C:\Users\Windo_000\.appcelerator\install\4.1.0-4\package\node_modules\appc-cli-titanium\node_modules\titanium\bin\titanium}}    h5.Steps to reproduce    1. On a Windows machine run {{appc run -h}}    h5.Actual Result    The command will error out    h5.Expected Result    The command should print out help text",Bug,High,Closed,"2015-06-27 20:42:15","2015-06-27 20:42:15",3
"Command-Line Interface","Show notice banner when running CLI in preproduction","I would like to be able to more easily know if I'm running in preproduction when I run a command.    Print out an explicit banner in the CLI when running a command against pre-production.  This banner shouldn't show normally in production.",Improvement,Low,Closed,"2015-06-27 00:21:57","2015-06-27 00:21:57",1
"Command-Line Interface","Android classic app crashes on launch with java.lang.IllegalArgumentException due to CLI injected code related to ACS","h5.Steps To Reproduce:  1. Create a classic android app from studio or appc CLI.  2. Build it to an android device/emulator.    h5.Actual Results:  1. The app crashes at the splash screen with error:    2. We saw that when services are enabled on app creation CLI adds this code to the app.js which is causing the crash.    3. When services are enabled after the app has been created the app launches fine.    h5.Expected Results:  1. The app should not crash after launch on splash screen.",Bug,Critical,Closed,"2015-06-27 00:20:14","2015-06-27 00:20:14",3
"Command-Line Interface","Login token flag is not removed","*Details:* When you login with the token flag, token missing in API definition error is returned. *This flag should be removed since it is not supported anymore.* Snippet from the Arrow flow:  {quote}  JeffH  this is not a github token.  this is a security server token.  i don’t think it’s fully supported anymore and we shoudl probably remove it until it is. we don’t support github login tokens  {quote}    *Steps to reproduce:*  # In terminal, login with the token flag: {{appc login --username <EMAIL> --password <PASSWORD> -t <RANDOM_STUFF>}}    *Actual:* {{Error: body parameters: token missing in API definition}} error is returned:      *Expected:* Token flag should be removed since it is not supported anymore.",Bug,None,Closed,"2015-06-26 20:01:34","2015-06-26 20:01:34",1
"Command-Line Interface","Entitlements should be refreshed before failing over a limit","The following scenario has been causing confusion to several customers. The workaround if often simple, but by the time they or we figure it out, they already have a negative experience with a very crucial and sensitive step in our funnel.. paying us (or claiming their free Indie seat).    h2. Current situation  # User tries to build for ad-hoc or store.  # Studio/CLI says they can't and directs them to billing.  # User claims pays or claims his free Indie/Pro/Team seat.  # User tries to build for ad-hoc or store again.  # Studio/CLI still says they can't.  # User gets frustrated and jumps on the Q&A or email.  # We loose valuable support time to figure it out.    h2. Workaround  The workaround is for the user to logout and then in again, triggering their locally stored entitlements to be refreshed.    h2. Solution  Whenever the CLI/Studio would now abort because of a limitation in the entitlements, it should first refresh the entitlements and check again. Only then it should fail if the entitlements still don't allow the user to do what he wanted.    Related Q&A:    * https://community.appcelerator.com/topic/145/unable-to-package-ios-application-in-new-appcelerator-studio  * https://community.appcelerator.com/topic/487/issue-with-my-account-need-appcelerator-billing-help  * https://community.appcelerator.com/topic/145/unable-to-package-ios-application-in-new-appcelerator-studio  * https://community.appcelerator.com/topic/699/unable-to-publish-android",Improvement,Critical,Closed,"2015-06-26 12:42:34","2015-06-26 12:42:34",3
"Command-Line Interface","Setup does not install latest GA if a newer beta/RC/nightly is active","If you don't have the latest GA but you are running a newer beta/RC/nightly then {{appc setup}} will not install the latest GA for you and wrongly state that the newer beta/RC/nightly is the latest release:        h2. Expected  I'd expect the setup to install the newest GA and just not activate it if the current activated version is newer. It should say what version it is downloading (currently it's not) and reassure the user that his newer version will remain active:        Related Q&A:  https://community.appcelerator.com/topic/377/4-0-0-rc3-now-available/11",Bug,Medium,Closed,"2015-06-26 12:04:19","2015-06-26 12:04:19",0
"Command-Line Interface","When creating an app on prod the process errors with cannot call method 'indexOf' undefined","h5.Description    *This is a regression as when using 4.0.2, project creation has no issues*    When creating a project on production and using the latest CLI in preprod, project creation fails with the below         [This is the line|https://github.com/appcelerator/appc-cli-titanium/blob/master/plugins/new.js#L358] that is failing out    h5.Steps To Reproduce    1. Using the latest appc cli create a project on prod using {{appc new}}    h5.Actual Result    The project creation fails    h5.Expected Result    Project creation should not fail",Bug,High,Closed,"2015-06-25 21:23:56","2015-06-25 21:23:56",5
"Command-Line Interface","If I am an indie user then the CLI should not download Soasta and APM","h5.Description    When creating a project is Soasta and APM are not on my system then the CLI will download them for me, however if I have an indie or team plan then these should not download as I am unable to use them on these plans.    h5.Steps To Reproduce    1. Remove APM and Soasta from your Titanium folder  2. Sign in to an indie account   3. Create a project    h5.Actual Result    Soasta and APM is downloaded for indie and team plans    h5.Expected Result    Soasta and APM should not be downloaded on plans that don't have it",Bug,None,Closed,"2015-06-18 18:25:15","2015-06-18 18:25:15",5
"Command-Line Interface","Add banner for trial accounts","Add a lightweight CLI banner for Developer trial account.  ",Improvement,Low,Resolved,"2015-06-16 23:17:54","2015-06-16 23:17:54",1
"Command-Line Interface","Unable to login to an account with one org on preprod","h5.Description    Logging in to an account that only has one org errors with the following {{Cannot read property '0' of undefined}}    Full logs are        *This issue has taken sambot offline as the account used only has one org*    h5.Steps To Reproduce    1. On preprod login to an account with only one org    h5.Actual Result    The login fails with the above    h5.Expected Result    Login should be successful ",Bug,None,Resolved,"2015-06-12 19:05:09","2015-06-12 19:05:09",1
"Command-Line Interface","Directory permission error","Looks like this API is not passing the right args on a directory permission issue.    ",Bug,High,Closed,"2015-06-11 17:20:30","2015-06-11 17:20:30",1
"Command-Line Interface","using invalid connector on appc install returns error","I typed in the wrong connector and i get a registry error like it's down.    However, its because the registry api is correctly returning 404. our logic for handling down registry is not handling correctly.  need to fix this.    repro with    DEBUG=* appc install connector/appc.mongodb",Bug,High,Closed,"2015-06-11 05:08:22","2015-06-11 05:08:22",3
"Command-Line Interface","appc new should handle the Alloy --testapp option","The Alloy CLI exposed a new option in version 1.7.0 to copy the test application source when a new project is created.  See linked ticket. It would be nice if the Appc CLI can accept this option when creating a new project.  Right now, you have to create a new classic project, then run the Alloy new command.    So instead of running these commands:      A developer can just run this command:  ",Improvement,High,Closed,"2015-06-08 22:39:26","2015-06-08 22:39:26",5
"Command-Line Interface","Appc commands fail with no return output","h5.Description    When running {{appc run}} the command is returning and failing with no output, see below        h5.Steps To Reproduce    1. Run {{appc run}}    h5.Actual Result    The command returns with no output    h5.Expected Result    The commands should run as expected",Bug,High,Closed,"2015-06-04 22:58:39","2015-06-04 22:58:39",3
"Command-Line Interface","Running appc ti commands fail with Error: Cannot find module './commands/config'","h5.Description    When running appc ti command it fails with the following        h5.Steps To Reproduce    1. Run appc ti    h5.Actual Result    The error above is printed out    h5.Expected Result    The command should not fail",Bug,High,Closed,"2015-06-04 22:50:57","2015-06-04 22:50:57",3
"Command-Line Interface","Add support for Windows Platform to the appc cli","h5.Description    The appc cli currently has no support for the Windows Platform. It will be required for the 4.1.0 release that the app cli has support. I believe that the following will need to be done.    * Ensure that the {{appc new}} command works for both Titanium projects and Titanium Modules  * Ensure that the {{appc run}} command is fully compatible with Windows Platform.  * Possibly include an encryption method for the Windows Platform      At the moment the only way to test Windows Platform is to use the Titanium CLI or add the master branch of Titanium CLI to the appc cli.    *Update*    The appc cli can be used to run and create projects.",Improvement,High,Reopened,"2015-06-04 21:18:53","2015-06-04 21:18:53",8
"Command-Line Interface","Set proxy details without downloading CLI core package","For customers behind proxy server, they are able to download Appc CLI npm package, but not able to download CLI Core. When they attempt to set the proxy server details using {{appc config set proxyServer <value>}} command, it is attempting to download CLI core before saving the config.    We should let users set the config without downloading CLI Core.",Bug,High,Closed,"2015-06-03 19:17:49","2015-06-03 19:17:49",8
"Command-Line Interface","Build: Update, Package and Deploy the dependencies ","Unified CLI has a lot of dependencies/modules, and if a few of those modules are updated, then there is a chance that we are missing to include those updated modules in new version of appc-cli.    When we attempt to publish a new version of appc-cli, the proposal is -    - We know a list of dependencies (appc-cli-titanium, arrow, appc-platform-sdk...)  - Look for any code changes (in git) after the latest tag, or any changes after the recent version of appc-cli published date.  - For each modified dependent module,   -- Update the version  -- Publish the npm package  -- Tag a release in the specified branch (4_0_X or 4_1_X)  - Change the package.json of appc-cli with all of the modified module versions.  - Publish appc-cli.  - Tag appc-cli version in the github with the release name.",Story,Medium,Closed,"2015-06-02 01:29:53","2015-06-02 01:29:53",8
"Command-Line Interface","Any network errors are treated as being offline using 'appc use'","An invalid if statement causes any network errors while fetching the version listing to be treated as if the user is offline.",Bug,Medium,Closed,"2015-06-02 01:09:16","2015-06-02 01:09:16",3
"Command-Line Interface","CLI needs better support to handle proxy servers","We need better support to handle proxy servers inside the Unified CLI.  Here are some observations to make from being onsite with Comerica recently:     # if AppC Studio has already defined a proxy, can the CLI just use this setting? Studio will put a proxy server setting in the {{<HOME>/.appcelerator/appc-cli.json file}}. When you first install the CLI, there is no way to insert a proxyServer settings (it always tries to update without checking if a proxy required to get outside). The only workaround was to hack this file and all a proxyServer setting.  # When both are finally defined ( the proxy for studio + proxy for CLI ), the syntax for both seem to be different.  We had to modify to figure out which one worked.  The titanium-connection-test proxy flag seemed to work great. Maybe we can mirror some of the capability.   # We need to ensure that if the proxy is defined, then it should  follow through all the CLI commands.  Found that some commands may not have passthrough to use the proxy server if it is set.     EXPECTED RESULTS    # Provide an command or option to set the proxy server for CLI before the CLI tries to do appc use latest or run any initial commands ( as they might not work without a proxy server ).  Maybe the CLI can look for a proxy server to be set through studio and use that as well.   # CLI use the proxy server prior to running any request for external resource if the proxy server is set. ",Bug,High,Resolved,"2015-06-02 00:30:17","2015-06-02 00:30:17",5
"Command-Line Interface","Older Alloy projects fail to build due to an outdated alloy.js in plugins","h5.Description    When attempting to build the Movies app on Windows, if Alloy is not globally installed then the build fails.    When attempting to build the Movies app in Studio on Windows the build fails with the following      If I got to command line and attempt to run then it fails with more information      One thing I noticed is that when running this specific app, the Alloy compile command uses a global install of Alloy rather than the local install inside the Appc CLI which I believe is why we see failures    {code: title=Movies compile command}  [INFO]  Executing Alloy compile: alloy.cmd compile C:\Users\Windo_000\Documents\Appcelerator_Studio_Workspace\Movies\app --config platform=android,version=0,simtype=none,devicefamily=none,deploytype=test,target=device      Full logs are attached as moviesFail.txt    It appears that the alloy.js file in plugins->ti.alloy->hooks is not updated to reflect the latest version which was changed in [this commit|https://github.com/appcelerator/alloy/commit/33c4cd0212edf5974df6ccd305c7fb4008e424f9] so the Alloy command is being set to alloy.cmd.     The workaround is to update the alloy.js file to a newer version, either from copying from that commit or from a new alloy project    h5.Steps To Reproduce    1. On a Windows machine ensure you have no global Alloy {{alloy -v}}  2.. In Studio import the Movies app from Studio Dashboard  3. Run the app for Android  4. In command line, cd to the Movies app location, Documents\Appcelerator_Studio_Workspace/Movies  5. Run the app using appc run -p android    h5.Actual Result    3. The build will fail with the first error shown above  5. The build will fail with the second, more detailed error shown above    h5.Expected Result    The build should succeed",Bug,High,Closed,"2015-05-13 02:04:36","2015-05-13 02:04:36",8
"Command-Line Interface","Proxy Server settings not carried through properly",".appcelerator/appc-cli.json is a file that is created on macs.  When users need a proxy server on a corporate network, they need to enter the proxy server in studio and the CLI.  Here are the problems I uncovered with regards to the CLI operation.     1) It looks like the values on both are different, proxy differs from proxyServer.       2) Also, not all parts of the CLI, especially when using Arrow are using the proxy server settings.  Especially on appc new, appc login, etc.. all need to ensure they are carrying over the proxy server settings.       3) We should allow the ability to do a appc config set proxyServer setting without having it to try to auto - update.  Otherwise, it will keep failing as it does not have the ability to work outside a network.     4) Also, some of the services like appc new are doing the up to 10 tries to try to get the source.  If it's using the wrong proxy server settings, it will lock a user out.       FINAL THOUGTS FOR RESOLUTION  - We had to edit the .appcelerator/appc-cli.json to have the right syntax to finally get it to work right.      - the titianium-connection-test -p proxy server usage seemed to be great  to work. Maybe we need to incorporate a proxy server test to make sure the syntax is right after a user enters it.     ",Bug,High,Closed,"2015-05-28 14:32:42","2015-05-28 14:32:42",0
"Command-Line Interface","Creating an arrow project when logged out fails to register the app","h5.Description    *Checking on platform.appcelerator.com shows that the app is actually created*    When creating an arrow project if your session has expired or you are logged out you will be prompted to log in and then carry on with the creation of the project. When the app is created the following is printed out        Full logs are attached as arrowOutput.txt    h5.Steps To Reproduce    1. Logout of the appc cli using {{appc logout}}  2. Create a new project using {{appc new}}  3. Enter your credentials  4. Select an arrow project and input a name    h5.Actual Result    When the project creation has finished the above message will be printed out    h5.Expected Result    The app should be created successfully ",Bug,High,Resolved,"2015-05-26 19:53:31","2015-05-26 19:53:31",8
"Command-Line Interface","appc new asks for login without prompting for it","I tried to create a new (Arrow) project and the CLI told me I needed to login first, but without prompting for the login like it used to do, it just exited.        h3. Expected    I'd expected it to prompt for the login directly.",Bug,High,Resolved,"2015-05-22 17:22:52","2015-05-22 17:22:52",0
"Command-Line Interface","App Preview CLI hook integration","There already is a Ti CLI hook available for App Preview.  Since we're doing this integration, it probably makes sense to ship this with the Ti CLI","New Feature",Critical,Closed,"2015-05-22 16:01:02","2015-05-22 16:01:02",3
"Command-Line Interface","Encryption fails on Windows when using 64-bit Java","h5.Description    When building a project for device on Windows if the machine is using 64-bit Java then the encryption stage will fail with the following        Switching back to 32-bit Java works.    *Titanium CLI works fine with 64-bit Java*    h5.Steps To Reproduce    1. On a Windows machine check your Java using {{appc ti info -t jdk}}     If you see Program Files (x86) run the following command {{set JAVA_HOME=<64-bit Path}}  2. Create a project using {{appc new}} or use an existing one  3. Build the project using {{appc run -p android -T device --build-only -l trace}}    h5.Actual Result    The build will fail with the above error    h5.Expected Result    The encryption should pass, build should not fail",Bug,High,Closed,"2015-05-20 22:02:40","2015-05-20 22:02:40",5
"Command-Line Interface","Implement 'appc info' command","We should implement an {{appc info}} command to display the following:    - Active Appcelerator NPM package version  - Active CLI version  - Active Titanium SDK version  - Studio version (if possible)    As suggested [here|https://jira.appcelerator.org/browse/CLI-606?focusedCommentId=352954&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-352954]",Improvement,High,Closed,"2015-05-19 23:13:09","2015-05-19 23:13:09",5
"Command-Line Interface","ETIMEDOUT is returned when you publish an Arrow app","*Details:* Occasionally, if you publish an Arrow app, ETIMEDOUT is returned.    *Steps to reproduce:*  # Create an Arrow project on Windows  # Publish the Arrow project: {{DEBUG=* appc publish -l trace}}    *Actual:* ETIMEDOUT is returned:      *Expected:* Appc CLI should be able to handle ETIMEDOUT.",Bug,Critical,Resolved,"2015-05-19 20:06:40","2015-05-19 20:06:40",1
"Command-Line Interface","Android build tool warning directs user to run ti config","h5. Description:  I was warned in console of a potential compatibility issue with my build tools. This warned told me to set with ti config. This should be updated to reflect new tools.        h5. Steps to reproduce:  1) Install Android build tools 22  2) Create an android project in studio or CLI and run on emulator or device    h5. Result:  The console warning appears with references to ti config    h5. Expected Result:  The warning should say appc ti config",Bug,High,Resolved,"2015-03-21 22:38:27","2015-03-21 22:38:27",5
"Command-Line Interface","appc setup continues to show latest Ti SDK installed even after it has been deleted","the setup command does not recognise if the latest installed SDK was deleted from the system. It continues to show that latest titanium sdk release 4.0.0.RC4 already installed. Even though it has been deleted. This continues to happen till we run the command appc ti sdk select to select another version.    Steps to Reproduce:  1. Install the latest titanium SDK. appc ti sdk install (in my case it was 4.0.0.RC4). It becomes the selected SDK after installation.  2. Now go to the titanium SDK folder location and delete the folder for the latest installed  version  3. In the terminal run appc setup  4. In the terminal run appc ti sdk select    Actual Result:  3. The setup command shows that the latest titanium sdk version is already installed.  4. This would download and install the latest sdk again.    Expected Result:  The appc setup command should install the latest sdk again when it has been deleted.",Bug,Medium,Closed,"2015-05-18 08:38:25","2015-05-18 08:38:25",5
"Command-Line Interface","Titanium: Improve usability of application security violation screen","This is with regards to this issue:  https://community.appcelerator.com/topic/330/application-security-violation/2    Also see the attached image.    OK, I understand why this message is shown, after researching it. My clients, however, do not accept it (and have told me to go back to Titanium Studio). As for users, my guess is that most will freak out thinking they have installed a malicious app, will remove it immediately and some will probably leave a negative review to warn others.    This is completely counterproductive for us, the developers, and therefore for Appcelerator. What should have been instead is a message saying something like [APP_NAME] requires internet connection. Please make sure you are connected to the internet and run it again. This should be accompanied by a cute image and should not use the colours red or black. Try pastels.     This should apply to all such error messages, and please don't mention security unless you have detected (if you are trying to detect) that the *user's security has been violated*.    Thank you.",Improvement,High,Open,"2015-05-07 11:07:04","2015-05-07 11:07:04",8
"Command-Line Interface","Appc ti -v should not print out a banner","h5.Description    When running the command {{appc ti -v}} the command prints the below        Every other version command does not print out a banner so the titanium banner should match the existing behavior for the other commands.    h5.Steps To Reproduce    1. Run {{appc ti -v}}    h5.Actual Result    A banner is printed out    h5.Expected Result    A banner should not be printed out",Bug,Low,Closed,"2015-05-15 22:32:07","2015-05-15 22:32:07",2
"Command-Line Interface","Save state between installs","https://github.com/appcelerator/appc-install/issues/21    During the appc setup the installer should cache or save the current status. This because if one step fails it will download and compile everything all over again.",Improvement,Low,Open,"2015-05-15 17:56:05","2015-05-15 17:56:05",13
"Command-Line Interface","Support switching organizations directly without logging (out and) in","After working with the new CLI and Studio for a while, and being member of multiple organizations I've found it very cumbersome to switch between them.    On the website is a matter of selecting a different organization in the dropdown, but in Studio or CLI there is no such option.    For CLI, you have to run {{appc login}} or {{appc login -o <id>}} if you know the ID by hart. In both cases, you need to enter your username and password again.    The preferred solution would be to be able to do:    ","New Feature",None,Closed,"2015-05-15 15:14:16","2015-05-15 15:14:16",8
"Command-Line Interface","On iOS, the user should not need to kill the app in order to dismiss a valid security violation splash screen","Consider the following scenario:    # A user creates a Titanium or Alloy app  # In the tiapp.xml, the user adds the valid remote property: {{<property name=appc-sourcecode-encryption-policy type=string>remote</property>}}  # The user's device has no network connection  # The user can install the app to device *or* adhoc package the app  # The user launches the app and will see the security violation screen  # The user backgrounds the app and turns the device's network back on  # The user foregrounds the app    *Actual:* The security violation screen is still there (see attachment). To dismiss the security violation screen, the user will need to kill the app and relaunch the app.    *Expected:* After the user brings the app to the foreground, the security violation screen should be dismissed.",Improvement,Medium,Open,"2015-05-15 02:10:12","2015-05-15 02:10:12",8
"Command-Line Interface","appc -v returns undefined for NPM version","h5.Description    When running appc -v the NPM version is returned as undefined. This is because it relies on [this pull|https://github.com/appcelerator/appc-install/pull/17] for the NPM package which has not been published yet        h5.Steps To Reproduce    1. Using Appc CLI version 0.2.286 run appc -v    h5.Actual Result    Undefined is returned for the NPM version    h5.Expected Result    The NPM version should be returned and if not available undefined should not be shwon",Bug,High,Closed,"2015-05-14 21:05:51","2015-05-14 21:05:51",1
"Command-Line Interface","If you create an Arrow project when the cloud is unstable, then a misleading error message is returned","*Details:* If you create an Arrow project when the cloud is unstable, then a misleading error message is return:    bq. Unable to register the new app with Appcelerator Platform either due to limited connectivity or other unexpected problem. Please retry later using the command 'appc new --import --project-dir /path/to/project' { \[Error: Resource Not Found\]    The {{appc new --import}} command is specific for importing Titanium mobile projects into the platform.    *Steps to reproduce:*  # In terminal, run {{appc new}} when the cloud is unstable  # Select *Arrow app*  # And finish the steps of creating an Arrow project    *Actual:* When the cloud is unstable, the following error message is returned:      *Expected:* Instead of {{appc new --import}}, the messaging should be:    bq. Please retry later using the command 'appc new'.",Bug,Medium,Closed,"2015-05-14 19:45:20","2015-05-14 19:45:20",5
"Command-Line Interface","Setup does not find latest 4.0.0.RC4","When I run {{appc setup}} the CLI does not find 4.0.0.RC4 while Studio does (see screenshot). Running the command with trace shows it does find 4.0.0.RC4 listed in the releases but somehow it thinks the installed 4.0.0.RC3 is the newest. Running {{appc ti sdk -r}} also lists 4.0.0.RC4.    Trace log:  https://gist.github.com/FokkeZB/27e1c31a9d1808ebcb61#file-console-log-L46",Bug,High,Closed,"2015-05-14 19:13:44","2015-05-14 19:13:44",8
"Command-Line Interface","Building Kitchensink master to android device throws error at longjohn.js:185","h5. Steps To Reproduce:  1. Build the latest KS master to an android device.  2. Observe the build logs.    h5. Actual Results:  1. The build process fails with error:      h5.Expected Results:  1. The build process should complete successfully.  ",Bug,High,Resolved,"2015-05-14 00:03:34","2015-05-14 00:03:34",5
"Command-Line Interface","Improve Offline with Remote Verbiage","Improve the verbiage when the device is offline, and the app is built with remote security policy.",Improvement,High,Closed,"2015-05-12 18:27:00","2015-05-12 18:27:00",5
"Command-Line Interface","Offline packaging is successful for Android & IOS with CLI 0.2.282","h6.This is a regression. I don't see this issue with appc cli 0.2.276    h5.Steps to reproduce:  1. Install appc CLI 0.2.282.  2. Create an app for android and ios platforms.  3. Go offline.  4. Package the app for both android & ios.    h5.Actual Results:  1. We can package successfully.    h5.Expected Results:  1. We should not be able to package as we are offline & production builds should fail.",Bug,Critical,Closed,"2015-05-12 17:11:52","2015-05-12 17:11:52",8
"Command-Line Interface","Platform-SDK: Logout request is incorrect","Calling AppC.Auth.Logout() results in an error in the callback. This is due to an incorrect 'post' rather than a 'get' to the dahsboard /auth/logout endpoint",Bug,None,Resolved,"2015-05-12 01:37:23","2015-05-12 01:37:23",5
"Command-Line Interface","The CLI should have a minimum Node version","h5.Description    When attempting to run the Appc CLI using an older Node version such as 0.8.22 the CLI will error out with the below        After some research it appears that this is due to having an older Node which does not support this function.    If the user has an older version of Node then something similar to Titanium should happen where it prints out the following rather than failing on code.      h5.Steps To Reproduce    1. Either install Node 0.8.22 or use a package manager to switch to 0.8.22  2. Run appc use    h5.Actual Result    Running appc use will error out with the above    h5.Expected Result    Attempting to run a command when using an older version should tell the user to upgrade to a newer version",Bug,High,Closed,"2015-05-11 18:46:30","2015-05-11 18:46:30",3
"Command-Line Interface","Wrapped `appc ti module --output json` should not show banner","The {{appc ti module -o json}} command shows the banner, where it shouldn't.    h1. Reproduce    * Run {{ti module -o json}} for the correct output  * Run {{appc ti module -o json}} for the incorrect (with banner) output        h1. Related code    https://github.com/appcelerator/appc-cli/blob/a86886e6636c132eb4daa90551c40066c251994b/bin/appc#L86-L89    h1. Suggested solution    If {{\-o}} and {{--output}} is the current standard for setting the output on any of the bundled CLI's, we should keep this standard and change the code to:        ",Bug,High,Closed,"2015-05-10 14:41:25","2015-05-10 14:41:25",3
"Command-Line Interface","Running appc ti build -h fails with: 'Cannot read property 'properties' of undefined'","h5.Description    When running the command {{appc ti build --help}} or {{appc ti build -h}} the command errors out with the following error        When running with -l trace I see that the following parameters are passed in to the Titanium CLI  {{ARGS:  [ 'build', '-h', '-e', '-l', '-p', '-l', 'trace' ]}}   or  {{ARGS:  [ 'build', '-h', '-l', 'trace' ]}}    The above     Running the command with Titanium CLI@4.0.0-beta8 works with no issues.  Running the command with 0.2.276(prod latest) and 0.2.279(last preprod version) work with no issues so this is a *regression*.    h5.Steps To Reproduce    1. From the command line run {{appc ti build -h}}    h5.Actual Result    The command errors out with the above    h5.Expected Result    The command should print a useful help section",Bug,None,Closed,"2015-05-07 21:56:41","2015-05-07 21:56:41",1
"Command-Line Interface","Attempting to run login required commands when logged out fails","h5.Description    When attempting to run a command that requires the user to be logged in, if the user is logged out then the command fails with the below        This is a regression as it works in what is in production(0.2.276) and the previous in preproduction(0.2.279), they will prompt the user to login rather than error out    h5.Steps To Reproduce    1. Logout with {{appc logout}}  2. Run {{appc new}} or {{appc run}}    h5.Actual Result    Command fails with above error    h5.Expected Result    Command should not fail with the above error",Bug,Critical,Closed,"2015-05-07 19:10:55","2015-05-07 19:10:55",5
"Command-Line Interface","Building to android with SDK 3.5.1.GA fails when using appc cli 0.2.280","h6. This might be related to the encryption fix which went in CLI 2.8.0 : CLI-608  h5.Steps To Reproduce:  1. Make sure appc ali 0.2.280 is installed.  2. Build an app for android device/emulator with sdk 3.5.1.GA.    h5.Actual Results:  1. The build fails with errors:    2. Same app when built with SDK 3.5.1.GA & appc cli 0.2.279 builds successfully.  3. Same app when built with latest 4.0.0 & appc cli 0.2.280 builds successfully.    h5.Expected Results:  1. The build should take place successfully with no errors.",Bug,High,Closed,"2015-05-07 01:24:14","2015-05-07 01:24:14",8
"Command-Line Interface","Unable to run 'appc setup' on io.js","appc won't setup on io.js    ",Bug,Critical,Closed,"2015-04-14 01:20:50","2015-04-14 01:20:50",5
"Command-Line Interface","Console logs incorrectly that setting org to undefined","There is an org in the session.  Unsure if this means the /user/organizations call to 360 is empty.  I'm not able to duplicate with any of my accounts.  If this is an empty orgs payload from 360 causing it, is there a way to drum up the actual URL and response?  Impersonating this user and hitting the endpoint in platform.appc yields the expected org (below).        user/organizations response:  ",Bug,High,Closed,"2015-05-05 17:44:11","2015-05-05 17:44:11",3
"Command-Line Interface","If you create an Arrow project with an existing name, then ERROR  | { errcode: 230, statusCode: 400 } is returned","*Details:* If you create an Arrow project with an existing name, then ERROR  \| \{ errcode: 230, statusCode: 400 \} is returned.    *Note:*  * This is a *regression* since this does not occur with Appc CLI 0.2.276; released in the wild  * This is *not a cloud issue* since this bug is reproducible if you point Appc CLI 0.2.279 to production    *Steps to reproduce:*  # Run {{appc new}}  # Select *Arrow App*  # Specify an Arrow project name that already existed    *Actual:* ERROR  \| \{ errcode: 230, statusCode: 400 \} message is returned.  *Expected:* ERROR  | App <APP_NAME> already exists. message should appear instead.",Bug,High,Closed,"2015-05-05 01:24:31","2015-05-05 01:24:31",1
"Command-Line Interface","Support logging in to VPC environment","When one or more VPC environments are configured for an organization, need to allow the user to be able to select the environment to log in.  Currently, logs into the production Node.ACS / ACS environment instead of one provided.",Improvement,High,Resolved,"2015-05-02 02:35:14","2015-05-02 02:35:14",1
"Command-Line Interface","Auth code is always required on login after session is invalidated","h5. Description  Whenever a user logs in on a machine after having a session invalidated, an auth code will be required when logging in.    For example:  # Log in to CLI on machine 1 using auth code    # Log in to CLI on machine 2 using auth code    # Attempt to use CLI on machine 1, session will be expired but an auth code will also be requested again      h5. Actual behaviour  A user needs to enter an auth code every time they log in to the CLI after their session is invalidated    h5. Expected behaviour  A user will only need to enter an auth code the first time they log in from a machine",Bug,Medium,Closed,"2015-05-02 00:59:50","2015-05-02 00:59:50",1
"Command-Line Interface","Device authorization code is referred to with two different terms when authorizing hardware","h5.Description    When authorizing a new machine you will be prompted with the following        And then when selecting how you would like to receive the code you will be prompted with the following        The code should only be referred to as an authorization code, or an activation code. Preferably an authorization code as that is what it is    h5.Steps To Reproduce    1. Logout of your machine with {{appc logout -D}}  2. Login with {{appc login}}  3. Run through the prompts    h5.Actual Result    The device auth code will be referred to using two different terminologies     h5.Expected Result    The device auth code should only be referred to using one terminology ",Improvement,Low,Closed,"2015-05-02 00:51:45","2015-05-02 00:51:45",1
"Command-Line Interface","Improve password masking for appc-logger","see https://github.com/appcelerator/appc-cli/pull/145",Improvement,Low,Resolved,"2015-05-02 00:48:12","2015-05-02 00:48:12",1
"Command-Line Interface","Creating a project with an invalid session errors out after logging in","h5.Description    After a session has been invalidated due to logging in on a different machine when creating a new project the CLI will prompt you to login again and authorize your hardware. After logging in the project creation fails with the below.        Just before this error when running with -l trace the following is output, it appears that the session that the CLI is using in not a valid session.         Full output is attached as fullOuput.txt    *When running {{appc new}} after this failure it does not fail*    h5.Steps To Reproduce    1. Login on machine Y {{appc login}}  2. Login on machine X {{appc login}}  3. Create an app on machine X {{appc new}}  4. Create an app on machine Y {{appc new}}  5. Login when prompted    h5.Actual Result    The project creation will error out with the above    h5.Expected Result    The project creation should be successful ",Bug,High,Closed,"2015-04-30 20:16:05","2015-04-30 20:16:05",1
"Command-Line Interface","appc -v should show both the NPM and active version","When we're debugging user problems we ask them to make sure they're on the latest version of the appcelerator NPM package. But the only way to check is:        We should include both the NPM and active version with {{appc -v}}.        Q&A: https://community.appcelerator.com/topic/285/appc-setup-causing-error-with-exit-code-1/2",Improvement,High,Closed,"2015-04-30 07:26:39","2015-04-30 07:26:39",5
"Command-Line Interface","Attempt to retry when registry is not available","For the appcelerator front-end (apps-install) need to retry when registry is unavailable.    Will try up to 10 times with each iteration waiting 500 x N (where N= is retry count)",Improvement,High,Closed,"2015-04-30 05:35:05","2015-04-30 05:35:05",5
"Command-Line Interface","ENOTEMPTY error when creating titanium project ","Run the following command the first time, the project files are created in */Users/feonsua/work/sandbox1/sandbox2/sandbox3*  Run the command again, a classic project is created under */Users/feonsua/work/sandbox1/sandbox2/app1*, which is one directory up than what was being specified. Then the process is terminated with an error message.        This happens when the --project-dir specified is different from the project name.",Bug,None,Closed,"2015-04-29 13:01:20","2015-04-29 13:01:20",3
"Command-Line Interface","Build to an iOS device and then an iOS simulator fails","h5.Description    When building an iOS app, if you build the app for device and then build the device for simulator the build for simulator will fail with the following error    {code: title=error 1}  [DEBUG] [ioslib] [ios-sim] [DEBUG] Session could not be started: Error Domain=NSPOSIXErrorDomain Code=22 Installation Failed UserInfo=0x7f916347ea40 {NSLocalizedDescription=Installation Failed, NSLocalizedRecoverySuggestion=An error occurred while preparing the app for installation (no bundle identifier was found at the expected path)}  [DEBUG] [ioslib] [ios-sim] Exited with code: 1  [ERROR] Project failed to build after 7s 726ms  [ERROR] An error occurred running the iOS Simulator (ios-sim exit code 1)      From what I see, if I wait the full time required for the rebuild (1 hour) then it seems to work fine.    Setting [this line|https://github.com/appcelerator/appc-cli-titanium/blob/master/hook/titanium.js#L146] to be true makes the build work everytime!    The fix for CLI-588 *does not fix this issue*    h5.Steps To Reproduce    1. Create a new application using {{appc new}}  2. Run the app on simulator using {{appc run -p ios -T simulator}}  3. Run the app on device using {{appc run -p ios -T device}}  4. Run the app on simulator using {{appc run -p ios -T simulator}}  5. Clean the app {{appc ti clean}}  6. Run the app on simulator using {{appc run -p ios -T simulator}}    h5.Actual Result    2. App will be built successfully  3. App will be built successfully  4. App will not be built successfully (see error 1)  6. App will not be built successfully (see error 2)      h5.Expected Result    App should be successfully every time",Bug,High,Closed,"2015-04-24 22:20:00","2015-04-24 22:20:00",2
"Command-Line Interface","Cannot build a titanium project to both iOS simulator and android emulator","A titanium project can be run only on the first platform it is ran. It would not build on the other platform.    Steps to reproduce:  1. Create a new titanium project using appc new  2. Run the project on android emulator appc run -p android  3. Now run the project on iOS simulator appc run -p ios    Actual result:  The project does not build for iOS simulator and fails with an error      Trying to build it for the second time to iOS simulator it shows an error      Similarly if a new project is ran on iOS simulator first then on trying to build it to android emulator next it does not build and build process terminates unexpectedly.",Bug,Critical,Closed,"2015-04-24 09:58:57","2015-04-24 09:58:57",2
"Command-Line Interface","Add clean to the list of passthrough commands that need not prompt for authentication ",,Improvement,High,Closed,"2015-04-24 03:41:04","2015-04-24 03:41:04",1
"Command-Line Interface","Rebuilding an application for Android emulator fails","h5.Description    When rebuilding an application for Android emulator using 0.2.269 the build exits with the following         Full logs are attached as fullOutput.txt     *If I set encryptJS to true [here|https://github.com/appcelerator/appc-cli-titanium/blob/master/hook/titanium.js#L147] then the build has no problems.*    h5.Steps To Reproduce    1. Create a new application using {{appc new}}  2. Build the application for Android using {{appc run -p android -T emulator}}  3. Rebuild the application for Android using {{appc run -p android -T emulator}}    h5.Actual Result    The build will fail with the output above     h5.Expected Result    The build should pass",Bug,Critical,Closed,"2015-04-24 01:48:27","2015-04-24 01:48:27",3
"Command-Line Interface","Allow modules to be created using the -t flag","Allow  to create a titanium module from the CLI.",Improvement,High,Closed,"2015-04-24 01:06:50","2015-04-24 01:06:50",5
"Command-Line Interface","Clean up appc new arguments","Clean up the undefined arguments passed to titanium during app creation. This could cause problems.    ",Improvement,Medium,Resolved,"2015-04-23 19:08:04","2015-04-23 19:08:04",3
"Command-Line Interface","Can not login in Appcelerator Studio","Can not login to Appcelerator Studio, I'm receiving the error:  ERROR | Required body parameter: userAgent missing  ",Bug,High,Closed,"2015-04-22 21:49:07","2015-04-22 21:49:07",3
"Command-Line Interface","CLI prompts for login twice when --env option is given in the command","The cli prompts twice for login when --env option is given during appc new or appc run command. However, if username and password are provided as part of the command then it prompts twice for organization even if a valid --org-id is also passed in the command    Steps to Reproduce:  1. Run the command appc new --env preproduction    Actual Result:  The user is forced to enter username, password and organization selection two times.    ",Bug,High,Closed,"2015-04-23 08:10:51","2015-04-23 08:10:51",2
"Command-Line Interface","Only set version after installation","Rather than set the active version before downloading and installing it's best to set it after the installation has taken place.",Improvement,Medium,Resolved,"2015-04-22 20:43:38","2015-04-22 20:43:38",3
"Command-Line Interface","Errors updating Core CLI when Studio is open","When trying to update the Core CLI from terminal (via {{appc use latest}} or {{appc setup}}) I get errors when Studio is open.    *Steps to reproduce issue*  1. Open Studio  2. Run {{appc use latest}} (do not already have the latest version installed)  -----------------------  3. Delete the latest folder from {{~/.appcelerator/install}}  4. Close Studio  5. Run {{appc use latest}}    *Actual Results*  2. Install of latest version fails  5. Install succeeds    *Expected Results*  Installs of latest version succeed    *Notes*  This makes it very difficult to install CLI updates from inside Studio.  I tested this many times. 10/10 installs succeeded with Studio closed, 10/10 installs failed with Studio open.",Bug,High,Closed,"2015-04-22 19:57:43","2015-04-22 19:57:43",5
"Command-Line Interface","Need to add proxy logic to underlying appc process such as acs","same as we're using here     https://github.com/appcelerator/appc-cli/blob/c0f602a2992ee27fbe8c7a1328eedec422f912a7/lib/constants.js#L200    this code above should reference APPC_CONFIG_PROXY env    and this code should be refactored    https://github.com/appcelerator/appc-cli/blob/7a134ba6a50624ea9046b1d7578547b8760b21ee/lib/commands/login.js#L511    we need the front-end and the appc cli to both respect the proxy.",Improvement,High,Resolved,"2015-04-22 17:53:45","2015-04-22 17:53:45",5
"Command-Line Interface","Login validation error message not passed through prompt from CLI","Please refer to Studio ticket.  https://jira.appcelerator.org/browse/TISTUD-7325    Studio is listening to CLI through socket communication through request and response protocol model.  In case of Sign-in, If user is not provided any credentials and entered Ok, will get the proper error message from CLI. The response looks like below.    {type:error,message:validate error: you must enter a value for the Appcelerator ID,question:[{type:input,name:username,message:Appcelerator ID:},{type:password,name:password,message:Password:}]}    If user provided wrong credentials, then CLI is not returning the error message from the server. Response looks like below.    {type:question,question:[{type:input,name:username,message:Appcelerator ID:},{type:password,name:password,message:Password:}]}    Expected: CLI should send error message, so that same will be passed back to the studio user, they can able to see what went wrong.",Improvement,Medium,Closed,"2015-04-22 09:12:55","2015-04-22 09:12:55",3
"Command-Line Interface","Random Cannot find module errors when updating via appc use latest","Every now and then people get {{Cannot find module}} errors during {{appc use latest}} and sometimes with {{appc run}}.    * https://community.appcelerator.com/topic/123/the-login-server-returned-an-error/19  * https://community.appcelerator.com/topic/150/can-not-login-to-appcelerator-studio/5  * https://community.appcelerator.com/topic/219/error-cannot-find-module-after-update-0-2-255  * https://community.appcelerator.com/topic/185/error-cannot-find-module-arrow/2 (slightly different, during appc run﻿)",Bug,High,Closed,"2015-04-22 08:39:14","2015-04-22 08:39:14",0
"Command-Line Interface","appc acs and appc cloud reference different versions of ACS CLI","h5. Description  Running {{appc acs}} and {{appc cloud}} uses different versions of the ACS CLI. If the user has the ACS CLI installed globally, then running {{appc acs}} will use the version of the ACS CLI that is installed separately to the appc CLI, whereas running {{appc cloud}} will always use the version of the ACS CLI bundled with the appc CLI.    *Note:*  If the use does not have the ACS CLI installed globally, both {{appc acs}} and {{appc cloud}} will use the bundled version    h5. Steps to reproduce  # Install a version of the ACS CLI that is different to the version bundled with the appc CLI (e.g. {{npm install -g acs@1.0.22}})  # Log in to the appc CLI  # Run {{appc acs -v}}  # Run {{appc cloud -v}}    h5. Actual  {{appc acs -v}} will return the globally installed version of the ACS CLI     {{appc cloud -v}} will return the version of the ACS CLI bundled in the appc CLI    h5. Expected  Both {{appc acs}} and {{appc cloud}} should use the version of the ACS CLI bundled with the appc CLI",Bug,Medium,Closed,"2015-04-21 22:26:38","2015-04-21 22:26:38",8
"Command-Line Interface","Appc ti -v returns Appc CLI version","When I run {{appc ti -v}} I get the output of {{appc -v}}.    *Steps to reproduce issue*:  1. Run {{appc ti -v}}    *Actual Results*:  Same output as {{appc -v}}    *Expected Results*:  Output should show the local Titanium CLI version.",Bug,Medium,Closed,"2015-04-21 20:04:12","2015-04-21 20:04:12",1
"Command-Line Interface","Titanium always does full rebuild, forced by encryptJS","When building a Titanium app for iOS Simulator, it always forces a rebuild because *JavaScript files need to be re-encrypted*. This even happens when you set deploy type to development. It does however *NOT* happen when you skip {{appc run}} and use {{ti build}} directly.    This issue makes rebuilds take a lot longer then needed.    h1. To reproduce    1. Create a project.  2. Run the project via AppC ({{appc run -p ios}}) once for an initial build.  3. Run the project via AppC again ({{appc run -p ios}}) and confirm it says: {{Forcing rebuild: JavaScript files need to be re-encrypted}} and later {{Forcing rebuild: ApplicationDefaults.m has changed since last build}}.  4. Run the project via AppC with development deployType ({{appc run -p ios -D development}}) once for a new build with changed deployType.  5. Run the project via AppC with development deployType ({{appc run -p ios -D development}}) again and confirm it says the same.  6. Run the project via Ti ({{ti build -p ios}}) once to generate a new build.  7. Run the project via Ti ({{ti build -p ios}}) again to confirm that this time it does not force a rebuild.    Found by this user:  https://community.appcelerator.com/topic/203/appcelerator-forcing-a-rebuild-for-javascript-re-encryption",Bug,High,Resolved,"2015-04-21 10:40:26","2015-04-21 10:40:26",8
"Command-Line Interface","Appc CLI login command is returning html content when server is not responding","When Appcelerator server is down, try to login through CLI or Studio. After providing credentials it will error out with the following information.    ERROR  | <html><body><h1>504 Gateway Time-out</h1>  The server didn't respond in time.  </body></html>    Actual Result:  Thrown error with html content both in CLI or In Studio and same is displayed to the user.  Expected Result: Always send the plain text to the end user. ",Story,None,Open,"2015-04-21 08:54:02","2015-04-21 08:54:02",3
"Command-Line Interface","Alert users when attempting to run an app that belongs to a different org than they are currently logged in as","if the current user is logged in under Org A and tries to run an app created under Org B that fails. The error message is cryptic:    That's fine if the user has no rights to Org B, we shouldn't give any details about it. But if the user _is_ a member of the other org that the app belongs to, we should give more details about why we can't run this app. Specifically we should tell them they are logged in under Org A, the app is part of Org B and that they need to logout and back in under Org B to run it.",Improvement,High,Resolved,"2015-04-17 18:34:58","2015-04-17 18:34:58",0
"Command-Line Interface","Automatically prompt for new login when session is invalid","Every now and then I get the error we see reported in the Q&A a lot as well:        Logging out (I using {{-D}} to be sure) and in again fixes it.    I think the UX would be better if don't spit out an error but inform the user the session as expired and he needs to login again. Then under the hood logout, clean up whatever we can and present the login again.    ",Improvement,High,Resolved,"2015-04-17 08:22:41","2015-04-17 08:22:41",3
"Command-Line Interface","Build to Android fails when offline","*Details:* Issue trying to build a titanium project on Android device or emulator  when offline.    *Steps to Reproduce:*  1. Being online, create a new titanium project  2. cd into the project folder  3. Run the project once on Android device/emulator using the command appc run -p android. The project runs successfully  4. Now disconnect the internet  5. Again run the project on Android device/emulator using the command appc run -p android    *Actual:* Project will fail to finish building with {{titanium exited with exit code 0}}; see attachment for failure logs.  *Expected:* Project should finishing building in offline mode.",Bug,Critical,Closed,"2015-04-10 22:15:29","2015-04-10 22:15:29",8
"Command-Line Interface","When passing in --org-id to certain commands when logged out I still am prompted to select an org","h5.Description    When passing in {{--org-id}} to certain commands when not logged you will be still be prompted to select an org. Below are examples of some of the commands that will prompt you for an org        h5.Steps To Reproduce    1. Logout using appc logout  2. Run one of the above commands    h5.Actual Result    You will be prompted to log in to an org    h5.Expected Result    You should not be prompted to log into an org",Bug,High,Closed,"2015-04-09 23:27:36","2015-04-09 23:27:36",8
"Command-Line Interface","appc unpublish should support --project-dir","h5. Description:  While closing a related ticket, I tried {{appc run}}, {{appc publish}}, and {{appc unpublish}} from outside the project directory. {{appc unpublish --project-dir}} does not work.    An error is shown like:      h5. Steps to reproduce:  1) Create or use an Arrow project, publish the app  2) From outside the directory, run {{appc unpublish --project-dir <your directory here>}}    h5. Result:  The app does not unpublish, {{appc unpublish}} help does not show support for {{--project-dir}}    h5. Expected Result:  Unpublish support for {{--project-dir}}",Improvement,Medium,Closed,"2015-04-08 00:28:39","2015-04-08 00:28:39",5
"Command-Line Interface","If my account is unable to perform actions such as package, when attempting to package the command should exit immediately","h5.Description    If the account I am logged into is a developer plan account then I am unable to package as expected.     When attempting to package from the CLI the build starts, the alloy compiler runs and then the process exits and tells me I do not have the correct plan. This also happens in situations such as when my app is created in a different org to the org I am logged in to or when I attempt to build a non-platform app using appc CLI.    This process on my machine takes around 1 minute, my machine is quite slow so I imagine newer machines will take less time.     If it is feasible we should attempt to inform the user of any problems such as the above before starting any build steps such as running the alloy compiler.        If I attempt to publish an arrow app the command fails immediately with the following, this is how I would expect Titanium projects to behave        h5.Steps To Reproduce    1. Login to a developer(free) plan account  2. Create an application  3. cd into the location  4. Package for distribution using appc run -p ios -T dist-appstor    h5.Actual Result    The build process will start, the alloy compiler will start and complete and then the process exits due to the account not being able to package    h5.Expected Result    The build process should start and inform me that I do not have the correct plan to package before beginning any other processes.",Improvement,Medium,Open,"2015-04-07 21:10:35","2015-04-07 21:10:35",5
"Command-Line Interface","Add appc test command","I would like not to use any NPM commands when using Arrow as I feel it is confusing to jump between the two.    Add `appc test` which passes through to `npm test`",Improvement,High,Closed,"2015-04-03 15:10:54","2015-04-03 15:10:54",5
