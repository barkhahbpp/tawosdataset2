Name,Title,Description,Type,Priority,Status,Creation_Date,Estimation_Date,Story_Point
Mule,"LazyMuleArtifactContext ignores custom Global Error Handler","LazyMuleArtifactContext ignore custom Global Error Handler definition when this configuration is located after failing flow.    _Configuration component definition_ is one of core's component and should be always enabled to ensure it will be loaded at first independently wherever it's located in mule's application definition.     ",Bug,Major,Closed,"2020-04-17 14:31:53","2020-04-17 13:31:53",0
Mule,"Parameter that are included as child elements in XML are recognized as an element inside a route","Parameters that are declared as child elements inside a container xml tag for a route are increasing the index.   We should review if this happens only for routes or for any scope. Ignoring them to not increase the index will break compatibility with tooling as they have to also take this change into account.",Bug,Critical,Open,"2019-10-15 17:39:51","2019-10-15 16:39:51",4
Mule,"Automate Update of License year, and update it to 2019 in 3.x","Update License year to 2019",Task,"To be reviewed",Done,"2019-04-22 17:21:50","2019-04-22 16:21:50",4
Mule,"Allow to enable logs on tooling applications in order to allow troubleshooting","Application deployed for Tooling have the logs muted. We should allow to override this by System Property in order to allow Tooling to do troubleshooting.",Task,Minor,Done,"2019-04-04 17:06:16","2019-04-04 16:06:16",0
Mule,"Upgrade Mockito in Integration tests","Upgrade Mockito to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2018-12-05 15:36:41","2018-12-05 15:36:41",8
Mule,"Upgrade Mockito in connectors","Upgrade Mockito to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2018-12-05 15:32:12","2018-12-05 15:32:12",4
Mule,"Spike for an Application Model API including spec. - Part2","This is the spike which outcome is going to be a first version of the API and an specification explaining it and the use cases to be solved with it.",Task,Critical,Done,"2018-07-04 17:55:29","2018-07-04 16:55:29",8
Mule,"Fix BasicHttpProxyToHttpsTestCase","BasicHttpProxyToHttpsTestCase tests started failing after the upgrade of Jetty to 9.2.24.v20180105 performed in MULE-14763",Bug,Major,Closed,"2018-04-06 14:51:59","2018-04-06 13:51:59",2
Mule,"ConfigReference String parameter is not lazy initialized properly","Having the following parameter  {code}    @ConfigReference(namespace = HTTP, name = REQUEST_CONFIG)    @Parameter    private String requesterConfig;  {code}  During lazy initialization it does not initialize, even then adding ExpressionSupport(NOT_SUPPORTED).  This results in MUnit tests failing.  An example with WSC:  {code:xml}   <wsc:config name=ws-trim-public-application doc:name=Web Service Consumer Config doc:id=8b23f56f-414e-4fd6-90be-837a95ee0b59 >    <wsc:connection mtomEnabled=true wsdlLocation=http://ccoappdi03.ccity.biz/CCC.ApplicationService.Trim_3.0/TrimPublicApplicationService.svc?singleWsdl service=TrimPublicApplicationService port=BasicHttpBinding_ITrimApplicationService address=http://ccoappdi03.ccity.biz/CCC.ApplicationService.Trim_3.0/TrimPublicApplicationService.svc/mtom >     <wsc:custom-transport-configuration >      <wsc:http-transport-configuration requesterConfig=HTTP_Request_configuration />     </wsc:custom-transport-configuration>    </wsc:connection>   </wsc:config>   <http:request-config name=HTTP_Request_configuration doc:name=HTTP Request configuration doc:id=1226b542-1d41-447d-b9f3-9301172ac7a9 />  {code}",Bug,Critical,Closed,"2018-04-06 14:13:29","2018-04-06 13:13:29",8
Mule,"ExtensionModel generator takes into account static methods in operations","Added some static methods in the PetStore test extension for testing some scenarios and that made the extension model generation tests fail.    Revert these code changes:   * [https://github.com/mulesoft/mule/commit/eac0f0691462aae50026971d48bf9f68ca908b02#diff-10201da405805070c55f2c5b8575575eR42]   * [https://github.com/mulesoft/mule/commit/eac0f0691462aae50026971d48bf9f68ca908b02#diff-b900c1d8a06eb1e8f92ee10c477b7dd7R772]     ",Bug,Critical,Closed,"2018-04-05 21:15:41","2018-04-05 20:15:41",3
Mule,"Fix ConstrainedConnectorExceptionStrategyMule2126TestCase in 3.8.x","Test fails after the MULE-8175: Upgrade Xerces to 2.11.2 due to a format change in parse error message",Bug,Major,Resolved,"2018-04-05 19:51:37","2018-04-05 18:51:37",2
Mule,"Operation retry with transaction changes thread","When retrying an operation and a transaction is active, the retry may be run in another thread, breaking the transactional context.    Transaction support requires that transactional flows do not switch threads.",Bug,"To be reviewed",Resolved,"2018-04-04 13:46:41","2018-04-04 12:46:41",2
Mule,"Move Soap Service Implementation to a new module decoupled from mule.","*Move Soap Service Implementation to a new module decoupled from mule.*    This will:  * enable WSC and Soapkit to move faster without depending on an specific runtime version.  * share the RT code base between service, soapkit, wsc -> bugs are fixed only once :)  * WSC / Soapkit / Service can use different versions of the library if required.  ",Task,Critical,Done,"2018-04-03 22:14:51","2018-04-03 21:14:51",13
Mule,"SDK should validate that the given default value of an Enum parameter is a valid value","*SDK should validate that the given default value of an Enum parameter is a valid value*    When configuring a Default value for an Enum parameter the SDK can easily validate that the given value is a valid one.     Nowadays the value is not validated letting produce cryptic errors at runtime:          ",Bug,Major,Resolved,"2018-04-03 19:39:31","2018-04-03 18:39:31",2
Mule,"ArtifactClassLoaderRunner - Should keep only latest version of plugins discovered","The current code for discovering plugins for tests is not filtering the end list of plugins therefore if transitive dependencies for plugins have other plugins with different versions an error is thrown when creating the class loaders for those plugins as both versions try to define a mapping for the same package.  The runner classification code should keep the highest version of a plugin.",Task,Critical,Done,"2018-04-03 19:05:17","2018-04-03 18:05:17",4
Mule,"Update commons-lang version to 2.6 to match the version in mule-common","Having different versions generates that the tests in devkit fail because they use a method that was added in commons-lang 2.6. So as the mule runtime ships commons lang 2.4 the devkit tests fail.","Enhancement Request","To be reviewed",Closed,"2018-04-03 16:52:57","2018-04-03 15:52:57",2
Mule,"Expression with a placeholder should be correctly parsed","As from MULE-14603, an expression that has a placeholder value (e.g. #[${prop1}] ${prop2}) should update values. ","Enhancement Request","To be reviewed",Open,"2018-04-03 15:05:22","2018-04-03 14:05:22",4
Mule,"Fix DB flaky tests","Fix following tests cases:     Fix following tests cases:   |!https://muleesb.ci.cloudbees.com/static/4eadad58/images/16x16/document_add.png!  [org.mule.extension.db.integration.connectivity.DataSourcePoolingTestCase.limitsConnections[DERBY]|https://muleesb.ci.cloudbees.com/job/Mule-DB-Connector/lastCompletedBuild/org.mule.connectors$mule-db-connector/testReport/org.mule.extension.db.integration.connectivity/DataSourcePoolingTestCase/limitsConnections_DERBY_/]|20 sec|1|   |!https://muleesb.ci.cloudbees.com/static/4eadad58/images/16x16/document_add.png!  [org.mule.extension.db.integration.source.RowListenerTestCase.idempotentListen[DERBY]|https://muleesb.ci.cloudbees.com/job/Mule-DB-Connector/lastCompletedBuild/org.mule.connectors$mule-db-connector/testReport/org.mule.extension.db.integration.source/RowListenerTestCase/idempotentListen_DERBY_/]|5.6 sec|1|   |!https://muleesb.ci.cloudbees.com/static/4eadad58/images/16x16/document_add.png!  [org.mule.extension.db.integration.source.RowListenerTestCase.listenPlanets[DERBY]|https://muleesb.ci.cloudbees.com/job/Mule-DB-Connector/lastCompletedBuild/org.mule.connectors$mule-db-connector/testReport/org.mule.extension.db.integration.source/RowListenerTestCase/listenPlanets_DERBY_/]|5.5 sec|1|   |!https://muleesb.ci.cloudbees.com/static/4eadad58/images/16x16/document_add.png!  [org.mule.extension.db.integration.source.RowListenerTestCase.listenPlanetsWithWatermark[DERBY]|https://muleesb.ci.cloudbees.com/job/Mule-DB-Connector/lastCompletedBuild/org.mule.connectors$mule-db-connector/testReport/org.mule.extension.db.integration.source/RowListenerTestCase/listenPlanetsWithWatermark_DERBY_/]| ",Task,Major,Done,"2018-04-03 14:51:52","2018-04-03 13:51:52",5
Mule,"Failure to evaluate parse expressions for logger when intercepting","When having a parse expression in a logger, for example:    The expression fails with the attached message.  This is causing any MUnit test that has this kind of logger to fail, since we intercept every processor of the application.",Bug,Critical,Resolved,"2018-04-03 14:40:39","2018-04-03 13:40:39",2
Mule,"SFTP tests filing due to error during login in 3.8.x","Around 31 tests of SFTP transport are filing in 3.8.x branch due to an unexpected error thrown by JSch (Java Secure Channel) during login to the SFTP server.    This error could be evidenced in the following Jenkins builds:     - [Mule-3.8.x-CE-JDK8](https://muleesb.ci.cloudbees.com/job/Mule-3.8.x-CE-JDK8)   - [Mule-3.8.x-CE-JDK7](https://muleesb.ci.cloudbees.com/job/Mule-3.8.x-CE-JDK7)    After careful review of the history of the branch and a series of trials and error we were able to determine that the issue could be related to the upgrade BouncyCastle to 1.59 (---MULE-14382---: [PR|[https://github.com/mulesoft/mule/pull/6406]] )    Before this exact commit, the tests work perfectly         *Note*:     Reproducing this error locally could be quite tricky since it seems that the update to the BouncyCastle lib might be affecting the way how the host key provider file hostkey.ser file gets generated. https://github.com/mulesoft/mule/blob/mule-3.8.x/tests/functional/src/main/java/org/mule/tck/util/sftp/SftpServer.java#L51    This file is generated on the SFTP module root path and it's not deleted during the Maven's clean lifecycle. Therefore, if you have run the test before the commit mentioned above, you won't be able to reproduce this bug unless you manually delete the file. It seems that this file does not get rewritten if it already exists.     ",Bug,Major,Resolved,"2018-04-02 19:54:19","2018-04-02 18:54:19",4
Mule,"Release Jackson 1.9.14-MULE-002","Release Jackson 1.9.14-MULE-002",Task,"To be reviewed",Done,"2018-03-31 21:07:53","2018-03-31 20:07:53",2
Mule,"ConfigurationException: Element 'tokenManagerConfig-MyConfigName' is not defined in the Mule Registry","When using oauth module in the context of lazy init (MUnit) the attribute definition for tokenManager on {{oauth:client-credentials-grant-type}} is not defined a simple reference parameter therefore the initialization of the tokenManager referenced entity is not being done and fails with a {{ConfigurationException: Element 'tokenManagerConfig-MyConfigName' is not defined in the Mule Registry}}.  The reason why it is not being marked as reference is that it is declared to support expressions on the operation parameter reference.  ",Bug,Major,Resolved,"2018-03-28 19:07:20","2018-03-28 18:07:20",2
Mule,"Update License year to 2018","Update License year to 2018",Task,"To be reviewed",Done,"2018-03-27 22:01:56","2018-03-27 21:01:56",2
Mule,"Salesforce Connector Review - Phase 1","Salesforce Connector Review - Phase 1",Task,Major,Done,"2018-03-27 19:31:11","2018-03-27 18:31:11",8
Mule,"Refactor distro tests so they may be reusable from other projects","Ensure the distro tests infrastructure can be used from other projects",Task,"To be reviewed",Done,"2018-03-27 18:20:20","2018-03-27 17:20:20",4
Mule,"HTTP migration doc should cover RAML usage","The HTTP migration docs do not cover the fact that RAML metadata is no longer supported and that REST Connect should be now used in those scenarios. We need to add a note on that and link to https://docs.mulesoft.com/anypoint-exchange/to-deploy-using-rest-connect",Task,"To be reviewed",Done,"2018-03-27 17:35:48","2018-03-27 16:35:48",1
Mule,"ProcessingStrategy not propagated to `async` children","This causes that when using the proactor strategy, the processing type of the processors is not taken into account and everything runs in CPU_LIGHT, which may lead to starvation of the CPU_LITE thread pool if the async block has cpu intensive or long running io tasks.",Bug,"To be reviewed",Resolved,"2018-03-27 13:07:49","2018-03-27 12:07:49",4
Mule,"Override Secure Properties From Anypoint Runtime Manager Properties","Replacing mule-credential-vault with secure-properties in Mule 4, made lookup properties from $\{key} to $\{secure::key}.     This update makes overriding from Anypoint Runtime Manager Properties tab impossible, and it means we can only change the property value by rebuild/redeploy application.","Enhancement Request","To be reviewed",Resolved,"2018-03-27 02:51:20","2018-03-27 01:51:20",4
Mule,"Add javadoc in every class in api","There are some classes in api that do not have java doc. Add it.","Enhancement Request","To be reviewed",Resolved,"2018-03-26 18:16:44","2018-03-26 17:16:44",2
Mule,"XML SDK modules do not support reading properties from an external file","XML SDK modules do not support `<configuration-properties />`, i.e., reading properties from an external file:        is caused by     <mule:logger message=Creating user level=DEBUG category=$\{log\} />    together with     <mule:configuration-properties file=config.properties doc:name=Props />    The exact same code (minus the `mule` XML namespace) works in a Mule app",Bug,Minor,Closed,"2018-03-26 17:44:11","2018-03-26 16:44:11",0
Mule,"Fix how roles are retrieved from Authorization","As we are using the spring-module in the implementation of the OAuth2 Provider Module, some Authentication classes are internal to the spring module.     In particular SpringAuthenticationAdapter is used internally to store authentication information. In mule 3.x there was no issue when wanting to access it's methods, like getAuthorities() but now we can't.    Either move it to api or store authorities info in the authorization properties. ","Enhancement Request","To be reviewed",Open,"2018-03-26 13:14:51","2018-03-26 12:14:51",4
Mule,"SimpleRetryPolicy: Use mule schedulers with Mono.delay instead of reactor ones","This also happens on PrivilegedNonBlockingComponentExecutor.    Make sure the Mono is properly disposed also.",Bug,"To be reviewed",Resolved,"2018-03-24 22:39:11","2018-03-24 22:39:11",2
Mule,"Review Memory usage in tests of extensions-spring-support","Some flows and MuleContexts references are being kept and accumulated when running the tests in extensions-spring-support, leading to GC thrashing.         Review if the root cause is something that could occur in a running standalone mule instance",Bug,"To be reviewed",Closed,"2018-03-24 16:00:32","2018-03-24 16:00:32",4
Mule,"Create a RepositoryResolver to obtain the extension plugin","Create a RepositoryResolver to obtain the extension plugin so that we can pass that on to the embedded container, since the applications used for testing are lightweight apps.    For this, we need the embedded API to support the parameterization.    See: https://docs.google.com/a/mulesoft.com/document/d/1zNCp7BRHUQSiUpUCHCL1ah8PsXZ3i0pTz-zA3Xn7lIo/edit?disco=AAAABtSJ9Wc",Task,Blocker,Done,"2018-03-23 22:49:23","2018-03-23 22:49:23",8
Mule,"Add munit-extensions-plugin execution to default plugin lifecycle","The `munit-extensions-maven-plugin:test` goal has to be executed as part of the `integration-tests` phase of the `components.xml` in the `extensions-maven-plugin`.    ",Task,Blocker,Done,"2018-03-23 22:40:50","2018-03-23 22:40:50",5
Mule,"ExtensionsMavenPlugin should recognize munit-suite as sources ","For a mule plugin with the following structure:        The plugin needs to generate the following target output:    ",Task,Blocker,Done,"2018-03-23 22:36:30","2018-03-23 22:36:30",8
Mule,"Upgrade Jackson to 2.9.5","Upgrade Jackson to 2.9.5 as soon as it comes out.",Task,"To be reviewed",Done,"2018-03-23 21:30:39","2018-03-23 21:30:39",4
Mule,"Update DW dependency to 2.1.3-SNAPSHOT","Upgrade DW dependency that includes fixes for some flaky tests, among other things",Task,"To be reviewed",Done,"2018-03-23 20:22:57","2018-03-23 20:22:57",1
Mule,"enable WSC to override the content-type of the outgoing request","*Enable WSC to override the content-type of the outgoing request*    In most situations the WS Consumer configures the Content-Type correct to the WSDL but since SOAP web services are not that fancy, sometimes its required to override the content-type of the request because the service expects something else.    ","Enhancement Request","To be reviewed",Resolved,"2018-03-23 19:23:54","2018-03-23 19:23:54",8
Mule,"DB input parameters names are not parsed correctly","If you have an input parameter named `first-name` the `-` char is breaking the parser, so it results in an error like:     ",Bug,Blocker,Resolved,"2018-03-23 16:13:28","2018-03-23 16:13:28",5
Mule,"TypeAwareConfigurationFactory should lazily add annotations to the configurationType  ","TypeAwareConfigurationFactory is adding annotations to the configurationType when the factory is instantiated instead of when the factory is used. This means that cglib would be used when no needed (case for loading an extension model).",Bug,Major,Resolved,"2018-03-23 15:09:14","2018-03-23 15:09:14",1
Mule,"Refactor OAuthProvider listeners declarations to follow SDK guidelines.","The code was migrated from mule 3.x and it has a lot of old logic that should be replaced. For example, the way the callbacks for /token and /authenticate endpoints are declared.","Enhancement Request","To be reviewed",Resolved,"2018-03-23 13:12:15","2018-03-23 13:12:15",8
Mule,"Refactor tests httpClient","The tests were migrated from 3.x and they can be refactored in order to be more understandable and clean","Enhancement Request","To be reviewed",Open,"2018-03-23 13:09:15","2018-03-23 13:09:15",4
Mule,"Document when to use exportedResources and exportedPackages","This must also include java module docs.",Task,Critical,Done,"2018-03-22 21:39:28","2018-03-22 21:39:28",4
Mule,"DW does not require a Java class to be exported in order to be invoked","When you invoke a Java class that lives in the applications' classpath, DW finds it even if the package is not exported.  See related issue.",Bug,"To be reviewed",Open,"2018-03-22 21:37:01","2018-03-22 21:37:01",8
Mule,"Spike for an Application Model API including spec. - Part1","This is the spike which outcome is going to be a first version of the API and an specification explaining it and the use cases to be solved with it.",Task,Critical,Done,"2018-03-22 21:14:40","2018-03-22 21:14:40",8
Mule,"NameUtils should a compiled regular expression for camelScatterConcat function","https://github.com/mulesoft/mule-api/blob/master/src/main/java/org/mule/runtime/api/util/NameUtils.java#L91  when doing split should use a compiled regular expression.",Bug,Minor,Resolved,"2018-03-22 21:04:11","2018-03-22 21:04:11",1
Mule,"Update first-successful and round-robin Mule 4 documentation","We need to update first-successful and round-robin documentation for Mule 4",Task,"To be reviewed",Done,"2018-03-21 21:00:14","2018-03-21 21:00:14",2
Mule,"ForEach is not non-blocking","As a temporary fix for MULE-14757, Foreach was made blocking.    In order to make it non-blocking, some changes have to be done in the iterators/lists that return EventBuilderConfigurer so the process does not depend on state kept in the iterator.    With the current implementation (updating state in next/hasNext) and reactor's way of building Fluxes from Iterables, the use of foreach in Batch fixed size aggregations is broken.",Bug,"To be reviewed",Resolved,"2018-03-21 15:43:11","2018-03-21 15:43:11",4
Mule,"Extension with an operation with raw List return type breaks at compile time.","*Extension with an operation with raw List return type breaks at compile time.*    Output is:   [ERROR] diagnostic: error: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0    org.mule.runtime.api.exception.MuleRuntimeException: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0    Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0",Bug,Critical,Resolved,"2018-03-21 14:53:04","2018-03-21 14:53:04",2
Mule,"Upgrade Jetty to 9.2.24.v20180105","Jetty must be upgraded to a supported version.",Task,Major,Done,"2018-03-19 21:55:28","2018-03-19 21:55:28",2
Mule,"HTTP request connection limit reached error is not descriptive","When the maxConnections attribute is set and the number of requests exceed it, the following HTTP:CONNECTIVITY error is seen:      The No slot available message has been copied from AHC code and does not match the semantics we are given to the feature. It should be something like: Maximum connection limit reached, request cannot be processed.",Bug,"To be reviewed",Closed,"2018-03-19 19:23:12","2018-03-19 19:23:12",2
Mule,"Foreach with child with different processing types behaves asynchronously","When mixing compoennts with different processing types inside a freach (for instance, logger and scripting), or just putting a non CPU-LITE processor, each child is executed asynchronously.    This breaks the scenario where each iten has side effects (for instance, a file write) and that state is needed after the foreach, resulting in a race condition.",Bug,"To be reviewed",Closed,"2018-03-19 17:19:19","2018-03-19 17:19:19",2
Mule,"Interception API: Error XML-SDK operation with non-blocking operation is handled twice","Apart for the described behavior, also MULE-14754 is seen in this case  To reproduce: add a no-op interceptor in ModuleWithGlobalElementTestCase, add a flow ref indirection to the flow to be called, run testHttpDontLoginThrowsException. See error is logged twice on the console. (such test already done in branch MULE-14754 in mule-integration-tests)  ",Bug,"To be reviewed",Resolved,"2018-03-19 12:10:44","2018-03-19 12:10:44",4
Mule,"Flowstack: Exception when flow-ref is combined with failing interceptor and smart connector","See test added in branch with this issue key (mule and mule-integration-tests).    Elements in play here:    Interceptor whose after method throws a non-mule exception.  A smart connector with a failing operation  A flow ref indirection",Bug,"To be reviewed",Resolved,"2018-03-19 12:06:47","2018-03-19 12:06:47",4
Mule,"Review Jackson ObjectMapper vulnerabilities","Review and apply mitigations to Jackson2 vulnerabilities",Task,Major,Done,"2018-03-16 18:27:07","2018-03-16 18:27:07",4
Mule,"Add the capability of configuring the Service Name for an Oracle Connection","Add the capability of configuring the Service Name for an Oracle Connection    Mule Ticket for SE-1791","Enhancement Request",Critical,Closed,"2018-03-16 18:13:17","2018-03-16 18:13:17",0
Mule,"Logger extension model claims DEBUG is default","Changes were made in MULE-12886 to make the log level INFO by default. However, it is set to DEBUG by the MuleExtensionModelDeclarer.",Bug,"To be reviewed",Resolved,"2018-03-16 17:09:38","2018-03-16 17:09:38",1
Mule,"Spike: Application of source policies using interception API","Use the current implementation of source policies as a base for MULE-11528",Task,Major,New,"2018-03-16 13:41:36","2018-03-16 13:41:36",8
Mule,"Spike: Application of operation policies using interception API","Determine feasability and feature mismatch between policies and interception API.    The objective would be to move the code that currently applies the policies for an operation to an interceptor that applies all required policies.  Just one interceptor that applies all policies is ok for a first version.",Task,"To be reviewed",New,"2018-03-16 13:40:04","2018-03-16 13:40:04",8
Mule,"Processor interceptor after() runs in connector thread and not flow thread when processor is ASYNC_CPU_LITE","Processor interceptor after() runs in connector thread and not flow thread when processor is ASYNC_CPU_LITE",Bug,"To be reviewed",Resolved,"2018-03-15 21:50:10","2018-03-15 21:50:10",4
Mule,"Credentials leak in error messages","DB connector is printing out the whole connections URL in the exception payload in case of any exception without stripping out/masking out the DB passwords... this becomes a security vulnerability    Cannot get connection for URL jdbc:oracle:thin:username/<EMAIL>:1521/dt2dtasvc : IO Error: Unknown host specified    Credentials should be masked. Also check other logs or possible places where the same thing might happen",Bug,Critical,Closed,"2018-03-15 19:19:31","2018-03-15 19:19:31",3
Mule,"MTF Implementation Phase 1","MTF Implementation Phase 1:  - Spec Docs  ",Task,Major,Done,"2018-03-15 15:06:12","2018-03-15 15:06:12",13
Mule,"Custom scheduler shutdown from a thread from the same scheduler fails","This may lead to a memory leak of the scheduler's thread group when a scheduler is being cancelled from within one of its threads. This seems to be a common way for reactor to handle some situations.    When this happens, the stack leading to the shutdown call is:       ",Bug,"To be reviewed",Closed,"2018-03-15 15:03:10","2018-03-15 15:03:10",1
Mule,"Avoid iterating parameters map on operation policies","The iteration adds performance overhead",Bug,"To be reviewed",Resolved,"2018-03-14 21:41:35","2018-03-14 21:41:35",8
Mule,"Add more tests to Secure Config Properties module","Current tests have only 50% coverage. ",Task,"To be reviewed",Done,"2018-03-14 16:19:15","2018-03-14 16:19:15",4
Mule,"Evaluate JDK 9 supportability","Evaluate what do we need to implement in order to support Java 9 at runtime in Mule 4.",Task,"To be reviewed",Done,"2018-03-14 15:56:13","2018-03-14 15:56:13",8
Mule,"Non blocking operations use connector's thread to do internal mule processing","When an SDK non blocking operation finishes, the Runtime/SDK code which picks that result and performs internal Runtime logic is executed on the same thread which invoked CompletionCallback#success(Result).    So for example, when http:request obtains the response, all the internal runtime code which generates the message, handles streaming, processes the target attribute, etc, is executed on an Http selector thread instead of a runtime thread.     This has the following potential consequences:    * In connectors with few/only one selector threads (e.g: event loop) throughput might be hurt by this as the thread is performing runtime logic instead of being handling the next connection  * Custom policies, unexpected uses of the Interception API, etc, might collude with the item above and generate performance problems not detectable during our internal testing  * Memory leaks? I'm not sure if this is possible but we should review the consequences or possible failure points if an external thread is used to access objects in Mule's internal classloaders  * Security? Similar to the above, review possible impact  ",Task,Major,New,"2018-03-14 15:32:15","2018-03-14 15:32:15",4
Mule,"Initial Mule 4 architecture documentation / TB splitted - Cont.","Initial Mule 4 architecture documentation / TB splitted    * Define mechanism to document architecture  * Main Mule Runtime components diagrams  * Main Mule Runtime activity diagrams  * Some other stuff",Task,Blocker,Done,"2018-03-14 15:31:53","2018-03-14 15:31:53",2
Mule,"Provide a way for intercepting processors to override the publisher of the event context",.,"Enhancement Request","To be reviewed",Resolved,"2018-03-14 15:11:12","2018-03-14 15:11:12",1
Mule,"No repeatable streams funtionality in policies","When using policies, if the event entering the policy or continuing after an execute-next component is a stream, it is not repeatable when used within the policy components, causing errors on components after the stream has been consumed.",Bug,"To be reviewed",Resolved,"2018-03-14 15:02:40","2018-03-14 15:02:40",4
Mule,"Minor tweaks to use of reactor based on feedback","Based on feedback from reactor team",Task,Major,Done,"2018-03-14 14:35:56","2018-03-14 14:35:56",1
Mule,"Add a `maxConcurrency` attribute to `async` scope","The case that pops into my head right now is the case of a foreach iterating a large collection, and with an async inside. That case would quickly consume all available threads unless the maxConcurrency of the scheduler used by the async can be configured.         In any cast, it should be consistent with how it is configured for flows","Enhancement Request","To be reviewed",Resolved,"2018-03-14 13:38:17","2018-03-14 13:38:17",4
Mule,"EmbeddedContainer should allow to define a reactor for resolving dependencies during deployment on lightweight packaged applications","This would be needed in order to support MTF for connectors. The jar for the connector will not be installed therefore the deployment for lightweight applications should provide a way define a reactor when deployment an application or domain.  There is already support on https://github.com/mulesoft/mule-maven-client/blob/master/mule-maven-client-api/src/main/java/org/mule/maven/client/api/MavenClient.java#L73 to pass as parameter a reactor that will be called before going to the local Maven repository and remote repositories. This also has been added to the class loader model loader https://github.com/mulesoft/mule/blob/mule-4.x/modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/maven/AbstractMavenClassLoaderModelLoader.java#L250 but we have to review if the definition of the reactor should come from the class loader model attributes or from the deployment properties.",Task,Major,New,"2018-03-14 13:03:08","2018-03-14 13:03:08",16
Mule,"Review, fix and test error types in module","The spec defines a bunch of error types that should be raised in case of specific exceptions. Make the module follow the spec.",Task,Blocker,Done,"2018-03-14 11:51:00","2018-03-14 11:51:00",4
Mule,"Review and fix exported classes and api/internal arrangement","There are some exported classes needed for the module tests to run. I think there is another way that allows the test to run successfully without exporting internal classes.    The same happens to classes that are in api and should be internal.",Task,Major,Done,"2018-03-14 11:48:06","2018-03-14 11:48:06",2
Mule,"Migrate 3.x's OAuth2 provider tests","There is a bunch of tests from the old module to be migrated to the new connector. This requires that the new operation and config definitions are used so there must be a change in all the xml files. Also, the java classes make references to old packages and classes, that should be fixed as well. ",Task,Critical,Done,"2018-03-14 11:42:15","2018-03-14 11:42:15",8
Mule,"Add revokeToken operation","The spec defines a revokeToken operation. Add it as part of the module",Task,Critical,Done,"2018-03-14 11:39:57","2018-03-14 11:39:57",1
Mule,"Fix provider config parameters so that it follows spec.","Check that the parameters in the extension complies with te ones defined in the specification. ",Task,Critical,Done,"2018-03-14 11:38:03","2018-03-14 11:38:03",8
Mule,"Define tools and tasks required to simplify UX around classloading isolation","This task is to define the whole UX around classloading isolation and potencial issues, for instance:  * When there's a CNFE, what information should we show to the user for troubleshotting at design time?  * When it's using a java module or any other extension that requires access to resources within the app, how we can simplify experience so we automatically export resources through the packager  * etc.",Task,Critical,Done,"2018-03-13 20:58:50","2018-03-13 20:58:50",8
Mule,"Add MEL migration examples","Need to complete and publish all examples in the MEL migration doc.",Task,"To be reviewed",Done,"2018-03-13 20:35:44","2018-03-13 20:35:44",2
Mule,"Fix tests broken by DW error stack changes","Some tests broke due to changes in DW's stack printing during errors.",Task,"To be reviewed",Done,"2018-03-12 20:39:49","2018-03-12 20:39:49",1
Mule,"Connectors doesn't communicate correctly if their POJOs properties are nulleable or not","*Connectors doesn't communicate correctly if their POJOs properties are nulleable or not*    Review all core connectors and their return types and add `@Parameter` to all the properties and `@Optional` when it applies.    - -Email-   - -DB- (No attributes)   - -HTTP-  - -JMS-  - -Sockets-  - -Validations-  - -ObjectStore- (No attributes)   - -File/FTP/SFTP-  - -WSC-  - -VM-  - -Aggregators-  - -OAuth-",Bug,Blocker,Closed,"2018-03-12 16:12:48","2018-03-12 16:12:48",5
Mule,"Artifact deployment phases are not displayed on Mule logs when deploying applications from Tooling Runtime Client ","Only the following messages are displayed whenever an artifact is deployed from Tooling Runtime Client:    There should entries for new artifact, install, dispose.",Bug,Trivial,Resolved,"2018-03-12 13:27:20","2018-03-12 13:27:20",2
Mule,"Data format documentation for DW is wrong/incomplete","The current docs regarding the supported data formats has a number of problems:  * the URL encoded docs are incomplete and have no full read/write example  * the multipart docs are wrong, it features an example using postman but mistakenly identifies each part and does not really feature a full read/write example.    Additionally, the migration docs lack an entry on message attachments that links to DW's multipart doc, HTTP migration docs and possibly Email docs. This means Mule 3 users cannot clearly see how to approach migrating attachment usage.",Bug,"To be reviewed",Resolved,"2018-03-10 01:08:30","2018-03-10 01:08:30",2
Mule,"Static Metadata resolvers doesn't work with nonblocking operations","*Static Metadata resolvers doesn't work with nonblocking operations*    Having an Operation like that uses {{@OutputJsonType}}:      Will make the compilation fail saying:  ",Bug,Critical,Resolved,"2018-03-09 20:31:49","2018-03-09 20:31:49",8
Mule,"Add proper test coverage to secure-property-extension","Test coverage is around 55%. It needs to be at least 80%",Task,"To be reviewed",Done,"2018-03-09 20:10:17","2018-03-09 20:10:17",4
Mule,"Cannot access application resources from KeyResolver for Configurations","  When resolving the component keys the Thread.current().getContextClassLoader() is not being set therefore the connector's code implementation cannot rely on it and has to use the class loader that loaded the resolver class.  It should do it as   that sets the context class loader correctly.",Bug,Major,Closed,"2018-03-09 19:35:18","2018-03-09 19:35:18",3
Mule,"Minor performance improvements","Some minor improvements on CPU usage based on the snapshot for the HTTP requester cases.","Enhancement Request","To be reviewed",Closed,"2018-03-09 18:19:45","2018-03-09 18:19:45",2
Mule,"OAuth Connections doesn't work with the default resourceOwnerId","*OAuth Connections doesn't work with the default resourceOwnerId*    When doing the OAuth2 dance without specifying a *resourceOwnerId* the connector fails when trying to consume the generated token.    This is caused because when no specifying the *resourceOwnerId* the SDK saves the generated token with an empty string as the ID, but when looks for it, uses the *default* id.",Bug,Blocker,Resolved,"2018-03-09 15:03:33","2018-03-09 15:03:33",3
Mule,"Use retry with backoff when moving from CPU-LITE to BLOCKING tread pool and pool is busy.","When running on a limited number of threads but the source is configured in such a way that the flow is easily overload retries performed by ProactorStreamProcessingStrategy when moving from CPU-LITE to BLOCKING tread pool fail (and log) repeatedly until IO pool has the room available.  Avoid this by using a backoff strategy. ",Task,Major,Done,"2018-03-09 12:12:50","2018-03-09 12:12:50",4
Mule,"Expiration of an ObjectStore doesn't run if there is another one running","When 2 ObjectStore expirations are triggered near in time, the second one to be triggered is skipped and a warning is logged.    In that case, both expirations should run in parallel.",Bug,"To be reviewed",Closed,"2018-03-08 20:54:35","2018-03-08 20:54:35",1
Mule,"Add AWS IddleConnectionReaper cleanup to DefaultResourceReleaser","Add AWS IddleConnectionReaper cleanup to DefaultResourceReleaser",Task,Blocker,Done,"2018-03-08 20:22:01","2018-03-08 20:22:01",5
Mule,"Mime Type Disappears Dissapears in VM inbound when under load","DataType of the message is lost when messages are batch in a VM inbound endpoint.",Bug,"To be reviewed",Closed,"2018-03-08 17:49:47","2018-03-08 17:49:47",0
Mule,"Returned stream is closed when using pooled connections","When an operation returns an InputStream which depends on an open connection, the SDK will close that connection by default. That means that for the stream to keep open for the rest of the flow, the user must manually implement certain design patterns like:    * Manually obtaining a new connection that is bundled into a custom input stream (e.g: FTP connector)  * Use a cached connection provider which returns a client, which in turn knows how to obtain the connection (e.g: HTtp connector)    This problem has already been solved for the case of auto paging operations (e.g: db:select), we need to extrapolate the same solution to the InputStream case. Something to consider is that in the InputStream case, a corner case exists which doesn't on the auto paging one. That case is that the operation might end up returning a stream which is NOT associated with the connection (e.g: EDI Connectors which first writes to a temp file and then streams from it)",Bug,Major,Closed,"2018-03-08 14:02:34","2018-03-08 14:02:34",0
Mule,"Aggregators module README.md suggests a dependency with no classifier","The README.md of the aggregators modules is telling users that in order to add it to a project the can just add the dependency:        When it should be:  ",Bug,"To be reviewed",Resolved,"2018-03-07 19:54:33","2018-03-07 19:54:33",2
Mule,"Need a way to specify differnet defualts for the primaryNodeOnly parameter","By default, the primaryNodeOnly parameter defaults to false, which makes sense most of the times. However, some cases like the jms:listener need to default to true. We need a way to enable this.","Enhancement Request",Critical,Closed,"2018-03-06 19:51:39","2018-03-06 19:51:39",5
Mule,"Cannot destroy thread groups that have commons-pool evictor threads","BaseGenericObjectPool#evictor is started but never stopped.",Bug,"To be reviewed",Resolved,"2018-03-06 16:49:22","2018-03-06 16:49:22",4
Mule,"Add the configuration changes needed to upload the CE artifacts to Maven Central","Add the configuration changes needed to upload the CE artifacts to Maven Central",Task,Critical,Done,"2018-03-02 20:16:30","2018-03-02 20:16:30",2
Mule,"IllegalStateException when disposing application after initialise phase failed","Using Mule 4.1 when the HTTP Listener is starting, but the designed port is not avaible, the listener fails and makes the application start to dispose, but when disposing Mule throws {{Caused by: java.lang.IllegalStateException: Lifecycle Manager 'org.mule.Registry.Spring' phase 'initialise' does not support phase 'stop'}}    ",Bug,Major,Resolved,"2018-03-02 18:41:00","2018-03-02 18:41:00",4
Mule,"Fix SFTPAutoDeleteTestCase","For fixing the test we need to add a prober that checks more than once that the the file was deleted from the SFTP server.",Task,"To be reviewed",Done,"2018-03-02 18:05:54","2018-03-02 18:05:54",2
Mule,"Update reactor to 3.2.0 M4","Update reactor to 3.2.0.    Track progress towards the release here: [https://github.com/reactor/reactor-core/milestone/18]     ",Task,"To be reviewed",Done,"2018-03-02 15:04:26","2018-03-02 15:04:26",4
Mule,"Race condition in reactor causes premature thread interruption resulting in empty payload with repeatable streaming with no error thrown/logged.","See: https://github.com/reactor/reactor-core/issues/1107    We have seen this issue in scenarios where a flow uses:  - A scope.  - HTTP requester in the scope.    The symptom seen is that, due to premature interrupt, the HTTP response is not read and instead a Message with an empty payload is propagated in the flow.    This happens silently because the ClosedChannelException that is thrown by the channel is caught and handled returning -1 in AbstractInputStreamBuffer#consumeStream, rather than failing or even logging an error.      ",Bug,Blocker,Resolved,"2018-03-02 12:04:19","2018-03-02 12:04:19",4
Mule,"Archetype not using connector name in the generated packages","Archetype not using connector name in the generated packages.    today is generating this `org.mule.extension.internal` and it should be something  like this `org.mule.extension.<nombredelconector>.internal`    :B","Enhancement Request",Blocker,Resolved,"2018-03-01 19:07:56","2018-03-01 19:07:56",3
Mule,"Fix in the MavenTestUtils to work in Windows for the distributions tests","The method runMavenGoal in the class MavenTestUtils throws this exception when trying to run the tests in Windows.  ",Task,"To be reviewed",Done,"2018-03-01 01:58:50","2018-03-01 01:58:50",2
Mule,"Too many ThreadGroup instances leaked after redeploys","Hundreds of ThreadGroup instances are alive after multiple redeploys    Heapdump:  https://drive.google.com/open?id=1TBC-oCA19OpXRbpHoyYlzhI4x_thM8F5    ",Bug,Critical,Resolved,"2018-02-28 22:07:46","2018-02-28 22:07:46",4
Mule,"Implement IBM MQ Connector - Phase 1","Implement phase 1 of IBM MQ based on the initial spec",Story,Critical,Done,"2018-02-28 19:09:42","2018-02-28 19:09:42",13
Mule,"SDK Docs: Advanced parameter handling","* StereoTypes  * Config Overrides",Task,"To be reviewed",Done,"2018-02-28 18:58:19","2018-02-28 18:58:19",5
Mule,"Migration guide for message properties","Migration guide for message properties. Explain the different use cases of message properties in mule 3 and how they are fulfilled in Mule 4.",Task,"To be reviewed",Done,"2018-02-28 15:54:20","2018-02-28 15:54:20",4
Mule,"Migration guide for transformers","Migration guide for transformers. Explain why transformers are no longer needed. How to workaround issues and also consider pointing to the SDK documentation for transformers.",Task,Critical,Done,"2018-02-28 15:50:58","2018-02-28 15:50:58",2
Mule,"Initial Mule 4 architecture documentation / TB splitted","Initial Mule 4 architecture documentation / TB splitted    * Define mechanism to document architecture  * Main Mule Runtime components diagrams  * Main Mule Runtime activity diagrams  * Some other stuff",Task,Blocker,Done,"2018-02-28 14:56:27","2018-02-28 14:56:27",16
Mule,"FlowStack is not working with SmartConnectors","Smart Connectors are not working correctly with flowStack. When having a simple application that uses an SmartConnector that fails the flowStack is not getting the stack entry for module's operation (SmartConnector):    The application configuration has the following flow:  ",Bug,Major,Closed,"2018-02-27 18:30:14","2018-02-27 18:30:14",4
Mule,"HTTP Service should support Java network properties to allow the usage of proxies during design time","The following system properties should be considered by the HTTP Service from Mule in order to allow using proxies during design time:  https://docs.oracle.com/javase/7/docs/api/java/net/doc-files/net-properties.html#Proxies    AHC-Grizzly used by the HTTP Service already supports them:  https://github.com/javaee/grizzly-ahc/blob/master/src/main/java/com/ning/http/client/AsyncHttpClientConfig.java#L858    It is not clear to me how the authentication is supported as there is another way to handle them in Java:    http.proxyUser and http.proxyPassword are ignored.",Bug,Major,Resolved,"2018-02-27 17:15:15","2018-02-27 17:15:15",4
Mule,"Review documentation for error handling - missing parts","Review error handling documentation. Complete missing parts. At least the global error handling reference from the <configuration> element is missing.",Task,Critical,Done,"2018-02-27 13:15:40","2018-02-27 13:15:40",4
Mule,"SchedulingStrategy and ObjectStore are not declared as imported types","Infrastructure types, or types that are provided by Mule, should also be declared as imported types by the consuming extensions.",Bug,Blocker,Resolved,"2018-02-27 11:54:07","2018-02-27 11:54:07",8
Mule,"Various variable scoping errors between Operation Policies, Source Policies and Flow's error handlers","While fixing MULE-14414 I found out that variables set in the on error propagate of a policy operation, then it would be accesible from the flow's on error continue/propagate.    Just in case, the error wasn't introduced by the fix in MULE-14414.   I added a test in mule-ee:  (ignored)    (Edit)  While looking through this issue, I found many variable scoping issues:   - Flow variables that were visible in operation policies and source policies' error handlers  - operation policies and source policies' variables that were visible in the flow's error handler  - Operation policies' error handler variables that were visible in the flow's error handler   - Operation Policies' variables that weren't visible to source policies' error handler  Some more issues similar to the described above.   ",Bug,Major,Resolved,"2018-02-26 19:51:59","2018-02-26 19:51:59",8
Mule,"Migrate oauth2 provider to mule 4","Migrate oauth2 provider to mule 4",Task,Critical,Done,"2018-02-26 18:28:35","2018-02-26 18:28:35",16
Mule,"Documentation for Logger in Mule 4","We need to update the logger documentation based on the changes we've done for Mule 4.",Task,Critical,Done,"2018-02-26 18:26:05","2018-02-26 18:26:05",4
Mule,"HTTP Connector is not including in its type catalog the declaration for Origin type","The extension DTO for org.mule.connectors:mule-http-connector:1.1.0 does not include in its types and entry for Origin which used to declare subTypes:    This is not allowing Tooling to get associate these subTypes to an extension, therefore it is not going to be rendered.  ",Bug,Blocker,Resolved,"2018-02-23 21:17:00","2018-02-23 21:17:00",5
Mule,"Upgrade Spring JMS to 5.0.4 release.","Spring JMS 5.0.4.RELEASE contains some bug fixes, including [this|https://jira.spring.io/browse/SPR-16353] that solves a memory leak caused by temporary queues caching. ",Task,"To be reviewed",Done,"2018-02-23 14:38:25","2018-02-23 14:38:25",0
Mule,"WSC: Invalid property name on class java.lang.String.","WSC: Invalid property name on class java.lang.String.",Bug,Blocker,Resolved,"2018-02-22 21:21:02","2018-02-22 21:21:02",3
Mule,"DefaultConfigurationPropertiesProvider cannot load resources from absolute path","If the file to be loaded (e.g. in the secure configuration properties) is configured to be from an absolute path, the DefaultConfigurationPropertiesProvider cannot find the file. ",Bug,Minor,Closed,"2018-02-22 14:57:46","2018-02-22 14:57:46",2
Mule,"SDK should log when trying to reconnect a connection for an operation","*SDK should log when trying to reconnect a connection for an operation*    * Nowadays when a Source stops and request for a working connection this is logged:    communicating that a reconnection is being done.    The problem comes that when this is done for an operation, nothing is being logged.    ","Enhancement Request",Major,Closed,"2018-02-22 13:57:42","2018-02-22 13:57:42",3
Mule,"Extension Loader load incorrectly generic types.","*AST Extension Loader fails to find the connection type for DynamoDB Connector*    * The AST Loader is lost when walking between generics in the hierarchy of Connection Providers that the connector provides.  * Find and fix it /shrug    ===========    Update: Also happens when the following thing :     {{SomeListener extends AbstractListener<AttributesType>}}    {{AbstractListener<T extends SomeAttributes> extends Source<Object, T>}}",Bug,Critical,Closed,"2018-02-21 17:01:47","2018-02-21 17:01:47",5
Mule,"Eclipse AST Implementation fails when doing a Erasure to a NoType ","*Eclipse AST Implementation fails when doing a Erasure to a NoType*    * When doing a {{Types.erasure(<NoTypeInstance>)}} fails in Eclipse AST version because internally tries to cast the {{NoType}} to a certain {{TypeMirror}} implementation, which is wrong.  * This is an Eclipse Bug, but due that is not going to be fixed anytime soon, we should workaround the bug from our side.  ",Bug,Blocker,Open,"2018-02-21 16:49:19","2018-02-21 16:49:19",5
Mule,"StreamingHelper doesn't support TypedValue properties","*StreamingHelper doesn't support TypedValue properties*    When processing a Map containing InputStreams wrapped in TypedValues the StreamingHelper doesn't consider these cases and doesn't generate a Repeteable stream of it.",Bug,Major,Resolved,"2018-02-20 21:30:36","2018-02-20 21:30:36",2
Mule,"DB Connector returns Clob objects instead of InputStreams","*DB Connector returns a Clob object instead of returning an InputStream*    * DB Connector when doing a SELECT to a Table which contains Clob values, nowadays the raw Clobs are returned to the flow and those are unhandables using DW.",Bug,Blocker,Resolved,"2018-02-20 20:29:41","2018-02-20 20:29:41",5
Mule,"Add the java.home and java.vm.name of the JDK used by mule in the splash log ","It would be nice to show not only the version like today:    But also the vendor or at least the path of the JDK used by mule    something like this:  ","Enhancement Request","To be reviewed",Closed,"2018-02-20 17:36:46","2018-02-20 17:36:46",2
Mule,"When deploying a domain with a different file name than its coordinates, apps referencing it can't start","Steps to reproduce:   # Build an app referencing a domain   # Rename the domain jar file to whatever.jar   # Deploy the domain   # Deploy the app    Actual: the app will fail stating that the domain is not deployed.    As a user I'd expect that, since the relationship between the application and the domain is through a maven dependency, the runtime would be able to manage it regardless of the filename of the deployed artifact.",Bug,Major,Resolved,"2018-02-16 20:29:04","2018-02-16 20:29:04",8
Mule,"Email connector doesn't work with IMAP gmail OOTB","Email connector doesn't work with IMAP gmail OOTB",Bug,Critical,Resolved,"2018-02-15 23:46:22","2018-02-15 23:46:22",2
Mule,"Spike on SSE for Mule 3","Spike on being able to listen for SSE events. Requester not necessary but welcomed if easy",Task,Major,Done,"2018-02-14 21:53:17","2018-02-14 21:53:17",16
Mule,"Expression Regex fails on detect expression when this have an unbalanced opening bracket","The following expression is not considered as a one:         \{\{#['[']}}    *(This is just a reduced expression, but happens with any expression that contains a closing bracket in some place of the expression)*    Considering the value as non-expression makes the value be considered as String, with all that this entails.    The problem is inside -> {{org.mule.runtime.core.privileged.util.TemplateParser}}    ----------    The original expression:    This is a big problem because:   # The user doesn't have a workaround.   # The user won't know why the expression doesn't get evaluated   # In this particular case is worse because of: https://www.mulesoft.org/jira/browse/MULE-14560     ",Bug,Critical,Resolved,"2018-02-14 21:12:25","2018-02-14 21:12:25",8
Mule,"Make the generated connector documentation compliant with the Mulesoft Docs renderer.","Make the generated connector documentation compliant with the Mulesoft Docs renderer.    Here is a list of typos and fixes required to make the generated docs compliant with the asciidoc renderer used in our docs web page.     https://docs.google.com/spreadsheets/d/11idVtarnmRbBqw4EOLawrUqojNYAOsFCiLCbMHPHmV8    We should fix/review all the entries",Bug,Critical,Closed,"2018-02-14 19:28:01","2018-02-14 19:28:01",8
Mule,"Mule Extension Archetype is not Camel Casing Extension Name for Classes","When an extension module is generated using mule-extension-archetype, extension name is not camel cased while generated classes.     Example command -     mvn archetype:generate -DarchetypeCatalog=http://repository.mulesoft.org/releases/ -DarchetypeGroupId=org.mule.extensions -DarchetypeArtifactId=mule-extensions-archetype -DarchetypeVersion=1.1.0 -DgroupId=com.javastreets -DartifactId=mule-modules-zip5 -Dpackage=com.javastreets -Dversion=0.0.1-SNAPSHOT *-DextensionName=zip5* -DextensionNameNoSpaces=zip5         Generated Classed -     mule-modules-zip5  ├── README.md  ├── pom.xml  └── src   ├── main   │   ├── java   │   │   └── com   │   │   └── javastreets   │   │              └── internal   │   │                       ├── zip5Configuration.java   │   │                       ├── zip5Connection.java   │   │                       ├── zip5ConnectionProvider.java   │   │                       ├── zip5Extension.java   │   │             └── zip5Operations.java   │   └── resources   └── test             ├── java   │                       └── com   │                                 └── javastreets   │                                           └── zip5OperationsTestCase.java   └── resources             └── test-mule-config.xml    This is NOT the behavior when modules are generated using plugin -  mvn org.mule.extensions:mule-extensions-archetype-maven-plugin:generate    with extension name as zip3, Class Names generated are -      │   │                      └── internal      │   │                           ├── Zip3Configuration.java      │   │                           ├── Zip3Connection.java      │   │                           ├── Zip3ConnectionProvider.java      │   │                           ├── Zip3Extension.java      │   │                           └── Zip3Operations.java  ",Bug,"To be reviewed",Resolved,"2018-02-12 04:08:01","2018-02-12 04:08:01",3
Mule,"Unexpected extensionNameNoSpaces archetype parameter value","When creating a new extension using Archetype, an unexpected parameter `_extensionNameNoSpaces_` value is being asked by maven. It should actually be derived from already specified `_extensionName_` parameter. _Note: Module generation completes successfully._    +*Command Run -*+    _mvn archetype:generate -DarchetypeCatalog=http://repository.mulesoft.org/releases/ -DarchetypeGroupId=org.mule.extensions -DarchetypeArtifactId=mule-extensions-archetype -DarchetypeVersion=1.1.0 -DgroupId=com.javastreets -DartifactId=mule-modules-test2 -*DextensionName=test*_         _*Here is the output:*_    [INFO] Scanning for projects...  [INFO]  [INFO] ------------------------------------------------------------------------  [INFO] Building Maven Stub Project (No POM) 1  [INFO] ------------------------------------------------------------------------  [INFO]  [INFO] >>> maven-archetype-plugin:2.4:generate (default-cli) > generate-sources @ standalone-pom >>>  [INFO]  [INFO] <<< maven-archetype-plugin:2.4:generate (default-cli) < generate-sources @ standalone-pom <<<  [INFO]  [INFO]  [INFO] --- maven-archetype-plugin:2.4:generate (default-cli) @ standalone-pom ---  [INFO] Generating project in Interactive mode  [INFO] Archetype repository not defined. Using the one from [org.mule.extensions:mule-extensions-archetype:1.0.0 -> https://repository.mulesoft.org/nexus/content/repositories/releases] found in catalog http://repository.mulesoft.org/releases/  [INFO] Using property: groupId = com.javastreets  [INFO] Using property: artifactId = mule-modules-test2  [INFO] Using property: version = 1.0.0-SNAPSHOT  [INFO] Using property: package = org.mule.extension  [INFO] Using property: extensionName = test  Feb 11, 2018 10:23:07 PM org.apache.velocity.runtime.log.JdkLogChute log  INFO: FileResourceLoader : adding path '.'  Feb 11, 2018 10:23:07 PM org.apache.velocity.runtime.log.JdkLogChute log  {color:#ff0000}_*INFO: Null reference [template 'extensionNameNoSpaces', line 1, column 1] : $\{extensionName.replace(-,  ).replace( , ).replaceAll((?i)extension, ).replaceAll((?i)connector, ).trim()} cannot be resolved.*_{color}  {color:#ff0000}_*Define value for property 'extensionNameNoSpaces': $\{extensionName.replace(-,  ).replace( , ).replaceAll((?i)extension, ).replaceAll((?i)connector, ).trim()}: :*_{color}  {color:#ff0000}_*Confirm properties configuration:*_{color}  {color:#ff0000}_*groupId: com.javastreets*_{color}  {color:#ff0000}_*artifactId: mule-modules-test2*_{color}  {color:#ff0000}_*version: 1.0.0-SNAPSHOT*_{color}  {color:#ff0000}_*package: org.mule.extension*_{color}  {color:#ff0000}_*extensionName: test*_{color}  {color:#ff0000}_*extensionNameNoSpaces: $\{extensionName.replace(-,  ).replace( , ).replaceAll((?i)extension, ).replaceAll((?i)connector, ).trim()}*_{color}  {color:#ff0000} _*Y: :*_{color}  {color:#ff0000}_*[INFO] ----------------------------------------------------------------------------*_{color}  [INFO] Using following parameters for creating project from Archetype: mule-extensions-archetype:1.1.0  [INFO] ----------------------------------------------------------------------------  [INFO] Parameter: groupId, Value: com.javastreets  [INFO] Parameter: artifactId, Value: mule-modules-test2  [INFO] Parameter: version, Value: 1.0.0-SNAPSHOT  [INFO] Parameter: package, Value: org.mule.extension  [INFO] Parameter: packageInPathFormat, Value: org/mule/extension  [INFO] Parameter: package, Value: org.mule.extension  [INFO] Parameter: version, Value: 1.0.0-SNAPSHOT  [INFO] Parameter: groupId, Value: com.javastreets  [INFO] Parameter: extensionName, Value: test  [INFO] Parameter: extensionNameNoSpaces, Value: test  [INFO] Parameter: artifactId, Value: mule-modules-test2  [WARNING] Don't override file /Volumes/MM/codebase/mule/mule4/mule-modules-test2/src/main/java/org/mule/extension  [WARNING] Don't override file /Volumes/MM/codebase/mule/mule4/mule-modules-test2/src/test/java/org/mule/extension  [WARNING] Don't override file /Volumes/MM/codebase/mule/mule4/mule-modules-test2/src/test/resources  [INFO] project created from Archetype in dir: /Volumes/MM/codebase/mule/mule4/mule-modules-test2  [INFO] ------------------------------------------------------------------------  [INFO] BUILD SUCCESS  [INFO] ------------------------------------------------------------------------  [INFO] Total time: 9.094 s  [INFO] Finished at: 2018-02-11T22:23:15-05:00  [INFO] Final Memory: 21M/314M  [INFO] ------------------------------------------------------------------------              _*Maven Envrionment -*_     _*mvn -version*_  _*Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T03:58:13-04:00)*_  _*Maven home: /Users/<USER>.sdkman/candidates/maven/current*_  _*Java version: 1.8.0_161, vendor: Oracle Corporation*_  _*Java home: /Users/<USER>.sdkman/candidates/java/8u161-oracle/jre*_  _*Default locale: en_US, platform encoding: UTF-8*_  _*OS name: mac os x, version: 10.13.3, arch: x86_64, family: mac*_",Bug,"To be reviewed",Resolved,"2018-02-12 03:30:41","2018-02-12 03:30:41",3
Mule,"Make HTTP service configuration builders API consistent","HttpClientConfiguration exposes a public Builder object instead of featuring a builder() method as the HttpRequest and other mule components do. We need to provide a consistent experience when using the service.","Enhancement Request",Minor,Open,"2018-02-10 03:21:09","2018-02-10 03:21:09",4
Mule,"ExpressionExecutionException when element that expects a DW starts with space","In Smart connectors, when defining an operation with an input with role=CONTENT and trying to invoke that operation from an app then:    Following XML config is working      Following, is not:      It fails in runtime with the following error:  ",Bug,Critical,Resolved,"2018-02-09 09:26:53","2018-02-09 09:26:53",4
Mule,"Scripting module not showing script types on Studio","Script types not being shown in Studio dropdown",Bug,"To be reviewed",Closed,"2018-02-08 20:33:38","2018-02-08 20:33:38",1
Mule,"Document raise-error component","We need to document how the component works and the use cases.",Task,"To be reviewed",Done,"2018-02-08 19:05:51","2018-02-08 19:05:51",2
Mule,"Fix FtpRedeliveryPolicyTestCase","FtpRedeliveryPolicyTestCase is flaky in 3.x.  We should add a prober that checks the non-existence of a file after being sent to a dead queue.",Task,"To be reviewed",Done,"2018-02-05 19:11:22","2018-02-05 19:11:22",2
Mule,"ThrottlingScheduler active tasks count breaks when tasks are cancelled.","ThrottlingScheduler active tasks count breaks when tasks are cancelled.",Bug,"To be reviewed",Resolved,"2018-02-04 12:56:33","2018-02-04 12:56:33",1
Mule,"Properly handle InterruptedException in blocking processors api","On MessageProcessors#processToApply, when an InterruptedException is thrown, it is not properly handled. It must set the interrupted flag on the thread.",Bug,"To be reviewed",Resolved,"2018-02-02 18:02:44","2018-02-02 18:02:44",2
Mule,"Error has no string representation","When one tries to log the error to see what happen, you get the default object toString. ",Bug,"To be reviewed",Closed,"2018-02-01 18:25:42","2018-02-01 18:25:42",1
Mule,"Reduce level of log for RejectedExecutionExceptions that occur when shutdown timeout is exceeded.","Reduce level of log for RejectedExecutionExceptions that occur when shutdown timeout is exceeded.",Bug,Major,Resolved,"2018-02-01 17:05:42","2018-02-01 17:05:42",1
Mule,"Processing strategy is stopped before processors","Processing strategy is stopped before processors. This can be an issue if running processors need to use one of the schedulers created by the processing strategy.",Bug,Critical,Resolved,"2018-02-01 14:41:21","2018-02-01 14:41:21",2
Mule,"Delayed task is triggered when target scheduler is busy is lost","This happens when using the Scheduler#schedule method and the scheduler is busy at the trigger time.    The task must be run when a thread in the scheduler is available instead of being lost.",Bug,"To be reviewed",Resolved,"2018-02-01 13:25:21","2018-02-01 13:25:21",2
Mule,"Improve flaky until successful test cases","org.mule.test.core.NonBlockingFunctionalTestCase.untilSuccessfulWithRetryExceptionAfter  org.mule.test.routing.UntilSuccessfulTestCase.executeSynchronously",Task,Major,Done,"2018-01-31 21:35:35","2018-01-31 21:35:35",1
Mule,"Scheduler#scheduleAtFixedRate cancels task if triggered while previous is still running","When Scheduler#scheduleAtFixedRate is called on a Custom Scheduler with maxConcurrentTasks=1 or a pool with just 1 thread and a SynchronousQueue,         if a tasks takes longer than the rate, the next one is rejected, but then no more tasks are triggered.    Any subsequent tasks must be triggered normally after a rejection.",Bug,"To be reviewed",Resolved,"2018-01-31 18:48:27","2018-01-31 18:48:27",2
Mule,"Review ApplicationDescriptor's logConfigFile","Mule 3 allows users to configure a log configuration file by setting the     log.configFile property in the mule-deploy.properties file.    Mule 4 has logConfigFile as a field in the ApplicationDescriptor and there is still logic to process that value, but that field is never set and the mule-artifact.json descriptor does not have a way to configure it neither.    This tasks is to review whether or not the functionality is still required and to enable configuration of it or to remove the dead code",Task,Major,New,"2018-01-31 15:52:03","2018-01-31 15:52:03",4
Mule,"Ensure that exported resources in artifact descriptor always use linux file separator","Mule artifact descriptor (mule-artifact.json) contains the list of artifact's resources that are exported. These resource path's must be declared using Linux file separator.    As the descriptor can be manually edited, instead of just failing when the resources are not correctly written, the runtime can convert them to the expected format. ","Enhancement Request",Major,Resolved,"2018-01-31 15:43:58","2018-01-31 15:43:58",2
Mule,"Reduce objects allocation in order to reduce CG overhead","Based on the latests snapshots provided by the perfromance team, a good start would be MediaType and logger contexts.","Enhancement Request","To be reviewed",Resolved,"2018-01-31 15:36:44","2018-01-31 15:36:44",4
Mule,"Use a CG free thread context implementation for logging",https://logging.apache.org/log4j/2.x/manual/garbagefree.html,"Enhancement Request","To be reviewed",Resolved,"2018-01-30 19:58:17","2018-01-30 19:58:17",2
Mule,"Load static REMOTELY_CLOSED_EXCEPTION","Load REMOTELY_CLOSED_EXCEPTION using service classloader",Task,Major,Done,"2018-01-30 17:41:05","2018-01-30 17:41:05",3
Mule,"Use Publisher<Buffer> instead of InputStream for streaming payloads","Use Publisher<Buffer> instead of InputStream for non-blocking streaming of payloads in Mule using cpuLight threads instead of performing blocking reads using IO pool.    This depends on:  - Connector support, at a minimum HTTP.  - DW support  - Implementation of InputStream/Publisher transformers to continue support InputStream.","Enhancement Request",Major,Open,"2018-01-30 14:12:32","2018-01-30 14:12:32",32
Mule,"Expressions containing a opening bracket are not considered as a expression","The following expression is not considered as a one:         \{\{#['[']}}    *(This is just a reduced expression, but happens with any expression that contains a closing bracket in some place of the expression)*    Considering the value as non-expression makes the value be considered as String, with all that this entails.    ----------    The original expression:    This is a big problem because:   # The user doesn't have a workaround.   # The user won't know why the expression doesn't get evaluated   # In this particular case is worse because of: https://www.mulesoft.org/jira/browse/MULE-14560     ",Bug,Blocker,Closed,"2018-01-28 22:19:46","2018-01-28 22:19:46",5
Mule,"Not understandable exception is thrown when a transformation fails over a String with '%d'","If a transformation of a {{String}} value with a {{%d}} value fails, (like the header of DW: {{%dw 2.0}} ) makes the creation of the transformation exception fail. This could be reproduced because of: https://www.mulesoft.org/jira/browse/MULE-14561.  ",Bug,Critical,Resolved,"2018-01-28 21:05:28","2018-01-28 21:05:28",2
Mule,"Unclear error with missing parameter in scheduler configuration","In scheduler-pools.conf commented the line for org.mule.runtime.scheduler.io.workQueue.size. After restarting the runtime it fails to start successfully with an unclear error message. Adding -Dmule.verbose.exceptions=true will point that the error is related to scheduler configuration.    The expected result should be that there is an error indicating which parameter is invalid or undefined.",Bug,"To be reviewed",Resolved,"2018-01-26 21:18:30","2018-01-26 21:18:30",1
Mule,"When a Service/CoreExtension start fails, not started objects are tried to stop","Say there are 2 services, A and B to be started (code in MuleServiceManager). A start fails, then MuleServiceManager tries to stop both A and B. Since B hasn't been started, ith shouldn't be stopped.    This may also be happening with Core Extensions and Server Plugins",Bug,"To be reviewed",Resolved,"2018-01-26 21:18:04","2018-01-26 21:18:04",4
Mule,"Add Icons in all the extensions","None of the actual connectors packages their connectors inside the mule plugin, start doing this.",Task,Critical,Done,"2018-01-26 21:13:32","2018-01-26 21:13:32",3
Mule,"When hot deploying an invalid domain configuration, DeploymentService is answering corrupt MuleApplications","Steps to reproduce (using Studio, which polls the agent on the /mule/applications endpoint):   # Create an application and a domain, link the application to the domain (in project preferences)   # Run the application   # Once everything is deployed, make a change in the domain configuration XML which would result in a parsing error (this will get copied to the running application in mule)     * On the console, the following exception will appear (repeated every 200ms, due to the polling from Studio on the agent)      Apparently, the exception would originate from the DeploymentService returning an Application object with a null domain under these circumstances.",Bug,Major,Resolved,"2018-01-26 20:46:41","2018-01-26 20:46:41",4
Mule,"TypeWrapper should not load class until needed","Performance changes made by MULE-14495 introduced a dependency to the classes that breaks ToolingServices as the provided dependencies by users need to be on classpath now.  ",Bug,Critical,Resolved,"2018-01-26 19:59:42","2018-01-26 19:59:42",2
Mule,"Allow to override the location of the scheduler config file via system property","do it","Enhancement Request","To be reviewed",Resolved,"2018-01-26 19:20:42","2018-01-26 19:20:42",1
Mule,"Provide a singleton MultiMap instance","This is in order to avoid the creation of empty maps everywhere just to pass an empty map.","Enhancement Request","To be reviewed",Resolved,"2018-01-25 19:39:40","2018-01-25 19:39:40",2
Mule,"Use an independent lock to synchronize the lifecycle of the MuleContext","This is a part that was done as part of MULE-13000 in mule 4.",Bug,"To be reviewed",Closed,"2018-01-25 16:10:10","2018-01-25 16:10:10",0
Mule,"Upgrade Jackson to 2.9.4","Upgrade Jackson to 2.9.4",Task,Blocker,Done,"2018-01-24 13:43:35","2018-01-24 13:43:35",4
Mule,"Extension's processor plugin configuration doesn't consider generated sources","Extension's processor plugin configuration doesn't consider generated sources",Bug,Blocker,Closed,"2018-01-23 20:31:48","2018-01-23 20:31:48",1
Mule,"Implement use of EmitterProcessor in processing strategy","Implement Processing Strategy that uses EmitterProcessor after the analysis done in MULE-16167    In mule 4.2 make it the default Processing Strategy.   In mule 4.1 add the strategy",Task,Major,Done,"2018-01-23 18:24:30","2018-01-23 18:24:30",4
Mule,"Optimize ProactorProcessingStrategy to avoid scheduling Transformers to IO if payload is small","Optimize ProactorProcessingStrategy to avoid scheduling Transformers to IO if payload is small",Task,Major,Done,"2018-01-22 20:03:52","2018-01-22 20:03:52",4
Mule,"Optimize to avoid contention in emission of event to flow","Remove contention in emission of event to flow",Bug,Critical,Resolved,"2018-01-22 20:02:38","2018-01-22 20:02:38",2
Mule,"Schedulers don't indicate which one is exhausted","When a scheduler is exhausted, a RejectedExecutionException is thrown which results in an OVERLOAD error being raised and logged by the CRITICAL handler. This provides information on the error and it's location yet it says nothing about which scheduler has failed to schedule work, making it difficult to asses at once what could be wrong.",Bug,"To be reviewed",Resolved,"2018-01-22 17:45:00","2018-01-22 17:45:00",2
Mule,"Revert MULE-14426 since there is missing functionality","Feature done by MULE-14426 is not complete. This issue is to revert those changes and validate that is feasible to implement that feature outside the core runtime.",Task,Blocker,Done,"2018-01-22 15:53:11","2018-01-22 15:53:11",4
Mule,"Update tests after MULE-14514","Update tests after MULE-14514",Task,"To be reviewed",New,"2018-01-22 14:58:12","2018-01-22 14:58:12",2
Mule,"Aggregators is exporting internal classes","Aggregators is not compiling because it's exporting ...routes package",Bug,Critical,Closed,"2018-01-22 14:01:29","2018-01-22 14:01:29",1
Mule,"HTTP: CaseInsensitiveMultiMap loses case insensitiveness after making it immutable","When using the result of calling toImmutableMultiMap on a CaseInsensitiveMultiMap, the returned MultiMap is not case insensitive.",Bug,"To be reviewed",Resolved,"2018-01-22 13:54:05","2018-01-22 13:54:05",1
Mule,"HTTP: Performance improvements in requester","Avoid multiple creations of the same headers map","Enhancement Request","To be reviewed",Resolved,"2018-01-21 01:41:51","2018-01-21 01:41:51",4
Mule,"Skip NullsafeWrapper at runtime if parameter defaults cannot be instantiated","Skip NullsafeWrapper at runtime if parameter defaults cannot be instantiated. The delegate will be used unwrapped.    This is necessary to keep backwards compatibility.",Task,Blocker,Done,"2018-01-20 23:30:19","2018-01-20 23:30:19",3
Mule,"NameClashValidator fail when function parameters clash with another name","If a Function has a Parameter which is a Pojo and it's name clashes with another TopLevelElement or ComponentName, the NameClashValidator will fail to validate the extension model.",Bug,"To be reviewed",Resolved,"2018-01-19 21:19:01","2018-01-19 21:19:01",1
Mule,"Update processing strategy subscriber count based on performance testing","Update processing strategy subscriber count based on performance testing",Task,Critical,Done,"2018-01-19 18:12:46","2018-01-19 18:12:46",1
Mule,"Add scripting module system test for various languages","Add system tests to cover a wider range of languages supported by the scripting module. We currently only have system tests using Groovy.",Bug,"To be reviewed",Resolved,"2018-01-19 14:50:05","2018-01-19 14:50:05",4
Mule,"StackOverflow when compiling an extension with recursive structures","When compiling an extension with recursive structures the build fails with a stack overflow error:  ",Bug,Blocker,Closed,"2018-01-19 14:07:00","2018-01-19 14:07:00",3
Mule,"Allows custom schedulers to use a `runInCaller` rejection policy","When the http requester receives data, it dispatches the work to cpuLite to continue exectuting. If the cpuLite pool is configured for a SynchronousQueue, when the cpuLite is full the work will be rejected mid-flow.    In order to avoid this, the scheduler should enable for the http requester selector to use a `runInCaller` policy, so the flow continues executing in the requester thread.","Enhancement Request","To be reviewed",Resolved,"2018-01-18 20:25:53","2018-01-18 20:25:53",4
Mule,"Extra host and port copies to get URI","The current implementation of GrizzlyRequestAdapter getUri method, though it caches the result to only calculate it once, accesses the host and port in a manner that makes Grizzly save those results. We could easily avoid that.",Bug,"To be reviewed",Resolved,"2018-01-18 20:17:04","2018-01-18 20:17:04",1
Mule,"Immutable transformations are chained in MultiMap","Since we cannot guarantee that a certain MultiMap is immutable, there are several places where we are forcing that transformation, to the point where it could turn into a chain of going through elements over and over when it's already been made immutable.",Bug,"To be reviewed",Resolved,"2018-01-18 19:51:50","2018-01-18 19:51:50",1
Mule,"Documentation for foreach in Mule 4","Documentation for foreach in Mule 4 with proper examples. Add a migration entry too.",Task,"To be reviewed",Done,"2018-01-18 16:40:51","2018-01-18 16:40:51",4
Mule,"Documentation for target and targetValue attributes in Mule 4","Documentation for target and targetValue attributes in Mule 4",Task,"To be reviewed",Done,"2018-01-18 16:03:39","2018-01-18 16:03:39",2
Mule,"Migration guide entry for enrichment in Mule 4","Migration guide entry for enrichment in Mule 4",Task,Blocker,Done,"2018-01-18 16:02:19","2018-01-18 16:02:19",2
Mule,"Migration guide entry for transports","Migration guide entry for transports",Task,Blocker,Done,"2018-01-18 16:00:18","2018-01-18 16:00:18",2
Mule,"Documentation for domains in Mule 4","Document how domains work in Mule 4. Also add an entry in the migration guide.",Task,"To be reviewed",Done,"2018-01-18 15:57:10","2018-01-18 15:57:10",4
Mule,"Documentation for transaction handling in Mule 4","Document how transaction handling works in Mule 4. Also add a section in the migration guide to explain how to migrate from Mule 3 to Mule 4",Task,"To be reviewed",Done,"2018-01-18 15:54:10","2018-01-18 15:54:10",4
Mule,"Synchronize start phases on final object","Synchronize start phases on final object",Bug,Critical,Resolved,"2018-01-17 19:58:10","2018-01-17 19:58:10",1
Mule,"Create the code that generates the model from the artifact configuration","Create the code that generates the model from the artifact configuration based on MULE-14489",Task,"To be reviewed",New,"2018-01-17 18:47:17","2018-01-17 18:47:17",32
Mule,"Define the most basic model for representing an artifact configuration","This is to come up with the most basic model that we can have for representing the configuration of an artifact in Mule.",Task,"To be reviewed",New,"2018-01-17 18:46:34","2018-01-17 18:46:34",32
Mule,"Implement logging infrastructure","This is to implement the outcome of MULE-14486",Task,"To be reviewed",New,"2018-01-17 18:35:41","2018-01-17 18:35:41",13
Mule,"Spike: Define proper logging infrastructure to use in the runtime","This is to define the proper mechanism for logging so we can enable/disable logging per feature instead of per class and provide also the possible options for logging in the artifact configuration specification.    It must support requirements from the monitoring document",Task,"To be reviewed",New,"2018-01-17 18:35:06","2018-01-17 18:35:06",8
Mule,"Add notifications for outbound and inbound data from external services","We need to provide notifications support OOTB for inbound and outbound operations. They must be typified and proper data related to the operation must be provided so they can be use for monitoring of the application.    This is just to implement the infrastructure so extensions can support this kind of notifications. Work on each connector must be done separately.",Task,"To be reviewed",New,"2018-01-17 18:26:50","2018-01-17 18:26:50",13
Mule,"Spike on supporting runtime configuration changes","Define how runtime configuration changes can be applied for every configuration part of the artifact.",Task,"To be reviewed",New,"2018-01-17 18:14:07","2018-01-17 18:14:07",8
Mule,"Spike on supporting deployment time configuration","See how deployment time configuration can be applied in a generic way to the artifact configuration so that it can be applied for any configuration part of the artifcat",Task,"To be reviewed",New,"2018-01-17 18:11:33","2018-01-17 18:11:33",8
Mule,"Define the artifacts parts that must be configurable","We need to define the different parts of the application that should be configurable by the user including those that can be modified at runtime at those that can only be configured at deployment time. Of course everything that can be configured at runtime MUST be configurable at deployment time.    For instance:  Runtime configuration:  * Log level  * Logging categories    Deployment configuration:  * Placeholders  * Certificates  * Timeouts  * Connectors connection provider configuration attributes  ",Task,"To be reviewed",New,"2018-01-17 18:08:50","2018-01-17 18:08:50",8
Mule,"Define the specification for defining configuration options for artifacts","A user, before being able to define the configuration of an artifact, it must be able to know which are the things that can be configure and get some context about it. Many times it's the devops task to actually manage and deploy artifacts on behalf of users.    The idea is to create an AMF vocabulary and define the whole specification for defining the configurable parts of an application.    This will be the source of the platform to show the user the possible configuration options. It must be generic enough so new configuration options can be added in the future.",Task,"To be reviewed",New,"2018-01-17 17:55:27","2018-01-17 17:55:27",13
Mule,"Make ParameterGroupObjectBuilder#fieldsCache shared","when different ParameterGroupObjectBuilder objects are build, each populates it's own fields cache, even if the class for which they are being requested is the same. This produces a performance penalty.","Enhancement Request","To be reviewed",Resolved,"2018-01-17 16:33:33","2018-01-17 16:33:33",2
Mule,"Nested flows/subflows not being initialized when executing tests on MUnit","Having a munit test that executes a flow containing nested flow references, fails due that those flows are not initialized.     ",Bug,Critical,Resolved,"2018-01-17 16:31:01","2018-01-17 16:31:01",2
Mule,"Add @NoImplement to ext-api interfaces","All the interfaces declared here:     https://github.com/mulesoft/mule-extensions-api/pull/543/commits/237f51f55ccce77b71c64d6fc55bc4f0afbdb877",Bug,Critical,Closed,"2018-01-17 15:39:17","2018-01-17 15:39:17",3
Mule,"Add the information about metadata category at the parameter model level","When a connector has several metadata categories, the API allows us to retrieve all keys associated with a config. The result is a Map<String,Set<MetadataKey>>.    But the fields marked as metadata keys do not have a property that allows us to determine the category associated with the key.    We need this information in order to retrieve the correct set of keys associated with an operation",Bug,Blocker,Closed,"2018-01-17 14:52:40","2018-01-17 14:52:40",3
Mule,"Add field in mule-artifact.json to declare configuration properties that must be secure","In Mule 3 it was possible to declare which properties must be handled as secure by the platform through a property in mule-app.properties (https://docs.mulesoft.com/runtime-manager/secure-application-properties).    We need a similar approach for Mule 4 in order to maintain the same functionality until we properly implement discovery of artifacts configuration at deployment time.",Task,Critical,Done,"2018-01-17 11:18:28","2018-01-17 11:18:28",2
Mule,"Avoid pattern matching for every notification fired","This will do pattern matching of this string for each and every notification created/fired. This has an impact on performance. If we do what to format string like this then it should only happen if argument is invalid.    {{    checkArgument(expectedDataType.isCompatibleWith(actualDataType),                    format(The action data type (%s) does not match the actual data type received (%s),                           expectedDataType,                           actualDataType));  }}",Bug,Major,Resolved,"2018-01-17 01:09:22","2018-01-17 01:09:22",1
Mule,"Implicit connection factory cannot find internal parameter group","After fixing the exports of HTTP, when trying to instantiate an implicit connection in HttpRequestUrlTestCase it fails because it attempts to load it's classes using the application class loader:  ",Bug,Blocker,Closed,"2018-01-16 22:50:35","2018-01-16 22:50:35",3
Mule,"Provide mechanism to trace a request as it goes through the policies chain.","It would be a great troubleshooting tool to have a logging level that once enabled allows to view the whole trip of a request as it goes through. For each request we would expect to see:   # Each policy it goes through. In source and operation.   # Outcome of each policy (allow or reject and reason)   ## It could be an extra to have enhanced logging on specific API processing. Step by step and outcome with details   # Final response    Each log message should be accompanied by a request ID in order to be able to trace a specific request as it goes through the policies chain in concurrency scenarios and it should log all information of the event, except for payload (AGW-1926 was created for payload logging).    This feature will allow us and our customers to troubleshoot what happens to a specific request. For example which policy is rejecting it and for which reason. Or to tell which policies have been applied to it and assert that was the original intention, just to name a couples examples.",Task,Major,Done,"2017-12-05 22:37:23","2017-12-05 22:37:23",5
Mule,"Make the SDK Validate extension's exported packages","Validate extensions exported packages","Enhancement Request",Major,Closed,"2018-01-16 20:48:59","2018-01-16 20:48:59",3
Mule,"parse-template should support nested DW expressions","Now, in order to have strings and expressions mixed in a parse-template processor we have to use DW interpolation.     We should allow templates to be strings with nested expressions. ",Task,Critical,Done,"2018-01-16 19:25:45","2018-01-16 19:25:45",4
Mule,"Fix ObjectStore schema generation ","Change:        to       And replace mule-core-common to be backwards compatble as:    global-abstract-object-store => allows top  abstract-object-store => allows top without extending global  abstract-private-object-store => does not allows top   ",Bug,Blocker,Closed,"2018-01-16 17:26:39","2018-01-16 17:26:39",3
Mule,"Upgrade MVEL to 2.1.9-MULE-015 version","Since some bugs were fixed, we need to update MVEL to latest version",Task,"To be reviewed",Done,"2018-01-16 16:57:48","2018-01-16 16:57:48",2
Mule,"transactional element not propagating flowConstruct","TransactionalInterceptingMessageProcessor must propagate the flowConstruct to the exception listener.",Bug,"To be reviewed",Resolved,"2018-01-16 16:41:15","2018-01-16 16:41:15",0
Mule,"Aggregators should follow sequence order","If the groupItemSequenceInfo of a GroupBasedAggregator has a sequence number, then elements should be ordered.",Bug,Blocker,Resolved,"2018-01-16 14:02:13","2018-01-16 14:02:13",4
Mule,"Use ObjectStore instead of String for Aggregators objectStore config","Now, the aggregators objectStore is being configured by asking the objectStoreManager for the inserted string. The SDK supports directly injecting the objectStore as an ObjectStore parameter and actually, that is the proper way to use it.",Task,Minor,Done,"2018-01-16 13:23:40","2018-01-16 13:23:40",2
Mule,"Message toString message features exceptionPayload and no data","The current toString method of the Message implementation features the exceptionPayload and only writes the type of each internal attribute. Not sure how useful this is considering people want to log it to check it out usually.",Bug,"To be reviewed",Resolved,"2018-01-15 20:07:58","2018-01-15 20:07:58",4
Mule,"When creating ApplicationModel and ComponentModels inner beans should have a name so they can be later retrieved","mule-aggregators-module added a new kind of reference, an aggregator listener can reference to an aggregator that is a source component.    This needed to be handled by LazyInit and DataSense in order to support it. At the same time the org.mule.runtime.config.internal.BeanDependencyResolver had to be patched to work on this case as whenever the code to resolve dependencies from ApplicationModel was also returning as bean name the aggregatorName (needed for LazyInit) but the aggregator which is a source is created as inner child bean with Spring therefore the name declared on the aggregator is not the name that goes to the Spring bean and it couldn't be retrieved later in order to set as dependency.",Task,Major,Done,"2018-01-15 17:47:24","2018-01-15 17:47:24",0
Mule,"Change default response streaming to false in HTTP service","This must be turned off until on par performance can be achieved with streaming since it will affect users of the HTTP client.",Task,Critical,Done,"2018-01-15 17:09:16","2018-01-15 17:09:16",1
Mule,"Aggregators module reviewed changes","Change things reviewed on the aggregators module.    Already fixed   - AggregatorAttributes -> AggregationAttributes      - groupId -> aggregationId     - first(last)ValueArrivalTime -> first(last)ItemArrivalTime    To be fixed   * Check if aggregation-complete and incremental-aggregation are good names for the routes. They should be consistent.","Enhancement Request",Minor,Closed,"2018-01-15 15:18:32","2018-01-15 15:18:32",4
Mule,"Aggregators not working ok with special scheduling configurations","When an eviction time is configured to be -1 (Remember group forever), the aggregator is still scheduling group eviction.   Also, when the eviction time is 0, it's scheduling eviction while it should do it immediately.",Bug,Blocker,Resolved,"2018-01-15 15:05:01","2018-01-15 15:05:01",4
Mule,"OAuth Module exports internal classes","Current exported pacakges:    ",Bug,Blocker,Resolved,"2018-01-14 17:38:38","2018-01-14 17:38:38",2
Mule,"VM Connector exports internal classes","Current Exported Packages:      Is required to review which class is used as API and making the entire package to be exported.",Bug,Blocker,Closed,"2018-01-14 17:28:23","2018-01-14 17:28:23",1
Mule,"Fix tests broken by DW error message changes","Some tests have broken because DW has changed it's error message to indicate possible bugs in the app, particularly for invalid expressions. Most of those tests were asserting against whole error messages instead of checking for the specific errors they caused.",Task,Major,Done,"2018-01-14 15:35:11","2018-01-14 15:35:11",2
Mule,"Make polling schedulers take into account the flow's maxConcurrency","Currently, a polling scheduler only triggers a new task if any previously triggered ones have already finished.    However, the flow may have a {{maxConcurrency}} attribute configured to a value greater than 1, and in such case the behavior is no what the user would expect.","Enhancement Request","To be reviewed",Open,"2018-01-12 17:45:01","2018-01-12 17:45:01",8
Mule,"Exported packages are not communicated when loading an extension with the AST Loader","*Exported packages are not communicated when loading an extension with the AST Loader*    * The exported packages information that is communicated through the {{mule-artifact.json}}, is based on classes this makes to not populate this information when loading an extension with the AST Loader.  * Not exposing this information will make the extension fail at runtime due that some classes won't be exposed.",Bug,Blocker,Closed,"2018-01-12 17:10:31","2018-01-12 17:10:31",5
Mule,"Make extensions parent pom use the AST Extension Loader","Change the extensions parent pom to make they start using the AST based extension loader.",Task,Blocker,Done,"2018-01-12 15:20:26","2018-01-12 15:20:26",1
Mule,"Policies: HTTP Requester status code validator doesn't log processor location","When an http requester sends a request and receives an error status, the logged error is:        Note that the {{Element}} and {{Element XML}} entires show {{(None)}} instead of the location of the requester operation.",Bug,"To be reviewed",Resolved,"2018-01-12 13:29:47","2018-01-12 13:29:47",2
Mule,"Replace usages of EqualsBuilder#reflectionEquals","org.apache.commons.lang3.builder.EqualsBuilder#reflectionEquals(java.lang.Object, java.lang.Object, java.lang.String...) has many usages today. Though these don't seem to affect runtime performance for now benchmark testing has validated that the difference is extreme compared to an explicit custom equals. Same may apply to reflectionHashCode.  ",Task,Blocker,Done,"2018-01-11 21:47:32","2018-01-11 21:47:32",3
Mule,"Transformers should use IO pool if they may read or write a stream","Transformers should use IO pool if they may read or write a stream",Bug,Critical,Resolved,"2018-01-11 20:41:55","2018-01-11 20:41:55",1
Mule,"When policies are applied they are shown as applications","When a policy is applied to an application it shows:    **********************************************************************  * Application: ip-blacklist-81403-proxy                              *  * OS encoding: UTF-8, Mule encoding: UTF-8                           *  *                                                                    *  **********************************************************************    It would be great if:  *  when the server starts, it shows the app and the list of policies applied to it  * when a new policy is applied to a running app, the app is shown with the list of policies applied to it.",Bug,Minor,Resolved,"2017-11-03 18:35:12","2017-11-03 18:35:12",2
Mule,"Compilation should not fail for Scopes and Routers Object output","Compilation should not fail for Scopes and Routers Object output",Bug,Major,Closed,"2018-01-11 19:15:25","2018-01-11 19:15:25",1
Mule,"Add secure configuration properties for 4.x","Implement secure-configuration-properties, analog to configuration-properties but encrypted.",Task,Major,Done,"2018-01-11 18:31:46","2018-01-11 18:31:46",2
Mule,"Refactor aggregators-extension to propagate variables","Aggregators are note able to propagate variables set by <set-variables> from an route. That should be possible. ",Task,Blocker,Done,"2018-01-11 14:16:59","2018-01-11 14:16:59",8
Mule,"Add aggregators-moduel as privileged extension","Need this to properly propagate variables set inside an aggregator route",Task,Blocker,Done,"2018-01-11 14:12:55","2018-01-11 14:12:55",2
Mule,"Improve how the scheduling time is computed","When scheduling a registered task, we should consider 3 values to compute the delay to set to it.  -The previously scheduled timestamp in case there is one    -The first item arrival time    -The current time",Task,Major,Done,"2018-01-10 21:16:17","2018-01-10 21:16:17",2
Mule,"Revapi fails with parameterTypeChanged when adding compatible generic","Revapi check fails with parameterTypeChanged on method when declaring explicitly a generic of same type than before.    Example:        Is changed to:  ",Task,Minor,New,"2018-01-10 17:33:50","2018-01-10 17:33:50",4
Mule,"Upload reactor-core 3.2.0.M1 to our nexus repository and update its versions in the runtime projects","Upload reactor-core 3.2.0.M1 to our nexus repository and update its versions in the runtime projects.    Uploading the artifacts to our repo will allow us to avoid having to do changes in our projects as the repo where they uploaded the artifacts is Milestone in place of SNAPSHOT [http://repo.spring.io/milestone/io/projectreactor/reactor-core/3.2.0.M1/] and also in our CI environment and in other teams projects.",Task,"To be reviewed",Done,"2018-01-10 17:07:51","2018-01-10 17:07:51",2
Mule,"Variables set by <set-variable> should be exposed outside route","When using <set-variable> inside a route (aggregation-complete route in an aggregator for example), the value set can't be accessed outside the route.        We need it to work this way for the aggregators module.","Enhancement Request",Major,Closed,"2018-01-10 15:02:23","2018-01-10 15:02:23",8
Mule,"Variables created on error propagate of an operation policy, cannot be read on error continue of a source policy","If a variable is created in an error propagate of an operation policy, that variable cannot be read from the error continue of a source policy.     This does not happen if the variable is created in an error continue of an operation policy, or in the sections before and after the execute-next element of the operation policy.  ",Bug,Major,Resolved,"2018-01-09 22:43:51","2018-01-09 22:43:51",4
Mule,"Introduce PollingSource ","to be added ","Enhancement Request",Critical,Closed,"2018-01-09 15:40:26","2018-01-09 15:40:26",8
Mule,"Support lazy initialize aggregators from aggregator-listener parameter ","Extensions API has no support for this scenarios where the aggregator listener defines an String attribute but internally the connector is uses it as a reference to an object in the registry:    We should support this on MTS/Mule as a particular scenario for aggregators and change LazyInit code to enable the referenced source.   Later Extensions API will implement a way to mark these parameters as referenced beans.",Task,Blocker,Done,"2018-01-05 20:42:33","2018-01-05 20:42:33",4
Mule,"Error handler of operation policies can't handle invalid requests","There is no possible way to handle invalid requests from the error handler of the operation policy.   An invalid request would be, for example, making a request to an inexistent resource (500 server error), or receiving a 403 from the server.  After executing the 'execute-next' operator, if the request is invalid, the operation result is catched by the application error handler instead of using the policy one.    This test reproduces the problem: https://github.com/mulesoft/mule-ee/commit/9ba58d92f083f26f061f544a0a69f3c7ef9b2f4b",Bug,Critical,Resolved,"2018-01-08 23:00:27","2018-01-08 23:00:27",8
Mule,"Create test cases for embedded-api against newer runtime versions.","Create a framework to test mule-embedded-api against all versions of the runtime. Ideally once a new version of the runtime is created a new test case using that version against previous embedded-api versions must be executed.",Task,"To be reviewed",New,"2018-01-08 20:21:43","2018-01-08 20:21:43",16
Mule,"Expression error when accessing Json payload created by set-payload","Having the following configuration      produces the following error:    org.mule.runtime.core.internal.exception.MessagingException: Java Object Source does not support Input Stream evaluating expression: payload.value.  ; ErrorType: MULE:EXPRESSION  Caused by: org.mule.runtime.core.api.expression.ExpressionRuntimeException: Java Object Source does not support Input Stream evaluating expression: payload.value.  Caused by: org.mule.runtime.api.el.ExpressionExecutionException: Java Object Source does not support Input Stream    Workaround:     Set the mimeType using DW instead of the set-payload attribute      ",Bug,"To be reviewed",Closed,"2018-01-08 19:11:04","2018-01-08 19:11:04",4
Mule,"Invalid parser clash between CustomStaticTypes and other definitions","When declaring a CustomStaticType, we should consider it's definition as a non parseable element and create an expressionString only attribute, instead of taking it as an ObjectType.          ",Bug,Blocker,Open,"2018-01-08 18:08:48","2018-01-08 18:08:48",5
Mule,"Improve Dynamic Metadata Enricher to enrich without requiring Classes","*Improve Dynamic Metadata Enricher to enrich without requiring Classes*    * Nowadays the {{DynamicMetadataDeclarationEnricher}} is too coupled to Classes to work and some enrichments can be done without using classes.  * This is required to have a AST Loader work better for this scenario and provide a more    authentic ExtensionModel","Enhancement Request",Critical,Open,"2018-01-08 17:13:23","2018-01-08 17:13:23",5
Mule,"Reducing max concurrency with proactor processing strategy should not block cpu light threads.","This optimization currently in place makes sense if there is only one flow, but if there are multiple flows or apps then this can cause starvation of cpu light threada.",Bug,Critical,Resolved,"2018-01-08 15:47:26","2018-01-08 15:47:26",1
Mule,"Update IO scheduler pool size based on capacity performance tests","Update IO scheduler pool size based on capacity performance tests    {{org.mule.runtime.scheduler.io.threadPool.maxSize=cores + ((mem - 245760) / 5120)}}",Task,Critical,Done,"2018-01-08 15:45:24","2018-01-08 15:45:24",1
Mule,"Notification listener errors should not be propagated to runtime","Notification listener exceptions should not be propagated to runtime. Currently, exceptions are caught, but errors aren't, this needs updating to catch Throwable and not Exception.",Task,Critical,Done,"2018-01-08 14:11:09","2018-01-08 14:11:09",2
Mule,"Change the way that repeated model names are validated","*Change the way that repeated model names are validated*    Currently to validate the repetition of model names a validation is made on {{AbstractComplexModel}} when instantiating an {{ExtensionModel}} throwing an IllegalModelException.  Throwing an exception when building the extension model makes impossible to have a Model Validator that could communicate correctly the repetition of model names, and in the AST Loader, indicate the configurations with infractions.","Enhancement Request",Critical,Resolved,"2018-01-06 21:19:04","2018-01-06 21:19:04",1
Mule,"Expose the DSL TypeCatalog using tooling client","When tooling resolves the DSL for a given component, internally contains all the information of the types associated to the resolved extension, in order to fully resolve the type imports and so on.          We need to expose that Type's information so other can use all the context information.","Enhancement Request",Major,Closed,"2018-01-05 21:02:09","2018-01-05 21:02:09",5
Mule,"Extensions Client must use the correct event when  used in an operation","There're flaky test in the WSC build. Make sure they are not because of an actual race condition in the component and fix.",Task,Blocker,Done,"2018-01-05 20:37:17","2018-01-05 20:37:17",8
Mule,"Extension documenter fails on document on elements that make usage of @Alias","*Extension documenter fails on document on elements that make usage of @Alias*    * When a param, operation, or whatever uses {{@Alias}} the documenter fails to document the parameter because it uses the Model name to find the Java Element, which won't be found in the case that the Alias is different from the element name.",Bug,Critical,Resolved,"2018-01-05 19:51:56","2018-01-05 19:51:56",3
Mule,"Soap Connect extensions not comunicating HTTP Stereotype in http config paraemter","Soap Connect extensions not comunicating HTTP Stereotype in http config paraemter",Bug,Critical,Resolved,"2018-01-05 17:26:54","2018-01-05 17:26:54",3
Mule,"Disable RSA encryption ciphers","As part of protection against the ROBOT attack, we should consider disabling TLS_RSA ciphers: https://robotattack.org/  ","Enhancement Request",Critical,Closed,"2018-01-05 13:46:05","2018-01-05 13:46:05",2
Mule,"Upgrade BouncyCastle to 1.59","BouncyCastle is affected by the ROBOT attack ([https://robotattack.org/|https://robotattack.org/]) up until version 1.58    We must upgrade to 1.59",Task,Blocker,Done,"2018-01-05 13:17:56","2018-01-05 13:17:56",2
Mule,"ErrorTypes not being registered in routers","The error types declared in any extension are not registered and the SDK raises an error when trying to throw an exception that has one of those errors",Bug,Major,Resolved,"2018-01-04 18:51:39","2018-01-04 18:51:39",1
Mule,"Change default back pressure strategy to WAIT only","By default, only the WAIT strategy should be added automatically",Task,Blocker,Done,"2018-01-04 18:06:49","2018-01-04 18:06:49",1
Mule,"Annotated every element exposed on the API that have usage restrictions","Use the annotations from mule-api-annotations to mark every API element that must not be considered API.     For example, interfaces that must not be implemented, classes that must not be extended, etc, outside the container modules.",Task,Blocker,Done,"2018-01-04 17:15:12","2018-01-04 17:15:12",16
Mule,"FunctionalTestCase#getConfigFile should always support / slash","Right now, the getConfigFile() method in the FunctionalTestCase class, must be used with the slash corresponding to the OS (/ for UNIX and \ for Windows). But this means that a forward slash / cannot be used in Windows.  The forward slash should always work, as it does in Java.    This should also work when looking for resources, not only in the FunctionalTestCase.",Bug,Major,Resolved,"2018-01-04 16:09:04","2018-01-04 16:09:04",2
Mule,"Update mave-revapi-extension to support mule-api-annotations","Add support to mule-revapi-extension to ignore API differences based on the annotations defined on mule-api-annotations","Enhancement Request",Blocker,Resolved,"2018-01-04 16:08:48","2018-01-04 16:08:48",8
Mule,"Define annotations to exclude java elements from the API","We need a way to mark which parts of what is exposed on the API is NOT considered API. This could sound counterintuitive, but consider this examples:    • Interfaces that are not supposed to be implemented by clients, they are only provided in the API for consumption only   • Classes that are not supposed to be extended by clients, they are provided in the API as a generic type for consumption only   • Classes that are not supposed to be instantiated by clients, they are provided in the API as a generic type for consumption only   • Methods that are not supposed to be overridden by clients, they are provided for internal usage only   • Types that not supposed to be directly referenced by clients",Task,Blocker,Done,"2018-01-04 16:06:46","2018-01-04 16:06:46",2
Mule,"Add more tests for aggregators","Add more tests for aggregators.   We should test:  - Cluster behavior: Information is shared along the cluster. If a node is down, data is not lost and scheduled tasks are still executed.  - Listeners: Test that the listeners can be started() and stopped() many times and still get the notifications expected",Task,Blocker,Done,"2018-01-04 13:11:05","2018-01-04 13:11:05",8
Mule,"Add logging for aggregators","The aggregators module spec specifies some important cases where information should be logged according to the behaviour in the module.",Task,Major,Done,"2018-01-04 02:35:33","2018-01-04 02:35:33",2
Mule,"Refactor aggregators to be cluster aware","All aggregators should work in a cluster.    That implies processing each event only once, regarding the node the flow is being executed and making sure that if a node is disconnected, all the information that was handled by that node, was properly persisted and shared with the other ones to continue as if there was no error.",Task,Blocker,Done,"2018-01-04 02:32:43","2018-01-04 02:32:43",8
Mule,"Allow aggregators to be configured with a privateObjectStore","Since all aggregators should be able to be configured with a custom objectStore, we should be able to do it defining a private object store within the aggregator it self.     Check the way the idempotent-message-validator can be configured. ",Task,Major,Done,"2018-01-04 02:30:28","2018-01-04 02:30:28",4
Mule,"Add support for configurable custom objectStore","All the aggregators should persist all information in an objectStore so that the application works if distributed in a cluster or it suffers from an error that causes it to shutdown.  The objectStore should have the possibility to be configured by the user. ",Task,Blocker,Done,"2018-01-04 02:25:52","2018-01-04 02:25:52",4
Mule,"Add AggregatorAttributes support","Add AggregatorAttributes support when executing a route within an aggregator.   Make sure the attributes can be reached from a DW expression. ",Task,Blocker,Done,"2018-01-04 02:24:15","2018-01-04 02:24:15",2
Mule,"Add errors for aggregator module","Define ErrorTypes and ErrorProviders for the different exceptions that can happen in the aggregators module according to the spec.",Task,Blocker,Done,"2018-01-04 02:21:32","2018-01-04 02:21:32",2
Mule,"Implement basic group-based-aggregator functionality with SDK","The aggregators module should have a group-based-aggregator which can aggregate events by groupId.  The aggregator should be able to be configured to get the groupId with an expression.    Also, consider the configuration for group eviction",Task,Blocker,Done,"2018-01-04 02:19:06","2018-01-04 02:19:06",4
Mule,"Implement basic time-based-aggregator functionality with SDK","The aggregators module should have a time-based-aggregator which can aggregate events until period is completed.   If that happens, a registered listener should be notified.   Also, consider a maxSize for syncronous group release",Task,Blocker,Done,"2018-01-04 02:17:26","2018-01-04 02:17:26",4
Mule,"Implement basic size-based-aggregator functionality with SDK","The aggregators module should have a size-based-aggregator which can aggregate events until the amount reaches an expected size.   If that happens, both a listener and the on-complete route should be executed.  Also, consider a timeout for the group to be released asynchronously",Task,Blocker,Done,"2018-01-04 02:14:58","2018-01-04 02:14:58",4
Mule,"For each executes first processor even that an execution failed","While doing a test on Tooling client, with a configuration like:     Even though that in the first iteration the http request fails, we received notifications from the logger as it's being executed the more than once. Putting a breakpoint on the LoggerMessageProcessor shows that the logger is being executed the whole 3 times, instead of only once.      ",Bug,Blocker,Resolved,"2018-01-03 20:42:30","2018-01-03 20:42:30",2
Mule,"When policy does not contain a try element, notifications are not sent in order","Weird behaviour here. After a recent refactor of the policy chain, when a policy does not contain a <try> element, notifications are not sent in the right order. PROCESS_END notification is sent before the AFTER_NEXT notification.    A test case reproducing this can be found here: https://github.com/mulesoft/mule-ee/commit/603ea5faea03daf1c06d24752fffc9c6ad8df347",Bug,Critical,Resolved,"2018-01-02 21:12:47","2018-01-02 21:12:47",4
Mule,"APIKit needs access to MessageProcessors class","APIKit needs access to MessageProcessors but this class is located in a privileged mule package.    Allow APIKIT access to org.mule.runtime.core.privileged.processor package",Task,Blocker,Done,"2018-01-02 20:27:17","2018-01-02 20:27:17",1
Mule,"NPE when creating an ImmutableOperationModel without notifications","Changes added to ExtensionModel implementation classes are not backward compatible so whenever a new instance of the ImmutableOperationModel is created within an old model (that doesn't have notifications) an NPE is thrown.",Bug,Critical,Resolved,"2018-01-02 14:37:20","2018-01-02 14:37:20",1
Mule,"Support back-pressure for flow-ref","Support back-pressure for flow-ref",Task,Critical,New,"2018-01-01 23:35:49","2018-01-01 23:35:49",4
Mule,"MessagingExceptionResolver unwraps smart connector mapped exceptions","MessagingExceptionResolver unwraps smart connector mapped exceptions    See: org.mule.test.functional.ModuleUsingErrorMappingTestCase#globalMappingWithDefaultErrorHandlerTimeoutThruFlowRef (in branch MULE-14351)",Task,Critical,New,"2018-01-01 23:27:07","2018-01-01 23:27:07",2
Mule,"Make BackPressureContext differentiate between DROP and FAIL back pressure","Leverage MULE-14284 to allow BPContext to differentiate between FAIL and DROP (currently it always says DROP)",Task,Critical,Done,"2017-12-30 03:11:43","2017-12-30 03:11:43",1
Mule,"Enable API compatiblity check on mule-metadata-model-java-ast","As the mule-metadata-model-java-ast module was added on 1.1.0-SNAPSHOT version of mule-metadata-model project, there is no an available version to compare the API against.  So, after the release of 1.1.0, the revapi plugin must be enabled on this module.  ",Task,Blocker,New,"2017-12-29 16:53:01","2017-12-29 16:53:01",1
Mule,"Support lazyInit for Domains","LazyInit is only support for applications with default domain only or domains, this ticket is about supporting lazyInit for an application that depends on domains that are not empty (case of default one).",Task,Major,Done,"2017-12-29 16:44:25","2017-12-29 16:44:25",0
Mule,"Logging message or payload resolves to the same value","Inside a logger, when you use #[message] or #[payload], both resolve to the content of the payload.    This is an unnecessary behavior change from 3.x, where #[message] resolved to the MuleMessage.toString() and contained all of the message fields.",Bug,Critical,Resolved,"2017-12-29 15:40:23","2017-12-29 15:40:23",4
Mule,"Create an Extension Object Field handler for the AST Type Loader","Create an Extension Object Field handler for the AST Type Loader",Task,Blocker,Done,"2017-12-28 22:23:15","2017-12-28 22:23:15",8
Mule,"API broken by MULE-13774","The introduction of notifications in the SDK cause several API problems. Though most seem like candidates to ignore, we need to review them carefully.",Task,Blocker,Done,"2017-12-28 20:20:03","2017-12-28 20:20:03",1
Mule,"Add support for notifications that must be able to consume managed streams","We need a mechanism for the notifications listeners to work with managed cursor streams.     Today a notification that consumes a managed stream may fail if the stream was closed because the flow finished before the notification execution. We need a mechanism to properly handle those cases.",Task,"To be reviewed",New,"2017-12-28 18:50:57","2017-12-28 18:50:57",8
Mule,"Only support back-preasure configuration in HTTP","Until we clearly define an implementation for each of the back preasure strategies, we should only support WAIT as an option in all sources. Having a default implementation for other strategies make no sense since each of them require proper treatment and if we don't do that then we would be breaking backwards compatibility in the future",Task,Critical,Done,"2017-12-28 18:48:29","2017-12-28 18:48:29",2
Mule,"ObjectStore connector does not work properly with lazy init","In the following configuration    The os operation contains fails when running with lazy init due to the objectStore attribute not being recognised as a reference attribute to a bean",Bug,Critical,Closed,"2017-12-28 17:01:31","2017-12-28 17:01:31",5
Mule,"Move MessageProcessors from privileged package to an accessible one","Move MessageProcessors.flatMap to a package accessible by APIKit",Task,Blocker,Done,"2017-12-28 15:45:10","2017-12-28 15:45:10",2
Mule,"Decouple ModuleProcessingPhase from extension notifications","Right now, DefaultExtensionNotification is being used in ModuleFlowProcessingPhase but this should not know about extensions. We should defer the instantiation using a Function or Supplier so that Notification is used instead and DefaultExtensionNotification is only used in extensions code.  Also, add tests to validate failures.",Task,"To be reviewed",Done,"2017-12-28 15:40:07","2017-12-28 15:40:07",4
Mule,"Serializable classes do not define serialVersionUID","Several classes that implements Serializable do not define a serialVersionUID.    As a result due to changes in classes of 4.1.0 (1.1.0 of the API artifacts) old artifacts such as MUnit 2.0.0 no longer works with 4.1.0/1.1.0 artifacts for they were built agains the classes in 4.0.0/1.0.0.         The solution serialVersionUID generated by the JVM for those classes in 4.0.0/1.0.0 and specify it in the serializable classes of 4.1.0/1.1.0.     In particular MUnit is failing due to changes in the *class org.mule.runtime.module.embedded.internal.DefaultDeploymentConfigurationBuilder.DeploymentConfigurationImpl*          ",Bug,Critical,Resolved,"2017-12-28 15:18:39","2017-12-28 15:18:39",2
Mule,"Add annotations support repeatable routes ","Currently the model supports to define minOccurs and maxOccurs for any given route, but the annotations-based SDK declaration does not expose this kind of configuration. ","Enhancement Request",Major,Open,"2017-12-28 14:12:14","2017-12-28 14:12:14",8
Mule,"Preserve Event streams for async notification listeners","A number of notifications carry an Event in them for listeners to consume. However, if the notification is async then the listener may consume it once the Event has completed, meaning any streams in it will be closed.  We should generate an Event copy in that case with an EventContext that's a child of the original one. Then, the notification dispatch to all listeners would be part of what makes the Event complete and streams would remain open.","Enhancement Request","To be reviewed",Open,"2017-12-28 04:30:02","2017-12-28 04:30:02",8
Mule,"Invalid API defined on mule-metadata-model because of missing mule-module-maven-plugin","Some modules defined on mule-metadata-model define a mule-module.properties, but the APIs declared on those modules is not being validated, as the mule-module-maven-plugin is not declared on corresponding pom.xml file.  A first attempt to include the mentioned plugin (along with the revapi maven plugin to check API consistency across versions) shown that the modules are incorrectly defined, ie, the list of exported modules is not complete or it exports unwanted packages.  So, API must be cleaned up, but need to check first if those APIs are really needed.",Bug,Blocker,Resolved,"2017-12-27 19:24:18","2017-12-27 19:24:18",8
Mule,"Improve notifications serialization","Just like errors, notifications could be optimise to only declare them once at the extension level and then referencing them in operation and sources.","Enhancement Request","To be reviewed",Resolved,"2017-12-27 18:52:08","2017-12-27 18:52:08",3
Mule,"Document extension notifications","After notification firing capabilities are added to extension operations and sources we we'll need to document them as well. By that I mean adding their data to the auto generated docs.",Task,Critical,Done,"2017-12-27 18:49:53","2017-12-27 18:49:53",4
Mule,"API broken by MULE-13927","API was broken while working MULE-13927.  The original issue must be completed without changing the API    ",Bug,Blocker,Closed,"2017-12-27 16:09:22","2017-12-27 16:09:22",1
Mule,"API broken by MULE-14048","API was broken while working MULE-14048.  The original issue must be completed without changing the API    ",Bug,Blocker,Closed,"2017-12-27 16:07:22","2017-12-27 16:07:22",1
Mule,"API broken by MULE-14124","API was broken while working MULE-14124.  The original issue must be completed without changing the API    ",Bug,Blocker,Closed,"2017-12-27 16:05:21","2017-12-27 16:05:21",0
Mule,"API broken by MULE-14288","API was broken while working MULE-14288.  The original issue must be completed without changing the API    ",Bug,Blocker,Closed,"2017-12-27 16:02:30","2017-12-27 16:02:30",1
Mule,"MessageProcessor post-invoke notification missing when an error occurs","When an error happens on transform Mule Runtime is missing a post-invoke notification.",Bug,Critical,Resolved,"2017-12-27 15:28:25","2017-12-27 15:28:25",2
Mule,"Update required java and maven versions in .md files","Many aspects of the .md files are outdated",Task,"To be reviewed",Done,"2017-12-26 17:56:51","2017-12-26 17:56:51",1
Mule,"Move AST Loader to another module","Move AST Loader to another package ",Task,Blocker,Done,"2017-12-26 16:55:07","2017-12-26 16:55:07",3
Mule,"Replace class references with the Type abstraction in the extension java loader","Replace class references with the Type abstraction in the extension java loader",Task,Blocker,Done,"2017-12-26 14:49:39","2017-12-26 14:49:39",13
Mule,"Add the capability of mark components as deprecated","*Add the capability of mark operations as deprecated*    Sometimes an operation or source can be deprecated because you need to implement something new, but you don't want to break backwards compatibility and also you don't want new users to keep using the operation, so the solution is to mark the operation/source/router/etc as deprecated.    A deprecated component should mean:  * The user is discouraged from using the component.  * The IDE may hide it from the UI Palette  * Communicate by all possible ways that the user must not use that component.  * Also can it be deprecated parameters or connections","Enhancement Request",Major,Closed,"2017-12-26 01:05:33","2017-12-26 01:05:33",5
Mule,"Make ExtensionResourcesGeneratorAnnotationProcessor work in compile time","Now the ExtensionResourcesGeneratorAnnotationProcessor works in the package phase, this let the annotation processor work with classes.  The annotation processor should stop working with the classes and definitely work with the AST.",Task,Blocker,Done,"2017-12-24 14:42:38","2017-12-24 14:42:38",8
Mule,"Empty configuration name causes extension to fail","If the name attribute is not specified in a configuration annotation, building of the extension fails:        The error is not clear also:    ",Bug,"To be reviewed",Resolved,"2017-12-22 20:17:28","2017-12-22 20:17:28",2
Mule,"@Parameter as operation attribute not working for routers","When using @Parameter annotation in an attibute of a router class, it does not work.    The xml schema generated does not contain that attribute in the element.",Bug,Major,Closed,"2017-12-22 18:29:40","2017-12-22 18:29:40",4
Mule,"Source errors do not contain app location info when logged","When the error described in MULE-14168 occures, the element path and element XML of the source where the error occurs is not logged",Bug,"To be reviewed",Resolved,"2017-12-22 12:39:26","2017-12-22 12:39:26",0
Mule,"Choice executes start before initialise when inside a router route","When you have a <choice> inside a router route, the start phase is executed before the initialise phase.    To reproduce debug test:     org.mule.test.module.extension.scopes.RoutersExecutionTestCase#choiceInsideRouter    adding beakpoints in the initialise() and start() methods of AbstractSelectiveRouter and check that start() is called first.",Bug,Major,Closed,"2017-12-21 21:11:06","2017-12-21 21:11:06",5
Mule,"SDK implemented functions fail to receive TypedValue wrapped elements.","When a weave function is implemented with the SDK and receives a  TypedValue as parameter, either directly or in the generic of a collection, it fails with a ClassCastExeception saying, for example, that Integer cannot be cast to TypedValue.",Bug,Major,Closed,"2017-12-21 18:10:31","2017-12-21 18:10:31",5
Mule,"Scope/Routes error callback called twice","The callback error method in SDK scopes and routers is called twice because of the following code in org.mule.runtime.module.extension.internal.runtime.operation.ImmutableProcessorChainExecutor.Executor#execute:        The result of the first doOnError will be an error so I think that's why the next doOnError evaluates as well.",Bug,Blocker,Closed,"2017-12-20 18:05:05","2017-12-20 18:05:05",1
Mule,"NullPointerException running API compatibility check maven plugin","After the inclusion of the Revapi plugin to ensure API compatiblity, when the Mule uber project is being built, a NullPinterException is being thrown.    Apparently the error is related to the usage of the uber profile:    ",Bug,Major,Resolved,"2017-12-20 17:35:47","2017-12-20 17:35:47",2
Mule,"Update reactor to 3.20-M1 with error handling support","This depends if 3.1.3 release includes error handling support or not.",Task,Blocker,Done,"2017-12-20 17:33:24","2017-12-20 17:33:24",2
Mule,"Overriding _muleComponentInitialStateManager doesn't work","Registering by bootstrap.properties in  mule-plugin a service that override     _muleComponentInitialStateManager does not work.     The bean is never called ",Bug,Major,Closed,"2017-12-20 17:18:15","2017-12-20 17:18:15",2
Mule,"Double exception received to error handler when there is an Internal Server Error","Steps to reproduce:  -deploy:    - a proxy    - an operation policy to handle the request of the proxy    - a server that throws an exception when it is called.    After hitting the proxy, the request is performed to the server. The operation policy detects an Internal Server Error because of the exception in the server, but after that, a second (Unknown) error is thrown.   As the second exception happens when running the error handling of the policy, all the error handling fails.    ",Bug,Critical,Resolved,"2017-12-20 15:39:34","2017-12-20 15:39:34",2
Mule,"NPE when setting a payload, using on-error-continue in an operation policy ","The following NPE appears when using a set-payload inside of an on-error-continue in an operation policy. This behaviour does not happen when using on-error-propagate.    A way to reproduce this issues, is by using this policy:        NPE:        ",Bug,Major,Resolved,"2017-12-20 15:12:12","2017-12-20 15:12:12",2
Mule,"CXF ProxyService does not work correctly with proactor processing strategy.","CXF ProxyService does not work correctly with proactor processing strategy.",Bug,Blocker,Resolved,"2017-12-20 14:13:22","2017-12-20 14:13:22",4
Mule,"Add groupCorrelation to DW binding context and SDK Correlation Info","We should bind groupCorrelation to DW and SDK to be able to access it from expressions in the new aggregators-module",Task,Critical,Done,"2017-12-20 11:52:08","2017-12-20 11:52:08",2
Mule,"SDK sources need to be cluster aware","to be filled","Enhancement Request",Blocker,Closed,"2017-12-19 19:58:23","2017-12-19 19:58:23",8
Mule,"Post interceptors and notifications are not fired when an error occurs in a sub-flow referenced using a flow-ref.","Having the following test:        Instead of throwing the expression exception it throws a null pointer. The stacktrace is in the log output.    This test can be found in the munit-runtime project. In munit-tests/integration/src/test/munit/core/runner/exceptions/failure-expectations-test.xml#expectExceptionThrownInSubFlow",Bug,Blocker,Resolved,"2017-12-19 15:58:24","2017-12-19 15:58:24",4
Mule,"Update Mule back-pressure support to integrate with new SDK back-pressure support.","Update Mule back-pressure support to integrate with new SDK back-pressure support.",Task,Critical,Done,"2017-12-19 11:56:37","2017-12-19 11:56:37",4
Mule,"API broken by MULE-10912","API was broken while fixing MULE-10912.    The original issue must be fixed without changing the API",Bug,Blocker,Resolved,"2017-12-18 15:32:43","2017-12-18 15:32:43",2
Mule,"API broken by  MULE-14082","API was broken while fixing +MULE-14082+.    The original issue must be fixed without changing the API",Bug,Blocker,Resolved,"2017-12-18 15:28:39","2017-12-18 15:28:39",2
Mule,"API broken by MULE-14171","API was broken while fixing MULE-14171.    The original issue must be fixed without changing the API",Bug,Blocker,Resolved,"2017-12-18 15:26:03","2017-12-18 15:26:03",1
Mule,"Move modules/policy-api to a separated repository","Module is using 1.0.0 version instead of 4.0.0/4.1.0 as in the rest of the mule repository.    Need to extract this code to a separate repository, create a build plan and update the uber project     ",Task,Blocker,Done,"2017-12-18 15:16:49","2017-12-18 15:16:49",2
Mule,"Move modules/http-policy-api to a separated repository","Module is using 1.0.0 version instead of 4.0.0/4.1.0 as in the rest of the mule repository.    Need to extract this code to a separate repository, create a build plan and update the uber project",Task,Blocker,Done,"2017-12-18 15:16:02","2017-12-18 15:16:02",2
Mule,"Move modules/dsl-api to a separated repository","Module is using 1.0.0 version instead of 4.0.0/4.1.0 as in the rest of the mule repository.    Need to extract this code to a separate repository, create a build plan and update the uber project",Task,Blocker,Done,"2017-12-18 15:15:03","2017-12-18 15:15:03",2
Mule,"Remove unnecessary uses of Guava","Guava is used in many places, like Core and connectors.    Specially in connectors, it adds up a lot to the size of the connectors dependencies.    Review all uses of Guava to replace the cases that are unnecessary. Guava should only be used for cache and very specific Collections.    Collections that can be replaced by native Java 8 types, shouldn't use Guava.","Enhancement Request","To be reviewed",Closed,"2017-12-18 15:00:33","2017-12-18 15:00:33",8
Mule,"[Model] Allow operations to not have a target","The extension declarer automatically adds everything related to the target feature. However, some operations may not require that, as is the case of the transform processor which defines it's own targets.  It should be possible to indicate that somehow so that the extension model does not feature those unsupported attributes.","Enhancement Request",Major,Resolved,"2017-12-15 22:45:31","2017-12-15 22:45:31",1
Mule,"Parser sets rootContainerName for non Component children of prototype objects","A definition provider may define an element to be parsed to, for instance, a Collection type. In that case, setting the root container will cause an error when spring tries to set the annotations attribute to the created collection.",Bug,Critical,Resolved,"2017-12-15 19:35:42","2017-12-15 19:35:42",0
Mule,"Upgrade Documentation shipped with distribution","The current MIGRATION.TXT contains an outdated list of issues.    The examples folder should be removed     ",Task,Blocker,Done,"2017-12-12 21:00:47","2017-12-12 21:00:47",1
Mule,"Fix HttpRequestProxyConfigTestCase","This testCase is flaky in 3.x and 4.x.",Bug,"To be reviewed",Resolved,"2017-12-15 16:26:27","2017-12-15 16:26:27",4
Mule,"Plugin bean factories are being loaded with the application classloader.","This issue was found in the CXF Module (part of the compatibility plugin) in which the JDK implementation of JAXB is being loaded instead of the implementation given through the maven dependency.     For creating a JAXB Context, the ContextFinder class (present in the JDK), looks for defined SPI in the classloader, and if not present, instantiates the default JDK factory. Currently, as the application classloader is being used, the SPI provided by the JAXB implementation that we use is not being found.     Looking at the code, I found that the classloader change should be applied [in the following method|https://github.com/mulesoft/mule/blob/mule-4.x/modules/spring-config/src/main/java/org/mule/runtime/config/internal/dsl/spring/ObjectFactoryClassRepository.java#L83] in which the object factories are instantiated.          ",Bug,"To be reviewed",Resolved,"2017-12-15 13:12:27","2017-12-15 13:12:27",4
Mule,"Fix NPE in CXF module.","The folloxing part of the code:    in the [MuleHeadersInInterceptor|https://github.com/mulesoft/mule-compatibility-plugin/blob/master/modules/cxf/src/main/java/org/mule/compatibility/module/cxf/support/MuleHeadersInInterceptor.java#L98] class is causing NPE when the evaluation of ternary operator gives true.    This happens because a null value is given as input to a function that receives an int (and native types can't handle this value).",Bug,"To be reviewed",Resolved,"2017-12-15 02:34:33","2017-12-15 02:34:33",2
Mule,"Add the ability to specify the data folder location for an application","In Mule 3 it was possible to deploy an updated version of an application using the exact folder/zip name of a previous one in order to reuse the temp data folder.   In Mule 4 since the data folder gets created based on the GAV of the artifact (without consider patch version) then it's no possible to do this unless the updated application GAV is the same one as the previous app or only differs on the patch version which it would be just a hack to make it work.    We need to properly define a mechanism so an updated version of an application that changes the major or minor version, can reuse the same data folder.","Enhancement Request",Critical,Resolved,"2017-12-14 17:34:15","2017-12-14 17:34:15",8
Mule,"Classloader issue when working with VM and application patch deployment","When deploying an application with persistent VM and storing messages, if later a patched version of the app is deployed, then VM fails to execute because it loses the reference to the connector classloader",Bug,Blocker,Resolved,"2017-12-14 14:54:46","2017-12-14 14:54:46",4
Mule,"Upgrade zt-process-killer","Upgrade zt-process-killer to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 21:14:07","2017-12-13 21:14:07",2
Mule,"Upgrade Awaitility","Upgrade Awaitility to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 21:13:34","2017-12-13 21:13:34",2
Mule,"Upgrade zt-exec","Upgrade zt-exec to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 21:12:55","2017-12-13 21:12:55",2
Mule,"Upgrade Wiremock","Upgrade Wiremock to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:54:44","2017-12-13 20:54:44",2
Mule,"Upgrade json-unit","Upgrade json-unit to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:35:44","2017-12-13 20:35:44",2
Mule,"Upgrade httpcore","Upgrade Apache httpcore to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:35:13","2017-12-13 20:35:13",2
Mule,"Upgrade Jackson2","Upgrade Jackson2 to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:34:04","2017-12-13 20:34:04",2
Mule,"Upgrade kryo and kryo-serializers","Upgrade kryo and kryo-serializers to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:33:16","2017-12-13 20:33:16",2
Mule,"Upgrade objenesis","Upgrade objenesis to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:32:48","2017-12-13 20:32:48",2
Mule,"Upgrade hawtbuf","Upgrade hawtbuf to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:32:19","2017-12-13 20:32:19",2
Mule,"Upgrade apache httpmime","Upgrade apache httpmime to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:31:55","2017-12-13 20:31:55",2
Mule,"Upgrade ehcache","Upgrade ehcache to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:31:38","2017-12-13 20:31:38",2
Mule,"Upgrade Spring to 4.3.19 and Spring Security to 4.2.8","Upgrade spring-security to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:30:48","2017-12-13 20:30:48",1
Mule,"Upgrade fluent-httpclient","Upgrade fluent-httpclient to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:27:21","2017-12-13 20:27:21",2
Mule,"Upgrade Artemis","Upgrade Artemis to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:26:29","2017-12-13 20:26:29",2
Mule,"Upgrade cglib","Upgrade cglib to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:25:53","2017-12-13 20:25:53",2
Mule,"Upgrade javax.activation","Upgrade javax.activation to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:25:24","2017-12-13 20:25:24",2
Mule,"Upgrade Greenmail","Upgrade Greenmail to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:25:09","2017-12-13 20:25:09",2
Mule,"Upgrade commons-db","Upgrade commons-db to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:23:28","2017-12-13 20:23:28",2
Mule,"Upgrade xmlsec","Upgrade xmlsec to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:22:13","2017-12-13 20:22:13",2
Mule,"Upgrade javamail","Upgrade javamail to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:10:26","2017-12-13 20:10:26",2
Mule,"Upgrade commons-cli","Upgrade commons-cli to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:10:01","2017-12-13 20:10:01",2
Mule,"Upgrade commons-text","Upgrade commons-text to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:08:17","2017-12-13 20:08:17",2
Mule,"Upgrade commons-exec","Upgrade commons-exec to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:08:05","2017-12-13 20:08:05",2
Mule,"Upgrade commons-net","Upgrade commons-net to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:07:33","2017-12-13 20:07:33",2
Mule,"Upgrade Jetty","Upgrade Jetty to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:06:29","2017-12-13 20:06:29",2
Mule,"Upgrade Spring","Upgrade Spring to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:05:23","2017-12-13 20:05:23",2
Mule,"Upgrade derby","Upgrade derby to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:04:56","2017-12-13 20:04:56",2
Mule,"Upgrade reflections","Upgrade reflections to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:04:16","2017-12-13 20:04:16",2
Mule,"Upgrade assertJ","Upgrade assertJ to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:03:59","2017-12-13 20:03:59",2
Mule,"Upgrade disruptor","Upgrade disruptor to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:03:40","2017-12-13 20:03:40",2
Mule,"Upgrade commons-codec"," Upgrade commons-codec to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:03:21","2017-12-13 20:03:21",2
Mule,"Upgrade Jersey","Upgrade Jersey to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:02:54","2017-12-13 20:02:54",2
Mule,"Upgrade Ant","Upgrade Ant to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:02:43","2017-12-13 20:02:43",2
Mule,"Upgrade Aether","Upgrade Aether to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 20:02:13","2017-12-13 20:02:13",2
Mule,"Upgrade javassist","Upgrade javassist to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 19:59:55","2017-12-13 19:59:55",2
Mule,"Upgrade Quartz","Upgrade Quartz to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 19:56:23","2017-12-13 19:56:23",2
Mule,"Upgrade Reactor","Upgrade Reactor to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 19:56:01","2017-12-13 19:56:01",2
Mule,"Upgrade Jdom","Upgrade Jdom to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 19:53:39","2017-12-13 19:53:39",2
Mule,"Upgrade Saxon","Upgrade Saxon to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 19:52:41","2017-12-13 19:52:41",2
Mule,"Upgrade Powermock","Upgrade Powermock to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 19:51:32","2017-12-13 19:51:32",2
Mule,"Upgrade Guava to 23.5","Upgrade Guava to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 19:49:06","2017-12-13 19:49:06",2
Mule,"Upgrade commons-lang","Upgrade commons-lang to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 19:46:24","2017-12-13 19:46:24",2
Mule,"Upgrade Mockito in CE, API, Extensions API","Upgrade Mockito to the latest version that doesn't break backwards compatibility",Task,Critical,Done,"2017-12-13 19:46:08","2017-12-13 19:46:08",8
Mule,"Upgrade semver4j","Upgrade semver4j to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 19:39:35","2017-12-13 19:39:35",2
Mule,"Upgrade plexus-utils","Upgrade plexus-utils to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 19:39:17","2017-12-13 19:39:17",2
Mule,"Upgrade SnakeYAML","Upgrade SnakeYAML to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 19:38:35","2017-12-13 19:38:35",2
Mule,"Remove joda-time","Replace all joda-time uses with native java.time",Task,"To be reviewed",Done,"2017-12-13 19:38:21","2017-12-13 19:38:21",2
Mule,"Upgrade commons-io","Upgrade commons-io to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 19:38:01","2017-12-13 19:38:01",2
Mule,"Upgrade AspectJ","Upgrade AspectJ to the latest version that doesn't break backwards compatibility",Task,"To be reviewed",Done,"2017-12-13 19:37:45","2017-12-13 19:37:45",2
Mule,"Upgrade Gson ","Upgrade Gson to the latest version that doesn't break backwards compatibility.",Task,"To be reviewed",Done,"2017-12-13 19:36:42","2017-12-13 19:36:42",2
Mule,"Upgrade Allure framework","Upgrade Allure Framework to latest version.",Task,Major,Done,"2017-12-13 19:30:12","2017-12-13 19:30:12",8
Mule,"Error count of flow statistics not tracked","The flow error count is not being tracked.    The following methos always return 0:      This is because the attribute statistics of  _AbstractExceptionListener_ is always null when the application doesn't have an exception strategy.",Bug,Major,Resolved,"2017-12-13 15:23:01","2017-12-13 15:23:01",2
Mule,"Make IO thread pool have an optimal core size","As a workaround for MULE-14179 the core size of the IO pool was reduced to 0.    Based on the performance impact (recreation/disposal of threads), determine an appropriate number of threads to use for core pool size.    Bear in mind that some custom implementation of the ThreadPoolExecitor/BlockingQueue will have to be done, in order to avoid reintrouducing MULE-14179 or MULE-13942",Task,"To be reviewed",Done,"2017-12-13 14:53:37","2017-12-13 14:53:37",2
Mule,"Tooling services doesn't work if operation contains a List as parameter with reference support","*Tooling services (AKA: DataSense & ValueProviders) doesn't work if operation contains a List as parameter with reference support and is not filled.*    In this case there is an Operation with a *List* as parameter which accepts expressions as references and is not completed because is not a parameter that participates of the DataSense resolution, but the mule app fails to start because is not filled.    ",Bug,Blocker,Closed,"2017-12-13 13:45:02","2017-12-13 13:45:02",3
Mule,"Document ExecutableComponent's errors","There's currently nothing indicating that a specific exception is generated.",Task,"To be reviewed",Done,"2017-12-12 22:48:05","2017-12-12 22:48:05",1
Mule,"flow-ref is missing target attribute","With enricher gone,  single operations use the standard target attribute to replace it. However there's still a gap for the cases in which the output of not a single operation but an entire chain needs to be redirected.     For that, the target and target should be added to the flow-ref component",Bug,Critical,Resolved,"2017-12-12 16:36:54","2017-12-12 16:36:54",4
Mule,"Adapt Problems Reporter to work with the AST.","Adapt Problems Reporter to work with the AST.",Task,Critical,Done,"2017-12-12 15:22:36","2017-12-12 15:22:36",8
Mule,"Create AST Type Loader","Create AST Type Loader",Task,Critical,Done,"2017-12-12 15:19:48","2017-12-12 15:19:48",13
Mule,"Don't let the user define Result without Generics as Operation return type","*Don't let the user define Result without Generics as Operation return type*    * Force to the user define the generics of *Result* if this is used as the return type of an operation, so the developer is forced to think which is the return payload and attributes types.",Task,Major,Done,"2017-12-12 14:27:44","2017-12-12 14:27:44",3
Mule,"Wrong ArtifactType in SpringXmlConfigurationBuilder","When creating a SpringXmlConfigurationBuilder, the artifactType is overridden to APP without checking the received one.     Check the builder with the following signature:          It receives an artifactType yet in the code it does:       To reproduce:  Run any distro test that involves deploying a domain and debug that constructor method. Check that the artifactType received is DOMAIN and then is changed to APP.     I tried changing this behaviour and leave the received artifactType instead of changing it to APP but i got a lot of test failures.   I also ran some tests with policies and saw that when it comes to a policy, the constructor receives APP as artifactType. Don't know if that is supposed to be that way.          ",Bug,Major,Resolved,"2017-12-11 21:51:45","2017-12-11 21:51:45",8
Mule,"Spec for aggregators","Specification for aggregators module in Mule 4",Task,Critical,Done,"2017-12-11 17:28:30","2017-12-11 17:28:30",8
Mule,"No distribution data found for Mule ESB Server version 3.9.0. Using 3.8.3","Seeing an error when trying to build my mavenized project in Studio:    No distribution data found for Mule ESB Server version 3.9.0. Using 3.8.3         This was also reported in the forums by other members/customers.",Bug,"To be reviewed",Open,"2017-12-11 17:26:38","2017-12-11 17:26:38",2
Mule,"Add the capability of attaching multiple icons in an extension","*Add the capability of attaching multiple icons in an extension*    Nowadays the extension developer can only attach one icon for the extension, modify the mule extension maven plugin to be able to attach multiple icons.","Enhancement Request",Major,Closed,"2017-12-10 22:15:02","2017-12-10 22:15:02",1
Mule,"Character parameters are not supported","*Character parameters are not supported*    The SDK doesn't consider the possibility of having Character parameters and it fails when executing the operation.    *Operation*:      *Runtime:*      *Tooling*:  ",Bug,Minor,Closed,"2017-12-07 19:38:51","2017-12-07 19:38:51",5
Mule,"Support Entitlement for Mulesoft Premium connectors","Premium connectors created by mulesoft should retrieve the entitlements from Mulesoft license instead of requiring a connector key along with an external license file.    Expected behaviour:   - Being able to create a Connector that requires entitlement with Mulesoft as provider, without requiring a connector.key  - Entitlement for Mulesoft premium connectors has to be retrieved from Mulesloft EE license  - 3.x licenses and entitlements should work for 4.x connectors  - License validation should never be performed at design time, including: Studio, FD, ToolingClient",Bug,Blocker,Resolved,"2017-12-07 18:30:39","2017-12-07 18:30:39",4
Mule,"Implement aggregators extension","Implement a new extension with aggregators.   As for now, we should be able to aggregate by group, by type and by time. This includes implementing the group eviction strategies defined in the spec.    https://docs.google.com/document/d/1pQSiOb0QJc4NVMUt_lhvM3Yv6RZoPFHzsanmB29pnaw/edit#heading=h.woy0qbmdvhy8",Task,Critical,Done,"2017-12-07 16:22:37","2017-12-07 16:22:37",16
Mule,"Support notifications in the SDK","As part of MULE-13774, a spec and POC was done to support the firing of notifications in the SDK. This task is to take that POC and fully implement the feature, including the HTTP part.",Task,Major,Done,"2017-12-07 16:15:06","2017-12-07 16:15:06",8
Mule,"Remove patching scenarios","With the inclusion of deployment of patched artifacts on mule 4.0.0, some inconsistencies were introduced in the way artifacts are identified and how deployment notifications are sent.    Artifacts are identified by the file/folder name, so when a patch for app1.0.0 is deployed, it will be installed in app-1.0.1 and the identifier for the patched app will be app-1.0.1. When the patch is deployed, the old one must be undeployed, so this must send undeployment notifications. These notifications will use the app-1.0.0 ID. This makes hard to correlate all the notifications send on this deployment. (and in particular, it makes hard to implement MULE-14118 in a consistent way).    The deployment must manage the patching scenarios (on both the folder and artifact ID) in a similar way to the used to manage the artifact data folder (see DeployableArtifactDescriptor#getDataFolderName), that consist of removing the bug fix version  from the folder/ID.     Additionally, as the full version is not part of the ID, it could make sense to include a new field on the deployment notifications to provide this value","Enhancement Request",Blocker,Resolved,"2017-12-07 15:25:04","2017-12-07 15:25:04",8
Mule,"Allowed methods in HTTP should be a list. Also should allow to use custom methods","Allowed methods in HTTP should be a list.  Also should allow the use of custom methods","Enhancement Request","To be reviewed",Open,"2017-03-30 20:00:30","2017-03-30 19:00:30",1
Mule,"SDK communicates wrong expected mime type to EL ","When a parameter is resolved via the expression language, the expected data type is used to indicate how it should instantiate the result. For example, HTTP might need a Multimap<String, String> so the expression language will know it needs to turn all values to Strings and consider all key values. Those expected data types always carry the ANY mime type instead of application/java and are therefore useless to optimise the transformations (if the expected data type matches the current one no extra transformations are needed).",Bug,Major,Open,"2017-12-06 20:43:05","2017-12-06 20:43:05",8
Mule,"When melDefault property is set to true, dw: prefix in expressions is ignored","In the described case, the expression is evaluated with MEL instead of DW as one would expect.",Bug,Critical,Resolved,"2017-12-06 19:45:15","2017-12-06 19:45:15",2
Mule,"Provide functionality in core to avoid direct use of reactor with different class-loaders in processor implementations.","Avoid use of reactor in compatibility module processor implementations",Task,Critical,Done,"2017-12-06 19:21:35","2017-12-06 19:21:35",2
Mule,"Add a splash information about the thread configurations calculated by Mule 4","In Mule 4, the io scheduler max size will be calculated based on the hardware available. because of this, it is important to display this information so the customer can tell which configuration was picked up by the runtime.","Enhancement Request","To be reviewed",Resolved,"2017-12-05 19:54:42","2017-12-05 19:54:42",2
Mule,"Upgrade Jackson 1 to 1.9.14","Jackson 1 needs to be upgraded to a newer release which includes the latest bugfixes.",Task,"To be reviewed",Done,"2017-12-05 18:55:01","2017-12-05 18:55:01",1
Mule,"SDK loses the Map DataType generics","*SDK loses the Map DataType generics*    * When returning Maps in an operation, the SDK doesn't consider the generics when generating the output datatype.",Bug,Critical,Closed,"2017-12-05 18:36:11","2017-12-05 18:36:11",3
Mule,"Remove Drools module from distribution","Starting from Mule 3.8.6 and 3.9.1, Drools module is no longer included in the distribution.",Task,"To be reviewed",Done,"2017-12-05 17:46:07","2017-12-05 17:46:07",1
Mule,"Listener threads should have the name of the app","Currently in mule 4 EA, the listener threads contains the name of the flow but it does not show the name of the application that it belongs. For example:  [vm-listener-flow-threadingFlow2].vm listener on flow threadingFlow2.01: [vm-listener-flow-threadingFlow2].vm listener on flow threadingFlow2 @3f9a7bc3 #63 prio=5 os_prio=31 tid=0x00007fd7675f7590 nid=0xa903 waiting on condition [0x0000700012125000]","Enhancement Request","To be reviewed",Resolved,"2017-12-05 14:43:18","2017-12-05 14:43:18",4
Mule,"Provide a FlowExecutor for SDK Modules","Provide a FlowExecutor for SDK Modules:    https://docs.google.com/document/d/1rTFJCh9yodcLnj9z6E0IqlpzPt17_RJraDUfYhhuXi8/edit#heading=h.5qzxde9sr307",Task,Major,Done,"2017-12-04 21:39:56","2017-12-04 21:39:56",5
Mule,"Flowstack on policies","When executing a component in a policy chain, the flowstack at that point must reflect that, indication on which part of the policy (source or operation, before or after) it is located.",Task,"To be reviewed",Done,"2017-12-04 13:12:45","2017-12-04 13:12:45",8
Mule,"Poll Doesn't wait for the execution to finish until it sends the next event","I have a poll and an email and I want the poll to wait until the flow ends executing until it polls again. WorkArround change the max threading profile of the flow to 1.",Bug,Major,Resolved,"2017-12-01 14:42:11","2017-12-01 14:42:11",2
Mule,"AbstractExecutableComponent doesn't complete/terminate created Eventcontexts","When using AbstractExecutableComponent#execute methods, the created eventContexts are never terminated, causing any termination callbacks to not be executed.    This manifests as a problem when declaring generic termination callbacks to do clean up tasks, such as first intended to implement MULE-13700 (see TODOs referencing this issue) or the repeatable streams cleanup.",Task,Minor,Done,"2017-12-01 13:59:29","2017-12-01 13:59:29",0
Mule,"TopLevel parameters not parsed when used as reference","If an extension defines a top level object, which is also used in an operation as reference only, then the parser for that top level object is never generated.",Bug,Critical,Closed,"2017-11-29 00:07:52","2017-11-29 00:07:52",1
Mule,"Upgrade Spring LDAP to 2.3.2","Spring LDAP libraries are included in the Mule distribution but it seems they are not used.    Check if we can remove them ",Task,"To be reviewed",Done,"2017-11-28 23:19:23","2017-11-28 23:19:23",2
Mule,"Scheduler logs in mule_ee.log when SchedulerMessageSource is stopped/started","We are expecting the following behaviour when using the mule agent scheduling service that is used to manage mule schedulers of applications:    If an application scheduler log a message in the application logging file every scheduler execution, after configuring the scheduler, the messages are logged in the _mule_ee.log_ file.    What the agent is doing to configure the scheduler is setting all the required fields of _SchedulerConfiguration_ (_CronScheduler_ or _FixedFrequencyScheduler_) and then stopping and starting the _SchedulerMessageSource_     [Scheduling agent service|https://github.com/mulesoft/mule-agent-plugin/blob/fba835535c19d2b52526427e24c9d33f8f0a0bf3/mule-agent/mule-agent-services/mule-agent-scheduling-service/src/main/java/com/mulesoft/agent/services/scheduling/AgentSchedulingService.java#L241]",Bug,"To be reviewed",Closed,"2017-11-28 20:11:39","2017-11-28 20:11:39",2
Mule,"Parser error doesn't point to the line with the error","When there is a parser error in a DataWeave script the deployment fails without printing the exact point.    For example in this script:    The error is that there is a missing '=' betweein Boolean and if. The error message just says parser error and dumps the script:     ",Bug,"To be reviewed",Resolved,"2017-11-15 14:19:53","2017-11-15 14:19:53",4
Mule,"Support ConnectivityTesting on Domains","Add support to do connectivity testing on domain artifacts.","Enhancement Request",Critical,Resolved,"2017-11-28 14:46:10","2017-11-28 14:46:10",0
Mule,"Implement Partial fetching in Multilevel DataSense","Enable partial fetching, with free levels included","Enhancement Request",Critical,Resolved,"2017-11-27 15:38:27","2017-11-27 15:38:27",5
Mule,"For TopLevelObjectStore, DSLSyntax information doesn't match the TypeDslAnnotation information","For the Object Store module, there are 2 types that define a private object store and a top level object store.    The private object store supports inline definition, while the top level object store doesn't. But the information retrieved after resolving the DslSyntax element states that the top level object store supports it.    This information should match or the UI generated by Studio and Mozart will allow the users to write invalid XML apps",Bug,Critical,Resolved,"2017-11-27 13:58:50","2017-11-27 13:58:50",8
Mule,"No parser found for compatibility component if declared in domain","When there is a mule-domain and apps importing compatibility-plugin as dependency, the app fails to deploy because no parser is found for compatibility components.    Don't know if the issue happens only with compatibility or with any plugin.    To reproduce:   * Declare a mule domain that imports compatibility-plugin as a dependency. The domain config may or may not actually use a component from compatibility. The issue is reproduced either way.   * Declare an app that has both the previously declared domain and compatibility plugin as dependencies.    * Add any compatibility component to the app. I saw the issue using an inbound-endpoint from the vm transport.   * Deploy the domain and the app. The app should not be able to deploy with an error saying that the validation *validateAllConfigElementHaveParsers()* failed.     ",Bug,Major,Resolved,"2017-11-24 19:42:43","2017-11-24 19:42:43",4
Mule,"ArtifactClassLoaderRunner - Use semantic versioning for resolving plugins","Current logic for test runner when classifying the plugins is not honoring semantic logic and not taking into account transitive versions of plugins as it goes over each plugin and reads the direct dependencies.  There are issues with this as if we use Mule Maven Client logic that honors the algorithm for resolving plugins will leave out the cases when plugins have scope tests.",Task,Minor,Done,"2017-11-24 15:01:07","2017-11-24 15:01:07",0
Mule,"Update split/aggregate scope spec for 4.1","Update spec first created as part of suggested an addition to foreach to instead define a new split-aggregate scope consistent with scatter-gather in 4.0 and new aggregator spec.    https://docs.google.com/document/d/192rV7eHW8Ng8M9hQfP1cVHVtuDotaH0Ah1nH-d5eh30/edit?ts=5a9ec066#    ",Task,Critical,Done,"2017-11-24 13:36:55","2017-11-24 13:36:55",4
Mule,"Back-pressure spec","Backpressure spec + prototype",Task,Critical,Done,"2017-11-24 13:27:08","2017-11-24 13:27:08",4
Mule,"Fix integrations CompositeSourceStartDelayTestCase","The test is verifying a functionality that at best will remain in compatibility and at worst will never work in Mule 4, it's flaky so we'll delete it.",Task,"To be reviewed",Done,"2017-11-22 19:35:16","2017-11-22 19:35:16",1
Mule,"Operation field parameters don't work if used with a ParameterGroup","The work done in MULE-13902 did not consider the case of ParameterGroups",Bug,Major,Closed,"2017-11-22 19:00:55","2017-11-22 19:00:55",2
Mule,"Pointing to modules parent 1.1.0-SNAPSHOT still generates minMuleVersion 4.0.0","Creating an extension with the parent pom pointing to mule-core-modules-parent version 1.0.0-SNAPSHOT, generates a mule-artifact.json in the target which has a minMuleVersion 4.0.0. This should be 4.1.0.",Bug,Blocker,Closed,"2017-11-22 14:04:22","2017-11-22 14:04:22",3
Mule,"Provide embedded container API to deploy Domains","We require a generic API  in order to be able to deploy a Domain from the embedded container","Enhancement Request",Major,Resolved,"2017-11-22 13:03:28","2017-11-22 13:03:28",8
Mule,"Fix Mule-Extensions-Maven-Plugin tests","Mule-Extensions-Maven-Plugin tests fail almost consistently.",Task,"To be reviewed",Done,"2017-11-21 21:52:46","2017-11-21 21:52:46",1
Mule,"Add onRedeploy deployment notification","For some scenarios in the Gateway, it would be useful to be able to differentiate from a DeploymentNotificationListener if it is a new deployment or it is a redeployment. Right now, when an undeployment notification is thrown, we don't know if it is going to be a redeploy or not.    To clarify, we would need this notification before the undeployment notification or as a replacement of that.",Task,Major,Done,"2017-11-21 20:27:16","2017-11-21 20:27:16",4
Mule,"Rework MessageProcessorChain to use error mode instead of concatMap for error handling.","Rework MessageProcessorChain to use error mode instead of concatMap for error handling.    See SPIKE: MULE-14080    Depends on: https://github.com/reactor/reactor-core/issues/629",Task,Critical,Done,"2017-11-20 12:57:50","2017-11-20 12:57:50",8
Mule,"Iterators are not converted into repeatable iterators when using StreamingUtils","*Iterators are not converted into repeatable iterators when using StreamingUtils*   * When using StreamingUtils to find all the streams and iterators to convert them into repeatable ones, doesn't take into account {{Iterators}}, just {{StreamingIterators}}, which is wrong.   * See: [https://github.com/mulesoft/mule/blob/mule-4.x/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/DefaultStreamingHelper.java#L87] ",Bug,Major,Resolved,"2017-11-18 03:32:53","2017-11-18 03:32:53",1
Mule,"Add support to indicate whether an error is handleable or not in extension model","Today, all errors are equals as to their role in Mule. However, some errors cannot be handled by users, such as UNKNOWN and CRITICAL. Since these are no different in the extension model tooling services cannot tell which could be suggested in handlers and which should be hidden.",Task,Major,Done,"2017-11-17 21:58:08","2017-11-17 21:58:08",3
Mule,"Add support for chainless routes in extension model","Chain are mandatory in routes right now, therefore you cannot have reference routes as in the on-error component.",Task,Major,Done,"2017-11-17 21:55:12","2017-11-17 21:55:12",5
Mule,"Fix SynchronizedFlowRefOnMuleContextStartTestCase","Test SynchronizedFlowRefOnMuleContextStartTestCase has been flaky since it's creation. Error upon failure is:    ",Task,"To be reviewed",Done,"2017-11-17 21:08:59","2017-11-17 21:08:59",4
Mule,"If a temporary application resource couldn't be deleted a warning message should be displayed","Whenever a temporary resource from an application from {{.mule}} folder Mule is throwing an error instead of just log a warning message that says that the resource couldn't be deleted and may generate an OOM.  This is reproducible on Windows environments as Linux/MacOS allow to delete a file no matter if a process is still using it.","Enhancement Request",Minor,Resolved,"2017-11-17 21:02:04","2017-11-17 21:02:04",2
Mule,"Spec for aggregators and resequencer","Specification for aggregators and resequencer routers in Mule 4",Task,Critical,Done,"2017-11-17 19:32:32","2017-11-17 19:32:32",8
Mule,"Adapt test cases considering DW error message trunking","Need to fix test cases that were matching with equals since now error messages will be truncated to avoid large blobs.",Task,"To be reviewed",Done,"2017-11-17 16:26:07","2017-11-17 16:26:07",1
Mule,"processingStrategy not applied to sub-flow ","The processingStrategy of a flow is not being applied to a sub-flow referenced through a flow-ref component.    This will cause performance problems when a processing strategy taht takes the type of processor is applied, since a sub-flow may have a processor of BLOCKING type, but the flow-ref (and its chain) is treated as a CPU_LIGHT.",Bug,Major,Resolved,"2017-11-17 13:22:53","2017-11-17 13:22:53",4
Mule,"PagingProviders are closed two times ","*PagingProviders are closed two times*    For some reason when a paging provider is closed by the SDK, it gets closed twice, this may lead to unexpected behaviours if the connector developer expects that the close will be called once.",Bug,Major,Closed,"2017-11-16 18:58:32","2017-11-16 18:58:32",2
Mule,"Soap Connect default transport should not be bounded in mule soap support","Soap Connect default transport should not be bounded in mule soap support",Bug,Blocker,Resolved,"2017-11-16 16:49:43","2017-11-16 16:49:43",5
Mule,"Sources don't support maps as parameters","*Sources doesn't support maps as parameters*    Just having a parameter like :      Will make the application fail when parsing the XML.    ",Bug,Critical,Closed,"2017-11-15 21:26:49","2017-11-15 21:26:49",5
Mule,"Repeatable streams don't respect the mark(int) contract","When mark(int) is called on a repeatable stream, the readLimit parameter is used as the reset() position instead of the actual position",Bug,Critical,Closed,"2017-11-15 19:57:38","2017-11-15 19:57:38",1
Mule,"Update Raml Parser 2 version to 1.0.16","Update Raml Parser 2 version to 1.0.16",Task,"To be reviewed",Done,"2017-11-15 18:57:21","2017-11-15 18:57:21",0
Mule,"DB Connection is closed after the result set is consumed completely in TXs","*DB Connection is closed after the result set is consumed completely in TXs*    * When doing a Select, this returns a streaming result set, which when this is consumed completely the connector closes the result set, which is correct, but also the connection who create it.  * In a normal scenario this is correct because each DB Operation is executed with an exclusive connection, but in a TX scenario where the connection is the TX resource shared between all the operations that participate in the transaction, so as consequence if one result set is consumed inside the TX, the connection get's closed and can't be used anymore. ",Bug,Blocker,Closed,"2017-11-15 17:38:48","2017-11-15 17:38:48",3
Mule,"Allow the sending on correlationId be default to be disabled in outbound operations","Allow the sending on correlationId be default to be disabled in outbound operations","Enhancement Request",Major,Closed,"2017-11-15 17:06:58","2017-11-15 17:06:58",0
Mule,"Spec: error handler reuse","Analyse way to provide reuse of error handling components to match Mule 3.",Task,"To be reviewed",Done,"2017-11-15 16:29:14","2017-11-15 16:29:14",4
Mule,"Allow error handlers and on error components to be shared","We need to provide a way to reuse those components.",Task,"To be reviewed",Done,"2017-11-15 16:27:37","2017-11-15 16:27:37",4
Mule,"Add CRL feature to Mule 4 Runtime","Support for CRL was added to Mule 3.9. However, the feature has yet to be added to Mule 4.",Task,"To be reviewed",Done,"2017-11-15 14:00:33","2017-11-15 14:00:33",8
Mule,"Spike: Attempt to simplify and improve performance of MessageProcessorChain","- Create JMH microbenchmarks.  - Optimize where possible.  - Attempt to remove the concatMap that mean that using a single stream does not improve performance.",Task,Critical,Done,"2017-11-15 13:52:31","2017-11-15 13:52:31",8
Mule,"Fix flaky test org.mule.test.core.context.notification.processors.ComponentLocationTestCase.flowWithScatterGather","Fix flaky test org.mule.test.core.context.notification.processors.ComponentLocationTestCase.flowScatterGather",Bug,Major,Resolved,"2017-11-15 02:33:06","2017-11-15 02:33:06",4
Mule,"Review graceful shutdown with <async/> scope","This was found when trying to fix flaky test:    Apparently, since the flow has an <async/> scope, the execution is done quickly and it starts stoping and disposing components prior to the initialization of other components by different threads.     Specifically, a ConfigurationProviderToolingAdapter was created. That class initializes a LifecycleAwareConfigurationInstance containing a retryScheduler.    Sometimes, when the configurationProvider was being registered in the registry, the registry was already being stopped or disposed by the main thread so when the test ended, the retryScheduler was still alive.    The problem with the test was that isGracefulShutdown() was false, but we still need to review if there is no other case where a problem like this could happen. (e.g: With a small timeout).",Bug,Critical,Resolved,"2017-11-14 22:48:43","2017-11-14 22:48:43",8
Mule,"Extensions archetype doesn't handle special characters in extension name","When prompted for the extension name, use Hola Don Pepito   * The generate .java file has spaces   * The class name has spaces   * The generated test config has the same problem    Now try the name i-have-hypens. A similar problem happens to the generated .java files and the class name. ",Bug,Critical,Resolved,"2017-11-14 19:31:58","2017-11-14 19:31:58",2
Mule,"Upgrade log4j to 2.9.1","Upgrade log4j to 2.9.1",Task,"To be reviewed",Done,"2017-11-14 19:08:23","2017-11-14 19:08:23",4
Mule,"Extensions archetype uses wrong parent version","The parent pom of the generated extension should default to 1.0.0. The user should prompted to manually upgraded if needed. ",Bug,Critical,Resolved,"2017-11-14 19:06:52","2017-11-14 19:06:52",1
Mule,"Extensions archetype doesn't respect api-internal convention","The extensions archetype generates a extnsion class, CP, confg and operations. All of them should be in an internal package.",Bug,Critical,Closed,"2017-11-14 19:05:24","2017-11-14 19:05:24",1
Mule,"Bind DataType comparing functions to DW.","We should add functions to DW for comparing DataTypes since there are some DataType values binded to DW and the language does not know how to compare them property using the standard comparison method.",Task,Minor,New,"2017-11-14 19:02:29","2017-11-14 19:02:29",2
Mule,"SDK operations and sources should be able to return a TypedValue","Right now, In order to return a value with a specific mime type we need to return a Result object. That is find when we want to set both payload and attributes, but it's cumbersome when we only want to set the payload.    It would be great to be able to return just a TypedValue<T> and have the DataType into that value be propagated     ","Enhancement Request",Critical,Open,"2017-11-14 18:56:39","2017-11-14 18:56:39",8
Mule,"Add a causedBy function to easily match errors through their type","To users, error types are just strings yet in reality they are more complex objects so matching with a simple equals does not cut it. You also need to take into account inheritance, so in order to fully match the behaviour of the on-error components we need to expose a custom function.",Task,"To be reviewed",Done,"2017-11-14 18:55:47","2017-11-14 18:55:47",2
Mule,"Exceptions thrown from an error handler are not processed","Since on-error components allow expressions with the when attribute, it is possible to get an exception when executing that and the failure would happen on the accept() method called from the error handler itself. However, those exceptions are not handled.    Take the following flows:        The lookup call will fail because of the misspelled target flow name yet if you call the failing flow using the flow runner you will not get a fully processed exception (with an error) but directly the expression failure exception.",Bug,Critical,Resolved,"2017-11-14 18:28:48","2017-11-14 18:28:48",4
Mule,"Exclusive Optionals validations doesn't consider Tooling Execution","The following validation makes DataSense resolution fail:        Disable this validation when in tooling mode.",Bug,Critical,Resolved,"2017-11-14 18:13:36","2017-11-14 18:13:36",1
Mule,"Optimise HTTP listener response streaming buffer size","Just like we have optimised the requester buffer size, we must now analyse the listener handling of streams and buffers to try and make the most of it. Performance tests must be done to validate the approach.",Task,Critical,Done,"2017-11-14 16:53:42","2017-11-14 16:53:42",4
Mule,"Upgrade to CXF 3.2.1","CXF 3.0.x is deprecated. (last planned release was 3.0.15)    We need to upgrade to CXF 3.2.x (being 3.2.1 the latest one as of today)",Task,Blocker,Done,"2017-11-14 16:25:52","2017-11-14 16:25:52",8
Mule,"Upgrade httpclient to 4.5.3 or newer","Upgrade httpclient to the newest version",Task,Major,Done,"2017-05-23 02:19:19","2017-05-23 01:19:19",4
Mule,"Log File being created even for muted apps","For tooling apps that have a log4j2.xml config file, the log file is being created even though the muted app deployment property is being set. ",Bug,"To be reviewed",Resolved,"2017-11-14 14:01:45","2017-11-14 14:01:45",2
Mule,"It should be possible to enable http messages logging per app","In 3.x it was possible to enable HttpMessageLogger per application. In mule 4 since the logger is created at the runtime level it's only possible to enable it for the whole runtime.",Bug,Critical,Resolved,"2017-11-13 19:51:22","2017-11-13 19:51:22",4
Mule,"Upgrade MVEL to 2.1.9-MULE-013 version.","We need to upgrade MVEL to 2.1.9-MULE-013 version, since some bugs were fixed in our fork of the library.",Task,"To be reviewed",Done,"2017-11-13 17:35:15","2017-11-13 17:35:15",2
Mule,"Create a DB Connector Jenkins Plan which runs tests with all the available vendors","*Create a DB Connector Jenkins Plan which runs tests with all the available vendors*    * Currently DB Jenkins plans only runs their tests with Derby, make a Jenkins plans which is able to execute tests with all the possible vendors: MySQL, Oracle, MSSQL, etc... ",Task,Critical,Done,"2017-11-13 17:09:07","2017-11-13 17:09:07",8
Mule,"Don't reuse cursors on reconnection","If an operation receives an InputStream and it throws ConnectionException, the same InputStream is provided but a new Cursor should be made available instead. ",Bug,Critical,Closed,"2017-11-13 16:31:36","2017-11-13 16:31:36",5
Mule,"JMH Flow performance tests should use real scheduler service","JMH Flow performance tests should use real scheduler service",Task,Major,Done,"2017-11-13 15:51:34","2017-11-13 15:51:34",2
Mule,"Mule should use List<TypedValue<Message>> consistently instead of List<Message>","Currently, neither scatter-gather nor file-based connector list operations use this.",Task,"To be reviewed",New,"2017-11-13 15:02:20","2017-11-13 15:02:20",4
Mule,"Implement Java interop module","Implement spec MULE-14043","Enhancement Request",Critical,Closed,"2017-11-13 15:00:42","2017-11-13 15:00:42",8
Mule,"Write java module spec","Write spec for Java interop extension",Task,Critical,Done,"2017-11-13 14:58:29","2017-11-13 14:58:29",5
Mule,"Add the concept of class parameter to the extension model","Figure out a way to signal that a String parameter represents a class FQN. It should also specify if the class is suppose to extend any classes or implement any interfaces","Enhancement Request",Critical,Closed,"2017-11-13 14:55:28","2017-11-13 14:55:28",5
Mule,"Create a JavaTypeLoader based on AST","*Create a JavaTypeLoader based on AST*    * A lot of validations and logic is made based on the MetadataTypes, but currently the JavaTypeLoader works only with Classes.  * Create a new flavour, possibly a decaf version, of a JavaTypeLoader, which works with TypeElements.",Task,Critical,Done,"2017-11-13 14:37:18","2017-11-13 14:37:18",21
Mule,"MetadataService starts Sources when resolving Metadata","*MetadataService starts Sources when resolving Metadata*    Continue the work done in MULE-14029 to do the same for Metadata resolution",Bug,Critical,Resolved,"2017-11-13 14:26:41","2017-11-13 14:26:41",5
Mule,"Support static custom types","Add support for custom input and output types.    The main use case for this is to create operations/sources which return/receive non java types loaded from a schema, which is required to be available at design time.    It should be somehting like this:    The Type provider should be an interface, as similar to the TypeResolver as possible, ini which the user can manually create the MetadataType. The TypeResolver is required to have a default constructor and to be usable in compile time, since the returned type will be statically assigned to the ExtensionModel.    Also, because the main (but not only) use case of this is to support schemas, it should be easy to generate a MetadataType from an XML, Json and CSV schema","Enhancement Request",Critical,Closed,"2017-11-13 14:26:01","2017-11-13 14:26:01",13
Mule,"Log a threaddump when a test fails due to timeout for troubleshooting","Log a threaddump when a test fails due to timeout for troubleshooting",Task,"To be reviewed",Done,"2017-11-13 12:13:35","2017-11-13 12:13:35",1
Mule,"ValueProviderService should not start the source when resolving values","*ValueProviderService starts the source when resolving values*    * Currently the Value Provider Service initializes and starts the created sources, this should only be initialized.",Bug,Critical,Resolved,"2017-11-10 17:38:03","2017-11-10 17:38:03",3
Mule,"Arbitrary File Write in Artifact Installer","Location: The unzip() method in the org.mule.runtime.core.util.FileUtils class.    When the runtime installs an application archive, files may be extracted outside of the  application’s installation directory, potentially causing a denial of service condition or  privilege escalation.    The Mulesoft Runtime supports applications provided as zip files. When installing them, it  extracts the contents of the zip file into a new directory. However, the extractor does not  prevent directory traversal, which occurs when an entry in the zip file has a path containing  one or more instances of ../. When that happens, files will be written outside of the  application’s directory, potentially anywhere on the filesystem.    Reproduction steps:    1. Create a zip file with an entry containing a pathname of ../../test. For example, the  following Python script will create test.zip containing a single file named ../../test:        2. Place the zip file in the apps directory of the runtime.  3. Start the runtime, and observe that a filename named test is created in the main runtime  directory, one level above the apps directory.    Recommendation:    When extracting zip files, ensure that the canonical pathname of the file is not outside of  the application’s directory. Alternatively, reject application archives containing entries with  relative paths.",Bug,Minor,Resolved,"2017-06-13 19:40:19","2017-06-13 18:40:19",4
Mule,"Add a MSSQL connection provider in the DB connector","Need a MSSQL connection provider just like we do with mysql and oracle","Enhancement Request",Major,Closed,"2017-11-10 15:19:42","2017-11-10 15:19:42",5
Mule,"Can't get SP result with MSSQL","Consider this case:    It fails with:    This is because MSSQL doesn't support multiple open ResultSets. This works with the 3.x connector because streaming is disabled by default. Now that streaming is always on, it always fails.    We need to change it so that streaming is automatically disabled if the RDBMS doesn't support multiple open results.    The driver's GAV is:  ",Bug,Critical,Closed,"2017-11-10 15:12:54","2017-11-10 15:12:54",5
Mule,"Warmup and cache DW evaluator for tests performance","This causes flakyness on tests that evaluate DW expressions, have small (around 5s) timeouts and run on a loaded environment (like parallel builds on the CI server)",Task,Major,Done,"2017-11-10 13:05:19","2017-11-10 13:05:19",4
Mule,"Introduce the concept of Path location classification","The PathModel needs to be enhanced so that parameters representing a file path can have more information regarding where those paths are going to point to. This will be helpful for tooling.    A location attribute will be added to the PathModel. This attribute is an enum:   * EMBEDDED: The path points to a resource inside the mule app. UI should render this as a file picker   * EXTERNAL: The path points to a resource outside of the mule application. Most likely (but not necessarily) in the file system or an external URL. No file picker, just a regular text box   * ANY: Resource can point to any of the above. A file picker can be offered, but the user needs to be able to also specify any random path","Enhancement Request",Blocker,Closed,"2017-11-10 03:27:54","2017-11-10 03:27:54",2
Mule,"Expose failures in MetadataResult expose in MetadataCache","Expose failures in MetadataResult expose in MetadataCache","Enhancement Request",Major,Resolved,"2017-11-09 19:25:54","2017-11-09 19:25:54",4
Mule,"set-variable is setting mime type */* always instead of using the DW return data type","set-variable is setting mime type */* always instead of using the DW return data type.     If the mimeType attribute was not specified then the one provided by the expression language must be used instead of the default value.",Bug,Blocker,Resolved,"2017-11-09 19:09:10","2017-11-09 19:09:10",4
Mule,"Race condition on .mule directory creation using parallel deployment","Under parallel deployment there's a race condition between checking for the existence of the .mule directory and its creation:    with unfortunate timing an application may fail to deploy due to the IllegalStateException         a possible solution could be checking if the dir exists after the call to mkdirs() returns false, and only throw the exception if it does not exist",Bug,"To be reviewed",Resolved,"2017-11-09 17:56:28","2017-11-09 17:56:28",2
Mule,"Create HttpRequestOptions concept in HTTP service","The send methods are very crowded and often force you to determine stuff like follow redirects and auth that you don't care about, it also means adding any other configuration requires changing the entire API. It would be best to have an object represent all extra configuration so as to be able to have a builder and easily configure more options.",Task,"To be reviewed",Done,"2017-11-09 15:02:19","2017-11-09 15:02:19",4
Mule,"ClassCastException: org.mule.runtime.api.meta.model.display.DisplayModel cannot be cast to org.mule.metadata.api.annotation.TypeAnnotation","When using DSLSyntaxResolver for MUnit Tools munit-tools-2.0.0-SNAPSHOT the following exception on Tooling serialization layer is thrown:  ",Bug,Critical,Resolved,"2017-11-08 23:09:32","2017-11-08 23:09:32",1
Mule,"Mule context not disposed if doTearDown method fails","If an AbstractMuleContextTestCase overrides de doTearDown() method and it fails, the muleContext of the test is not disposed before bubbling the exception up",Bug,Major,Closed,"2017-11-08 17:37:20","2017-11-08 17:37:20",1
Mule,"Soap Service NPE if the config is not configured properly.","*Soap Service NPE if the config is not configured properly.*    We should safely check if the service and port exist before quering them.",Bug,Minor,Resolved,"2017-11-08 15:45:26","2017-11-08 15:45:26",2
Mule,"Core extensions disposed before flows finish","When running SchedulerClusterAppTestCase a message appears in the log showing that the Hazelcast core extension was disposed before the flow scheduler executed for the last time.    This might happen in other cases too.",Bug,Major,Resolved,"2017-11-08 15:18:06","2017-11-08 15:18:06",8
Mule,"Create hamcrest matchers to assert EventContext state","Create hamcrest matches to assert EventContext state",Task,Minor,New,"2017-11-08 13:53:32","2017-11-08 13:53:32",2
Mule,"Optimize implementation of MULE-13756 for setting TCCL","Current implementation using zipWith() has overload",Task,Critical,Done,"2017-11-08 12:32:14","2017-11-08 12:32:14",2
Mule,"Use IO pool to execute blocking policies","Currently all policies run on selector.",Task,Critical,Done,"2017-11-08 12:30:07","2017-11-08 12:30:07",8
Mule,"Allow creation of custom schedulers providing the thread pool","Take for instance the case of the http listener. A single custom scheduler with its thread pool is shared among all listeners for its selectors. This prevents us from having the granularity needed for disposing servers individually and wait for each to finish their pending tasks (a symptom of this is MULE-13995 ).",Task,Critical,Done,"2017-11-08 12:21:05","2017-11-08 12:21:05",4
Mule,"ClassCastException logged when http request is finished after the http server is disposed","Run test case HttpServerClientTimeoutTestCase in branch http-cce of the http service (https://github.com/mulesoft/mule-http-service/blob/http-cce/src/test/java/org/mule/service/http/impl/functional/server/HttpServerClientTimeoutTestCase.java)    The disposal of the service should wait for all inflight requests to finish processing before actually disposing.    See also: https://github.com/mulesoft/mule/tree/http-cce",Bug,Minor,Closed,"2017-11-08 12:16:26","2017-11-08 12:16:26",4
Mule,"Registry object is not accesible from DW script","Try using registry from the a DW script (logger). It does not recognize the registry keyword. It should be part of the binding context as in the scripting module",Bug,Critical,Resolved,"2017-11-08 12:15:46","2017-11-08 12:15:46",2
Mule,"Support constructor parameters in <object> component and reference initialise method","To cover most use cases without much overhead we should add constructor argument for the creation of java objects with the <object> component as well a property to point to an initialise and destroy custom method.","Enhancement Request","To be reviewed","In Progress","2017-11-08 11:50:03","2017-11-08 11:50:03",4
Mule,"Fix tests: ProxyServiceDecryptedNotAvailableAsPayload and InboundMessageLossTestCase#testRollbackExceptionStrategyConsumesMessage","Both tests are failing if executed locally but not while executed in Jenkins remote server.",Task,Major,Done,"2017-11-07 20:54:21","2017-11-07 20:54:21",2
Mule,"Type Changes are inconsistent on MEL","While adding more tests for MULE-13970, I found there are some scenarios where Mel doesn't work correctly in case of type changes.     First, review how plausible are those scenarios, and fix them if it is needed to.     Tests are:  PropertyAccessTest#testAccessOptionalListWithOptionalMapOfMap   PropertyAccessTest#testAccessWithOptionalMapOfOptionalMap",Bug,"To be reviewed",Open,"2017-11-07 20:43:54","2017-11-07 20:43:54",8
Mule,"PoC on how make the SDK work with the AST","Think about all the things are required to make the SDK work with AST and be able to support the SDK IDE.    In a long-term this work should imply:   # The AbstractAnnotationProcessor should work with either Java Classes and AST.   # Improve Error Reporting   ## Indicate which are the fields/classes/methods/annotations with issues   ## Errors should be communicated as errors, warnings as warnings   ## Work over SyntaxValidators and how current validators will work with the AST.     ",Task,Blocker,Done,"2017-11-07 19:54:50","2017-11-07 19:54:50",8
Mule,"JMS Cached Listener never stops","JMS Cached Listener never stops    When the MessageListener is created by a CachedConnection, the consumers are disposed of incorrectly, as consequence, the Listener keeps listening to messages until the connection is closed.",Bug,Critical,Closed,"2017-11-07 18:30:02","2017-11-07 18:30:02",1
Mule,"Metadata propagation for output variables on a batch job does not work.","After defining custom metadata for the output variables on a batch job, those variables are not propagated through the flow.",Bug,Major,Resolved,"2017-11-07 16:59:30","2017-11-07 16:59:30",0
Mule,"DSLSyntaxResolver for a metadata type is not returning the expected information","When resolving the DSL for a metadata type, the information retrieved is not matching the expected one.    For example, in the validation module the org.mule.extension.validation.api.I18NConfig POJO support top-level declaration, yet its DSL it says it doesn't",Bug,Blocker,Resolved,"2017-11-07 14:51:24","2017-11-07 14:51:24",4
Mule,"Find a workaround for not having to detect policy logger context in runtime","After resolution of MULE-13918, an additional conditional for detecting if a classloader owner is a policy was added in ArtifactAwareContextSelector.    This might reduce performance a bit since this is calculated at runtime. The idea is to find a way to cache this, to avoid that calculation",Task,Major,Done,"2017-11-06 20:14:25","2017-11-06 20:14:25",2
Mule,"ClassDefNotFound when using MetadataCache","When using MetadataCache the proxy tries to create an internal class and when using this on different contexts (isolated, such Eclipse/Studio) the implementation class has to be exported too.    Instead Tooling API should already provide an implementation on API for this class. ",Bug,Minor,Resolved,"2017-11-06 19:05:40","2017-11-06 19:05:40",1
Mule,"Improve log testing","Add funcionality for the OnErrorCheckLog error handler.   We should be able to distinguish different cases:  -Exception not handled  -Exception handled but not logged  -Exception handled and logged with a different message than expected  -Exception handled and logged with the message expected    Use this to test duplicate logging in policies",Task,Minor,Done,"2017-11-06 17:55:47","2017-11-06 17:55:47",2
Mule,"Improve header handling performance in ResponseCompletionHandler","Avoid querying the headers map after iterating it, to avoid the performance cost of the case insensitiveness of headers.",Task,"To be reviewed",Done,"2017-11-06 14:57:18","2017-11-06 14:57:18",1
Mule,"Improve performance of cluster UUID generation","Improve performance of cluster UUID generation",Bug,Major,Resolved,"2017-11-06 14:04:07","2017-11-06 14:04:07",1
Mule,"Replace log4j-jul and log4j-jcl with jul-to-slf4j and jcl-over-slf4j","Checking if a log level is enabled using the JUL api has different processing times depending on the bridge used.    Benchmarking showed that jul-to-slf4j outperforms log4j-jul in a 1:10 ratio. Since this check using the jul api is used heavily by grizzly, making this change should improve the performance of the http service.  ",Task,Major,Done,"2017-11-06 12:58:43","2017-11-06 12:58:43",4
Mule,"DataWeave Java written functions doesn't work correctly with non-java types","*DataWeave Java written Functions doesn't work with non-java types*    * DataWeave java written functions always coerces the input parameters to Java Types, this makes impossible to use these functions with non-Java types.  * Take the following function written with the SDK as example: {code}      public InputStream validateXml(InputStream payload) {      aValidation(payload);      return payload;    }{code}   This have two main issues:  ** All the parameters are coerced to Java, so if i call the function with the following XML: {code:xml}<?xml version=1.0 encoding=UTF-8?>  <?xml-stylesheet type=text/css href=cd_catalog.css?>  <CATALOG>    <CD>      <TITLE>Empire Burlesque</TITLE>      <ARTIST>Bob Dylan</ARTIST>      <COUNTRY>USA</COUNTRY>      <COMPANY>Columbia</COMPANY>      <PRICE>10.90</PRICE>      <YEAR>1985</YEAR>    </CD>  </CATALOG>{code} this value will be automatically coerced to a Java object which can't be injected into the function which expects an InputStream:  {code}org.mule.weave.v2.module.core.exception.UnexpectedFunctionCallTypesException: 1| Fn::validateXml(payload)     ^^^^^^^^^^^^^^^^^^^  You called the function 'logger' with these arguments:     1: Object ({CATALOG: {CD: {TITLE: Empire Burlesque, ARTIST: Bob Dylan, COUNTRY: USA...)    But it expects arguments of these types:    1: Binary      Trace:    at 'logger' in (anonymous:1:1)    at 'main'   in (anonymous:1:1)  {code}  ** Coertion to Java loose data: If you now have the following XML : {code:xml}<?xml version=1.0 encoding=UTF-8?>  <?xml-stylesheet type=text/css href=cd_catalog.css?>  <CATALOG>    <CD>      <TITLE>Empire Burlesque</TITLE>      <ARTIST>Bob Dylan</ARTIST>      <COUNTRY>USA</COUNTRY>      <COMPANY>Columbia</COMPANY>      <PRICE>10.90</PRICE>      <YEAR>1985</YEAR>    </CD>    <CD>      <TITLE>Hide your heart</TITLE>      <ARTIST>Bonnie Tyler</ARTIST>      <COUNTRY>UK</COUNTRY>      <COMPANY>CBS Records</COMPANY>      <PRICE>9.90</PRICE>      <YEAR>1988</YEAR>    </CD>  </CATALOG>{code} the automatic coertion will return you : {code}{CATALOG={CD={TITLE=Hide your heart, ARTIST=Bonnie Tyler, COUNTRY=UK, COMPANY=CBS Records, PRICE=9.90, YEAR=1988}}}{code}. And because Java maps doesn't support repeated keys, which XML does, you loose data, in addition to XML element attributes that also are not mapped to java automatically.    As conclusion, java written DataWeave functions behave totally different than any other DW function, they are not consistent with any native DW functions, and an example of this is the *lookup* function, ({{lookup(flowName, newPayload}}), a user will think that *newPayload* will be a plain injection of the given value, but not, the *flowName* flow will be executed with a coerced value of the *newPayload* expression, with all the consequences explained above.     Functions as {{xpath3}}, json and xml module related functions are not possible with the current behaviour. ",Bug,Major,Closed,"2017-11-04 23:24:00","2017-11-04 23:24:00",5
Mule,"Lookup function is propagating previous message mime type","It should only handle java inputs but it's taking those values with the mime type of the previous message.",Bug,"To be reviewed",Closed,"2017-11-03 22:34:30","2017-11-03 22:34:30",2
Mule,"HttpServerRule port range starts at 0","Fix HttpServerRule and FreePortFinder",Bug,"To be reviewed",Closed,"2017-11-03 22:12:52","2017-11-03 22:12:52",1
Mule,"SAXParseException when deploying apps using parallel deployment","When using parallel deployment, once in a while an application or policy may fail to be deployed due to an error parsing the xml config.    The error is not very frequent, deploying 50 apps 10 times it happened on three occasions.    The issue seems to be caused by this jdk bug:    [https://bugs.openjdk.java.net/browse/JDK-6947916]  ",Bug,Major,Resolved,"2017-11-03 21:38:10","2017-11-03 21:38:10",4
Mule,"DefaultComponentLocation not working in case there is no part identifier","DefaultComponentLocation manages an empty part identifier since its creatation, but no when asking for it on getComponentIdentifier. ",Bug,"To be reviewed",Resolved,"2017-11-03 19:47:38","2017-11-03 19:47:38",2
Mule,"Mule should not log OVERLOAD errors caused by flow back-pressure at ERROR level","Mule should not log OVERLOAD errors at ERROR level to ensure that when mule is overloaded is performance is not degraded.",Bug,"To be reviewed",Resolved,"2017-11-03 18:12:35","2017-11-03 18:12:35",2
Mule,"Tests using TransactedPollingMessageReceiver generate very big logs","The receiver is continuously polling which fails because a transaction is not active. Tha exceptions is handled and logged.    Since the polling is continuous, the logging generated is very big.",Bug,"To be reviewed",Closed,"2017-11-03 16:49:59","2017-11-03 16:49:59",2
Mule,"Serialization error for MavenConfiguration on Tooling API","An error ocurred while bootstraping Tooling:  ",Bug,Minor,Resolved,"2017-11-03 16:43:04","2017-11-03 16:43:04",1
Mule,"Tooling client bootstrap hangs because of missing org.slf4j.impl.StaticMDCBinder","Tooling client bootstrap hangs at start because of missing MDC binder:    Error:  ",Bug,Blocker,Resolved,"2017-11-03 13:58:25","2017-11-03 13:58:25",1
Mule,"NullPointerException in performance tests that create a MuleContext","When running the benchmark tests that create a MuleContext, a NullPointerException occurs in the ObjectStoreManager initialization",Bug,Minor,Closed,"2017-11-03 12:47:26","2017-11-03 12:47:26",1
Mule,"Tooling MetadataCache should allow clients to know if metadata resolution has failed","This will allow clients to avoid caching failure metadata results. Or if needed they could allow customers to invalidate the failure metadata.",Bug,Major,Resolved,"2017-11-03 00:58:20","2017-11-03 00:58:20",2
Mule,"Add search methods by name to ConfigurationModel and ExtensionModel DTO on Tooling API","Create a way to find an OperationModel in a ConfigurationModel by name. ([link title|https://github.com/mulesoft/mule-api/blob/master/src/main/java/org/mule/runtime/api/meta/model/operation/HasOperationModels.java#L41])    Create a way to find a ConfigurationModel in an ExtensionModel by name. ([link title|https://github.com/mulesoft/mule-api/blob/master/src/main/java/org/mule/runtime/api/meta/model/ExtensionModel.java#L97])",Task,Major,Done,"2017-11-02 20:01:00","2017-11-02 20:01:00",1
Mule,"Race condition on Executors startup with SynchronousQueue","When using a SynchronousQueue on an Executor, even if calling prestartAllCoreThreads(), a race condition may occur where the worker threads are started but before it starts to take elements from the queue, the user of the Executor dispatches some task to it. <p> In that case, the task will be rejected. To avoid this, a wait is forced until the core thread is actually taking tasks from the queue.",Bug,"To be reviewed",Closed,"2017-11-02 17:07:45","2017-11-02 17:07:45",1
Mule,"Optimise AbstractEventContext callbacks for performance","Optimise AbstractEventContext callbacks for performance",Task,Critical,Done,"2017-11-02 11:04:22","2017-11-02 11:04:22",4
Mule,"ConstructModel class is not consistent with ComponentModel in tooling api","The Construct class (https://github.com/mulesoft/mule-tooling-api/blob/master/mule-runtime-tooling-api/src/main/java/org/mule/tooling/client/api/extension/model/construct/ConstructModel.java#L24) does not include errorModel related information and its getDisplayModel method is inconsistent with the rest of the componentModel implementations as it should return an Optional instead of the sole object.",Bug,Blocker,Resolved,"2017-11-01 20:34:26","2017-11-01 20:34:26",2
Mule,"Make schedulers monitor system load and reject tasks if resources are tight","Schedulers should start rejecting work when resources start getting tight.    An approach to do this would be to have a global inflight event counter, working in a similar fashion to the maxConcurrency at the flow level, and trigger backpressure if that value is exceeded.    The limit would in turn be adjustable by monitoring resources usage (memory primarily), increasing the limit if resources are idle, or decreasing if most are busy. The ultimate goal of this is to operate at max capacity but triggering backpressure before throwing an OOM.",Task,"To be reviewed",New,"2017-11-01 18:15:30","2017-11-01 18:15:30",8
Mule,"In Message Filter, unacceptedMessageProcessor is not being notified","Having the following configuration:           The logger inside the subflow is not being notified through the _MessageProcessorNotificationListener_  This causes that Studio cannot debug MPs inside the subflow and that munit cannot report coverage of the MPs inside the subflow.",Bug,"To be reviewed",Resolved,"2017-11-01 18:13:20","2017-11-01 18:13:20",0
Mule,"Information of the event is not exposed on the BatchNotification","For the debugger to work I need to know when a batch job is started and when it's finished. As the interception API does not provide this I added the notifications back to get this information. Right now the BatchNotification does not expose any data on the event that was the source of that job which I need (the correlation id specifically) in order to continue the execution for a particular event.",Bug,Major,Closed,"2017-11-01 14:54:49","2017-11-01 14:54:49",1
Mule,"Allow correlationID to be customised in source using a value from the incoming message.","By default, the flow should use either an incoming external correlationID or a UUID as a correlationID for a new Flow execution but there are also use cases where:     - The user would prefer to define there own method to generate a correlationID (e.g. use a simple timestamp instead of Mule's UUID)   - The user would prefer to use a natural correlationID from the message payload (e.g. a unique order Id)     This later use case was possible in Mule 3 via the message-info-mapping functionality which has been removed in Mule 4. The Mule 3 approach had issues though, particularly when combined with the fact that correlationId could be mutated during the flow. In Mule 4 the correlationID should be allowed to optionally be defined in the source but then fixed throughout the whole flow execution.","Enhancement Request","To be reviewed",Closed,"2017-11-01 11:12:34","2017-11-01 11:12:34",4
Mule,"Log correlationId as part of HTTP requester selector log output","Mule now consistently logs the event correlationId as part of per-message log output.  Log output produced by the selector thread in the requester including wire logging does not, however, include this correlationId making the correlation of wire logging output and other log output extremely hard.    While the use of a custom header has been suggested as an option to help here, this is not really suitable because:  - This would need to be explicitly configured by the user, and therefore is of no use from a support perspective.  - Even if the correlationID is set manually by the user in all new apps, the use of this value by grep/splunk and other tools is still a significant issue, because it is not possible to treat all log entries in the same way; in some the correlationId would be matched in the header of the log output, and in others the content of the log output would need to be searched.    This would need to be a point solution for HTTP for sure, but that is because this is specific to HTTP and there is no way of implementing anything like this generically given each connector has it's own specific implementations.    While this involves some amount of customization in the use of AHC in the HTTP connector the value gained from this improvement outweighs the cost of doing this pretty significantly IMO especially given the wide usage of HTTP.","Enhancement Request","To be reviewed",Closed,"2017-11-01 11:03:27","2017-11-01 11:03:27",4
Mule,"CorrelationId should be propagated from flow to other flows or systems via connector operations","When a JMS/AMQP or other messaging connector operation is used (e.g. jms:publish) the Flow correlationID should be propagated via the outbound message as an external correlationID (as defined in the relevant specification).    This is important both from a functional perspective to allow for traceability of transactions across multiple flows and external applications via analytics/insights, log output and customer use of Splunk and other such tools. But is also very important for the supportability of customer solutions by our support team.    Given traceability and supportability is a cross-cutting concern of huge value to users of our platform, propagation of correlationID's for this purpose should happen by default and the user should not need to i) turn it on specifically ii) have any specific knowledge of what specific headers should be configured manually in order to achieve the necessary propagation to achieve traceability and supportability.    This applies to all connectors where the concept of correlationId is present in the spec, but we should seriously consider also using X-Correlation-ID on outbound HTTP messages too. (this is not a standard but is best practice). See: http://hilton.org.uk/blog/microservices-correlation-id https://blog.logentries.com/2016/12/the-value-of-correlation-ids/ See: MULE-14085     We already allow for the correlationID to be customised using a DW expression (in some connectors) but the default behaviour, if this is not configured, should be to propagate the flow correlationID.    Note that to achieve traceability/supportability and functionally match Mule 3 in this regard MULE-13927 is also needed.    A future improvement, if there is need for it, would be to not only allow the outbound correlationId to be customized, but to allow it's use to be disabled completely. See MULE-14086.","Enhancement Request",Major,Closed,"2017-11-01 10:49:20","2017-11-01 10:49:20",8
Mule,"CorrelationId is not propagated from connector sources to Flow","When a JMS/AMQP or other messaging connector source is used the inbound correlationID (as defined in the relevant specification) should be propagated to the Flow by creating the EventContext using this external correlationID instead of passing null and allowing it to generate a UUID.    This is important because:  - It is a regression from 3.x  - The EventContext javadoc states that external correlationId is available via getCorrelationId()  - This was discussed in detail with use case and reviewed by support when new eventContext/event/message model was defined and current implementation does not match what was defined.  - From a user perspective, it is important that if an external correlationId is present that this is seen in log entries and in insights/analytics records instead of a UUID in the platform.  - From a supportability perspective not maintaining the external correlationID makes it much harder for users and our support team to find/resolve issues.    This applies to all connectors where the concept of correlationId is present in the spec, but we should also consider using X-Correlation-ID if present in inbound HTTP messages too.  (this is not a standard but is best practice)    A future improvement should allow the correlationID to be customised in the source using a DW expression DW, but the default behaviour should be to use an external correlationID. See MULE-13930.      ","Enhancement Request",Major,Closed,"2017-11-01 10:24:30","2017-11-01 10:24:30",5
Mule,"VM listener drops messages in overflow scenarios","If the listener generates messages faster than the flow can process them, MULE-13925 and MULE-13924 manifest and the messages are lost.    As a work around, use a <scheduler /> with a transactional <vm:consume> instead",Bug,Critical,Closed,"2017-10-31 21:37:49","2017-10-31 21:37:49",3
Mule,"If an SDK Java operation has an Alias with an invalid character a ConfigurationException is thrown ","If an operation declares an invalid alias an error is thrown:    The following error is thrown:    It would be better to handle this while extension model is generated and hyphenized     ",Bug,Minor,Closed,"2017-10-31 21:17:36","2017-10-31 21:17:36",3
Mule,"NoClassDefFoundError: org/mule/runtime/core/internal/connection/HasDelegate","When running any functional test in Oracle EBS Connector, we are getting the attached stacktrace.    The same happens when attempting to run a Mule application using the connector in Mozart QAX.    Not 100% sure if this is an SDK issue or if it's something in the connector. But I know the RC connector used to work.    Steps to reproduce:  1. Checkout oracle-ebs-connector develop branch. This is the latest commit at this moment: https://github.com/mulesoft/oracle-ebs-connector/commit/f74044c6171ed1d3f847e4b5b298b9832bb9b143  2. mvn clean install -DskipTests  3. Attempt to run any functional test case, such as CrudDeltaServicesMetadataTestCase.",Bug,Critical,Resolved,"2017-10-31 19:32:05","2017-10-31 19:32:05",8
Mule,"Add Value Providers for SubSubProtocols in Derby Connection Provider","Add Value Providers for SubSubProtocols in Derby Connection Provider","Enhancement Request",Minor,Closed,"2017-10-31 18:21:50","2017-10-31 18:21:50",1
Mule,"@Stereotypes annotation is not being exported","@Stereotypes annotation is not being exporteed, there is something is the routers schema generation that is failing when this annotation is being exported.",Bug,Blocker,Closed,"2017-10-31 17:53:40","2017-10-31 17:53:40",5
Mule,"Plugin classloader not re-used when policy has it as a transitive dependency","When a policy has a direct dependency on a plugin that the app also has, then the plugin classloader is reused. This is not happening when that plugin is not a direct dependency but a transitive one. For example, a policy that defines APIKIT, which has HTTP as transitive.    Was not able to create a test to reproduce this, but we have one in our repo that is failing because of this: https://github.com/mulesoft/mule-raml-validator-policy/blob/1.x/integration-tests/src/test/java/com/mulesoft/anypoint/templates/RamlValidatorPolicyTestCase.java    #badEndpointRequest     Placing a breakpoint in *org.mule.extension.http.api.policy.HttpListenerPolicyParametersTransformer*   in the line     you can verify that *HttpPolicyResponseAttributes* class, was loaded by two different classloaders (one the App's plugin, and the other, the policy's plugin)",Bug,Critical,Closed,"2017-10-31 17:42:18","2017-10-31 17:42:18",2
Mule,"Streaming Temporal files reused if mule is restarted","Because of the naming algorithm used when generating the streaming buffer files, if the runtime is restarted, the content from past streams is used instead of the ones from the current streams",Bug,Blocker,Closed,"2017-10-30 21:18:34","2017-10-30 21:18:34",5
Mule,"Allow to enable a minimal application model for DataSense","Allow to resolve the minimal application model, right now the code is using the component building definition providers to visit the attributes definitions, that may not work on contexts where the definition is not present.  Another approach would be to enable defining the building definition without the need of the class loader.",Task,Critical,Done,"2017-10-30 20:39:32","2017-10-30 20:39:32",16
Mule,"Move WSDL parser to 1.0.0-SNAPSHOT","Move WSDL parser to 0.9.0-SNAPSHOT",Task,Major,Done,"2017-10-30 18:06:20","2017-10-30 18:06:20",1
Mule,"Paths on Import element are OS based","*Paths in Import files element are OS based*    Configuring the following import in a Mule application will only work for forward-slash OSes, like macOS and Linux, but not in Windows.         Connector's team says that the above configuration worked correctly in all OSes in the RC release, so this is a regression.",Bug,Critical,Resolved,"2017-10-30 17:19:01","2017-10-30 17:19:01",2
Mule,"HTTP worker unavailability error should be different than generic rejected execution","Currently these two scenarios produce the same 503 (service unavailable) error response:  - The HTTP service fails to schedule a task when receiving a request.  - A task was successfully scheduled, but then it fails when using the scheduler pool (foreach, etc).    But in the second case a generic 500 (internal server error) should be returned.    A possible fix would be to catch the RejectedExecutionException when submitting the task to the scheduler in the HTTP service listener, and wrap it so that it can be identified in the HttpListener source onError callback.",Bug,Critical,Resolved,"2017-10-30 15:03:24","2017-10-30 15:03:24",4
Mule,"Have Component provide a rootContainerLocation","This affects performance.",Task,"To be reviewed",Done,"2017-10-30 14:01:07","2017-10-30 14:01:07",4
Mule,"Update system test to use a server plugin packaged with the maven plugin","Migrate com.mulesoft.mule.distributions.server.plugin.MuleManagementTestCase to use server plugins with the new format instead of the one using the old properties descriptor.     Ideally, those server plugins have to be packaged using the mule-server-plugin-maven-plugin",Task,Major,Done,"2017-10-29 02:30:06","2017-10-29 02:30:06",2
Mule,"Fix flaky error handling unit tests","Fix those flaky tests",Task,"To be reviewed",Done,"2017-10-28 16:08:55","2017-10-28 15:08:55",1
Mule,"Support initialisable operation parameters","Operations can only take parameters defined as method arguments, which are only available when the operation is invoked.    There are cases in which it is necessary to have some parameters already resolved during the lifecycle phase. We should support annotating fields with @Parameters (no expressions supported).         Those parameters should already be resolved at deployment time.","Enhancement Request",Critical,Closed,"2017-10-27 21:25:16","2017-10-27 20:25:16",5
Mule,"DISCARD_OLDEST as rejection policy must discard messages when max buffer size is 0","DISCARD_OLDEST as rejection policy must discard messages when max buffer size is 0.    If the max buffer is more than 0 and maxThreadsActive > 1, it must work as now:    discarding the oldest request in the workQueue and attempting again to execute de runnable. This won't generate a stackoverflow as in the worst case, the it will be enqueue in the workqueue (buffer).",Bug,"To be reviewed",Resolved,"2017-10-27 18:41:09","2017-10-27 17:41:09",0
Mule,"Mule Maven plugins must shade mule dependencies","Otherwise, the mule-uber build fails.",Bug,Critical,Closed,"2017-10-27 16:26:49","2017-10-27 15:26:49",2
Mule,"Improve how URIs are created","URI creation is done in several classes (e.g. HttpResponseToResult, HttpRequestFactory, NameResolvingRequestBuilder), so many are being created more than once.",Bug,Major,Resolved,"2017-10-27 16:18:35","2017-10-27 15:18:35",8
Mule,"DataSense not working for plugins that defined Routes with SDK","Tooling Client is not able to load the componentBuidlingDefinitionProvider for plugins that define Routes.    It is trying to access a class for resolving the parsers for Route:  ",Bug,Blocker,Resolved,"2017-10-26 17:16:16","2017-10-26 16:16:16",8
Mule,"Upgrade reactor to 3.1.1",https://github.com/reactor/reactor-core/releases/tag/v3.1.1.RELEASE,Task,Major,Done,"2017-10-26 22:43:49","2017-10-26 21:43:49",1
Mule,"For Each should not warn when the thing to split is an empty array","*Split expression returned no results. If this is not expected please check your expression*   * When the For Each tries to iterate something and splits the thing into pieces if no elements are found, it logs the following warning: {{Split expression returned no results. If this is not expected please check your expression}}   * These logs are correct, but maybe confuses more than help. In cases where the thing to split is an empty array, doesn't make sense to log this warn because makes the logs too verbose and is totally valid to have an empty array, but when the thing to split is not an array empty array and could not be split, log the warning","Enhancement Request",Minor,Open,"2017-10-26 19:32:10","2017-10-26 18:32:10",2
Mule,"Non repeatable streams are not managed to guarantee closing them","When using non repeatable streams these are not managed since none of the repeatable capabilities will be injected. However, another part of that management is guaranteeing that the streams are closed once the root event is completed. As a consequence, when the scheduler is unavailable and a MULE:OVERLOAD error raised there's no way to close the payload stream.   In the case of the HTTP request operation, zombie streams end up taking over all selector threads and blocking.",Bug,Critical,Closed,"2017-10-26 17:46:44","2017-10-26 16:46:44",5
Mule,"Chained try elements generate multiple logs for the same error","When chaining several try elements, the same error is logged several times, as the error is catched by every implicit on-error-propagate that each implicit error handler has. This is happening because the property logException is true by default.    This is an example of a flow that logs several times the same error:      The same problem appears when applying several policies to an app. If the application throws an unexpected error, it is logged: in the app and on every policy that is applied to it.    Users may not know that all those logs are referred to the same problem. ",Bug,Critical,Resolved,"2017-10-26 16:06:03","2017-10-26 15:06:03",4
Mule,"Stereotype information is lost when used in extension types","The object store extension contributes with 2 object stores, both annotated with the following annotation:      But this information is not being serialized into the JSON that represents it making impossible for the tooling client to retrieve it.    Because of this, the object store extension cannot be used properly from Studio, as we don't have the necessary information to link all the elements.",Bug,Critical,Resolved,"2017-10-26 15:13:43","2017-10-26 14:13:43",3
Mule,"Exception are logged everytime you invoke metadata propagation","Whenever Studio invokes the tooling client to get propagation in an app, the following exception is logged:      The app has the following lof4j.xml configuration:      This is the default configuration we are creating for every single app.",Bug,Critical,Resolved,"2017-10-25 20:36:53","2017-10-25 19:36:53",2
Mule,"Add enforcer plugin to all of the UBER projects to validate snapshots ","Add enforcer plugin to all of the UBER projects to validate snapshots",Task,"To be reviewed",Done,"2017-08-03 16:08:59","2017-08-03 15:08:59",2
Mule,"Passing in \t as the separator to CSV writer crashes the runtime","Steps to reproduce in Studio 7 RC:    1. Add HTTP Listener  2. Add Transform message  3. Use the script:        4. Execute the flow and the following error message is returned:    ",Bug,Major,Resolved,"2017-10-23 23:42:18","2017-10-23 22:42:18",0
Mule,"ComponentModel#getNameAttribute for configuration tag return null","Have a mule config with a configuration tag (for instance, for setting a global error handler).    When calling ConfigurationComponentLocator#findAllLocations(), the location for the configuration returns the string null. I traced this to ComponentLocationVisitor line 98, where it returns null.",Bug,"To be reviewed",Resolved,"2017-10-25 15:42:48","2017-10-25 14:42:48",2
Mule,"MetadataKeyIdModelProperty NotExportedClassException on Tooling Client when loading extension model",,Bug,Critical,Resolved,"2017-10-25 15:40:18","2017-10-25 14:40:18",2
Mule,"DefaultScheduler#shutdownNow returns tasks that have already ran","The tasks that are returned in shutdownNow are stored in the scheduler.    It is storing the tasks that shouldn't be returned ant they end up taking a lot of memory that is not GC'd.",Bug,Critical,Closed,"2017-10-25 02:20:25","2017-10-25 01:20:25",2
Mule,"SFDC Connector failing while trying to delete records by id","Referred to the attached Mule App, SFDC Connector fails while trying to delete a record by id.    As:    is being ignored, the dafault value #*[payload]* is taken. The result is the following exception:              Steps to reproduce:   # Unzip sfdc-example.zip   # Import to Studio 7.rc with File - Import Projects from System or Archive   # Run the Mule App   # Make a POST call to [http://localhost:8081/]          ",Bug,Blocker,Closed,"2017-10-25 00:55:04","2017-10-24 23:55:04",3
Mule,"VM consume operation collides with listener","Publish operation validates that no message is posted to a queue for which a listener doesn't exist. However, the consume operation exists. This generates two problems:   * Race condition between the consume operation and the listener   * If two apps in a domain are using VM to communicate with each other and one gets undeployed, the other would fail to publish messages because there's no listener anymore.    This validation needs to be lifted. On the contrary, the consume operation has to validate it's not trying to pull from a queue for which a listener exists.",Bug,Critical,Closed,"2017-10-24 22:33:43","2017-10-24 21:33:43",5
Mule,"Fix flaky PollScheduleNotificationTestCase#validateNotificationsAreSent","The test runs ok locally, but fails most of the time in CI.",Task,Major,Done,"2017-10-24 19:01:05","2017-10-24 18:01:05",4
Mule,"Enum config parameters are not set correctly","We are migrating ServiceNow from RC to SNAPSHOT.  Its SoapServiceProvider implementation, BasicServiceProvider, has this configurable parameter:        When attempting to run the functional tests, it's trying to set that default string into the config, and fails because the attribute is not a string.  This used to work fine in RC.    Log is attached.    Steps to reproduce:    1. Get the code from https://github.com/mulesoft/servicenow-wsdl-connector/tree/SNOWW-71  2. Run any of the functional tests  If an automation-credentials.properties file is needed, let me know.",Bug,Critical,Closed,"2017-10-24 18:43:38","2017-10-24 17:43:38",2
Mule,"LinkageError when disposing app with policy","When an app with a policy applied is disposed, a stack trace with a LinkageError appears:        This can be reviewed executing most of the tests in ApplicationPolicyDeploymentTestCase in mule's project. The stack trace appears in the console",Bug,Major,Resolved,"2017-10-23 22:39:47","2017-10-23 21:39:47",2
Mule,"Notifications fail in test:processor when flow executions wait","In the test HttpListenerOverloadTestCase, remove enableNotifications=false from http-listener-overload-config.xml so that notifications are enabled and run it.",Bug,Major,Resolved,"2017-10-23 22:20:35","2017-10-23 21:20:35",2
Mule,"Non descriptive error when returning an implementation of PagingProvider","I'm getting an error when doing the following:   - Create a PagingProvider implementation (with it's generics set)   - Setting it as a return value for the operation instead of PagingProvider<MyConn, MyObject>   - running maven clean compile    The exception I get is:  ",Task,Minor,Done,"2017-10-23 22:14:00","2017-10-23 21:14:00",3
Mule,"Unable to fetch the CorrelationId from message","*Unable to fetch the CorrelationId from message*    In Mule4 the user is unable to fetch the Correlation ID of the message.    Review if this is still necessary for Mule 4",Bug,"To be reviewed",Resolved,"2017-10-23 20:12:16","2017-10-23 19:12:16",2
Mule,"Begin a TX inside of another should make the app fail instead of commit the original TX","With the current Mule Config:    *Current Behaviour*:   When trying to execute the second *try* scope, the original TX will be committed, as consequence the *operations1* will be executed inside the first TX, *operations2* will be executed in the second TX, and *operations3* which statically should be executed inside the first TX, it will be executed outside of any TX because the corresponded TX is already closed.    *Expected Behaviour* :   If a TX is tried to be opened inside other TX this should fail.    *Things to consider*:   * *ALWAYS_BEGIN* loses any kind of sense to keep existing, because in any case that you force to create a new TX, or it will be created because no previously was created this means the same behaviour as *BEGIN_OR_JOIN*.   * The current behaviour of the *ALWAYS_BEGIN* as the JavaDocs say is the equivalent of the J2EE's *RequiresNew*, but the expected behaviour if the *RequiresNew* is totally different when a new one is required, the original TX is suspended for the execution of the new one, behaviour that doesn't occur in Mule.   * If *ALWAYS_BEGIN* keeps existing, and this construction is invalid, this could be validated in a future when compiling the application.",Bug,Critical,Closed,"2017-10-23 18:47:39","2017-10-23 17:47:39",8
Mule,"MetadataKey Serializer brokes with MetadataKeys with more than two levels","*MetadataKey Serializer brokes with MetadataKeys with more than two levels*    * The *MetadataKeyTypeAdapter* is not reusing correctly the *gson* instance and looses the capability of deserialize correctly child keys.    ",Bug,Blocker,Closed,"2017-10-21 16:50:46","2017-10-21 15:50:46",3
Mule,"Create master branch and 0.9.x on Tooling Runtime Client","This will allow to deliver the two versions of Tooling (0.9.x and 1.x). Also define the mapping for implementation version on 0.9.x and review deployment scripts.",Task,Critical,Done,"2017-10-21 15:00:32","2017-10-21 14:00:32",2
Mule,"Make dependencies to distro and agent explicit in tooling modules","Some tooling modules require the mule distribution to run tests, referencing the maven dependency from a maven plugin.    But not having those dependencies as dependencies of the module causes that module to not wait for the distro build when building the uber, but tries to download it from the repo. This may cause problems because tooling tests end up running with an out-of-date distro.","Enhancement Request","To be reviewed",Resolved,"2017-10-20 19:07:22","2017-10-20 18:07:22",2
Mule,"Complete Dry Run Release 4.0.0 EA","Complete Dry Run Release 4.0.0 EA",Task,Critical,Done,"2017-10-12 16:33:26","2017-10-12 15:33:26",8
Mule,"CompositeChainRouter hanging route with O2S","If you have a MUnitTest which is implemented with a compositeChainRouter, with this looks:              The execution hangs.    But if you move the object-to-string-transformer in the validation route the execution completes normally      ",Bug,Major,Resolved,"2017-10-20 16:41:33","2017-10-20 15:41:33",4
Mule,"Upgrade maven-shade-plugin to 3.1.0","Using previous version has the bug https://issues.apache.org/jira/browse/MSHADE-258 which causes the build of the extensions-maven-plugin to fail",Bug,Critical,Resolved,"2017-10-20 16:35:33","2017-10-20 15:35:33",1
Mule,"Improve lazy init and apikit ","When using lazy init to start an app that contains apikit we need a way for APIkit to inform which are the flows that implement the API so that lazy init knows how to start them.     Otherwise most of the app won't be init as there will be no reference to those flows ","Enhancement Request",Major,Open,"2017-10-20 16:11:37","2017-10-20 15:11:37",8
Mule,"Upgrade Jackson to 2.9.2","Upgrade Jackson to 2.9.2",Task,Critical,Done,"2017-10-20 16:11:29","2017-10-20 15:11:29",4
Mule,"ResolverException should not be API and should have TRANSFORMATION error type","ResolverException is in API and it should be removed from there.   Also, check that it extends TransformerException or that it maps to TRANSFORMATION error type.",Bug,"To be reviewed",Closed,"2017-10-20 15:59:35","2017-10-20 14:59:35",2
Mule,"Stereotype name is lost after deserialization of tooling client model","Stereotype models generated from a POJO field cannot be properly consumed because the name is lost and you only get the information about the namespace and the parent stereotype.    This is affecting the WSC, as the HTTP requester config reference in the transport never reaches to studio, and cannot properly generate the link between the WSC and the HTTP extension models",Bug,Blocker,Resolved,"2017-10-20 12:18:42","2017-10-20 11:18:42",2
Mule,"Allow to reuse runner config without inherit all the config attributes","ArtifactClassLoaderRunnerConfig annotation used to configure test that run with    ArtifactClassLoaderRunner are currently scanned and the attributes for all the found configurations are merged into a new config.    This approach is useful to inherit some attributes like testInclusions/inclusions or providedExclusions but not so useful for attributes like sharedRuntimeLibs and     extraPrivilegedArtifacts. The difference between those attributes is that the latest ones are validated against the pom for each executed test, requiring that the dependencies defined on those attributes are also defined on the pom.    As some base test classes are reused from other modules, we want to reuse the code on those tests, but not necessarily to have the same classloader configuration. (shared libs for example)    So, the idea is to inherit all the attributes that define inclusions/exclusions but only use the attributes that define dependencies from only one configuration.",Task,Major,Done,"2017-10-20 03:03:45","2017-10-20 02:03:45",0
Mule,"When loading extension models resolving dependencies, provided dependencies are required","Currently some dependencies that may be provided later by the user as sharedDependencies (drivers) are being added to the connector's pom.xml file as provided dependencies, which may or may not be necessary for using the connector (depending on which connection providers are used for example).  Currently, the logic for resolving an extension model from a file (when the classloaderModel.json file is missing) is solving dependencies considering those provided ones, and if any of those dependencies is missing, loading the extension model fails.  This is a problem because the user may never eventually require that dependency and he may not know which dependencies to download (given he has a way to do it), if the extension model does not load without it, the user/tool can never know which dependencies he would need.    Below is the exception illustrating this issue with the Database connector and the mysql connector.  ",Bug,Critical,Resolved,"2017-10-19 22:29:06","2017-10-19 21:29:06",4
Mule,"Avoid validating flow name for each new source request event","Avoid validating flow name for each new source request event",Task,Major,Done,"2017-10-19 21:59:56","2017-10-19 20:59:56",1
Mule,"SDK Router to  be void","In MUnit we have an operation called spy which is implemented with an SDK Router     We would like to have that router to return the same even that received regardless what happened in each possible route.     Assuming we have *E1* (event 1) entering the following SDK spy router, where before-call & after-call are routes:     We wish that the event coming out of the spy to be *E1.*     That is, variables, attributes, properties, sessions, message and its payload to remain those that were in E1","Enhancement Request",Critical,Closed,"2017-10-19 21:04:22","2017-10-19 20:04:22",5
Mule,"Make the Schema and ExtensionModel generated at compile time","Make the Schema and ExtensionModel generated at compile or package time. ","Enhancement Request","To be reviewed",Closed,"2017-10-19 21:03:18","2017-10-19 20:03:18",8
Mule,"Change default sslType to use the JVM's one.","Current default sslType is being set to TLSv1 which is old and removed from our infrastructure. Though this does not mean it's being used it does alter the default cipher suites to use in socket scenarios since the list will be very limited. I believe we should use the JVM's default instead.",Bug,Critical,Closed,"2017-10-19 18:11:54","2017-10-19 17:11:54",2
Mule,"Use shared reactor stream(s) rather than once per event  for performance and back-pressure","Create reactor stream once per source thread rather than once per event.    This issue is required for:  - Performance (but also requires MULE-14113)  - To support back-pressure.    There are a number of options:  - Use single shared stream and synchronize onNext  - Use single shared stream with ringBuffer  - Use a shared stream for each source thread.    Before implementing this, some tests to decide the best approach for performance will be required.  Also need to determine if back-pressure per source thread works in some scenarios, or if we will always need more global back-pressure.    It will be hard to do performance testing of the different options without MULE-14113 complete.",Task,Critical,Done,"2017-10-19 16:48:33","2017-10-19 15:48:33",8
Mule,"ApplicationModel and ComponentModel must not be part of the API","ApplicationModel and ComponentModel must not be part of the API",Task,Blocker,Done,"2017-10-19 15:07:42","2017-10-19 14:07:42",4
Mule,"Some components are typified as UNKNOWN type","after the removal of the PROCESSOR type of the ComponentType some processors are being flagged as UNKNOWN when they should be flagged as operation",Bug,Critical,Resolved,"2017-10-19 15:02:21","2017-10-19 14:02:21",4
Mule,"Avoid resolving notification simple name whenever a notification is instantiated","Avoid resolving notification simple name whenever a notification is instantiated",Task,Major,Done,"2017-10-19 14:27:03","2017-10-19 13:27:03",1
Mule,"Remove unnecessary internal message processors in AbastractPipeline and DefaultFlow ","Remove unnecessary internal message processors in AbastractPipeline and DefaultFlow ",Task,Critical,Done,"2017-10-19 14:06:14","2017-10-19 13:06:14",2
Mule,"Create error message in HttpListenerPolicyPointcutParametersFactory lazily ","Create error message in HttpListenerPolicyPointcutParametersFactory lazily ",Task,Major,Done,"2017-10-19 13:32:39","2017-10-19 12:32:39",1
Mule,"Add ability to evaluate error message lazily when using preconditions.","Add ability to evaluate error message lazily when using preconditions.",Task,Major,Done,"2017-10-19 13:45:32","2017-10-19 12:45:32",1
Mule,"DslElementModel fails with recursive types","DslElementModel, used for Datasense resolution, fails with recursive types.",Bug,Critical,Closed,"2017-10-19 12:31:53","2017-10-19 11:31:53",3
Mule,"Soap Service is not passing the real soapAction but the soap operation name","Soap Service is not passing the real soapAction but the soap operation name",Bug,Critical,Resolved,"2017-10-18 22:33:09","2017-10-18 21:33:09",5
Mule,"MuleDeployableArtifactClassLoader not registered as parallelCapable","This may cause contention in classloading.",Bug,Critical,Resolved,"2017-10-18 21:51:11","2017-10-18 20:51:11",1
Mule,"Missing DefaultImplementingTypeModelProperty from Tooling API","Add mapping and include in API DefaultImplementingTypeModelProperty.",Bug,Major,Resolved,"2017-10-18 20:57:38","2017-10-18 19:57:38",1
Mule,"findAllLocations in ComponentLocator does not return not initted components","When running the container (embedded) with lazy init and using the class    ConfigurationComponentLocator#findAllLocations     It's not returning elements that have not been init",Bug,Critical,Resolved,"2017-10-18 16:11:28","2017-10-18 15:11:28",4
Mule,"Nullsafe should expose the TypeId of the default type","Nullsafe should expose the TypeId of the default type, otherwise Studio won't be able to generate the DSL for that element correctly.",Bug,Blocker,Closed,"2017-10-18 16:06:36","2017-10-18 15:06:36",3
Mule,"DslSyntaxResolver should not use class to resolve information about it","When resolving DslSyntax the class should not be used in order to run this on contexts where class loader for extension is not available.",Bug,Critical,Closed,"2017-10-18 15:48:36","2017-10-18 14:48:36",5
Mule,"Remove org.apache.logging.log4j:log4j-slf4j-impl from classpath","Logback is in conflict with log4j-sl4j-impl in Mozart because both of them are in the classpath:     Caused by: java.lang.IllegalArgumentException: LoggerFactory is not a Logback LoggerContext but Logback is on the classpath. Either remove Logback or the competing implementation (class org.apache.logging.slf4j.Log4jLoggerFactory loaded from file:/home/jenkins/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.6.2/log4j-slf4j-impl-2.6.2.jar). If you are using WebLogic you will need to add 'org.slf4j' to prefer-application-packages in WEB-INF/weblogic.xml Object of class [org.apache.logging.slf4j.Log4jLoggerFactory] must be an instance of class ch.qos.logback.classic.LoggerContext    We should remove log4j-sl4j-impl from the core. ",Bug,"To be reviewed",Resolved,"2017-10-18 15:38:44","2017-10-18 14:38:44",4
Mule,"In deployment service, only strings are allowed to be passed as properties","In deployment service, only strings are allowed to be passed as properties. Any type must be allowed.","Enhancement Request","To be reviewed",Open,"2017-10-17 18:26:04","2017-10-17 17:26:04",2
Mule,"extension-model.json still ship in extension binary","extension-model.json is still shipped in the binary.    Just like the schema, it needs to only be generated as a test-resource but not shipped in the end product",Bug,Blocker,Resolved,"2017-10-17 18:23:36","2017-10-17 17:23:36",5
Mule,"Operation's documentation is trimmed","*Operation's documentation is trimmed*",Bug,Major,Closed,"2017-10-17 15:10:40","2017-10-17 14:10:40",3
Mule,"Clean up notification helpers to improve performance","Review, cleanup and simply to avoid the use of caches where not needed in order to improve performance.    - NotificationHelper    - NotificationFiringProcessingPhase    - (maybe others too)",Task,Critical,Done,"2017-10-17 14:12:41","2017-10-17 13:12:41",2
Mule,"Upgrade third party Maven plugins to latest versions","Upgrade Maven plugins used in our build to its latest versions.",Task,Critical,Done,"2017-10-16 16:48:36","2017-10-16 15:48:36",8
Mule,"Create maven plugin to packager Mule server plugins","Need a maven plugin to package server plugins for Mule 4",Task,Major,Done,"2017-10-13 21:37:38","2017-10-13 20:37:38",1
Mule,"Deployment properties are not used on EmbeddedContainer when lazy init is enabled","When lazyInit is enabled by EmbeddedContainer the implementation is not using deploymentService, therefore the listeners for deployment are not being triggered and MUnit hooks are not called to enable their services.",Bug,Blocker,Resolved,"2017-10-13 20:21:02","2017-10-13 19:21:02",4
Mule,"Soap Service: add flag to log request/response","Soap Service: add flag to log request/response","Enhancement Request",Major,Resolved,"2017-10-13 18:21:25","2017-10-13 17:21:25",3
Mule,"Add minMuleVersion method to ExtensionModel DTO","Add minMuleVersion method to ExtensionModel DTO",Bug,Major,Resolved,"2017-10-13 16:31:39","2017-10-13 15:31:39",1
Mule,"Configs in MuleApplicationModel should be a Set not a List","Right now the MuleApplicationModel has the configs field which is a list, but this may lead to inconsistent behavior since it allows duplicate values. The field should be a Set.",Bug,"To be reviewed",Resolved,"2017-10-13 15:34:35","2017-10-13 14:34:35",1
Mule,"JMS Listener fails to reconnect","*JMS fails to reconnect*   * When a listener gets disconnected due to connection issues the JMS Listener can never start a connection again, due to:   ** In the {{ConnectionException}} JMS never communicates the disconnected connection to be reconnected.   ** When using a {{CachedConnectionFactory}} from *Spring JMS*, it has a bug that prevents the reconnection, this should be upgraded to fix this.",Bug,Blocker,Closed,"2017-10-13 15:01:32","2017-10-13 14:01:32",3
Mule,"Remove support for properties descriptors in service and server plugins","Container still supports services and server plugins packaged using the old model. This support must be removed before going GA.",Task,Blocker,Done,"2017-10-12 18:49:22","2017-10-12 17:49:22",1
Mule,"Remove support for properties descriptors in service and server plugins","Container still supports services and server plugins packaged using the old model. This support must be removed before going GA.",Task,Blocker,Done,"2017-10-12 18:49:21","2017-10-12 17:49:21",1
Mule,"Update logger to use DW logging function","Update logger to use DW logging function",Task,Blocker,Done,"2017-10-12 18:14:48","2017-10-12 17:14:48",2
Mule,"Tests plugins must be used on tests only","There are a couple of Mule plugins used for testing purposes or for compatiblity plugin.    We need to add extra checks to avoid having those plugins deployed on a productive application, as they are intended to be used only by us.",Task,Blocker,Done,"2017-10-12 17:58:52","2017-10-12 16:58:52",2
Mule,"Use extension model to determine the type of the components instead of the class","ComponentLocationVisitor must be changed so it does not depends on the class of the component to determine it's type. This is causing problems in Tooling Client since it requires the application classloader",Task,Critical,Done,"2017-10-12 14:46:37","2017-10-12 13:46:37",4
Mule,"Expose scheduler strategies configuration in API","For CH poll management feature we need to expose the scheduler strategies configuration parameters.",Task,Blocker,Done,"2017-10-12 14:43:48","2017-10-12 13:43:48",4
Mule,"Core elements in policies are executed with app classloader instead of policy classloader","In a policy, Mule's core elements are executed with the application classloader instead of the policy class loader. SDK operations are executed with the plugin classloader, so they work OK.    We found about this when recently adding an extension that only provided a DW function to the classloader. The policy was not able to resolve the function.    In this branch there is a test case that reproduces this: https://github.com/mulesoft/mule/tree/MULE-13775  The idea of the test is that the policy template has a class in it that the app don't, so it is failing to load it because it is using the app's classloader instead of the policy's",Bug,Blocker,Resolved,"2017-10-12 05:22:19","2017-10-12 04:22:19",4
Mule,"Add notifications to HTTP request","Notifications were removed from the HTTP requester because the API to handle them from extensions had not been defined yet. We need to bring those back.",Task,"To be reviewed",Done,"2017-10-11 19:48:50","2017-10-11 18:48:50",2
Mule,"OOM Metaspace while resolving DataSense on Tooling Runtime Client","Seems that when Tooling Runtime Client has heavy load the approach of keeping ClassLoaders alive for ExtensionModels is generating a Metaspace issue.",Bug,Critical,Resolved,"2017-10-11 19:44:10","2017-10-11 18:44:10",8
Mule,"Update bitronix version in 4.x to 2.1.7","Update bitronix version in 4.x to 2.1.7",Task,"To be reviewed",Done,"2017-10-11 18:04:07","2017-10-11 17:04:07",4
Mule,"Add missing external lib information for DB Connector","Add missing external lib information for DB Connector",Task,Major,Done,"2017-10-11 17:31:56","2017-10-11 16:31:56",1
Mule,"Transactions rolledback and commited twice when the TXs scopes are nested ","*Transactions rolled back twice when the TXs scopes are nested*    Looking the following case:      The JMS Listener starts a TX, then the {{try}} scope joins it, and finally an error occurs inside the {{try}}, what happens is that the try scope executes a rollback to the current TX and then the JMS Listener will execute again the same rollback.    From what I talked with [~pablo.lagreca.ce] is correct the behaviour of the {{Try}} scope, in some way the Listener should detect that the TX has been already rolled back and not try to execute it again.   ",Bug,Critical,Closed,"2017-10-11 17:10:22","2017-10-11 16:10:22",4
Mule,"Extensions Archetype Plugin uses wrong groupId","Extensions Archetype Plugin uses wrong groupId",Bug,"To be reviewed",Closed,"2017-10-11 17:08:44","2017-10-11 16:08:44",2
Mule,"Upgrade plexus-utils to 3.0.24","Upgrade plexus-utils to latest version.",Task,Blocker,Done,"2017-10-11 16:53:43","2017-10-11 15:53:43",1
Mule,"When a MULE:UNKNOWN error is logged, always log the stacktrace","When logging a MULE:UNKNOWN error, the stacktrace must be logged regardless of the verbose exception configuration.    In most cases, MULE:UNKNOWN errors provide no meaningful info to troubleshoot the error, and the context provided by the stacktrace is really needed. Forcing the user to change the verbose config and reproduce the error is very cumbersome.","Enhancement Request",Critical,Resolved,"2017-10-11 16:06:09","2017-10-11 15:06:09",4
Mule,"ConfigOverride type annotation should be private","Make it private","Enhancement Request",Major,Closed,"2017-10-11 14:09:51","2017-10-11 13:09:51",1
Mule,"RedeliveryPolicy: migrate from InterceptiongMessageProcessor to Reactor impl","This would also mean applying the redelivery policy at the source rather than putting it in the flow as a MP (that mechanism may be generalized as per MULE-11528).","Enhancement Request",Major,Open,"2017-10-11 13:57:37","2017-10-11 12:57:37",16
Mule,"@Export annotation not exporting resources","When using the @Export in a SDK extension and specifying both classes and resources, the resources don't end up being exported in the mule-artifact.json    Example Extension definition      Resolved json    ",Bug,Critical,Closed,"2017-10-10 23:17:23","2017-10-10 22:17:23",1
Mule,"Is not possible to determine if a serialized MuleDeployableModel is valid","When a MuleDeployableModel is deserialized form a mule-artifact.json is not possible to determine if the json file contained a given attribute or not.     For example, if a mule-artifact.json does not contains the configs attribute, then the generated     MuleDeployableModel will have a null configs attribute, until the getConfigs method is invoked. At this point, an empty list will be assigned to that field. So, if we want to determine if the configs element was configured or not, there is no way to distinguish a non configured attribute from an attribute configured with an empty list.    This distinction is needed from the packager plugin in order to determine whether or not a default value has to be autogenerated for it.",Bug,Major,Resolved,"2017-10-10 22:35:39","2017-10-10 21:35:39",1
Mule,"UntilSucessful and FirstSuccessful are missing from Mule ExtensionModel","UntilSucessful and FirstSuccessful are missing from Mule ExtensionModel,",Bug,Critical,Resolved,"2017-10-09 21:51:18","2017-10-09 20:51:18",2
Mule,"FixedFrequencyScheduler and CronScheduler should be API but has package Internal","{{org.mule.runtime.core.internal.source.polling.FixedFrequencyScheduler}}    and    {{org.mule.runtime.core.internal.source.polling.CronScheduler}}    should be moved to `core.api`",Bug,Critical,Resolved,"2017-10-09 21:42:48","2017-10-09 20:42:48",2
Mule,"Validate pom version has patch number (1.0.0 instead of 1.0)","Validate pom version has patch number (1.0.0 instead of 1.0), tooling client fails otherwise",Bug,Minor,Closed,"2017-10-09 20:44:01","2017-10-09 19:44:01",2
Mule,"Allow <parse-template> to have expressions mixed with strings","We are not supporting <parse-template> to have templates with expressions mixed with strings.    e.g : this is a template, it should replace the following: #[expression to parse].    This should be allowed as it was in 3.x","Enhancement Request","To be reviewed",Closed,"2017-10-09 14:32:33","2017-10-09 13:32:33",2
Mule,"Support for Dynamic metadata for SourceCallback response parameters","Add support for Dynamic metadata for the types of these response parameters, since metadata makes no sense for configuration parameters, but add's value for parameters that support expressions, which is the case for the response parameters.     ","Enhancement Request",Critical,Closed,"2017-10-09 12:25:01","2017-10-09 11:25:01",8
Mule,"Application itself showing up as application library on deployment","When you deploy an application, you get the list of plugins and libraries used by the application. Among the libraries, the application itself is listed:    Application should not be listed under libraries section.",Bug,Minor,Resolved,"2017-10-06 20:46:08","2017-10-06 19:46:08",1
Mule,"Wrong HTTP and WSC stereotypes ","In the WSC connection provider there's a field with the following stereotype model:        And the HTTP's request config has the following stereotype:        The stereotype model in the WSC field should have the http namespace in upper case, and the type of the stereotype of the HTTP config should be requestConfig instead of CONFIG.    Also, there's an inconsistency between regular parameters and fields (ie, inside a pojo), because the parameterModel accepts an array of allowedStereotypes, while the fields accept only one stereotypeModel.",Bug,Major,Closed,"2017-10-06 19:43:10","2017-10-06 18:43:10",5
Mule,"Avoid the need of the UBER_BRANCH in extensions-maven-plugin","Avoid having to maintain an extra branch for mule-extensions-plugin, while keeping a practical way to disable extension model generation in uber builds for reduced build time.","Enhancement Request","To be reviewed",Resolved,"2017-10-06 14:36:34","2017-10-06 13:36:34",0
Mule,"GraphTransformerResolver is not handling correctly concurrency access","GraphTransformerResolver is not correctly synchronizing the access to the graph implementation through the strategy (graph implementation does not support concurrency).  ",Bug,Major,Resolved,"2017-10-06 13:16:07","2017-10-06 12:16:07",8
Mule,"Update spring schemas to 3.10","colored text{color}Update spring schemas to 3.10    ",Task,Blocker,New,"2017-10-05 23:45:50","2017-10-05 22:45:50",1
Mule,"Update spring schemas to 3.9","Update spring schemas to 3.9  ",Task,Major,Done,"2017-10-05 23:43:10","2017-10-05 22:43:10",1
Mule,"No way to limit VM Listener message consumption","VM Listener consumers are consuming messages from the queue right after dispatching the message to the flow. This causes that if I have maxConcurrency=1 in the flow and numberOfConsumers=1 in the listener, the listener will still consume messages from the queue and fail when dispatching the message to the flow with an OVERLOAD error type.    I should have a way to consume messages one by one without losing them.    There are a couple of system tests ignored because of this.",Bug,Major,Closed,"2017-10-05 19:18:17","2017-10-05 18:18:17",5
Mule,"Support out-of-browser applications in OAuth module redirect url","In case an out of browser redirection, avoid creating the http listener.",Bug,Critical,Closed,"2017-10-05 17:20:02","2017-10-05 16:20:02",0
Mule,"WSC value providers should use the same mechanism as the runtime to parse de wsdl","WSC value providers should use the same mechanism as the runtime to parse de wsdl",Bug,Blocker,Closed,"2017-10-05 15:31:19","2017-10-05 14:31:19",5
Mule,"Logger component does not support parse in DW","Logger component does not support parse in DW",Bug,"To be reviewed",Closed,"2017-10-04 22:03:20","2017-10-04 21:03:20",2
Mule,"XMLSerializer not available in IBM JDK","We are using Sun XMLSerializer and OutputFormat classes which are not available on IBM JDK.    Change usages to the ones provided in our Xerces fork.",Bug,"To be reviewed",Closed,"2017-10-04 20:17:25","2017-10-04 19:17:25",1
Mule,"ValueProviders fails to resolve values for Operations with required parameters","*ValueProviders fails to resolve values for Operations with required parameters*    * When executing in lazy mode, operations that don't require Configuration or Connection and requires de injection of a parameter inside the operation will fail because the associated `ResolverSet` was never initialized.",Bug,Blocker,Closed,"2017-10-04 19:46:57","2017-10-04 18:46:57",3
Mule,"JMS Publisher always joins the current TX, if one exists, regardless the chosen transactional Action","JMS Publisher always joins the current TX, if one exists, regardless the chosen transactional Action",Bug,Critical,Closed,"2017-10-04 19:42:26","2017-10-04 18:42:26",3
Mule,"IBM JDK overrides Xerces packages with their own classes","IBM JDK uses its own version of Apache Xerces with the same class name as Mule Xerces fork.    This causes JDK shipped classes to take precedence and compilation fails.    This affects the metadata-model-api module.",Bug,Blocker,Resolved,"2017-10-03 22:44:20","2017-10-03 21:44:20",2
Mule,"DW validation should check types","DW script does not check types of used identifiers no longer and it is only doing syntax validations.    For example, the following script should result in an error as the function used is receiving too many parameters:  ",Bug,Critical,Resolved,"2017-10-03 22:05:17","2017-10-03 21:05:17",4
Mule,"Db Config not found through Lazy Initialization when flow-ref to subflow present","Having the following case:        This is causing the following error while initializing the application    {{Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#619b95a3': Cannot resolve reference to bean 'dbConfig' while setting bean property 'configurationProvider'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'dbConfig' is defined}}    The bug seems to be during the MinimalApplicationModelGenerator when performing the method   findComponentModelsDependencies. This method is never called on the subflow so the dbConfig is never enabled.",Bug,Major,Resolved,"2017-10-03 20:53:07","2017-10-03 19:53:07",4
Mule,"JMS Listener never begins transactions","JMS Listener never begins transactions",Bug,Blocker,Closed,"2017-10-03 20:15:06","2017-10-03 19:15:06",1
Mule,"ExtensionModelJsonSerializer is removing errorModels for Mule Core ExtensionModel","When serializing and deserializing Mule Core extensionModel the errors are not persisted.   ExtensionModel object has:    But the json output only has one and empty array in all the errors fields:    Even if the same json serialized is deserialzed the ExtensionModel instance has no errors (assuming that at least the whole hierarchy should be dynamically generated). ",Bug,Critical,Closed,"2017-10-03 18:37:47","2017-10-03 17:37:47",2
Mule,"Fix flaky tests that uses test maven artifacts","Tests like ApplicationDescriptorFactoryTestCase and  DomainDescriptorFactoryTestCase use Mule artifacts that depend on connectors that are not part of the project Maven's reactor. (ex: HTTP and Sockets connectors)    This causes that those tests to be flaky, as those dependencies are not always on the Maven repo used to build the project and aether is not able to download them for some reason.    Besides that problem, Mule CE must not depend on any connector to avoid implicit cyclic dependencies and building against out of data versions",Task,Major,Done,"2017-10-03 16:13:25","2017-10-03 15:13:25",2
Mule,"Add a way to patch partially Mule 4 services","Like in Mule 3.x plugins, it would be useful to be able to provide partial patches for services like DataWeave. Currently this forces to provide full patch replacements for services, making it very complex to handle and tracking multiple fixes in the same installation.    It could be implemented as a new directory that takes precedence in the classloader, like lib/user for provided libraries.","Enhancement Request",Major,Resolved,"2017-10-03 15:59:13","2017-10-03 14:59:13",8
Mule,"Implement flow stack dump - Runtime support","In Mule 4.x the asynchronous architecture will make using thread dumps for troubleshooting less useful than in Mule 3. Also thread dumps don't capture the application level information about the execution.    A better logical view is to have the runtime dump flow stack information for all flows in execution.    This should in response to an action that can be performed on demand through a command line or JMX action.  ",Task,"To be reviewed",Done,"2017-10-03 15:53:09","2017-10-03 14:53:09",16
Mule,"Update to Agent Version 1.9.0 on Tooling Client",.,Task,Critical,Done,"2017-10-03 13:59:17","2017-10-03 12:59:17",0
Mule,"Wrong validation of product type in mule-artifact.json files","When an artifact indicates an invalid required product (like MULE_CE when only MULE and MULE_EE are valid) the error message obtained when the plugin is used is the following:    When it should say something like MULE_CE is not a valid product",Bug,Minor,Resolved,"2017-10-03 12:48:56","2017-10-03 11:48:56",1
Mule,"Provide support for fetching all the xsd dependencies from a xsd file","We should include a new functionality to obtain all the dependencies (import/include) from a XSD file in order to copy all the necessary files when the user uses that kind of files.",Bug,Critical,Resolved,"2017-10-03 03:23:58","2017-10-03 02:23:58",8
Mule,"ExtensionModel DTO missing the ErrorModel attribute","ErrorModel DTO is not being used, although it was implemented.   Add test to validate. ",Bug,"To be reviewed",Resolved,"2017-10-02 18:37:11","2017-10-02 17:37:11",2
Mule,"ExtensionModel DTO missing the ErrorModel attribute","ErrorModel DTO is not being used, although it has been implemented.  Add test to validate. ",Task,Major,Done,"2017-10-02 18:34:20","2017-10-02 17:34:20",2
Mule,"Rework Email Errors","*Rework Email Errors*    Email errors don't cover a lot of cases, we need to review it ASAP.",Bug,Critical,Closed,"2017-10-02 15:59:08","2017-10-02 14:59:08",5
Mule,"Remove reactor operator error hook","The current mechanism for handling error in reactor relies on registering a hook to translate any exception to a MessagingException.    It should be migrated to use https://projectreactor.io/docs/core/release/api/reactor/util/context/Context.html keeping into account that many plugins with just api access may want to use that.    Ref: http://projectreactor.io/docs/core/release/reference/docs/index.html#context",Task,Critical,Done,"2017-10-02 14:59:43","2017-10-02 13:59:43",2
Mule,"Add a way to export additional container packages for integration tests","Some integration tests for the container need to access packages that are not part of the API. There has to be a way to be able to export those packages for testing purposes as it is not possible to refactor all the tests to avoid it.    This new feature must be available only until those tests can be adapted to avoid using non public APIs.","Enhancement Request","To be reviewed",Resolved,"2017-10-02 14:21:32","2017-10-02 13:21:32",0
Mule,"Cannot use ConfigurationComponentLocator to get a component of the default error handler for a flow","When using a default error handler, its chain is used as a template to create an error hadler in the flows.    When using ConfigurationComponentLocator, it is impossible to get the processors of the default error handler for a flow. The components hava a path like:        Note there is no *processors* as expected and an extra index.    Also, when using such path to query the component, the template is retrieved instead of an actual processor in a flow. So, at leats the lifecycle status of it is wrong (see ignored test ErrorHandlerLifecycleTestCase#testLifecycleDefaultErrorHandler)",Bug,Major,Closed,"2017-10-02 13:14:08","2017-10-02 12:14:08",2
Mule,"Wrong prefix used when generating extension documentation","Wrong prefix used when generating extension documentation",Bug,Critical,Closed,"2017-09-29 22:03:23","2017-09-29 21:03:23",1
Mule,"on-error-propagate cannot override/preserve attributes when using policies","When using on-error-propagate, the attributes cannot be overridden or preserved, as when we are handling the message, we send a null instance instead of using the actual one:        https://github.com/mulesoft/mule/blob/mule-4.x/core/src/main/java/org/mule/runtime/core/internal/policy/CompositeSourcePolicy.java#L154    By receiving null, the parameter transformer cannot know which attributes the user wants to override. Also it cannot know the actual status of the other parameters, to preserve them.    ",Bug,Critical,Resolved,"2017-09-29 21:43:13","2017-09-29 20:43:13",4
Mule,"Split FTP and SFTP connectors","Split them up","Enhancement Request",Critical,Closed,"2017-09-29 21:41:58","2017-09-29 20:41:58",5
Mule,"Make sure all serializable classes have serial version uid","Make sure all serializable classes have the serialversionUid defined so they can still be read after being changed in future versions.",Task,"To be reviewed",Done,"2017-09-29 18:16:56","2017-09-29 17:16:56",2
Mule,"Lazy Init should refresh ConfigurationComponentLocator","Lazi init should refresh the content of the ConfigurationComponentLocator before each initialisation.     This way the locator should only show those element that belong to the current minimal app.     Now, as it's not being refreshed, successive runs in the same container accumulates components in the ConfigurationComponentLocator causing that searches in the locator return components in unstable states (not init for instance). ",Bug,Major,Resolved,"2017-09-29 16:00:03","2017-09-29 15:00:03",2
Mule,"Component locations file is not well populated","The component locations in the application model provide the file in which the element is located as well as the line number.    Sometimes this value only holds the name of the file.    Some other times this value holds the relative path of the file.    Suppose the file is located under src/main/mule/my/pacage/file.xml, it can come as:   * *file.xml*   * *my/pacage/file.xml*    It should always be the full(relative) path: *my/pacage/file.xml*          ",Bug,Major,Closed,"2017-09-29 15:53:39","2017-09-29 14:53:39",2
Mule,"Lazy Init does not handle spring:config","Having a MUnit test (that uses lazy init) with the following configuration if fails to start due to the presence of the spring:config element:               ",Bug,Major,Resolved,"2017-09-29 15:47:49","2017-09-29 14:47:49",4
Mule,"Move BaseEventContext to privileged API","-Also, rename it to CoreEventContext.-    Check usages in MUnit and apikit",Task,"To be reviewed",Done,"2017-09-29 14:08:42","2017-09-29 13:08:42",2
Mule,"SimpleUnitTestScheduler keeps recurrent tasks running after stop()","Ensure that when a test is finished, all recurrent tasks created as part of that test are cancelled.",Bug,Minor,Resolved,"2017-09-28 20:47:37","2017-09-28 19:47:37",1
Mule,"Add the concept of ConnectionProvider which doesn't support connectivity testing","ExtensionModel needs to communicate that to allow tooling not to show the testing button","Enhancement Request",Critical,Closed,"2017-09-28 20:40:57","2017-09-28 19:40:57",2
Mule,"Fix tests that have hardcoded versions of connectors to obtain them from the poms properties","Fix tests that have hardcoded versions of connectors to obtain them from the poms properties",Task,Major,Done,"2017-09-28 18:10:07","2017-09-28 17:10:07",8
Mule,"Release Greenarrow","Release Greenarrow",Task,"To be reviewed",Done,"2017-09-28 18:06:28","2017-09-28 17:06:28",2
Mule,"Dry Run Greenarrow With last changes (New Repos)","Dry Run Greenarrow With last changes (New Repos)",Task,"To be reviewed",Done,"2017-09-28 18:06:02","2017-09-28 17:06:02",4
Mule,"Automate WSDL Parser release","-Release WSDL Parser to avoid having to deploy it in each release-     It can't be released because it depends on Metadata artifact so it should be released each time.",Task,Minor,Done,"2017-09-28 18:04:56","2017-09-28 17:04:56",2
Mule,"Mule Packager is a lib which goes inside the distro but it has Mule Core deps so there is a circular dep there that we would need to fix","Mule Packager is a lib which goes inside the distro but it has Mule Core deps so there is a circular dep there that we would need to fix",Task,"To be reviewed",Done,"2017-09-28 18:00:16","2017-09-28 17:00:16",8
Mule,"Deploying a bug fix version of an application is not causing correct redeploy","A bugfix version of an application should cause a redeploy of the same application. It also should not remove and lose the temporary information of the application in .mule folder.",Bug,Blocker,Resolved,"2017-09-28 17:40:53","2017-09-28 16:40:53",4
Mule,"Use Deployment Properties to disable logging on tooling applications","Revert MULE-13253",Task,Minor,Done,"2017-09-28 17:36:33","2017-09-28 16:36:33",1
Mule,"Extract ConnectorLevelMessageDispatchingTestCase which uses the http service inside the mule project and generates a circular dependency","Extract ConnectorLevelMessageDispatchingTestCase which uses the http service inside the mule project and generates a circular dependency",Task,Critical,Done,"2017-09-28 16:44:47","2017-09-28 15:44:47",2
Mule,"Remove FlowConstruct and MuleContext from Event/Message","Remove FlowConstruct and MuleContext from Event/Message",Task,Critical,Done,"2017-09-28 10:46:44","2017-09-28 09:46:44",4
Mule,"Updating tests on runtime due to NPE bugfix in DW","Updating tests on runtime due to NPE bugfix in DW    Issue: https://github.com/mulesoft/data-weave/issues/203  Bugfix on DW side: https://github.com/mulesoft/data-weave/commit/59d870cbb198981e53cb7456df941e4173b1ab31",Bug,"To be reviewed",Closed,"2017-09-28 02:16:31","2017-09-28 01:16:31",0
Mule,"String and Binary operations should always have a mime type","Operations which return a String or an INputStream should always be forced to specify a mimeType. That miemType needs to be automatically set on the return value but needs to also be overridable from a Result object","Enhancement Request",Critical,Closed,"2017-09-28 00:27:48","2017-09-27 23:27:48",5
Mule,"wsdlLocation is in the wrong group in WSC.","wsdlLocation is in the wrong group in WSC.",Bug,Critical,Resolved,"2017-09-27 22:19:59","2017-09-27 21:19:59",1
Mule,"Domain information must be determined using the classloader model instead of the mule-artifact.json","Domain information is currently being obtained from the application's mule-artifact.json using a domain field.     That field is not being generated by the packager, is something that we generate on our test artifacts, so domain does not work on a real packaged application with domain.    The domain information must be read from the classloader model, searching by a dependency with domain classifier (there will be only one) and using that artifact information to generate the domain name (ie: the one matching the name on the deployed domain folder)","Enhancement Request",Blocker,Resolved,"2017-09-27 14:46:13","2017-09-27 13:46:13",4
Mule,"Upgrade to Project Reactor 3.1.0","Upgrade to Project Reactor 3.1.0.  This is improved version, that will be maintained (3.0.x will not actively be maintained).  3.1.0 is being used in Spring 5.",Task,Critical,Done,"2017-09-27 12:53:28","2017-09-27 11:53:28",4
Mule,"Processing two Chains in parallel halts execution ","Given the following operation:  {code}    public void myRouters(@Optional BeforeCall beforeCall,                          @Optional AfterCall afterCall,                          RouterCompletionCallback callback) {      Result result1 = Result.builder().build();      Result result2 = result1.copy().build();      Thread thread1 = new Thread(new RunChainThread(beforeCall.getChain(), result1));      Thread thread2 = new Thread(new RunChainThread(beforeCall.getChain(), result2));      thread1.start();      thread2.start();      try {        thread1.join();        thread2.join();      } catch (InterruptedException e) {        callback.error(e);      }      callback.success(Result.builder().build());    }      private class RunChainThread implements Runnable {        private final Chain chain;      private final Result result;        RunChainThread(Chain chain, Result result) {        this.chain = chain;        this.result = result;      }        @Override      public void run() {        Latch latch = new Latch();        chain.process(result, (result -> {          System.out.println(Finished running  + result);          latch.release();        }), (error, result) -> {          System.out.println(Finished with error  + error);          latch.release();        });        try {          latch.await();        } catch (InterruptedException e) {          e.printStackTrace();        }      }    }  {code}    Where BeforeCall and AfterCall are *Router*.    And having the following flow in a FunctionalTestCase    {code:xml}      <flow name=testTwoThreadsSameChain>          <munit-tools:my-routers>              <munit-tools:before-call>                  <logger message=EXAMPLE/>              </munit-tools:before-call>          </munit-tools:my-routers>      </flow>  {code}     Makes the execution halt    Things to take into account:  * The processing of the chain is made blocking  * Wrapping the chain in a synchronized block solves the issue     ",Bug,Major,Closed,"2017-09-26 21:48:43","2017-09-26 20:48:43",5
Mule,"Create ExtensionModel DTO Serializer","Create ExtensionModel DTO Serializer so it can be used by Mozart and Exchange. ",Task,Critical,Done,"2017-09-26 17:40:27","2017-09-26 16:40:27",2
Mule,"Use injection in core objects instead of propagating the muleContext","Stop using MuleContextAware or injecting the MuleContext in favor of just injecting what each object requires.    By doing this, downcasts to MuleContextWithRegistries would not be needed anymore.    There are also some issues with the order on how the objects are initialized, and some objects may be trying to use objects that have not yet been initialized",Task,"To be reviewed",New,"2017-09-26 13:53:37","2017-09-26 12:53:37",8
Mule,"Decouple tests that need just the Registry from the MuleContext","A common antipattern in unit tests is to setup the registry in the mule context and then pass the muleContext around so that each component gets what it needs from its registry.    A better approach would be for the test to set on each object specifically what it requires in the most direct way, rather than passing around a big object.",Task,"To be reviewed",New,"2017-09-26 13:46:12","2017-09-26 12:46:12",8
Mule,"Support license check in SDK","Add support for license check",Task,"To be reviewed",Done,"2017-09-26 12:34:05","2017-09-26 11:34:05",0
Mule,"muleRuntimeConfig.maven.repositoryLocation property ignored when set in command line","Using command line property to set repository location doesn't affects mule.  ./bin/mule M-DmuleRuntimeConfig.maven.repositoryLocation=/Users/username/.m2/repository    When following line is executed, the mavenConfig is built with a default value based on muleBase directory:    https://github.com/mulesoft/mule/blob/mule-4.x/modules/global-config/src/main/java/org/mule/runtime/globalconfig/api/GlobalConfigLoader.java#L61",Bug,Minor,Resolved,"2017-09-25 20:06:26","2017-09-25 19:06:26",2
Mule,"Make ExtensionComponent#getMetadataContext() be completely lazy.","*Make ExtensionComponent#getMetadataContext() be completely lazy.*        When creating the metadata context we create a new configuration, we should make this call lazy, so its only created when is immediately required and created with the right classloader instead of having a custom `withContextClassLoader()` method.    There is a TODO comment in the *ExtensionComponent class*","Enhancement Request",Major,Open,"2017-09-25 18:59:00","2017-09-25 17:59:00",5
Mule,"Enable Lazy init to run XSD validations ","Lazy init allow an invalid application to start as this is not a problem for tooling use case.    For the MUnit use case if an application containing an invalid XML (invalid because it doesn't match the XSD definition) deployment/starting of the application should fail with the proper error. ","Enhancement Request",Major,Closed,"2017-09-25 15:43:43","2017-09-25 14:43:43",1
Mule,"Migrate ComponentLocationVisitor to use ExtensionModels","ComponentLocationVisitor currently works based on some specific component identifiers. It must be migrated to use the ExtensionModel of each component instead so it works with any kind of component.",Task,"To be reviewed",Done,"2017-09-25 14:56:57","2017-09-25 13:56:57",16
Mule,"Rename BaseEvent to CoreEvent","CoreEvent is a more appropriate name.",Task,"To be reviewed",Done,"2017-09-24 23:15:07","2017-09-24 22:15:07",2
Mule,"When more than one processor is present, error mappings in smart connectors don't work","When error mapping support was added to smart connectors all tests passed (see ModuleUsingErrorMappingTestCase) because the operations had only one processor but if you add more to operation fail-raise-error, for example, they start to fail. This is due to the fact that when processor chains are being built if more than 1 processors are found then a simple chain is created for those so then apparently error handling occurs for that chain and not the module one. There could be other consequences as well considering this behaviour.",Bug,"To be reviewed",Closed,"2017-09-24 00:54:10","2017-09-23 23:54:10",4
Mule,"ClassNotFoundException in HTTP Request","Trying to configure HTTP Request setting to any URL i.e [http://www.google.com|http://www.google.com/] throws an exception.    App:         Stacktrace:  ",Bug,Blocker,Closed,"2017-09-23 04:05:13","2017-09-23 03:05:13",3
Mule,"HTTP requester is using body media type to determine response one","While attempting some other changes I realised the HTTP request component was using the request body mime type in case the received response didn't return a content type. This is fundamentally wrong since sending a JSON payload does not mean expecting one back. It is specified that when an HTTP message has no content type then application/octet-stream should be used as default (https://www.w3.org/Protocols/rfc2616/rfc2616-sec7.html#sec7.2.1).",Bug,"To be reviewed",Resolved,"2017-09-23 01:33:17","2017-09-23 00:33:17",2
Mule,"Soap connect is fetching services multiple times","Soap connect is fetching services multiple times",Bug,Blocker,Resolved,"2017-09-22 21:32:49","2017-09-22 20:32:49",3
Mule,"Studio distro in CE includes a lot of jars in the lib/user folder which should not be included","Studio distro in CE includes a lot of jars in the lib/user folder which should not be included",Task,Minor,Done,"2017-09-22 21:15:50","2017-09-22 20:15:50",1
Mule,"Add missing License Header in core extensions","Add missing License Header in core extensions",Task,Major,Done,"2017-09-22 15:51:58","2017-09-22 14:51:58",1
Mule,"Fix ExpiredShutdownTimeoutRequestResponseTestCase Tests","*Fix ExpiredShutdownTimeoutRequestResponseTestCase Tests*    There are two tests failing and we lost track of when both of this started failing.    # testScriptComponent()   # testExpressionTransformer() ",Task,"To be reviewed",Done,"2017-09-22 15:31:09","2017-09-22 14:31:09",2
Mule,"WSC is putting the body DataType in the response object instead of in the body field","WSC is putting the body DataType in the response object instead of in the body field    This is breaking Message History when serializing the whole payload.",Bug,Blocker,Closed,"2017-09-22 15:25:03","2017-09-22 14:25:03",3
Mule,"Review lifecycle/context/registry propagation in extensions-support module","There is code in extensions-support that manipulates the internals of the registry (i.e.: registering objects).    There should be a clearly defined way to do this (CustomizationService?) and this module should use that.    Currently, the code is using the deprecated LegacyRegistryUtils to do that.",Task,"To be reviewed",New,"2017-09-22 14:45:47","2017-09-22 13:45:47",8
Mule,"DW validation/preview should support functions","In order for DW validation/preview to work properly with injected functions from the runtime or Munit (avoid unresolved references), we need a way to:   * Discover global bindings being set in runtime   * Add global bindings to the validation/execution context in tooling client    Proposed solution for the time being is to delegate the execution to Mule Agent.    Next versions of Tooling Runtime Client should be able to load dynamic and static functions locally without having to go to the Runtime for resolving validation and weave preview.",Task,Blocker,Done,"2017-09-21 22:08:21","2017-09-21 21:08:21",4
Mule,"Resource File not found in Tooling Test","The situation is as follows:  We have a connector (Kafka, see [https://github.com/mulesoft/kafka-connector/tree/develop-4.x)] that has 2 connection properties (keyStoreLocation and trustStoreLocation) that are Files.  When setting the relative path of the files and configuring the mule-artifact.json file to export them, they work as expected when running the application. But when we try to do a Test Connection, they fail with a NullPointerException due to the class loader returning null when fetching those properties.  We've also created a Tooling Client Test ([https://github.com/mulesoft/connectors-integration-tests/blob/kafka/src/test/java/org/mule/module/netsuite/integration/KafkaIT.java)] that is also failing due to the same error.",Bug,Major,Resolved,"2017-09-21 20:20:49","2017-09-21 19:20:49",0
Mule,"SDK Non Blocking operations only work with the ReflectiveOperationExecutor","*SDK is not following the Liskov Substitution Principle for privileged non blocking extensions.*    When having a privileged extension that contains a non blocking operation with a custom executor, the operation defined in the `Operation` class receives a CompletionCallback in order to mark the operation as non blocking, but when implementing the actual executor such callback is not used so we end up waiting forever to that callback to be executed.        this can be seen in ReactiveOperationExecutionWrapper#process , which is used to execute nonblocking operation ",Bug,Major,Closed,"2017-09-21 19:34:34","2017-09-21 18:34:34",5
Mule,"Remove mention to spring on api packages for mule-module-spring-config ","The api package for the module contains spring, there should not be mentions to spring on the package:    A possible change could be  ",Task,Major,Done,"2017-09-21 16:45:35","2017-09-21 15:45:35",0
Mule,"Scripting module doesn't respect the message contract","The scripting component allows to set both the output payload and the output attributes. However, it doesn't mandate you have to change both things. If only the payload is changed, then the attributes need to be nulled. It's invalid for an operation to change the payload but maintain the same attributes",Bug,Major,Resolved,"2017-09-21 15:28:57","2017-09-21 14:28:57",4
Mule,"MEL expression language must be available only when compatibility plugin is installed","MEL expression language is currently provided by the runtime and available to every component without extra configuration.  This implies that users can use MEL expressions everywhere by just adding the mel: prefix to their expressions.  As MEL is provided for compatibility reasons, the right approach is to provide MEL support on the compatibility plugin instead of in the runtime. So users can onlyuse MEL on EE and only when they are migrating from 3.x.",Story,Major,Done,"2017-09-05 18:47:46","2017-09-05 17:47:46",4
Mule,"Avoid using MessagingExceptionHandlerToSystemAdapter when rethrowing exceptions","Avoid using MessagingExceptionHandlerToSystemAdapter when rethrowing exceptions.  This shouldn't be needed now and causes additional logging.",Task,"To be reviewed",Done,"2017-09-21 13:07:56","2017-09-21 12:07:56",4
Mule,"Move EventedResult to privileged API","Move EventedResult to privileged API for MUnit",Task,Blocker,Done,"2017-09-20 20:14:56","2017-09-20 19:14:56",1
Mule,"File connector tests using locks fail on Windows","File locks and permissions in File connector appear to be causing issues when running on Windows.    To reproduce, run the following tests which are failing on Windows:  ",Bug,Critical,Closed,"2017-09-19 21:22:33","2017-09-19 20:22:33",8
Mule,"Fix ContainerConfigurationTestCase","Fix ContainerConfigurationTestCase after agent changes the response of the API",Bug,Critical,Resolved,"2017-09-19 20:59:28","2017-09-19 19:59:28",0
Mule,"Request hanged if response statusCode is less than 200","When setting the response/error-response status code in the listener, if the number is less than 200, the request gets hanged.  There are certain statuses that may have particular behaviour. We should analyse what to do on each of them, but the main goal here is to fail when receiving the invalid ones.",Bug,Critical,Resolved,"2017-09-18 23:55:59","2017-09-18 22:55:59",2
Mule,"Missing default values in Core Extension Model","Default values are missing from some operations when walking over the core extension model. For instance, frequency, start delay and time unit default values are missing in the scheduler operation.   Also, we need configuration-properties in the core extension model so we can add <configuration-properties file=mule-artifact.properties/> to the config",Bug,Critical,Closed,"2017-09-18 22:54:54","2017-09-18 21:54:54",2
Mule,"None and Pooling connection providers doesn't use the Plugin ClassLoader to create connections","*None and Pooling connection providers doesn't use the Plugin ClassLoader to create connections*",Bug,Blocker,Closed,"2017-09-18 21:18:29","2017-09-18 20:18:29",5
Mule,"Log filled with incorrect error-handler warnings","When running any of the tests in the org.mule.extension.validation.BasicValidationTestCase class, the log comes out like this:       ",Bug,Major,Closed,"2017-09-18 19:40:07","2017-09-18 18:40:07",4
Mule,"Change 3.9.0 to be able to be run with JDK7 for Studio Datasense support ","Spike trying to support JDK 7 and 8 in mule 3.9.0 with the new features of CLR.     This will allow continuing using Studio with JDK7 which will allow being able to use in the same Studio Mule 3.5.x and 3.9.x with Datasense support. ",Task,Critical,Done,"2017-09-18 19:31:29","2017-09-18 18:31:29",8
Mule,"Mule tries to dispose components that have never been initialized and it fails","*Mule tries to dispose components that have never been initialized and it fails*   * This occurs when using a Mule App in lazy mode, creating components register them in the registry, but never initializing   * When the Mule app is disposed, Mule tries to dispose where never initialized. ",Bug,Critical,Resolved,"2017-09-18 17:11:04","2017-09-18 16:11:04",4
Mule,"Extensions Generated Documentation does not include descriptios for types.","When generating the extensions documentation. the types are not being populated with description nor if they are required or not.",Bug,Critical,Resolved,"2017-09-18 16:44:49","2017-09-18 15:44:49",3
Mule,"Unignore domain tests","Unignore domain tests, ignored with a reference to MULE-10633",Task,Major,New,"2017-09-18 13:37:30","2017-09-18 12:37:30",8
Mule,"Jar content cannot be read by URL.openStream() on Windows","Jar content cannot be read by URL.openStream() on Windows    This is making CompressedTypeResolverLoaderTestCase tests on metadata-model-api module fail on     {{org.mule.metadata.catalog.internal.builder.TypesResolverBuilder#createFromUrl}}    when executing     _schemaUri.toURL().openStream()_    with message    _JAR entry schemas/type1-schema.json not found in C:\Users\HERNAN~1.WIT\AppData\Local\Temp\junit7575768859740793034\catalog-001.jar_    Tests are successfully executed on Ubuntu. Also if resource is on jar root no exception is thrown.",Bug,Minor,Resolved,"2017-09-15 21:19:03","2017-09-15 20:19:03",1
Mule,"Extension cannot extend a stereotype from another extension","StereotypeDefinition interface is missing the concept of namespace.    Otherwise, it's impossible to do something like this:              In the example above, there's no way to specify that the parent definition is to have the FTP namespace. This is made even worse by the fact that the stereotype that I'm trying to extend is an implicit one.    Things that should happen:   * StereotypeDefinition should have the concept of namespace   * It should not be necessary for an extension to implement the getNamespace() method on each of their StereotypeDefinition implementations   * No extension should be able to declare a stereotype of a namespace other than its own, but they should be able to use a stereotype from another extension   * MuleStereotypeDefinition class should no longer be a marker interface but an actual class which namespace is a final method returning MULE     ",Bug,Blocker,Closed,"2017-09-15 20:04:38","2017-09-15 19:04:38",3
Mule,"Soap Service is not propagating Transport Headers","Soap Service is not propagating Transport Headers",Bug,Critical,Resolved,"2017-09-15 17:59:49","2017-09-15 16:59:49",3
Mule,"SFTP SecureRandom implementation hangs on OpenJDK 8","OpenJDK 8 on Linux is configured by default to use securerandom.source=file:/dev/random    This implementation will hang when the entropy pool is empty, until there is enough environmental noise.    See [http://bugs.java.com/view_bug.do?bug_id=6521844]    To reproduce, just run the FTP connector tests on Ubuntu 16.04 and OpenJDK8_u131 and see they will hang while generating the SecureRandom.    A workaround, is to change the SecureRandom implementation on the OpenJDK.    This can be achieved by editing the {{java.security}} file inside    {{/etc/java-8-openjdk/security}}    and commenting the following line    {{securerandom.source=file:/dev/random}}    or changing it to    {{securerandom.source=file:/dev/urandom}}         The SFTP connector should be able to select an appropriate SecureRandom implementation to avoid this issue.    If this is not possible, it should be properly documented.     ",Bug,Major,Resolved,"2017-09-15 16:16:57","2017-09-15 15:16:57",2
Mule,"DerbyServer rule should delete the database after using it.","DerbyServer rule should delete the database on shutdown.",Task,Major,Done,"2017-09-15 15:52:53","2017-09-15 14:52:53",0
Mule,"Improve CompositeProcessorChainRouter unit tests to cover scenario that was previously causing deadlock with flow-ref","Improve CompositeProcessorChainRouter unit tests to cover scenario that was previously causing deadlock with flow-ref",Task,Minor,New,"2017-09-15 14:14:54","2017-09-15 13:14:54",8
Mule,"Tooling Runtime Client should use slf4j implementation from client class loader","Tooling Runtime Client implementation now is loaded in an isolated class loader so slf4j implementations provided by client's class loader are no longer accessible. A possible way to handle this would be to set up as boot package slf4j packages so they would be resolver with the parent boot classloader and this means that client's provided implementations may work.",Task,Critical,Done,"2017-09-15 02:51:46","2017-09-15 01:51:46",2
Mule,"Ensure the following components can be injected","Ensure the following Classes can be injected by @Inject in any bean that required so.    This also includes those beans that are bootstraped:   * ErrorTypeRepository   * ExtendedExpressionManager   * SchedulerService   * MuleRegistry      ","Enhancement Request",Major,Resolved,"2017-09-14 20:53:47","2017-09-14 19:53:47",1
Mule,"Replace deployment validation with ","Replace deployment validation logic in:    *org.mule.runtime.module.deployment.impl.internal.application.DefaultApplicationFactory*         With    * Repo: [https://github.com/mulesoft/mule-maven-plugin]   * Branch: adamwest   * Project: mule-packager   * Class: org.mule.tools.api.validation.MulePluginsCompatibilityValidator          ","Enhancement Request",Minor,Resolved,"2017-09-14 19:45:46","2017-09-14 18:45:46",1
Mule,"Support deployment time configuration in Mule 4","Move changes done in 3.x to support customization of deployment with properties to mule 4",Task,Critical,Done,"2017-09-14 19:32:39","2017-09-14 18:32:39",0
Mule,"Cleanup core API","Move as much classes as possible to internal/privileged or external APIs",Task,Blocker,Done,"2017-09-14 17:49:01","2017-09-14 16:49:01",16
Mule,"Migrate flowRunner to use ExecutableComponent instead of flow","Flow must be internal, so test infrastructure must use the executableComponent to run tests",Task,Blocker,Done,"2017-09-14 17:23:04","2017-09-14 16:23:04",4
Mule,"Remove access to muleContext instance from Application/Domain API","Is not possible to remove MuleContext from the API, we have too may dependencies against it.    What we can do is to avoid users to get access to the application/domain muleContext instance from the artifact. By doing this, we can reduce the number of undesired effects on the behavior.",Task,Blocker,Done,"2017-09-14 17:03:19","2017-09-14 16:03:19",4
Mule,"Remove processor from API","Processor should not be part of core API.    Only internal/privileged usages.    Provide support to give callback to test:processor if necessary",Task,Blocker,Done,"2017-09-14 16:55:23","2017-09-14 15:55:23",8
Mule,"Fix Jacoco Coverage which didn't work using the argLine empty line to use it in Sonar","Fix Jacoco Coverage which didn't work using the argLine empty line to use it in Sonar",Task,"To be reviewed",Done,"2017-09-14 16:55:06","2017-09-14 15:55:06",4
Mule,"Support deprecated core components only for test cases","We need to only support deprecated comoponents in the core namespace for testing purposes. The idea is to have a mule-test.xsd file that contains the deprecated components that is only used when executing test cases. The mule.xsd file will not contain those elements.    ",Task,"To be reviewed",Done,"2017-09-14 16:39:39","2017-09-14 15:39:39",4
Mule,"Add tests for exception logging using the new framework","Use the new log testing framework to cover as much cases as possible.    Be sure to consider different scopes, routers, error types, etc",Task,Minor,New,"2017-09-14 16:07:39","2017-09-14 15:07:39",4
Mule,"Add test for Dynamic WSDL location in wsc","Add test for Dynamic WSDL location in wsc","Enhancement Request",Major,Resolved,"2017-09-14 15:41:48","2017-09-14 14:41:48",1
Mule,"Remove ParameterRoleTypeAnnotation","No longer makes sense, fields are always BEHAVIOUR",Task,Blocker,Done,"2017-09-14 15:30:52","2017-09-14 14:30:52",3
Mule,"Application lazy initialization should allow to enable more than one component","Application lazy initialization should allow to enable more than one component",Task,Major,Done,"2017-09-14 15:30:38","2017-09-14 14:30:38",4
Mule,"Support includeTestDependencies when resolving classloader model as deployment property ","Support to includeTestDependencies from deployment ",Task,Major,Done,"2017-09-14 15:28:40","2017-09-14 14:28:40",1
Mule,"EmbeddedContainer should allow to do an Application lazyInit with parsing validations on ","EmbeddedContainer should allow to do an Application lazyInit with parsing validations on",Task,Major,Done,"2017-09-14 15:27:26","2017-09-14 14:27:26",2
Mule,"Inconsistent lifecycle on ObjectFactory instances","* Put a breakpoint on ConstantFactoryBean#initialise()   * Run any of the cluster test cases   * You'll see that the breakpoint is hit for many instances   * You'll also see that when the value is a SwitchingQueueManager, the breakpoint is never hit and instead the getObject() is invoked directly    I know this reproduces with the cluster test cases, but I don't think the issue is specific to cluster nor the CustomizationService (although it well may be)",Bug,Major,Resolved,"2017-09-14 02:42:45","2017-09-14 01:42:45",4
Mule,"Queue and ObjectStore managers not properly overriden when in Cluster","The SpringRegistryConfigurator is handling the entries in the customization service wrongfully, causing queues and object store to not work correctly when in cluster.",Bug,Blocker,Closed,"2017-09-14 02:29:39","2017-09-14 01:29:39",2
Mule,"Policy hangs when using more than one policy","When using more than one policy in the following disposition: P1 -> P2 -> APP, and an error is thrown and not handled by P2, the whole application hangs.  To be more precise, if P2  contains an on-error-propagate, or if it does not even contain an error-handler, the application hangs, even if P1 has an on-error-continue that would catch that error.    The problem can be reproduced by using the following branch: https://github.com/mulesoft/mule-ee/tree/MULE-13526 and running the following test org.mule.test.module.http.internal.listener.HttpProxyTwoPoliciesTestCase#sourcePolicyExecutionErrorBeforeExecuteNext",Bug,Blocker,Resolved,"2017-09-13 15:09:58","2017-09-13 14:09:58",4
Mule,"JMS does not communicate properly it's ExternalLibs","JMS does not communicate properly it's ExternalLibs, thus the IDEs cannot help the user to configure the application.",Bug,Critical,Closed,"2017-09-12 21:57:22","2017-09-12 20:57:22",3
Mule,"Add concept of implementing to ExternalLib","When a plugin has an ExternalLib that requires a generic dependency (ie, multiple possible implementations), we will provide the interface which's implementation should be present in the provided jar.",Task,Critical,Done,"2017-09-12 21:45:19","2017-09-12 20:45:19",3
Mule,"Source messages don't have a reference to the flow they belong to","When the transactions returned by the Consume method only contain a message from the source, there's no way of telling which flow it belongs to:        We should add the flow name, or even better, a componentLocation as the one that processor messages have:    ",Bug,Major,Resolved,"2017-09-12 20:14:49","2017-09-12 19:14:49",4
Mule,"Spike: refactor core API","We need to do an spike over the mule-core API to:  * Identify the part of the API that is required by apps or plugins and move it to mule API if possible  * Identify the epart of the API that must be moved to an internal package  * Identify which part of the API must remain as API of the mule-core API if it's not possible to move in to any of the former cases  * Create new tasks to work in parallel on the core API refactoring.    The following tasks have been identified already:  * Migrate flowRunner to use ExecutableComponent instead of flow  * Agent: Use ExecutableComponent instead of flow  * Remove processor form api, provide support to give callback to test:processor  * Migrate MuleContext usages in tests",Task,"To be reviewed",Done,"2017-09-12 18:00:41","2017-09-12 17:00:41",4
Mule,"TestRunner not validating override of lookup strategy","When a plugin exports a package already exported as privileged by the runtime, the applications fail with the error:      But the integration tests that tests the same code run without problem. The integration tests must fail consistently in the same way as an application.    Also, the message mentions `system package`, but in this case it should say it is privileged.",Task,"To be reviewed",Done,"2017-09-12 15:01:53","2017-09-12 14:01:53",2
Mule,"SOAP Service does not support One Way operations","When calculating output metadata with SOAP Service, I am getting a NullPointerException.    1. Get the code from here: https://github.com/mulesoft/oracle-ebs-connector/commit/bd817b2cc3bfdf971274ac68c8020994f815bd7e  2. Build the connector with {{mvn clean install -DskipTests}}  3. Set a breakpoint on PLSQLTypeMetaDataResolver, line 60 (getOutputType method).  4. Run PlSqlMetadataTestCase in debug mode.  5. When the breakpoint reaches the aforementioned line, evaluate it. It will throw a NullPointerException, with the following stacktrace:    This is using the absolute latest SDK (1.0.0-SNAPSHOT), since it fixes another bug we were having, MULE-13481.        It should be noted that when the Output Metadata logic fails, Input Metadata, although successfully calculated, is discarded and not provided. I'm not sure if this is by design, but I just wanted to point that out.",Bug,Blocker,Closed,"2017-09-12 13:46:19","2017-09-12 12:46:19",5
Mule,"Test OpenJDK8 compatibility","Ensure compatibility with OpenJDK 8",Task,Critical,Done,"2017-09-12 12:59:21","2017-09-12 11:59:21",8
Mule,"Fix HTTP foreach test case","HTTPForEachScenarioTestCase.testHttpForeachEmailAsync (4)    HTTPForEachScenarioTestCase.testHttpForeachEmail (4)    HTTPForEachScenarioTestCase (4)",Task,Major,Done,"2017-09-11 21:50:04","2017-09-11 20:50:04",2
Mule,"Add a watermark test case","Add a test which simulates a watermark use case.",Task,Major,Done,"2017-09-11 18:35:27","2017-09-11 17:35:27",0
Mule,"ExecutableComponent does not consider streams","When searching a Flow and attempting to use it through the ExecutableComponent API a problem arises with stream responses. The streams returned are closed by the time a response is generated.   This seems to occur because the Flow generates it's own EventContext from which it's success method causes the streams to close. This came up when developing the lookup function which required taking the flow-ref road to execute the flow.  To reproduce, attempt to execute a flow which returns an SDK generated connector stream.",Bug,Critical,Resolved,"2017-09-11 18:19:42","2017-09-11 17:19:42",4
Mule,"DW Functions namespace should have package in lowercase","DW Functions namespace should have package in lowercase, and only the last element of the namespace in PascalCase.     We are now setting everything in PascalCase, including the package.",Bug,Blocker,Closed,"2017-09-11 17:01:13","2017-09-11 16:01:13",2
Mule,"Sanity test of JDK11","Ensure Mule runs on JDK11",Task,"To be reviewed",Done,"2017-09-11 15:51:26","2017-09-11 14:51:26",16
Mule,"PrivateObjectStore should not have a storeName parameter","It's to confusing to explain the difference with the name on the os:object-store one. Plus, it's very easy to generate it automatically.",Bug,Critical,Closed,"2017-09-08 22:32:04","2017-09-08 21:32:04",2
Mule,"Cleanup Event downcasts","Remove the downcasts to BaseEvent, BaseEventContext, InternalEvent and PrivilegedEvent added as part of MULE-13363. This will include some review/move of stuff currently in api to internal.         The change that introduced this is https://github.com/mulesoft/mule/pull/5678",Task,"To be reviewed",Done,"2017-09-08 20:41:30","2017-09-08 19:41:30",8
Mule,"Use Java source version 1.8 in pom for 3.9","Mule 3.9 will support Java 8, not 7. So we should change the corresponding build version in the POMs.",Task,Major,Done,"2017-09-08 18:51:22","2017-09-08 17:51:22",2
Mule,"Tooling Runtime Client - NoClassDefFoundError: com/beust/jcommander/internal/Lists","Tooling Runtime Client is having class loading issues when loading descriptors if the parent class loader (Eclipse) doesn't have the jcommander included in classpath. Still the jcommand class should not be used on Tooling Client classes:    ",Bug,Minor,Resolved,"2017-09-08 18:46:26","2017-09-08 17:46:26",0
Mule,"Improve macro expansion go from O(n^2) to a better order","Macro expansion for smart connectors takes n*n, improve it.",Task,Major,Done,"2017-09-08 02:49:35","2017-09-08 01:49:35",0
Mule,"ToolingAetherServiceRegister not a subtype","Tooling Runtime Client is having class loading issues when loading Aether classes for mule-maven-client:    Full stacktrace:  ",Bug,Blocker,Resolved,"2017-09-07 21:54:18","2017-09-07 20:54:18",0
Mule,"Bump to JDK8","Bump mule-common to JDK8",Task,"To be reviewed",Done,"2017-09-07 19:22:00","2017-09-07 18:22:00",1
Mule,"*StreamProcessingStrategyTestCase's fail on cloudbees","StreamProcessingStrategyTestCase    Potentially caused by:  https://groups.google.com/forum/#!topic/mechanical-sympathy/QbmpZxp6C64  https://support.datastax.com/hc/en-us/articles/206259833-Nodes-appear-unresponsive-due-to-a-Linux-futex-wait-kernel-bug  https://groups.google.com/forum/m/#!topic/mechanical-sympathy/QbmpZxp6C64",Task,Major,Done,"2017-09-07 13:50:39","2017-09-07 12:50:39",8
Mule,"ThrottledScheduler does not respect waitAllowed SchedulerConfig","Instead ThrottledScheduler always blocks.",Bug,Major,Resolved,"2017-09-06 13:41:41","2017-09-06 12:41:41",4
Mule,"Add Sonar metrics to the UBER Projects","Add Sonar metrics to the UBER ProjectsAdd Sonar metrics to the UBER Projects",Task,Major,Done,"2017-08-30 20:03:59","2017-08-30 19:03:59",8
Mule,"Migrate Transactional Tests from JMS transport to JMS Extension","Migrate Tests from JMS transport to JMS Extension",Task,Blocker,Done,"2017-09-05 21:22:40","2017-09-05 20:22:40",16
Mule,"Migrate Integration Tests from JMS transport to JMS Extension","Migrate Tests from JMS transport to JMS Extension",Task,Blocker,Done,"2017-09-05 21:20:42","2017-09-05 20:20:42",16
Mule,"Move FTPS connector to their own repo",adsadsadsa,Task,Major,Done,"2017-09-05 18:52:14","2017-09-05 17:52:14",0
Mule,"Refactor code in smart connectors","the module that does the macro expansion is messy.   Fix it.",Task,Minor,Done,"2017-09-04 22:20:55","2017-09-04 21:20:55",0
Mule,"Email list not being correctly read on TryIt","Having same issue as FTP ",Bug,"To be reviewed",Resolved,"2017-09-04 19:17:17","2017-09-04 18:17:17",4
Mule,"Add get all keys to actual object store implementation","Please provide a way to retrieve all keys as in 3.x    Use case:    As a user I want to retrieve a list of objects stored previously using object store.    The idea is to provide an APIKit example to documentation for the RC, as in 3.x and this is the only pending implementation.     ","Enhancement Request",Major,Closed,"2017-09-04 17:13:22","2017-09-04 16:13:22",3
Mule,"Add the concept of Stereotype to connection providers","Complete later","Enhancement Request",Blocker,Closed,"2017-09-04 16:38:09","2017-09-04 15:38:09",8
Mule,"TNS references with global elements are not macro expanding correctly","When using TNS references (cyclic) in a module with global elements the references to the global elements went nuts.",Bug,Major,Closed,"2017-09-04 16:07:39","2017-09-04 15:07:39",0
Mule,"Interceptors are failing ","Interceptors are failing to be create for an xml like the one bellow                   While all processors inside testFlowRefToAFlow are being intercepted no interceptor is being generated for the processor starting with  flow *entry-point-1*          ",Bug,Blocker,Closed,"2017-09-04 15:50:25","2017-09-04 14:50:25",0
Mule,"Fix flaky test  org.mule.test.core.context.notification.processors.ComponentLocationTestCase.flowWithAsync","Test fails frequently on the continuous build and locally  Here is the  log    Error Message    Expected: an empty collection       but: <[IO - [ComponentLocationTestCase#flowWithAsync].<EMAIL>.runtime.module.extension.internal.runtime.config.LifecycleAwareConfigurationInstance.doInitialise:297@668bb2ff{    executor: java.util.concurrent.ThreadPoolExecutor@1ca2c01b[Running, pool size = 16, active threads = 0, queued tasks = 0, completed tasks = 191]    shutdown: false  }]>  Stacktrace    java.lang.AssertionError:     Expected: an empty collection       but: <[IO - [ComponentLocationTestCase#flowWithAsync].<EMAIL>.runtime.module.extension.internal.runtime.config.LifecycleAwareConfigurationInstance.doInitialise:297@668bb2ff{    executor: java.util.concurrent.ThreadPoolExecutor@1ca2c01b[Running, pool size = 16, active threads = 0, queued tasks = 0, completed tasks = 191]    shutdown: false  }]>   at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)   at org.junit.Assert.assertThat(Assert.java:956)   at org.junit.Assert.assertThat(Assert.java:923)   at org.mule.tck.junit4.AbstractMuleContextTestCase.verifyAndStopSchedulers(AbstractMuleContextTestCase.java:417)   at org.mule.tck.junit4.AbstractMuleContextTestCase.disposeContext(AbstractMuleContextTestCase.java:382)   at org.mule.tck.junit4.AbstractMuleContextTestCase.disposeContextPerTest(AbstractMuleContextTestCase.java:357)   at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:498)   at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)   at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)   at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)   at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)   at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)   at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)   at java.util.concurrent.FutureTask.run(FutureTask.java:266)   at java.lang.Thread.run(Thread.java:748)  Standard Output    ================================================================================  = Testing: flowWithAsync                                                       =  ================================================================================  WARN  2017-09-04 08:22:23,122 [[MuleRuntime].timer] org.mule.service.scheduler.internal.DefaultScheduler: org.mule.runtime.core.api.scheduler.SchedulerBusyException scheduling next execution of task org.mule.runtime.core.api.util.monitor.ExpiryMonitor(repeatable). Message was: Task org.mule.runtime.core.api.util.monitor.ExpiryMonitor(repeatable) rejected from java.util.concurrent.ThreadPoolExecutor@48406d9d[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 0]",Task,Major,Done,"2017-09-04 13:33:39","2017-09-04 12:33:39",8
Mule,"Remove deployment support for 3.x style domain bundle","Domain deployment is still using the 3.x bundle format where applications are contained inside the domain artifact.  A new domain bundle deployment will be added on MULE-13454. In the meantime the support to deploy the old bundle format must be removed.",Task,Blocker,Done,"2017-09-04 12:46:49","2017-09-04 11:46:49",1
Mule,"Add domain bundle deployment","Domain bundle consist of a domain artifact and the set of applications that belong to that it.  Deployment service must support the deployment of domain bundles, this implies:  * Detecting new bundles  * Redeploy domain/applications when a new domain bundle is found  * Notify the deployment status of domain bundles  * Provide an API to request deployment of domain bundles from the deployment service",Story,Blocker,Done,"2017-09-04 12:19:24","2017-09-04 11:19:24",8
Mule,"ToolingException: Error while getting URI","When DataSense tries to resolve the classes root folder an URISyntaxException is thrown:  ",Bug,Major,Resolved,"2017-09-03 20:31:34","2017-09-03 19:31:34",1
Mule,"Add the capability to run functional test cases with a lazy mule artifact","*Add the capability to run functional test cases with a lazy mule artifact*    To be able to run in a more trustworthy context, more similar to the one used by the Tooling Client, be able to run Metadata and Value Provider tests cases in a Lazy Mule Artifact.",Task,Minor,Done,"2017-09-03 17:27:54","2017-09-03 16:27:54",3
Mule,"Do reactiveInterceptorAdapter initialization once per chain","The injection of ReactiveInterceptorAdapater's must be done at flow initialization instead of event processing.","Enhancement Request","To be reviewed",Closed,"2017-09-02 22:53:38","2017-09-02 21:53:38",1
Mule,"Fix module tests failing in Windows","[Test run results|https://docs.google.com/spreadsheets/d/1YXsIXyqjcQVIgpiZK8zIwi9y2OcV9LnLPGBBP30bLNA/edit#gid=1636801084]    *Modules reporting failures*  * metadata-model-api  * mule  * mule-api  * mule-compatibility-plugin  * mule-db-connector  * mule-distributions  * mule-ee  * mule-ee-distributions  * mule-email-connector  * mule-file-connector  * mule-ftp-connector  * mule-http-connector  * mule-http-ee-service  * mule-integration-tests  * mule-jms-connector  * mule-oauth-module  * mule-objectstore-connector  * mule-scripting-module  * mule-soap-service  * mule-sockets-connector  * mule-validation-module  * mule-vm-connector  * mule-wsc-connector",Task,Major,Done,"2017-08-31 16:40:04","2017-08-31 15:40:04",16
Mule,"Avoid usage of SPI on ThreadPoolFactory ","ThreadPoolFactory from mule 3.x has support to provide different thread pools depending on whether the runtime was a CE or EE version.  As compatibility is now EE only, there is no need to maintain this functionality and the code would be more easy to read and performant without using SPI",Task,Major,Done,"2017-03-15 14:55:01","2017-03-15 14:55:01",1
Mule,"Upgrade CXF to 2.7.19-MULE-002 patch release.","Since some fixes were cherrypicked in our fork and a new release is available, we must update this library in runtime.",Task,"To be reviewed",Done,"2017-09-01 17:48:59","2017-09-01 16:48:59",2
Mule,"Release Apache CXF fork verion 2.7.19-MULE-002","Since some changes were applied, Mule CXF Fork must be released.",Task,Minor,Done,"2017-09-01 15:52:06","2017-09-01 14:52:06",2
Mule,"Support hooks for before/after execution of chain inner components","Support hooks for before/after execution of chain inner components","Enhancement Request",Critical,Closed,"2017-08-31 20:50:21","2017-08-31 19:50:21",13
Mule,"Consolidate test report of all projects to estimate coverage","Create consolidated Allure report from test pipeline to see complete status of the project pre-release so we can estimate test coverage.",Task,Major,Done,"2017-08-31 17:32:22","2017-08-31 16:32:22",8
Mule,"DataSense medatadata fails when the application is running","Description   The metadata generation fails when the application is running.    Steps to reproduce   1- Create an application with a single flow with a listener and a logger.   2- Run the application.   3- Go to the listener configuration and then just click OK to trigger the metadata calculation.   4- An error message will appear saying that it can't start the application because the address is already in use.     ",Bug,Blocker,Resolved,"2017-08-31 17:51:26","2017-08-31 16:51:26",2
Mule,"Every exported Mule package must contain api (part6)","All the packages exported on the Mule container must contain the api package.  Currently, there are packages that do not say api. For example org.mule.runtime.module.artifact.  This task is to fix only all the packages that are intended to be exported. Some internal packages are begin exported now, but just temporarily, so those packages will be manage in a different issue.",Task,Blocker,Done,"2017-08-31 17:30:47","2017-08-31 16:30:47",16
Mule,"java.lang.StackOverflowError while loading resource with plugin class loader","Once XSD were removed there is code that is still trying to load xds and end up in an stackoverflow.",Bug,Critical,Resolved,"2017-08-31 17:28:10","2017-08-31 16:28:10",2
Mule,"Remove mule-tests-unit dependency from mule-maven-plugin project which was causing a circular dependency with the mule project","Remove mule-tests-unit dependency from mule-maven-plugin project which was causing a circular dependency with the mule project",Task,Minor,Done,"2017-08-31 15:54:33","2017-08-31 14:54:33",1
Mule,"Separate wrapping logic from ErrorMessageAwareException","When ErrorMessageAwareException was first introduced, a wrapping logic was added to it. However, this proved to be only necessary for compatibility purposes. It's confusing to use and since it will be the way of propagating error messages we need to fix it ASAP.",Task,Major,Done,"2017-08-31 15:18:44","2017-08-31 14:18:44",2
Mule,"Update foreach scope to not support Map","DW splits a Map of n into Map of 1. This is consistent with DW but inconsistent with how people expect to use foreach. Solution we discussed was to:  - fail early, when attempting to use foreach with Map to avoid confusion for user.    - use DW entrySet with foreach to iterate over map entries",Task,Blocker,Done,"2017-08-31 13:39:15","2017-08-31 12:39:15",2
Mule,"SDK registers invalid errors for extension sources.","The SDK is registering invalid errors for extension sources, for example MULE:SOURCE_ERROR_RESPONSE_GENERATE which is an internal error.    Maybe a simple solution would be to just modify the ExtensionErrorsRegistrant#getErrorType method to use    instead of the    Check tests!       ----  There are some tests ignored because of this issue in ErrorHandlingConfigurationFailuresTestCase. please fix     ",Bug,Blocker,Closed,"2017-08-30 20:24:58","2017-08-30 19:24:58",3
Mule,"MavenUtils is locking pom files","When reading pom files, the MavenUtils in mule repository is not closing the FileReader, creating a resource leak.   The issue is located at method org.mule.runtime.module.deployment.impl.internal.maven.MavenUtils#getPomModelFolder",Bug,Critical,Closed,"2017-08-30 20:18:02","2017-08-30 19:18:02",0
Mule,"LinkageError when a test sharedRuntimeLib is also used by a mule-plugin","The issue occurred while working on MULE-13203.    When adding spring jars as shared runtime libs in the test configuration, a plugin that has those same libs internally (not exposed) fails with a LinkageErrors when first loading those.    I replicated the scenario in standalone but it worked fine, so the problem must be in the code that builds the classloders for testing.    This issue should be fixed when the result of MULE-11321 is done.",Bug,Major,Resolved,"2017-08-30 19:47:12","2017-08-30 18:47:12",4
Mule,"Multiple transactions for try scope on TryItService","When running app with try scope and fetching notifications with TryIt service, instead of having one transaction for the entire flow with 3 transaction entries, we are getting 3 transactions with 1 entry each. ",Bug,Major,Resolved,"2017-08-30 18:35:21","2017-08-30 17:35:21",4
Mule,"Make module maven plugin code reusable from other plugins","Need to make the module maven plugin main code reusable form other plugins, like the packager.   The idea is to use the same API validation to ensure that an application is exporting all the required packages to plugins/policies",Task,Major,New,"2017-08-30 13:41:39","2017-08-30 12:41:39",8
Mule,"Foreach counter type should be number and not string","Foreach counter type should be number and not string to support == with Datsense.",Bug,Major,Resolved,"2017-08-29 21:35:25","2017-08-29 20:35:25",1
Mule,"Add properties that are mapped to config provider rather than config","To complete the JIRA around MULE-12545, it would be ideal to mark <property>s as configProviders",Task,Critical,Done,"2017-08-29 20:44:49","2017-08-29 19:44:49",0
Mule,"Fix flaky test org.mule.test.module.scheduler.cron.CronSchedulerTestCase.test","Test fails from time to time  h3. Error Message    reactor.core.Exceptions$ReactiveException: java.lang.AssertionError: Expected: is <5> but: was <7> at reactor.core.Exceptions.propagate(Exceptions.java:219) at org.mule.runtime.core.api.rx.Exceptions.propagateWrappingFatal(Exceptions.java:177) at org.mule.runtime.core.api.util.func.CheckedSupplier.handleException(CheckedSupplier.java:32) at org.mule.runtime.core.api.util.func.CheckedSupplier.get(CheckedSupplier.java:27) at org.mule.tck.probe.JUnitLambdaProbe.test(JUnitLambdaProbe.java:40) at org.mule.tck.probe.JUnitProbe.isSatisfied(JUnitProbe.java:34) at org.mule.tck.probe.PollingProber.poll(PollingProber.java:60) at org.mule.tck.probe.PollingProber.check(PollingProber.java:51) at org.mule.test.module.scheduler.cron.CronSchedulerTestCase.test(CronSchedulerTestCase.java:69) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298) at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:748) Caused by: java.lang.AssertionError: Expected: is <5> but: was <7> at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at org.mule.test.module.scheduler.cron.CronSchedulerTestCase.lambda$test$0(CronSchedulerTestCase.java:71) at org.mule.runtime.core.api.util.func.CheckedSupplier.get(CheckedSupplier.java:25) ... 19 more  h3. Stacktrace    java.lang.AssertionError: reactor.core.Exceptions$ReactiveException: java.lang.AssertionError: Expected: is <5> but: was <7> at reactor.core.Exceptions.propagate(Exceptions.java:219) at org.mule.runtime.core.api.rx.Exceptions.propagateWrappingFatal(Exceptions.java:177) at org.mule.runtime.core.api.util.func.CheckedSupplier.handleException(CheckedSupplier.java:32) at org.mule.runtime.core.api.util.func.CheckedSupplier.get(CheckedSupplier.java:27) at org.mule.tck.probe.JUnitLambdaProbe.test(JUnitLambdaProbe.java:40) at org.mule.tck.probe.JUnitProbe.isSatisfied(JUnitProbe.java:34) at org.mule.tck.probe.PollingProber.poll(PollingProber.java:60) at org.mule.tck.probe.PollingProber.check(PollingProber.java:51) at org.mule.test.module.scheduler.cron.CronSchedulerTestCase.test(CronSchedulerTestCase.java:69) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298) at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:748) Caused by: java.lang.AssertionError: Expected: is <5> but: was <7> at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at org.mule.test.module.scheduler.cron.CronSchedulerTestCase.lambda$test$0(CronSchedulerTestCase.java:71) at org.mule.runtime.core.api.util.func.CheckedSupplier.get(CheckedSupplier.java:25) ... 19 more at org.mule.tck.probe.PollingProber.check(PollingProber.java:52) at org.mule.test.module.scheduler.cron.CronSchedulerTestCase.test(CronSchedulerTestCase.java:69) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298) at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:748)     ",Task,Major,Done,"2017-08-29 19:02:40","2017-08-29 18:02:40",2
Mule,"Code formatter fails on Windows","Code formatter fails on Windows.    Need to update formatter version and remove explicit LF configuration.",Task,"To be reviewed",Done,"2017-08-29 18:57:08","2017-08-29 17:57:08",1
Mule,"Cleanup MuleContextListener and DeploymentListener","MuleContextListener and DeploymentListener must be updated so they don't provide access to MuleContext.     The also need to provide access to the application objects that are part of the API in the right notification method. For instance, the ConfigurationComponentLocator service should not be acceded during MuleContextListener.onCreate(..) since it won't have a valid state at that point. This is related to MULE-13375",Task,Major,Done,"2017-08-29 18:09:34","2017-08-29 17:09:34",8
Mule,"VM Listener fails to release transacted message with numberOfConsumers greater than 1","See VMTxTestCase.listenerRollback(). When the fake scheduler service was used or if numberOfconsumers=1 is configured in the vm:listener, then it works. Logging the execution of the transaction methods, it seems a message is poll from the queue within a transaction but the transaction is never rolled back.",Bug,Critical,Closed,"2017-08-29 17:58:40","2017-08-29 16:58:40",5
Mule,"ProcessorChains are not being synchronised properly","In MUnit we have processor chains that need to be executed synchronously in order to be tested correctly.     Both _execution_ and _validation_ are processor chains, and before executing the _validation_ chain, the processors inside _execution_ need to have finished. In this case, the _logger_ inside the async needs to be executed before the _verify-call_    org.mule.runtime.core.privileged.processor.CompositeProcessorChainRouter should ensure that each of the chains handled by it do not continue executing until every async task is done",Bug,Critical,Resolved,"2017-08-29 17:56:51","2017-08-29 16:56:51",4
Mule,"Adapt multipart test once DW bugs are fixed","Several bugs have been reported to DW regarding multipart handling, including:  * mixed subtype having wrong content disposition type  * failure to read content because content type is not inferred  * Binary being forced as type of unknown mime types  * errors trying to read nameless part    As a result some tests are ignored and in others the scripts contain workarounds so when those are fixed they'll need updating.",Task,Major,Done,"2017-08-29 14:56:56","2017-08-29 13:56:56",1
Mule,"All schedulers view allows changing their state","The scheduling service provides a way of obtaining all schedulers for monitoring purposes. However, this view is not truly read only so users can actually retrieve all schedulers and stop all of them, for example.   We need to avoid this because people are already mistakenly using that to stop their schedulers when leaking them and if done in prod it could be a severe problem.",Bug,Major,Resolved,"2017-08-29 14:47:57","2017-08-29 13:47:57",2
Mule,"ExtensionManager not stopped while undeploying operation","Because CompositeExtensionManager doesn't propagate lifecycle to its child extension manager, a memory leak can occur while undeploying operations.     ",Bug,Critical,Closed,"2017-08-28 23:06:31","2017-08-28 22:06:31",2
Mule,"SourceConnectionProvider doesn't work as expected","*SourceConnectionProvider doesn't work as expected*   * _SourceConnectionProvider_ is what is injected into the Sources to be able to create connections.   * {{testConnectivity(Connection connection)}} it should make a test connection with the given connection as the parameter, but what does, is not use the connection and finally fails with an StackOverflow due to a nonstop recursive call.   * {{disconnect(Connection connection}})  it should disconnect and stop the connection but it depends on the kind of the specified ConnectionProvider strategy:   ** If cached or pooled, it will just release it, but won't destroy it.   ** If none, it will disconnect it totally.   * The problem with the disconnect if you want to stop it totally you can't because the connection provider logic in charge of doing that won't be executed.",Bug,Blocker,Closed,"2017-08-28 20:26:44","2017-08-28 19:26:44",8
Mule,"ClassCastException: org.codehaus.plexus.util.xml.Xpp3Dom cannot be cast to org.codehaus.plexus.util.xml.Xpp3Dom when using Tooling Runtime Client","When loading Tooling Runtime Client on Studio, a class cast exception due to class loading issue is happening:        Full stacktrace:  ",Bug,Blocker,Resolved,"2017-08-28 19:22:12","2017-08-28 18:22:12",0
Mule,"Fix ignored test DeploymentServiceTestCase#deploysApplicationWithPluginDependingOnPlugin","After MULE-13393, test deploysApplicationWithPluginDependingOnPlugin of DeploymentServiceTestCase class is failing because now as the test jar is light, it tries to get the plugin from maven repo, and is not there since it needs to be installed first",Task,Major,Done,"2017-08-28 18:03:13","2017-08-28 17:03:13",8
Mule,"Reconnect forever retry policy doesn't reconnect at all","*Reconnect forever retry policy doesn't reconnect at all*   * If you choose the {{reconnect-forever}} retry policy, a {{SimpleRetryPolicy}} is created with the value of  {{-1}}.   * This {{SimpleRetryPolicy}} doesn't have any kind of special logic to handle this case and threats as a common one and no retry is executed.    *Update:*  If the Retry is executed in a blocking way, it works correctly, because it checks if the value is {{-1}} but, if is executed in a non blocking way, it will update the value to {{0}} and stop before any retry is executed    [https://github.com/mulesoft/mule/blob/mule-4.x/core/src/main/java/org/mule/runtime/core/internal/retry/policies/SimpleRetryPolicy.java#L60]",Bug,Major,Closed,"2017-08-28 15:07:15","2017-08-28 14:07:15",8
Mule,"DeployableFileBuilder is including repository folder in artifact jar even with light package","DeployableFileBuilder, used for building tests artifacts jars, has an option to make the artifact heavy or light. But when light is selected, the final jar still has the repository folder in it.",Bug,Major,Closed,"2017-08-27 22:29:18","2017-08-27 21:29:18",0
Mule,"Clean up BulkOperationResult API","Clean up that API",Task,Major,Done,"2017-08-26 00:54:02","2017-08-25 23:54:02",1
Mule,"Missing annotations to describe synthetic type's names","There's a field named type that can be found in severals extensions under TLS -> trust-store -> type, that has a synthetic type that looks like the following:        Those types are missing some annotation (typeAlias?) that we can use to show to the users. Synthetic types are displayed in the same way as regular subtypes, as options in a dropdown, but these above end up rendered as blank options since there's no description/label/annotation we can use as display name.","Enhancement Request",Major,Closed,"2017-08-25 21:14:49","2017-08-25 20:14:49",2
Mule,"Provide a reusable utils to query properties from a class artifact's pom","This is needed for querying pom properties from embedded test cases.","Enhancement Request","To be reviewed",Resolved,"2017-08-25 21:01:44","2017-08-25 20:01:44",0
Mule,"Spike to support DataSense on MUnit components","MUnit defines different resources for the application that would be needed in order to define the ApplicationModel needed by DataSense, this story is about researching and implementing support for it.",Task,Major,Done,"2017-08-25 19:15:40","2017-08-25 18:15:40",8
Mule,"HTTP server does not close connection with chunked encoding","Since all content-length/transfer-encoding header logic remains in the HTTP connector, the service server suffers the consequences there mitigated. For example, when used with a simple ByteArrayEntity it sends chunked encoding but never closes the connection meaning no 0 message is sent and clients wait out for it. Silver lining is the client does not explode but takes longer to complete.",Bug,Major,Resolved,"2017-08-25 02:05:48","2017-08-25 01:05:48",2
Mule,"CRITICAL errors should be logged","When a CRITICAL error is found, it is not handled yet we should log it at least, otherwise it is hidden and you can't tell what went wrong. To reproduce run org.mule.test.integration.exceptions.ErrorHandlerTestCase#criticalNotHandled.",Bug,Critical,Closed,"2017-08-24 23:17:10","2017-08-24 22:17:10",4
Mule,"Fix ExceptionReader exceptionReaders list","ExceptionHelper.exceptionReaders is global for the runtime, but a reader specific for a plugin/app can be registered.         The problem happens when a plugin Reader can process exceptions from the runtime and said plugin is used by more than one application. In that case, the reader selection could be messed up.    The registered readers must be partitioned by app.",Bug,"To be reviewed",Resolved,"2017-08-24 22:28:45","2017-08-24 21:28:45",2
Mule,"JMS Message Listener doesn't release listener if an error occurs or the source stops","JMS Message Listener doesn't release listener if an error occurs or the source stops",Bug,Critical,Resolved,"2017-08-24 22:02:07","2017-08-24 21:02:07",3
Mule,"Provide a way to unregister ExceptionReader from ExceptionHelper","If an extension/application registers an Exception Reader and it isn;t remove un underlay, a class loader leak occurs.",Task,"To be reviewed",Done,"2017-08-24 17:41:09","2017-08-24 16:41:09",0
Mule,"Wrong classloader being disposed when multiple policy templates are present","When a policy is undeployed, the first present template is being disposed (and its classloader) instead of the one corresponding to that particular policy",Task,Critical,Done,"2017-08-23 22:29:55","2017-08-23 21:29:55",0
Mule,"Adding validation method to DataWeave service","Adding validation method to DataWeave service.",Task,Major,Done,"2017-08-23 21:56:40","2017-08-23 20:56:40",0
Mule,"Context Injected in ServerPlugins does no find ConfigurationComponentLocator","MUnit has a server plugin that requires to take out of the context the ConfigurationComponentLocator         When calling getConfigurationComponentLocator on the mule context received in the method     onMuleContextCreated the returned value is null ",Bug,Blocker,Resolved,"2017-08-23 21:44:54","2017-08-23 20:44:54",0
Mule,"Expose InternalInterceptionEvent","Munit needs to have access to this class     org/mule/runtime/core/internal/interception/InternalInterceptionEvent         Otherwise we can not mock processors ",Bug,Blocker,Resolved,"2017-08-23 21:42:26","2017-08-23 20:42:26",8
Mule,"Implement a way to have access to the MuleContext of the policies","Gateway needs to have access to the MuleContext of the policies in order to enable ServerNotifications for it.",Task,Critical,Done,"2017-08-23 21:30:18","2017-08-23 20:30:18",0
Mule,"Interception API is not handling module exceptions.","When an exception is thrown resolving the parameters using interception API and the exception carries an error (it's a module exception) the error is not being propagated. There is a logic that we apply in order to extract the correct error type (ModuleExceptionHandler#process()).    Adding a simple Try Catch clause in the OperationMessageProcessor#resolveParameters should be enough    Add a test case on ProcessorInterceptorFactoryTestCase and check that the cases that we have today still apply.",Bug,Blocker,Resolved,"2017-08-23 18:00:54","2017-08-23 17:00:54",4
Mule,"OAUTH_ERROR should be CLIENT_SECURITY","The OAuth module currently generates OAUTH_ERROR types but it's parent is SECURITY. We need to consider making this CLIENT_SECURITY or even HTTP:CLIENT_SECURITY so it can be better represented. We should also rename it since it's not just redundant but might create trouble when the OAuth provider exists, OAUTH_CLIENT might be a better name.",Bug,Critical,Resolved,"2017-08-23 17:24:54","2017-08-23 16:24:54",2
Mule,"Disallow reserve characters in global element names","We need to disallow the use of '/', '[' and ']' as allowed characters in global elements name attributes. This is required so we don't have to scape characters in the component location paths which would make the use of them by clients much more cumbersome. ",Task,Critical,Done,"2017-08-23 16:29:57","2017-08-23 15:29:57",1
Mule,"Replace maven descriptor loaders ID ","Descriptor loaders ID maven used to identify bundleDescriptorLoader and classLoaderModelLoaders in the artifact descriptors has to be renamed to mule. The reason is that, at least in the case of the classloaderModelLoder, we are using maven as the ID, but we are not always using Maven to load it.    We support heavy/light packaging of artifacts. Both are currently using maven as the ID, but in the case of heavy package, we are using the classloader-model.json to load the classloader model instead of using Maven.",Task,Critical,Done,"2017-08-23 14:39:53","2017-08-23 13:39:53",1
Mule,"Getting java.lang.NoClassDefFoundError and java.lang.IncompatibleClassChangeErrorafter including CGLIB on core","After the adding of CGLIB as a dependency of mule-core, the execution of the uber project started to fail with errors as  java.lang.NoClassDefFoundError and java.lang.IncompatibleClassChangeError related to using CGLIB classes.",Bug,Critical,Resolved,"2017-08-22 22:46:49","2017-08-22 21:46:49",2
Mule,"Allow access to session properties from privileged API","Allow access to session properties from privileged API",Task,Critical,Done,"2017-08-22 21:50:23","2017-08-22 20:50:23",16
Mule,"Make TNS (aka: this) references be implicit in a <module>","Once MULE-13317 is implemented, there will be possible to call operations defined within the same module, but the current approach forces the user to add a specific prefix as xmlns:tns with its correpondant namespace Uri and location.    Ideally, all of that can be inferred by the runtime code, making the developer's life easier.",Task,Trivial,Done,"2017-08-22 15:18:58","2017-08-22 14:18:58",0
Mule,"PhaseErrorLifecycleInterceptor is not being applied when AbstractPipeline doStart fails","If org.mule.runtime.core.internal.construct.AbstractPipeline#doStart fail to start the pipeline the processingStrategy is not being stopped therefore a class loader leak is generated.  The org.mule.runtime.core.lifecycle.PhaseErrorLifecycleInterceptor is supposed to handle this but seems that there is an issue as it is not calling the stop of the AbstractPipeline when it fails. The original issue MULE-13355 added custom logic on AbstractPipeline#doStart to handle this manually but this issue is about to remove that code and make it work PhaseErrorLifecycleInterceptor on this case.",Bug,Major,Resolved,"2017-08-22 14:25:55","2017-08-22 13:25:55",4
Mule,"WSC: NPE when doing Test Connection","*Steps to reproduce*  # Create a WSC config with the followed settings   *WSDL*: http://services.mythicalcorp.com:86/OrderService.svc?wsdl  *Service*: service  *Port*: BasicHttpBinding_IOrderService     # Test Connection     *Issue*: The followed NPE is thrown and the test connection fails        ",Bug,Blocker,Closed,"2017-08-16 16:03:14","2017-08-16 15:03:14",5
Mule,"Application's log config logs to console when no appender is configured","When an application contains a log4j2.xml configuration file that defines loggers but no appenders, the log output is directed to the console.    It makes more sense, if in those scenarios, the output is directed to the default application log file instead.",Bug,Minor,Resolved,"2017-08-18 19:57:11","2017-08-18 18:57:11",1
Mule,"Introduce split-aggregate router consistent with scatter-gather","Consistent with scatter-gather and using ForkJoinStrategies but operating on split parts instead of routes.",Story,Critical,Done,"2017-08-18 17:57:19","2017-08-18 16:57:19",8
Mule,"Migrate exceptionPayload from message to new error handling mechanism","Right now, the implementation of error propagation relying on the ExceptionPayload being set on the message is still present in the Message.    This is used only by the compatibility module.    Uses in the compatibility module must be migrated to the new Mule 4 error handling mechanism and the ExceptionPayload from the message removed.",Task,"To be reviewed",Done,"2017-08-18 13:54:55","2017-08-18 12:54:55",1
Mule,"Move OutputHandler to privilegedApi/compatibility","OutputHandler is referenced by DataType implementation    Once MULE-13351 is done, it should be declared as a consumable type dynamically and made accessible through privileged API or moved directly to compatibility,    In any case, any unneeded uses of OutputHandler (there are some references in connectors) have to be removed.",Task,"To be reviewed",Done,"2017-08-18 13:51:35","2017-08-18 12:51:35",4
Mule,"Provide a way to extend the list of consumableClasses in DataType","Plugins and applications may define their own types of consumable objects.    They have to be dynamically contributed to the data type so it can determine a type it doesn't know about in compile time is streaming.",Task,"To be reviewed",Done,"2017-08-18 13:49:06","2017-08-18 12:49:06",4
Mule,"Transaction Exception when using vm:listener without transactions","If a listener founds no messages and no transaction is begun, a transaction exception is thrown",Bug,Major,Closed,"2017-08-17 20:55:26","2017-08-17 19:55:26",1
Mule,"Remove <processor-chain>","Remove <processor-chain>",Task,Critical,Done,"2017-08-17 17:37:57","2017-08-17 16:37:57",4
Mule,"Remove use of flow error handler in async scope","Remove use of flow error handler in async",Task,Blocker,Done,"2017-08-17 17:15:07","2017-08-17 16:15:07",2
Mule,"Add better test coverage for Http reconnection","Add better test coverage for reconnection scenarios",Task,Major,New,"2017-08-17 16:58:27","2017-08-17 15:58:27",8
Mule,"Tooling should be able to load Mule Runtime Services in order to avoid class loading issues","DataSense and Weave should accessed through its Services interfaces. Tooling should be able to create the class loader and load services as Runtime does.",Task,Major,Done,"2017-08-17 16:50:45","2017-08-17 15:50:45",8
Mule,"Add better test coverage for Sockets reconnection","Add more test cases for reconnection cases in Sockets connector",Task,Major,New,"2017-08-17 16:48:00","2017-08-17 15:48:00",5
Mule,"Review package and runtime structure of application/domain/plugins/policy artifacts","Need to review the final format of the mentioned artifacts before the final RC to avoid introducing backward compatibility issues in the near future.",Task,Blocker,Done,"2017-08-17 16:37:31","2017-08-17 15:37:31",1
Mule,"Rename the maven plugin used to package plugins/extension/services","We are using the mule-app-plugins-maven-plugin plugin to package different artifact (plugins/services) and mule-extensions-maven-plugin to package extension plugins.    As this plugins will be moved to be part of the mule-maven-plugin, we need at least to get the proper names to avoid confusion in the future.",Task,Blocker,Done,"2017-08-17 16:35:05","2017-08-17 15:35:05",1
Mule,"Applications and domains artifact must be real jars","Currently, application and domain artifact files have JAR extension, but they are not real JAR files because classes and resources are not located in the root of the files, but inside the classes folder.    The main problem with this, is that domains can include classes/resources and applications inside that domain can use them. So, when a developer is creating an application, he has to be able to see the available classes in the IDE.",Task,Blocker,Done,"2017-08-17 16:26:03","2017-08-17 15:26:03",4
Mule,"Remove internal dependencies from mule-tooling-api","We should remove all dependencies to mule-api and datasense-api from mule-tooling-api",Task,Major,Done,"2017-08-17 16:00:19","2017-08-17 15:00:19",16
Mule,"Allow private-object-store definition in SDK's extensions","OAuth module uses an object store as his configuration. Since we are now allowing object stores to be defined privately for the components that use them, we should allow the same in the SDK ",Task,"To be reviewed",New,"2017-08-17 15:48:04","2017-08-17 14:48:04",4
Mule,"Update Grizzly to version 2.3.33","We need to update the Grizzly version to 2.3.33 since that one fixes a performance issue quite severe and a regression introduced by that fix.",Bug,Critical,Resolved,"2017-08-17 15:26:18","2017-08-17 14:26:18",1
Mule,"Log entry for source errors does not show the location of the failing source","When the MessagingException for a source error is created, it should pass along the failing source, so it is properly appended to the log for troubleshootung.         Currenty it shos just *Element: null*",Bug,Major,Resolved,"2017-08-17 13:14:50","2017-08-17 12:14:50",2
Mule,"ERR_INVALID_RESPONSE when using HTTP listener an a DW transformation that has errors","Provided configuration has an HTTP listener (GET) and does a transformation, it is expecting to get a query parameter and if users don't pass this param the script fails but the response cannot be interpreted by browser as it has the following content:    Headers:    This in Google Chrome ends up with a page saying that ERR_INVALID_RESPONSE which is very annoying.    Seems that content-type: application/java is causing this issue, wondering if there is a better way to handle it.",Bug,Minor,Resolved,"2017-08-17 04:36:43","2017-08-17 03:36:43",1
Mule,"Review redelivery-policy behaviour and limitations","We should review the way redelivery-policy is intended to be used.    For now, it's only allowed in vm, jms, sockets and http but they don't seem to be used at all. (No test could be found of redelivery-policy usage and when tried with vm it did not work).    Also, it's one of the components that uses an object-store as configuration element. That means that it should allow a private object store to be configured inline and that functionality needs to be tested as well.     Be sure to test every possible ObjectStoreConfiguration when fixed",Task,Minor,New,"2017-08-16 21:06:56","2017-08-16 20:06:56",2
Mule,"WSC fails to resolve metadata for wsdl.","The provided wsdl contains one operation that throws an exception when resolving metadata for it.    Use the attached wsdl with the following configuration:    Service: GCS6010CService  Port: GCS6010Port    Error is:    org.mule.runtime.api.metadata.MetadataResolvingException: Could not load part element name [    \{http://www.GCS6010CO.com/schemas/GCS6010COInterface}    GCS6010CDATA] ",Bug,Critical,Closed,"2017-08-16 17:48:58","2017-08-16 16:48:58",5
Mule,"Http non-blocking error handler nor cleaning thread local","The problem might be caused by a combination of load and theads shortage, which might be causing processes to run on grizzly's timeout thread.    The leak itself, as seen from the reports, is the theadlocal of the timeout thread keeping a reference to a MuleEvent.",Bug,Critical,Closed,"2017-08-16 14:02:19","2017-08-16 13:02:19",0
Mule,"Auto generate service/server plugins descriptors","Service and server plugins descriptors are required to be provided by each project as a resource. Most of the information used on those descriptors is the same, and only a couple of values are required to be manually provided (the server plugin and services classes, artifact names)    It would be better to automatically generate this descriptor with the provided info.     Note: take in account that the isolated test runner will need to create services for tests, so it will need to access the generated info or regenerate it.",Task,Major,New,"2017-08-15 23:25:13","2017-08-15 22:25:13",8
Mule,"Error type not logged when exception is not ME","Some code was added to MessagingException to log the error type but it depends on that exception being the one logged. However, the most specific exception is the one logged so often it does not show up. We need to rework it so that it's added as info instead, which is propagated among exceptions when the root is searched for. This is important because it can hint the user regarding errors missing in their handling also help us identify them.    To reproduce, run org.mule.test.integration.exceptions.OnErrorContinueTestCase#onErrorTypeMatchSeveral for example and see the logs where MULE:UNKNOWN should be shown.         We should some a way of testing all this. Somehow we should support asserting the message logged when an exception is thrown and also force different exception chains to check logging behaviour.",Bug,Major,Resolved,"2017-08-15 21:16:01","2017-08-15 20:16:01",8
Mule,"Source onTerminate called twice because of policies","While doing some changes in the on-error-continue component I noticed source error tests where throwing a NPE in Grizzly. The tests pass because 2 onTerminate are called and the first is successful in providing a response, but the second throws the error since the connection has been reset in the first. Tracking both executions shows the first coming from org.mule.runtime.core.internal.execution.ModuleFlowProcessingPhase#sendErrorResponse and the second coming from org.mule.runtime.core.internal.execution.ModuleFlowProcessingPhase#policySuccessError. It seems we need to analyse how to treat this policy cases.    To reproduce, run org.mule.test.integration.exceptions.OnErrorContinueTestCase#doesNotHandleSourceErrors and check the logs:          ",Bug,Critical,Resolved,"2017-08-15 20:56:29","2017-08-15 19:56:29",4
Mule,"Name Clash validator doesn't validate clashing between elements","*Name Clash validator doesn't validate clashing between elements*    Cases:   * Content parameters and other elements like Operations, Sources, Etc   * Content parameters with other elements with childElement support   * Operations/Sources/Configurations   *  with other elements with childElement support ",Bug,Critical,Resolved,"2017-08-15 18:53:42","2017-08-15 17:53:42",5
Mule,"Support calling operations defined in the same module","There should be a way to call operations defined in the same module ",Task,Critical,Done,"2017-08-15 17:28:43","2017-08-15 16:28:43",0
Mule,"AsyncDelegateMessageProcessor depends on flow construct","If you check     *org.mule.runtime.core.internal.processor.AsyncDelegateMessageProcessor#initialise*         You'll se that in line 84 is doing     flowConstruct = getFromAnnotatedObject(componentLocator, this);         Now if this component is inside a location that is not a flowconstruct, such as a MUnit test then the lookup will fail.   Thus, the init of the component will fail  which will end up failing the deployment of the application.    No processor should depende on a flow construct anymore",Bug,Major,Resolved,"2017-08-15 15:26:12","2017-08-15 14:26:12",1
Mule,"Wrong DataType set adapting repeatable stream","When an InputStream is transformed into a CursorStreamProvider, the DataTYpe still says InputStream, which leads to failing transformations",Bug,Critical,Closed,"2017-08-15 03:24:10","2017-08-15 02:24:10",1
Mule,"Dependency resolution for Mule plugins is not honoring semantic versioning on mule-maven-client","When the following conditions meet for an application:  * It depends on a mule-plugin X version 1.0  ** mule-plugin X depends on mule-plugin Z version 1.0  * It depends also on mule-plugin Y version 1.0  ** mule-plugin Y depends on mule-plugin Z version 1.1  * The expected dependency graph for the application should include:  ** mule-plugin X version 1.0  ** mule-plugin Y version 1.0   ** mule-plugin Z version 1.1    No matter if the nearest algorithm or the dependency was defined before (in application's pom.xml) the rule for defining conflicts for mule-plugin versions should be by semantic versioning instead of default Maven's rules.  ",Bug,Critical,Resolved,"2017-08-14 21:56:22","2017-08-14 20:56:22",0
Mule,"Review if ExplicitMessageProcessorChainBuilder is needed","Review if ExplicitMessageProcessorChainBuilder is still needed. Seems it was created for notification purposes and may not be needed anymore",Task,Minor,New,"2017-08-14 17:16:02","2017-08-14 16:16:02",4
Mule,"Fix MessageProcessorNotificationTestCase.firstSuccessful","After changes in MULE-11553 the post notifications in first-successful are not being sent. If DefaultMessageProcessorChainBuilder.LazyProcessor.apply is comment out, then notifications work. ",Bug,Blocker,Closed,"2017-08-14 16:36:28","2017-08-14 15:36:28",2
Mule,"Same error is reported multiple times when compiling an invalid extension","When compiling an extension with multiple errors (in this case 2) the errors are logged several times.    The same message is shown 4 times:     - The errors should be shown only once.   - WARNINGS: NONE message should not be displayed if there are no warnings.   - We shouldn't display WARNINGS using error log level.    *Full error log*  ",Bug,Major,Closed,"2017-08-14 10:22:41","2017-08-14 09:22:41",3
Mule,"Make MuleDeployment more flexible and useful","MuleDeployment needs to have the abililty to control application Deployment/Undeployment, as well as Mule start/stop, along with the ability to tear down resources automatically at the end of its lifecycle.",Task,Critical,Done,"2017-08-11 18:28:49","2017-08-11 17:28:49",2
Mule,"ContentBasedRoutingTestCase freezes the build","This test was temporarily ignored to make the CB plan run to the end. It should be fixed soon.    Also, it does not output any error messages. Debugging shows it doesn't pass through reactor hooks (they are registered though).",Task,Critical,Done,"2017-08-11 17:44:21","2017-08-11 16:44:21",4
Mule,"Message List datatype should be compatible with ResultsToMessageList","+underlined text+Since the fix for MULE-13198, in mule-agent it is expected that a ResultsToMessageList is compatible with a collection of messages",Bug,Major,Closed,"2017-08-11 16:37:40","2017-08-11 15:37:40",4
Mule,"Remove ignore from MUnitComponentPathTestCase","Remove ignore from MUnitComponentPathTestCase once MUnit is updated",Task,"To be reviewed",Done,"2017-08-11 16:34:07","2017-08-11 15:34:07",2
Mule,"Transitive dependencies of plugin not resolved","When the following conditions meet for a mule-plugin:  * It depends on another mule-plugin  * It depends on another jar  * Those both dependencies, in turn, depend an another artifact, the same for both  * The dependency of the plugin is declared before the other dependency    The classloader for the plugin do not contain the transitive dependecny.  ",Bug,Critical,Resolved,"2017-08-10 22:39:10","2017-08-10 21:39:10",0
Mule,"Support error mappings in smart connectors","Error mappings cannot be added to smart connectors because once an error is present the logic does not execute. We need to support those use cases.",Task,Critical,Done,"2017-08-10 21:16:54","2017-08-10 20:16:54",4
Mule,"Limit DW message binding context attribute exposure ","When binding message to Message interface in DW, we are exposing every getter of the interface and of the implementation being accessed while processing the DW script. We should avoid that and only expose getPayload() and getAttributes() to DW.",Task,Major,Done,"2017-08-10 19:53:48","2017-08-10 18:53:48",2
Mule,"Allow relative path for IdentityFile","IdentityFiles in src/main/resources are not recognised and will trigger an exception: *Root Exception was: File 'mule_sftp' not found. Type: class java.lang.IllegalArgumentException*     {color:#205081}3.8.4{color}    {color:#205081}4.0.0-BETA.4{color}  ","Enhancement Request",Major,Closed,"2017-08-10 15:49:32","2017-08-10 14:49:32",3
Mule,"Implement raise-error","We need to create a component to raise errors with a certain ID and message.",Task,Major,Done,"2017-08-09 22:20:12","2017-08-09 21:20:12",2
Mule,"Extension model is missing types and extensions declare own any","The extension model is mistakenly declaring certain error types such as critical and missing others. Additionally, every extension is declaring it's own ANY type.",Bug,Critical,Resolved,"2017-08-09 21:44:11","2017-08-09 20:44:11",2
Mule,"ConnectivityTesting should not use retry policy","It should not honor any retry policy when running connectivity testing",Bug,Major,Resolved,"2017-08-09 20:51:43","2017-08-09 19:51:43",8
Mule,"Maven settings proxy and mirror configurations are not considered for resolving dependencies","When using mule-maven-client to resolve dependencies, the configuration under <proxies> and <mirrors> in settings.xml is not yet taken into account.","Enhancement Request",Major,Resolved,"2017-08-07 21:04:50","2017-08-07 20:04:50",0
Mule,"Add a mechanism from the API to access MetadataService, ConnectivityService and ValueProviderService","We need to add a mechanism to access those services from the API since we are not exposing them anymore.",Bug,Blocker,Resolved,"2017-08-07 20:07:35","2017-08-07 19:07:35",2
Mule,"Migrate dataweave service to the new format","Dataweave service must be migrated to the new JAR file format.",Task,Blocker,Done,"2017-08-07 19:35:00","2017-08-07 18:35:00",0
Mule,"Upgrade RAML parser to 1.0.14","Upgrade RAML parser to 1.0.14",Task,Critical,Done,"2017-08-07 16:16:02","2017-08-07 15:16:02",2
Mule,"Override XML parsers by SPI to use our XMLSecureFactories","We always had the problem that libraries such as xerces, woodstox and saxon have files in META-INF/services that are used by the JVM XML factory libraries to build objects.    So if we need some functionality of those libraries we are currently forced to use their parsers, which could be old or not configured for security. In our own code we don't have this problem because we use XMLSecureFactories directly, but it affects other libraries we use (such as Spring).    We should add our own file to override them.",Task,Major,Done,"2017-08-07 14:49:01","2017-08-07 13:49:01",4
Mule,"Configuration Management","Support provisioning/replacement of configuration to the application when deploying.    When an application is getting promoted from one env to another (Dev -> QA or QA -> Prod), the devops need to be able to change connection provider configuration.    The idea is that the devops get a list of all the connection configurations and it's able to redefine the connection parameters during deployment.    This task is to define how the runtime manager (or any client) can get the set of connection providers that may require changing connection parameters and also to be able, during deployment, to provide those new parameters and the runtime must be able to apply them.",Story,Major,Done,"2017-08-07 14:25:06","2017-08-07 13:25:06",16
Mule,"Fix ProcessorInterceptorFactoryTestCase ","Test case ProcessorInterceptorFactoryTestCase is not working since the interceptor behaviour was working based on the mutability of the parameters inside the event. When that got fixed, this test started to break.          ",Bug,"To be reviewed",Resolved,"2017-08-07 05:44:15","2017-08-07 04:44:15",4
Mule,"JMS ActiveMQ brokerUrl is not visible from main view","JMS ActiveMQ brokerUrl is not visible from main view due to unnecessary dropdowns. Remove invalid options from the connector.",Bug,Major,Closed,"2017-08-06 00:00:39","2017-08-05 23:00:39",1
Mule,"TargetValue attribute should accept expression","Remove TargetType enum and accept expression which must be evaluated against a reduced binding context containing message, attributes and payload.","Enhancement Request",Critical,Closed,"2017-08-04 22:52:28","2017-08-04 21:52:28",5
Mule,"Automate builder convention through maven plugin","DW now supports interface instantiation using its define builder but it depends on us sticking to convention to analyse the methods to call reflectively. Changes were made by hand to support this but we need to automate the checks so as not to break the convention in the future and detect possible errors.    One thing to consider is that our current plugin to verify modules exports only works with maven 3.3.9.",Task,"To be reviewed",New,"2017-08-04 18:43:21","2017-08-04 17:43:21",8
Mule,"Upgrade Allure to latest versions","Upgrade Allure to latest versions:  |Dependency|Version|  |allure-junit4|2.0-BETA16|  |Allure Report|2.3.1|  |Allure Jenkins Plugin|2.22|",Task,Critical,Done,"2017-08-04 16:24:13","2017-08-04 15:24:13",1
Mule,"Test Runner exposes test resources from plugin classloader","When running on standalone, Mule doesn't allow to access the application resources from the plugin classloader.    However, when using the isolated runner, the lookup in the end falls back ti the surefire classloader, which has access to the test resources and allows to load them. They must be filtered out to emulate the behavior of standalone.",Bug,Critical,Closed,"2017-08-04 16:06:54","2017-08-04 15:06:54",2
Mule,"Interception API no calling before & around if the processor fails","If you register a processor interceptor and then you execute the following application             Before and around methods should be executed for processor set-payload *BUT* they are not     The they get properly executed for the other locations.          It is as if the  processor fail the interception does not get executed.          It's worth mentioning that the interceptor factory gets properly executed for every scenario",Bug,"To be reviewed",Resolved,"2017-08-04 16:05:52","2017-08-04 15:05:52",4
Mule,"When resolving operations over a LazyMuleArtifactContext components should be initialized and disposed as part of the same request","Current code is initializing the components and leave them initialized and registered whenever an operation is executed on a lazy context, the right way to do it would be initializing and disposing the components as part of the same request execution.",Task,Major,Done,"2017-08-04 15:25:51","2017-08-04 14:25:51",0
Mule,"Flow's Error Handler is never executed when policy is present","When a flow has an error handler defined, and an exception is thrown from the flow, the error handler is never executed when a policy is present. The error handler of the policy is executed (explicit or implicit), but the one of the flow is not.    In this branch there is a test case that shows this https://github.com/mulesoft/mule-ee/tree/MULE-13261  The test is HttpProxyPolicyFlowErrorNotHandledTestCase",Bug,Critical,Resolved,"2017-08-04 01:28:53","2017-08-04 00:28:53",4
Mule,"Use TypedValue length in HTTP service/connector","Use TypedValue length in HTTP service/connector",Task,Major,Done,"2017-08-03 17:42:26","2017-08-03 16:42:26",2
Mule,"Every exported Mule package must contain api (part5)","All the packages exported on the Mule container must contain the api package.  Currently, there are packages that do not say api. For example org.mule.runtime.module.artifact.  This task is to fix only all the packages that are intended to be exported. Some internal packages are begin exported now, but just temporarily, so those packages will be manage in a different issue.",Task,Critical,Done,"2017-08-03 17:41:30","2017-08-03 16:41:30",16
Mule,"Support maintaining successful route pairs when errors occur in ForkJoinStrategy implementations","Support maintaining successful route pairs when errors occur in ForkJoinStrategy implementations",Task,Critical,Done,"2017-08-03 17:41:24","2017-08-03 16:41:24",4
Mule,"Use xerces fork in metadata-model-xml to support non Oracle JVMs","Use xerces fork in metadata-model-xml to support non Oracle JVMs",Task,Major,Done,"2017-08-03 17:30:09","2017-08-03 16:30:09",4
Mule,"Invalid versioning for Mule Module Maven Plugin","The following is scattered all across the uber:    <groupId>org.mule.tools.maven</groupId>  <artifactId>mule-module-maven-plugin</artifactId>  <version>$\{muleModuleMavenPluginVersion}</version>    The version placeholder is resolved to 1.0-SNAPSHOT but should be 1.0.0-SNAPSHOT",Bug,Critical,Resolved,"2017-08-03 17:05:39","2017-08-03 16:05:39",2
Mule,"Leak resolving metadata on try scope","When resolving datasense for a processor inside the error handler of a try scope, it fails creating the scope because there are no processors within the try element and the factory bean fails. Since it's during the creation of the component, it never gets created. Later on, no a dispose of the artifact, mule tries to get from the registry all the objects to dispose and it fails again since spring tries to create the singleton object of the try. This error prevents the execution of stop and dispose over the rest of the components leaving threads running with references to the application class loader.",Bug,Critical,Closed,"2017-08-03 16:55:05","2017-08-03 15:55:05",2
Mule,"Disable application logger for deployments for Tooling Artifacts","No need to generate a file appender for each application deployed by Tooling",Task,Minor,Done,"2017-08-03 16:54:29","2017-08-03 15:54:29",4
Mule,"Annotation processor should not reference implementation classes from com.sun","The  org.mule.runtime.module.extension.internal.capability.xml.schema.ExtensionAnnotationProcessor is making explicit references to com.sun. implementation classes instead of using the interfaces of the annotation processing APIs.    This will prevent us from developing any IDE support as it happened with the DevKit plugin in the past. We had to remove all usages of com.sun for it to work.    There should be no need to explicitely import the implementations from that specific JDK as everything that is being done can be achieved using the actual APIs provided for processing annotations.    Any use of com.sun should not be encouraged and removed.",Task,Critical,Done,"2017-08-03 14:13:55","2017-08-03 13:13:55",1
Mule,"Find a way to represent synthethic types","Right now we don't have a good way to represent synthethic types such as the streaming strategy.     Find the solution which better suites Studio, Flow Designer and is compatible with DW","Enhancement Request",Major,Resolved,"2017-08-03 00:18:40","2017-08-02 23:18:40",8
Mule,"Revamp SDK support for validators","Some extensions such as JSON and XML need to contribute with validators. Need to rethink the overall approach to that so that those validators are consistent across the board","Enhancement Request",Major,Closed,"2017-08-02 21:16:46","2017-08-02 20:16:46",8
Mule,"Remove the description concept from all annotations","Annotations such as @Extension should not have a description attribute. Remove and use jdocs instead. Verify that those descriptions are properly obtained",Task,Critical,Done,"2017-08-02 21:09:04","2017-08-02 20:09:04",8
Mule,"Add support for parameters to MuleDeployment rule","Add support to pass parameters to MuleDeployment rule along with system properties.",Task,Major,Done,"2017-08-02 20:17:41","2017-08-02 19:17:41",1
Mule,"Validate that tlsContext is present either as a reference or as a child.","Right now there is no validation and if you don't configure the tlsContext in the xml, the connector using the tlsContextFactory will throw an NPE.",Bug,Major,Closed,"2017-08-01 20:23:03","2017-08-01 19:23:03",5
Mule,"DataSenseService cannot resolve properties in Tooling Client test cases","Using properties loaded through Spring's {{context:property-placeholder}} the Connectivity test runs OK but the MetaData key test fails:    The bug can be reproduced with this project: [connectors-integration-tests|https://github.com/mulesoft-labs/connectors-integration-tests/tree/06f2748665a13ead1a8a3d6ec1a499adce5d6bd8] by running the Salesforce suite: {{mvn clean -Dit.test=SalesforceIT verify}}    This is the test code: [SalesforceIT.java|https://github.com/mulesoft-labs/connectors-integration-tests/blob/06f2748665a13ead1a8a3d6ec1a499adce5d6bd8/src/test/java/org/mule/module/netsuite/integration/SalesforceIT.java]  This is the test application: [mule-config.xml|https://github.com/mulesoft-labs/connectors-integration-tests/blob/06f2748665a13ead1a8a3d6ec1a499adce5d6bd8/src/test/resources/salesforce-app/mule/mule-config.xml]",Bug,Minor,Resolved,"2017-08-01 19:27:06","2017-08-01 18:27:06",2
Mule,"Support application lightweight deployment with domains","We need to add support for lightweight application deployment using domains. This means that the domain repository must need to be taken into account when doing a deployment of an application with a domain.    Perhaps we should unify, for this type of deployments, the repository location. So it's always MULE_HOME/repository which will make domain dependencies required by the application not to be downloaded more than one.",Task,"To be reviewed",New,"2017-08-01 19:03:08","2017-08-01 18:03:08",4
Mule,"TLS configuration fails because of global element order","Under some circumstances, the TLS context for a listener configuration is declared below the config using it. This means that when the HTTP listener config is initialised, the TLS context it depends on won't be. As a result you will get a KeyStore must be configured for server side SSL error despite it being configured. The workaround is to move the XML TLS context element above the HTTP listener config one.    To reproduce, drag an HTTP listener to the canvas and configure its config as HTTP. Save and later edit it to be HTTPS and add the TLS context configuration. This will be added below the HTTP config causing the deployment error.    I'm adding the XML generated for a scenario where a listener was added with an HTTPS config from the start and one where it was added as HTTP and later edited to be HTTPS. The first one featured the TLS context above the listener config while the other included it below the listener config.",Bug,Critical,Resolved,"2017-07-28 18:56:39","2017-07-28 17:56:39",4
Mule,"MetadataOutputDelegate generating metadata type with wrong type annotation","     When using sql connector, select operation to retrieve array of resulting records...    Expected payload metadatype was:    But it generates...  ",Bug,Major,Closed,"2017-07-31 21:32:04","2017-07-31 20:32:04",1
Mule,"Expose source's config and connection parameters","Our use case is to be able to retrieve path, protocol, host and port of a HTTP Listener.    - Part of the path of the HTTP Listener is defined as a parameter of the source. This can be achieved since MULE-11955.  - Base path (the remaining part of the path) is defined as a parameter of the source's config.  - Host, protocol, and port are defined as parameters of the config's connection.    So, we need a way to access the last two groups of parameters: parameters of the configuration and parameters of the connection","Enhancement Request",Major,Closed,"2017-07-31 18:32:32","2017-07-31 17:32:32",5
Mule,"Join TopLevel and Inline ObjectStore into a single class","Use @refName annotation",Task,Minor,Done,"2017-07-31 16:32:18","2017-07-31 15:32:18",2
Mule,"Allow substitutionGroup and BaseType as XMLHint in SDK's annotations","One should be able to add the subtitutionGroup as an XMLHint annotation so that the type defined in the XML schema can reference another type defined in a different namespace.",Task,Minor,Done,"2017-07-31 16:04:07","2017-07-31 15:04:07",4
Mule,"Add required product type property in mule-artifact.json file","We need a property in mule-artifact.properties that let us decide what is the required product type (CE, EE) to run an artifact.     This cannot be done through dependencies since the application may be using the ee namespace which does not require any particular dependency in the pom file.    So the idea is to add a field in mule-artifact.properties of the artifact to define the required feature, CE or EE Mule Runtime. This can be used by MUnit, Studio to run the application using the appropriate runtime.",Task,"To be reviewed",Done,"2017-07-31 15:45:52","2017-07-31 14:45:52",2
Mule,"Remove script transformer and use script component instead","Scripting plugin was added as privileged in order to provide access to privileged transformer classes as the plugin provide scripting transformer that requires access to it.    Scripting transformer must be removed and usages replaced by scripting component, after that, the scripting plugin can be removed from the privileged API     ",Story,Major,Done,"2017-07-31 14:03:42","2017-07-31 13:03:42",2
Mule,"MultiMap simple selector is not consistent with DW","When multiple values are available for a key, MultiMap currently returns the last value. This is inconsistent with DataWeave where the first value is the one returned. We need to make them consistent since most of the time MultiMap will be access through DataWeave the simple selector will work differently than in all other scenarios.",Bug,Critical,Resolved,"2017-07-30 23:11:20","2017-07-30 22:11:20",2
Mule,"Create Mule extension model through declarer","Mule's extension model is hard coded in a JSON file today, this is troublesome since we are building it by hand and often make mistakes. For example, we have declared wrong errors (MULE-13179) and added the target parameter to all operations and scopes.    We need to use the declarer instead so that only the necessary bits are present and manual errors are reduced.",Task,Major,Done,"2017-07-28 20:41:16","2017-07-28 19:41:16",4
Mule,"Wrong lifecycle around ObjectFactory instances","ObjectFactory instances are receiving lifecycle invokations AFTER, the doGetObject() has been invoked. Plus, the object(s) returned by that method never get the lifecycle calls.   * ObjectFactory instances should not receive lifecycle   * Runtime should fail if it finds an ObjectFactory with lifecycle   * The output(s) of the factory should receive lifecycle    To reproduce, remove the lifecycle from org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory and run org.mule.extension.objectstore.ObjectStoreDefinitionTestCase     ",Bug,Major,Resolved,"2017-07-28 17:22:30","2017-07-28 16:22:30",4
Mule,"Rework foreach to be non-blocking and decoupled from splitter","Rework foreach to be non-blocking and use aggregation API",Task,Critical,Done,"2017-07-28 14:52:38","2017-07-28 13:52:38",8
Mule,"Rework scatter-gather to be non-blocking and use ForkJoinStrategy API","Rework to be non-blocking and use aggregation API",Task,Blocker,Done,"2017-07-28 14:51:56","2017-07-28 13:51:56",8
Mule,"Define ForkJoinStrategy API and implement must-have strategies for RC","Define AggregationStrategy API and implement must-have strategies for RC    - legacy  - join  - collect   (only limited functionality)",Task,Blocker,Done,"2017-07-28 14:49:45","2017-07-28 13:49:45",8
Mule,"Remove redundant component path element in routers that now use <route>","Remove redundant component path element in routers that now use <route>",Task,Critical,Done,"2017-07-27 22:18:49","2017-07-27 21:18:49",2
Mule,"Move GroupCorrelation to Message","When dealing with collections of messages that have been aggregated in a foreach of scatter-gather router it is important to be able to identify which message is which, in terms of which part it corresponds to or which route it is a result of.  Sometimes it may be possible to aggregate into a List and use the index, but this is not a robust solution as when there are errors, the success list won't including a result for each input message, and if the results need to be streamed or processed unordered then this approach is not possible.    The solution is to more GroupCorrelation to Message, such that when Messages are aggregated and then processed (for example for custom merging of results in DW), the messages can be accessed by sequence number or an optional label.    Also:  - Add Optional<String> label.  - Make Sequence not-optional.",Task,Critical,Done,"2017-07-27 21:15:46","2017-07-27 20:15:46",2
Mule,"Correlation information is not exposed in the interception API.","From the debugger side we use the correlation id to switch between debugging contexts when there is more than one message going through the flow. Right now the InterceptionEvent does not expose that information.","Enhancement Request",Critical,Resolved,"2017-07-27 19:27:24","2017-07-27 18:27:24",1
Mule,"Allow Core Extensions to Inject container services","From the core extensions, we need access to container services. The first approach was to obtain a reference to it from the first application that was deployed, but this resulted in a classloader leak as the reference is actually a proxy.   Our workaround at the time is to read by reflection the actual service implementation from this proxy.    It would be good to have a clean way to allow injection of the services in the core extensions",Task,Critical,Done,"2017-07-27 19:11:51","2017-07-27 18:11:51",4
Mule,"Cleanup scatter-gather configuration","1) Use <route>  (also make changes to first-successful)  2) Don't allow individual processors  3) Remove parallel attribute.  4) Remove custom aggregation strategy  5) Move AggregationStrategy out of API if required.",Task,Blocker,Done,"2017-07-27 17:23:58","2017-07-27 16:23:58",2
Mule,"Remove dom4j and jaxen exported packages from core libs","Remove the following packages from the exported packages list:  * org.dom4j.rule  * org.dom4j  * org.dom4j.tree  * org.jaxen  * org.jaxen.expr  * org.jaxen.expr.iter  * org.jaxen.saxpath  The are exported by spring/extensions support",Task,Critical,Done,"2017-07-27 12:42:51","2017-07-27 11:42:51",2
Mule,"Object bean showing error message with null references","When creating an object element without reference and class nor children, the following error messages are shown while trying to run the app, instead of the parameter names it shows 'null'    This is the example xml to reproduce it    [ObjectBeanDefinitionCreator|https://github.com/mulesoft/mule/blob/9afa2cc94397c0c2d68d4d0c2e50b90711a17157/modules/spring-config/src/main/java/org/mule/runtime/config/spring/dsl/spring/ObjectBeanDefinitionCreator.java#L47]",Bug,Trivial,Resolved,"2017-07-26 20:39:38","2017-07-26 19:39:38",2
Mule,"Plugins should be able to contribute implicit imports for DW functions","When registering a DW function through the SDK, the prefix of the function is taken from the prefix of the extension. But if the prefix of the extension is not short, the function might lose readability.  DW has a mechanism to declare implicit imports of a prefix, therefore the user would not need to specify the prefix for each function.  This means, if the expression is #[myprefix:myfunction(2)], he would be able to put #[myfunction(2)].","Enhancement Request","To be reviewed",Closed,"2017-07-26 19:24:12","2017-07-26 18:24:12",2
Mule,"FTP list content is empty after first read","If the cursor for a given file is opened and consumed, next time is opened the content results empty. Attaching a test that reproduce this in MULE-13198 for ftp connector. ",Bug,Blocker,Closed,"2017-07-26 17:38:02","2017-07-26 16:38:02",5
Mule,"Classloader issue with metadata propagation","Whenever you propagation is executed in Studio, you get a classloader issue because of some dom classes:  ",Bug,Blocker,Resolved,"2017-07-26 15:25:17","2017-07-26 14:25:17",0
Mule,"Remove global processor-chain","Remove global processor-chain. This has been deprecated since 3.2.",Task,Major,Done,"2017-07-26 11:35:44","2017-07-26 10:35:44",1
Mule,"EL returns String instead of Enum instance when accessing a variable","When evaluating `vars.initialHealth` in Heisenberg extension tests, DW is returning the String of that Enum, CANCER instead of the Enum instanced bound. As a result, if the String is, as originally, Cancer you will get a transformation error because the StringToEnum transformer cannot handle it. DW should simply return the Enum.    To reproduce, change the `HealthStatus` Enum ids to lower case and run `org.mule.test.module.extension.config.ParameterizedConfigParserTestCase`.",Bug,Critical,Closed,"2017-07-25 21:35:22","2017-07-25 20:35:22",0
Mule,"ValueProviderService creates a connection although this may not be required","*ValueProviderService creates a connection although this may not be required*   * This happens because the LazyValueProviderService relies on the {{LazyMuleArtifactContext}} to initialize just the components that are required, but the problem is that the whole dependency graph is resolved for a component.   * Email case, we need just to initialize the {{email:send}} operation, not the connection or configuration, because these are not used and the resolution could fail if the configuration is not created correctly.   * Also, this will be a blocker for WSC because the value provider works in the ConnectionProvider, so when {{LazyMuleArtifactContext}} tries to resolve a value, it will try to start the connection, which will lead to a resolving failure because the connection provider won't have required values.uuiu",Bug,Blocker,Closed,"2017-07-25 20:34:01","2017-07-25 19:34:01",13
Mule,"ArtifactSerializationService is failing to handle custom parameters in flow tags","When defining an artifactDeclaration with custom parameters in a flow declaration (at flow level), the ArtifactSerializationService is failing to serialize the custom parameters in the xml.",Bug,Major,Resolved,"2017-07-25 19:33:55","2017-07-25 18:33:55",3
Mule,"Remove splitter and aggregator","Move splitter and aggregator to compatibility",Task,Critical,Done,"2017-07-25 18:00:29","2017-07-25 17:00:29",4
Mule,"Validate name is not used as a parameter model name","Currently, it is possible to declare a name parameter model in a config using the fluent API.    The user can generate the model and no errors will be shown even when running the mule app, but since the convention is that all global elements have a name parameter model by default, they should not be allowed to add it, as the tools already consuming the model are already adding it.     Spring module is creating such an extension model.",Bug,Major,Closed,"2017-07-25 14:25:09","2017-07-25 13:25:09",2
Mule,"Remove failureExpression attribute from routers that currently support it","Remove failureExpression attribute from routers that currently support it",Task,Critical,Done,"2017-07-25 10:39:15","2017-07-25 09:39:15",2
Mule,"Differentiate between end-to-end and hop-by-hop headers in Http Attributes to avoid user needing to filter manually","Not differentiating between these forcing the user, who may not have the required knowledge to filter headers within the flow.  This would be much simplified if we had    getHeaders()  getAllHeaders()    getHeaders should not included:  - Connection  - Keep-Alive  - Public  - Proxy-Authenticate  - Transfer-Encoding  - Upgrade  - Content-Length (spec doesn't dictate this, but this cannot be conserved and Mule may mutate payload invalidating value, so best not to ever propagate).",Task,"To be reviewed",Done,"2017-07-25 10:08:33","2017-07-25 09:08:33",2
Mule,"Migrate code to use new cursor stream provider mechanism","ManagedCursorStreamProvider does not implement InputStream yet there is still code in Mule, including in org.mule.extension.http.internal.listener.HttpResponseFactory#create and potentially elsewhere that depends on InputStream instanceof test to determine behaviour.    Fixed on HTTP but still other components could have this problem.",Bug,Blocker,Closed,"2017-07-25 01:21:54","2017-07-25 00:21:54",3
Mule,"Upgrade ahc and grizzly to 1.13 and 2.3.31 respectively","Upgrade ahc and grizzly to 1.13 and 2.3.31 respectively",Story,Major,Done,"2017-07-24 19:59:08","2017-07-24 18:59:08",1
Mule,"WSC should not use MultiPartPayload anymore","MultipartPayload -> don't",Task,Critical,Done,"2017-07-24 17:09:14","2017-07-24 16:09:14",5
Mule,"runExpectingException() should handle cases where exception is thrown from a source different than the expected one","Consider the following flow, called by *flowRunner('exceptionHandlingBlock').runExpectingException()*              If the *test:assert* fails inside *exceptionHandlingBlock*, the test will still pass because is expecting the exception thrown in *blockWithOwnExceptionStrategy* flow.",Task,Minor,Done,"2017-07-24 16:52:05","2017-07-24 15:52:05",2
Mule,"Merge ValueProvider Implementation in Agent and Tooling","Merge ValueProvider Implementation in Agent and Tooling when everyone is in batman",Task,Blocker,Done,"2017-07-24 16:16:12","2017-07-24 15:16:12",5
Mule," Inconsistent null return from one-way VM inbound endpoint.","When there is no error, a one-way vm inbound endpoint returns null, but in the case of an handled error it returns the message.",Bug,Critical,Resolved,"2017-07-23 23:22:00","2017-07-23 22:22:00",2
Mule,"Extension Documentation Generator does not document configless operations","Extension Documentation Generator does not document configless operations",Bug,Major,Closed,"2017-07-21 21:44:17","2017-07-21 20:44:17",3
Mule,"CleanUp ObjectStore API","ObjectStore API as inherited from 3.x is a mess:   * ObjectStoreManager   * ListableObjectStore   * User ObjectStore   * Constants hell   * Unclear extension path    All of the following need to be address or simply removed.","Enhancement Request",Critical,Closed,"2017-07-21 18:27:17","2017-07-21 17:27:17",8
Mule,"File: Improve workingDir parameter definition","Currently, when configuring the File extension connection provider, the working directory is not marked with @Path annotation, making it show just as a string field editor.    The Javadoc has the information that when it is not configured the user.home will be used, but since the parameter has a @Summary, this information is lost.     Please, update the @Summary to contains this information.","Enhancement Request",Major,Resolved,"2017-07-21 16:41:09","2017-07-21 15:41:09",1
Mule,"Add mechanism to create attachments for Allure reports","Add a mechanism to create attachments for Allure reports",Task,Major,New,"2017-07-21 14:32:07","2017-07-21 13:32:07",4
Mule,"Move org.mule.runtime.core.privileged.processor.AbstractFilteringMessageProcessor to compatiblity plugin","org.mule.runtime.core.privileged.processor.AbstractFilteringMessageProcessor is only used on the compatibility module. However, attempt to move it to that plugin has failed as com.mulesoft.mule.test.transport.http.filters.HttpRequestWildcardFilterTestCase#testHttpGetFiltered fails when that is done.    It was hard to review why that happens. The problem appears when com.mulesoft.mule.compatibility.core.routing.MessageFilter extends from the AbstractFilteringMessageProcessor from compatibility instead of the one from core.    What I saw is that when the filtered exception is throw, the static Hooks.onOperationError defined on org.mule.runtime.core.DefaultMuleContext#init is executed with a null signal value. This causes that the logic inside the hook is not executed that causes that the exception is not mapped to a MessagingException. After that the ilterred exception is thrown and the error mapping logic in the transport skipped.    In the case when it works, signal contains the expected event.",Bug,Major,Resolved,"2017-07-21 12:43:19","2017-07-21 11:43:19",4
Mule,"Tooling should allow access the application class loader to resolve resources","For DataSense and also for configuration properties Tooling would need to load the Application classloader.",Task,Major,Done,"2017-07-20 17:36:56","2017-07-20 16:36:56",8
Mule,"javax.xml.bind.DatatypeConverterImpl generates a class loader leak when used by plugins","javax.xml.bind.DatatypeConverterImpl keeps a reference to the application classloader when a plugin used by the application has as compile dependency com.sun.xml.bind:jaxb-impl.  We should find a way to avoid this, one approach could be to load the class when Mule initialized and use the System ClassLoader.",Bug,Critical,Resolved,"2017-07-20 17:28:36","2017-07-20 16:28:36",2
Mule,"Every exported Mule package must contain api (part4)","All the packages exported on the Mule container must contain the api package.  Currently, there are packages that do not say api. For example org.mule.runtime.module.artifact.  This task is to fix only all the packages that are intended to be exported. Some internal packages are begin exported now, but just temporarily, so those packages will be manage in a different issue.",Story,Critical,Done,"2017-07-20 17:26:19","2017-07-20 16:26:19",16
Mule,"Add simple scheduler log functionality for diagnosing errors and better understanding performance tests.","Like JVM gc.log, but reporting:  - on number of thread per-scheduler in use every x seconds  - rejections (and action taken)    Use system property to enable/disable but output via log4j to take advantage of custom appenders and rolling files.","Enhancement Request",Major,Resolved,"2017-07-20 16:40:24","2017-07-20 15:40:24",4
Mule,"Avoid having spring-module as privileged plugin","Temporarilly adding spring-module as privileged enable to provide access to privileged classes.    This must be removed and make classes part of the API or avoid to use them from the plugin",Story,Major,Done,"2017-07-20 16:31:33","2017-07-20 15:31:33",2
Mule,"Review elements in the XML that are intercepting and blacklist them","We need to go through all the XML components that are intercepting, create a list of them, and plan to upgrade them in GA to not be intercepting. Those components that, by making them not intercepting, would require changes in the XML must be documented so Studio can blacklist them for the RC. This will allow us to do the update in GA of those components without breaking backward compatibility at the XML level.    For instance, the splitter element should no longer be intercepting, should be an scope. That would cause the XML to change so we have to add it to the blacklist.",Task,Blocker,Done,"2017-07-20 16:24:24","2017-07-20 15:24:24",2
Mule,"Add targetOutput to all operations in smart connector operations","Since most of the time users just want to work with the payload of the returned message by the operations, we need to, by default, assign the payload to the variables and not the whole message. Optionally, the user must be able to set a targetValue (other names are welcome) so he can assign the message instead of the payload. Possible values would be MESSAGE and PAYLOAD ",Task,Critical,Done,"2017-07-20 16:12:04","2017-07-20 15:12:04",0
Mule,"Add targetOutput to all operations in the SDK","Since most of the time users just want to work with the payload of the returned message by the operations, we need to, by default, assign the payload to the variables and not the whole message. Optionally, the user must be able to set a targetValue (other names are welcome) so he can assign the message instead of the payload. Possible values would be MESSAGE and PAYLOAD ",Task,Critical,Done,"2017-07-20 16:11:33","2017-07-20 15:11:33",8
Mule,"Add commons-lang3 dependency to file-commons extension","commons-lang is used in the toString of FileAttributes, but the dependency is not there. The module compiles because it depends on mule-core, but on runtime that lib is isolated.",Bug,Major,Resolved,"2017-07-20 15:10:12","2017-07-20 14:10:12",1
Mule,"Fix Maven central Validations errors in poms, javadocs and sources jars.","Fix Maven central Validations errors in poms, javadocs and sources jars.",Task,Critical,Done,"2017-07-17 14:15:27","2017-07-17 13:15:27",4
Mule,"Limit BrokerService usage of memory and storage","By default, the BrokerService class tries to allocate 50gb of disk space and 1GB of RAM.    Many times, this amount is not available and it's also way much than what is needed for the tests that we run.    Change the defaults of the BrokerService to a reasonable number.",Task,Major,New,"2017-07-19 18:15:51","2017-07-19 17:15:51",2
Mule,"Fix Sources CE and EE Distributions","Fix Sources CE and EE Distributions",Task,Major,Done,"2017-07-17 14:22:19","2017-07-17 13:22:19",4
Mule,"AttributesDefinition for tlsContext for HTTP extension is not setting the referenceSimpleParameter","When Mule is building the MinimalApplication for Tooling the applicationModel and its componentModels are traversed in order to check the AttributesDefinitions and get which parameter has a reference to another componentModel. When HTTP listener-connection has a tlsContext parameter (not inline declared) the method on AttributeDefinitionVisitor#onReferenceSimpleParameter visitor is not being called therefore the dependencies cannot be inferred.",Bug,Major,Resolved,"2017-07-19 13:37:01","2017-07-19 12:37:01",2
Mule,"Add support to access privileged API class from test case","We need to add support for being able to access a privileged API class from our test infrastructure",Task,"To be reviewed",Done,"2017-07-19 03:22:59","2017-07-19 02:22:59",0
Mule,"HttpListenerConnectionManager should not used dedicated acceptor thread on hardware with small number of cores","HttpListenerConnectionManager should not used dedicated acceptor thread on hardware with small number of cores",Bug,Major,Resolved,"2017-07-18 23:38:32","2017-07-18 22:38:32",2
Mule,"Provide pagination on the runtime","We need the same functionality provided by SDK to paginate results of operations to be implemented in Smart Connectors.    {{See org.mule.runtime.extension.api.runtime.streaming.PagingProvider<C, T> for more details.}}",Task,"To be reviewed",New,"2017-07-18 23:22:55","2017-07-18 22:22:55",8
Mule,"Try is missing schema docs for transaction attributes.","Try is missing schema docs for transaction attributes.",Bug,"To be reviewed",Open,"2017-07-18 23:08:08","2017-07-18 22:08:08",2
Mule,"Bind lookup function to execute flows on demand as DW used to","We need to allow flow to be run from a EL function as DW does in 3.x using `lookup`.",Task,Critical,Done,"2017-07-18 23:02:13","2017-07-18 22:02:13",4
Mule,"Hide registry from EL and create function to access beans","We need to remove the registry functionality from binded server/app and instead provide a function to access the spring beans defined.",Task,Critical,Done,"2017-07-18 22:56:25","2017-07-18 21:56:25",2
Mule,"Merge UntilSucessful into Try Scope","Merge UntilSucessful into Try Scope.  - Failure expression to no longer be supported, validators should be used instead.",Task,Major,New,"2017-07-18 21:46:12","2017-07-18 20:46:12",8
Mule,"Allow key parameters not exposed in XML configuration to be configured via system properties","This is for exceptional cases where these values need to be changes and also to allow tuning and testing, to improve defaults in future versions.",Task,Critical,Done,"2017-07-18 21:24:21","2017-07-18 20:24:21",2
Mule,"Cleanup MuleConfiguration removing redundant config in Mule 4","Cleanup MuleConfiguration removing redundant config in Mule 4",Task,Major,New,"2017-07-18 21:20:16","2017-07-18 20:20:16",2
Mule,"Unable to use registered DW functions when extension prefix has dash (-)","If an extension has a dash in its prefix (in our case munit-tools). When trying to evaluate a DW function registered for that extension (in our case munit-tools::equalTo). The evaluation fails, it tries to evaluate the _munit_ separately from the _tools_ word.",Bug,Critical,Closed,"2017-07-18 19:45:58","2017-07-18 18:45:58",2
Mule,"Support env vars as placeholders ","When loading properties to use as place holders we should:     First load system properties, if defined    If not load the env property     ","Enhancement Request",Minor,Resolved,"2017-07-18 19:40:06","2017-07-18 18:40:06",4
Mule,"Cannot test connection when using global references inside the config or the connection provider","When doing a test connection of the HTTP Listener, or the Request, if you configure a global reference to the TLS, the app fails because it cannot find the TLS config in the registry.  This applies to any parameter that can be configured as a reference.    The following app should have executed the test connection sucessfully yet it fails  ",Bug,Critical,Resolved,"2017-07-18 19:11:41","2017-07-18 18:11:41",2
Mule,"Add a flag to skipDocumentation generation","Add a flag to skipDocumentation generation",Task,Critical,Done,"2017-07-18 18:54:01","2017-07-18 17:54:01",1
Mule,"CXF compatibility module does not support DW expressions on properties","As gateway WSDL proxy I would like to dynamically resolve values for proxy-service configuration properties, like for example:        Wsdl function is already registered by GW in the DefaultExpressionManager provided by mule, but proxy-service is initialized in a not DW context aware.","Enhancement Request",Critical,Closed,"2017-07-18 18:11:36","2017-07-18 17:11:36",8
Mule,"Migrate aggregators and resequencer  to non-blocking","Migrate aggregators and resequencer  to non-blocking",Task,Critical,Done,"2017-07-18 16:39:05","2017-07-18 15:39:05",8
Mule,"Remove or disallow `processor-chain` as top[ level elementand/","* Migrate top-level `processor-chain`s to `sub-flow`.   * Remove deprecation notice from `processor-chain` in mule.xsd   * If possible, get rid completely of processor-chain if same use cases can be solved with subflow or other things.",Story,Major,New,"2017-07-18 16:03:37","2017-07-18 15:03:37",4
Mule,"Rework error handler invocation to be event context based rather than rely on handler propagation","Rework error handler invocation to be event context based rather than rely on handler propagation",Task,Major,Done,"2017-07-18 15:03:07","2017-07-18 14:03:07",8
Mule,"Remove backward compatible method on Tooling API for extension models, DataSense and Metadata","Once MULE-13044 is done the methods for ExtensionModel, DataSense and Metadata should be removed. ",Task,Blocker,Done,"2017-07-18 14:59:21","2017-07-18 13:59:21",0
Mule,"Sources transaction support is fundamentally broken","Right now, Sources can use the @COnnection annotation in order to get a connection, which might be transactional.    This has two problems:   * Because an established connection is being injected instead of a ConnectionProvider, sources which rely on the listener pattern such as JMS are very difficult to implement. The ones which rely on the consumers pattern such as VM are plain and simply impossible   * Also because of this, the transaction is begun once the message is pushed to the flow, but most transactional sources require the transaction to start on the source itself. For example, JMS and VM need the transaction started when the message is polled, not when it's pushed    We need to change sources so that they can obtain multiple connections, with transactions begun when necessary     ",Bug,Critical,Resolved,"2017-07-18 03:33:20","2017-07-18 02:33:20",8
Mule,"Email connector pop3 does not delete all emails with deleteAfterRetrieve","Email connector pop3 does not delete all emails with deleteAfterRetrieve",Bug,Blocker,Resolved,"2017-07-17 21:42:52","2017-07-17 20:42:52",5
Mule,"Metadata is not being returned for flows when fetching propagation for one MP at flow level","Steps to reproduce:    1) Create a new project and add an empty Flow.    2) Define custom metadata for Input Payload target ( such as String ).    3) Request propagation at flow level.     Issue: The propagation does not return metadata at component path level for the flow.",Bug,Critical,Resolved,"2017-07-17 20:25:25","2017-07-17 19:25:25",0
Mule,"SDK: Inject connection on PagingProvider#close() method","Currently the connection is not being injected in the PagingProvider#close(), it would be ideal to have it in case the user needs it to perfom something when closing the PagingProvider.     the email connector for example would take advantage of this feature",Task,Major,Done,"2017-07-17 19:26:42","2017-07-17 18:26:42",5
Mule,"Embedded Container: If app fails to deploy, trying to deploy same app again ends instantly","If an app is deployed and fails, (for example due to a missing file referenced in an import). And then you try to deploy the application again (but now we different files), the embedded container ends immediately without deploying the application nor throwing any exception.  Not sure exactly where the problem comes from, but it may come in the org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer#deployExplodedArtifact method, specifically when checking isUpdatedZombieArtifact.",Bug,Critical,Resolved,"2017-07-17 16:34:25","2017-07-17 15:34:25",2
Mule,"Validate read thread pool in piped streams","Because we are using piped streams to have the HTTP client stream responses, we need to make sure the thread pool used to read it is different from the writing thread pool because otherwise you'd get a deadlock. Though this is currently documented and easy to avoid since we introduced CompletableFuture, we should fail when someone attempts this.     This task involves creating our own wrapper for InputPipedStream that validates the thread pool on read.",Task,Major,New,"2017-07-17 16:25:34","2017-07-17 15:25:34",4
Mule,"ExecutionMediator should use scheduler for retry policy","ExecutionMediator should use scheduler for retry policy",Task,Major,Done,"2017-07-17 14:39:16","2017-07-17 13:39:16",4
Mule,"ComponentBuildingDefinition for Try is not setting default values for transactionalAction and transactionType","This is causing an error when resolving metadata for Tooling:  ",Bug,Critical,Resolved,"2017-07-16 03:14:13","2017-07-16 02:14:13",1
Mule,"Component location not properly computed for ForEach router","Component location is not being correctly computed...  In example:      ",Bug,Critical,Closed,"2017-07-14 22:48:55","2017-07-14 21:48:55",2
Mule,"Ignore MUnitComponentPathTestCase until munit build works","MUnitComponentPathTestCase is failing because munit build is failing and not publishing artifacts",Task,Critical,Done,"2017-07-14 22:43:14","2017-07-14 21:43:14",0
Mule,"Value Resolvers should stack up","It's not possible to combine a ParameterResolver with a TypedValue. Although this is just a concrete example which is affecting http and vm connectors, this applies to an infinity of possible combinations.    We need to change how we apply resolvers, so that we have one single component which knows how to stack resolvers together.     For example:         ParameterResolver<TypedValue<String>> should resolve to the following chain:    valueResolver -> typeValueResolver -> ParameterResolver. In christian, from right to left.    There's another case to consider which is annotations such us @DefaultEncoding. For these one we need to think what to do, but I believe they should be applied before the right to left chain is resolved.     ",Bug,Critical,Closed,"2017-07-14 21:23:17","2017-07-14 20:23:17",13
Mule,"Enrichers are applied in wrong order","Right now, the Loader's enrichers are executed before the ExtensionModelFactory ones. This should be the other way around.      Plus, we also need the concept of POST enrichers, which are enrichers also defined in the ExtensionModelFactory, but which run after the loader enrichers",Bug,Major,Closed,"2017-07-14 21:19:01","2017-07-14 20:19:01",13
Mule,"Default Oauth2 token expression fails if JSON has multiple lines","The regex uses hardcoded spaces between parts of the json attributes, but it doesn't work when using \s. A first pass removing all blank characters works, before calling regex().",Bug,Minor,Resolved,"2017-07-14 19:34:37","2017-07-14 18:34:37",0
Mule,"Extract ParameterResolver logic into a centralized resolver","We need to have a new component which allows us to pile up all types of resolvers and apply them anywhere.",Task,Critical,New,"2017-07-14 17:23:41","2017-07-14 16:23:41",8
Mule,"Privileged API packages must take into account other exported privileged APIs","If I define in mule-api a package as privileged and then try to use it from mule-core it fails. After discussing this with [~pablokraan] it seems to be a known issue where privileged APIs are not taken into account as the should by the API analyzer.          Searching for this issue ID in the code it will show a TODO with the exported packaged in mule-core that should be exported in mule-api instead.",Task,Critical,Done,"2017-07-14 17:22:23","2017-07-14 16:22:23",2
Mule,"Wrong method name in ArtifactArchiveInstaller","The method _desinstallArtifact_ should be renamed to _uninstallArtifact_ or something similar, but the word desinstall does not exist.",Bug,Minor,Resolved,"2017-07-14 16:23:19","2017-07-14 15:23:19",1
Mule,"Schema generation for Enum should rely on name and not in toString values","Schema generation for Enum should rely on name and not in toString values, so if we have:         \         Then the schema should use consistently VALUE as defaultValue and union element instead of mixin VALUE and Value",Bug,Major,Closed,"2017-07-14 16:01:46","2017-07-14 15:01:46",1
Mule,"Upgrade Allure report framework","Upgrade Allure framework to latest version",Task,Major,Done,"2017-07-13 20:56:38","2017-07-13 19:56:38",0
Mule,"Update Extension DTO to support missing features","*Update Extension DTO to support missing features*   * Element References   * Path   * Whatever","Enhancement Request",Blocker,Resolved,"2017-07-13 20:54:51","2017-07-13 19:54:51",8
Mule,"Add a mechanism to notify DeploymentDirectoryWatcher cycles","This way we could also check for Application ClassLoaders that are still referenced once they were disposed (using weakReference and accessing the ClassLoader Repository) and also use this to notify when running tests for deployment.",Task,Major,New,"2017-07-13 19:23:35","2017-07-13 18:23:35",4
Mule,"Remove blocking processor API","Update and improve FlowRunner to support non-blocking flow execution and assertions.",Task,Major,New,"2017-07-13 12:21:20","2017-07-13 11:21:20",16
Mule,"Update and improve FlowRunner to support non-blocking flow execution and assertions.","Update and improve FlowRunner to support non-blocking flow execution and assertions.",Task,"To be reviewed",New,"2017-07-13 12:18:05","2017-07-13 11:18:05",8
Mule,"Migrate Splitter and Foreach implementation to non-blocking","Migrate Splitter and Foreach implementation to non-blocking",Task,Critical,Done,"2017-07-13 11:27:00","2017-07-13 10:27:00",8
Mule,"Disable statistics when deploying a Tooling application","When deploying an application for Tooling it no needed to have statistics enabled, this can be disabled from MuleContext.",Task,Minor,Done,"2017-07-13 04:19:49","2017-07-13 03:19:49",2
Mule,"ComponentLocation should have a method to return all components in the context ","The class ComponentLocation should allow to return all paths existing in the application","Enhancement Request",Critical,Resolved,"2017-07-12 21:15:50","2017-07-12 20:15:50",2
Mule,"MuleEvent does not mask credentials when the they are embedded in MessageSourceURI","MuleEvent does not mask credentials when the they are embedded in MessageSourceURI",Bug,"To be reviewed",Resolved,"2017-07-12 21:04:58","2017-07-12 20:04:58",4
Mule,"Avoid passing the FlowConstruct around just to get the name of the flow","MUnit needs to configure processor chains but may not necessarily have a flow.","Enhancement Request",Critical,Resolved,"2017-07-12 20:27:03","2017-07-12 19:27:03",4
Mule,"Define a DslSyntaxResolver API on Tooling","As part of the clean up on Tooling to remove mule-api a new API and service has to be declared in order to allow getting the DslSyntax for a operation/source/parameter/parameterGroup.",Task,Major,Done,"2017-07-12 19:01:09","2017-07-12 18:01:09",16
Mule,"Migrate ComponentModelVisitor code to use ExtensionModel instead of hardcoded values","Current ComponentLocationVisitor is setting the component locations with hardcoded rules and values. We need to update it to create de locations using the extension model. This can be done once MULE-11941 is done",Task,"To be reviewed",Done,"2017-07-12 18:31:08","2017-07-12 17:31:08",16
Mule,"Allow non-repeatable streams to be registered for closure when Flow completes","Allow non-repeatable streams to be registered for closure when Flow completes",Task,Critical,Done,"2017-07-12 17:39:28","2017-07-12 16:39:28",8
Mule,"CE distribution fails to start","When you try to start the CE distribution, it fails to start and it throws the following error:     ",Bug,Blocker,Resolved,"2017-07-12 03:53:49","2017-07-12 02:53:49",4
Mule,"Make TLS inside POJOs work the same as parameter","Right now, mule-oauth-module is using the TLS inside a POJO, but the parameter model generated is not marked as an infrastructure parameter and because of that the DSLSyntax information is completely wrong.",Bug,Critical,Closed,"2017-07-11 21:03:05","2017-07-11 20:03:05",3
Mule,"Review all interfaces builders to match DW standard","DW will now instantiate interfaces through a static builder() method. We need to decide and make sure all builders follow the same standard.",Task,Blocker,Done,"2017-07-11 16:52:13","2017-07-11 15:52:13",8
Mule,"Move HTTP test from integrations to connector","It's getting really difficult to change HTTP related code because one has to change the connector AND integrations since the tests are mostly there. The tests were separated at one point because it was an OSGI thing but now it's no longer necessary. ",Task,Major,Done,"2017-07-11 16:47:36","2017-07-11 15:47:36",0
Mule,"Possible deadlock in RegionClassLoader","While working on another task, i stumbled upon the following deadlock:         RegionClassLoader shouldn't be calling *getClassLoadingLock* since it doesn't do the actual class load (it is delegated). Also, the loading of the class is not protected from changes in the inner state from calls to *addClassLoader* or *removeClassLoader*, so a ReadWriteLock should be a better option for this case.",Bug,Major,Resolved,"2017-07-11 16:39:45","2017-07-11 15:39:45",1
Mule,"Expose the Event in NestedProcessor process result in privileged API","Expose the Event in NestedProcessor process result in privileged API","Enhancement Request",Blocker,Closed,"2017-07-11 16:06:48","2017-07-11 15:06:48",8
Mule,"All routers should use processor chains rather than processors as their routes","All routers should use processor chains rather than processors as their routes",Task,Major,Done,"2017-07-11 09:42:41","2017-07-11 08:42:41",8
Mule,"Enable Test Connectivity on SOAP connectors","SOAP Connect connectors do not support Test Connectivity. We need to have it so we can offer the same features Mule 3 connectors had.","Enhancement Request",Critical,Resolved,"2017-07-10 20:17:41","2017-07-10 19:17:41",1
Mule,"Review and fix the list of exported packages for Mule Extensions API","*Review and fix the list of exported packages for Mule Extensions API*    Configuring the Maven plugin that checks the exported packages the analysis throws the following report:    To configure the Maven Plugin in Mule Extensions API add the following plugin in each module of Ext API:  ",Task,Critical,Done,"2017-07-10 17:42:48","2017-07-10 16:42:48",8
Mule,"ModuleException message is lost","ModuleException has a couple of constructors that take a message meant to override the cause exception one yet when reaching the ModuleExceptionHandler the ModuleException is unwrapped and that message is lost.",Task,Major,Done,"2017-07-07 21:17:01","2017-07-07 20:17:01",0
Mule,"Container should not prepend mule/ to configuration files","The file mule-application.json contains the section          The container asumes that all these files are to be, in the exploded app, in the *mule* folder and it prepends that to the path.        Going forward the contents of mule will be in:    */classes/mule*    So they are part of the classpath.    The file mule-application.json should come with a fully qualified path *mule/muleconfig1.xml*         This change should be done in sync with MMP-184          ","Enhancement Request",Major,Resolved,"2017-07-07 19:23:06","2017-07-07 18:23:06",4
Mule,"Tooling Runtime Client should allow to use an Executor to control threads","Clients of Tooling Runtime should be able to provide an executor service to control threads and allow them to track logs by using ThreadLocal variables as many frameworks do.     ","Enhancement Request",Major,Resolved,"2017-07-07 18:42:42","2017-07-07 17:42:42",2
Mule,"Fix scheduler polling tests","Fix the polling scheduler tests",Bug,Critical,Resolved,"2017-07-07 18:42:01","2017-07-07 17:42:01",1
Mule,"Move CE distributions out of the mule project","Move CE distributions to a new mule-distributions project",Task,Major,Done,"2017-07-07 18:23:42","2017-07-07 17:23:42",2
Mule,"Add privileged API for plugin artifacts","There are scenarios, where a plugin A must be extended on another plugin B, and to be able to do it, iB must use some A classes that makes no sense to be available on the A's public API.    To avoid exposing those classes, will be better to have a privileged API that the plugin A can define to enable extension on those scenarios. Similar to what is supported on container's modules.",Story,Critical,Done,"2017-07-07 15:23:16","2017-07-07 14:23:16",0
Mule,"SDK should no longer deal in terms of Attributes","At some point, the Mule Message was composed by a payload TypeValue and Attributes pojo. The Attributes pojo then got replaced by another TypedValue, but the SDK didn't follow.         We need to align these things and potentially kill the Attributes pojo ",Bug,Major,Closed,"2017-07-06 18:00:23","2017-07-06 17:00:23",8
Mule,"Inconsistent error propagation in extension operations depending on operation type","Inconsistent error propagation in extension operations depending on operation type.    In order for tests to pass the following is required to maintain a difference in behaviour between blocking an non-blocking operations.    Need to work out what correct behaviour is and update tests etc.      ",Task,Blocker,Done,"2017-07-06 17:54:21","2017-07-06 16:54:21",8
Mule,"Review catch all policy in error handlers considering source errors","SOURCE_RESPONSE typed errors (including children) are not handleable by on-error-continue, which sort of makes them non catch all. This means that if an empty handler is defined (catch ANY) some types won't be handled. We may need to consider adding a propagate in those cases or check whether that is working already since ANY is injected.",Task,Major,Done,"2017-07-06 17:43:59","2017-07-06 16:43:59",1
Mule,"Every exported Mule package must contain api (part3)","All the packages exported on the Mule container must contain the api package.  Currently, there are packages that do not say api. For example org.mule.runtime.module.artifact.  This task is to fix only all the packages that are intended to be exported. Some internal packages are begin exported now, but just temporarily, so those packages will be manage in a different issue.",Task,Critical,Done,"2017-07-06 17:25:09","2017-07-06 16:25:09",16
Mule,"Create externalResourceProvider for tooling client","After MULE-10428, there is a new mechanism to provide an external file resolver to the ApplicationModel.    This should support configuration-properties and placeholders with file:: prefix.",Task,Major,Done,"2017-07-06 17:24:51","2017-07-06 16:24:51",4
Mule,"MUnit Gaps","Close all the gaps possible with MUnit",Task,Critical,Done,"2017-07-06 16:51:32","2017-07-06 15:51:32",4
Mule,"StackOverflowError when default error handler is missing catch all","Test org.mule.test.integration.exceptions.ErrorHandlingConfigurationFailuresTestCase#defaultErrorHandlerMustHaveCatchAll does throw a InitialisationException but only because a StackOverflowError is thrown. To reproduce just remove the expected value.",Bug,Major,Resolved,"2017-07-06 15:21:45","2017-07-06 14:21:45",4
Mule,"Review mutability of Authentication object","Authentication object is now being exposed through DW (MULE-12226). But this object is still mutable. It should be reviewed the possibility of making it immutable",Task,Major,Done,"2017-07-05 20:34:56","2017-07-05 19:34:56",2
Mule,"Move/migrate uses of component to compatibility module","This is to move <component> and it's dependencies like:   - <*-entry-point-resolver>   - <spring-object> // This one may require integration the new spring module   - <singleton-object>    - <prototype-object>   - etc.    ",Task,Blocker,Done,"2017-07-05 20:11:21","2017-07-05 19:11:21",8
Mule,"Can't alter services log levels from app","HTTP wire logging is not working anymore since the logger class is in the service, so it's level cannot be define from the app and the logging is done elsewhere.  The problem is more widespread though since the same applies to all services. There's no way to troubleshoot a component using a service just by handling the app.",Bug,Critical,Resolved,"2017-07-05 19:27:52","2017-07-05 18:27:52",4
Mule,"ObjectFactoryClassRepository is destroying proxies for container entities","When doing connectivity testing the dispose of an application is also destroying from the ObjectFactoryClassRepository the callback for org.mule.runtime.module.extension.internal.config.dsl.connection.ConnectionProviderObjectFactory therefore if there was another application already deployed when trying to do connectivity testing it fails as the lazy mule artifact context cannot initialize the connection provider bean. ",Bug,Critical,Resolved,"2017-07-05 16:37:27","2017-07-05 15:37:27",8
Mule,"Revamp the Email Connector","Revamp the Email Connector   * Review the list operation   * Review the store operation   * Do not return Multipart   * Review the Connection Providers    Make the Email Connector great again",Task,Blocker,Done,"2017-07-05 15:28:09","2017-07-05 14:28:09",8
Mule,"Event API is inconsistent and implementation is not immutable after addition of properties and parameters.","Event API is inconsistent and implementation is not immutable after addition of properties and parameters.   * variables has method for names, value, but not map, whereas properties/params returns map.   * map returned is not immutable either.    Ideal solution is to use same pattern for additions",Task,Blocker,Done,"2017-07-05 14:49:29","2017-07-05 13:49:29",2
Mule,"ExpressionLanguage should expose GroupCorrelation","ExpressionLanguage should expose GroupCorrelation",Task,Critical,Done,"2017-07-05 14:47:47","2017-07-05 13:47:47",2
Mule,"Include and export javax.jms on the API","As the EE version of the container requires to include and export javax.jms, in order to provide the same user experience for both CE/EE users (regarding how to build apps), the CE container must do the same. ",Task,Critical,Done,"2017-07-05 12:52:57","2017-07-05 11:52:57",0
Mule,"Soap connect missing default value for body","Soap connect missing default value for body",Bug,Blocker,Resolved,"2017-07-04 21:18:53","2017-07-04 20:18:53",1
Mule,"Moving tmp folder inside execution (.mule) and remove it when undeploying","Moving the app temporary folder, which currently has the following structure:  _MULE_HOME/tmp/<app>_  to the execution folder of the current app  _MULE_HOME/.mule/<app>/tmp_    Also, when the app is undeployed, the tmp folder is removed     ","Enhancement Request","To be reviewed",Resolved,"2017-07-04 19:50:53","2017-07-04 18:50:53",4
Mule,"Registry lookupObjects does not find subclasses ","Providing you have the following definition     \    And if you have beans being created through ComponentBuildingDefinitionProvider which create beans of *Class B*    If you call     \    The registry does not return any object.    But if you call    \    All the objects created are returned ",Bug,Trivial,Resolved,"2017-07-04 18:23:34","2017-07-04 17:23:34",4
Mule,"Line ending formatter validation fails in windows","Format validation is checking line endings are unix styles, which causes the validation to fail on windows.",Bug,Major,Resolved,"2017-07-04 00:58:13","2017-07-03 23:58:13",1
Mule,"Refactor HTTP input data","Now that HTTP no longer parses responses/requests, we need to make sure it's not evaluating input data either to match those types it used to work with. We need to decide whether we force InputStreams or continue to handle Objects that we turn to ByteArrays if need be.",Task,"To be reviewed",Done,"2017-07-04 00:56:36","2017-07-03 23:56:36",2
Mule,"Move multipart test cases to HTTP service and adapt extension ones","Since DW will support multipart/form-data, we need to make sure that all tests regarding the creation or parsing of multipart content are in the HTTP service, which will continue to parse such content as a way of providing a better API to its users. All currently ignored HTTP extension tests should probably be migrated to the service and a few adapted.",Task,Major,Done,"2017-07-04 00:51:13","2017-07-03 23:51:13",4
Mule,"Embedded container does not resolve local artifacts ","When running the embedded container from inside MUnit          The container deploys the application when doing so it disregards the applications dependencies installed locally and those packaged and it always tries to resolve them from the remote reopositories.          The only way to avoid this is to only set a remote repository as your local, if you convine your local m2 with other repositories there is no waranty that the artifacts will be resolved from the local.          To make this clear, the embedded container should look for the application dependencies in the repository packaged with the application           ",Bug,Critical,Resolved,"2017-07-03 19:33:46","2017-07-03 18:33:46",8
Mule,"Cleanup DefaultTransformationService so it does not expose deprecated methods","Currently DefaulTransformationService is a mix for methods from the API and methods that are only used internally and should be refactor. That requires a ton of work since it's used in several parts of the code so it's left as technical debt for 4.x",Task,"To be reviewed",Done,"2017-07-03 19:32:03","2017-07-03 18:32:03",4
Mule,"@DefaultEncoding annotation does not work without @Parameter","HttpListener requires the default encoding of the application and it's taking it from the MuleContext. In order to decouple HttpListener from MuleContext I tried to use @DefaultEncoding but it does not work if the attribute is not also annotated with @Parameter. In this case the default encoding is needed but is not configurable.",Task,Major,Done,"2017-07-03 17:21:08","2017-07-03 16:21:08",3
Mule,"Operation metadatakey is usind the ID as display name for @Soap based extension ","When creating a @Soap based extension, the keys retrieved have a display name for the services, but the operations display name is the same as the Id.  For example:  Issue_Management service generates a key with name *Issue_Management* and display *Issue Management*  Get_Records operation generates a key with name *Get_Records* and display name *Get_Records*    Both display names should be generated using the same format",Bug,"To be reviewed",Resolved,"2017-07-03 16:10:41","2017-07-03 15:10:41",3
Mule,"Review how Tooling DataType manage collection of messages","Tooling DataType is simpler than it should be, to be able to manage correctly collection of messages. mule-runtime-event-model DataTypeModel is not enough to model collections.",Task,"To be reviewed",Done,"2017-07-03 14:06:33","2017-07-03 13:06:33",4
Mule,"Install the test plugin in the test container for the DeplymentServiceTestCase","This is needed to avoid exposing the packages from the test plugin in the mule-module.properties of the deployment tests (see TODO in code)","Enhancement Request","To be reviewed",Open,"2017-07-03 13:05:53","2017-07-03 12:05:53",4
Mule,"DefaultImplementingTypeModelProperty is not populated for streaming strategy parameter models","In order to properly generate the UI for streaming strategy, its parameter model needs to be populated with the DefaultImplementingTypeModelProperty.  ","Enhancement Request",Critical,Closed,"2017-07-02 21:36:46","2017-07-02 20:36:46",2
Mule,"DW: Support multipart mime types","Need to have reader and writers for multipart/form-data and such.",Task,Critical,Done,"2017-07-01 20:20:00","2017-07-01 19:20:00",0
Mule,"Refactor MetadataCache API on Tooling","We have identified that the cache API exposed as it is in Tooling has conflicts with the whole story of having a Tooling API in order to avoid clients to use mule-api.",Task,Major,Done,"2017-06-30 03:23:09","2017-06-30 02:23:09",8
Mule,"Error generating parameter validation error message.","Error generating the exception error message here:    https://github.com/mulesoft/mule/blob/mule-4.x/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/loader/java/ParameterModelsLoaderDelegate.java#L162    Caused by: java.lang.IllegalArgumentException: Component 'org.mule.runtime.api.meta.model.declaration.fluent.ConnectionProviderDeclarer@7603abce' is not an instance of any known model type [configuration, connection provider, operation, source, source callback]      at org.mule.runtime.extension.api.util.NameUtils.getComponentModelTypeName(NameUtils.java:313)      at org.mule.runtime.module.extension.internal.loader.java.ParameterModelsLoaderDelegate.declaredAsGroup(ParameterModelsLoaderDelegate.java:161)      at org.mule.runtime.module.extension.internal.loader.java.ParameterModelsLoaderDelegate.declare(ParameterModelsLoaderDelegate.java:100)      at org.mule.runtime.module.extension.internal.loader.java.ParameterModelsLoaderDelegate.declare(ParameterModelsLoaderDelegate.java:84)      at org.mule.runtime.module.extension.internal.loader.java.ConnectionProviderModelLoaderDelegate.declareConnectionProvider(ConnectionProviderModelLoaderDelegate.java:103)      at org.mule.runtime.module.extension.internal.loader.java.ConnectionProviderModelLoaderDelegate.lambda$declareConnectionProviders$0(ConnectionProviderModelLoaderDelegate.java:53)      at java.util.ArrayList.forEach(ArrayList.java:1249)      at org.mule.runtime.module.extension.internal.loader.java.ConnectionProviderModelLoaderDelegate.declareConnectionProviders(ConnectionProviderModelLoaderDelegate.java:53)      at org.mule.runtime.module.extension.internal.loader.java.ConfigModelLoaderDelegate.declareConfiguration(ConfigModelLoaderDelegate.java:76)      at org.mule.runtime.module.extension.internal.loader.java.ConfigModelLoaderDelegate.declareConfigurations(ConfigModelLoaderDelegate.java:46)      at org.mule.runtime.module.extension.internal.loader.java.DefaultJavaModelLoaderDelegate.declare(DefaultJavaModelLoaderDelegate.java:120)      at org.mule.runtime.module.extension.internal.loader.java.AbstractJavaExtensionModelLoader.declareExtension(AbstractJavaExtensionModelLoader.java:121)      at org.mule.runtime.extension.api.loader.ExtensionModelLoader.loadExtensionModel(ExtensionModelLoader.java:71)      at org.mule.runtime.module.extension.internal.resources.BaseExtensionResourcesGeneratorAnnotationProcessor.parseExtension(BaseExtensionResourcesGeneratorAnnotationProcessor.java:106)      at org.mule.runtime.module.extension.internal.resources.BaseExtensionResourcesGeneratorAnnotationProcessor.lambda$null$0(BaseExtensionResourcesGeneratorAnnotationProcessor.java:85)      at org.mule.runtime.core.api.util.ClassUtils.lambda$withContextClassLoader$10(ClassUtils.java:848)      at org.mule.runtime.core.api.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:176)      at org.mule.runtime.core.api.util.ClassUtils.withContextClassLoader(ClassUtils.java:901)      at org.mule.runtime.core.api.util.ClassUtils.withContextClassLoader(ClassUtils.java:867)",Bug,Major,Closed,"2017-06-29 20:32:44","2017-06-29 19:32:44",1
Mule,"Inconsistent behaviour in foreach with collection attribute","The foreach by default uses the org.mule.routing.Foreach$CollectionMapSplitter to split the collections. If you use a batch size greater than 1, this returns a list of objects, however, if the payload is a map or you use the collection attribute, the generated payload is a list of messages.    I've seen that the difference is that then you don't set the collection attribute in the foreach scope and the payload is not a map, then this fragment of the code is triggered:  [https://github.com/mulesoft/mule/blob/mule-3.8.4/core/src/main/java/org/mule/routing/Foreach.java#L289]    That uses an [EventToMessageSequenceSplittingStrategy|https://github.com/mulesoft/mule/blob/mule-3.8.4/core/src/main/java/org/mule/util/collection/EventToMessageSequenceSplittingStrategy.java#L31] which by the code returns a list of objects and then is wrapped in a CollectionMessageSequence. On the other hand, the ExpressionSplitter which is used if the collection attribute is set always returns a CollectionMessageSequence wrapping a list of mule messages: [https://github.com/mulesoft/mule/blob/mule-3.8.4/core/src/main/java/org/mule/routing/ExpressionSplitter.java#L61].",Bug,Major,Closed,"2017-06-29 18:58:02","2017-06-29 17:58:02",0
Mule,"Add Allure constants for license feature","Add Allure constants for license feature",Task,Minor,Done,"2017-06-29 14:21:33","2017-06-29 13:21:33",1
Mule,"Refactor to use Mule Runtime code when discovering ComponentBuildingDefinitionProviders","There is duplicated code on Tooling side when discovering ComponentBuildingDefinitionProviders and even this code is not correct as it not doing the same (there are two calls to discover by SPI services, second call is not being made in Tooling).    This task is about trying to refactor Mule in order to be used by Tooling but keeping the cache on Tooling side.",Task,Minor,Done,"2017-06-29 12:13:35","2017-06-29 11:13:35",4
Mule,"CraftedExtensionModelLoader should set ClassLoaderModelProperty","ExtensionModel loaded with crafted loader should also have the ClassLoaderModelProperty set.","Enhancement Request",Critical,Closed,"2017-06-29 04:10:55","2017-06-29 03:10:55",1
Mule,"WSC: Add support for WS-SecurityPolicy.","Add support for WS-SecurityPolicy in 3.9.x and 3.8.x.    Here you can find how CXF supports this to add it to the Soap Service.   [http://cxf.apache.org/docs/ws-securitypolicy.html]    Then we should expose some configuration for the WSC.","Enhancement Request",Minor,Closed,"2017-06-28 15:40:34","2017-06-28 14:40:34",8
Mule,"Support a concurrent artifact local repository ","As reported in MULE-12901 there seems to be cases where Aether tries to write a file in local repository twice when it is used in a concurrent environment.    There was a workaround proposed in MULE-12901 but this task is about handling this in a proper way. A possible approach could be by using [https://github.com/takari/takari-local-repository].",Task,Minor,Done,"2017-06-28 12:28:53","2017-06-28 11:28:53",4
Mule,"DW: Support instantiation through builders","Considering most of our API interfaces implementations are hidden and immutable, DW should interpret their builders in order to instantiate them. If we settle on a builder convention this could work for any interfaces.",Task,Critical,Done,"2017-06-27 21:06:02","2017-06-27 20:06:02",0
Mule,"file:copy not throwing error when file already exists on directory","file:copy not throwing error when overwrite=false, no renameTo value is provided and file already exists on directory    *App details*      To reproduce run   com.mulesoft.mule.distributions.server.integration.scenarios.errorhandling.FileExtensionErrorHandlingTestCase#copyFileAlreadyExistsIfTargetPathAlreadyExistsAndOverwriteIsFalse",Bug,Major,Closed,"2017-06-27 20:55:05","2017-06-27 19:55:05",1
Mule,"Mule Core operations don't expose any error models","Several Mule Core's operations (like logger, foreach, splitter) don't expose any error models ([https://github.com/mulesoft/mule/blob/mule-4.x/modules/extensions-support/src/main/resources/META-INF/mule-extension-model.json#L572)] although they do throw (ie. an invalid expression in a logger message)",Bug,"To be reviewed",Resolved,"2017-06-27 19:00:21","2017-06-27 18:00:21",2
Mule,"file:move not throwing error when file already exists on directory","file:move not throwing error when overwrite=false, no renameTo value is provided and file already exists on directory    *App details*      To reproduce run   com.mulesoft.mule.distributions.server.integration.scenarios.errorhandling.FileExtensionErrorHandlingTestCase#moveErrorIfFileAlreadyExistsNoRenameToIsGivenAndOverwriteIsFalse",Bug,Major,Closed,"2017-06-27 18:30:22","2017-06-27 17:30:22",1
Mule,"Refresh socket extension","Bump it to incorporate all the UX changes since the inception moment","Enhancement Request",Critical,Closed,"2017-06-27 16:52:08","2017-06-27 15:52:08",8
Mule,"Expand External Lib functionality","Allow to also specify that a dependency is needed","Enhancement Request",Major,Closed,"2017-06-27 16:49:32","2017-06-27 15:49:32",8
Mule,"file:move error messages say 'Can't copy ... ' instead of 'Can't move ...'","file:move error messages says 'Can't copy ... ' instead of 'Can't move ...'    ",Bug,Minor,Closed,"2017-06-27 16:48:05","2017-06-27 15:48:05",1
Mule,"ClassLoader leak on DeclarationEnrichers generate an OOM Metaspace when calculating Metadata for DataSense","When doing DataSense for Salesforce connector a OOM Metaspace has happened. The first reason for this was a classloader leak in the connector, once that was removed more were found related to DeclarationEnrichers as they are keeping a reference to classes from the Extension and the ClassLoader itself.    I found the first *on org.mule.runtime.module.extension.internal.loader.enricher.DynamicMetadataDeclarationEnricher* once that one was fixed a found another one *on org.mule.runtime.module.extension.internal.loader.enricher.ImportedTypesDeclarationEnricher*. See screenshots attached with VisualVM.",Bug,Critical,Closed,"2017-06-27 16:20:00","2017-06-27 15:20:00",5
Mule,"Branch all the repositories for Mozart Beta ","Branch all the repositories for Mozart Beta ",Task,Blocker,Done,"2017-05-26 21:24:13","2017-05-26 20:24:13",2
Mule,"MetadataContext returns a ConfigurationInstance instead of the Configuration it self","MetadataContext returns a ConfigurationInstance instead of the Configuration it self",Bug,Blocker,Closed,"2017-06-27 15:22:06","2017-06-27 14:22:06",1
Mule,"Bootstrap properties should not be exported","Bootstrap properties resources are still exported on the core module.",Bug,Critical,Closed,"2017-06-27 12:22:51","2017-06-27 11:22:51",1
Mule,"Artifacts using heavy package must should not depend on maven for classloader model resolution","Artifacts packaged with all their dependencies (ie: heavy packages) still depend on the artifact pom.xml and Maven in order to resolve the classloader model.    This is a problem as it requires access to the same set of dependencies that where used to resolve the artifact at compile time. So, maven artifacts that were discarded during the compile time (because they were excluded or there was a newer version of the artifact) are still required on runtime. (wasting space)    A better approach is to resolve the dependencies on compile time, generate a maven repository only with the required jars, and then generate metadata that indicates which files must be loaded in the artifact's classloader model. (this could use a new classloader model loader)","Enhancement Request",Critical,Resolved,"2017-06-26 20:03:48","2017-06-26 19:03:48",8
Mule,"Cannot load extension model for JMS connector","See ignored test in StaticDataSenseTestCase. To load the extension model, the JMS connector depends on the JMS API to be in the classpath but it's currently being defined as provided dependency.    Since the JMS connector won't work unless the jms-api is in the classpath and is the 2.x version of it, then it seems it should come with the connector. We need to review how classloading would work in this case since adding activemq in the app classpath would also contribute the JMS spec.",Bug,Major,Resolved,"2017-06-26 13:11:55","2017-06-26 12:11:55",0
Mule,"Cannot do datasense for JMS connector","It's not possible to do datasense over JMS connector since the extension model cache is closing the class loader after returning the extension model",Bug,Blocker,Closed,"2017-06-23 20:12:48","2017-06-23 19:12:48",2
Mule,"Use worker strategy for HTTP requester and define performance scenarios","Considering the standard CH worker configuration of 1 core which results in 1 selector thread, we've come to realised that using that same thread IO strategy could result in selector threads blocking if the stream is consumed too slowly (because upon the internal buffers filling the writer must wait for space). Thus it makes more sense to mimic the 3.x strategy of having a worker pool dedicated to the response handling.  We need to make those changes but most importantly define how this will be validated from a performance side. We need to make sure different payload sizes and concurrency are used as well as GET and POST methods to verify inbound and outbound payloads.",Task,Critical,Done,"2017-06-23 16:15:32","2017-06-23 15:15:32",4
Mule,"MissingResourceException when shutting down Mule","Every time you shut down Mule and when it tries to undeploy the {{default}} domain, you get the following error:    ",Bug,Major,Resolved,"2017-06-23 15:49:29","2017-06-23 14:49:29",4
Mule,"Fix extension model test","assertion:      should be change to:      to avoid having unnecesary failures due to any changes on versions",Bug,Minor,Closed,"2017-06-23 15:22:01","2017-06-23 14:22:01",0
Mule,"Add a way to support custom notifications from plugins","org.mule.runtime.config.spring.NotificationConfig class from Mule CE references a couple of notification classes from the compatibility plugin.   These notifications are being test on, for example, org.mule.test.integration.transport.file.FileAppendConnectorTestCase.   CE code should not reference those classes, the plugin must provide a way to make them available. Current approach, besides having this ugly dependency, won't probably work once the compatibility tests are executed using isolation",Task,Major,Done,"2017-03-15 18:19:13","2017-03-15 18:19:13",4
Mule,"Backport Product configuration in embedded container to BETA","Backport the piece of MULE-12116 that allows to set the version of the runtime (CE or EE) to use for running MUnit tests",Task,Blocker,Done,"2017-06-23 14:31:27","2017-06-23 13:31:27",1
Mule,"Soap Connect: Invoke Operation is being added to the extension model twice","Soap Connect: Invoke Operation is being added to the extension model twice",Bug,Blocker,Resolved,"2017-06-23 00:10:09","2017-06-22 23:10:09",3
Mule,"MuleDeployment should delete distributions quietly","MuleDeployment should delete distributions quietly",Task,Major,Done,"2017-06-22 22:30:14","2017-06-22 21:30:14",0
Mule,"Mask password args in system tests.","The passwords of the maven repos are being logges as tehy are currently","Enhancement Request",Major,Closed,"2017-06-22 21:36:00","2017-06-22 20:36:00",1
Mule,"Fix tests for Beta","Fix failing tests for Beta    ",Task,Blocker,Done,"2017-06-22 20:46:37","2017-06-22 19:46:37",4
Mule,"MetadataKeys and Value resolvers should type the parameters","*MetadataKeys and Options resolvers should type the parameters*  * In the same way as Metadata resolvers return a ComponentModel with the resolved type as the input or ouput, the MetadataKeys and Options resolver should type -> add a model property indicating the possible values for these parameter.  * This JIRA is highly related to -> https://www.mulesoft.org/jira/browse/MULE-12855","Enhancement Request",Critical,Closed,"2017-06-22 20:41:14","2017-06-22 19:41:14",8
Mule,"File connector errors being mapped to MULE:UNKNOWN","The following File connector errors been mapped to MULE:UNKNOWN    h2. javax.activation.MimeTypeParseException  Triggered by passing a value of invalid to the file:read outputMimeType attribute.            h2. java.nio.file.FileSystemException  Triggered by setting mode OVERWRITE and passing a directory as path value to the file:write operation.              h2. java.nio.file.AccessDeniedException  Triggered by setting a path to a non writable folder to the file:rename operation.          ",Bug,Major,Closed,"2017-06-22 20:21:56","2017-06-22 19:21:56",3
Mule,"Extensions that use the soap service fails with Provider com.ctc.wstx.stax.WstxInputFactory not found","Soap Connect Extensions fail with: Provider com.ctc.wstx.stax.WstxInputFactory not     The XmlInputFactory.newInstance() is being executed with the Soap extension Classloader that does not have the Woodstox classes.     As a workaround including woodstox in the extension pom.xml will make it work  ",Bug,Blocker,Resolved,"2017-06-22 18:59:30","2017-06-22 17:59:30",8
Mule,"Recursive flows can't be parsed with the new mechanism","After removing Spring namespace handlers and using our ComponentBuildingDefinition objects, we stopped supporting recursive flows (or circular chains).",Bug,Major,Resolved,"2017-06-22 18:46:53","2017-06-22 17:46:53",4
Mule,"Migrate use of blocking API by transports to use non-blocking API that supports new interceptors. Part 2.","This would allow the transaction support to use the reactor api, effectively deprecating and possibly removing the process method.    The outcome of this spike would be a determination of whether its more convenient to do this migration (MULE-11023) or to add an interception mechanism for the blocking Processor API.",Task,Critical,Done,"2017-06-22 17:57:40","2017-06-22 16:57:40",16
Mule,"Every exported Mule package must contain api (part2)","All the packages exported on the Mule container must contain the api package.  Currently, there are packages that do not say api. For example org.mule.runtime.module.artifact.  This task is to fix only all the packages that are intended to be exported. Some internal packages are begin exported now, but just temporarily, so those packages will be manage in a different issue.",Task,Critical,Done,"2017-06-22 16:21:23","2017-06-22 15:21:23",16
Mule,"Sometimes, a fatal error is thrown while loading extension models","While loading te extension models sometimes we get this fatal error, crashing studio even before it finishes loading.    ",Bug,Major,Closed,"2017-06-22 12:28:16","2017-06-22 11:28:16",8
Mule,"Tooling Client fails to resolve transitive dependencies/extension models","Tooling Client fails to resolve transitive dependencies/extension models.   When trying to serialize a app declaration with WSC or HTTP it fails with:    Caused by: org.mule.runtime.api.exception.MuleRuntimeException: Failed to serialize the declaration for the artifact [null]: The Extension [Sockets] is not present in the current context   at org.mule.runtime.config.spring.dsl.model.internal.DefaultArtifactDeclarationXmlSerializer.serializeArtifact(DefaultArtifactDeclarationXmlSerializer.java:144)   at org.mule.runtime.config.spring.dsl.model.internal.DefaultArtifactDeclarationXmlSerializer.serialize(DefaultArtifactDeclarationXmlSerializer.java:74)   at org.mule.tooling.client.internal.artifact.DefaultArtifactSerializationService.toXml(DefaultArtifactSerializationService.java:63)   ... 126 common frames omitted  Caused by: java.lang.IllegalArgumentException: The Extension [Sockets] is not present in the current context   at org.mule.runtime.extension.api.dsl.syntax.resolver.DefaultImportTypesStrategy.lambda$null$0(DefaultImportTypesStrategy.java:38)   at java.util.Optional.orElseThrow(Optional.java:290)   at org.mule.runtime.extension.api.dsl.syntax.resolver.DefaultImportTypesStrategy.lambda$getImportedTypes$1(DefaultImportTypesStrategy.java:38)   at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1321)   at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169)   at java.util.Iterator.forEachRemaining(Iterator.java:116)   at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)   at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)   at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)   at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)   at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)   at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)   at org.mule.runtime.extension.api.dsl.syntax.resolver.DefaultImportTypesStrategy.getImportedTypes(DefaultImportTypesStrategy.java:36)   at org.mule.runtime.extension.internal.dsl.syntax.XmlDslSyntaxResolver.<init>(XmlDslSyntaxResolver.java:113)   at org.mule.runtime.extension.api.dsl.syntax.resolver.DslSyntaxResolver.getDefault(DslSyntaxResolver.java:75)   at org.mule.runtime.config.spring.dsl.model.internal.DefaultDslElementModelFactory.lambda$new$1(DefaultDslElementModelFactory.java:33)   at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1321)   at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169)   at java.util.Iterator.forEachRemaining(Iterator.java:116)   at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)   at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)   at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)   at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)   at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)   at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)   at org.mule.runtime.config.spring.dsl.model.internal.DefaultDslElementModelFactory.<init>(DefaultDslElementModelFactory.java:33)   at org.mule.runtime.config.spring.dsl.model.DslElementModelFactory.getDefault(DslElementModelFactory.java:39)   at org.mule.runtime.config.spring.dsl.model.internal.DefaultArtifactDeclarationXmlSerializer.serializeArtifact(DefaultArtifactDeclarationXmlSerializer.java:96)   ... 128 common frames omitted",Bug,Critical,Closed,"2017-06-21 22:56:20","2017-06-21 21:56:20",2
Mule,"Fix OpenSAML dependencies in Soap Service","OpenSAML appears to not be used anymore in the Soap Service so we should remove the dependency along with the transitive ones.",Task,Major,Done,"2017-06-21 21:49:04","2017-06-21 20:49:04",1
Mule,"Failure to validate extension model","When trying to start the attached application, the following error is thrown:    ",Task,Blocker,Done,"2017-06-21 21:07:20","2017-06-21 20:07:20",1
Mule,"Processor chain performs thread hand-off from async processor response after executing interceptors.","When only 1 core is available the HTTP requester has 1 selector to work with and since we are using a SameThreadIOStrategy, the selector executes the success callback and triggers notifications. Should any of the listeners decide to consume the stream then the selector thread will block waiting for content that will never become available since no more threads can handle the following events.  The processing strategy that performs the thread handoff should execute before this can happen.",Bug,Blocker,Closed,"2017-06-21 19:43:17","2017-06-21 18:43:17",4
Mule,"SchedulingStrategy parameter should be required","Parameter should be required",Bug,"To be reviewed",Closed,"2017-06-21 19:08:17","2017-06-21 18:08:17",1
Mule,"Change logger default log level to INFO","What title says :)","Enhancement Request",Minor,Closed,"2017-06-21 18:26:22","2017-06-21 17:26:22",0
Mule,"Cannot load extension models in Windows","Currently, the extension models are not loaded for any extension.    It seems to be an issue with the paths and how we interact with them.    It is failing to get the tools jar from the JDK. The path of that is trying to use is *C:\Program Files\Java\jre1.8.0_131/../lib/tools.jar*  ",Bug,Blocker,Closed,"2017-06-21 15:56:16","2017-06-21 14:56:16",8
Mule,"Fix ApplicationDescriptorFactoryTestCase for beta","fix ApplicationDescriptorFactoryTestCase tests for beta",Task,Blocker,Done,"2017-06-20 21:36:49","2017-06-20 20:36:49",1
Mule,"Split XmlHints in a two annotations, one for Parameter and one for Types","XmlHints currently has three parameters: allowInlineDefinition, allowReferences and allowTopLevelDefinition    `allowReferences` only make sense for parameters while `allowTopLevelDefinition` only make sense for types. We can see they are two faces of the same coin, viewed from different sides.  A parameter can allow references only if it's type allows to be defined as a topLevel element.    We should split in two annotations with the same name but different package and target type to better guide our users on when does each option apply:    'org.mule.runtime.extension.api.annotation.param.dsl.xml.XmlHints':         - target FIELD and PARAMETER        - allowInlineDefinition, allowReferences    'org.mule.runtime.extension.api.annotation.type.dsl.xml.XmlHints':         - target TYPE        - allowInlineDefinition, allowTopLevelDefinition    *This _will_ break connectors code, but should have no impact in its final DSL*",Bug,"To be reviewed",Closed,"2017-06-20 15:39:02","2017-06-20 14:39:02",3
Mule,"Add maxConcurrency configuration to Flows","Add maxConcurrency configuration to Flows",Task,Critical,Done,"2017-06-20 15:22:30","2017-06-20 14:22:30",4
Mule,"Add payload length to TypedValue API","It is not always possible to query the size of a payload, but that doesn't mean the size isn't known. Take for example the case of HTTP where the underlying connector returns a InputStream but there is a content-length header, but not being able to set this size along with the InputStream payload this is lost, and can't then be used for optimizing the reading and sending of the InputStream payload in another connector.    Also update file/http connectors to use this in separate issue.    ","Enhancement Request",Major,Resolved,"2017-06-20 15:13:58","2017-06-20 14:13:58",4
Mule,"A config should not be considered as dynamic if a static expression is used","*A config should not be considered as dynamic if a static expression is used*  * If a connection/configuration uses the expression: {{#\[\{ key : 'val1', key2 : 'val2'\}\]}} as the value of a parameter, where the expression is not event dependent, the configuration should be considered as a static one. ","Enhancement Request","To be reviewed",Closed,"2017-06-20 03:59:18","2017-06-20 02:59:18",5
Mule,"Failure to run SOAP-based apps: 'basic-connection' does not have an associated Bean Definition Parser","h6. Steps to reproduce    * Create a Mule app containing a *SOAP connector: either Workday or ServiceNow*.  * Deploy it in Studio 7 or a 4.x Standalone Runtime (SNAPSHOT or BETA).  * The deploy fails with the following exception:     ",Bug,Blocker,Resolved,"2017-06-19 22:35:54","2017-06-19 21:35:54",5
Mule,"DslElementModel should communicate default group values","DslElementModel should communicate default group values",Bug,Blocker,Closed,"2017-06-19 22:09:41","2017-06-19 21:09:41",5
Mule,"HTTP Stream Response: remove switch","HTTP Stream Response: make stream response false by default  HTTP Request - http stream response  currently is true by default  make it false by default    ",Bug,Blocker,Closed,"2017-06-19 21:29:24","2017-06-19 20:29:24",1
Mule,"Add support for provided dependencies on Mule Plugins that need to be added to application","Define how to handle dependencies that are needed by a Mule Plugin but also needed before loading the extension model.  An approach could be to declare them inside the mule-plugin.json as third-party provided dependencies and Tooling should provide a way to client to resolve them.    Another way would be to invest time and review if ExtensionModel can be loaded without those libraries.",Task,Critical,New,"2017-06-19 18:58:14","2017-06-19 17:58:14",8
Mule,"WS Consumer errors are hidden in the stacktrace","When WS consumer throws a connectivity testing error, you need to search the stacktrace for the actual cause of the error, instead of seeing the error in the first error message description.    In the following example, the real cause of the error is: The provided WSDL [https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl] is RPC style, RPC WSDLs are not supported    {code:none}  org.mule.runtime.api.exception.MuleRuntimeException: java.lang.RuntimeException: org.mule.runtime.api.lifecycle.LifecycleException: Could not perform connectivity testing for config ‘Web_Service_Consumer_Config’  org.mule.runtime.api.exception.MuleRuntimeException: java.lang.RuntimeException: org.mule.runtime.api.lifecycle.LifecycleException: Could not perform connectivity testing for config ‘Web_Service_Consumer_Config’   at org.mule.runtime.core.api.util.ClassUtils.withContextClassLoader(ClassUtils.java:852)   at org.mule.runtime.config.spring.LazyMuleArtifactContext.initializeComponent(LazyMuleArtifactContext.java:121)   at org.mule.runtime.config.spring.LazyMetadataService.initializeComponent(LazyMetadataService.java:121)   at org.mule.runtime.config.spring.LazyMetadataService.getMetadataKeys(LazyMetadataService.java:52)   at com.mulesoft.agent.services.metadata.MuleAgentMetadataService.lambda$getMetadataKeys$0(MuleAgentMetadataService.java:55)   at com.mulesoft.agent.services.metadata.MuleAgentMetadataService.withMetadataService(MuleAgentMetadataService.java:126)   at com.mulesoft.agent.services.metadata.MuleAgentMetadataService.getMetadataKeys(MuleAgentMetadataService.java:55)   at com.mulesoft.agent.external.handlers.metadata.MetadataRequestHandler.lambda$getMetadataKeys$0(MetadataRequestHandler.java:121)   at com.mulesoft.agent.util.ResponseHelper.response(ResponseHelper.java:88)   at com.mulesoft.agent.external.handlers.metadata.MetadataRequestHandler.getMetadataKeys(MetadataRequestHandler.java:119)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:498)   at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81)   at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:151)   at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:171)   at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:152)   at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:104)   at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:387)   at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:331)   at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:103)   at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:271)   at org.glassfish.jersey.internal.Errors$1.call(Errors.java:271)   at org.glassfish.jersey.internal.Errors$1.call(Errors.java:267)   at org.glassfish.jersey.internal.Errors.process(Errors.java:315)   at org.glassfish.jersey.internal.Errors.process(Errors.java:297)   at org.glassfish.jersey.internal.Errors.process(Errors.java:267)   at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:297)   at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:254)   at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1028)   at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:372)   at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:381)   at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:344)   at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:221)   at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:696)   at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1515)   at com.mulesoft.agent.rest.RequestLoggingFilter.doFilter(RequestLoggingFilter.java:95)   at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1486)   at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:519)   at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)   at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)   at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)   at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1097)   at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:448)   at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)   at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1031)   at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)   at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)   at org.eclipse.jetty.server.Server.handle(Server.java:446)   at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:271)   at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:246)   at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)   at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)   at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)   at java.lang.Thread.run(Thread.java:748)  Caused by: java.lang.RuntimeException: org.mule.runtime.api.lifecycle.LifecycleException: Could not perform connectivity testing for config ‘Web_Service_Consumer_Config’   at org.mule.runtime.config.spring.LazyMuleArtifactContext.applyLifecycle(LazyMuleArtifactContext.java:100)   at org.mule.runtime.config.spring.LazyMuleArtifactContext.createComponents(LazyMuleArtifactContext.java:80)   at org.mule.runtime.config.spring.LazyMuleArtifactContext.lambda$initializeComponent$0(LazyMuleArtifactContext.java:129)   at org.mule.runtime.core.api.util.ClassUtils.lambda$withContextClassLoader$10(ClassUtils.java:848)   at org.mule.runtime.core.api.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:176)   at org.mule.runtime.core.api.util.ClassUtils.withContextClassLoader(ClassUtils.java:901)   at org.mule.runtime.core.api.util.ClassUtils.withContextClassLoader(ClassUtils.java:867)   at org.mule.runtime.core.api.util.ClassUtils.withContextClassLoader(ClassUtils.java:847)   ... 55 more  Caused by: org.mule.runtime.api.lifecycle.LifecycleException: Could not perform connectivity testing for config ‘Web_Service_Consumer_Config’   at org.mule.runtime.core.lifecycle.AbstractLifecycleManager.invokePhase(AbstractLifecycleManager.java:143)   at org.mule.runtime.core.lifecycle.DefaultLifecycleManager.fireStartPhase(DefaultLifecycleManager.java:59)   at org.mule.runtime.module.extension.internal.runtime.config.LifecycleAwareConfigurationProvider.lambda$start$4(LifecycleAwareConfigurationProvider.java:105)   at org.mule.runtime.core.api.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:176)   at org.mule.runtime.core.api.util.ClassUtils.withContextClassLoader(ClassUtils.java:901)   at org.mule.runtime.module.extension.internal.runtime.config.LifecycleAwareConfigurationProvider.start(LifecycleAwareConfigurationProvider.java:104)   at org.mule.runtime.core.api.lifecycle.LifecycleUtils.startIfNeeded(LifecycleUtils.java:189)   at org.mule.runtime.config.spring.LazyMuleArtifactContext.applyLifecycle(LazyMuleArtifactContext.java:98)   ... 62 more  Caused by: org.mule.runtime.core.api.DefaultMuleException: Could not perform connectivity testing for config ‘Web_Service_Consumer_Config’   at org.mule.runtime.module.extension.internal.runtime.config.LifecycleAwareConfigurationInstance.testConnectivity(LifecycleAwareConfigurationInstance.java:217)   at org.mule.runtime.module.extension.internal.runtime.config.LifecycleAwareConfigurationInstance.start(LifecycleAwareConfigurationInstance.java:164)   at org.mule.runtime.core.api.lifecycle.LifecycleUtils.startIfNeeded(LifecycleUtils.java:189)   at org.mule.runtime.module.extension.internal.runtime.config.LifecycleAwareConfigurationProvider.startConfig(LifecycleAwareConfigurationProvider.java:189)   at org.mule.runtime.module.extension.internal.runtime.config.LifecycleAwareConfigurationProvider.lambda$null$3(LifecycleAwareConfigurationProvider.java:107)   at org.mule.runtime.core.lifecycle.AbstractLifecycleManager.invokePhase(AbstractLifecycleManager.java:130)   ... 69 more  Caused by: org.mule.runtime.core.retry.RetryPolicyExhaustedException: Connectivity test failed for config ‘Web_Service_Consumer_Config’   at org.mule.runtime.core.retry.policies.AbstractPolicyTemplate.execute(AbstractPolicyTemplate.java:83)   at org.mule.runtime.module.extension.internal.runtime.config.LifecycleAwareConfigurationInstance.testConnectivity(LifecycleAwareConfigurationInstance.java:215)   ... 74 more  Caused by: org.mule.runtime.api.connection.ConnectionException: Connectivity test failed for config ‘Web_Service_Consumer_Config’   at org.mule.runtime.module.extension.internal.runtime.config.LifecycleAwareConfigurationInstance$1.doWork(LifecycleAwareConfigurationInstance.java:193)   at org.mule.runtime.core.retry.policies.AbstractPolicyTemplate.execute(AbstractPolicyTemplate.java:57)   ... 75 more  Caused by: org.mule.runtime.api.connection.ConnectionException: The provided WSDL [https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl] is RPC style, RPC WSDLs are not supported   at org.mule.service.soap.client.SoapCxfClientFactory.getIntrospecter(SoapCxfClientFactory.java:60)   at org.mule.service.soap.client.SoapCxfClientFactory.create(SoapCxfClientFactory.java:38)   at org.mule.extension.ws.internal.connection.SoapClientConnectionProvider.connect(SoapClientConnectionProvider.java:135)   at org.mule.extension.ws.internal.connection.SoapClientConnectionProvider.connect(SoapClientConnectionProvider.java:48)   at org.mule.runtime.core.internal.connection.ConnectionProviderWrapper.connect(ConnectionProviderWrapper.java:59)   at org.mule.runtime.core.internal.connection.ErrorTypeHandlerConnectionProviderWrapper.connect(ErrorTypeHandlerConnectionProviderWrapper.java:60)   at org.mule.runtime.core.internal.connection.ConnectionProviderWrapper.connect(ConnectionProviderWrapper.java:59)   at org.mule.runtime.core.internal.connection.LifecycleAwareConnectionProviderWrapper.connect(LifecycleAwareConnectionProviderWrapper.java:61)   at org.mule.runtime.core.internal.connection.CachedConnectionHandler.createConnection(CachedConnectionHandler.java:95)   at org.mule.runtime.core.internal.connection.CachedConnectionHandler.getConnection(CachedConnectionHandler.java:86)   at org.mule.runtime.core.internal.connection.DefaultConnectionManager.testConnectivity(DefaultConnectionManager.java:163)   at org.mule.runtime.core.internal.connection.DefaultConnectionManager.lambda$testConnectivity$1(DefaultConnectionManager.java:146)   at org.mule.runtime.core.internal.connection.DefaultConnectionManager.doTestConnectivity(DefaultConnectionManager.java:153)   at org.mule.runtime.core.internal.connection.DefaultConnectionManager.testConnectivity(DefaultConnectionManager.java:129)   at org.mule.runtime.module.extension.internal.runtime.config.LifecycleAwareConfigurationInstance$1.doWork(LifecycleAwareConfigurationInstance.java:188)   ... 76 more      org.mule.tooling.ui.modules.core.metadata.notifications.DataSenseJobNotificationPopup$MoreInfoSelectionAdapter.widgetSelected(DataSenseJobNotificationPopup.java:232)    org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:249)    org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)    org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)    org.eclipse.swt.widgets.Widget.sendEvent_aroundBody2(Widget.java:1501)    org.eclipse.swt.widgets.Widget$AjcClosure3.run(Widget.java:1)    org.eclipse.rcptt.<USER>recording.aspects.RecordingAspect.ajc$around$org_eclipse_rcptt_tesla_recording_aspects_RecordingAspect$2$2f127892proceed(RecordingAspect.aj:94)    org.eclipse.rcptt.<USER>recording.aspects.RecordingAspect.ajc$around$org_eclipse_rcptt_tesla_recording_aspects_RecordingAspect$2$2f127892(RecordingAspect.aj:118)    org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1501)    org.eclipse.swt.widgets.Widget.sendEvent_aroundBody4(Widget.java:1524)    org.eclipse.swt.widgets.Widget$AjcClosure5.run(Widget.java:1)    org.eclipse.rcptt.<USER>recording.aspects.RecordingAspect.ajc$around$org_eclipse_rcptt_tesla_recording_aspects_RecordingAspect$1$bd9fb3e7proceed(RecordingAspect.aj:39)    org.eclipse.rcptt.<USER>recording.aspects.RecordingAspect.ajc$around$org_eclipse_rcptt_tesla_recording_aspects_RecordingAspect$1$bd9fb3e7(RecordingAspect.aj:82)    org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1513)    org.eclipse.swt.widgets.Widget.sendSelectionEvent_aroundBody10(Widget.java:1574)    org.eclipse.swt.widgets.Widget$AjcClosure11.run(Widget.java:1)    org.eclipse.rcptt.<USER>recording.aspects.RecordingAspect.ajc$around$org_eclipse_rcptt_tesla_recording_aspects_RecordingAspect$10$4cdd93e9proceed(RecordingAspect.aj:256)    org.eclipse.rcptt.<USER>recording.aspects.RecordingAspect.ajc$around$org_eclipse_rcptt_tesla_recording_aspects_RecordingAspect$10$4cdd93e9(RecordingAspect.aj:277)    org.eclipse.swt.widgets.Widget.sendSelectionEvent(Widget.java:1568)    org.eclipse.swt.widgets.Link.textView_clickOnLink_atIndex(Link.java:793)    org.eclipse.swt.widgets.Display.windowProc_aroundBody28(Display.java:6051)    org.eclipse.swt.widgets.Display$AjcClosure29.run(Display.java:1)    org.eclipse.rcptt.<USER>swt.aspects.EventFilterAspect.ajc$around$org_eclipse_rcptt_tesla_swt_aspects_EventFilterAspect$1$602baf3eproceed(EventFilterAspect.aj:17)    org.eclipse.rcptt.<USER>swt.aspects.EventFilterAspect.ajc$around$org_eclipse_rcptt_tesla_swt_aspects_EventFilterAspect$1$602baf3e(EventFilterAspect.aj:19)    org.eclipse.swt.widgets.Display.windowProc(Display.java:6038)    org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)    org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)    org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1135)    org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1127)    org.eclipse.swt.widgets.Control.mouseDown(Control.java:2624)    org.eclipse.swt.widgets.Display.windowProc_aroundBody24(Display.java:5733)    org.eclipse.swt.widgets.Display$AjcClosure25.run(Display.java:1)    org.eclipse.rcptt.<USER>swt.aspects.EventFilterAspect.ajc$around$org_eclipse_rcptt_tesla_swt_aspects_EventFilterAspect$1$602baf3eproceed(EventFilterAspect.aj:17)    org.eclipse.rcptt.<USER>swt.aspects.EventFilterAspect.ajc$around$org_eclipse_rcptt_tesla_swt_aspects_EventFilterAspect$1$602baf3e(EventFilterAspect.aj:19)    org.eclipse.swt.widgets.Display.windowProc(Display.java:5668)    org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)    org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)    org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2140)    org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2402)    org.eclipse.swt.widgets.Display.windowProc_aroundBody24(Display.java:5797)    org.eclipse.swt.widgets.Display$AjcClosure25.run(Display.java:1)    org.eclipse.rcptt.<USER>swt.aspects.EventFilterAspect.ajc$around$org_eclipse_rcptt_tesla_swt_aspects_EventFilterAspect$1$602baf3eproceed(EventFilterAspect.aj:17)    org.eclipse.rcptt.<USER>swt.aspects.EventFilterAspect.ajc$around$org_eclipse_rcptt_tesla_swt_aspects_EventFilterAspect$1$602baf3e(EventFilterAspect.aj:19)    org.eclipse.swt.widgets.Display.windowProc(Display.java:5668)    org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)    org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5226)    org.eclipse.swt.widgets.Display.applicationProc(Display.java:5375)    org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)    org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)    org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3703)    org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1121)    org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)    org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1022)    org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:150)    org.eclipse.ui.internal.Workbench$5.run(Workbench.java:693)    org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)    org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:610)    org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)    org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:138)    org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)    org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)    org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)    org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)    org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)    sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)    sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)    sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)    java.lang.reflect.Method.invoke(Method.java:498)    org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:673)    org.eclipse.equinox.launcher.Main.basicRun(Main.java:610)    org.eclipse.equinox.launcher.Main.run(Main.java:1519)    org.eclipse.equinox.launcher.Main.main(Main.java:1492)    {code}",Bug,Major,Closed,"2017-06-19 18:12:46","2017-06-19 17:12:46",3
Mule,"Communicate Nullsafe defaultImplementation in the ExtensionModel","Communicate Nullsafe defaultImplementation in the ExtensionModel",Bug,Blocker,Closed,"2017-06-19 17:45:03","2017-06-19 16:45:03",3
Mule,"Implement Parameter Options Resolver in Tooling Client's Side","Implement Parameter Options Resolver in Tooling Client's Side    Whatever is done for Metadata","Enhancement Request",Blocker,Closed,"2017-06-19 12:34:23","2017-06-19 11:34:23",8
Mule,"Implement Parameters Options Resolver in Mule's Side","*Implement Parameters Options Resolver in Mule's Side*    This implies:  * The creation of a {{Parameter Options Resolver Service}} (similar to the metadata one)  ** Take care about the lazy version ","Enhancement Request",Blocker,Resolved,"2017-06-19 12:33:03","2017-06-19 11:33:03",8
Mule,"Implement Parameters Options Resolver in SDK's Side ","*Implement Parameters Options Resolver in SDK's Side*  This implies:  * Create proper annotations  * Create proper interfaces  * Create mechanism (reuse the ones in Metadata) no execute the resolving.  * Expose this mechanism through ExtensionComponent for Operations and sources and in the same way as {{ConfigurationProviderMetadataAdapter}} does for Configs and Conn Providers","Enhancement Request",Blocker,Closed,"2017-06-19 12:28:38","2017-06-19 11:28:38",13
Mule,"Implement Static Parameter Options Resolver","Implement Static Parameter Options Resolver    This is a kind of Options Resolver that is marked as “Static”, but what it means?   It means the possibility of providing a set of values that doesn’t require any kind of connection or user input to resolve values, values that can be resolved at Compile time to be able to enrich the Extension Model so the IDEs won’t need to resolve at design time through the Tooling Client.     This will be the way to create an “Open Enum” parameter.  ",Task,"To be reviewed",New,"2017-06-19 12:22:23","2017-06-19 11:22:23",8
Mule,"Connectors point to the wrong version of their parent pom","Currently, connectors are pointing to       as the parent pom, but the version in https://github.com/mulesoft/mule-core-modules-parent/blob/master/pom.xml#L15 is 1.0.0-SNAPSHOT",Bug,Blocker,Closed,"2017-06-18 14:43:33","2017-06-18 13:43:33",1
Mule,"Add @threadSafe to extension-maven-plugin mojos","Ensure the mojos of the extension plugin are thread safe and annotate them to avoid the warnings when doing parallelmaven builds.","Enhancement Request",Minor,Closed,"2017-06-18 14:37:32","2017-06-18 13:37:32",1
Mule,"Embedded container cannot delete folder when stopping app in Windows","When stopping the embedded container, it tries to perform a deleteTree in the container base folder. In Windows, the deletion is not successful, so the next time a container is started it cannot create the domains/default folder.  This causes, for example, that MUnit cannot run two consecutive suites.  An example can be tested in the org.mule.runtime.module.embedded.EmbeddedContainerTestCase. A test for this could be something like:    In JUnit it might work due to the creation of a temporary folder, but if one changes the containerBaseFolder to another location (for example inside the project) the issue can be reproduced.",Bug,Blocker,Closed,"2017-06-16 18:30:07","2017-06-16 17:30:07",2
Mule,"Fix version in BETA tests ",,Bug,Blocker,Closed,"2017-06-16 18:23:31","2017-06-16 17:23:31",1
Mule,"Review WSC fields in configuration ","Review Expresion Supported fields in configuration  Config Ref shoud be named requesterConfigRef  ",Task,Blocker,Done,"2017-06-16 16:28:37","2017-06-16 15:28:37",3
Mule,"Avoid generating stacktraces for exceptions when verbose is disabled","Generating stacktraces for exceptions is expensive in cpu time.    Stacktraces should only be filled when there is certainty they are going to be logged/shown somewhere.","Enhancement Request",Major,Closed,"2017-06-16 15:39:05","2017-06-16 14:39:05",1
Mule,"Complete ObjectStore connector","add support for connection providers  add support for persisent, ttl, etc  support multiple stores  support defining stores.","Enhancement Request",Major,Closed,"2017-06-16 15:23:42","2017-06-16 14:23:42",8
Mule,"Allow Top Level Pojos to point to a config","Support for both static and dynamic pojos","Enhancement Request",Critical,Closed,"2017-06-16 14:09:36","2017-06-16 13:09:36",8
Mule,"The version of Xerces used in endorsed directory performs service provider lookup for each new DocumentBuilder","This is due to lookup of org.apache.xerces.xni.parser.XMLParserConfiguration for each new DocumentBuilder.    The version of xecers in jdk7/8 does not do this, but rather has a fixed implementation.    Best way to resolve this until we stop using endorsed version of xerces is to set the system property:    -Dorg.apache.xerces.xni.parser.XMLParserConfiguration=org.apache.xerces.parsers.XIncludeAwareParserConfiguration    This has a significant performance impact when using XML expression functions.",Bug,Critical,Closed,"2017-06-16 13:28:57","2017-06-16 12:28:57",2
Mule,"Support multipart streaming","Currently, users must decide whether to stream multipart content by not parsing it or to handle all of it in memory if they want to easily manipulate it, say to take only some of the parts and store them, which means large content is prohibited. We should provide a better way of handling that kind of content.   Some possible options are:  *  storing each parsed part and then referencing those files  * have DW support multipart/form-data and so on, to leverage their solution and ease of handling  IMO, the latter would mean greatly simplifying our solution and the user experience since it would all be consistent. Same could apply to form url encoded content.","Enhancement Request","To be reviewed",Closed,"2017-06-16 01:07:10","2017-06-16 00:07:10",21
Mule,"ParameterModel should be able to point to another mule elements","Figure out a way to have parameters which point to component names.    Examples:    * listenerConfig parameter should point to a http:listener-config  * objectStore should point to a os:object-store    Although the ExtensionModel should (somehow) say this, at the DSL and Java level, the parameters will be simple Strings.","Enhancement Request",Critical,Resolved,"2017-06-15 23:25:42","2017-06-15 22:25:42",8
Mule,"Native libraries must be searched using the classLoader model","Native library finder is still searching native libraries on the application's lib folder.  As every dependency must be mavenized, native libraries must be searched on the classloader model that is built using the app's pom file","Enhancement Request",Blocker,Closed,"2017-06-15 23:21:03","2017-06-15 22:21:03",4
Mule,"Wrong DSL definition for boolean parameters","Wrong DSL definition for boolean parameters",Bug,Blocker,Closed,"2017-06-15 23:02:24","2017-06-15 22:02:24",3
Mule,"Upgrade abdera-client to 1.1.3","Upgrade abdera-client to 1.1.3",Bug,Critical,Closed,"2017-06-15 20:18:29","2017-06-15 19:18:29",1
Mule,"Xml Schema Validator filter changes mimetype","Same as SE-6155",Bug,Minor,Resolved,"2017-06-15 17:50:50","2017-06-15 16:50:50",0
Mule,"Add LICENCE file to new projects","Add LICENCE file to connector projects",Task,Blocker,Done,"2017-06-15 17:31:32","2017-06-15 16:31:32",3
Mule,"Create service to generate XSDs for an application","Currently extensions include the XSDs in the output JAR, but it won't be the case anymore soon. This is because they are generated when required in ModuleDelegatingEntityResolver.    Studio probably requires this so we should provide an API to obtain the XSDs required by an application, generating them if appropriate (in case of extensions).",Task,Critical,Done,"2017-06-15 16:14:41","2017-06-15 15:14:41",5
Mule,"AsyncDelegateMessageProcessor and ScatterGather should be processing strategy aware","Currently these routers make some assumptions about the processing strategy in use. Their behaviour should be consistent regardless of processing strategy used.",Bug,Critical,Closed,"2017-06-15 10:16:18","2017-06-15 09:16:18",4
Mule,"Upgrade DataSense dependency in tooling to 4.0.0-SNAPSHOT","Upgrade the dependency to the new version published by datasense",Task,Blocker,Done,"2017-06-15 02:31:05","2017-06-15 01:31:05",1
Mule,"Make MetadataTestCase use LazyMetadataService","Make MetadataTestCase use LazyMetadataService","Enhancement Request",Critical,Closed,"2017-06-14 21:36:47","2017-06-14 20:36:47",3
Mule,"Do not validate required parameters on Datasense resolution","Do not validate required parameters on Datasense resolution",Bug,Blocker,Closed,"2017-06-14 18:48:49","2017-06-14 17:48:49",3
Mule,"Upgrade JSCh to 0.1.54","Upgrade JSCh to 0.1.54",Bug,Major,Closed,"2017-06-14 18:34:42","2017-06-14 17:34:42",1
Mule,"Improve WSC performance","Fix WSC performance issues","Enhancement Request",Blocker,Closed,"2017-06-14 18:10:20","2017-06-14 17:10:20",8
Mule,"Ideally JMS Listener with ackMode=AUTO should do an async ack on flow completion rather than block","Ideally JMS Listener with ackMode=AUTO should do an async on flow completion rather than block","Enhancement Request","To be reviewed",Closed,"2017-06-14 18:08:09","2017-06-14 17:08:09",16
Mule,"JMS Publish does not need to use PooledConnectionProvider","This impact performance because i) it has default pool size of 5 ii) even if you increase size, it's still overhead/contention on pool","Enhancement Request",Major,Resolved,"2017-06-14 17:47:22","2017-06-14 16:47:22",5
Mule,"Define an ApplicationProvider instead of Supplier<URL> for Tooling Artifacts","This will allow to notify when an application has been deployed by Tooling (required to resolve an operation against the Runtime) and also allow later to add more specific updates on applications (when a config only has changed, etc).  As part of this task the getApplicationId should be removed.",Task,Major,Done,"2017-06-14 16:30:32","2017-06-14 15:30:32",8
Mule,"Move ArtifactDeclaration to a new API","ArtifactDeclaration should be a Tooling concept, therefore it has to be moved to an API that can be used by Tooling API and removed dependency from Mule Runtime.",Task,Major,Done,"2017-06-14 16:13:25","2017-06-14 15:13:25",8
Mule,"Allow parameter groups repeat Display Name","Allow parameter groups repeat Display Name",Bug,Minor,Resolved,"2017-06-14 16:11:07","2017-06-14 15:11:07",2
Mule,"Update JMS caching strategy defaults for decent OOTB performance","By default JMS session caching is just 1, whereas in Mule 3.8 it is unbounded and as such defined implicitly by the number of worker threads in the Flow.  Using a default of just 1 impacts OOTB performance significantly.    Also in 3.x cacheConsumers was off by default to avoid consumer leaks with publish-consume and temporary reply queues, yet it is on by default in 4.x. This needs to be tested fully with publish-consume, temp queues and load before changing this.","Enhancement Request",Major,Resolved,"2017-06-14 10:38:56","2017-06-14 09:38:56",8
Mule,"Messaging sources should not expose an ackMode=NONE","The ackMode 'NONE' has nothing to do with JMS acknowledgement mode as defined by the JMS spec and wasn't used in Mule 3 either.  In Mule 4 it is being used to define fire-and-forget behaviour and therefore switch between the 3.x (one-way) behaviour where the JMS MessageListener does not wait for the flow to complete vs. the 4.x (consistent) behaviour where the JMS MessageListener does wait for the flow to complete to ensure that any errors in the Flow, unless they are handled, result in a nack.    One of the main goals of work to remove exchange patterns and processing strategies was to remove all implicit, or flag-defined threading or fire-and-forget behaviour so that  all sources receive the response from the flow and use it to ack/nack.  The only way the user should be able to explicitly perform a fire-and-forget such that the source acks before the flow completes is via the explicit use of <async>.    Also if it did make sense to configure this on a source, which it doesn't, this flag should be available in all sources that don't use a response such as file and ftp too, otherwise it's inconsistent.    Due to this, this mode should be removed in all messaging connectors where it exists today and documentation as well as performance tests should use <async>.",Bug,"To be reviewed",Resolved,"2017-06-13 22:08:00","2017-06-13 21:08:00",3
Mule,"Implicit config does not instanciate default parameter groups","When using an implicit config, the parameter groups result in a null value instead of instanciating a Nullsafe group with the corresponding default values.    In JmsConfig we have      But the implicit config created results in:    ",Bug,Blocker,Closed,"2017-06-13 20:38:11","2017-06-13 19:38:11",8
Mule,"File/FTP read and list should not receive a MediaType as parameter","*File/FTP read and list should not receive a MediaType as parameter*    The current behavior of *MediaType* is to receive the MediaType of the Payload at the moment of executing the operation, a thing that is wrong for this operations.  In case the user want to provide a certain MediaType for the output @DataTypeParameters should be used.",Bug,Critical,Closed,"2017-06-13 19:07:01","2017-06-13 18:07:01",3
Mule,"Remove the @DataTypeParameters annotation","*@DataTypeParameters should be removed*    The Mime Type parameters outputMimeType and outputEncoding should be always generated when the return type of an operation is an Object, a StringType or a BinaryType allowing the user to override whatever mimetype is set by mule","Enhancement Request",Critical,Resolved,"2017-06-13 19:05:09","2017-06-13 18:05:09",5
Mule,"ObjectType.getFields doesn't return the fields in the order writen in the extension-model.json","In an extension with subtypes, the org.mule.metadata.api.model.ObjectType.getFields() doesn't return the fields in the order written in the extension-model.json    For simple types, this may not be an issue, but if the Object has other objects inside, the order must be exactly the same.    Today we cannot check for a model property to determine the order, so we need to use the order in which the fields are returned as the source of truth. Currently there seems to be a difference which may lead to errors when generating the UI and writting down the child elements    Check the extension:  https://github.com/mulesoft/mule-tooling-mock-connector/tree/mule-4.x/extension-with-subtypes        But iterating the fields return first the pages field, and second the id",Bug,Major,Resolved,"2017-06-13 18:34:25","2017-06-13 17:34:25",5
Mule,"Normalize extensions artifacts names","All pom names should either be Foo Module or Foo Connector.    Not Mule Foo Connector, Foo Extensions or nothing of that sort",Task,Critical,Done,"2017-06-13 17:57:37","2017-06-13 16:57:37",1
Mule,"Contention on ExceptionUtils.getCause - Upgrade commons lang to >=3.1","Mule currently uses commons lang 2, which has a contention issue doe to an unneeded synchronization on ExceptionUtils.getCause.    Use ExceptionUtils from version >=3.1, but keep the current version for backward compatibility (packages are different so that should be no problem).",Bug,Major,Closed,"2017-06-13 17:42:34","2017-06-13 16:42:34",2
Mule,"Review JMS ack modes ","Review JMS ack modes ",Task,Major,Done,"2017-06-13 17:35:05","2017-06-13 16:35:05",5
Mule,"Wrong name is generated in the DSL element name for uppercase words","When there are uppercase words in the @ParameterGroup name, the generated XML element name is not the right one. Uppercase words are being split instead of being handled as one.    Example:  ",Bug,Major,Closed,"2017-06-13 16:00:48","2017-06-13 15:00:48",3
Mule,"JMS degraded 70% in mule4 (dup of PERF-1430)","see PERF-1430",Bug,Critical,Closed,"2017-06-12 23:26:00","2017-06-12 22:26:00",1
Mule,"Artifact xml serializer not adding the core namespace by default","When generating the xml of an artifact that does not contain any core processors, the artifact xml serializer is failing to add the core namespace to the xml as well as the schema location.     xmlns=http://www.mulesoft.org/schema/mule/core    http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd ",Bug,Blocker,Closed,"2017-06-12 23:18:12","2017-06-12 22:18:12",1
Mule,"Typo on FILE:ILLEGAL_PATH error message","FILE:ILLEGAL_PATH error message contains a typo. It should read *doesn't exist.* instead of doesn't exists.      ","Enhancement Request",Minor,Closed,"2017-06-12 21:47:54","2017-06-12 20:47:54",1
Mule,"Parametrize ObjectStoreStoreRetrieveAndRemoveTestCase flows and add negative cases","ObjectStoreStoreRetrieveAndRemoveTestCase flows need to be parametrized to enable error triggering.    Error handling scenarios will involve the following operations    * file:read  * db:bulk-insert  * db:select  * os:store  ",Task,Minor,Done,"2017-06-12 22:29:58","2017-06-12 21:29:58",8
Mule,"Sdk should validate that required parameters can't receive null values","Sdk should validate that required parameters can't receive null values",Bug,Major,Closed,"2017-06-12 22:09:43","2017-06-12 21:09:43",8
Mule,"Allow MessageSource back-pressure strategy to be defined by a Extension Source","Implement SDK support for MULE-12768  Message sources need to be able to define how they want the Flow to handle back pressure.",Task,Critical,Done,"2017-06-12 21:07:20","2017-06-12 20:07:20",8
Mule,"Message sources need to be able to define how they want the Flow to handle back pressure.","Currently the way in which a Flow reacts to overload depends on i) source thread ii) processing strategy in use iii) thread pool used by processing strategy because it's logic internal to SchedulerService that determines if/when a source thread should block based on relative thread types.    Not all processing strategies start with the scheduling of tasks to a Scheduler and instead a Flow should be able to respond to back-pressure and handle it regardless of logic internal to schedulers.  The Flow can either always fail with an OVERLOAD exception on back-pressure, can always WAIT or use one of the two strategies based on the MessageSource.  - Always WAIT is not an option because some sources like HTTP, need to fail fast with a 503 response rather than block selector threads.  - Always fail with OVERLOAD exception is an option, but it means i) there is overhead associated with creating, throwing and handling the exception and error. ii) the source needs would need to implement it's on retry.  - Have the MessageSource or ExtensionMessageSource expose the desired strategy ERROR/WAIT/DROP and the Flow implement this at the point in which the Event is dispatched to the reactor stream avoiding the need to create of catch    The signature needed would be    ERROR/WAIT/DROP MessageSource.getBackPressureAction()",Task,Critical,Done,"2017-06-12 21:05:53","2017-06-12 20:05:53",8
Mule,"Use DataSense failure instead of returning null on ToolingDataSenseMetadataProvider","Instead of returnin `null`, return `failure`","Enhancement Request",Minor,Closed,"2017-06-12 18:41:30","2017-06-12 17:41:30",2
Mule,"Move to Grizzly AHC","We need to change our dependency of AHC to the Grizzly sponsored one:    Not only have they fixed some of our reported issues but it will be the supported artefact from now on. Because of the former, we'll need to remove our custom code to address the issues which includes all changes in https://github.com/mulesoft/mule/pull/4990 and https://github.com/mulesoft/mule/pull/4217.",Task,Minor,Done,"2017-06-12 18:31:21","2017-06-12 17:31:21",2
Mule,"Document File connector","Doc it",Task,Critical,Done,"2017-06-12 17:09:39","2017-06-12 16:09:39",5
Mule,"Document WSC","Doc it",Task,Critical,Done,"2017-06-12 17:08:22","2017-06-12 16:08:22",5
Mule,"Maven client must support offline mode","Maven client used internally to resolve dependencies, should be able to work offline to avoid downloading artifact and metadata from external repositories.  This is useful, for example, when running test (both unit/functional and system) to avoid having local artifacts overridden with newer versions.","Enhancement Request",Minor,Resolved,"2017-06-12 15:45:05","2017-06-12 14:45:05",0
Mule,"SimpleRetryPolicy should use Mule scheduler for retry rather than reactor internal parallel scheduler","SimpleRetryPolicy should use Mule scheduler for retry rather than reactor internal parallel scheduler.","Enhancement Request","To be reviewed",Closed,"2017-06-12 14:19:28","2017-06-12 13:19:28",4
Mule,"Compilation warnings should be logged with the corresponding level","It seems we are logging warning using the error log.        Logs should be consistent with the severity of the message.    If there are no errors or warning, nothing should be logged at all","Enhancement Request","To be reviewed",Closed,"2017-06-12 04:14:26","2017-06-12 03:14:26",0
Mule,"Create timeout on metadata requests","For data sense ",Task,Minor,Done,"2017-06-09 21:53:08","2017-06-09 20:53:08",4
Mule,"Upgrade XStream to 1.4.10","Upgrade XStream to 1.4.10",Task,Blocker,Done,"2017-06-09 21:16:51","2017-06-09 20:16:51",4
Mule,"Add Allure constants for transaction feature","Add Allure constants for choice and scatter gather stories",Task,Minor,Done,"2017-06-09 21:09:24","2017-06-09 20:09:24",1
Mule,"Http should have locally closed ","Until Grizzly replies the reported issues, we revert this change in their code.",Task,Major,Done,"2017-06-09 20:13:06","2017-06-09 19:13:06",2
Mule,"Allow MavenConfiguration to work on offline mode","There would be places where the resolution of dependencies should work offline, so we would need to add this to API.",Task,Major,Done,"2017-06-09 20:08:54","2017-06-09 19:08:54",4
Mule,"Implement async retry and back-pressure for IO scheduling in ProactorStreamProcessingStrategy","A flow should only reject messages when overloaded at the beginning of a Flow. Once a flow is processing a message, unless there is an exception or a fatal error then scheduler availability should not potentially result in flow execution failing mid-flow because this results in part-processed messages and duplicate processor invocation on retry.    ProactorProcessingStrategy has been removed because it suffers from this as implementing the back-pressure mechanism required here to mitigate this without using reactive-streams doesn't make sense.    ProactorStreamProcessingStrategy uses a back-pressure aware buffered stream and allows flow control via the configuration of maxConcurrency.  It still has an issue though, which is that due to the use of a shared IO scheduler,  while a flow may have a maxConcurrency of 10, and the shared IO pool may have 50 threads, there is still no guarantee that a RejectedExecutionException will not be thrown.  This is because as the Flow doesn't own the pool it question, it's possible that the pool is in full use by other flows.    Reactor does not support executorService back-pressure out of the box, but for our use case with shared IO pool this is required to avoid OVERLOAD mid-flow.  In order to resolve this we need to implement a non-blocking retry mechanism to retry the schedule until there is a thread free, and at the same time not request upstream until the task is successfully scheduled.","Enhancement Request",Critical,Closed,"2017-06-09 18:50:00","2017-06-09 17:50:00",4
Mule,"Test failing when mvn test is executed without install","There are many tests that pass only when mvn install is executed.  When mvn install -DskipTests is executed first and then mvn test is executed, then the following test fail:    ./mule/modules/extensions-spring-support/target/surefire-reports/org.mule.runtime.module.extension.internal.resources.ExtensionModelJsonGeneratorTestCase  ./mule/modules/extensions-spring-support/target/surefire-reports/org.mule.runtime.module.extension.internal.resources.MulePluginDescriptorGeneratorTestCase  ./mule/modules/extensions-support/target/surefire-reports/org.mule.runtime.module.extension.internal.CoreExtensionModelTestCase  ./mule/modules/extensions-support/target/surefire-reports/org.mule.runtime.module.extension.internal.loader.java.JavaDeclarationDelegateTestCase  ./mule/modules/extensions-support/target/surefire-reports/org.mule.runtime.module.extension.internal.resources.manifest.ExtensionManifestGeneratorTestCase  ",Task,Minor,Done,"2017-06-09 18:39:49","2017-06-09 17:39:49",4
Mule,"@Query text does not allow for dynamic values.","When an operation is @Query, the `@MetadataKeyId String query` text is not evaluating expressions.    This is not working only on operations annotated with Query      ",Bug,Blocker,Closed,"2017-06-09 18:04:35","2017-06-09 17:04:35",1
Mule,"Make non privileged extensions fails at compile time when using the privileged api.","Make non privileged extensions fails at compile time when using the privileged api.  Actually when a __non__ privileged extension uses some annotation from the privileged api, it wont fail at compile time but in runtime, which its kinda confusing, this is because the mechanism used in `AbstractJavaExtensionModelLoader#getPrivilegedDeclarationEnrichers` only works when the class loader of the extension is an isolated one, created by the runtime, when compiling the classloader see all available classes.  ","Enhancement Request",Major,Open,"2017-06-09 17:34:42","2017-06-09 16:34:42",5
Mule,"Unify different overload errors within a  single parent error type","- back-pressure (flow is slower than producer)  - streaming memory  - JVM OOM    This will allow some source to handle these errors equally if required (HTTP maybe) while allowing other to differentiate between them.","Enhancement Request","To be reviewed",Closed,"2017-06-09 14:44:50","2017-06-09 13:44:50",8
Mule,"one-liner set-variable returns a different object than declaring output application/java","one-liner set-variable returns a different object than if output application/java is declared.    In this case    {code:xml}          <ee:transform>              <ee:variables>                  <ee:set-variable variableName=syncTimestamp>#[payload]</ee:set-variable>              </ee:variables>          </ee:transform>  {code}    the object returned is not serializable. If instead set-variable is stated like this    {code:xml}  <ee:transform>              <ee:variables>                  <ee:set-variable variableName=syncTimestamp><![CDATA[                      %dw 2.0                      output application/java                       ---                      payload                   ]]></ee:set-variable>              </ee:variables>          </ee:transform>  {code}    object is serializable     *App details*  {code:xml}   <ee:transform>              <ee:message>                  <ee:set-payload><![CDATA[                      %dw 2.0                      output application/json                      ---                      now() as DateTime {format: yyyy-MM-dd hh:mm:ss, unit: 'miliseconds'}                   ]]></ee:set-payload>              </ee:message>          </ee:transform>          <ee:transform>              <ee:variables>                  <ee:set-variable variableName=syncTimestamp>#[payload]</ee:set-variable>              </ee:variables>          </ee:transform>          <logger level=INFO message=#['Next sync resuming from ' ++ variables.syncTimestamp]/>          <os:store key=syncTimestamp>              <os:value>                  #[syncTimestamp]              </os:value>          </os:store>  {code}      *Console output*  ",Bug,Critical,Closed,"2017-06-07 17:50:38","2017-06-07 16:50:38",2
Mule,"Update FirstSucessful  and any other routers to use errorType matchers instead of just failureExpression","Update FirstSucessful to use errorType matchers instead of just failureExpression","Enhancement Request","To be reviewed",Closed,"2017-06-08 18:28:01","2017-06-08 17:28:01",8
Mule,"Dummy implementations for Test Connectivity in core extensions","- Http: HttpRequesterProvider   - Db: DbConnectionProvider, affects all Db connections   - File: LocalFileConnectionProvider   - Email: AbstractSenderProvider","Enhancement Request","To be reviewed",Closed,"2017-06-08 18:08:40","2017-06-08 17:08:40",13
Mule,"Streaming performance revision","Review streaming implementation to understand if there are still performance issues. ",Task,Major,New,"2017-06-08 18:00:05","2017-06-08 17:00:05",16
Mule,"Revert to simpler processing strategy that supports basic back-pressure correctly and only rejects at start of Flow.","The issue affects this scenario:    {{source -> [ validate (lite pool, 8 threads) -> transform (lite pool, 8 threads) -> db:insert (io pool, 512 thread) ] }}    If the shared IO pool does not have any free threads when processing gets to db:insert, then an OVERLOAD exception will be thrown, because the small lite pool cannot and should not block and wait.    The current approach with ProactorProcessingStategy has two issues that have only really become fully understand recently:  - While OVERLOAD being thrown in MessageSource is desired and an improvement over 3.x for some connectors like HTTP, for other connectors such as JMS this is an issue because there is no way to control throughput without rolling back messages to the JMS broker.  - The fact that OVERLOAD can be thrown anywhere in a Flow and not just at the beginning causes an issue with operations potentially being executed multiple times when a Flow is under load.    The issue will revert to using the WorkQueueProcessingStrategy with IO pool and not using cpuLight or cpuIntensive pools until we have a better solution for back-pressure.",Bug,Blocker,Closed,"2017-06-08 17:58:39","2017-06-08 16:58:39",16
Mule,"Fix flaky ConnectorMessageErrorNotificationTestCase","ConnectorMessageErrorNotificationTestCase is failing locally because of a small timeout, need to increase it to avoid flakiness.",Task,Minor,Done,"2017-06-08 16:06:37","2017-06-08 15:06:37",1
Mule,"Remove TryProcessorFactoryBean","Now TryMessageProcessor is implemented as a scope and not a chain with intercepting processor up front, this factory should be able to be removed an instead inject errroHandler, processor and transactionConfig directly into TryMessageProcessor from parser.","Enhancement Request","To be reviewed",Open,"2017-06-08 10:16:02","2017-06-08 09:16:02",4
Mule,"Add HTTP client streaming test cases","Though most HTTP scenarios are tested through the HTTP extension, since it only uses non blocking requests there are currently no blocking tests cases validating the streaming functionality. We need to add them to the service to make sure users will be successful regardless of the blocking/non blocking streaming/memory configuration.",Task,Major,Done,"2017-06-08 03:20:06","2017-06-08 02:20:06",2
Mule,"Add TransactionStatus to Transaction type in Tooling API","Need to add this field for when runtime/agent can give us that information",Task,Minor,Done,"2017-06-07 21:02:38","2017-06-07 20:02:38",0
Mule,"Fix processCatch/processFinally not being invoked in non blocking path","Currently all processors that inherit from AbstractRequestResponseMessageProcessor don't have their processCatch/processFinally called in when using the non blocking code path.    The ExceptionMessageProcessor uses child contexts manually in apply(), but a more general solution is needed.    Using child contexts in applyNext() for the parent works only partially (most cases are fixed, but the error handler is invoked twice).",Task,Major,New,"2017-06-07 19:21:37","2017-06-07 18:21:37",8
Mule,"Add status parameter to mule.bat","The status parameter is absent in mule.bat but it exists in .sh script.",Bug,Minor,Closed,"2017-06-07 18:51:39","2017-06-07 17:51:39",4
Mule,"Remove registries from API","This is to:   - Remove the Agent interface which now is used by DefaultBatchManager as a hack to solve lifecycle problems   - Migrate test cases using multiple registries functionality   - Verify that multiple registries are not exposed through our API","Enhancement Request",Critical,Resolved,"2017-06-07 18:32:14","2017-06-07 17:32:14",4
Mule,"Improve Soap Connect operation declaration for the UI.","Improve Soap Connect operation declaration for the UI.    * Add placements  * Add display names  * Review Groups",Task,Critical,Done,"2017-06-07 18:02:14","2017-06-07 17:02:14",1
Mule,"Add Allure Constant for Round Robin component","Add Allure Constant for Round Robin component",Task,Minor,Done,"2017-06-07 15:43:43","2017-06-07 14:43:43",1
Mule,"Default Error Handler not consistently initialized","When calling MuleContext#getDefaultErrorHandler(), some callers properly initialize it and some others (MuleClientFlowConstruct) don't",Bug,Major,Closed,"2017-06-07 15:34:00","2017-06-07 14:34:00",2
Mule,"ExclusiveParameters are using field name instead of the alias","If you take a look at the extension model json, yo will see that the names used for the parameters don't take the alias into account.",Bug,Critical,Closed,"2017-06-07 15:20:49","2017-06-07 14:20:49",1
Mule,"Provide replacement for sprint import","The component Spring import will sease to work in Mule 4.    There is still a need to import file and other components in such a way.  One of the reasons is provide support for MUnit which requires to describe which parts of the application needs to be imported.    Bear in mind that the application config files now live in /mule of the application packages and not in the classes folder, though by default those files will not be on the classpath","Enhancement Request",Critical,Resolved,"2017-06-07 14:39:04","2017-06-07 13:39:04",0
Mule,"Provide access to container bootstrap utils to artifacts","Need to define a module for container bootstrap and provide access to the utilities classes to mule artifacts","Enhancement Request",Major,Closed,"2017-06-07 14:19:51","2017-06-07 13:19:51",1
Mule,"Transactional sources using ModuleFlowProcessingPhase should use blocking code path to invoke Flow","Because we haven't done any work to support transactions with new reactive API or migrated any of the existing execution template and interceptors for now all transactional flows should use the old/blocking code path.  Currently this is not the case.",Bug,Blocker,Closed,"2017-06-07 10:55:01","2017-06-07 09:55:01",4
Mule,"ObjectStore connector missing clear operation","ObjectStore connector is missing the clear operation which is present in the API",Bug,Major,Closed,"2017-06-06 22:56:01","2017-06-06 21:56:01",1
Mule,"Source errors should not be available in on-error-continue","Newly introduced sources error types should not be available in on-error-continue handlers since execution cannot be completed successfully. We need to make those configurations impossible.",Task,Major,Done,"2017-06-06 20:57:38","2017-06-06 19:57:38",2
Mule,"Incorrect warning message from Logger when using expression","When using the following flow:        The following message is logged to the console, even when expression are being used correctly in the logger component:    {code:none}  WARN  2017-06-06 12:19:41,889 [[MuleRuntime].cpuLight.02] org.mule.runtime.core.el.DefaultExpressionManager: Expression parsing is deprecated, regular evaluations should be used instead.  {code}",Task,Minor,Done,"2017-06-06 17:53:20","2017-06-06 16:53:20",4
Mule,"Expression language does not handle context properties","The {{p()}} DW function is not working in 4.0 so you are not able to retrieve system properties.    Sample flow:      Start Mule with {{./bin/mule -M-Dmule.simpleLog=true}} and see the exception:    {code:none}  WARN  2017-06-06 12:19:41,889 [[MuleRuntime].cpuLight.02] org.mule.runtime.core.el.DefaultExpressionManager: Expression parsing is deprecated, regular evaluations should be used instead.  ERROR 2017-06-06 12:19:43,243 [[MuleRuntime].cpuLight.02] org.mule.runtime.core.exception.OnErrorPropagateHandler:  ********************************************************************************  Message               : Script 'p('aRandomProperty') ' has errors:   Unable to resolve reference of p. at 1 : 1 evaluating expression: #[p('aRandomProperty')]..  Payload               : null  Payload Type          : null  FlowStack             : at someFlow(someFlow/processors/0 @ default:null:15)  Element               : someFlow/processors/0 @ default:null:15  Element XML           : <logger level=INFO message=#[p('aRandomProperty')]></logger>  --------------------------------------------------------------------------------  Root Exception stack trace:  org.mule.runtime.api.el.ExpressionExecutionException: Script 'p('aRandomProperty') ' has errors:   Unable to resolve reference of p. at 1 : 1   at org.mule.weave.v2.el.WeaveExpressionLanguage.doEvaluate(WeaveExpressionLanguage.scala:111)   at org.mule.weave.v2.el.WeaveExpressionLanguage.evaluate(WeaveExpressionLanguage.scala:79)   at org.mule.runtime.core.el.DataWeaveExpressionLanguageAdaptor.lambda$evaluate$3(DataWeaveExpressionLanguageAdaptor.java:131)   at org.mule.runtime.core.el.DataWeaveExpressionLanguageAdaptor.sanitizeAndEvaluate(DataWeaveExpressionLanguageAdaptor.java:177)   at org.mule.runtime.core.el.DataWeaveExpressionLanguageAdaptor.evaluate(DataWeaveExpressionLanguageAdaptor.java:131)   at org.mule.runtime.core.el.ExpressionLanguageAdaptorHandler.evaluate(ExpressionLanguageAdaptorHandler.java:99)   at org.mule.runtime.core.el.DefaultExpressionManager.evaluate(DefaultExpressionManager.java:131)   at org.mule.runtime.core.el.DefaultExpressionManager.evaluate(DefaultExpressionManager.java:121)   at org.mule.runtime.core.el.DefaultExpressionManager.parse(DefaultExpressionManager.java:235)   at org.mule.runtime.core.api.processor.LoggerMessageProcessor.log(LoggerMessageProcessor.java:76)   at org.mule.runtime.core.api.processor.LoggerMessageProcessor.lambda$process$0(LoggerMessageProcessor.java:62)   at org.mule.runtime.core.util.func.CheckedFunction.apply(CheckedFunction.java:19)   at org.mule.runtime.core.api.util.StreamingUtils$1.applyChecked(StreamingUtils.java:51)   at org.mule.runtime.core.api.util.StreamingUtils$1.applyChecked(StreamingUtils.java:47)   at org.mule.runtime.core.util.func.CheckedFunction.apply(CheckedFunction.java:19)   at org.mule.runtime.core.api.util.StreamingUtils.withCursoredEvent(StreamingUtils.java:71)   at org.mule.runtime.core.api.processor.LoggerMessageProcessor.process(LoggerMessageProcessor.java:61)   at org.mule.runtime.core.api.processor.Processor.lambda$apply$0(Processor.java:53)   at org.mule.runtime.core.util.func.CheckedFunction.apply(CheckedFunction.java:19)   at org.mule.runtime.core.api.rx.Exceptions.lambda$checkedFunction$3(Exceptions.java:87)   at org.mule.runtime.core.internal.util.rx.Operators.lambda$nullSafeMap$0(Operators.java:37)   at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:141)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onNext(FluxPeekFuseable.java:428)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onNext(FluxPeekFuseable.java:428)   at reactor.core.publisher.FluxJust$WeakScalarSubscription.request(FluxJust.java:90)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.request(FluxPeekFuseable.java:371)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.request(FluxPeekFuseable.java:371)   at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:208)   at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1482)   at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:67)   at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:126)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onSubscribe(FluxPeekFuseable.java:404)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onSubscribe(FluxPeekFuseable.java:404)   at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:67)   at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:82)   at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:82)   at reactor.core.publisher.FluxHandleFuseable.subscribe(FluxHandleFuseable.java:64)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:416)   at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:242)   at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:272)   at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:782)   at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:72)   at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:72)   at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)   at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:173)   at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:173)   at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:173)   at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:72)   at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:150)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onNext(FluxPeekFuseable.java:428)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onNext(FluxPeekFuseable.java:428)   at reactor.core.publisher.FluxJust$WeakScalarSubscription.request(FluxJust.java:90)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.request(FluxPeekFuseable.java:371)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.request(FluxPeekFuseable.java:371)   at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:208)   at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1482)   at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:67)   at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:126)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onSubscribe(FluxPeekFuseable.java:404)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onSubscribe(FluxPeekFuseable.java:404)   at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:67)   at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:82)   at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:82)   at reactor.core.publisher.FluxHandleFuseable.subscribe(FluxHandleFuseable.java:64)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:416)   at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:212)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:164)   at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:164)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:164)   at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:67)   at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)   at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)   at reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)   at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)   at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:117)   at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:117)   at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:117)   at reactor.core.publisher.FluxHandle.subscribe(FluxHandle.java:49)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:416)   at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:242)   at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:272)   at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:782)   at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:72)   at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:72)   at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)   at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:173)   at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:173)   at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:173)   at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:72)   at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:150)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onNext(FluxPeekFuseable.java:428)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onNext(FluxPeekFuseable.java:428)   at reactor.core.publisher.FluxJust$WeakScalarSubscription.request(FluxJust.java:90)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.request(FluxPeekFuseable.java:371)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.request(FluxPeekFuseable.java:371)   at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.request(FluxHandleFuseable.java:208)   at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1482)   at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:67)   at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onSubscribe(FluxHandleFuseable.java:126)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onSubscribe(FluxPeekFuseable.java:404)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onSubscribe(FluxPeekFuseable.java:404)   at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:67)   at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:82)   at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:82)   at reactor.core.publisher.FluxHandleFuseable.subscribe(FluxHandleFuseable.java:64)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:416)   at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:212)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:164)   at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:164)   at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:67)   at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)   at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)   at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:117)   at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:117)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:82)   at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:46)   at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:416)   at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:236)   at reactor.core.publisher.FluxPublishOn$PublishOnSubscriber.runBackfused(FluxPublishOn.java:431)   at reactor.core.publisher.FluxPublishOn$PublishOnSubscriber.run(FluxPublishOn.java:472)   at reactor.core.scheduler.ExecutorServiceScheduler$ExecutorServiceSchedulerRunnable.run(ExecutorServiceScheduler.java:325)   at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)   at java.util.concurrent.FutureTask.run(FutureTask.java:266)   at org.mule.service.scheduler.internal.AbstractRunnableFutureDecorator.doRun(AbstractRunnableFutureDecorator.java:88)   at org.mule.service.scheduler.internal.RunnableFutureDecorator.run(RunnableFutureDecorator.java:56)   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)   at java.lang.Thread.run(Thread.java:748)    {code}s",Bug,Critical,Closed,"2017-06-06 16:26:29","2017-06-06 15:26:29",0
Mule,"Add the possibility to provide a Charset when consuming a stream from the IOUtils","In the debugger, when generating a readable payload from an input stream, we take into account the charset configured by the user.    We need to add in org.mule.runtime.core.api.util.IOUtils a method to generate a String form a stream providing a java.nio.charset.Charset  ","Enhancement Request",Minor,Closed,"2017-06-06 16:20:09","2017-06-06 15:20:09",1
Mule,"Change log level for maven client","When deploying an application, the logs are full of maven client warnings that only generate noise to the users and give you the impression that the deployment is failing.    We should change the log level of the component, or redirect it to another log and not the console.    {code}","Enhancement Request",Major,Resolved,"2017-06-06 15:54:58","2017-06-06 14:54:58",2
Mule,"Missing @OnTerminate error message doesn't help you solve it","When you have an extension with @OnSurccess or @OnError, users are forced to have an @OnTerminate annotated method.    But if the users have no @OnTerminate method, the error reported doesn't help you as it simply states:    Callback could mean anything, especially to new users.    It should be straight forward and tell you that you have @OnSuccess and @OnError annotated methods and that to solve it you ned to add an @OnTerminate annotated method.","Enhancement Request",Major,Closed,"2017-06-06 15:04:31","2017-06-06 14:04:31",1
Mule,"Add check to mule module maven plugin to ensure that only api packages exported ","Add a way to ensure that only packages containing the pacakge api are exported from mule container modules","Enhancement Request","To be reviewed",Open,"2017-06-06 14:55:28","2017-06-06 13:55:28",2
Mule,"Disable support for using pom repositories on Mule Maven Client when resolving dependencies ","It was a nice idea at first to also allow Mule Maven Client to support taking into account remote repositories declared on pom.xml files. The drawback is that it is not taking only the ones in the pom.xml for the artifact being resolved but Aether also reads all the remote repositories for dependencies of that pom.xml, therefore it ends up a lot of transfer errors as those pom.xml has different serverIds for same repositories (in Mule cases) or external repositories.  When all of these repositories are public there is not an issue but when dealing with secure repositories it ends up a lot of requests and also failures to those servers when resolving dependencies (as Maven does when you have a similar environment and do a mvn $goal).    Lesson learned, enabling this feature may end up a not wanted behavior when resolving dependencies/artifacts either in Mule deployment as other clients of the Mule Maven Client (Tooling). It is better to have more control over the remote repositories that should be used to fetch dependencies/metadata.    The way remote repositories are handled, should be:  * If no explicit remoteRepositories is set to MavenConfiguration it will take into account those from the settings (merged from global and user)  * Remote repositories on pom.xml files are ignored (this cannot be changed)  * If no settings are provided the remote repositories from MavenConfiguration are used.  * If settings is provided with only servers section (credentials) and explicit remote repositories on MavenConfiguration don't have authentication set it will set (if defined) the one from servers sections on settings  * In case if both settings and explicit remote repositories are provided through MavenConfiguration the merge of them should consider serverId to find duplicates and consider the ones on MavenConfiguration to have priority over the ones on settings. By priority it means that if there are two remote repositories with same id but different URLs the one from MavenConfiguration will be used and the other discarded.  * If not pom.xml repositories are not ignored the default maven repository would be also added to the list of remote repositories, therefore central would need to be defined by users in settings.xml or explicitly through the MavenConfiguration (if needed)",Task,Critical,Done,"2017-06-06 14:24:16","2017-06-06 13:24:16",4
Mule,"TransactionalInterceptingMessageProcessor should not perform lifecycle on shared default error handler","TransactionalInterceptingMessageProcessor does this is no error-handler is defined,        if (messagingExceptionHandler == null) {        messagingExceptionHandler = muleContext.getDefaultErrorHandler();      }    It then applies lifecycle to the messagingExceptionHandler regardless of it is is shared default instance of not which is incorrect.",Bug,"To be reviewed",Closed,"2017-06-06 13:24:20","2017-06-06 12:24:20",4
Mule,"Try should support non-blocking execution when it has no TX config","Try does not support non-blocking execution when it has no TX config.  ",Bug,Critical,Closed,"2017-06-06 12:38:49","2017-06-06 11:38:49",4
Mule,"Mule Maven Client is locking pom files","When reading pom files, the mule-maven-client is not closing the FileReader, creating a resource leak.  The issue is located at method org.mule.maven.client.internal.util.MavenUtils#getPomModelFolder",Bug,Major,Closed,"2017-06-06 03:38:34","2017-06-06 02:38:34",0
Mule,"Mule Maven Client is locking jar files","When getting the URLs from inside a jar file, the mule-maven-client is not closing the JarFile, creating a resource leak.  The issue is located at method org.mule.maven.client.internal.util.FileUtils#getUrlsWithinJar",Bug,Major,Closed,"2017-06-05 23:29:27","2017-06-05 22:29:27",0
Mule,"HTTP parsing should set correct mime type","*HTTP MultiPartPayload/Map should be application/java instead of multipart/x-form-url-encoded *  Nowadays if the HTTP Listener receives a HTTP Request MultiPart/Form and {{parseRequest=true}} this will return a {{MultiPartPayload}} or {{Map}} which contains each part of the request.  The problem comes that this is injected in the payload with the {{multipart/*}}/{{application/x-form-url-encoded}} mimeType, which is unhandable by DW.",Bug,Blocker,Closed,"2017-06-05 21:48:45","2017-06-05 20:48:45",4
Mule,"SDK: same name parameters of different types should not be allowed.","When an operation has 2 parameter groups with parameters that have the same name but its type is different the SDK should trow an error at compile time since this is not going to work because of the how the parsers are made.    For example having an operation Ope1 with this structure:    * Ope1  ** ParamGroup1  *** @Content String param1  *** anotherParam   ** ParamGroup2  *** Int param1     param1 in the ParamGroup1 should clash with param1 in ParamGroup2    Ale you know what to do. ",Bug,Critical,Closed,"2017-06-05 21:02:27","2017-06-05 20:02:27",5
Mule,"SOAPService should consume and expose the MediaType of the downloaded attachments","*SOAPService should consume and expose the MediaType of the downloaded attachments*    * Juani, you know what to do","Enhancement Request",Critical,Resolved,"2017-06-05 20:15:40","2017-06-05 19:15:40",5
Mule,"Extensions maven plugin fails on uber reactor when building the first connector","When building the uber reactor project, the first connector to be built fails with the error:        This seems to be related to a problem in maven when a project uses a plugin that depends on a module of the same reactor. This is the case for connectors -> mule-extensions-maven-plugin -> mule-api    This is reported in maven as https://issues.apache.org/jira/browse/MNG-5787 (the problem persists with maven 3.3.9 though)",Bug,Major,Closed,"2017-06-05 20:08:23","2017-06-05 19:08:23",2
Mule,"Make WSC DW and MediaType friendly","Make WSC DW and MediaType friendly",Task,Blocker,Done,"2017-06-05 14:43:22","2017-06-05 13:43:22",5
Mule,"Remove redundant mule module files from extensions","Sockets and validation extensions contain mule-module.properties files which are not used",Task,Minor,Done,"2017-06-05 00:19:35","2017-06-04 23:19:35",0
Mule,"Review the need for system property mule.objectstore.user.transient","The system property mule.objectstore.user.transient is used in DefaultObjectStoreFactoryBean#createDefaultUserObjectStore().    Check the need for it and either remove or document it.",Task,Major,Done,"2017-06-05 00:01:39","2017-06-04 23:01:39",1
Mule,"Make Email DW and MediaType friendly","*Make Email DW and MediaType friendly*    This implies:  * Change how Email consumes the body and attachments when sending emails, starting consuming TypedValue<> to be able to infer the MediaType of each content.  * Change how Email list emails, exposing automatically the MediaType of each body and attachments that receive.",Task,Blocker,Done,"2017-06-04 00:44:20","2017-06-03 23:44:20",8
Mule,"ErrorHandler model should be a Router instead of a Scope","Currently, the errorHandler component is defined as a Scope in Mule's ExtensionModel, but a Router fits better it's definition, since the onError* would act as Routes.",Bug,Critical,Resolved,"2017-06-02 22:33:24","2017-06-02 21:33:24",2
Mule,"Add test cases for Interception API with Smart Connectors","We need to have coverage of Interception API interacting with Smart Connectors.    As part of this, the test smart connectors need to be included in the reactor of *mule-integration-tests*",Task,"To be reviewed",Done,"2017-06-02 21:57:59","2017-06-02 20:57:59",0
Mule,"Server Notifications should expose SecurityContext/Authentication","Gateway need access to SecurityContext/Authentication from Server Notifications to be able to send information to analytics",Task,"To be reviewed",Done,"2017-06-02 21:38:32","2017-06-02 20:38:32",0
Mule,"Enable Server Notifications for HTTP Listener","Right now, we can not obtain Response attributes by listening to any Server Notifications. In order to do that, we need to implement firing notifications from the HTTP Listener",Task,"To be reviewed",New,"2017-06-02 21:27:38","2017-06-02 20:27:38",0
Mule,"SDK fails to create Parameter Group if this contains a parameters of TypedValue<T> and a T","*SDK fails to create Parameter Group if this contains a parameters of TypedValue<T> and a T*    * if a Parameter Group has the following parameters:    The SDK will fail to build this construction due that {{val2}} will use a ValueResolver to create {{TypedValue<InputStream>}} instances or vice versa.    * The origin of this problems surges in {{ExtensionObjectTypeHandler}}, where if a TypedValue field is found, the handler will unwrap the generic type and set the field type of that generic type, example: {{TypedValue<String> -> String}}, and then in the SDK to know that this field was originally a {{TypedValue}} to be able to build it correctly, the {{TypedValueTypeAnnotation}} to know that that field is not a {{String}}, but a {{TypedValue<String>}}.  * Due that JavaTypeLoader has a {{ParsingContext}} where it caches temporally the already parsed Types, if a {{TypedValue<String>}} is parsed, a String type will be stored with the  {{TypedValueTypeAnnotation}}, the if the plain String parameter gets parsed, the already cached builder will be taken, (the one with the annotatioin)",Bug,Critical,Closed,"2017-06-01 21:19:22","2017-06-01 20:19:22",5
Mule,"Fix cases when an exception occurs in an error handler","Currently when an exception is thrown from an error handler, it's not propagated even if wrapped inside another error handler.    Also, in the case of interceptors such as CXF, as the event is not correctly preserved (it's null) the final error response isn't a valid SOAP message (the XML tags aren't inserted around the original error description).",Bug,Critical,Resolved,"2017-06-01 17:28:53","2017-06-01 16:28:53",8
Mule,"WSC is not providing a way to pass transport headers","WSC is not providing a way to pass transport headers",Bug,Critical,Resolved,"2017-06-01 15:29:24","2017-06-01 14:29:24",3
Mule,"Fix ConfigurationBasedDslElementModelSerializerTestCase","Fix ConfigurationBasedDslElementModelSerializerTestCase",Bug,Blocker,Closed,"2017-05-31 22:13:34","2017-05-31 21:13:34",1
Mule,"Missing identifier in ComponentPath for OnError components ","The component path for an error handler with an on-error child is missing the `onError` identifier",Bug,Critical,Resolved,"2017-05-31 21:04:17","2017-05-31 20:04:17",2
Mule,"Fix SOAP Connect message builder to match WSC builder","Fix SOAP Connect message builder to match WSC builder.    - Add wrapper element with inline group  - Rename `request` to `body`",Bug,Blocker,Closed,"2017-05-31 20:20:06","2017-05-31 19:20:06",5
Mule,"Fix ArtifactSerializationServiceTestCase tests","ArtifactSerializationTestCase tests for json have been failing for many builds",Task,Major,Done,"2017-05-31 17:51:23","2017-05-31 16:51:23",1
Mule,"ResourceOwnerId should be optional","The resourceOwnerId parameter in the OAuth connection providers is set as required but should be optional and have no default.    Then, when the OauthConncetionProvider tries to use it to fetch the access token from the Dancer, it should consider the possibility of that parameter being null.",Bug,Critical,Closed,"2017-05-31 17:34:18","2017-05-31 16:34:18",3
Mule,"Resolve extension models internally in tooling client services","Resolve extension models internally as it's being done in the datasense service so tooling can stop depending on extension models to consume tooling client services. ",Task,Critical,Done,"2017-05-31 16:30:56","2017-05-31 15:30:56",8
Mule,"Descriptions are not populated in the extension model","The description for some parameters is not being populated.    For example in the e-mail connector, several parameters and operations have no description.     ",Bug,Critical,Closed,"2017-05-31 16:04:47","2017-05-31 15:04:47",5
Mule,"Improve application URL supplier calls in DataSense requests","For every datasense request, the supplier is being call 3 times.     1 for extensions calculations,   1 for datasense static fetching,   1 for datasense dynamic    We need to reduce the amount of times that we are fetching the zip. ",Task,Major,Done,"2017-05-30 22:37:46","2017-05-30 21:37:46",2
Mule,"Fix flaky ExceptionHandlingTestCase","The problem is between the persistent object store and the deserialization mechanism.",Task,Major,Done,"2017-05-30 19:54:31","2017-05-30 18:54:31",0
Mule,"Extensions resolution should fetch transitive dependencies","When an application have http or ftp as dependencies it is not solving sockets when fetching extensions within tooling client or deploying an application.","Enhancement Request",Major,Closed,"2017-05-30 18:59:46","2017-05-30 17:59:46",8
Mule,"Deployment should also consider remote repositories defined in pom.xml","There will be cases where applications packaged on lightweight mode would need to download dependencies from remote repositories that are declared in the same pom.xml. This is a best practice when working with Maven and it should be handled by deployment module.",Task,Major,Done,"2017-05-30 17:55:08","2017-05-30 16:55:08",8
Mule,"Add Allure constants for choice and scatter gather stories","Add Allure constants for choice and scatter gather stories",Task,Minor,Done,"2017-05-30 17:03:50","2017-05-30 16:03:50",1
Mule,"Use standard license header mechanism in mule-api","Use standard license header mechanism in mule-api as it's done in mule.",Task,Minor,Done,"2017-05-30 15:51:50","2017-05-30 14:51:50",1
Mule,"Remove support for extension-model.json generation inside plugins","We no longer need to support this so we have to remove that functionality that it's also breaking the maven reactor.",Task,Critical,New,"2017-05-30 14:29:39","2017-05-30 13:29:39",2
Mule,"If @Errors annotation is not defined, the extension doesn't get enriched by any kind of error","*If @Errors annotation is not defined, the extension doesn't get enriched by any error*    * Nowadays the extension can be enriched automatically by several kinds of errors types automatically, e.g., CONNECTIVITY, SOURCE, etc.  * But those are not being populated if the {{@Errors}} annotation is not used.",Bug,Critical,Closed,"2017-05-30 13:24:47","2017-05-30 12:24:47",3
Mule,"Include information about ComponentLocation on MessageHistory","In order to provide more information about transactions on MessageHistory the componentLocation from Mule should be provided too.",Task,Major,Done,"2017-05-30 03:22:10","2017-05-30 02:22:10",4
Mule,"Maven Configuration is not taken from the tooling client","While using the org.mule.tooling.client.internal.DefaultToolingRuntimeClientBuilder , when users override the maven configuration, this information is not propagated to the org.mule.tooling.client.api.extension.ExtensionModelService, making it impossible to solve extensions that don't use the default tooling client configuration",Bug,Blocker,Closed,"2017-05-29 21:01:51","2017-05-29 20:01:51",2
Mule,"Add a getNamedParts() method in MultiPartPayload","MultiPartPayload currently has a getPart(String partName), but that is not usable from within DataWeave.    DataWeave needs a proper getter method that returns a Map.",Bug,Major,Closed,"2017-05-29 20:56:27","2017-05-29 19:56:27",2
Mule,"Create BOM for EE and use it on Tooling ","Currently, we are using a POM on tooling side that includes all modules. We should have a differentiated POM for EE version (so eventually CE version of Tooling will run on a CE version of the Agent)",Task,Major,Done,"2017-05-29 18:34:15","2017-05-29 17:34:15",8
Mule,"Cannot have OAuth multitenancy in the same ObjectStore",(insert),Bug,Blocker,Closed,"2017-05-29 16:39:40","2017-05-29 15:39:40",3
Mule,"Rename scheduler components","Rename `scheduling-strategy` inner child element to reduce verbosity and avoid redundancy.    `fixed-frequency-scheduler` -> `fixed-frequency`  `cron-scheduler` -> `cron`",Task,Critical,Done,"2017-05-29 15:45:19","2017-05-29 14:45:19",2
Mule,"Make soap connect EE ","Make soap connect EE ",Task,Major,Done,"2017-05-29 15:41:10","2017-05-29 14:41:10",5
Mule,"Remove evaluateExpression from notification","After Studio moves to the interception API, we should remove our method MessageProcessorNotification#evaluateExpression (and corresponding one in EnrichedNotificationInfo).",Task,Major,Done,"2017-05-29 15:40:17","2017-05-29 14:40:17",1
Mule,"Connectivity test for SFTP doesn't show actual error","Connectivity test for SFTP doesn't show the resolved path where it is trying to connect to.  You know that the connectivity test failed, but in no place of the stacktrace you can see which is the actual path trying to be connected. This means that if the path has placeholders or expressions, you are not able to properly troubleshoot the error.    ",Bug,Major,Closed,"2017-05-27 02:54:47","2017-05-27 01:54:47",5
Mule,"ExtensionModel declarer allows invalid XML naming","It's possible to use the HasOperationDeclarer (or any other declarer if I'm not mistaken) to create invalid XML components from the ExtensionModel by parameterizing wrong values, such as    `declarer.withOperation(this is not << XML valid and yet works);`,     Ideally, the API should either blow up throwing an exception or hypenizing the String (if possible, as parameterizing empty string is also invalid).  Despite this issue is hard to reproduce from a Java connector, if @Alias is used as `@Alias(jaja <> le23 23 23 ` it will end up in wrong XML namign operations, configurations, parameters, etc.,     ",Bug,Minor,Closed,"2017-05-27 02:16:20","2017-05-27 01:16:20",1
Mule,"Avoid exposing API config parameter","Need to comment out the API config stuff so that's it's not visible until we do it.",Task,Blocker,Done,"2017-05-26 20:37:02","2017-05-26 19:37:02",1
Mule,"Fix error types HTTP hierarchy to be consistent with core error types","We need to review the error type hierarchy in HTTP since there are, for instance, security error types not related to the core security error type hierarchy.",Bug,Critical,Closed,"2017-05-26 20:21:12","2017-05-26 19:21:12",4
Mule,"OAuth service must support multitenancy between the same ObjectStore","It is needed to hold tokens from different tenants on the same object store. It is needed for the OAuth service to optionally allow specifying prefix (and maybe even suffix) for the resorceOwnerId.","Enhancement Request",Blocker,Closed,"2017-05-26 20:12:50","2017-05-26 19:12:50",2
Mule,"Support patching module jars","On current version of Mule, the container fails do start when it detects two modules with the same name.  This check make us unable to deploy patches jars for modules.  While a full patching solution is needed, we need at least a quick workaround to make this possible.",Task,Blocker,Done,"2017-05-26 20:11:10","2017-05-26 19:11:10",1
Mule,"Mule should not export packages from reactor","Reactor should not be exposed on Mule API. We must find a way to isolate our code from it, so we can change the implementation without impacting the API clients.",Task,"To be reviewed",Done,"2017-05-26 19:46:10","2017-05-26 18:46:10",4
Mule,"Every exported Mule package must contain api ","All the packages exported on the Mule container must contain the api package.  Currently, there are packages that do not say api. For example org.mule.runtime.module.artifact.  This task is to fix only all the packages that are intended to be exported. Some internal packages are begin exported now, but just temporarily, so those packages will be manage in a different issue.",Task,Critical,Done,"2017-05-26 19:42:02","2017-05-26 18:42:02",16
Mule,"Remove com.google.common from exported packages","Core and other modules are exporting many packages from com.google.common.  Those packages cannot be part of the API.  Code must be updated to hide those dependencies in the container.",Task,Critical,Done,"2017-05-26 19:32:13","2017-05-26 18:32:13",4
Mule,"Remove org.apache.commons from exported packages","Core module is exporting many packages from org.apache.commons, mainly from Utils classes that we are extending in Mule.  Most of the functionality is used only inside the container, what is used externally (in plugins for example) is the most common utilities, like StringUtils.isEmpty and stuff like that.  The proposal to hide those packages is to provide only a subset of the utility classes in the API. Those classes should not extend/expose apache commons classes. The utilities subset must contain only the most used utility methods.  When an artifact (service/plugin/etc) requires an utility method that is not part of the API, that artifact must add the required third party library. (ie: apache commons)",Task,Critical,Done,"2017-05-26 19:28:55","2017-05-26 18:28:55",4
Mule,"Improved HTTP layout","Based on user studies which we've done, we need to improve the layout of the HTTP connector as people were not able to get successful with it.     Details TBD ","Enhancement Request",Critical,Closed,"2017-05-11 18:26:35","2017-05-11 17:26:35",0
Mule,"Allowing non top level elements to have a name parameter","Until now, only top level elements were allowed to have a name parameter. So, a check needed to be made to ensure that that restriction was fulfilled.   Now, that check needs to be removed","Enhancement Request",Minor,Closed,"2017-05-26 14:33:14","2017-05-26 13:33:14",2
Mule,"Optimize so that use of of #[payload] expression does not go to EL implementation.","Optimize so that use of of #[payload] expression does not go to EL implementation.","Enhancement Request",Critical,Closed,"2017-05-26 10:20:06","2017-05-26 09:20:06",4
Mule,"Tooling client must dispose unused apps after certain threshold","If tooling client connection fails (for example), the application could still be up in the agent side, indefinitely. ",Bug,Major,Closed,"2017-05-25 16:00:30","2017-05-25 15:00:30",2
Mule,"HTTP Listener: cannot create listeners for paths when one starts with the other","Attempting to create a pair of http listeners like this:        I get an error like    ",Bug,Major,Closed,"2017-05-25 00:31:40","2017-05-24 23:31:40",8
Mule,"Remove YourKit libraries and scripts","Decide if we will continue shipping YourKit libraries in the lib/native folder, and upgrade to a newer version that supports the latest JDKs and features of YourKit.  The current version that we are shipping was released in 2010 and meant for Java 6.    Links:    Version history - https://www.yourkit.com/download/older.html  Compatibility - https://www.yourkit.com/docs/kb/tech_req.jsp    UPDATE: We finally decided to remove the yourkit libraries ",Task,Major,Done,"2017-04-12 18:52:51","2017-04-12 17:52:51",1
Mule,"Support Sources that send asynchronous responses","Some sources such as <http:listener> send responses asynchronously. When the response content is an InputStream and repeatable streams are enabled, there's a race condition betweent the runtime that closes the CursorStreamProvider (mainly because it doesn't know that http:listner is still asynchronously consuming the stream) and the listener which is actually replying.    To do so, we need to support asynchronous response sources, so that the event is not completed until the source has actually finished sending the response.","Enhancement Request",Critical,Closed,"2017-05-24 21:52:00","2017-05-24 20:52:00",8
Mule,"Allow HTTP streaming to be turned off","Since the old default HTTP behaviour was to not stream responses but download the whole thing into memory, users may have been leaving those responses somewhere without consuming them. This is no longer possible since the response buffer would fill and worker threads would block waiting for space there to write the incoming response chunks. Thus we need to allow users to turn streaming off for HTTP responses.",Task,Blocker,Done,"2017-05-24 20:49:27","2017-05-24 19:49:27",4
Mule,"Create a StreamingHelper for operations","We need to provide tools for handling repeatable streaming resources which are embedded into structures of arbitrary complexity","Enhancement Request",Critical,Closed,"2017-05-24 17:34:17","2017-05-24 16:34:17",5
Mule,"Tooling Client Integration test for email ObjectStreams","After MULE-12513 is fixed, finish ignored test in TryItTestCase",Task,"To be reviewed",Done,"2017-05-24 15:48:36","2017-05-24 14:48:36",2
Mule,"Add kind to Source and ErrorHandlers in ExtensionModel serialization","Add kind to Source and ErrorHandlers in ExtensionModel serialization.  Currently, not all the ComponentModels are serialized with its kind, it would be better to declare the explicitly even if it's more verbose.","Enhancement Request",Critical,Closed,"2017-05-24 15:38:33","2017-05-24 14:38:33",3
Mule,"Extract embedded-api to its own repo","The embedded API is versioned differently than the impl, so it must be in its own repo to allow for an independent release lifecycle.",Task,Blocker,Done,"2017-05-24 14:50:50","2017-05-24 13:50:50",2
Mule,"Wrong ExtensionModel generation when adding errors to an operation","See test ExtensionModelJsonGeneratorTestCase. When validating the generated extension model for the marvel extension there are additional error information added to operations unrelated to the one with error types.",Bug,Major,Closed,"2017-05-23 21:58:49","2017-05-23 20:58:49",3
Mule,"Fix tests ignored in MULE-11482","Some tests were ignored with the promise of a later fix but we lost track of those TODOs. We need to fix them or delete them if they are no longer relevant.",Task,Critical,Done,"2017-05-23 20:32:39","2017-05-23 19:32:39",2
Mule,"Performance improvements on DW integration","Echo scenario is a 6% faster with mel instead of default dw.",Epic,Major,Done,"2017-05-23 19:52:49","2017-05-23 18:52:49",0
Mule,"Automate the changes needed in the release in the spring.schemas files","For example in the case of             it should be changed to     ",Task,"To be reviewed",New,"2017-05-23 19:49:00","2017-05-23 18:49:00",2
Mule,"Upgrade Ant to 1.9.6","Analyze if we need to keep Ant in the distro and if not, remove the library.  Else, update to 1.9.6",Task,Major,Done,"2016-06-13 18:14:54","2016-06-13 17:14:54",1
Mule,"Extract IT tests that depend on Mule Runtime in the Mule-Extensions-Maven-Plugin","Extract IT tests that depend on Mule Runtime in the Mule-Extensions-Maven-Plugin (which is built later in the release process) in a new module added by a new profile.",Task,Minor,New,"2017-05-23 18:56:50","2017-05-23 17:56:50",4
Mule,"ClassNotFoundException on loading extensions when resolving DataSense","When asking to resolve datasense, Mozart provides extension models that tooling client have to load and walk-through. During this time, it try to load a class defined within the extension models that is not loaded in the classloader. ",Bug,Critical,Closed,"2017-05-23 17:51:05","2017-05-23 16:51:05",4
Mule,"Reduce logging level of certain components","Mule team, can we move the following messages to debug level:  * AbstractDataTypeBuilderFactory  * SpringXmlConfigurationBuilder","Enhancement Request",Minor,Closed,"2017-05-23 16:46:27","2017-05-23 15:46:27",1
Mule,"Improve datasense performance","Currently the whole cycle of executing datasense from studio is taking too long. We need to profile a little bit to improve the experience  ",Task,Critical,Done,"2017-05-23 14:34:13","2017-05-23 13:34:13",8
Mule,"Improve performance of ObjectToString transformer","The approach used to convert InputStream to String in 4.0.0 has been changed and is less performant than in 3.x.  Revert this change and add micro-benchmark to confirm.",Bug,Major,Closed,"2017-05-23 13:25:23","2017-05-23 12:25:23",2
Mule,"BlockingTransferInputStream should implement read(byte[] b, int off, int len)","BlockingTransferInputStream should implement read(byte[] b, int off, int len)",Bug,Major,Closed,"2017-05-23 09:25:34","2017-05-23 08:25:34",2
Mule,"Create dynamic smart connector POC","Create a prototype where a smart connector is created dynamically from, for example, a set of credentials so that it will be bound to those credentials.    Ideally, calling such generation from two set of credentials will end up in two connectors with a different set of catalogs.",Task,"To be reviewed",New,"2017-05-23 03:14:49","2017-05-23 02:14:49",0
Mule,"Upgrade opensaml to 2.6.4","Upgrade opensaml to 2.6.4 in the SOAP service.",Task,Major,Done,"2017-05-23 02:23:26","2017-05-23 01:23:26",2
Mule,"Fix commons-beanutils vulnerability","commons-beanutils vulnerability needs to be fixed in all components calling     org.apache.commons.beanutils.PropertyUtils.getProperty()    This can be fixed by using a specialized instance of the BeanUtilsBean class as described in the following articles:    [http://commons.apache.org/proper/commons-beanutils/javadocs/v1.9.2/RELEASE-NOTES.txt]    [https://issues.apache.org/jira/browse/BEANUTILS-463]     ",Task,Blocker,Done,"2017-05-23 02:03:56","2017-05-23 01:03:56",4
Mule,"Upgrade log4j2 to 2.8.2","Upgrade log4j2 to 2.8.2",Task,Blocker,Done,"2017-05-22 19:15:55","2017-05-22 18:15:55",1
Mule,"Configure Garbage Collection parameters for JDK 8 in Mule 4","Starting with Mule 4.0, we only support Java 8 for running Mule.  Garbage collection configuration needs to be optimized to run with JDK 8.  The following messages need to be eliminated:  ",Task,Major,Done,"2017-05-22 17:50:47","2017-05-22 16:50:47",1
Mule,"Smart Connector source and package project must be as similar as a mule application as possible","The structure of any smart connector must be as similar as possible as a mule application, which means it must have a *mule* folder where all the XMLs are dropped from.  Today's project's folder has the following:    when ideally should be        and the generated package must also respect that convention (which means that the JAR file will have a *mule* folder with all of its files there, and the deployment must be able to look for them accorindly)",Bug,"To be reviewed",Closed,"2017-05-22 16:42:29","2017-05-22 15:42:29",0
Mule,"Cleanup old libraries and dependencies","Review all dependencies and remove unused libraries.  Move libraries dependencies and version declarations that are no longer used by the core to the respective projects.",Task,"To be reviewed",New,"2017-05-22 16:22:58","2017-05-22 15:22:58",8
Mule,"When using TypedValue<Object> the SDK provides a CursorProvider instead of a Cursor","*When using TypedValue<Object> the SDK provides a CursorProvider instead of a Cursor*    * This affects JMS and HTTP  * HTTP also has a bug when consuming the stream, because it returns the {{@OnSuccess}} method before consuming the entire stream.    h2. EXAMPLE    JMS: JmsMessageBuilder      In this case, if the payload is a {{CursorStreamProvider}} the SDK should not inject a {{TypedValue<CursorStreamProvider}}, it should open a new cursor and return a {{TypedValue<InputStream>}}    The same happens in HTTP, but as HTTP when an unknown value is given, it will use the transformation service, so it will not suffer this issue but is not the correct way to do it.    ",Bug,Blocker,Closed,"2017-05-22 15:30:19","2017-05-22 14:30:19",5
Mule,"Upgrade commons-beanutils to 1.9.3","Upgrade commons-beanutils to version 1.9.3 to leverage the latest bugfixes.",Bug,Critical,Closed,"2017-05-21 21:44:04","2017-05-21 20:44:04",1
Mule,"Race condition when stopping an ExtensionSource while it's being recconnected","Reconnection on ExtensionSource must not be attempted if a stop is in process.",Bug,Major,Closed,"2017-05-19 22:49:47","2017-05-19 21:49:47",2
Mule,"ProcessorInterceptor API does not send componentLocation","The API org.mule.runtime.api.interception.ProcessorInterceptor does not send the componentLocation of the processor being intercepted to each of the methods of the API.    These things are necessary at the point of interception to decide if action should be taken or not.",Bug,Critical,Closed,"2017-05-19 21:58:35","2017-05-19 20:58:35",2
Mule,"HTTP Listener source allows config-ref as optional","HTTP Listener source allows config-ref as optional    <?xml version=1.0 encoding=UTF-8?>  <mule xmlns=http://www.mulesoft.org/schema/mule/core        xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance        xmlns:http=http://www.mulesoft.org/schema/mule/http        xsi:schemaLocation=          http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd          http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd>        <http:listener-config name=lisConfig>          <http:listener-connection host=0.0.0.0 port=8010 protocol=HTTP/>      </http:listener-config>        <flow name=main-http>          <http:listener path=/ />          <logger message=#[payload]/>      </flow>    </mule>  ",Bug,Major,Resolved,"2017-05-19 21:39:04","2017-05-19 20:39:04",3
Mule,"ArtifactDeclaration should represent the ParameterGroups model","ArtifactDeclaration should represent the ParameterGroups",Bug,Blocker,Closed,"2017-05-19 21:09:34","2017-05-19 20:09:34",8
Mule,"Soap Connect fails to dispose http clients when more than one service is connected","When the ForwardingSoapClient loads more than once SoapClient it leaks resources cause is not disposing properly the related resources while doing the onRemove() or disconnect().    ",Bug,Blocker,Closed,"2017-05-19 19:56:52","2017-05-19 18:56:52",5
Mule,"Expose servers protocol","In order to establish a base url for a given server we need to expose it's protocol (ip and port are already available).",Task,Critical,Done,"2017-05-19 18:18:54","2017-05-19 17:18:54",2
Mule,"Serialisation of transform operation fails with custom parameters","The artifact declaration serializer fails when attempting to serialize a declaration containing a transform operation that is configured with custom parameters.",Bug,Blocker,Closed,"2017-05-19 18:09:27","2017-05-19 17:09:27",3
Mule,"SchedulerService should not use ThrottledScheduler if maxConcurrency > pool size","Currently ThrottledScheduler introduces significant thread contention doe to synchonrized block. This can potentially be improved, but it's best to avoid using ThottledScheduler completely when maxConcurrency > poolSize",Bug,Critical,Closed,"2017-05-19 12:55:08","2017-05-19 11:55:08",2
Mule,"SchedulerService does not support queue size of 0","SchedulerService does not support queue size of 0",Bug,Major,Closed,"2017-05-19 12:52:28","2017-05-19 11:52:28",2
Mule,"WebService consumer should receive InputStreams as the inputs of the Invoke operation","*WebService consumer should receive InputStreams as the inputs of the Invoke operation*    * This should be done to prevent performance issues, due that receiving a String will make load the entire String on memory instead of consuming from an InputSream  * The usage of Strings will produce issues in transformations of different mimeTypes",Bug,Critical,Closed,"2017-05-18 21:24:51","2017-05-18 20:24:51",3
Mule,"Email Send operation should receive a TypedValue<InputStream> instead of a EmailBody","*Email Send operation should receive a TypedValue<InputStream> instead of a EmailBody*    * The usage of the {{EmailBody}} produces issues in performance because the {{content}} is a {{String}} the entire content will be loaded on memory.  * Set manually the {{encoding}} and {{mimeType}} is not consistent with the rest of the connectors that takes the {{mimeType}} from the given value (HTTP, JMS)  * Using String as the content will produce issues when transforming from others mimeTypes  ",Bug,Blocker,Closed,"2017-05-18 21:21:50","2017-05-18 20:21:50",3
Mule,"NoSucheMethodError while using email connector","Using new email connector in a try it test case (tooling), results on NoSuchMethodError, because javax.email package is defined in Boot packages, and email connector needs a newer version of it.    App:    ",Bug,Blocker,Closed,"2017-05-18 20:40:22","2017-05-18 19:40:22",2
Mule,"Create a single Jenkins Pipeline running all projects to validate feature changes","Create a single Jenkins Pipeline running all projects to validate feature changes",Task,Critical,Done,"2017-05-18 16:41:55","2017-05-18 15:41:55",8
Mule,"Use maven repository layout for Mule distribution lib folder","This will allow the heavyweight application packaging to resolve dependencies for Mule artifacts without the need of accessing remote repositories.    In addition to that the assembly for distribution has to be modified and a mapping location provided for building the classloaders with the correct order of jars as it is right now based on the lib folder structure (opt, mule, boot, etc).",Task,Critical,New,"2017-05-18 15:34:20","2017-05-18 14:34:20",16
Mule,"Ability to query (from processing strategy) the number of threads available in a given scheduler.","Ability to query (from processing strategy) the number of threads available in a given scheduler.","Enhancement Request","To be reviewed",Closed,"2017-05-18 09:18:31","2017-05-18 08:18:31",4
Mule,"Filter inside When changes When expression","SE-5854  If a Filter is defined inside a When element, then the Filter expression is set as the expression in the When element.  That is ok, since there are tests that check that functionality but the problem arises when expression is already set inside When and it get replaced.  Besides, the expression change will be made with the Filter in any position inside When children.    This happens when the parent of the Filter element is checked in FilterRefDefinitionParser:56 and no MessageProcessorWrappingBeanAssembler is created for when beanAssembler.copyBeanToTarget() (ParentDefinitionParser:66) is called.      ",Bug,Major,Closed,"2017-05-17 19:46:29","2017-05-17 18:46:29",0
Mule,"Make MuleProcessController extensible","This is needed in order to be able to do system tests of EE specific functionality (i.e.: server plugins).",Task,Major,Done,"2017-05-17 18:49:50","2017-05-17 17:49:50",0
Mule,"Remove endorsed XML libraries in 4.x","Make the same changes from MULE-12245 in Mule 4.x. It shouldn't be very different, but there are more repositories to change.",Task,Critical,Done,"2017-05-17 18:48:53","2017-05-17 17:48:53",8
Mule,"Cannot retrieve metadata from an EE processor","As of today, the tooling client is not being able to provide definitions for core EE message processors and this makes it impossible to retrieve DataSense for an EE processor, such as DW transform, as the component is not properly loaded and the component location has the form {{flowName/0}} instead of {{flowName/processors/0}}. This also creates a shift in the indexes used for the flow processors in general affecting requests for other components in the same flow.",Bug,Critical,Closed,"2017-05-17 18:48:49","2017-05-17 17:48:49",8
Mule,"Groovy should not be loaded on the container classloader","Groovy jar is being deployed on MULE_HOME/lib/opt but is not used on the container. That jar is used in order to run the launcher script only, so it should be located in a lib folder that is not included in the container classloader.  ",Bug,Major,Resolved,"2017-05-17 17:40:27","2017-05-17 16:40:27",1
Mule,"Remove mule.tls.disableSystemPropertiesMapping functionality","Aether configuration requires using the JVM default trust store. Since this runs at the beginning of all tests, it can interfere with the tests verifying the use of mule.tls.disableSystemPropertiesMapping, a property introduced for backwards compatibility that makes mule map the HTTP transport trust store as a JVM property (java.net.ssl.trustStore) and makes no TLS configuration required for HTTP clients in tests. We need to get rid of that property and functionality since it's wrong (it was only added in case clients depended on it). ",Task,Critical,Done,"2017-05-16 22:21:02","2017-05-16 21:21:02",2
Mule,"Move ObjectStore to Mule API","Move ObjectStore to API in order enable the new object store connector",Task,Blocker,Done,"2017-05-16 20:53:38","2017-05-16 19:53:38",0
Mule,"Tooling client is not deleting the temporal apps","It seems applications cannot be dispose because keeps some files in <mule instance>/tmp/tooling/<app name>.     Note: I am in windows OS.",Bug,Minor,Closed,"2017-05-16 20:32:20","2017-05-16 19:32:20",2
Mule,"Validate loading extension models with different loader types","Plugins could use different loaders for ExtensionModels, this ticket is about validating that those loaders work on Tooling Client.",Task,Major,Done,"2017-05-16 20:30:53","2017-05-16 19:30:53",2
Mule,"Issue with mule-config.json","In order to use the lightweight package we need to configure the mule instance with the settings.xml and m2 repo.  Doing this using the system properties works as expected        However trying to use the mule-config.json in the conf folder, it seems does not work because the application model cannot be build.    Note: I am testing this in windows.        ",Bug,Major,Closed,"2017-05-16 20:26:30","2017-05-16 19:26:30",8
Mule,"Review ignored distribution tests whose issues are in status resolved","*Tests in scope*  * DbTestCase#addBlob()  * HttpRequesterTestCase#testHttpForEachWithDifferentKindOfPayloads()  * HttpRequesterTestCase#testHttpsWithBasicAuthObtainingJsonAndThenApplyingTransformWith5mbInput()   * ToolingServiceTestCase#connectivityTestingUsingJdbcDriver()    *Status*  [Ignored distribution tests review status|https://docs.google.com/a/mulesoft.com/spreadsheets/d/1mbatcGVq_lxyks5xDdVBCMFpbsZob1aCdgLklzwellM/edit?usp=sharing]  ",Task,Minor,Done,"2017-05-16 15:44:18","2017-05-16 14:44:18",8
Mule,"Soap Connect: Give the capability to inject custom headers to the requests.","Give the capability to inject custom headers to the requests.","Enhancement Request",Major,Closed,"2017-05-16 15:10:39","2017-05-16 14:10:39",5
Mule,"Remove listener interpretRequestErrors feature","The interpretRequestErrors feature was mistakenly conceived as a way to deal with proxies where the request would fail. However, a proper proxy should not treat any status code as a failure but propagate that response (using a success status code validator from 0 to 599). We need to remove the feature since it's useless and will only create confusion.",Task,Blocker,Done,"2017-05-15 19:57:32","2017-05-15 18:57:32",2
Mule,"Old javax.mail bundled with HTTP connector","HTTP connector bundles javax.mail 1.4.3 which was released in 2010. We must include a newer version. (1.5.6 released in 2016).",Task,"To be reviewed",Done,"2017-05-15 19:32:39","2017-05-15 18:32:39",2
Mule,"support custom http:listener in OAuth enabled extensions","Support custom http listener in the callback definition","Enhancement Request",Blocker,Closed,"2017-05-15 16:37:12","2017-05-15 15:37:12",5
Mule,"Additional streaming performance work","Take additional profiling sessions, Tackle additional issues that arise.",Bug,Critical,Closed,"2017-05-15 16:18:30","2017-05-15 15:18:30",8
Mule,"Set definitive default streaming buffer sizes","Determine the best streaming buffer sizes defaults and impact the code",Task,Blocker,Done,"2017-05-15 16:01:13","2017-05-15 15:01:13",5
Mule,"Support smart connectors that rely on EE elements","A smart connector might rely on some EE elements (such as *transform*, *cache*, or any other EE plugin) in which case the tooling client must be responsible of loading the needed JARs to be sure all resources are available.    Right now, it fails discovering the schemas for the DW *transform* element, but this will be an issue if some Java services are EE only, in which case Java SDK connectors will fail as well to load the extension model.    This jira blocks MULE-12440",Bug,Blocker,Closed,"2017-05-15 15:56:47","2017-05-15 14:56:47",0
Mule,"WSC: Improve authentication representation in the extension","Right now, in order to represent the different authentication method supported by the WSC, the extension is using a list with subtypes.    This is not an accurate representation of what the users can do, as they should always configure 1 of each subtype, and they should not be allowed to configure more than once each.    If we change the list of subtypes, to single optional fields for each type, not only we are reflecting what the users should be doing, but improve the experience when configuring it.","Enhancement Request",Critical,Closed,"2017-05-15 15:48:02","2017-05-15 14:48:02",3
Mule,"email config elements should have the -config suffix","The email config elements should end with the -config elements. The SDK should actually automatically enforce this",Bug,Blocker,Closed,"2017-05-15 15:44:20","2017-05-15 14:44:20",3
Mule,"RejectionPolicy configuration is confusing","The current configuration of wait/rejection policy is somewhat confusing and limited because you configure the policy on the source scheduler rather than the destination scheduler.    Invert this, and allow it to be configured on all scheduler types.  We will require potentially the following policies:  - REJECT_ALL  - WAIT_ALL (default for CPU_LITE pool)  - RUN_IO_ONLY (default for IO pool) .   ","Enhancement Request",Minor,Closed,"2017-05-15 14:40:07","2017-05-15 13:40:07",4
Mule,"Move tests that depend on connectors/services to integration-tests repo","Leftover code movement after MULE-11626",Task,Major,Done,"2017-05-15 14:35:13","2017-05-15 13:35:13",8
Mule,"Expand ProcessingStrategy test cases to cover RejectedExecution and maxConcurrency","Expand ProcessingStrategy test cases to cover RejectedExecution and maxConcurrency","Enhancement Request",Critical,Closed,"2017-05-15 10:41:06","2017-05-15 09:41:06",4
Mule,"Collection/Map DataTypes lack generics","Changes were recently introduced to indicate the EL the expected DataType of an evaluation so that when a parameter is resolved the EL can do type coercion or fail accordingly if necessary. We have also introduced the MapDataType. However, this is not being considered and Collections/Maps lack the generic data that would allow the EL to know that all items on a list should be ints, for example, or that the keys of a Map should be Strings and the values some POJO.",Bug,Blocker,Closed,"2017-05-13 03:59:33","2017-05-13 02:59:33",5
Mule,"AuthCodeState should give more information","Although at first it was thought as unnecesary, the AuthorizationCodeState needs to also provide access to:    * The authorizatio url  * The access token url  * The consumer key  * The consumer secret","Enhancement Request",Critical,Closed,"2017-05-13 00:03:44","2017-05-12 23:03:44",1
Mule,"Thread contention on System.getProperty in ModuleFlowProcessingPhase","Thread contention on System.getProperty in ModuleFlowProcessingPhase",Bug,Major,Closed,"2017-05-12 22:43:29","2017-05-12 21:43:29",2
Mule,"Interception API does not resolve connection params","When calling an operation and having the interception API module in the middle resolution of connection parameters (such as those that come from the config of  the operation and not defined in the operation itself) are not being resolved.     There are a couple of interceptors that are not being executed before resolving the parameters like the connection interceptor.     The issue is also tied to the fact that interception API is resolving the parameters on its own instead of having this resolution centralised in one place. ",Bug,Blocker,Closed,"2017-05-12 19:37:46","2017-05-12 18:37:46",4
Mule,"OAuth extension fails if it doesn't provide default set of scopes","if defaultScopes are not provided on the @AuthorizationCode annotation, then the extension fails",Bug,Blocker,Closed,"2017-05-12 19:02:40","2017-05-12 18:02:40",1
Mule,"Potential deadlock with IO scheduler when scheduling from IO thread.","Deadlocks are possible because:  - IO scheduler doesn't have a queue  - IO thread scheduling on IO scheduler waits rather than fails.    To avoid these we need to:  - -Introduce queue-  or  - -Make scheduling from IO to IO fail instead of wait.-  - Detect when a pool thread is attempting to schedule on scheduler and run in same thread/task.      ",Bug,Critical,Closed,"2017-05-12 17:43:50","2017-05-12 16:43:50",4
Mule,"Remove distribution management from Soap parent pom.","Remove distribution management from Soap parent pom so that childs do not inherit that configuration.",Bug,Blocker,Closed,"2017-05-12 14:32:45","2017-05-12 13:32:45",1
Mule,"Hidden error cause in E-mail connector","When the e-mail connector throws an UnsupportedDataTypeError, the actual cause of the error is not easily available to the user:    Current error message is:  {{Error while sending email: IOException while sending message (org.mule.extension.email.api.exception.EmailException).}}    But the real and more useful error message can be found in the stacktrace:    {{javax.activation.UnsupportedDataTypeException: no object DCH for MIME type application/json}}    Complete log:  ",Bug,Critical,Closed,"2017-05-12 03:54:03","2017-05-12 02:54:03",3
Mule,"Redefine expression language API","Core module defines ExpressionLanguageExtension interface that can be implemented on external modules to provide extensions to MEL expression language.    There are currently two extensions provided on validation module and batch EE module.    In order to remove MEL from core, this API has to be moved to a separated module that can be referenced on the mentioned modules     ","Enhancement Request",Critical,Resolved,"2017-05-11 22:21:04","2017-05-11 21:21:04",1
Mule,"Errors thrown from SDK extensions are not handled properly ","Throwing an java.lang.Error such as an Assertion error from inside an SDK extension get's wrapped in an Exception inside *org.mule.runtime.module.extension.internal.runtime.exception.ExceptionHandlerManager#wrapInException*    This is causing that the source of the failure gets to the error lookup as an exception instead of the original Error.  Which in turns causes error handler to execute because the error is not mapped as critical ",Bug,Blocker,Resolved,"2017-05-11 21:07:16","2017-05-11 20:07:16",5
Mule,"Cleanup test dependencies from poms","Change dependencies to core-tests for dependencies to test support modules  Remove transient test dependencies",Task,Major,Done,"2017-05-11 19:36:52","2017-05-11 18:36:52",1
Mule,"ArtifactClassLoaderRunner - Is not able to download missing dependencies","The test runner uses maven in offline mode, there cases where this won't work as dependencies are not going to be already downloaded in maven local repository.  Runner should allow to configure it to work in online mode and take into account remote repositories from the pom and using credentials from the settings.xml",Bug,Major,Closed,"2017-05-11 17:50:48","2017-05-11 16:50:48",4
Mule,"Sources error handling is inconsistent","When changing the default error handler, it became clear that the HTTP listener error-response had to be updated which uncovered the fact that source error handling is extremely inconsistent. Under some scenarios error handling is called, under others the source handles the error directly while worst of all sometimes the app hangs. We need to review all scenarios and settle on the behaviour. Focus should be on sources using the default error handler.",Bug,Blocker,Closed,"2017-05-11 17:12:57","2017-05-11 16:12:57",8
Mule,"Create Test for TLS support in Tooling Runtime Client","From MULE-12410, because of the bug in Mule Agent (AGENT-404), we need to use a workaround to do the test, what takes more time. ",Task,Major,Done,"2017-05-11 14:52:20","2017-05-11 13:52:20",4
Mule,"Cannot override default value for explicit primary content","While making some changes in HTTP, I annotated with @Optional(defaultValue = #[error.description]) an attribute already annotated with @Content(primary = true). Though the extension model was correct, when resolved on runtime #[payload] was used. Furthermore, when removing the explicit primary thing, no expression was evaluated and null was resolved (perhaps because there was no other primary?).",Bug,Blocker,Closed,"2017-05-10 23:35:45","2017-05-10 22:35:45",5
Mule,"Poll extension model is invalid","Poll extension model is invalid, thus preventing tooling from using the ArtifactDecalration serializer.    The new model will eliminate the need of an schedulers module and unify both strategies as a subtypes case. Final DSL will be:       ",Bug,Blocker,Closed,"2017-05-10 18:59:53","2017-05-10 17:59:53",5
Mule,"CursorStream should throw IOException","CursorStream throws an IllegalArgumentException when assertNotDisposed is called during a read or seek, which causes trouble because those ops are supposed to throw IOException, meaning such an error will not be handled properly most likely.",Bug,Blocker,Closed,"2017-05-10 17:14:58","2017-05-10 16:14:58",1
Mule,"Create the ObjectStore Module specification","Create the ObjectStore Module specification",Task,Critical,Done,"2017-05-10 14:59:17","2017-05-10 13:59:17",2
Mule,"Scatter-gather router does not handle errors correctly and invokes error handler multiple times","Scatter-gather router does not handle errors correctly and invokes error handler multiple times",Bug,Blocker,Closed,"2017-05-10 11:23:20","2017-05-10 10:23:20",2
Mule,"Streaming buffer is wrongfully exceeded","When the streaming buffer size matches the payload size exactly, it wrongfully throws BufferSizeExceddedException.",Bug,Blocker,Closed,"2017-05-09 23:34:54","2017-05-09 22:34:54",1
Mule,"Application should expose only shared resources to plugins","Resources on the app which come from not shared libs are still found by plugins.   For example in compatibility IntegrationTestCaseRunnerConfig, if it shares org.mule.tests:mule-tests-unit and org.mule.tests:mule-tests-functional, then for some reason, the plugins classloaders try to load the org.mule.test.config.dsl.ParserComponentBuildingDefinitionProvider which is defined on test-integration, which is not exported.     Apparently the problem is that the app exports META-INF/services/org.mule.runtime.dsl.api.component.ComponentBuildingDefinitionProvider, because it is part of mule-test-functional. That resource is also present on mule-test-integration.",Bug,Major,Resolved,"2017-05-09 21:05:52","2017-05-09 20:05:52",0
Mule,"Move scripting plugin to a separated github repository","Move scripting plugin to a separated github repository so it can have a release cycle different from the container.",Task,Major,Done,"2017-05-08 21:56:49","2017-05-08 20:56:49",1
Mule,"Event Builder allows null message","Event builder must validate that the message is not null when creating the event.",Bug,Major,Closed,"2017-05-08 17:37:47","2017-05-08 16:37:47",2
Mule,"When executing the error handler chain and payload is a CursorProvider a NullPointer is raised","When executing the error handler chain and payload is a CursorProvider a NullPointer is raised    Example Test Case in the following branch:  https://github.com/balbifm/mule-integration-tests/commit/9bc3a53fa65ee10210c66b6ca33d61065fa34256    The stacktrace of the test case is:      Problem is that during ErrorHandler initialise, a chain that contains the processors defined for the ErrorHandler is created, but is not initialised (https://github.com/mulesoft/mule/blob/mule-4.x/core/src/main/java/org/mule/runtime/core/exception/TemplateOnErrorHandler.java#L208)    If adding explicit initialisation of the chain in the method, seems to fix the mentioned issue, BUT.. it breaks at least one other test: org.mule.test.module.extension.transaction.TransactionalSourceTestCase",Bug,Blocker,Closed,"2017-05-08 15:49:57","2017-05-08 14:49:57",4
Mule,"Tooling Runtime Client should support TLS",,Task,Critical,Done,"2017-05-04 18:33:23","2017-05-04 17:33:23",4
Mule,"Support EL split in Foreach","This issue is to support split by expression for things that may be collections represented in strings and not in java collections like an string of a array of json objects",Task,Blocker,Done,"2017-05-06 13:51:45","2017-05-06 12:51:45",4
Mule,"Define how to deal with splitting of application/xml content","Currently there is no way to do a foreach or splitter over an String with application/xml using an expression that may return several XML parts. We need to define how it should work with XML.    This issue must make the test annotated with Ignore(MULE-12407) pass",Task,Blocker,Done,"2017-05-06 06:56:43","2017-05-06 05:56:43",2
Mule,"HTTP, Oauth and Soap services have wrong package name","I came to realise that the package of those services (http, oauth and soap) have package org.mule.services instead of org.mule.service. We need to fix that.",Bug,Blocker,Closed,"2017-05-05 23:02:11","2017-05-05 22:02:11",1
Mule,"Use MetadataCache for SoapOperationMetadata in WSC ","Use MetadataCache for SoapOperationMetadata in WSC, since the metadata is resolved for the whole operation but retrieved by part (headers, body, attachments).   The cache allows us to save the operation metadata for the first elemente resolved and let the other two use the cached value instead of re-introspecting the wsdl.    In order to do this we should provide a json serializer for the SoapOperationMetadata directly from the soap-api, and use that serialized value as the stored value in the cache,  ","Enhancement Request","To be reviewed",Closed,"2017-05-05 18:40:43","2017-05-05 17:40:43",5
Mule,"If an error occurs resolving the @OnSuccess parameters the error is never exposed","*If an error occurs resolving the @OnSuccess parameters the error is never exposed*    * The case comes when the SDK is trying to resolve the parameter's values, and for example one of the values is resolved from an expression and this expression is invalid.  * When this happens no exception is exposed, no error log information will be displayed.  * If the *listener* has an {{@OnError}} method, this will be called, if not, no method will be called and the Mule Developer won't see any exception.  * In case that the resolution error occurs on the {{@OnError}} method, the following log line will be displayed, which is totally different from any other normal Mule Error",Bug,Blocker,Closed,"2017-05-05 17:35:55","2017-05-05 16:35:55",5
Mule,"Cannot load extension model in Windows, pom.xml not found","The tooling client is failing to locate the pom.xml file, and because of this, it cannot load the extension model. We checked the jar in the local repository, and the pom.xml existed under the folder maven/org.mule.modules/mule-module-sockets    ",Bug,Blocker,Closed,"2017-05-05 14:31:42","2017-05-05 13:31:42",0
Mule,"Validate Pojos used as Subtypes","Imagine you have a base subtype relationship between pojo A and B (A is the parent and B the child).    You use your base type A as a parameter or return type, what ends up happening is that all the SDK validations are run against A (for instance, having all the getters for the field), but no validation is run against B.    In all the situations that a base type is validated, we should also validate its subtypes.",Bug,Major,Closed,"2017-05-04 21:04:32","2017-05-04 20:04:32",3
Mule,"Fix test cases using maven artifact resolution","Fix test cases using maven artifact resolution",Task,Critical,Done,"2017-05-04 20:57:00","2017-05-04 19:57:00",2
Mule,"HTTP listener binds when address is already in use","If you have a web server running on your machine on address localhost:8081 and you deploy a Mule application which features a listener on address localhost:8081, binding doesn't fail and the application starts successfully. But if you want to hit the endpoint, it doesn't work because you are hitting the endpoint that was previously up.    I have tested this by starting activemq web console on my machine, which listens on port 8161, and then starting the attached Mule application on the same port.",Bug,Major,Resolved,"2017-05-04 20:31:02","2017-05-04 19:31:02",4
Mule,"Cannot load extension model in Windows","Tooling client fails to load extensions on Windows machines because the path are not written correctly.    ",Bug,Blocker,Closed,"2017-05-04 19:53:05","2017-05-04 18:53:05",0
Mule,"Introduce message selection/filtering in ONE_WAY sources ","Given idempotent filter and expression-filter no longer exist in mule core in 4.0 there is no easy way to filter/select which messages should be processed by the flow from a one-way source without using JMS specific selectors.    A typical use case which will no longer be possible without throwing exceptions and error handling is filtering out repeated messages with idempotent filter.  The reason filters were removed from mule-core was because they are an issue with request-response flow.    The best solution to this problem is for one-way sources to support a selection strategy to determine which messages should be processed (passed on to flow) and for us to provide a idempotent and potentially expression-based strategy.","Enhancement Request","To be reviewed",Closed,"2017-05-04 17:31:20","2017-05-04 16:31:20",16
Mule,"Move Pooling Profile to Pooling Tab","Instead of putting Pooling Profile on the Advanced Tab, it should be on a separate tab named Pooling and not in a group.","Enhancement Request",Minor,Closed,"2017-05-04 15:55:45","2017-05-04 14:55:45",1
Mule,"java.util.MissingFormatArgumentException when no pom is found for an extension","When the maven client fails to get a pom from jar, an exception is thrown:  ",Bug,Major,Closed,"2017-05-03 22:30:41","2017-05-03 21:30:41",1
Mule,"WSC fails to parse local XSD imports.","WSC fails to parse local XSD imports.",Bug,Critical,Resolved,"2017-05-03 18:20:31","2017-05-03 17:20:31",8
Mule,"Unclear error message when no Maven repository is configured","When you deploy a lightweight application and you don't configure any Maven repository to pull the dependencies from, The app deployment fails with the following error:        If no Maven repository is configured, the user must know that they are missing that configuration with a clear error message",Bug,Minor,Resolved,"2017-05-03 17:33:12","2017-05-03 16:33:12",2
Mule,"Rerun postPayloadToTransformMessageToJMSPublishStreamMessage after MULE-12270 is fixed","Rerun com.mulesoft.mule.distributions.server.integration.scenarios.nasdaqpoc.CRMNotificationProcessTestCase#postPayloadToTransformMessageToJMSPublishStreamMessage after MULE-12270 is fixed",Task,Minor,Done,"2017-05-03 17:15:02","2017-05-03 16:15:02",1
Mule,"Allow inline definition of object stores in elements","At the time of writing, *collection-aggregator* and *idempotent-message-filter* are elements in the extension model that allow an object store as part of the configuration.    Currently, that object store can be passed only by name. It should be allowed to define it inline too.",Task,Major,Done,"2017-05-03 16:25:49","2017-05-03 15:25:49",4
Mule,"Remove transaction constraint classes","Classes from org.mule.runtime.core.transaction.constraints are only referenced on org.mule.runtime.core.api.transaction.TransactionConfig API but never really used. Remove them",Task,Minor,Done,"2017-05-03 14:29:12","2017-05-03 13:29:12",0
Mule,"Linkage error whe loading any extension","When loading any extension inside Studio, the MavenClient fails with the following error, making it impossible to load an extension:        Full stacktrace:  ",Bug,Blocker,Closed,"2017-05-02 21:19:55","2017-05-02 20:19:55",4
Mule,"Incorrect error mapping for SecurityException","When a {{java.lang.SecurityException}} is thrown on a jms:publish operation, this error is wrapped in a {{TypedException}} with type PUBLISHING, which doesn't allow the user to handle properly this type of errors.    Security exceptions should have their own error types or be mapped to the SECURITY type provided by Mule.    Log:  ",Bug,Major,Resolved,"2017-05-02 19:33:56","2017-05-02 18:33:56",1
Mule,"Hidden error messages on JMS operations","When an error is thrown by the JMS Publish operation, the actual error is wrapped inside a generic error which hides the actual cause.  Example:      The only way to access the actual cause of the error is using: *{{error.cause.cause.message}}*, which is not user friendly.  The cause of the error should be available via: *{{error.description}}*    Stacktrace of the error:  ",Bug,Major,Closed,"2017-05-02 19:29:46","2017-05-02 18:29:46",3
Mule,"Cherry pick M5 fix for Qname and infrastructure model property","Cherry pick M5 fix for Qname and infrastructure model property",Task,Blocker,Done,"2017-05-02 19:12:05","2017-05-02 18:12:05",1
Mule,"Runtime should know how to transform java 8 dates to java 7 dates",(complete),Bug,Blocker,Closed,"2017-05-02 18:45:13","2017-05-02 17:45:13",3
Mule,"CursorProvider management should happen on the pipeline",(complete),"Enhancement Request",Blocker,Closed,"2017-05-02 18:43:36","2017-05-02 17:43:36",5
Mule,"File and FTP connectors should not require match-with","the match-with wrapper should not be necessary. ","Enhancement Request",Blocker,Closed,"2017-05-02 18:42:24","2017-05-02 17:42:24",3
Mule,"Review use of boxed booleans in extensions","Go through all extensions and remove triple state booleans",Task,Blocker,Done,"2017-05-02 18:27:39","2017-05-02 17:27:39",8
Mule,"Missing CDATA on import of ArtifactDeclaration","Missing CDATA on import of ArtifactDeclaration",Bug,Blocker,Closed,"2017-05-02 18:07:10","2017-05-02 17:07:10",3
Mule,"mule-core should use same asm library as the one packaged with distribution","core has a different version of asm therefore tests are running within that version instead of the one that finally goes to the distribution.",Task,Major,Done,"2017-05-02 15:46:01","2017-05-02 14:46:01",0
Mule,"Update ExpressionManager to accept expressions that resolves to null when indicating the expected DataType","Update ExpressionManager to accept expressions that resolves to null when indicating the expected DataType","Enhancement Request",Blocker,Closed,"2017-05-02 15:01:33","2017-05-02 14:01:33",8
Mule,"XsltTransformer should close underlying InputStream when using XMLStreamReader ","As Javadoc says the underlying input stream is not going to be closed, therefore the transformer should take care of this:  http://docs.oracle.com/javaee/5/api/javax/xml/stream/XMLStreamReader.html",Bug,Major,Closed,"2017-05-02 14:28:10","2017-05-02 13:28:10",8
Mule,"Reduce verbose output of ProcessingStrategy test cases","Reduce verbose output of ProcessingStrategy test cases",Task,Minor,Done,"2017-05-02 12:52:19","2017-05-02 11:52:19",2
Mule,"Upgrade reactor to version 2.0.7","Upgrade reactor to version 2.0.7",Task,Major,Done,"2017-05-02 09:57:43","2017-05-02 08:57:43",2
Mule,"Test Infrastructure doesn't handle services correctly","Consider the pom for extension-spring-support. The mule-service-http artifact is listed as a dependency twice:    1) first as a provided service  2) as a test service    This leads to the following problems:    * If ran as is, an exception is thrown saying that there're two bean definitions for the HttpService  * If the test dependency is removed, then the test fails with NoClassDefError of the HttpService  * The the test dependency is kept but not as service, the first problem appears again.    In order to get it working, I had to comment a validation on org.mule.runtime.config.spring.SpringMuleContextServiceConfigurator#createCustomServices which should be bring back when this issue is fixed.",Bug,Critical,Closed,"2017-05-02 06:23:20","2017-05-02 05:23:20",2
Mule,"OAuth operations are always executed in a blocking manner","In order to refresh tokens and retry operations when they throw AccessTokenExpiredException, the OAuthOperationMessageProcessor class is written in a way which always forces the operation to block, even if they're not blocking.    This should be refactored so that non blocking OAuth operations are in fact executed in a non blocking manner",Bug,Major,Closed,"2017-05-02 05:13:28","2017-05-02 04:13:28",1
Mule,"Lightweight app deployment downloads runtime libs from remote repo","When deploying a lightweight application, the dependencies of its referenced plugins are all downloaded, even if they are mule runtime libs that are already bundled with the runtime (i.e.: mule-api).    This could also potentially lead to the unintended case where the plugin brings a runtime dependency with a version different than the one for the runtime it is being deployed to.",Bug,Critical,Open,"2017-05-01 04:14:42","2017-05-01 03:14:42",1
Mule,"Remove unused dependencies from pom files","Many pom files in mule-4.x were updated from the mule-3.x version. Many of them contain dependencies to maven artifacts that are not used anymore.   Besides cluttering the pom with garbage, in some cases those dependencies can end up in the distribution. So they must be cleaned up soon",Task,Critical,New,"2017-04-30 13:38:17","2017-04-30 12:38:17",8
Mule,"Maven depenency resolution doesn't output logs ","When an app is being deployed and Mule starts downloading its dependencies from a remote repository, no log is being displayed about what is going on, and the user is left with the message:  ",Bug,Major,Closed,"2017-04-28 22:26:55","2017-04-28 21:26:55",2
Mule,"Sources may not receive onSuccess/onError","In ModuleFlowProcessingPhase there are two consumers (for success and error) to send the events after a flow ends. If it's a source, then onSuccess/onError are dynamically called respectively to produce a response (like for the http extension).    Now, inside getSuccessConsumer and getErrorConsumer the parameters required for each invocation are obtained through callbacks (see MessageSourceResponseParametersProcessor) which may for instance run dataweave. These expressions can fail for some and not all events, and when they do, the corresponding source callback won't be invoked.    This is more problematic for the case of error, as a failure on success will still try to call the error consumer. When onError parameters can't be obtained, the source is not notified and can't complete processing (for instance, http needs to tell grizzly that the request was handled - with or without emitting a response -, otherwise the extension will stall).    A possible solution would be another callback, like onComplete that will always be called with the SourceCallbackContext and no extra parameters. Another one could be making dynamic parameters nullable and let the same onError handle them.",Bug,Major,Closed,"2017-04-28 18:10:32","2017-04-28 17:10:32",0
Mule,"TryIt should also handle ObjectStreams from Runtime","We have to define if message history should also handle this kind of payloads and what to do on those scenarios. Serialize it to json or dataweave format.",Task,Major,Done,"2017-04-28 17:58:32","2017-04-28 16:58:32",4
Mule,"Allow to create schedulers for low-priority tasks","Some tasks should run in low priority. Check TODOs in code.",Task,"To be reviewed",Done,"2017-04-28 14:17:56","2017-04-28 13:17:56",4
Mule,"Privileged access check is done differently on the container and test runner","Artifact ID for plugins is being populated  differently when plugins are created on standalone or the isolated test runner.  On standalone mode, the artifact name is took from the plugin descriptor, while in the test runner the name is took from the full artifact maven ID (groupId, artifactId, version, etc)",Bug,Minor,Closed,"2017-04-27 19:31:48","2017-04-27 18:31:48",1
Mule,"ArtifactClassLoaderRunner - Application URLs are also including transitive dependencies from filter ones","When resolving application dependencies (scope test) the runner allows to filter artifacts, mostly mule artifacts are filtered here as they should be in container.  As test functional and test unit modules require to access these transitive dependencies the runner is not removing them but this means that more jars are added to the application and some tests are not failing as they should.",Bug,Major,Resolved,"2017-04-27 18:08:53","2017-04-27 17:08:53",16
Mule,"Review Scatter-gather UX","Need to review the UX of SC in Mule 4:    * Review which DW expressions should be use to obtain the result of each route  * When a route fails, review how to get both the error and the exception  * Apply changes  * Run all tests",Task,Blocker,Done,"2017-04-27 17:12:02","2017-04-27 16:12:02",8
Mule,"Verify that transformPayloadToTransformMessageToJMSPublishTextMessage test passes","Verify that transformPayloadToTransformMessageToJMSPublishTextMessage test passes",Task,Major,Done,"2017-04-27 17:04:29","2017-04-27 16:04:29",1
Mule,"Review wrapped mule exceptions and error handling","We need to decide the approach when a RoutingException has another MuleException within regarding which error type should be assigned there.",Task,Critical,Done,"2017-04-27 17:03:55","2017-04-27 16:03:55",4
Mule,"Flow should not continue processing in non-blocking processor response thread.","Flow should not continue processing in non-blocking processor response thread.",Bug,Critical,Closed,"2017-04-27 16:38:12","2017-04-27 15:38:12",8
Mule,"When an app with OAuth Client Credentials can't connect at deployment it doesn't show the HTTP requester response as in 3.x","When an app with OAuth Client Credentials doens't can connect at deployment it doesn't show the HTTP requester response as in 3.x",Bug,Major,Closed,"2017-04-27 14:19:27","2017-04-27 13:19:27",2
Mule,"App that fails deploying take too much time to show the error","App that fails deploying take too much time to show the error. For example when you don't set a placeholder for the port or with ouauth when it can't obtain the token in client credentials.",Bug,Major,Closed,"2017-04-27 13:59:20","2017-04-27 12:59:20",8
Mule,"Move MessageProcessingManager, PhaseExecutionEngine etc. to compatability","No longer used in CE",Task,Blocker,Done,"2017-04-27 12:40:54","2017-04-27 11:40:54",4
Mule,"Cleanup processing strategies and reintroduce ring-buffer based event streaming processing strategy for performance testing","Given the changes in MULE-12219 (Nested MessageProcessors post notifications are triggered within the error message), the issues described in MULE-11775  (Message loss during stream cancellation phase when using stream processing with errors.) are no longer a blocker to use of ring-buffer based processing strategy.    Reintroduce this processing strategy for performance testing.","Enhancement Request",Major,Closed,"2017-04-27 01:17:33","2017-04-27 00:17:33",4
Mule,"Path resolution not working for repository location","The path resolution with wildcards for the muleRuntimeConfig.maven.repositoryLocation is not working.    This cmd works:      But this one doesn't work:  ",Bug,Minor,Resolved,"2017-04-26 22:26:47","2017-04-26 21:26:47",1
Mule,"Content parameters of different type and same name should not be allowed","*Content parameters of different type and same name should not be allowed*    * Nowadays we are allowing different content parameters of different type but with the same name, the problem of this is that a content parameter, due to child element support, will register a bean definition with a certain name and type.   * If another content parameter uses the same name, will probably use the bean definition from another type, this will lead to in runtime, depending on the configured type fail or not  ",Bug,Blocker,Closed,"2017-04-26 21:06:48","2017-04-26 20:06:48",8
Mule,"Add domain based system tests","Currently, the tests that inherit from *DomainFunctionalTestCase* don't run in an isolated environment.    Apart from that, those tests have mocked services (for instance, the SchedulerService) instead of the actual service, which prevents from testing some scenarios.",Task,"To be reviewed",Done,"2017-04-26 16:03:56","2017-04-26 15:03:56",8
Mule,"Create a parent pom for soap extensions","Create a parent pom for soap extensions","Enhancement Request",Blocker,Closed,"2017-04-26 15:37:24","2017-04-26 14:37:24",3
Mule,"make mule-app-plugins-maven-plugin to leave the pom file in the proper place","The plugin mule-app-plugins-maven-plugin  Is leaving the pom file inside of mule-artifact folder which is not correct it should follow the maven convention   *META-INF/maven/groupid/artifactid/*",Bug,Critical,Closed,"2017-04-25 18:52:40","2017-04-25 17:52:40",2
Mule,"Incorrect folder structure in internal Maven repository","The Maven repository folder structure has a duplicate nested folder:  ",Bug,Minor,Resolved,"2017-04-25 18:26:28","2017-04-25 17:26:28",1
Mule,"Make MuleArtifactFuncionalTestCase load extensions based on the mule-plugin.json","Currently, extensions are always loaded using the DefaultJavaExtensionModelLoader with the addition of the SoapExtensionModelLoader this results in an extension not loaded properly. We should use the mule-plugin.json to get the correct ExtensionModelLoader to load the extensions.    For test extensions, that doesn't have the same structure than regular extensions that extends from the extensions parent pom, a property must be bundled in the test extension pom that marks which loader to use","Enhancement Request",Blocker,Closed,"2017-04-25 16:07:06","2017-04-25 15:07:06",8
Mule,"Rework the Tooling API to avoid exposing Mule APIs - Tooling implementation should work in an isolated ClassLoader","In order to avoid class loader issues Tooling Client implementation should work in an isolated class loader.",Task,Critical,Done,"2017-04-25 12:34:50","2017-04-25 11:34:50",8
Mule,"Work on Tooling API to avoid exposing Mule API - JSON as Serialization layer ","As decided the dispatcher will make calls using reflection to the Tooling Runtime Client API implementation that is loaded in an isolated class loader.    The transport defined to pass arguments and receive responses would be JSON and Gson will be used as the implementation framework as Metadata API already supports this as the persistence layer.    This is tasks is about to review how exceptions should work on this approach, how parameters are serialized and passed and results are deserialized.    Metadata Model API should allow Tooling to define the behaviour when a typeAnnotation is not found in class mapping (this case Tooling should ignore the TypeAnnotation as the Tooling API doesn't have a DTO and Runtime has added new TypeAnnotation).",Task,Critical,Done,"2017-04-25 12:32:42","2017-04-25 11:32:42",8
Mule,"Rework the Tooling API to avoid exposing Mule APIs - Java Only ClassLoader Filter","A filtered classloader that only allows to load Java classes and boot packages (logger) has to be created in order to allow Tooling to work with Proxies for Services. ",Task,Critical,Done,"2017-04-25 12:29:06","2017-04-25 11:29:06",2
Mule,"Make MuleArtifactFunctionalTestCase work with Soap Extensions from the IDE.","Currently extensions need the mule-plugin.json in order to get the correct ExtensionModelLoader to be loaded, When running with maven this is not a problem because maven generates the mule-plugin.json at compile time so its the testing framework is able to locate it and load the extension correctly, but when the extension is not compiled and does not have the generated resources in place the IDE will not generate those resources since that is configured in the components.xml.    Currently there is a method in the ExtensionModelLoaderFinder class that when the mule-plugin.json does not exist it will default to de DefaultJavaExtensionModelLoader().        This should be chaged so when there is no mule-plugin.json a mechanism is triggered in order to find the correect loader.","Enhancement Request","To be reviewed",Closed,"2017-04-24 23:24:28","2017-04-24 22:24:28",5
Mule,"Fix package names on schedulers module","Packages names on schedulers module are wrong, instead of having the org.mule.runtime.modules.schedulers prefix, they must use org.mule.runtime.module.scheduler",Task,Minor,Done,"2017-04-24 23:08:08","2017-04-24 22:08:08",0
Mule,"DB pool limit does not throttle the connections but throws error instead.","The current default of the connections pool of the DB extension is 5, when testing with more, the requests fails with the message Could not obtain connection from data source, which does not correlates to the reality.    Also, this limit is not found on 3.6-3.8 connector, which uses one connection per call, as DB calls may take a long time, this value may need to be increased and also added to the migration doc.",Bug,Critical,Closed,"2017-04-24 19:42:27","2017-04-24 18:42:27",5
Mule,"ComponentModel config file name must point to the relative path file rather than the file","Current ComponentModel has a method called org.mule.runtime.api.component.location.ComponentLocation#getFileName which points to the file of the modeled element when it should have the relative path to the file as it will be mandatory to properly look for it when debugging ",Task,"To be reviewed",Done,"2017-04-24 19:34:10","2017-04-24 18:34:10",2
Mule,"Failing tests on Windows","The following tests are failing on Windows 10 OS.     * mule-core module:  **  ExceptionUtilsTestCase.testFullStackTraceWithoutMessage  **  JdkVersionUtilsTestCase.testIsSupportedJdkVersion  **  JdkVersionUtilsTestCase.testRecommendedJdkVersion  **  JdkVersionUtilsTestCase.testValidateJdk5  **  PersistentObjectStorePartitionTestCase.skipAndMoveCorruptedOrUnreadableFiles  **  QueuePersistenceObjectStoreTestCase.queueFilesAreRemovedWhenSerializationFails    * mule-modules module:  ** XsltResultDocumentTestCase.writeToSameFileSeveralTimes  ** MuleResourceResolverTestCase.testsExistentFileSystemResourceWithBaseUri",Bug,Minor,Closed,"2017-04-24 16:07:18","2017-04-24 15:07:18",8
Mule,"NPE when trying to serialize a MultiPartPayload","NPE exception is thrown to the console when trying to publish a multipart/form-data message to a JMS queue.  If this is an invalid JMS message, the exception should be properly handled and a comprehensive error thrown.    Configuration:      Request:      Log output:  ",Bug,Major,Closed,"2017-04-21 22:59:00","2017-04-21 21:59:00",4
Mule,"Invalid Multipart request should return 400 instead of 500","When you send an invalid Multipart request to the HTTP Listener, the following error is thrown to the console, and a 500 Server Error is returned.    Sample app:      Request:      Response:      Log output:  ",Bug,Minor,Closed,"2017-04-21 22:08:39","2017-04-21 21:08:39",4
Mule,"NPE with missing properties file","When you deploy an application which misses a properties file defined in a {{property-placeholder}}, the deployment fails with a NPE instead of showing a clear message:    {code}  org.mule.runtime.deployment.model.api.DeploymentException: Failed to deploy artifact [test-app-1.0.0-SNAPSHOT-mule-application-light-package]   at org.mule.runtime.module.deployment.internal.DefaultArtifactDeployer.deploy(DefaultArtifactDeployer.java:33) ~[mule-module-deployment-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.deployArtifact(DefaultArchiveDeployer.java:273) [mule-module-deployment-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.deployExplodedApp(DefaultArchiveDeployer.java:262) [mule-module-deployment-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.deployExplodedArtifact(DefaultArchiveDeployer.java:89) [mule-module-deployment-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.deployExplodedArtifact(DefaultArchiveDeployer.java:40) [mule-module-deployment-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.internal.DeploymentDirectoryWatcher.deployExplodedApps(DeploymentDirectoryWatcher.java:244) [mule-module-deployment-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.internal.DeploymentDirectoryWatcher.start(DeploymentDirectoryWatcher.java:145) [mule-module-deployment-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.internal.MuleDeploymentService.start(MuleDeploymentService.java:126) [mule-module-deployment-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.launcher.MuleContainer.start(MuleContainer.java:193) [mule-module-launcher-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_131]   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_131]   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_131]   at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_131]   at org.mule.runtime.module.reboot.MuleContainerWrapper.start(MuleContainerWrapper.java:47) [mule-module-boot-ee-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.tanukisoftware.wrapper.WrapperManager$11.run(WrapperManager.java:4242) [wrapper-3.5.29.jar:3.5.29]  Caused by: org.mule.runtime.api.exception.MuleRuntimeException: org.mule.runtime.deployment.model.api.DeploymentInitException: NullPointerException:   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:943) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.DeployableArtifactWrapper.executeWithinArtifactClassLoader(DeployableArtifactWrapper.java:110) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.DeployableArtifactWrapper.init(DeployableArtifactWrapper.java:66) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.internal.DefaultArtifactDeployer.deploy(DefaultArtifactDeployer.java:23) ~[mule-module-deployment-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   ... 14 more  Caused by: org.mule.runtime.deployment.model.api.DeploymentInitException: NullPointerException:   at org.mule.runtime.module.deployment.impl.internal.application.DefaultMuleApplication.doInit(DefaultMuleApplication.java:205) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.application.DefaultMuleApplication.init(DefaultMuleApplication.java:171) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.lambda$withContextClassLoader$10(ClassUtils.java:939) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:162) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:992) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:958) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:938) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.DeployableArtifactWrapper.executeWithinArtifactClassLoader(DeployableArtifactWrapper.java:110) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.DeployableArtifactWrapper.init(DeployableArtifactWrapper.java:66) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.internal.DefaultArtifactDeployer.deploy(DefaultArtifactDeployer.java:23) ~[mule-module-deployment-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   ... 14 more  Caused by: org.mule.runtime.core.api.config.ConfigurationException: java.lang.NullPointerException (org.mule.runtime.api.exception.MuleRuntimeException)   at org.mule.runtime.core.config.builders.AbstractConfigurationBuilder.configure(AbstractConfigurationBuilder.java:43) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.config.builders.AbstractResourceConfigurationBuilder.configure(AbstractResourceConfigurationBuilder.java:75) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.artifact.SpringArtifactConfigurationProcessor.createArtifactContext(SpringArtifactConfigurationProcessor.java:36) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.ArtifactContextBuilder$1.configure(ArtifactContextBuilder.java:373) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.context.DefaultMuleContextFactory$1.configure(DefaultMuleContextFactory.java:88) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.context.DefaultMuleContextFactory.doCreateMuleContext(DefaultMuleContextFactory.java:217) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.context.DefaultMuleContextFactory.createMuleContext(DefaultMuleContextFactory.java:82) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.ArtifactContextBuilder.lambda$build$1(ArtifactContextBuilder.java:396) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:162) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:992) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:958) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.ArtifactContextBuilder.build(ArtifactContextBuilder.java:329) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.application.DefaultMuleApplication.doInit(DefaultMuleApplication.java:198) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.application.DefaultMuleApplication.init(DefaultMuleApplication.java:171) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.lambda$withContextClassLoader$10(ClassUtils.java:939) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:162) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:992) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:958) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:938) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.DeployableArtifactWrapper.executeWithinArtifactClassLoader(DeployableArtifactWrapper.java:110) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.DeployableArtifactWrapper.init(DeployableArtifactWrapper.java:66) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.internal.DefaultArtifactDeployer.deploy(DefaultArtifactDeployer.java:23) ~[mule-module-deployment-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   ... 14 more  Caused by: org.mule.runtime.api.exception.MuleRuntimeException: java.lang.NullPointerException   at org.mule.runtime.config.spring.MuleArtifactContext.createApplicationModel(MuleArtifactContext.java:240) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.MuleArtifactContext.<init>(MuleArtifactContext.java:188) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.MuleArtifactContext.<init>(MuleArtifactContext.java:144) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.SpringXmlConfigurationBuilder.doCreateApplicationContext(SpringXmlConfigurationBuilder.java:152) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.SpringXmlConfigurationBuilder.createApplicationContext(SpringXmlConfigurationBuilder.java:138) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.SpringXmlConfigurationBuilder.doConfigure(SpringXmlConfigurationBuilder.java:103) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.config.builders.AbstractConfigurationBuilder.configure(AbstractConfigurationBuilder.java:39) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.config.builders.AbstractResourceConfigurationBuilder.configure(AbstractResourceConfigurationBuilder.java:75) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.artifact.SpringArtifactConfigurationProcessor.createArtifactContext(SpringArtifactConfigurationProcessor.java:36) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.ArtifactContextBuilder$1.configure(ArtifactContextBuilder.java:373) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.context.DefaultMuleContextFactory$1.configure(DefaultMuleContextFactory.java:88) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.context.DefaultMuleContextFactory.doCreateMuleContext(DefaultMuleContextFactory.java:217) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.context.DefaultMuleContextFactory.createMuleContext(DefaultMuleContextFactory.java:82) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.ArtifactContextBuilder.lambda$build$1(ArtifactContextBuilder.java:396) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:162) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:992) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:958) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.ArtifactContextBuilder.build(ArtifactContextBuilder.java:329) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.application.DefaultMuleApplication.doInit(DefaultMuleApplication.java:198) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.application.DefaultMuleApplication.init(DefaultMuleApplication.java:171) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.lambda$withContextClassLoader$10(ClassUtils.java:939) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:162) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:992) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:958) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:938) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.DeployableArtifactWrapper.executeWithinArtifactClassLoader(DeployableArtifactWrapper.java:110) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.DeployableArtifactWrapper.init(DeployableArtifactWrapper.java:66) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.internal.DefaultArtifactDeployer.deploy(DefaultArtifactDeployer.java:23) ~[mule-module-deployment-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   ... 14 more  Caused by: java.lang.NullPointerException   at java.util.Properties$LineReader.readLine(Properties.java:434) ~[?:1.8.0_131]   at java.util.Properties.load0(Properties.java:353) ~[?:1.8.0_131]   at java.util.Properties.load(Properties.java:341) ~[?:1.8.0_131]   at org.mule.runtime.config.spring.dsl.model.ApplicationModel.configurePropertyPlaceholderResolver(ApplicationModel.java:436) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.dsl.model.ApplicationModel.<init>(ApplicationModel.java:316) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.MuleArtifactContext.createApplicationModel(MuleArtifactContext.java:238) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.MuleArtifactContext.<init>(MuleArtifactContext.java:188) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.MuleArtifactContext.<init>(MuleArtifactContext.java:144) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.SpringXmlConfigurationBuilder.doCreateApplicationContext(SpringXmlConfigurationBuilder.java:152) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.SpringXmlConfigurationBuilder.createApplicationContext(SpringXmlConfigurationBuilder.java:138) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.SpringXmlConfigurationBuilder.doConfigure(SpringXmlConfigurationBuilder.java:103) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.config.builders.AbstractConfigurationBuilder.configure(AbstractConfigurationBuilder.java:39) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.config.builders.AbstractResourceConfigurationBuilder.configure(AbstractResourceConfigurationBuilder.java:75) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.config.spring.artifact.SpringArtifactConfigurationProcessor.createArtifactContext(SpringArtifactConfigurationProcessor.java:36) ~[mule-module-spring-config-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.ArtifactContextBuilder$1.configure(ArtifactContextBuilder.java:373) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.context.DefaultMuleContextFactory$1.configure(DefaultMuleContextFactory.java:88) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.context.DefaultMuleContextFactory.doCreateMuleContext(DefaultMuleContextFactory.java:217) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.context.DefaultMuleContextFactory.createMuleContext(DefaultMuleContextFactory.java:82) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.ArtifactContextBuilder.lambda$build$1(ArtifactContextBuilder.java:396) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:162) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:992) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:958) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.ArtifactContextBuilder.build(ArtifactContextBuilder.java:329) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.application.DefaultMuleApplication.doInit(DefaultMuleApplication.java:198) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.application.DefaultMuleApplication.init(DefaultMuleApplication.java:171) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.lambda$withContextClassLoader$10(ClassUtils.java:939) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:162) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:992) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:958) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:938) ~[mule-core-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.DeployableArtifactWrapper.executeWithinArtifactClassLoader(DeployableArtifactWrapper.java:110) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.impl.internal.artifact.DeployableArtifactWrapper.init(DeployableArtifactWrapper.java:66) ~[mule-module-deployment-model-impl-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   at org.mule.runtime.module.deployment.internal.DefaultArtifactDeployer.deploy(DefaultArtifactDeployer.java:23) ~[mule-module-deployment-4.0.0-SNAPSHOT.jar:4.0.0-SNAPSHOT]   ... 14 more  {code}    Sample configuration:  {code:xml}  <context:property-placeholder location=missing.properties />  {code}",Bug,Critical,Resolved,"2017-04-21 21:31:12","2017-04-21 20:31:12",4
Mule,"Integration test must not use legacy message API","There are many integration test cases that use the legacy message API as part of the test logic.   For example, many tests used inbound or outbound properties to provide/return information.   Those tests must be migrated to avoid using that API, or move to the compatibility module",Task,Major,New,"2017-04-21 19:56:24","2017-04-21 18:56:24",4
Mule,"Group already declared error when declared only once","When building an Extension with @ParameterGroup(showInDsl=true) for a parameter and a connection provider of the same type, an error is shown with the following information:    The operation:      The connection provider:  ",Bug,Critical,Closed,"2017-04-21 17:58:51","2017-04-21 16:58:51",3
Mule,"Create archetype for SDK extensions.","Create a Maven Archetype for SDK extensions, this way users can scaffold a project from scratch and start working on it.","Enhancement Request",Critical,Closed,"2017-04-21 17:54:37","2017-04-21 16:54:37",8
Mule,"ParameterGroup validation is not taking into account the showInDsl attribute","If you have 2 or more parameter groups of the same type, and you mark all to be shown in the DSL, the extension doesn't compile.    Method      The error shown is:      Since the second POJO is marked with the @ParameterGroup(showInDsl = true), no parameters with repeated names should be reported",Bug,Major,Closed,"2017-04-21 17:49:00","2017-04-21 16:49:00",3
Mule,"MuleLoggerContext: getLogger inconsistent to hasLogger","With MULE-9457 the method    was overridden but not      Additionally the naming in the Logger Map was changed.    Log4j2 original:  LoggerContextKey.create(name) = com.company...YourClass.org.apache.logging.log4j.message.ParameterizedMessageFactory    MuleSoft:  com.company...YourClass    This yields to hasLogger(name) returning false always.    Either update name in the map to LoggerContextKey.create(name) or override hasLogger as well.",Bug,"To be reviewed",Closed,"2017-04-21 15:50:16","2017-04-21 14:50:16",1
Mule,"JMS publish and receive operation should be non-blocking","This is lack of functionality as this is supported in 3.8",Bug,Blocker,Closed,"2017-04-21 15:27:21","2017-04-21 14:27:21",8
Mule,"Rename on-error-continue so it's clear flow does not continue with next processor","Also means we can implement real continue later as is.",Bug,"To be reviewed",Closed,"2017-04-21 15:14:47","2017-04-21 14:14:47",2
Mule,"JMS Error not returned in response","When an error is thrown by the JMS extension, you only get an error message but not the real cause of the error, meaning it's not useful for the user.  For example, using the following flow:        Will throw the following error *to the console* when no message is available:        But the *HTTP response* with error code 500 only contains the following:        The same behavior is seen in other operations.",Bug,Major,Closed,"2017-04-21 14:46:22","2017-04-21 13:46:22",1
Mule,"Refactor use of EventContext to simplify","Refactor use of EventContext to simplify    Currently, Flow.process() creates child context and this makes things messy and unclear. This should be inverted so it's the component that needs the child context that creates it.","Enhancement Request",Major,Closed,"2017-04-21 10:22:34","2017-04-21 09:22:34",4
Mule,"JMS connector fails to receive CursorStreamProvider","JMS Connector provider does not work with Cursor Streams  The following configuration fails:    ",Bug,Blocker,Closed,"2017-04-20 21:34:58","2017-04-20 20:34:58",0
Mule,"NotificationUtils not checking for null parentElement","Since the fix done in MULE-11358, repeated children will have null MessageProcessorPathElement as Parent. So, in NotificationUtils.addMessageProcessorPathElements, there could appear a parentElement as null (coming from AbstractInterceptingMessageProcessorBase), which should be checked.     The processors will still have path setted because this only happens to duplicates. ",Bug,Critical,Resolved,"2017-04-20 18:49:58","2017-04-20 17:49:58",0
Mule,"Ensure that Notifications provides a copy of the MuleEvent to avoid thread access problems.","Fully synchronous flow that mutates message can fail with IllegalStateException if a notification handler reads a message property.    This happens because accessing properties in a notification listener resets the owner thread of the message, and then when the flow attempts to mutate a properties it fails because it's not the owner thread.  The behaviour is documented in org.mule.api.ThreadSafeAccess    Two potential solutions:  - Relax or disable current access policy on message. (this may have risks)  - Ensure that all notification listeners that access message properties copy the message first.",Bug,"To be reviewed",Resolved,"2017-04-20 17:37:34","2017-04-20 16:37:34",4
Mule,"Provide support to declare typed restrictions on Scopes models","There are some scopes that only make sense within other specific ones. This is the case of the error-handler within a flow or try, or the on-error elements within an error-handler. There is however no way to indicate this in the extension model.","Enhancement Request",Critical,Closed,"2017-04-20 16:47:50","2017-04-20 15:47:50",5
Mule,"Migrate testing namespaces to plugins","There are namespaces used for testing, i.e.: *mule-test.xsd*, The functionality provided by such namespaces must be migrated to a plugin and use the new parsers     Break the dependency of the classes in the test plugin with the *Component* interface.",Task,Critical,Done,"2017-03-25 23:40:38","2017-03-25 23:40:38",2
Mule,"AllowInlineDefinition is true for interfaces without any known implementation","If the user doesn't declare an XmlHint for the parameter, we use the default, which leads to an inconsistent Extension model that declares that an interface without any known implementation can be declared as an inline parameter.    Example of the `dataSourceRef` parameter of Db:    ",Bug,Major,Closed,"2017-04-19 19:52:21","2017-04-19 18:52:21",3
Mule,"ArtifactClassLoaderRunner - Change plugin export resolver to look for plugin.json descriptor","Migrate the runner to use new descriptor instead of plugin.properties",Bug,Minor,Resolved,"2016-10-08 14:25:11","2016-10-08 13:25:11",2
Mule,"Remove endorsed XML libraries","We've been using Apache Xalan with Xerces for a long time, but Java 1.7 (and 1.8) provides newer alternatives with more security features.    See this post (maybe a bit exaggerated, but the general idea is probably correct):  http://www.odi.ch/weblog/posting.php?posting=689    The purpose of this issue is to determine how many tests are broken, and if the migration is easy then doing it. Regarding APIs, all standard factories should be compatible but comparisons of XML fragments in our tests may fail due to differences in spacing, order, namespaces, etc.    Conclusions:  - It was possible to remove them.  - We are still using Woodstox XMLInputFactory and Saxon TransformerFactory in some places, but explicitly.  - licm (License Manager) required modifications.  - By including Woodstox or Saxon JARs in the classpath we are changing the default XMLInputFactory and TransformerFactory implementations. But as we use them through XMLSecureFactories for security settings, at least in our code we use the Java provided implementations. User applications and other code will use Woodstox/Saxon if loaded, and it can't be changed unless we remove their META-INF/service providers.",Task,Major,Done,"2017-04-18 20:09:43","2017-04-18 19:09:43",8
Mule,"Exclusive Optional parameters are not communicated for parameter groups inside POJOs","*Exclusive Optional parameters are not communicated for parameter groups inside POJOs*    * The information about *Exclusive Optional* parameters is communicated in the ParameterGroupModel, due that for Types this model doesn't exist, the information is lost.  * This happens for {{TypeClassifier}} of DB Connector.  ",Bug,Major,Closed,"2017-04-18 20:08:33","2017-04-18 19:08:33",5
Mule,"JMS should publish messages with String Representable MimeTypes as StringMessages","JMS extension publishes a message based on an application/json payload as StreamMessage with MM_MESSAGE_CONTENT_TYPE property application/json.     When that message is consumed the mimeType returned is an application/json that wraps an ArrayList that contains the published application/json content instead.    *Application  to reproduce*    {code:xml}  App details    <?xml version=1.0 encoding=UTF-8?>    <mule xmlns:httpn=http://www.mulesoft.org/schema/mule/httpn        xmlns:ee=http://www.mulesoft.org/schema/mule/ee/core        xmlns:doc=http://www.mulesoft.org/schema/mule/documentation        xmlns:jms=http://www.mulesoft.org/schema/mule/jms        xmlns=http://www.mulesoft.org/schema/mule/core        xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance xsi:schemaLocation=  http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd  http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd  http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd  http://www.mulesoft.org/schema/mule/httpn http://www.mulesoft.org/schema/mule/httpn/current/mule-httpn.xsd>        <flow name=amq-publish >          <httpn:listener config-ref=HTTP_Listener_config path=/utils/amq-publish doc:name=Listener allowedMethods=get/>          <ee:transform doc:name=Transform Message>              <ee:set-payload><![CDATA[%dw 2.0  %output application/json  ---  {   Id: 'scheduler IdValue',   channel : 'channelValue',   operationType : 'Contact',   createdDate : 'createdDateValue',   replayId: 'replayIdValue'  }]]></ee:set-payload>          </ee:transform>          <jms:publish config-ref=JMS_Config destination=jmsTestUtils  doc:name=Publish>              <jms:message-builder >                  <jms:body>#[payload]</jms:body>              </jms:message-builder>          </jms:publish>      </flow>        <flow name=amq-consume >          <httpn:listener config-ref=HTTP_Listener_config path=/utils/amq-consume doc:name=Listener allowedMethods=get/>          <jms:consume config-ref=JMS_Config destination=jmsTestUtils doc:name=Consume/>          <ee:transform doc:name=Transform Message >              <ee:set-payload ><![CDATA[%dw 2.0  %output application/json  ---  payload]></ee:set-payload>          </ee:transform>      </flow>    </mule>  {code}    *Console error*    ","Enhancement Request",Blocker,Closed,"2017-04-18 19:14:57","2017-04-18 18:14:57",8
Mule,"Fix HTTP transport namespace to be different from the one in the connector","Since both have the same namespace, it's not possible to rename the http connector namespace from httpn to http",Task,Blocker,Done,"2017-04-18 19:10:32","2017-04-18 18:10:32",4
Mule,"Embedded container should run based on an app","The embedded container should run based on the application concept.   That could either be:    * a exploded application folder structure    * a jar file ","Enhancement Request",Blocker,Closed,"2017-04-18 18:28:36","2017-04-18 17:28:36",4
Mule,"Memory leak in embedded container","Successive runs of the embedded container consumes the heap, please ask for a heap dump as its size is over 6 gb",Bug,Blocker,Closed,"2017-04-18 17:16:04","2017-04-18 16:16:04",0
Mule,"When objects form a plugin are being registered, the context classloader is the one from the app instead of the plugin","For non-extension plugins, it should be enforced that the classloader to use when loading plugin classes and resources (for instance, when putting those in the registry) is the classloader of the plugin. Currently it is the classloader for the app,    This is currently worked around by exporting additional stuff from said plugins os its internal stuff can be loaded from the appllication classloader. Those exports should be trimmed as part of this fix.  ",Bug,Blocker,Closed,"2017-03-21 22:27:42","2017-03-21 22:27:42",8
Mule,"Request hangs and no error is logged when a fatal exception is thrown in a exception strategy","Exceptions being throw while processing a request are not properly logged depending on the execution context.  When an exception is thrown inside a exception strategy, no information will be logged, making very difficult to understand what is going on.    To reproduce, take ExceptionStrategyCommonScenariosTestCase and update PreservePayloadExceptionStrategy#handleException method to throw a NoClassDefFoundError. Then verify that no error is logged",Bug,Critical,Resolved,"2017-04-18 02:55:47","2017-04-18 01:55:47",4
Mule,"Review how to handle attributes of different types","Now that the Message has a TypedValue for the Attributes we have to review if is still valid to always convert it to json and set the dataType as application/java.",Task,Major,Done,"2017-04-17 22:18:31","2017-04-17 21:18:31",4
Mule,"Migrate merlin-subscriber-mock app to Mule 4","Components used:  - dw:transform-message  - jms:inbound-endpoint  - http:request  - logger    Configs used:  - jms:activemq-connector  - http:request-config  - db:mysql-config    App design:  - Multiple Mule Configuration files  - Configs on Global Mule Configuration file  - Placeholders    Chaining:  dw:transform-message > db:insert > logger  jms:inbound-endpoint > logger > set-variable > flow-ref  http:request > dw:transform-message > logger",Task,Major,Done,"2017-04-17 21:45:44","2017-04-17 20:45:44",8
Mule,"Introduce the concept of FlowListener","Advanced operations need to  be able to be notified of the owning flow's result, in order to do log, audit, resource deallocation, etc.    Currently, the mechanism for doing that is intercepting message processors, which are evil.    We need a new mechanism which doesn't require intercepting and instead leverages the new callbacks from the reactive engine","Enhancement Request",Blocker,Closed,"2017-04-17 21:44:23","2017-04-17 20:44:23",3
Mule,"SDK: Rename UseConfig to Config","SDK: Rename UseConfig to Config",Task,Critical,Done,"2017-04-17 20:40:58","2017-04-17 19:40:58",1
Mule,"FtpConnector should take into account that Files could have been consumed","If the files in an FTP Server are consumed between it is checked wether it is a directory or a File (e.g. an external Ftp Client), then the block in FtpConnector:670 is executed resulting in a ArrayIndexOutOfBoundException",Bug,Minor,Resolved,"2017-04-17 20:22:11","2017-04-17 19:22:11",0
Mule,"Transaction completion","Design a way to be notified when an EventContext is completed. This would allow Tooling Runtime Client to aggregate notifications at that point.",Task,"To be reviewed",New,"2017-04-17 19:34:02","2017-04-17 18:34:02",8
Mule,"Bind Authentication/Principal to DataWeave Context","Authentication/Principal object can be read or written from a SDK extension, but not from DataWeave. It would be good to bind Authentication/Principal to a DataWeave variable",Task,"To be reviewed",Done,"2017-04-17 19:13:52","2017-04-17 18:13:52",4
Mule,"Provide support for scope as top level elements","Extension model should provide support to flag scope elements as top level elements",Bug,Critical,Resolved,"2017-04-17 18:51:53","2017-04-17 17:51:53",5
Mule,"'File already exists' exception when building extension","If you build an extension using the extensions-maven-plugin, you often get a File already exists message, unless you perform a Maven clean.  The plugin should overwrite the generated files to avoid this error.    Log:  ",Bug,Major,Closed,"2017-04-17 18:42:06","2017-04-17 17:42:06",1
Mule,"Allow JavaComponent/ScriptComponent processing type to be configured","Currently we assume all java components are blocking just in case, but this may not be the case. We may want to consider supporting configurable processing type for components.  Either this or we need to show that scheduling is optimised so that the overhead is minimal.","Enhancement Request","To be reviewed",Open,"2017-04-17 16:36:41","2017-04-17 15:36:41",8
Mule,"Nested MessageProcessors post notifications are triggered within the error message","When an error occurs in the flow the post notifications for the message processor where the error was caused is notified but also for the next message processors in the flow are also being notified within the same error.",Bug,Critical,Closed,"2017-04-17 16:34:44","2017-04-17 15:34:44",10
Mule,"Reduce overhead of debug log statements by using isDebugEnabled","Currently logging in EventContext implementations uses getClass(), without a isDebugEnabled contain creating unnecessary overhead.","Enhancement Request",Major,Closed,"2017-04-17 16:30:54","2017-04-17 15:30:54",2
Mule,"Improve performance of Blocking scheduler","In a simple HTTP Echo scenario with a low-latency blocking component switching out our blocking scheduler implementation for project reactors Schedulers.elastic() appears to give a very significant improvement in TPS.  24K TPS -> 36K TPS.    Create micro-benchmarks and improve performance of our implementation so that if it is used in a flow with low-latency blocking components e.g. JavaComponent there isn't a significant impact on performance.","Enhancement Request",Major,Open,"2017-04-17 16:25:49","2017-04-17 15:25:49",8
Mule,"Eliminate thread contention due to use of java.lang.ClassLoader#getSystemClassLoader in ArtifactAwareContextSelector","I have not yet measured the raw impact of this contention, but ideally it should not even exist,","Enhancement Request",Major,Closed,"2017-04-17 16:21:33","2017-04-17 15:21:33",2
Mule,"Create the concept of Literal","Add a way to obtain parameter values as they were entered in the DSL. No transformation nor expression evaluation.    When used in configs, those parameters should not cause the config to be dynamic, even if values are expressions","Enhancement Request",Blocker,Closed,"2017-04-17 12:32:37","2017-04-17 11:32:37",3
Mule,"OpUx transformation outputs blank value","In a flow which payload is a list of maps, the following works well:        One file is written per map in the list, in csv mode.     This other chain should be perfectly equivalent:        However, the above outputs empty files only",Bug,Critical,Closed,"2017-04-14 14:35:58","2017-04-14 13:35:58",3
Mule,"Review if the approach used to separated mule API from the implementation is the right one","Mule API has org.mule.runtime.api.message.Message interface. Instances of that class are created using a org.mule.runtime.api.message.AbstractMuleMessageBuilderFactory implementation which is found via SPI.  Mule API jar does not contain any implementation of the that factory.   In a previous version of  org.mule.runtime.api.message.Message class, there was a NULL_MESSAGE constant which, in order to be built, it required a builder to be available on the class path.  Because of some change required to provide a privileged API, the container classloader has to be used to find the message factory, instead of using the current thread's context classloader. This change, made visible a problem with the API/implementation approach as under some scenarios, there is no message builder factory available.  For example, the extensions maven plugin used to build SDK extensions, depends on Mule API only. When extensions has org.mule.runtime.api.message.Message on their API, then the plugin will need to load that class to do some processing. This will fail, as before, if there is any message constant that require to be build on the Mule API side.    For these reasons, will have to review if the approach used to separated mule API from the implementation is the right one.",Task,"To be reviewed",Done,"2017-04-14 00:50:47","2017-04-13 23:50:47",2
Mule,"Add Soap Connect Extension Validators","Add validators for Soap Connect:   E.g: cannot use @Soap with @Configuration.","Enhancement Request","To be reviewed",Closed,"2017-04-12 22:52:26","2017-04-12 21:52:26",3
Mule,"Improve error messages for HTTP","Currently, error messages for HTTP are not very good. E.g. 404 gives you:      Instead it should be Resource http://foo.com/xyz was not found (404).    We should evaluate all the HTTP error messages to make sure they're clear and give the necessary context.",Bug,Critical,Closed,"2017-04-12 22:47:53","2017-04-12 21:47:53",4
Mule,"Implement connectivity testing for Soap Connect extensions","Implement connectivity testing for Soap Connect extensions:  Currently, the ForwardingSoapClient doesn't provide a way to validate the connections because the Soap Service doesn't provide a way. The same happens in the WSC.    ","Enhancement Request",Major,Closed,"2017-04-12 16:56:55","2017-04-12 15:56:55",8
Mule,"SedaStageInterceptingMessageProcessor thread should clear RequestContext ","The thread in SedaStageInterceptingMessageProcessor does not clear the RequestContext, so MuleEvents could be leaked in the ThreadLocalMap (since the thread runs until application is stopped).  Although the thread runs in a WorkerContext, it does not stops running until the application stops, so RequestContext.clear is only executed after that.     ",Bug,Critical,Resolved,"2017-04-12 14:39:24","2017-04-12 13:39:24",0
Mule,"Support equals and hashcode in Location object","Support equals and hashcode in Location object",Task,Major,Done,"2017-04-11 20:34:46","2017-04-11 19:34:46",0
Mule,"Don't map variables as single bindings","We are mapping variables in two ways today: `variables.var` and `var`. However, while DW will return null in the first, it will fail miserably on the second. Thus, we need to support only the first and as `vars.var`.    This task involves removing the mapping of variables as single bindings and the variables keyword in BindingContextUtils, as well as adapting all tests cases currently using such expressions.",Task,Critical,Done,"2017-04-11 18:09:44","2017-04-11 17:09:44",4
Mule,"App hangs when there is a dw evaluation error in the error-response","When there is an evaluation error in the error-response of the listener, for example when evaluating inexistent variables trying to set a value to the httpStatus, the app hangs.  Steps to reproduce:  Deploy the following config, and hit the endpoint.      As a result, the set-variable fails, trowing an exception. Then the error-response fails to evaluate the expression and the app hangs. These are the logs of that unhandled behaviour:  ",Bug,Critical,Closed,"2017-04-11 17:54:44","2017-04-11 16:54:44",8
Mule,"Avoid types without ID in the type catalog","Avoid types without ID in the type catalog","Enhancement Request",Blocker,Closed,"2017-04-10 23:50:24","2017-04-10 22:50:24",3
Mule,"Review QName and Infrastructure model properties","Review QName and Infrastructure model properties","Enhancement Request",Blocker,Closed,"2017-04-10 20:01:43","2017-04-10 19:01:43",5
Mule,"Make Infrastructure and QName model properties public","Make Infrastructure and QName model properties public","Enhancement Request",Blocker,Closed,"2017-04-10 19:09:24","2017-04-10 18:09:24",2
Mule,"Region class loader must check that different artifacts are not exporting the same package","Region class loader maintains a mapping that indicates which class loader must be used to load a given package.   Every time a class loader is added to the region, this class loader's exported packages are added to the map, overriding any previous mapping for that particular package.  This is a bug as packages exported by an app can be overridden by packages exported on a plugin. In particular, this problem was observed when migrating test using test extensions  to run with the isolated test runner. In particular, extensions export classes from org.mule.tck.message and other packages, which are exported by the test (aka application)  However, this bug cannot be easily fixed as other modules depend on it in order to work. Extensions have bot unit and functional test cases in the same module. This causes that the test export the same package as the production code (as unit tests are written on the same package). Then, when the extension plugin classloader is added to the test region, the region mapping is updated with that classloader.",Task,Blocker,Done,"2017-04-10 17:49:43","2017-04-10 16:49:43",8
Mule,"Migrate AbstractTlsRestrictedProtocolsAndCiphersTestCase subclasses to use the isolated test runner","AbstractTlsRestrictedProtocolsAndCiphersTestCase and subclasses are still using ExtensionFunctionalTestCase which does not run with isolation.  I tried to migrate it, but this test relies on running in the same classloader as org.mule.runtime.core.api.security.tls.TlsProperties class, which has to be the same classloader as the one running the test, in order to overwrite the resource used to configure TLS.  These tests should use some kind of configuration instead of having such constraint.",Task,Minor,New,"2017-04-10 17:41:12","2017-04-10 16:41:12",4
Mule,"Make embedded test case be able to access a maven repo with mule artifacts","This is so if there's a maven test case using an app with a dependency not declared in the pom file of the embedded test case, it will be able to retrieve it from the public maven repo of mule",Task,Critical,Done,"2017-04-10 16:06:41","2017-04-10 15:06:41",0
Mule,"AbstractAsyncRequestReplyRequester should not add correlation sequence to correlationID","If request reply is inside a component that adds correlation sequence (e.g. for each), then the replied message cannot be recieved, because it is expecting the message without the correlation sequence added.",Bug,Major,Resolved,"2017-04-07 20:01:37","2017-04-07 19:01:37",0
Mule,"Provide a way to give a name to the application in embedded mode","Embedded container is creating a folder structure to deploy the temp application in order to start the container.     It does so and it also creates the folders apps/app.     It then uses this app folder to create the application descriptor in: org.mule.runtime.module.deployment.impl.internal.application.ApplicationDescriptorFactory#loadFromJsonDescriptor    This translates in the logs as       The folder name inside apps should be related to a parameter send to the embedded container factory or taken from the name mule-application.json:      ",Bug,Critical,Closed,"2017-04-07 19:04:02","2017-04-07 18:04:02",0
Mule,"Review error location mechanism (Located vs Messaging exceptions)","Right now the location data to print when an error occurs is gathered in 2 ways:  * via injection when a MessagingException is generated  * explicitly by using a LocatedMuleException    We need to review whether this is still needed since any exceptions should go through the ME and so have the data injected.",Task,Minor,New,"2017-04-07 18:55:53","2017-04-07 17:55:53",2
Mule,"Remove async Until Successful functionality and make sync until successful non blocking","- async until-successful is removed from mule core DSL instead flow A -> JMS/VM -> Flow B is recommended. (edited)  - we could not put async until-successful in compatibility, but auto-migration to <async><until-successful/><async/> isn’t quite the same functionally (no persistence), and auto-migration to flow+vm+flow may not be trivial  - sync until-successful need to be kept until we replace it with retry in <try> in 4.x. In the mean time make it non-blocking.","Enhancement Request",Critical,Resolved,"2017-04-07 18:37:15","2017-04-07 17:37:15",8
Mule,"Remove old fallback mechanism for TransformerFactory implementations","In various places we have checks for exceptions when creating a TransformerFactory and falling back to a specific implementation (the JDK5 one).    This made some tests work in the past, before they started using the same xalan implementation that we use in standalone (see MULE-11303). But they shouldn't be required now. Also it's not a clean way to handle the case since the fallback mechanism affects all successive creation of transformer factories in the rest of the JVM.    So this code will be removed. Also usages of ForceXalanTransformerFactory in tests is redundant.",Task,Minor,Done,"2017-04-07 17:34:31","2017-04-07 16:34:31",4
Mule,"Add Allure constants for Feature and Story Annotations","Add Allure constants for Feature and Story Annotations",Task,Minor,Done,"2017-04-07 13:49:03","2017-04-07 12:49:03",1
Mule,"Review extensions dependencies","We must review all extensions dependencies to ensure we remove any unnecessary things that will make the final application package too heavy.  This must be done on all extensions prior to Beta release.",Task,Major,Done,"2017-04-07 13:46:15","2017-04-07 12:46:15",8
Mule,"Migrate crm-notification-process app to Mule 4","h2. 3.x app analysis   h3. Components used:  - dw:transform-message  - logger  - flow-ref  - sub-flow  - choice  - catch-exception-strategy  - sfdc:subscribe-topic  - set-variable  - choice-exception-strategy    h3. Configs used:  - sfdc:config  - jms:activemq-connector  - http:listener-config  - objectstore:config  - db:mysql-config    h3. App design  - Multiple Mule Configuration files  - Configs on Global Mule Configuration file  - Placeholders    h3. Chaining  - dw:transform-message > logger > flow-ref  - choice > jms:outbound-endpoint  - sfdc:subscribe-topic > logger > set-variable > flow-ref > choice-exception-strategy    h2. Docs  [Dashboard|https://docs.google.com/spreadsheets/d/1-lHnAE4la6jgp5hi3V8kcdUpG1yL6OcWTLkdKGNgKmA/edit#gid=0]  [Issues to be validated|https://docs.google.com/document/d/1nz3YEJHQ6nDmsmELUo0GTEZhdR4sf6aQCZXqgIDjMDE/edit#heading=h.3o3yabnpvins]  [nasdaq poc repo|https://github.com/mulesoft-consulting/nasdaq-poc]",Task,Major,Done,"2017-04-06 16:28:05","2017-04-06 15:28:05",16
Mule,"Log4j dependencies issues in embedded container","When having the embedded-api as a dependency. one needs to put log4j dependencies such as:        For lo4j to work. This should not be necessary since the embedded container should provide all the log4j functionality.",Bug,Minor,Resolved,"2017-04-06 16:15:01","2017-04-06 15:15:01",4
Mule,"Echo application is blocked reserving and unreserving direct memory, which also causes OOM.","Profilling the echo application with default configuration with the http connector, it shows a big contention when freeing memory, some allocating and a small percentaje of the requests fails do OOM error, looks like this is related to direct-memory which is not used by the streaming capability, but may be releated.",Bug,Blocker,Closed,"2017-04-06 15:02:24","2017-04-06 14:02:24",8
Mule,"Extensions documenter doesn't document correctly Message Sources","*Extensions documenter doesn't document correctly Message Sources*    * Missing parameter description text  * Missing {{@Summary}} text",Bug,Major,Closed,"2017-04-05 22:56:29","2017-04-05 21:56:29",2
Mule,"Streaming config is not validated to be coherent","It is currently possible to do things like this:      * It is possible to have an initial size bigger than the max size  * An increment size greater than the maxSize  * test any other crazy combinations you can think off",Bug,Major,Closed,"2017-04-05 19:12:41","2017-04-05 18:12:41",1
Mule,"Application extensions should be logged before parsing","When an application is being deployed and parsing fails because of a namespace not being matched, there's no feedback regarding this being because of an error in the config or because the extension that owns the namespace has not been loaded.    When the app is in fact successfully deployed, the runtime does log that information. It should log it before so that these type of errors are easier to troubleshoot",Bug,Critical,Resolved,"2017-04-05 18:56:02","2017-04-05 17:56:02",4
Mule,"Auto paging and cursor iterators should have a getSize()","In 3.x, auto paged iterators used to have a size() method so that MEL could be used to extract the total size. Auto paged iterators and cursor iterators in mule 4 inherit this behaviour. However, for compatibility with the new EL, the method should be renamed to getSize()",Bug,Blocker,Closed,"2017-04-05 18:50:51","2017-04-05 17:50:51",1
Mule,"Non descriptive error message when connected operation doesn't have a provider","When an extension declares an operation with requires a connection, but the extension itself doesn't have any connection provider, the error thrown is not descriptive at all. The error should:    * Be descriptive  * Be thrown in compile time  * Verify that it works with sources too",Bug,Minor,Closed,"2017-04-05 18:48:38","2017-04-05 17:48:38",1
Mule,"Wrong warning logged with simple expression","A simple logging expression such as    produces the following warning in the logs      The message is not only wrong, when it does apply it should only be logged once, not in every simple message (see org.mule.runtime.core.util.OneTimeWarning)",Bug,Critical,Closed,"2017-04-05 18:44:00","2017-04-05 17:44:00",1
Mule,"Path parameter in file:write operation should be required","Should be required",Bug,Blocker,Closed,"2017-04-05 18:39:34","2017-04-05 17:39:34",1
Mule,"Update Jackson Version for Mule 3.8.5","In order to upgrade to the latest Amazon SDK on Cloudhub, minimum Jackson version required is *2.6.6* ",Story,Minor,Done,"2017-04-05 18:17:18","2017-04-05 17:17:18",8
Mule,"Hidden error message in expression evaluation error","When using DataWeave as an expression language, when some types of exceptions are thrown, the error message from DW is hidden, so not useful description of the error is available to the user.     ",Bug,Major,Closed,"2017-04-05 00:07:23","2017-04-04 23:07:23",0
Mule,"Add proxy support for SFTP connector in 3.x","The SFTP connector currently doesn't support proxies, but the implementation offers them so we just have to provide an interface.","Enhancement Request",Critical,Resolved,"2017-04-04 22:16:07","2017-04-04 21:16:07",0
Mule,"Sort URLs used to create the container classloader created on the test runner","URL classification should maintain the order in which the URLs are added to the container class loader created by the test runner.  In particular, the URL for the module under test should be loaded before the URL for the dependencies.","Enhancement Request","To be reviewed",Open,"2017-04-04 21:55:39","2017-04-04 20:55:39",4
Mule,"ExpressionExecutor proxy wraps exceptions causing invalid DW expression to throw error of type UNKNOWN instead of EXPRESSION","An expression for example like: #[invalidExp] which is invalid fails with an error of type UNKNOWN, but it should fail with a EXPRESSION type.    TestCase:        *set-invalid-dw-config.xml* file    ",Bug,Critical,Closed,"2017-04-04 21:38:37","2017-04-04 20:38:37",2
Mule,"HTTP: Allowed methods field missing Summary and Example","HTTP: Allowed methods field missing Summary and Example.    When configuring the connector there is no hint stating that the allowed methods should be passed as a comma separated list of HTTP methods","Enhancement Request",Major,Closed,"2017-04-04 19:58:01","2017-04-04 18:58:01",1
Mule,"Implement off heap object streaming","Add a file store option for object streaming","Enhancement Request",Blocker,Closed,"2017-03-29 20:00:27","2017-03-29 19:00:27",5
Mule,"Fails to parse valid XML config ","Deploy the following application which only contains a Spring bean definition and a file:config component.  Deployment fails with the following error:  {code}  Caused by: org.mule.runtime.api.exception.MuleRuntimeException: org.mule.runtime.deployment.model.api.DeploymentInitException: SAXParseException: cvc-complex-type.2.4.a: Invalid content was found starting with element 'file:config'.  {code}    Note that if you comment either the bean definition or the file:config element, the application deploys successfully. When nothing is commented, deployment fails.    Config:  {code:xml}  <?xml version=1.0 encoding=UTF-8?>  <mule xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance        xmlns=http://www.mulesoft.org/schema/mule/core        xmlns:ss=http://www.springframework.org/schema/security        xmlns:spring=http://www.springframework.org/schema/beans        xmlns:file=http://www.mulesoft.org/schema/mule/file        xsi:schemaLocation=http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd        http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/current/mule-spring-security.xsd          http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd                            http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/file.xsd>        <spring:beans>          <ss:authentication-manager alias=authenticationManager>              <ss:authentication-provider>                  <ss:user-service id=userService>                      <ss:user name=<USER> password=mason authorities=ROLE_ADMIN />                  </ss:user-service>              </ss:authentication-provider>          </ss:authentication-manager>      </spring:beans>            <file:config name=File_Config>              <file:connection workingDir=${mule.home}/apps/parser-bug/>      </file:config>        </mule>  {code}",Bug,Blocker,Closed,"2017-04-03 23:18:42","2017-04-03 22:18:42",1
Mule,"The SDK should communicate to the Expression Manager the expected DataType","*The SDK should communicate to the Expression Manager the expected DataType*  * Nowadays when an extension parameter value is evaluated the AttributeEvaluator doesn't communicate the expected DataType of the evaluation.  * This is required for DW transformation when doing a transformation from and to different MimeTypes.  * We need to take care of the Object/InputStream/(and surely other cases) cases that *SHOULD not* be communicated to prevent non-expected behavior in DW transformations.  * Common POJOs and simple types should be communicated ","Enhancement Request",Blocker,Closed,"2017-04-03 20:43:06","2017-04-03 19:43:06",5
Mule,"Provide a mechanism to start the application with all schedulers stopped","This is to enable MUnit, when creating the Application, to indicate that all sources must be turn-off to avoid:   - poll execution      ",Task,Critical,Done,"2017-04-03 20:21:47","2017-04-03 19:21:47",4
Mule,"Add processing strategy resilience tests","Add tests that process streams of events both success/error and mix","Enhancement Request",Critical,Closed,"2017-04-03 17:16:06","2017-04-03 16:16:06",2
Mule,"Replace XMLGenerationService from tooling client to ArtifactSerializationService","Replace XMLGenerationService from tooling client to ArtifactSerializationService","Enhancement Request",Critical,Closed,"2017-04-03 16:19:43","2017-04-03 15:19:43",3
Mule,"Embedded container fails to resolve version range ","The embedded container brakes with the following exception         When the .M2 repository for that artifact  /Users/damiansima/.m2/repository/org/jruby/jruby-core  Looks like this:        It's not yet clear how I manage to get that .m2, I reckon it was a side effect of studio when my application's pom contained a dependency to mule-module-all.    In either case the container should know how to deal with such errors and worst case scenario end the execution properly and without an aether error.",Bug,"To be reviewed",Resolved,"2017-04-03 16:06:26","2017-04-03 15:06:26",8
Mule,"Add the capability to inject the Transactional Action","*Add the capability to inject the Transactional Action and Type*    ","Enhancement Request",Critical,Closed,"2017-04-03 15:36:32","2017-04-03 14:36:32",8
Mule,"Add support for multiple consumers for JMS Listener","*Add support for multiple consumers for JMS Listener*    * Create a new session per consumer.  * Review the Listener vs Polling Consumer logic  * Review the semaphore implementation to work with multiple consumers","Enhancement Request",Critical,Closed,"2017-04-03 15:28:40","2017-04-03 14:28:40",13
Mule,"Provide support to start server plugins from embedded API","The embedded Mode API should provide support to start a container with Server plugins such as the debugger. ",Bug,Critical,Closed,"2017-04-02 19:00:01","2017-04-02 18:00:01",2
Mule,"Expose DataSenseMetadataCacheProvider in DataSenseService","DataSenseService should expose cached metadata provider APIs.",Task,Major,Done,"2017-03-31 22:37:20","2017-03-31 21:37:20",0
Mule,"Scheduler should not have implicit behaviuor","Currently the following is supported in XML and has implicit behaviour that can only be discovered via docs or running the app.    <flow>    <scheduler>  </flow>    IMO, The scheduler strategy and also ideally the scheduler frequency should both be explicit in XML config and during the configuration UX when a scheduler is used to start a flow.    If we want there to be a default in tooling, so that user sees and accepts a default strategy, rather than being forced to configure one then that make sense, but allowing no strategy to be seen/configured doesn't make sense.     In order to support a default strategy that can be accepted rather than needing to be explicitly chosen we may need to add the ability to hint a default strategy in extension model.","Enhancement Request",Critical,Closed,"2017-03-31 22:03:02","2017-03-31 21:03:02",2
Mule,"Soap Connect: give the capability to create use a custom transport.","The Soap Connect Extensions must provide a way to use a custom transport for sending and retrieving the soap requests.  ","Enhancement Request",Blocker,Closed,"2017-03-31 21:01:57","2017-03-31 20:01:57",8
Mule,"Migrate collection-splitter to new parser in Mule 4 M5","Migrate collection-splitter to new parser in Mule 4 M5",Task,Critical,Done,"2017-03-31 20:55:02","2017-03-31 19:55:02",0
Mule,"SoapConnect: Map Soap Service exceptions to specific errors like WSC.","SoapConnect: Map Soap Service exceptions to specific errors like WSC.","Enhancement Request",Critical,Closed,"2017-03-31 20:45:13","2017-03-31 19:45:13",5
Mule,"Fix AsynchronousUntilSuccessfulProcessingStrategyTestCase","useFailureExpressionIfInputValueHasExceptionPayloadAndFailureExpressionConfigured test fails 1/10 times due to a race condition. The test verifies that mockUntilSuccessfulConfiguration.getFailureExpressionFilter() method was invoked at least once but sometimes a thread calls it after the test does the mockito verify.",Task,Major,Done,"2017-03-31 20:34:22","2017-03-31 19:34:22",4
Mule,"Add Dynamic Metadata resolution support in Soap Connect.","Basically, for a given Service and Operation, we should provide Input and Output types similar to what the WSC provides.    ","Enhancement Request",Blocker,Closed,"2017-03-31 19:48:44","2017-03-31 18:48:44",8
Mule,"Implement Soap Connect - Loader & Runtime ","*THIS ISSUE DOES NOT COVER DYNAMIC METADATA RESOLUTION*    h2. Acceptance Criteria  h2.   Complete and finish the spike on soap connect:    * Create required SOAP EXTENSIONS API interfaces  * Implement runtime executor  * Implement connection pooling mechanism  * Implement extension loader mechanism from a set of WSDL files.  * Add tests (unit & integration)    h2. Spec  h2.   Complete Specification can be found [here|https://docs.google.com/a/mulesoft.com/document/d/1NlNPWXxLL1enUg0Ly1EqzxmNtc03c5JOoS2NPQALXtM/edit?usp=sharing]    ",Task,Blocker,Done,"2017-03-31 19:41:13","2017-03-31 18:41:13",13
Mule,"NullPointerException creating AsyncMessageNotification","A NullPointerException is thrown creating a AsyncMessageNotification as the received flowConstruct is null.    To reproduce run com.mulesoft.mule.test.routing.replyto.ReplyToChainIntegration5TestCase and the attached log should be displayed.",Bug,Critical,Closed,"2017-03-31 16:12:23","2017-03-31 15:12:23",4
Mule,"imap list is returning a List<Result> instead of a List<Message>","Check this is not the case with Pop3 as well. Also check why none of the SDK tests failed.",Bug,Blocker,Closed,"2017-03-31 15:00:46","2017-03-31 14:00:46",5
Mule,"Cleanup API to use ReactiveProcessor instead of publisher function","Cleanup processing strategy API to use ReactiveProcessor instead of publisher function","Enhancement Request",Major,Closed,"2017-03-31 14:13:52","2017-03-31 13:13:52",2
Mule,"Replace use of EventDroppedException for child context","Attempt to remove EventDroppedException","Enhancement Request",Major,Closed,"2017-03-31 14:12:37","2017-03-31 13:12:37",4
Mule,"JMS throws NPE when receiving a message without ContentType","JMS throws NPE when receiving a message without ContentType",Bug,Blocker,Closed,"2017-03-30 21:02:43","2017-03-30 20:02:43",1
Mule,"Remove dead-letter-queue","Remove dead-letter-queue element and related functionality from redelivery-policy and until-successful.",Bug,Major,Closed,"2017-03-30 20:05:36","2017-03-30 19:05:36",2
Mule,"Profile http echo to understand where performance delta is",.,Task,Major,Done,"2017-03-30 18:44:47","2017-03-30 17:44:47",8
Mule,"Remove support for intercepting operations in the SDK","Intercepting operations are evil and we don't need them anymore now that we have super awesome streaming","Enhancement Request",Critical,Closed,"2017-03-30 16:33:10","2017-03-30 15:33:10",3
Mule,"PagingProvider should support sticky connections","Although not the most frequent case, some API's require that the same connection that got the first page is the one requiring the second one. An example of that is JDBC.    PagingProvider should have an option to hint that the same connection should always be used. This must be an optional setting and the default should be that different connections are supported.","Enhancement Request",Blocker,Closed,"2017-03-30 16:28:57","2017-03-30 15:28:57",3
Mule,"Split synchronous processing strategy into blocking and direct strategies","Now that Event doesn't have a sync flag, operations have no way of blocking when blocking behaviour is configured at flow level or is required due to transactions.    Rather than operations using event.isSynchronous() operations, where possible, should be non-blocking be default and rather the flow, via the processing strategy should block and wait for the response of these operations.    synchronous processing strategy in config should be an alias for BlockingProcessingStrategy.",Task,Major,Done,"2017-03-30 16:26:40","2017-03-30 15:26:40",8
Mule,"Ensure that PagingProvider always gets the same connection when used in a transaction","When auto paging is used in a transaction, each call to getPage() needs to receive the same transaction.    In theory, this should be working right now. Write a test to ensure it. If the test doesn't pass, make it so.",Task,Blocker,Done,"2017-03-30 16:25:57","2017-03-30 15:25:57",3
Mule,"Obtain flow and app name on SDK operation","In the policies migration to SDK extensions, we found the need to have accessible the flowName and appName in the operation.    We don't need to expose this information however, having them as private variables of the configuration will suffice for our use cases.","Enhancement Request",Blocker,Closed,"2017-03-30 15:49:56","2017-03-30 14:49:56",3
Mule,"Parser enters an exception loop on flow-ref","The test EEStreamingExtensionTestCase has the following config:        The test passes with this configuration. However, that configuration could be simplified like this:        After introducing the flow-ref, the test starts failing like this: (log was trimmed because of text length limitations, this actually enters a loop until the test times out)    ",Bug,Blocker,Closed,"2017-03-30 15:20:08","2017-03-30 14:20:08",0
Mule,"Fix extension's string formats and unused generics","Fix extension's string formats",Task,Major,Done,"2017-03-30 15:04:09","2017-03-30 14:04:09",1
Mule,"Clean up Message API to avoid exposing InternalMessage","Mule core API is currently exposing InterlMessage interface which is supposed to be internal, or at least, part of the privileged API.  So, there must be no references to InternalMessage in the standard API",Task,Blocker,Done,"2017-03-30 14:21:15","2017-03-30 13:21:15",16
Mule,"Refactor connectivity testing service to use maven dependencies","Due to the changes related to using maven for dependencies in applications, the connectivity service is broken. We need to update it to use maven.",Bug,Major,Closed,"2017-03-30 12:00:26","2017-03-30 11:00:26",0
Mule,"Verify that dynamic metadata works well with auto paging operations","Verify that auto paging operations with a custom output resolver correctly notify their metadata.    The user should provide an output resolver for the pages items, but the communicated MetadataType should be an array of such type.    you have to:    * Verify that tests like this exist for non paged operations (List<Apple>)  * Add tests for similar auto paging operation (PagingProvider<Applet>)  * Add test for non paged operation with output resolver (List<Object> -> List<Apple>)  * Add similar test for paged operation with output resolver (PagingProvider<Object> -> List<Apple>)    If any of the above don't work, make them.",Task,Major,Done,"2017-03-29 19:41:44","2017-03-29 18:41:44",8
Mule,"Auto paging operations should not have a @Connection parameter","Right now, auto paging operations fail if they don't include a connection parameter.    This is not only wrong (since most operations only need the connection inside the paging provider) but can also lead to problems since the developer could get confused and use the connection received in the operation instead of the one in the paging provider.  ",Bug,Major,Closed,"2017-03-29 19:37:03","2017-03-29 18:37:03",5
Mule,"Auto paging operations must have a fetchSize parameter","All auto paging operations must have a fetchSize parameter which needs to be injected into the PagingProvider.    It has to be automatically injected by the SDK",Bug,Critical,Closed,"2017-03-29 19:33:01","2017-03-29 18:33:01",5
Mule,"Allow operations to override parameters from config","Operations which override a param from the config is a very common pattern. However, right now, the user needs to:    i) declare the parameter  ii) check if it was provided  iii) if not, fetch the value from the config    Besides being cumbersome, it requires null handling which is something we would like to avoid with certain types such as booleans. We need a feature in which we could declare the parameter to be an override of the config:        Take aways:    * The operation must require a configuration. If it doesn't, compilation should fail  * The parameter MUST have the same name as the config parameter being overriden  * The parameter will automatically be marked as optional and will not have a default. Using @Optional in tandem with @ConfigOverride will be invalid  * Other annotations such as @ExpressionSupport are valid    The SDK will automatically do the value resolution, injecting either the operation's own value or whatever value was assigned on the config  ","Enhancement Request",Critical,Closed,"2017-03-29 19:20:34","2017-03-29 18:20:34",8
Mule,"Serialization issues in EventContext","When a child context is serialized an deserialized, its reference to the parent context is lost. The newly deserialized child context has a cloned parent context, so when trying to notify its parent, all who are expecting on the parent context miss the notification.    This is manifested with the following tests, that must be added in *DefaultEventContextTestCase*:      Also, when running in integration tests, the transient fields are not reinitialized after the deserialization (*readObject* is not called)",Bug,Critical,Closed,"2017-03-29 15:50:03","2017-03-29 14:50:03",8
Mule,"Migrate remaining spring module parsers to Mule 4 mechanism - Clean up","Components to get rid off:  * dynamic-round-robin,  * dynamic-all,  * dynamic-first-successful,  * custom-route-resolver  * composite-source: There's an issue to remove it since it's not so easy. Perhaps is better to just migrate the BDP as part of this issue.  * custom-exception-strategy: Same as with composite-source  * custom-queue-store,  * queue-store  * simple-in-memory-queue-store,  * file-queue-store,  * simple-text-file-store,  * managed-store,  * custom-object-store,  * spring-object-store,",Task,Major,Done,"2017-03-28 22:43:44","2017-03-28 21:43:44",4
Mule,"Migrate remaining spring module parsers to Mule 4 mechanism - Transports","Components to migrate from transports:  * default-threading-profile,  * compatibilityConfiguration,  * java-interface-binding,  * mutator-transformer,  * set-session-variable,  * remove-session-variable,  * set-correlation-id,  * endpoint,  * inbound-endpoint,  * outbound-endpoint,  * custom-connector,  * recipient-list,  * component: -> This is already define in core namespace. Need to review why it exists in transports namespace  * pooled-component: Same as with component  * http-security-filter: We can probably just get rid of this one and use the one in HTTP namespace  * config: This is for HTTP, for backward compatibility in 3.x. We can get rid of this since only affects uses of mule client.  * jmx-default-config,  * publish-notifications",Task,Major,Done,"2017-03-28 22:42:12","2017-03-28 21:42:12",4
Mule,"Migrate remaining spring module parsers to Mule 4 mechanism - Core 2","Components to migrate:  * global-property  * expression-component  * custom-agent  * invoke  * custom-source  * reconnect  * reconnect-forever  * reconnect-custom-strategy  * reconnect-notifier  * reconnect-custom-notifier  * flow-ref  * custom-transaction  * xa-transaction  * custom-transaction-manager,  * default-in-memory-queue-store,  * default-persistent-queue-store",Task,Major,Done,"2017-03-28 22:39:51","2017-03-28 21:39:51",4
Mule,"Upgrade XMLUnit to >2.x","XMLUnit 2.0 provides hamcrest matchers","Enhancement Request","To be reviewed",Open,"2017-03-28 20:49:44","2017-03-28 19:49:44",4
Mule,"Add TransformerFactory to our XMLSecureFactories","Some months ago we reviewed all usages of potentially susceptible classes to XXE vulnerabilities. Recently, our reference wiki page included TransformerFactory and SAXTransformerFactory. See https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Prevention_Cheat_Sheet    We should add the corresponding fixes for prevention, and determine if they are actually issues affecting us.    Sources to check:  - modules/xml/src/main/java/org/mule/module/xml/filters/SchemaValidationFilter.java: Validator, SchemaFactory  - modules/json/src/main/java/org/mule/module/json/transformers/TransformerInputs.java: SchemaFactory, TransformerFactory  - modules/xml/src/main/java/org/mule/module/xml/transformer/AbstractXmlTransformer.java: TransformerFactory  - modules/xml/src/main/java/org/mule/module/xml/transformer/XsltTransformer.java: TransformerFactory  - modules/ws/src/main/java/org/mule/module/ws/consumer/WSDLUtils.java: TransformerFactory  - modules/xml/src/main/java/org/mule/module/xml/util/XMLUtils.java: TransformerFactory  - modules/xml/src/main/java/org/mule/module/xml/expression/JaxpXPathExpressionEvaluator.java: XPathExpression  - modules/xml/src/main/java/org/mule/module/xml/xpath/JaxpXPathEvaluator.java: XPathExpression",Bug,Major,Resolved,"2017-03-28 14:57:39","2017-03-28 13:57:39",8
Mule,"Support XA transactions in SDK extensions at source level"," *Support XA transactions in SDK extensions at source level*  *  With https://www.mulesoft.org/jira/browse/MULE-12011 and https://www.mulesoft.org/jira/browse/MULE-11221 Sources started to be able to participate in transactions.  * But nowadays the sources are not able to init an *XA transaction*. The support of XA transactions implies:  ** The Source should be communicated which kind of transaction the Mule developer want to create: *LOCAL*, *MULTI*, *XA* and depending on this value, the kind of transaction that should be created.",Task,Critical,Done,"2017-03-28 12:04:54","2017-03-28 11:04:54",5
Mule,"Fix GenericBeanDbConfigTestCase","The test fails when muleEmbeddedDB is not previously created",Task,Major,Done,"2017-03-27 21:11:40","2017-03-27 20:11:40",4
Mule,"Remove the RouteModel and replace with ScopeModel ","Remove the RouteModel and replace with ScopeModel ",Task,Blocker,Done,"2017-03-27 18:39:10","2017-03-27 17:39:10",5
Mule,"Extension models for error handling","We need extension models for the try block and related functionality.","Enhancement Request",Blocker,Closed,"2017-03-27 18:26:36","2017-03-27 17:26:36",4
Mule,"Fix WSConsumerHttpRequesterTestCase thread leak","The test leaves threads opened by the mock server hanging. Presumably, ClassRule annotation makes the tear down after hang threads log.",Task,Major,Done,"2017-03-27 17:31:38","2017-03-27 16:31:38",4
Mule,"Move set-payload to compatibility","Move set-payload to compatibility module.    We would have to find a replacement for it. Best would be to use scripting module since it's the one that is supposed to be used by CE developers ",Task,"To be reviewed",Done,"2017-03-27 16:33:12","2017-03-27 15:33:12",16
Mule,"DataWeave should be used to encrypt payloads in idempotent-secure-hash-message-validator","DataWeave should be used to encrypt payloads in idempotent-secure-hash-message-validator. Also, the tests should test this functionality.  Check: https://github.com/mulesoft/data-weave/issues/121    ",Task,Minor,Done,"2017-03-27 16:12:33","2017-03-27 15:12:33",2
Mule,"Move combine-collections-transformer to compatibility module","Move combine-collections-transformer to compatibility module",Task,"To be reviewed",Done,"2017-03-27 16:06:04","2017-03-27 15:06:04",2
Mule,"MULE-7211: SftpAutoDeleteTestCase (flaky test)",endpointAutoDeleteFalse[explicit-connector],Bug,Minor,Closed,"2017-03-27 14:16:41","2017-03-27 13:16:41",8
Mule,"Fix PipelineMessageNotificationsTestCase","The test has been known to introduce flakiness in our tests and has received several attempts of fixing. We need to review it once again to make sure it's ok.",Task,Major,Done,"2017-03-27 13:59:35","2017-03-27 12:59:35",4
Mule,"All functional tests from CE must use the isolated test runner","There are many functional test cases on CE that are running without isolation, ie, they are not extending from MuleArtifactFunctionalTestCase but from FunctionalTestCase or ExtensionFunctionalTestCase.  Those test must be migrated to properly test the components",Task,Major,Done,"2017-03-24 17:00:41","2017-03-24 17:00:41",8
Mule,"Export default services providers from the JRE","Service providers that are included on the JRE must be exported on the container to make them available to every artifact.",Task,Major,Done,"2017-03-24 12:53:26","2017-03-24 12:53:26",4
Mule,"Different javascript engine are used on unit and isolated tests","Unit tests on the scheduler service are using the javascript engine provided by the JDK.  On the container or isolated tests, however, the used engine is the one that come from the scripting module, ie, Rhino.  The problem appears to be related to the fact that the nashorn implementation is being filtered on the container classloader, so the service is not able to load it and falls back to Rhino.",Bug,Critical,Closed,"2017-03-24 12:20:33","2017-03-24 12:20:33",2
Mule,"Container should not export /META-INF/mule-module.properties files","Container is exporting /META-INF/mule-module.properties files, apparently those files are used on the isolated test runner in order to properly create the classloader for the test. But is not correct that those files are exported, is required to review why they should be exported and find another way to do the same without doing it.",Task,Minor,Done,"2017-03-23 21:44:13","2017-03-23 21:44:13",1
Mule,"IMAP decode special character in username and password twice","AbstractMailConnector decodes username and password although they were already decoded while creating the DefaultInboundEndpoint. This usually does not have any bad effect, except when the password includes a '%' character.",Bug,Minor,Resolved,"2017-03-23 19:27:16","2017-03-23 19:27:16",0
Mule,"Spike on Soap Connect","Spike on soap connect",Task,Blocker,Done,"2017-03-23 19:18:06","2017-03-23 19:18:06",13
Mule,"In AbstractXPathExpressionEvaluator, replace the cache WeakHashMap with a guava cache","AbstractXPathExpressionEvaluator uses a WeakHashMap for caching, but the keys are String's and it is recommended for WeakHashMap entries to do equals by identity, which is not the case here.    It should be changed to a guava cache, with a max size instead of depending on the garbage collector.",Bug,Major,Closed,"2017-03-23 17:58:57","2017-03-23 17:58:57",2
Mule,"Empty Failure Expression evaluated positive in Catch Message Exception","Description  When a until-succcessful scope is within a catch message exception it completes an unexpected behaviour wheh the failure expression is empty.  The failure expression will be evaluated only if the flow didn't throw an exception. In order to fail only when a specific type of error is thrown. However when the contents of the failureExpression is empty, it's default is to populate the failure expression with exception-type:.   if (failureExpression != null)          {              failureExpressionFilter = new ExpressionFilter(failureExpression);          }          else          {              failureExpressionFilter = new ExpressionFilter(exception-type:);          }  This means that the failure expression seems to always run.  ",Bug,Critical,Closed,"2017-03-23 16:37:43","2017-03-23 16:37:43",8
Mule,"Change how configuration resolution works","The configuration resolution for operations without an explicit reference is sometimes confusing:    a. If you don't have a validation configuration, it will create and use a default one.   b. If you have only 1 validation configuration, it will be automatically used as the default one.   c. If you have more than 1, you need to specify on each validation operation what configuration to use.     Consider the following 3-step scenario using the validations extension:     1) You initially develop Validation_A, which has no need for a validation configuration. Therefore you leave config-ref blank. Validation A works successfully.   2) Later, you develop Validation_B, which needs Validation_Configuration_1. Validation_B references Validation_Configuration_1, and it works. However, now, without changing anything about Validation_A, it now uses a completely different validation configuration, and it may not work.   3) Even later, you develop Validation_C, which needs Validation_Configuration_2. Validation_C references Validation_Configuration_2, and it works. However, now, while still not changing anything about Validation_A, it fails completely (and it goes uncaught until runtime!!!).     As it works now, making a change completely unrelated to a working validation can cause that validation not to work. After talking with my fellow developers, we agreed: a validation with no config-ref should work the same way no matter how many validation configurations exist within the project.     We can see a case for a validation always being required to define a config-ref. Or we can see a case for a validation with no config-ref always using the default configuration. But we do not think it makes sense for a validation with no config-ref to work differently (and potentially break) depending on how many unreferenced validation configurations are in the project.    We need to change to:    * Operations without a config-ref will share the same implicit config (when possible), even if several explicit configs are defined  * Operations with an explicit config ref with honour that config, even if an implicit one was created.","Enhancement Request",Blocker,Closed,"2017-03-23 16:16:29","2017-03-23 16:16:29",8
Mule,"Update external extensions parent pom with Mule services dependencies","Update external extensions parent pom with services dependencies",Task,Major,Done,"2017-03-23 14:13:21","2017-03-23 14:13:21",1
Mule,"Validate WSC connection","Properly validate the connection by making an HTTP request to the provided address.","Enhancement Request","To be reviewed",Resolved,"2017-03-23 13:50:57","2017-03-23 13:50:57",5
Mule,"Set the stage for introducing object streaming","Make necessary refactors and changes so that we can introduce object streaming while leveraging and reusing all the infrastructure created for the CursorStream functionality, specially the one which prevents leaks",Task,Blocker,Done,"2017-03-23 00:29:31","2017-03-23 00:29:31",8
Mule,"Make mule.test.mel.default sysporp set the default not exclusively","Currently, the *mule.test.mel.default* sysprop is forcing MEL as the expression language, even for DW full scripts or one-line dw expressions with the *dw:* prefix.    The sysprop should only affect expressions without prefix.",Bug,Major,Closed,"2017-03-22 17:53:55","2017-03-22 17:53:55",2
Mule,"Pom properties are not being resolved when loading the dependencies from the pom file","When properties are used to define a dependency version within a plugin or an application inside the pom file, then it fails to resolve the dependencies.    The problem is that we are not creating the resolved model for maven, we are just loading the file content into a Model instance.",Bug,Major,Closed,"2017-03-22 17:32:45","2017-03-22 17:32:45",8
Mule,"Add support for message attribute data","This is to add support for message attribute data in message history.",Task,Critical,Done,"2017-03-22 13:46:48","2017-03-22 13:46:48",4
Mule,"Add support for variables values","This is to add support for variables values in the message history data.",Task,Major,Done,"2017-03-22 13:45:45","2017-03-22 13:45:45",4
Mule,"Add errors support in the message history data","This is to add the information about the possible error that may occur during a processor execution within a flow into the message history data.",Task,Critical,Done,"2017-03-22 13:44:54","2017-03-22 13:44:54",8
Mule,"Remove services to their own repositories","We need to determine a way to provide pathces/fixes for services artifacts. For plugins/extensions this will be achieved by having them in their own repo, with their own lifecycle and releasing the whole plugin instead of doing a patch.    It has yet to be determined what to do for services in a similar scenario",Task,Critical,Done,"2017-03-21 18:58:29","2017-03-21 18:58:29",8
Mule,"Fix HTTP requester grizzly configuration","As a result of a bug fix, the HTTP request grizzly configuration was mistakenly set to use one thread which causes a 70% performance degradation. We need to fix the issue that was added as part of MULE-11298.",Task,Blocker,Done,"2017-03-21 16:47:50","2017-03-21 16:47:50",4
Mule,"JMSAppender not property closed after application is undeployed","When an application uses JMSAppender to log through JMS, the current log4j version (2.5) doesn't close the connection to the queue when the logger context is stopped. This is fixed in 2.7.",Bug,Major,Resolved,"2017-03-21 14:47:31","2017-03-21 14:47:31",0
Mule,"When deploying a policy with plugins, registry-bootstrap.properties autowiring is failing","The problem shows up when having an application that has a plugin that has defined a registry-bootstrap.properties (HTTP, JMS, DB), and trying to deploy a policy that also uses that same plugin. It is failing in the Injection of the dependency defined in the properties file.    This was discovered trying to use an Http Requester in a policy. The stacktrace shown was       I've created a test case that exposes this error, so you can reproduce it. It can be found in the following branch:  https://github.com/mulesoft/mule/tree/MULE-12016    Another issue that might be related to this:   When using an Error Type in an Error-Handler in a policy with a type of a plugin that is also in the application, the policy deployment fails because it can not find that error type in the Policy Context's Error Repository.    So, for example, if an APP has HTTP, and a policy with an error-handler with type HTTP:UNAUTHORIZED is being deployed, it will fail.    It seems that policy context is not able to access error types loaded by the application.    ",Bug,Critical,Resolved,"2017-03-20 23:45:58","2017-03-20 23:45:58",4
Mule,"Review Source Transactions","Review Source Transactions",Task,Major,Done,"2017-03-20 16:02:15","2017-03-20 16:02:15",5
Mule,"Spike on Support Transactions in Sources","Spike on Support Transactions in Sources","Enhancement Request",Major,Closed,"2017-03-20 15:53:16","2017-03-20 15:53:16",8
Mule,"Bundle import/export of declaration in a single Artifact serializer","Bundle import/export of declaration in a single Artifact serializer.     Currently we have one way to import the declaration from an xml, and one way to export, in a diferent api. We should have a single bundle that allows both import/export of declarations AND dslElementModels.    ","Enhancement Request",Critical,Closed,"2017-03-20 15:16:31","2017-03-20 15:16:31",8
Mule,"Container must not export every service through SPI","Container exports resources from META-INF/services folder, that is the place used by java to discover services providers (SPI).  Classes implementing those interfaces must be exposed by the container, so if an artifact finds the SPI resource file, then it will need to instantiate the class defined in that file.    As all resources inside META-INF/services are exported, every SPI resource file will be discovered by child artifacts, i.e.: there is no filter on which service resource files are exported  * This is a problem as we can't include any jar in the container without exposing the classes referenced on those SPI resource files  * We could need to expose a given resource file, lets says META-INF/services/org.foo.Service, because is needed on the child artifacts, but we could not want to export every available implementation of it. We want to avoid that including a new jar inside the container, that is supposed to be private to the container, to force us to export its service implementations.",Bug,Blocker,Closed,"2017-03-20 13:54:17","2017-03-20 13:54:17",16
Mule,"Embedded mode does not resolve dependencies","When using embedded mode to start a container, the module attempts to load JARS that are not part of the application nor any of its dependencies. Thus Maven did not download them.    When the embedded module tries to use them it fails to load them as the files (neither the pom or the jar) are in the local repository",Bug,Critical,Resolved,"2017-03-20 12:43:19","2017-03-20 12:43:19",4
Mule,"[Perf] Review GC tunning for Mule 4 when used from Tooling Client","As part of the root cause analysis for MULE-11950 I found that when using Mule Runtime to deploy and deploy several times applications on Mule 4 the classloaders for each application is disposed/closed but the classes are not unloaded from the JVM.  After a while and doing the deploy/undeploy operation for more 150 times the response times for the JVM starts to be 4 or 5 times greater than it was for the first deploys.    For the time being Tooling has defined that the Metaspace should be sized to 256m but this ticket is about finding the root cause of this and define if needed the correct GC tunning for Mule.",Task,Major,Done,"2017-03-20 02:37:39","2017-03-20 02:37:39",8
Mule,"Change the default value for output type field in the HTTP Request","Change the default value for output type field in the HTTP Request (advance > other setting > output type field) from Any to Stream",Story,Major,Done,"2017-03-18 00:00:23","2017-03-18 00:00:23",1
Mule,"Revisit DslSyntaxUtils as part of the API","Revisit DslSyntaxUtils as part of the API",Task,Major,Done,"2017-03-17 23:54:57","2017-03-17 23:54:57",1
Mule,"ArtifactDeclarationLoader support for EE namespace","ArtifactDeclarationLoader support for EE namespace in infrastructure parameters",Bug,Critical,Closed,"2017-03-17 23:46:51","2017-03-17 23:46:51",5
Mule,"Define API for service configuration/override","Define an API for service override. There are two use cases:    * The runtime wants to override itself. E.g: Overriding the StreamingManager implementation in EE  * A custom distribution wants to override something via core extension. E.g.: Override the queue manager when in cluster mode, override the object store manager when in CH","Enhancement Request",Major,Closed,"2017-03-17 13:00:59","2017-03-17 13:00:59",3
Mule,"Default values not shown for ObjectTypes in generated docs","Look at the ftp connector generated docs. Things like the PoolingProfile have all their fields described, but the default values are not shown. They should.",Bug,Blocker,Closed,"2017-03-16 19:50:45","2017-03-16 19:50:45",3
Mule,"Define how to cache dynamic metadata","Define if DataSense could handle the caching of Metadata in order to improve its response time.",Task,Major,Done,"2017-03-16 16:53:12","2017-03-16 16:53:12",4
Mule,"Periodic jobs are cancelled when a trigger happens when the threadpool is busy","When running a periodic job, if one of the runs is to be executed at the moment its target scheduler is busy (no idle threads), a RejectedExecutionException is thrown and because of that, the job is cancelled not running ever again.    The execution should be skipped and tried to run again at the next trigger.",Bug,Major,Closed,"2017-03-15 22:42:16","2017-03-15 22:42:16",2
Mule,"Declaration fails to serialize list of strings","Declaration fails to serialize list of strings",Bug,Blocker,Closed,"2017-03-15 22:10:39","2017-03-15 22:10:39",1
Mule,"Changed mule-module-http-ext dependency scope to compile in OAuth extension","Changed mule-module-http-ext dependency scope to compile in OAuth extension to fix OAuth application deployment on Mule 4 failing.",Task,Minor,Done,"2017-03-15 21:59:15","2017-03-15 21:59:15",0
Mule,"Upgrade JSCH to version 0.154","Upgrade JSCH to version 0.154",Task,Minor,Done,"2017-03-15 20:46:49","2017-03-15 20:46:49",0
Mule,"Boot packages needs to be removed and modules must explicitly define what they export","ContainerClassLoaderFactory.BOOT_PACKAGES defines a set of packages exported by container modules that must always be loaded by the container class loader.  This means that, if a service has a dependency to javax.mail but javax.mail packages are defined as BOOT_PACKAGES, then the service class loader will not try to load the javax.mail class never and will always delegate to the container class loader.     The problem is that, if the dependency with that package is not longer bundled in lib/opt in the container, then the service, even if it bundles javax.mail, it won't be able to load the class resulting in a NoDefClassFoundException.",Task,Critical,Done,"2017-03-15 20:44:37","2017-03-15 20:44:37",8
Mule,"Make Off Heap streaming EE only","Filestore Stream buffer should only be available in EE",Task,Blocker,Done,"2017-02-07 18:49:01","2017-02-07 18:49:01",8
Mule,"Apply package renaming from compatibility plugin","Some classes from compatibility  referenced on CE code were moved to a different package. Need to fix these references:  * org.mule.compatibility.core.context.notification.EndpointMessageNotification  * org.mule.compatibility.core.api.context.notification.EndpointMessageNotificationListener",Task,Minor,Done,"2017-03-15 18:31:52","2017-03-15 18:31:52",0
Mule,"JMS client's dependencies must be provided","*JMS clients dependencies must be provided*    * In the same way that was in the transport of Mule 3.x, the JMS clients should be provided by the user and not be packaged inside the extension.  * This implies stop packaging the dependency and in the connection providers of JMS, start using {{@ExternalLib}} to communicate to the tooling the required dependencies.","Enhancement Request",Critical,Closed,"2017-03-15 17:32:09","2017-03-15 17:32:09",8
Mule,"CursorStreamProvider is closed too early","As a side effect of MULE-11881, SSAuthenticationAgainstMultipleProvidersTestCase in the compatibility plugin is broken. This is because the provider is being closed before the listener gets to open a new cursor to send the response.",Bug,Blocker,Closed,"2017-03-15 16:19:32","2017-03-15 16:19:32",8
Mule,"Make plugin dependencies work with compile scope","Currently, plugin dependencies are required to be declared as *provided* to be correctly handled by the test classifier. The should have compile scope.",Task,Major,Done,"2017-03-14 18:57:50","2017-03-14 18:57:50",2
Mule,"Improve DW performance","Current tests show a significant performance issue in DW when compare to MEL, mostly caused by repeated iterations than can be avoided. We need to analyse the tests and address the bottlenecks found.    For simple evaluation of payload current numbers (March 14) are:  *MEL:*  Time: 580 nS/op  Allocation: 1850 Bytes/op    *DW:*  Time: 4100 nS/op  Allocation: 6900 Bytes/op   ",Task,"To be reviewed",Done,"2017-03-14 13:10:52","2017-03-14 13:10:52",0
Mule,"Review JMS Listener's consumers usage implementation","*Review JMS Listener's consumers usage implementation*    * In 3.x the JMS Listener can be configured to listen for messages using multiple consumers at the same time, this capability was removed in 4.x.  * In 4.x to be able to maintain the Sync capability of the listener, the different consumers must be from different sessions, so we can maintain the unitary ACK/Session recover over just one message.  * Re-adding this capability implies:  ** If it is possible to create a session per consumer.  ** A rework in the JMS Listener to support multiple consumers.  ** How this is going to work when the destination is a TOPIC","Enhancement Request",Major,Closed,"2017-03-13 15:34:03","2017-03-13 15:34:03",8
Mule,"Improve error message for JmsAcknowledgement operations when the SessionInformation doesn't exist anymore","*Improve error message for JmsAcknowledgement operations when the SessionInformation doesn't exist anymore*    * Nowadays when a manual ACK or Session Recover is executed, the SessionInformation retrieved using an *ackId*, if the session has been already recovered or acknowledged, this SessionInformation is eliminated.  * When a manual ACK/Session Recover is executed there is no way to detect if the acction is not possible due the possible three scenarios:  ** The session has been acknowledged  ** The session has been recovered  ** The ackId is invalid","Enhancement Request",Minor,Closed,"2017-03-13 15:04:31","2017-03-13 15:04:31",5
Mule,"Limit ACK Modes for PublishConsume operation","*Limitate ACK Modes for PublishConsume operation*    * Nowadays the {{publishConsume}} operation has the same Ack Modes than the listener, but not all ACK Modes makes sense in the {{publishConsume}} operation.  * *AUTO* Mode will have the same Behaviour as *NONE* due that in both cases the message will be acknowledged just once received.  * Think which is the one to remove.","Enhancement Request",Critical,Closed,"2017-03-13 14:50:06","2017-03-13 14:50:06",3
Mule,"Prepare HTTP service for extension","Some minor changes need to be made so that the HttpServiceImplementation can be extended.",Task,Blocker,Done,"2017-03-11 16:15:16","2017-03-11 16:15:16",1
Mule,"Allow to declare mutually exclusive parameters in Mule 4 parser mechanism","Some elements have mutually exclusive attributes (example, filter and filter-ref). Currently, there is no way to set those attribute be mutually exclusive.","Enhancement Request","To be reviewed",Open,"2017-03-10 18:09:06","2017-03-10 18:09:06",4
Mule,"Error when trying to read certificate signature on SFTP","When running on Oracle JDK 8u121, some SFTP tests are randomly failing with the following error:        Inner exception is:        Verification of signature fails because leading 0 are removed (that was not validated before).    http://stackoverflow.com/questions/41987227/signature-length-not-correct-when-calling-pgponepasssignature-verify  http://stackoverflow.com/questions/30907205/jsch-not-working-with-certain-sftp-servers  Related info: https://bugs.openjdk.java.net/browse/JDK-8174719",Bug,Critical,Closed,"2017-03-10 17:18:46","2017-03-10 17:18:46",3
Mule,"LazyMuleArtifactContext initializeComponents do not rebuild minimal apps in some scenarios","On initializeComponents in LazyMuleArtifactContext it could happen that minimal app is not regenerated and ends being inconsistent with location in request.",Task,Major,Done,"2017-03-10 16:07:07","2017-03-10 16:07:07",1
Mule,"InterceptingProcessor and Processor should be part of the mule api","Mule should provide a way to create Processors and Intercepting Processors, as part of its api. Use case: creation of mule plugins (not extensions) i.e: APIKit. The router MP is an Intercepting Processor that handles:  - getting the raml document  - routing the request to a subflow and returning to the main flow, to continue.","Enhancement Request","To be reviewed",Closed,"2017-03-09 22:35:31","2017-03-09 22:35:31",2
Mule,"Be able to retrieve protocol, host, port and path from HTTP Listener","By providing a component, this service should provide a way to know the protocol, host, port and path of the listener/ listener config that is in the same flow.    Use case:  - APIKit router should know the information of the listener associated to it, located in the same flow. This data is used when sending requests from the api console.  - The location of each APIKit console should be provided to Studio and Mozart.","Enhancement Request",Major,Closed,"2017-03-09 20:22:30","2017-03-09 20:22:30",4
Mule,"Create extension model loader for models created manually","While creating a plugin (not an extension), there should be a way to add an extension model to it, so the tooling can generate the UI. ","Enhancement Request",Blocker,Closed,"2017-03-09 20:08:41","2017-03-09 20:08:41",5
Mule,"Mule api should have a way to create/edit events, messages and parameters","Mule should provide a way to:  - edit the payload and the inbound parameters   We are currently generating new events, messages and parameters using the classes:      - *create/edit flowVars*  Use case:   APIKit needs to handle an outbound headers map, that will be used when:   - specifying the headers map in the response builder   - users want to add new outbound headers     Similar case with httpStatus.  ","Enhancement Request","To be reviewed",Resolved,"2017-03-09 20:07:18","2017-03-09 20:07:18",2
Mule,"Provide a way to get flow instances","Mule api should provide a way to:   - run the process() method of any flow of the app.  - get the names of the flows.","Enhancement Request","To be reviewed",Resolved,"2017-03-09 20:06:05","2017-03-09 20:06:05",2
Mule,"Fix threading flaky tests","Fix the following flaky tests:  * ExpiryMonitorTestCase  * TextFileStoreTestCase  * DefaultSchedulerQuartzTestCase  * DefaultSchedulerScheduleTestCase  * DefaultSchedulerTerminationTestCase",Bug,Major,Closed,"2017-03-09 13:21:13","2017-03-09 13:21:13",1
Mule,"Make the core extension model available through the tooling client","Provide a way in the tooling client to use the extension model for core components introduced with MULE-11496.",Task,Blocker,Done,"2017-03-08 19:20:21","2017-03-08 19:20:21",8
Mule,"Missing information about metadata key when resolving operation metadata","When resolving operation metadata the key which was used to resolve the metadata was not set to the MetadataAttributes therefore there was no information about it.  This has been partially fixed by adding the following line has been added to {{org.mule.runtime.module.extension.internal.metadata.MetadataMediator}}:  {{attributesBuilder.withKey(newKey(keyValue.toString()).build());}}    Still this is not the correct fix as the keyValue at this point is an object and the information related to the key cannot be obtained and mapped to a {{MetadataKey}}.  ",Bug,Blocker,Closed,"2017-03-08 17:21:04","2017-03-08 17:21:04",5
Mule,"Operation, Scope and Router models should extend ProcessorModel","Currently, ScopeModel and RouterModel extend OperationModel. Although not incorrect, the  model will be more clear an extensible if those three extend a new ProcessorModel abstraction, which extends ComponentModel","Enhancement Request",Critical,Resolved,"2017-03-08 17:13:11","2017-03-08 17:13:11",8
Mule,"HTTP extension does not leverage cursor streaming","HTTP Extension is not able to use new Cursor Streaming ability provided by SDK.  Try to set a custom streaming strategy and see it fails:    ",Bug,Critical,Closed,"2017-03-08 13:51:00","2017-03-08 13:51:00",2
Mule,"Multiline parameter documentation is truncated in the extension model","When an operation method with parameters, and with javadoc for a parameter that is so long it continues in the next line, when generating the json extension model for that parameter only the first line is put in the *description* field.",Bug,Major,Closed,"2017-03-07 19:12:00","2017-03-07 19:12:00",3
Mule,"IllegalArgumentException: Can not set final java.lang.String field org.mule.runtime.api.metadata.DefaultMetadataKey.id to org.mule.runtime.extension.api.metadata.NullMetadataKey","IllegalArgumentException when trying to serialize a NullMetadataKey",Bug,Major,Closed,"2017-03-07 17:56:46","2017-03-07 17:56:46",0
Mule,"errors for operation are empty if extension doesn't have @ErrorTypes","I have an operation with a method that has a @Throws annotation:        If the extension doesn't have the @ErrorTypes annotation, the `errors` field for that operation is empty in the generated extension model json file.    It should fail when building the extension, saying that the @ErrorTypes is required when using @Throws. The consistency between the ErrorTypeProviders and the enum with the ErrorTypes should be enforced and validated too.",Bug,Major,Closed,"2017-03-07 15:12:08","2017-03-07 15:12:08",1
Mule,"Update all Mule component's parameters to be compatible with DW","*Review all Mule components parameters to be compatible with DW*    * Review scopes (for-each), routers (choice), filters, and every component parameter and validate if they provide the correct expected *DataType* when evaluating a DW expression.  ** E.g.: the {{<when expression=#[]}} should communicate that is expecting a {{Boolean}} with MimeType {{application/java}}.  * Update {{<set-variable>}} implementation to automatically save the variable with the MimeType that the evaluated expression provides.",Bug,Blocker,Closed,"2017-03-07 12:56:58","2017-03-07 12:56:58",8
Mule,"No component building definition for element httpn:client-socket-properties when resolving Metadata from Tooling Client","When resolving componentModels there is an issue related to find the componentBeanDefinition and the following component cannot be resolved:      The extensions HTTP and Sockets are enabled and registered in the ExtensionManager the issue has to with how beanDefinitionFactory.resolveComponentRecursively resolves the component hierarchy.",Bug,Critical,Closed,"2017-03-06 21:03:05","2017-03-06 21:03:05",4
Mule,"Cannot test connectivity with file-commons related extensions","The identifier 'java' does not match with the describers available to generate an ExtensionModel (working with the plugin 'FTP') (java.lang.IllegalArgumentException)  at org.mule.runtime.core.config.builders.AbstractConfigurationBuilder.configure(AbstractConfigurationBuilder.java:43)  at org.mule.runtime.core.context.DefaultMuleContextFactory$1.configure(DefaultMuleContextFactory.java:88)  at org.mule.runtime.core.context.DefaultMuleContextFactory.doCreateMuleContext(DefaultMuleContextFactory.java:217)  at org.mule.runtime.core.context.DefaultMuleContextFactory.createMuleContext(DefaultMuleContextFactory.java:82)  at org.mule.runtime.module.deployment.impl.internal.artifact.ArtifactContextBuilder.lambda$build$1(ArtifactContextBuilder.java:395)  at org.mule.runtime.module.deployment.impl.internal.artifact.ArtifactContextBuilder$$Lambda$88/577365111.call(Unknown Source)  at org.mule.runtime.core.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:162)  at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:992)  at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:958)  at org.mule.runtime.module.deployment.impl.internal.artifact.ArtifactContextBuilder.build(ArtifactContextBuilder.java:328)  at org.mule.runtime.module.deployment.impl.internal.temporary.DefaultTemporaryArtifactBuilderFactory$1$2.start(DefaultTemporaryArtifactBuilderFactory.java:183)  at org.mule.runtime.module.tooling.internal.TemporaryArtifactConnectivityTestingService.testConnection(TemporaryArtifactConnectivityTestingService.java:52)  at com.mulesoft.agent.services.tooling.MuleAgentConnectivityTestingService.testConnection(MuleAgentConnectivityTestingService.java:64)  at com.mulesoft.agent.external.handlers.tooling.ToolingRequestHandler.lambda$testConnectionTemporary$11(ToolingRequestHandler.java:414)  at com.mulesoft.agent.external.handlers.tooling.ToolingRequestHandler$$Lambda$665/2060733966.get(Unknown Source)  at com.mulesoft.agent.util.ResponseHelper.response(ResponseHelper.java:88)  at com.mulesoft.agent.external.handlers.tooling.ToolingRequestHandler.testConnectionTemporary(ToolingRequestHandler.java:413)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)  at java.lang.reflect.Method.invoke(Method.java:497)  at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81)  at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:151)  at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:171)  at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:152)  at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:104)  at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:387)  at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:331)  at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:103)  at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:271)  at org.glassfish.jersey.internal.Errors$1.call(Errors.java:271)  at org.glassfish.jersey.internal.Errors$1.call(Errors.java:267)  at org.glassfish.jersey.internal.Errors.process(Errors.java:315)  at org.glassfish.jersey.internal.Errors.process(Errors.java:297)  at org.glassfish.jersey.internal.Errors.process(Errors.java:267)  at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:297)  at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:254)  at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1028)  at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:372)  at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:381)  at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:344)  at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:221)  at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:696)  at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1515)  at com.mulesoft.agent.rest.RequestLoggingFilter.doFilter(RequestLoggingFilter.java:95)  at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1486)  at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:519)  at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)  at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)  at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)  at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1097)  at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:448)  at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)  at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1031)  at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)  at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)  at org.eclipse.jetty.server.Server.handle(Server.java:446)  at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:271)  at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:246)  at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)  at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)  at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)  at java.lang.Thread.run(Thread.java:745)  Caused by: java.lang.IllegalArgumentException: The identifier 'java' does not match with the describers available to generate an ExtensionModel (working with the plugin 'FTP')  at org.mule.runtime.module.deployment.impl.internal.policy.ArtifactExtensionManagerFactory.lambda$null$0(ArtifactExtensionManagerFactory.java:103)  at org.mule.runtime.module.deployment.impl.internal.policy.ArtifactExtensionManagerFactory$$Lambda$675/160455193.get(Unknown Source)  at java.util.Optional.orElseThrow(Optional.java:290)  at org.mule.runtime.module.deployment.impl.internal.policy.ArtifactExtensionManagerFactory.lambda$discoverExtensionThroughJsonDescriber$1(ArtifactExtensionManagerFactory.java:103)  at org.mule.runtime.module.deployment.impl.internal.policy.ArtifactExtensionManagerFactory$$Lambda$422/1923932086.accept(Unknown Source)  at java.util.Optional.ifPresent(Optional.java:159)  at org.mule.runtime.module.deployment.impl.internal.policy.ArtifactExtensionManagerFactory.discoverExtensionThroughJsonDescriber(ArtifactExtensionManagerFactory.java:101)  at org.mule.runtime.module.deployment.impl.internal.policy.ArtifactExtensionManagerFactory.create(ArtifactExtensionManagerFactory.java:83)  at org.mule.runtime.module.deployment.impl.internal.artifact.ArtifactExtensionManagerConfigurationBuilder.doConfigure(ArtifactExtensionManagerConfigurationBuilder.java:49)  at org.mule.runtime.core.config.builders.AbstractConfigurationBuilder.configure(AbstractConfigurationBuilder.java:39)  ... 62 more",Bug,Blocker,Closed,"2017-03-06 16:37:50","2017-03-06 16:37:50",4
Mule,"Improve MavenContainerClassLoaderFactory so it can work in terms of Dependency instead of URLs","MavenContainerClassLoaderFactory works with URLs when it can be improved to work with Dependency objects. This would allow to improve code that detects if a certain file is a mule-service or a server plugins, etc.",Task,"To be reviewed",New,"2017-03-06 13:59:34","2017-03-06 13:59:34",8
Mule,"JVM killed ungracefully on shutdown","JVM exits before the application is properly stopped:  Debug log:  ",Bug,"To be reviewed",Closed,"2017-03-03 21:02:07","2017-03-03 21:02:07",4
Mule,"MULE_HOME & MULE_BASE getting set twice in Mule startup","When you start Mule Standalone with {{./bin/mule}}, the environment variables MULE_HOME and MULE_BASE are being set twice.    Log:  ",Bug,Minor,Resolved,"2017-03-03 20:33:56","2017-03-03 20:33:56",2
Mule,"Error message evaluating a Dataweave Expression is not shown in the app log.","Error message evaluating a Dataweave Expression is not shown in the app log.    It only shows the expression that failed but not the error that is sent by Dataweave:  {quote}  Message               : Execution of the expression                   %dw 1.0                  %output application/java                  ---                      payload.entry map ((entry , indexOfEntry) -> {                          DATE_OF_BIRTH: entry.resource.birthDate,                          GENDER: M when (entry.resource.gender) == male otherwise F,                          LAST_NAME: entry.resource.name[0].family[0],                          FIRST_NAME: entry.resource.name[0].given[0],                          CONCAT_NAME: entry.resource.name[0].given[0] ++   ++ entry.resource.name[0].family[0],                          PHONE: entry.resource.telecom.value[0],                          PATIENT_ID: entry.resource.id                      })           failed.  {quote}    This should be showed similar to this after the fix:  {quote}  Message               : Execution of the expression                   %dw 1.0                  %output application/java                  ---                      payload.entry map ((entry , indexOfEntry) -> {                          DATE_OF_BIRTH: entry.resource.birthDate,                          GENDER: M when (entry.resource.gender) == male otherwise F,                          LAST_NAME: entry.resource.name[0].family[0],                          FIRST_NAME: entry.resource.name[0].given[0],                          CONCAT_NAME: entry.resource.name[0].given[0] ++   ++ entry.resource.name[0].family[0],                          PHONE: entry.resource.telecom.value[0],                          PATIENT_ID: entry.resource.id                      })           failed with this error Unexpected character ']' at payload@[2:1] (line:column), expected false or true or null or {...} or [...] or number. at              use: home,  {quote}",Bug,Minor,Closed,"2017-03-03 19:01:46","2017-03-03 19:01:46",0
Mule,"LockFactory is not initialized before initializing an object that uses it","This is seen in LifecycleAwareConfigurationInstance. When it is initialized, the injected LockFactory has not been initialized yet.    It is expected when initializing/starting an object that all of its dependencies have been initialized/started respectively.",Bug,Major,Resolved,"2017-03-03 15:21:35","2017-03-03 15:21:35",2
Mule,"Email transport does not invoke exception strategy when flow processing strategy is synchronous","When an error occurs while trying to route the message received, and there was an Catch Exception Strategy configured, it is not being invoked. ",Bug,Major,Resolved,"2017-03-03 14:54:15","2017-03-03 14:54:15",0
Mule,"Support for router operations in SDK","Support for router operations which are rendered as a RouterModel","Enhancement Request",Blocker,Closed,"2017-03-03 13:56:40","2017-03-03 13:56:40",13
Mule,"Support Scope model in SDK","Allow operations such as validation:all to be rendered as a ScopeModel","Enhancement Request",Major,Closed,"2017-03-03 13:53:57","2017-03-03 13:53:57",13
Mule,"Race condition with asynchronous retry policy in testConnectivity()","When a configuration has an asynchronous retry policy, it may happen that the LifecycleAwareConfigurationInstance is stopped while the connectivity testing is still running, causing it to work with an invalid state.    Also, in the case that a connectivity testing takes a long time, it may happen that a second connectivity testing is done while the previous is still running.",Bug,Major,Closed,"2017-03-03 12:36:30","2017-03-03 12:36:30",2
Mule,"Improve aether maven repository configuration","Currently we are using aether to get dependencies from projects. This may be for deploying a lightweight application which will use the container repository and try to connect to a remote repo in order to download dependencies, or it may be in the embedded container factory, which will try to use the user repository to get dependencies.    We need to improve this configuration so:   - When running in embedded mode, configuration can be provided to set up the repository to use so it works when running it from studio   - When running in container mode, and deploying a lightweight application, the external repository configuration supports a set of repositories to use and also credentials to connect to it. This must be done considering that we MUST be able to connect to exchange when they act as a maven facade.",Task,Critical,Done,"2017-03-03 11:53:14","2017-03-03 11:53:14",16
Mule,"WSC: use option resolvers to find service address","The WSC should use the Value Resolvers to find the service address if possible.    In the cases where there is not a valid address in the WSDL for example:    Human_Resources is not a well-formed address per se.    the field must accept custom values, this way when no valid address has been resolved the user can specify the correct one.    All this implies that the current ADDRESS parameter in the WSC connection providers moves from being @Optional to a required parameter.  ",Bug,Critical,Resolved,"2017-03-02 18:37:17","2017-03-02 18:37:17",8
Mule,"Create Flow micro-benchmark suite that covers different processing strategies and processor types","Create Flow micro-benchmark suite that covers different processing strategies and processor types",Task,Critical,Done,"2017-03-02 16:19:50","2017-03-02 16:19:50",8
Mule,"Add support for flow paths in batch scope","Add support for batch elements flow paths.    See ComponentLocationVisitor.",Task,Critical,Done,"2017-03-02 14:25:07","2017-03-02 14:25:07",4
Mule,"Different default timeouts for connectionIdle on server and client","When using http Persistent Connections in rare cases it may happen that the client starts sending on an existing connection very short before the 30.000 ms idle timeout occurs,  but in that moment the servers idle-timeout happens.    Cause is an          Proposed solution 1)   Take different values for DEFAULT_CONNECTION_IDLE_TIMEOUT in         and        (e.g. Server (Listener): 60*000)      Solution 2:  Remove final on field DEFAULT_CONNECTION_IDLE_TIMEOUT in DefaultHttpListenerConfig      Workaround: specify connectionIdleTimeout=60000 on each http:listener-config","Enhancement Request","To be reviewed",Closed,"2017-03-01 10:59:17","2017-03-01 10:59:17",4
Mule,"When filter throws exception, the handler loses the reference to the filter","Since the Error type/exception type mapping is based on the component that threw the exception, losing the failing filter causes the exception to not be handled correctly.    Examples are:  * AuthorizationFilterTestCase#testAuthenticatedButNotAuthorized  * XmlSendTestCase    There, the component at the moment the exception is being handled is the component following the one that threw the exception.",Bug,Major,Resolved,"2017-03-01 00:04:38","2017-03-01 00:04:38",2
Mule,"Remove mule-module-cxf dependency from CE artifacts","Since the cxf module is now in compatibility, there should be no dependencies to it from standard mule4 code.",Task,Blocker,Done,"2017-02-28 17:33:12","2017-02-28 17:33:12",4
Mule,"NotPermittedException in http sends status 405 (method not allowed) instead of 403 (forbidden)","When a user is authenticated bu requests something he's not allowed too, an 403 (Forbidden) status code has to be returned.    Currently, Mule is returning 405, which is for when the method (GET, PUT, etc) is not allowed.",Bug,Minor,Closed,"2017-02-26 00:05:08","2017-02-26 00:05:08",1
Mule,"Add the concept of function namespace","We need a way for different modules/plugins to contribute functions without worrying about name clashing.    For that, we need some kind of mechanism that acts like a function namespace. DW currently has the concept of module but we need a way to hook that up with the runtime and analyze how it would impact the expression's syntax.    Once this is done, we need to add support for it on the SDK Functions feature","Enhancement Request",Blocker,Closed,"2017-02-24 18:41:49","2017-02-24 18:41:49",0
Mule,"Add support to change the scheduler for a poll element programmatically","This is to be able to change the scheduler configuration programmatically through the poll manager.",Task,Critical,Done,"2017-02-24 16:48:31","2017-02-24 16:48:31",8
Mule,"Add support to trigger a poll execution","This is to update the poller manager to accept manual triggering of a poll execution.",Task,Critical,Done,"2017-02-24 16:44:58","2017-02-24 16:44:58",4
Mule,"Add support for customisable poller manager","The poller manager must be used to schedule the execution of the poller.    This is just to configure the poller manager so it can disable on startup the execution of poll elements",Task,Critical,Done,"2017-02-24 16:43:12","2017-02-24 16:43:12",8
Mule,"Remove dependency from HTTP module to sockets transport","HTTP module is depending on the old sockets transports, which is not private.   Dependency must be removed",Task,Major,Done,"2017-02-24 13:42:53","2017-02-24 13:42:53",2
Mule,"Consolidate classloading isolation","We must consolidate class loading isolation functionality between:  - Mule runtime  - Embedded runtime    It would be ideal to create a classloading module with classloading capabilities for filtering that it's not tied to specific mule concepts like ArtifactClassLoading. Then we can reuse that common module in every proyect that requires some sort of classloading isolation.",Task,"To be reviewed",New,"2017-02-24 12:56:11","2017-02-24 12:56:11",16
Mule,"Need a callback to know when root event context and all their childs are completed","Right now we have the isTerminated() and getParent() methods in the EventContext in order to obtain an event's parent context and make sure that such parent and all its childs were completed.     This approach is not ideal and has many complications. It also forces the StreamingManagerAdapter interface to have success(Event) and error(Event) methods which end up everywhere and everything is a big mess.    We should have a callback we can subscribe to get notified when a parent context (and all its children) are completed","Enhancement Request",Critical,Closed,"2017-02-23 20:27:07","2017-02-23 20:27:07",16
Mule,"Consolidate usages of aether repository into a single reusable artifact.","Consolidate aether usages of repository between:   - The repository module   - MavenClassLoaderModelLoader   - MavenContainerClassLoaderFactory",Task,"To be reviewed",New,"2017-02-23 16:54:28","2017-02-23 16:54:28",8
Mule,"Provide a standard way to build a BindingContext from an InterceptionEvent","This is to improve the usability of using expressions from an interceptor","Enhancement Request",Major,Closed,"2017-02-23 15:22:57","2017-02-23 15:22:57",2
Mule,"Add a method in the dancer to get the current state for a resourceOwner","The returned object should be an immutable view of the current state. It must include things like what url was used for authentication, aparte from the state available already in the store.",Task,Blocker,Done,"2017-02-22 18:43:32","2017-02-22 18:43:32",2
Mule,"Support CRL in the HTTP listener","Implement certificate validation through revocation lists for clients connecting to the HTTP listener.","Enhancement Request",Major,Resolved,"2017-02-22 18:25:13","2017-02-22 18:25:13",0
Mule,"Add invalidate() method in OAuthDancer","Add an invalidate method, receiving the resourceOwnerId where applicable, in the dancers.",Task,Blocker,Done,"2017-02-22 17:47:26","2017-02-22 17:47:26",2
Mule,"The error shown when an extension has multiple providers with no alias does not helps you solve it","I created an extension with a single connection provider.    After I added a second provider, the compilation failed with the error:      Since the connection element is autogenerated, it is impossible for the users to understand that they need to add an @Alias to one of the connection providers.     The error should point to the classes that generated the conflict (in this case, the 2 connection providers) and tell you how to solve it.  ","Enhancement Request","To be reviewed",Open,"2017-02-22 16:40:28","2017-02-22 16:40:28",3
Mule,"Add callbacks before and after authorization-code authorize","For support of some SDK scenarions, some processors may be executed before starting the authorization-code grantType dance, and others after the dance is complete. These callbacks have to be provided to the dancer when building it.",Task,Blocker,Done,"2017-02-22 16:36:25","2017-02-22 16:36:25",4
Mule,"Replace Extension TypeAlias with Metadata TypeAlias","Replace uses of extension TypeAlias annotation with metadata model TypeAlias annotation.",Bug,Major,Closed,"2017-02-21 20:35:58","2017-02-21 20:35:58",8
Mule,"NullPointerException with JMS Listener","The following configuration is throwing a NullPointerException when starting the runtime.        The null pointer stacktrace is:      It seems that JmsListener property 'consumerType' is lacking a default value",Bug,Critical,Closed,"2017-02-21 16:59:13","2017-02-21 16:59:13",5
Mule,"Remove dependency from HTTP service to HTTP module","HTTP service is currently depending on code from the old HTTP module.  HTTP module should be removed from CE code, so the dependency must be removed.  Code form the module that is required on the service must be copied to the service, then other usages of the HTTP module in CE must use the HTTP service.   ",Task,Major,Done,"2017-02-21 16:19:51","2017-02-21 16:19:51",2
Mule,"Move all compatibility Code to its own repo","Move all compatibility related code from mule and mule-ee to a new github repo.    Create the necessary build plans in cloudbees and add them to the board.",Task,Blocker,Done,"2017-02-09 12:35:38","2017-02-09 12:35:38",4
Mule,"Remove skipDistributions property from pom files","Pom files from distribution modules contain a skipDistributions property used to skip the execution of some plugins.   But there is also a distributions profile that is used to include/exclude distribution modules form the build. ",Task,Minor,Done,"2017-02-21 15:43:07","2017-02-21 15:43:07",2
Mule,"Paths for processors in dynamically referenced subflows are not recalculated","Since the dynamically referenced subflows' are remembered to if there were already calculated, if the referenced subflow (2) had a reference to another subflow (3), the first time it is called it will work.   If in another execution, the flow continues in another subflow (4) witch also refers to the subflow (3), the path will be null (it will not be calculated, since it was set as already calculated).    Solution: do not remember paths for ",Bug,Minor,Resolved,"2017-02-21 13:11:19","2017-02-21 13:11:19",0
Mule,"Convert data weave into a service","Data weave is currently deployed as an artifact plugin. This implies that it will be deployed inside each application, so the memory footprint will be high.  It would be better to have DW as a service or a server plugin to have only one instance loaded in memory. Note that services are available on CE version, but server plugins are not.",Task,Major,Done,"2017-02-21 12:17:54","2017-02-21 12:17:54",16
Mule,"Replace direct buffers with pooled heap buffers","Direct buffers depend on garbage collection for the memory to be released, plus allocating bunch of them for small buffer sizes is not truly performant.u    They should be replaced with pooled heap buffersjhh",Bug,Critical,Closed,"2017-02-20 23:18:47","2017-02-20 23:18:47",5
Mule,"The dynamic-config-policy element is not part of the extension model","In the XSD of the extensions, the configurations have an element  *dynamic-config-policy*.    Because it is not included in the extension model, it is impossible for tooling to generate an UI for it so that users can configure it.    This element should be included as part of the model if we want users to define it.    We should also move the element to mule's core namespace.",Bug,Critical,Closed,"2017-02-20 18:22:27","2017-02-20 18:22:27",3
Mule,"Http Server scheduler is shutdown before the connections are closed","When an http server is closed, its connections are closed too, sending the `Connection: Close` header. But in order to send that, it still needs the executor for the io work, which was already closed when the server was stopped.",Bug,Major,Closed,"2017-02-20 16:25:06","2017-02-20 16:25:06",2
Mule,"Support core components in the Extension Model","In order to support every mule component in the extension model, some new concepts have to be added, like:    - Scopes  - Routers  - Aggregators ","Enhancement Request",Blocker,Closed,"2017-02-17 22:34:49","2017-02-17 22:34:49",13
Mule,"Support flow paths in ElementDeclaration","Support flow paths in ElementDeclaration to allow lookup using the same coordinates everywere","Enhancement Request",Critical,Closed,"2017-02-17 22:29:29","2017-02-17 22:29:29",8
Mule,"Simplify declaration to make everything a parameter","Make the ElementDeclaration of components like flows and artifact support every inner component as a parameter.","Enhancement Request",Critical,Closed,"2017-02-17 22:27:37","2017-02-17 22:27:37",8
Mule,"Tooling API shouldn't throw an exception if an error happens while resolving Metadata for a DataSense request","When resolving DataSense the dynamic Metadata could fail, in that case the exception shouldn't be propagated and a failure should be passed to DataSense so it could resolve static.",Task,Critical,Done,"2017-02-16 05:16:40","2017-02-16 05:16:40",1
Mule,"DSL: If defaultValue is explicit, write it in the XML","DSL: If defaultValue is explicit, write it in the XML",Bug,Major,Closed,"2017-02-15 02:06:40","2017-02-15 02:06:40",3
Mule,"Add missing DataSense features on WSC","Add missing DataSense features on WSC","Enhancement Request",Blocker,Closed,"2017-02-14 22:18:15","2017-02-14 22:18:15",13
Mule,"Reduce NestedProcessor to its minimum expression","Until a replacement is introduced in 4.x, minimize the NestedProcessor interface to it's minimum expression: process() and process(Result).    Also, remove the concepts of @RestrictedTo and @Extensible",Task,Blocker,Done,"2017-02-14 21:43:07","2017-02-14 21:43:07",3
Mule,"Remove `custom-transformer` and `auto-transformer`","Move custom-transformer to compatibility module",Task,"To be reviewed",Done,"2017-02-11 18:59:12","2017-02-11 18:59:12",4
Mule,"Remove jboss ts module","This is to remove support for jboss ts in mule.",Task,Minor,Done,"2017-02-11 18:11:26","2017-02-11 18:11:26",4
Mule,"Remove tomcat module","Remove tomcat module",Task,Major,Done,"2017-02-11 17:56:35","2017-02-11 17:56:35",2
Mule,"Migrate XML module to an SDK extension","Migrate XML module to an SDK extension","Enhancement Request",Critical,Closed,"2017-02-11 17:20:09","2017-02-11 17:20:09",13
Mule,"Review and update non-blocking implementation of routers","Review and update non-blocking implementation of routers",Task,"To be reviewed",Done,"2017-02-11 11:13:34","2017-02-11 11:13:34",16
Mule,"Standardize DSL for routers","DSL for routers is a more complicated than it should.    When a single processor per route can be used, then it looks like this:      If later on, the processor1 must be modified to add some additional logic, the DSL has to be updated like this:        This makes the DSL more complex than it should and that complexity is also consumed by tooling.    The proposal is to change all routers to have always a wrapper element for each route. So it would look like:      ",Task,"To be reviewed",Done,"2017-02-11 00:57:01","2017-02-11 00:57:01",8
Mule,"Implement SDK based VM connector","Spike on implementing VM connector for Mule 4","Enhancement Request",Critical,Closed,"2017-02-11 00:18:37","2017-02-11 00:18:37",8
Mule,"Spike on Flow API","We need to do a Spike on:    * Flow vs. SubFlow. Do we really need the two concepts?  * flow-ref unpredictability  * flow-ref to a sub-flow, is that actually a <include ? /> ",Task,"To be reviewed",New,"2017-02-10 22:58:22","2017-02-10 22:58:22",16
Mule,"Provide a mechanism to start the application with all outbound source stopped","This is to enable MUnit, when creating the Application, to indicate that all sources must be turn-off to avoid:   - poll execution   - http listener from trying to bind to a server socket    The API should be such as to   a. turn-off all  source's flow by default   b. for an specific set of flow named      ",Task,"To be reviewed",Done,"2017-02-10 22:44:56","2017-02-10 22:44:56",16
Mule,"Make ServerNotificationHandler part of the API","This is to move the ServerNotificationHandler infrastructure to the Mule API so extensions can be injected with it and trigger custom notifications.    This is needed for the custom notifications of the HTTP module.",Task,"To be reviewed",Done,"2017-02-10 21:55:19","2017-02-10 21:55:19",8
Mule,"Allow privileged extensions to enrich their ExtensionModel","Privileged extensions can contribute declaration enrichers which enrich their own ExtensionModels.    This should be part of the Privileged API and only selected extensions should be able to do this.","Enhancement Request",Blocker,Closed,"2017-02-10 21:39:27","2017-02-10 21:39:27",8
Mule,"Implement API for graceful shutdown","Once MULE-11794 and MULE-11798 are done, this would be just expose an API to:   - Stop all outbound facing sources   - Wait until all inflight transactions are completed, taking into account timeout time.   - Kill the instance one all transactions from each app are complete.",Task,"To be reviewed",New,"2017-02-10 21:25:18","2017-02-10 21:25:18",16
Mule,"Prevent triple state booleans","The SDK allows for parameters of boxed boolean types. This generates the possibility of a triple state boolean: true, false, undefined.    This produces a bad UX in tooling. We should:    * Disallow Boolean parameters  * Force optional boolean parameters to have a default value of false  ","Enhancement Request",Critical,Closed,"2017-02-10 21:25:02","2017-02-10 21:25:02",1
Mule,"Support tracking of inflight transactions","This is to track all the inflight transactions so when all of them are complete, we can shutdown the instance.  ",Task,"To be reviewed",New,"2017-02-10 21:21:26","2017-02-10 21:21:26",16
Mule,"Extension's XSD should be generated in runtime","Right now the XSD is generated at build time. We should make it so that it's generated when the extension is loaded.    This functionality also needs to be exposed through an API so that other components can dynamically obtain an extension's XSD","Enhancement Request",Critical,Closed,"2017-02-10 21:21:15","2017-02-10 21:21:15",8
Mule,"Remove code duplication on DefaultExtensionModelModelService","DefaultExtensionModelModelService from mule-runtime-tooling-client duplicates code that is already available on Mule container module.  More specifically, all the code used to create modules is already available on Mule's org.mule.runtime.container.internal.ClasspathModuleDiscoverer",Task,Major,Done,"2017-02-10 20:51:10","2017-02-10 20:51:10",0
Mule,"Upgrade version of Mule from 4.0 to 4.0.0","Upgrade version of Mule from 4.0 to 4.0.0",Task,Major,Done,"2017-02-10 20:38:58","2017-02-10 20:38:58",4
Mule,"Support stopping all outbound facing sources","This task is to support stopping all outbound facing sources (not VM sources) so no more inbound messages are received. This feature would be used at the beginning of the graceful shutdown.",Task,"To be reviewed",New,"2017-02-10 19:35:35","2017-02-10 19:35:35",8
Mule,"Mule 4 - Migration tool","This is the epic to create the migration tool to migrate XML and also to notify the changes so other tools (like Studio) can be aware of the changes and do other stuff like removing / adding dependencies to the application project.",Epic,"To be reviewed",New,"2017-02-10 19:13:18","2017-02-10 19:13:18",0
Mule,"Implement OAuth support in SDK","Placeholder task. Need to split","Enhancement Request",Blocker,Closed,"2017-02-10 19:03:29","2017-02-10 19:03:29",13
Mule,"Lightweight package support","This is to support the deployment of an application that has no dependencies on it. All the dependencies are declared and must be lookup using an API. We can suppose that the API for looking up for dependencies is already implemented.    This is required for Mozart so it doesn't have to send the app with the whole dependencies set each time there's a change on it.",Task,Critical,Done,"2017-02-10 19:03:24","2017-02-10 19:03:24",8
Mule,"Spike on OAuth support for SDK","Spike on OAuth support for SDK",Task,Blocker,Done,"2017-02-10 19:02:18","2017-02-10 19:02:18",21
Mule,"Support API for creating an isolated Application","This is to create an API that allows to create an Application object.    This is needed so:   - Functional test cases can use this API to create the Application over the one tests are executed   - MUnit can create the Application object to run MUnit tests   - Potentially later on, it can be used for running mule applications in embedded mode.",Task,Critical,Done,"2017-02-10 18:52:24","2017-02-10 18:52:24",32
Mule,"Update HTTP migration doc","The HTTP migration doc has not been touched since M2 and as a result is very outdated. We need to update it with new examples, review it's content and remove anything that makes no sense anymore, specially considering it might be used to document the extension.",Task,Critical,Done,"2017-02-10 17:49:02","2017-02-10 17:49:02",2
Mule,"Update Reactor lib version to 3.0.5-release","Update Reactor lib version to 3.0.5-release",Task,Major,Done,"2017-02-10 14:26:36","2017-02-10 14:26:36",1
Mule,"Move the Soap Service specific tests from the WSC to the Soap Service.","As we don't have an easy way to start a soap server with custom configurations for testing, the soap service is tested through the WSC, we should move those soap service specific tests to the service module.",Task,Major,Done,"2017-02-09 14:25:15","2017-02-09 14:25:15",8
Mule,"Spec on Soap Connect","Spec on Soap Connect.","Enhancement Request",Blocker,Closed,"2017-02-09 14:15:40","2017-02-09 14:15:40",8
Mule,"Soap Service: Add the ability to use custom underlying transports.","Add the ability to use custom underlying transports such as   HTTPS, JMS","Enhancement Request",Blocker,Closed,"2017-02-09 14:01:23","2017-02-09 14:01:23",8
Mule,"Make the WSC use the Soap Service","Make the WSC use the Soap Service    This implies:   * Using the new API  * Find any gaps on the Service API  * Adapt all tests.",Task,Critical,Done,"2017-02-09 13:55:56","2017-02-09 13:55:56",13
Mule,"Message loss during stream cancellation phase when using stream processing with errors.","Currently switched back to per-request streams which isn't ideal.  Performance testing will determine if we can release 4.0 with this approach or need to work out a way to get streams working without message loss.","Enhancement Request",Major,Closed,"2017-02-09 01:44:56","2017-02-09 01:44:56",32
Mule,"MetadataTypes generated for Interfaces should expose the getters as fields","Currently, we always generate an empty ObjectType when dealing with interfaces, instead of inferring the fields of that object based on the getters.   This is not an issue for input parameters (see #MULE-11773), but *is an issue for the OutputModel*, since Tooling won't be able to provide a real representation of the output payload nor the Attributes of a Result.    If we have an interface like:       Then the MetadataType generated for this should be an ObjectType with two fields, one of simple type String and one of ObjectType Engine.      ",Bug,Critical,Closed,"2017-02-08 22:29:02","2017-02-08 22:29:02",5
Mule,"Parameters of Interface types should be forced to have API implementations","Parameters of Interface types should be forced to have API implementations.    If we have an operation like:      where Car is an interface like:       Then, unless we provide a public implementation of this Car interface, the only way the app user can create the parameter for this operation is to create its own implementation using a Java Component. This won't work nicely with DW.    We should enforce that *any interface used in a Parameter* has to be a baseType of a SubtypesMapping declaration, thus providing at least one implementation in the API of the Extension.  *Output should have no restriction on this.*  ","Enhancement Request",Major,Closed,"2017-02-08 22:20:15","2017-02-08 22:20:15",5
Mule,"Unify artifact JSON descriptors","As the artifact file will contain a classifier indicating if a file is a service, plugin, policy, etc, every artifact descriptor must use the same name (like mule-artifact-descriptor.json) instead of having especific names for each type.  ",Task,"To be reviewed",Done,"2017-02-08 22:02:09","2017-02-08 22:02:09",4
Mule,"Add performance test for deployment on mule 4","There are lots of changes regarding deployment on mule 4, provided scenarios should be compared against mule 3.    Some scenarios to test:    * Measure the time require to start the container  * Measure the memory consumed on a started container (with no apps).   * Measure the time required to deploy a simple application  * Measure the memory consumed by a simple application  * Estimate how many proxies can be deployed (with different policies) ",Task,"To be reviewed",New,"2017-02-08 21:51:01","2017-02-08 21:51:01",16
Mule,"Add performance tests to measure classloading changes impact","As mule 4 contains many changes regarding classloading, will be good to know what is the impact in both time and memory usage.    Some scenarios to test:  * Impact of loading the same class multiple times (both when it exists and when it does not exists)  * Memory leak detection  ",Task,Critical,New,"2017-02-08 21:43:28","2017-02-08 21:43:28",16
Mule,"Make response and error-response for listener ParameterGroups","The @Content annotation will be banned from Pojos, this affects the HTTP listener's response and error-response components so they must be migrated to ParameterGroups.",Task,Blocker,Done,"2017-02-08 21:39:05","2017-02-08 21:39:05",2
Mule,"Improve TLS API","Though today you can inject a default TLS context builder, this is per app, working by first creating the default context builder and registering it. It would be better to have this at the container level via a service.",Task,Critical,Done,"2017-02-08 21:23:19","2017-02-08 21:23:19",4
Mule,"DefaultExtensionManager's method attemptToCreateImplicitConfigurationInstance should be syncronized","The synchronization in DefaultImplicitConfiguration.createImplicitConfiguration is not enough to ensure that another thread did not beat the actual thread to create the instance.  The code:    Could fail from race condition, if the actual thread verifies the condition before the ExtensionStateTracker registers the ConfigurationInstanceProvider in the other thread. ",Bug,Minor,Resolved,"2017-02-08 20:13:06","2017-02-08 20:13:06",0
Mule,"Invalid XA JDBC Connections are created after an XA Transaction","*Invalid XA JDBC Connections are created after an XA Transaction*    * After the execution of an XA transaction, the {{jdbcConnectionFactory}} returns the same {{StandardXAConnection}} with an invalid internal state making the connector fail when starting a transaction.    ",Bug,Blocker,Closed,"2017-02-08 19:58:59","2017-02-08 19:58:59",8
Mule,"Wrong exception on ElementDeclaration validation","Wrong exception on ElementDeclaration validation",Bug,Minor,Closed,"2017-02-08 18:40:21","2017-02-08 18:40:21",2
Mule,"Wrong implicit config created when using an exclusive operation","When using an HTTP request without referencing a config one would expect an implicit request config to be used but a listener one is created instead, failing because such config cannot be implicit.  The http request operation is defined as exclusive of the requester config thus that config should be created as it's implicit one.",Bug,Critical,Closed,"2017-02-08 17:31:33","2017-02-08 17:31:33",8
Mule,"Create the new Soap Service","As a first approach we need to implement the client side, moving most of the code that is in the WSC to this module","Enhancement Request",Blocker,Closed,"2017-02-08 15:25:18","2017-02-08 15:25:18",13
Mule,"Move LockFactory to mule-api","Move LockFactory interface and its dependencies to mule-api.",Task,Major,Done,"2017-02-08 14:56:53","2017-02-08 14:56:53",1
Mule,"EventContext should be aware of <async>","Right now, it is possible to subscribe to an EventContext and get notifications when completed. CHild context allow that behaviour to work through flow-refs.    We need a way of allowing the same thing when an event goes through one (or many) <async> blocks. Also consider the case of a flow-ref which executes asynchronously.","Enhancement Request",Blocker,Closed,"2017-02-08 01:34:27","2017-02-08 01:34:27",8
Mule,"Update the names of the threads according to the executing task","For monitoring and troubleshooting, it would be good to have task information on the thread.",Task,"To be reviewed",Done,"2017-02-07 20:45:26","2017-02-07 20:45:26",2
Mule,"WSC doesnt pick WSDL files from the current classpath","Creating an app using the WSC connector doesn't work if the WSDL location is relative to the project.  ",Bug,Blocker,Closed,"2017-02-07 20:31:03","2017-02-07 20:31:03",5
Mule,"Add URL option to HTTP request","Instead of being able to override a configs host and port, we should allow an url attribute.  ",Task,Blocker,Done,"2017-02-07 20:25:55","2017-02-07 20:25:55",8
Mule,"Handle fatal errors in Mule processors by wrapping exception to avoid reactor handing","Handle fatal errors in Mule processors by wrapping exception to avoid reactor handing.",Task,Critical,Done,"2017-02-07 20:06:43","2017-02-07 20:06:43",4
Mule,"Introduce new processing strategy configuration and/or remove existing config based on result of spec/tests.","Introduce new processing strategy configuration and/or remove existing config based on result of spec/tests.",Task,Critical,Done,"2017-02-07 20:03:52","2017-02-07 20:03:52",8
Mule,"Performance tuning based on results of performance testing.","Performance tuning based on results of performance testing.",Task,"To be reviewed",Done,"2017-02-07 20:03:09","2017-02-07 20:03:09",16
Mule,"Create and run scenarios macro performance scenarios for Flow and processing strategies","Create and run scenarios macro performance scenarios for Flow and processing strategies:    Set of use case based tests run against 3.8.3 and 4.0 measuring TPS, memory, cpu etc. and also testing the results of different 4.0 processing strategies.",Task,Major,Done,"2017-02-07 20:02:16","2017-02-07 20:02:16",0
Mule,"Add component resolution to DataSense service on Tooling Runtime Client API","DataSenseService should allow to resolves data sense component information for a componentPath.",Task,Major,Done,"2017-02-07 19:51:00","2017-02-07 19:51:00",0
Mule,"Make MessagingException immutable and internal","Following all immutability improvements in Mule 4, we need to make MessagingException immutable too.    Also it would have to be declared as part of the privileged API.",Task,"To be reviewed",New,"2017-02-07 19:43:21","2017-02-07 19:43:21",8
Mule,"Review Event/Message benchmark results and tune/optimize","Review Event/Message benchmark results and tune/optimize","Enhancement Request","To be reviewed",Open,"2017-02-07 19:42:25","2017-02-07 19:42:25",8
Mule,"Complete binding API","Complete the binding feature of the ConnectionManager so that it's possible to properly bind/unbind connectionProviders from their configs in runtime.","Enhancement Request",Blocker,Open,"2017-02-07 19:17:00","2017-02-07 19:17:00",32
Mule,"Make ImportedTypes not dependent on Extension name","Make ImportedTypes not dependent on Extension name.    This implies using the TypeCatalog for resolving the Extension that declares a given type in the DslResolvingContext.     We are assuming all the necessary information for actually importing the type (that is, having the declaring Extension in the context) is provided by some external actor, and that dependency resolution does not rely on the Extension model import declarations.","Enhancement Request",Major,Closed,"2017-02-07 19:16:44","2017-02-07 19:16:44",8
Mule,"Remove multiple registry capabilities","Remove the capability of a mule context to have multiple registries","Enhancement Request",Critical,Closed,"2017-02-07 19:08:18","2017-02-07 19:08:18",16
Mule,"Add missing test scenarios of CursorStream","Add test cases for the following scenarios:    * Serialization of CursorStream  * Serialization of message which payload is a CursorStreamProvider (java and kryo)  * Mapping of BufferSizeExceededException",Task,Blocker,Done,"2017-02-07 19:05:23","2017-02-07 19:05:23",4
Mule,"Implement object streaming","Implement object streaming","Enhancement Request",Blocker,Closed,"2017-02-07 19:02:18","2017-02-07 19:02:18",8
Mule,"Cannot inject LockFactory","I attempted to refactor the ObjectStore Extension to inject ObjectStoreManager and LockFactory individually instead of the MuleContext. While functional tests still worked, running a Mule app in a standalone runtime failed, throwing the attached stacktrace.    Please contact me if you need help reproducing this. Thanks!",Bug,Major,Closed,"2017-02-07 18:59:23","2017-02-07 18:59:23",2
Mule,"Remove custom-lifecycle-adapter-factory element","Remove custom-lifecycle-adapter-factory element",Task,Blocker,Done,"2017-02-07 18:58:58","2017-02-07 18:58:58",2
Mule,"Move *-message-info-mapping to compatibility module","Move *-message-info-mapping to compatibility module",Task,Blocker,Done,"2017-02-07 18:58:14","2017-02-07 18:58:14",4
Mule,"Remove *-all-strategy elements","Remove *-all-strategy elements. This are elements used by services",Task,Blocker,Done,"2017-02-07 18:57:13","2017-02-07 18:57:13",2
Mule,"Remove *-router elements","Remove *-router elements. This were old routers used by services.      ",Task,Blocker,Done,"2017-02-07 18:56:13","2017-02-07 18:56:13",2
Mule,"Remove dynamic-round-robin, dynamic-all, dynamic first-successful elements","Remove dynamic-round-robin, dynamic-all, dynamic first-successful elements",Task,Blocker,Done,"2017-02-07 18:55:17","2017-02-07 18:55:17",0
Mule,"Move `all` router to compatibility","Remove all router",Task,Blocker,Done,"2017-02-07 18:53:48","2017-02-07 18:53:48",4
Mule,"Remove Agent interface","Agent interface was used on old mule versions to provide some kind of pluggable components.  On mule 4, there are much better options to extend mule (core extension/server plugin), so this interface should be removed.",Task,Major,Done,"2017-02-07 18:52:50","2017-02-07 18:52:50",4
Mule,"Remove custom-aggregator,  custom-splitter, custom-router elements","Remove custom-aggregator,  custom-splitter, custom-router elements",Task,Blocker,Done,"2017-02-07 18:52:50","2017-02-07 18:52:50",4
Mule,"Remove *-object-store elements","Remove *-object-store elements. Tests cases must use the object store module instead of the core elements.",Task,Blocker,Done,"2017-02-07 18:49:53","2017-02-07 18:49:53",8
Mule,"Flow should be immutable","Flow interface should be immutable once an instance is constructed with the flow builder.",Task,Major,Done,"2017-02-07 18:49:50","2017-02-07 18:49:50",4
Mule,"Remove custom-connector element","Remove custom-connector element",Task,Blocker,Done,"2017-02-07 18:47:29","2017-02-07 18:47:29",2
Mule,"Remove custom-exception-strategy elements","Remove custom-exception-strategy element",Task,Blocker,Done,"2017-02-07 18:46:10","2017-02-07 18:46:10",0
Mule,"Remove default-exception-strategy element","Remove default-exception-strategy element",Task,Blocker,Done,"2017-02-07 18:45:10","2017-02-07 18:45:10",1
Mule,"Remove async processingStrategy attribute","Remove async processingStrategy attribute",Task,Blocker,New,"2017-02-07 18:38:08","2017-02-07 18:38:08",2
Mule,"Revamp parse-template to support DW expressions","Revamp parse-template to support DW expressions",Task,Blocker,Done,"2017-02-07 18:36:50","2017-02-07 18:36:50",4
Mule,"Move set, remove, copy for attachments, properties, session properties to compatibility module","Move set, remove, copy for attachments, properties, session properties and variables to compatibility module",Task,Blocker,Done,"2017-02-07 18:34:30","2017-02-07 18:34:30",8
Mule,"Analyze how to provide package version on each exported package","As the version of packages used on mule artifacts could be not the same when different artifact versions are used, it would be a good thing to detect in advance whether a package exported by the container will work on a given artifact.",Task,"To be reviewed",Done,"2017-02-07 18:32:33","2017-02-07 18:32:33",8
Mule,"Remove interceptor-stack elements","Remove interceptor-stack elements",Task,Blocker,Done,"2017-02-07 18:32:33","2017-02-07 18:32:33",2
Mule,"Manage optional dependencies on mule modules","Mule module plugin is not properly managing the packages from third party libraries that are optional form maven point of view.  Suppose a module M uses a third party library A which uses another third party library B. A has B as optional dependency in the pom.xml file. This means that A is supposed to work even when B is not present at runtime (with some features not enabled/supported).  When a dependency is optional and it was not explicitly declared on M's pom.xml, then the plugin is not able to analyze B's packages, as the B artifact won't be listed as a dependency.  The thing is that those B packages used from A should be part of the M API only when B is available at runtime. So, the container should detect in some way whether or not B is available and include exported B packages depending on that.",Task,"To be reviewed",New,"2017-02-07 18:28:22","2017-02-07 18:28:22",16
Mule,"Remove jrun-transaction-mamanger, resin-transaction-mamanger and jndi-transaction-manager elements","Remove jrun-transaction-mamanger, resin-transaction-mamanger, custom-transaction-manager and jndi-transaction-manager elements",Task,Blocker,Done,"2017-02-07 18:27:38","2017-02-07 18:27:38",2
Mule,"Remove custom-transaction elements","Remove reconnect-notifier and reconnect-custom-notifier element",Task,Blocker,Done,"2017-02-07 18:25:43","2017-02-07 18:25:43",2
Mule,"Remove *-processing-strategy elements","Remove reconnect-notifier and reconnect-custom-notifier element",Task,Blocker,Done,"2017-02-07 18:25:01","2017-02-07 18:25:01",8
Mule,"Remove reconnect-notifier and reconnect-custom-notifier element","Remove reconnect-notifier and reconnect-custom-notifier element",Task,Blocker,Done,"2017-02-07 18:22:32","2017-02-07 18:22:32",2
Mule,"Remove reconnect-custom-strategy element","Remove composite-source element",Task,Blocker,Done,"2017-02-07 18:18:48","2017-02-07 18:18:48",2
Mule,"Move Interceptor handlers registration from MuleContext to Application API ","Once an API is defined in order to programmatically describe an application the interceptor handlers registration would need to be added into this API.",Task,"To be reviewed",Done,"2017-02-07 17:41:49","2017-02-07 17:41:49",4
Mule,"Clean up debugger API","Debug API must be clean up after MULE-10834 is solved",Task,Major,Done,"2017-02-07 17:14:21","2017-02-07 17:14:21",0
Mule,"Plugins Doc: Add error types for operations and sources","Add error types to operations and sources in the autogenerated documentation for mule plugins",Task,Critical,Done,"2017-02-07 17:12:03","2017-02-07 17:12:03",2
Mule,"FunctionalTestCase should not exist","FunctionalTestCase should not be used, every functional test must use the artifact test runner instead.",Task,Major,Done,"2017-02-07 17:10:16","2017-02-07 17:10:16",4
Mule,"Remove custom-source element","Remove custom-source element",Task,Blocker,Done,"2017-02-07 16:10:57","2017-02-07 16:10:57",4
Mule,"Remove composite-source element","Remove composite-source element",Task,Blocker,Done,"2017-02-07 16:09:33","2017-02-07 16:09:33",4
Mule,"Move request-reply to compatibility module","Move request-reply to compatibility module",Task,Blocker,Done,"2017-02-07 16:07:59","2017-02-07 16:07:59",4
Mule,"Move processor and custom-processor to compatibility module","Move processor and custom-processor to compatibility module. As part of this issue we should verify if it's possible using the Privileged API",Task,Blocker,Done,"2017-02-07 16:07:13","2017-02-07 16:07:13",8
Mule,"Move queue-profile and queue-store to VM transport","Move queue-profile and queue-store to VM transport and all the elements that extend those types",Task,Blocker,Done,"2017-02-07 16:03:59","2017-02-07 16:03:59",0
Mule,"Remove custom-agent element","Remove custom-agent element",Task,Blocker,Done,"2017-02-07 16:02:22","2017-02-07 16:02:22",4
Mule,"Migrate idempotent message filter","Define an error type for this filter.",Task,Critical,Done,"2017-02-07 15:37:31","2017-02-07 15:37:31",8
Mule,"Remove null-component","Remove null-component",Task,Blocker,Done,"2017-02-07 15:10:48","2017-02-07 15:10:48",4
Mule,"Remove echo-component","Remove echo-component",Task,Blocker,Done,"2017-02-07 15:09:21","2017-02-07 15:09:21",4
Mule,"Remove log-component","Remove log-component",Task,Blocker,Done,"2017-02-07 15:08:05","2017-02-07 15:08:05",4
Mule,"Move invoker to compatibility module","Move invoker to compatibility module",Task,Blocker,Done,"2017-02-07 15:02:27","2017-02-07 15:02:27",4
Mule,"Move component and it's dependencies to compatibility module","This is to move <component> and it's dependencies like:   - <*-entry-point-resolver>   - <spring-object> // This one may require integration the new spring module   - <singleton-object>    - <prototype-object>   - etc.    ",Task,Blocker,Done,"2017-02-07 15:00:42","2017-02-07 15:00:42",8
Mule,"Provide non streaming options for HTTP client","Since the HTTP extension must support streaming under all circumstances (it's the safest bet) the HttpClient API of the service only supports those scenarios. It's quite annoying for simple uses to have to either use the blocking API or run the non blocking on an IO thread when a quick response and consumption is desired. We should provide non streaming options both blocking and non blocking for those cases.",Task,Major,Done,"2017-02-07 14:59:48","2017-02-07 14:59:48",2
Mule,"Remove expression component","Move expression component to compatibility module",Task,Blocker,Done,"2017-02-07 14:55:26","2017-02-07 14:55:26",4
Mule,"Update mule runtime tooling client 1.x","Update mule runtime tooling client 1.x  ",Task,Major,Done,"2017-02-07 14:48:29","2017-02-07 14:48:29",16
Mule,"Tooling API define DTOs for DataSense Service","Tooling Runtime API is exposing DataSense API, as agreed the API for Tooling should define a DTO and utility classes for it.",Task,Major,Done,"2017-02-07 14:00:38","2017-02-07 14:00:38",8
Mule,"Tooling API define DTOs for MetadataKeys on Metadata Service","Tooling Runtime API is exposing Mule API MetadataResult, as agreed the API for Tooling should define a DTO and utility classes for it.",Task,Major,Done,"2017-02-07 13:59:57","2017-02-07 13:59:57",16
Mule,"Upgrade wireMock dependency","We're currently using version 1.53, while 2.5.1 is already out.",Task,"To be reviewed",New,"2017-02-07 13:26:22","2017-02-07 13:26:22",2
Mule,"Define mechanism to identify the http:request of a proxy","We need a mechanism, through the use of the pointcut, to discover the http:request operation that it's related to the http proxy flow, since it may be that the user adds an additional http:request for other purposes.    Initially the idea was to discover the operation by taking into account the operation parameterization and it's value based on the incoming request but it's not possible.",Task,Blocker,Done,"2017-02-07 12:11:26","2017-02-07 12:11:26",4
Mule,"Source only policies and operation only policies","Define and implement source only policies and operation only policies.     The whole behaviour and functionality is already defined. This task is only to define how the XML should look like for a policy that only affects the source or a policy that only affects an operation and make the required changes.",Task,Blocker,New,"2017-02-07 12:08:37","2017-02-07 12:08:37",4
Mule,"Support remove variable in <transform> element","Support remove variable in <transform> element.",Task,Critical,Done,"2017-02-07 11:44:09","2017-02-07 11:44:09",4
Mule,"AbstractMuleArtifactModelJsonSerializer should check object requirements after deserialization","AbstractMuleArtifactModelJsonSerializer is used to serialize/deserialize AbstractMuleArtifactModel instances from/to JSON files.  When ab object is created from a JSON file, the same checks used on the object constructor shuold be applied on the deserialized instance in order to ensure consistency.","Enhancement Request",Minor,Open,"2017-02-06 21:57:44","2017-02-06 21:57:44",1
Mule,"Review how to improve dependencies management on isolated test runner","Isolated test runner classifies dependencies to use on the test based on the scope in which the dependency was included in the project.  For example, if a component needs to use a module that is defined on the container, the dependency must be declared as provided, so the classification process will marked it as being art of the container.  The problem with this approach is that, from a usage point of view, is not possible to determine if the dependency was required on the production or testing code.  This problem will be more relevant when applications/plugins/etc will start to be packaged on light packages, as it will force the package regeneration process to include them all, instead of include only the needed dependencies.","Enhancement Request",Major,Open,"2017-02-06 21:50:44","2017-02-06 21:50:44",16
Mule,"[DW Expression] Using an empty expression inside a choice doesn't work but it evaluates to false in MEL","Inside a choice, using an empty when expression, results in an exception when using dataweave  as the expression language, this behaviour is not the same when using MEL as the expression language where an empty when expression evaluates as false.",Bug,Minor,Resolved,"2017-02-06 21:33:56","2017-02-06 21:33:56",4
Mule,"Add tool to ensure that Mule API is backward compatible on each release","Mule API is defined on the modules that export packages on the container classloader.  Each package contains classes/interfaces. These resources must be compared on every release to ensure that the changes are backward compatible (at java declaration level, there could be changes in the behaviour)","Enhancement Request",Critical,Resolved,"2017-02-06 21:17:53","2017-02-06 21:17:53",16
Mule,"Implement a new management module ","Available management module on mule 4 is based on the old Agent interface.  The module should be revamped using newer concepts as core extensions or plugins if required.","Enhancement Request","To be reviewed",Open,"2017-02-06 20:48:14","2017-02-06 20:48:14",16
Mule,"Update maven mule module plugin to support privileged API","Mule module plugin must be updated to validate that the privileged API is sound:    * Every exported privileged package must use only other privileged or standard exported package ONLY  * There is no privileged package exported as standard one (checking also transitive dependencies)  ","Enhancement Request",Blocker,Resolved,"2017-02-06 20:37:27","2017-02-06 20:37:27",4
Mule,"Define privileged API","Define which classes/packages must be part of the privileged API.  ","Enhancement Request",Blocker,Resolved,"2017-02-06 20:34:18","2017-02-06 20:34:18",8
Mule,"Compatibility plugin must use privileged API","Compatibility plugin must use the privileged API in order to access internal classes used to manipulated old message API","Enhancement Request",Blocker,Closed,"2017-02-06 20:28:23","2017-02-06 20:28:23",4
Mule,"Provide a mechanism to define a privileged API","Some plugins and tools used on Mule 4 will require access to parts of the API that we don't want to make public for everyone.  This API will be accessible only to privileged plugins. Privileged plugins will be whitelisted on the core","Enhancement Request",Blocker,Closed,"2017-02-06 20:25:51","2017-02-06 20:25:51",8
Mule,"HTTP request lost when a failing one is processed first","org.mule.test.module.spring.security.SecureHttpPollingFunctionalTestCase features a server with basic auth receiving 2 requests triggered by a poll almost simultaneously. One of them has valid credentials while the other does not. Problem is that, although both requests are clearly received and processed by the listener, if the first to be processed (in terms of the flow) is the invalid one then the other is lost and ends up failing afterwards.  Though this is happening in that test it would seem it's a more pressing issue in the execution engine that could affect all sources.",Bug,Blocker,Closed,"2017-02-06 20:08:42","2017-02-06 20:08:42",8
Mule,"Review how Aether handles managed dependencies","This issue is related to the asm dependency declared in mule-core as 3.1 and in mule dependencies management 3.3.1, this ends up in a artifactNotResolved fromAether due to it tries to resolve to 3.3.1 but maven downloaded 3.1.  ",Task,"To be reviewed",New,"2017-02-06 18:47:45","2017-02-06 18:47:45",4
Mule,"Refactor ProcessingStrategies for Beta","Refactor ProcessingStrategies for Beta","Enhancement Request","To be reviewed",Closed,"2017-02-06 18:12:07","2017-02-06 18:12:07",4
Mule,"Add support for handling stream payloads on TryIt","The way Streams are handle by TryIt is to show the class name for those payloads, instead it should use the new capability added to Mule to open a cursor in order to transform it to an String representation therefore notifications could be readable.",Task,Critical,Done,"2017-02-06 15:27:39","2017-02-06 15:27:39",8
Mule,"Migrate Flowstack management from notification listeners to interceptors","Flowstack is currently maintained by listening to notifications. It would be better to change it to use interceptors.",Task,Major,New,"2017-02-06 13:36:18","2017-02-06 13:36:18",8
Mule,"Bundle spring version required by CXF module in compatibility plugin","When spring is completely isolated in core, cxf will still need to keep its own spring version.    We need to ensure that 2 different spring versions isolated cause no trouble.",Task,Critical,Done,"2017-02-06 12:53:16","2017-02-06 12:53:16",2
Mule,"Nested Pojos with static configurations have its lifecycle tied to its container config","This affects the usability of the OAuth extension. See the description of MULE-11642.     Also, this will affect all other users of the OAuth service, since the OAuth objects will have to be initialized before the component that uses OAuth is attempted to be used.",Bug,Major,Closed,"2017-02-06 12:23:57","2017-02-06 12:23:57",8
Mule,"OAuth config is not initialized at application startup","OAuth authorization grant type authenticator needs to create some http listeners on startup.    Since the OAuth authenticator is declared inside an http requester config, and that config is dynamic, the OAuth authenticator is not initialized until the requester config is initialized, which doesn't happen until it tries to send a request.    This is a serious usability problem, since the only way to workaround this bug and create the required http listeners is to try to send a request through the requester to force the initialization of the oauth authenticator.    This is currently worked around in the tests by forcing the initialization calling the http request operation. (See https://github.com/mulesoft/mule/blob/mule-4.x/extensions/oauth/src/test/java/org/mule/test/oauth2/AbstractOAuthAuthorizationTestCase.java#L99).",Bug,Blocker,Closed,"2017-02-06 12:20:00","2017-02-06 12:20:00",8
Mule,"Implement ThreadingService#getExecutorStats() - Agent support","Consume the result of MULE-10549",Task,"To be reviewed",New,"2017-02-03 23:02:44","2017-02-03 23:02:44",16
Mule,"Analyse stream closer use in on-error handlers","While adding errors to the HTTP connector I found that one cannot put a stream as payload in an on-error component, even a on-error-continue, since at the end of the processing the stream closer service will be invoked and the payload stream closed. This is odd since it means a stream cannot be returned from an on-error-continue or from an on-error-propagate in a referenced flow (that might have an on-error-continue handler).   This has been the behaviour from day one though even though it seems more accurate to close the streams if the system error handler is called or after the default error handler execution.",Task,"To be reviewed",Done,"2017-02-03 22:14:42","2017-02-03 22:14:42",4
Mule,"Add support on Tooling Runtime Client to have custom types for DataSense","Allow to retrieve the custom types xml needed by DataSense.",Task,Critical,Done,"2017-02-03 21:15:53","2017-02-03 21:15:53",2
Mule,"Migrate HTTP module unit tests","Most unit tests of the HTTP module are still relevant because:  * some components are still directly used by the service/extension (only require package name changes)  * some components have service/extension twins (copied at some point and moved to the service/extension)    We need to migrate the former and refactor the latter to work with their service/extension counterparts.",Task,Critical,Done,"2017-02-03 20:18:57","2017-02-03 20:18:57",4
Mule,"Change HTTP extension namespace to http","Right now, to track migration and had an incremental replacement between module and extension, the extension has httpn as namespace. Once the module is gone it can be changed to http again. The main issue here will be replacing it in the tests.",Task,Critical,Done,"2017-02-03 20:14:22","2017-02-03 20:14:22",2
Mule,"Support artifact plugins on domains","Currently, it is not supported to define a config of an SDK based extensions on a domain. It should be  ","Enhancement Request",Critical,Closed,"2017-02-03 20:06:12","2017-02-03 20:06:12",8
Mule,"Spike on a Soap Client ","Spike on a soap client that serves as a mule service to consume SOAP operations, and provided Metadata for it.",Task,Critical,Done,"2017-02-03 19:27:34","2017-02-03 19:27:34",5
Mule,"Update Tooling Runtime whitelist to include lib/wlang-1.2.0-SNAPSHOT.jar","A new transitive dependency has been added so assembly whitelist has to be updated",Task,Minor,Done,"2017-02-03 19:07:13","2017-02-03 19:07:13",0
Mule,"Unwrap TypedException before creating a MessagingException","Unwrap TypedException before creating a MessagingException so the user sees the real cause and not the wrapper.","Enhancement Request",Major,Closed,"2017-02-03 18:31:08","2017-02-03 18:31:08",2
Mule,"Verify Mule error types overriding for Extensions does not happen","Discuss Mule error types overriding for Extensions",Task,Major,Done,"2017-02-03 18:28:12","2017-02-03 18:28:12",1
Mule,"Exceptions in interceptionAPI future from around hang execution ","If an exception gets thrown inside ProcessorInterceptor specifically     ProcessorInterceptor#around     At the time of returning the CompletableFuture    Something like       The exception (only the exception) gets logged and the execution halts.   No trace to actually track the origin of the error",Bug,Blocker,Closed,"2017-02-03 17:53:38","2017-02-03 17:53:38",4
Mule,"Test Connectivity returns null instead of a proper error message","When doing test connectivity with invalid credentials, a null error type is retrieved (since the internal mule app tries to start and fails). We need test connectivity to skip this validation and perform the real one once the app is up and running.",Bug,Major,Closed,"2017-02-03 17:47:50","2017-02-03 17:47:50",8
Mule,"Add missing extensions descriptions","Currently JMS, OAuth, Sockets, WSC descriptions are empty.    We should consider making it a mandatory element since this will most probably be the description that exchange, studio or any other tooling consuming the extension model will show as a summary.",Task,Major,Done,"2017-02-03 17:23:33","2017-02-03 17:23:33",1
Mule,"Move extensions out of the core.","We should move all core extensions out of the core.  This implies:  * migrating them to a new repository  * set up the necessary CI jobs  * create a new Internal Extensions Parent Pom, with all the internal plugins and dependencies required.  * check extensions that were used in integration tests (those test should be moved to another repo)  ",Task,Blocker,Done,"2017-02-03 17:21:32","2017-02-03 17:21:32",13
Mule,"Document new expressions for common uses cases","We need to list all the common uses cases for expressions and translate them to DW. For example:  * flowVars = variables  * message.payload = payload  * message.dataType = dataType  * comparing two strings  * accessing an objects variable    This will not only help document the changes but also identify thins to change/improve.",Task,Critical,Done,"2017-02-03 15:17:35","2017-02-03 15:17:35",0
Mule,"ImplicitConnectionProviderValueResolver doesn't communicate the dynamism correctly","*ImplicitConnectionProviderValueResolver doesn't communicate the dynamism correctly*    This value resolver has the following override     With a hard coded *false* value, refactor this value resolver to communicate correctly the dynamism depending in the dynamism of the generated result set.",Bug,Critical,Closed,"2017-02-02 21:14:25","2017-02-02 21:14:25",8
Mule,"NullSafeValueResolverWrapper doesn't communicate the dynamism correctly","*NullSafeValueResolverWrapper doesn't communicate the dynamism correctly*         Only checks the dynamism from the delegate and not from the fallback, due that fallback can have dynamic default values.",Bug,Major,Closed,"2017-02-02 21:10:45","2017-02-02 21:10:45",3
Mule,"Implicit resolvers doesn't use the same resolving mechanism that for a defined element","*Implicit resolvers doesn't use the same resolving mechanism that a defined element*.    We should change completely how we handle implicit dynamic connection providers, since current approach is not ideal.  Currently, we evaluate the CP using only the first event, and then always return that resolved instance. This is not ok for dynamic CP, since we need new events to also be used for evaluation.    ","Enhancement Request",Critical,Closed,"2017-02-02 20:46:37","2017-02-02 20:46:37",8
Mule,"ArtifactFunctionalTestCase - Add support for application test resources","When the artifact is an application, it should consider that it can have target/class and target/test-classes. From both urls, the analysis should be done of what resources, classes and packages to export.",Task,Critical,Done,"2017-02-02 19:49:02","2017-02-02 19:49:02",8
Mule,"Guarantee the order of Infrastructure parameters in the schema","Guarantee the order of Infrastructure parameters in the schema","Enhancement Request",Blocker,Closed,"2017-02-02 19:39:51","2017-02-02 19:39:51",5
Mule,"Mule API Clean up","While we are still defining the API, there are things that we found that are not used anymore or deprecated components that must be removed. This issue is intended to track all the changes related to API clean up",Task,Blocker,Done,"2017-02-02 17:22:40","2017-02-02 17:22:40",60
Mule,"Support a way to have DW handle multimaps","MULE-10878 has exposed a critical issue: there's no way of supporting multi maps out of the box (an HTTP request cannot be built including several values for one header or query param). This is because there's no way to have DW read/write a multi map.  This task should include refactoring ParameterMap and moving it to API and allow a way of indicating to DW that a multi map is being handled/expected.",Task,Blocker,Done,"2017-02-02 16:39:25","2017-02-02 16:39:25",4
Mule,"Remove or improve org.mule.runtime.core.api.Event#getVariableValueOrNull for performance","Remove{{ org.mule.runtime.core.api.Event#getVariableValueOrNull}} for performance",Bug,Critical,Closed,"2017-02-02 13:41:03","2017-02-02 13:41:03",2
Mule,"Use of default processing strategy results in component logging to container log file","Use of default processing strategy results un component logging to container log file",Bug,Critical,Closed,"2017-02-02 13:38:34","2017-02-02 13:38:34",4
Mule,"Add DW performance tests","As MVEL has, we need to add benchmark performance tests for DW.",Task,Critical,Done,"2017-02-02 12:18:31","2017-02-02 12:18:31",0
Mule,"Export org.yaml.snakeyaml.introspector package from spring-config module ","The package {{org.yaml.snakeyaml.introspector}} should be exported too as mule-module-spring-config is already exporting a sub-set of {{yaml}} packages and class {{org.yaml.snakeyaml.introspector.Property}} should be visible too. If not a class not found exception is thrown when a other artifacts try to use {{yaml}}.",Task,Major,Done,"2017-02-01 22:11:02","2017-02-01 22:11:02",0
Mule,"Provide a way of overriding Extra Boot Packages in MuleArtifactFunctionalTestCase","Right now, the extra boot packages can only be merged but no override in the MuleArtifactFunctionalTestCase. This implies that one cannot remove the default ones.","Enhancement Request","To be reviewed",Closed,"2017-02-01 20:14:50","2017-02-01 20:14:50",4
Mule,"Support for defining DW functions","A way of registering DW functions to be evaluated in an extension should be provided.    See `org.mule.runtime.api.el.ExpressionFunction`","Enhancement Request",Critical,Closed,"2017-02-01 19:21:19","2017-02-01 19:21:19",13
Mule,"HTTP Listener error responses don't include content-length nor last chunk","When a 400 or 500 error code is returned by the HTTP listener, the response if malformed. It should contain Content-Length or add a last chunk (currently it says Transfer-Encoding: chunked but omits the last one).",Bug,Major,Resolved,"2017-02-01 19:19:46","2017-02-01 19:19:46",2
Mule,"Move the documentation MOJO to a separate maven plugin that uses the tooling client.","The documentation MOJO lives in the mule-extensions-maven-plugin, but as we want that the documentation gets generated by the tooling client and uses the ToolingExtensionModel we need to extract that MOJO into another independent plugin.",Task,Blocker,New,"2017-02-01 18:58:20","2017-02-01 18:58:20",5
Mule,"Documentation Generator: parse HTML snippets to Asciidoc elements","When getting a description from the extension model that contains HTML snippes like bold or italic we should convert those snippets to asciidoc so they can reflect in the generated documentation.    Snippets to parse:  * bold  * italic  * li  * pre  * ul  * ol  * code  * {@link SomeType}  * ",Task,Major,Done,"2017-02-01 18:27:01","2017-02-01 18:27:01",8
Mule,"Move asciidoc generator from the documentation mojo to tooling-client","Our plugins documentation it's based on an asciidoc file that is generated from an ExtensionModel, that code lives in the mule-extensions-maven-plugin and it's used to generate the final html documentation page. This should be extracted to a new module in the tooling-client that it's only in charge of generating the asciidoc from a tooling extension model so exchange can use this and generate the asciidoc using the tooling-client.",Task,Major,Done,"2017-02-01 18:17:21","2017-02-01 18:17:21",8
Mule,"Improve extensions UX","*Improve extensions UX*    All operations    * “Transaction” tab -> “Transactions” group in advanced tab  * Target -> Target Variable  All connector configurations  * “mel:new HashMap()” as default input params is wrong  * “Transaction Configuration” tab -> “Transactions” group in advanced tab    DB  * Insert  ** Fix typo: “Auto generated keys” -> “Auto generate keys”  * Select  ** Move Query Settings fetch size/max row into “Query” section on Advanced tab    File/FTP  * Move Lock to advanced tab universally  * Move encoding to advanced tab universally  * Make path/source path/target path required universally  ","Enhancement Request",Critical,Closed,"2017-02-01 14:59:55","2017-02-01 14:59:55",8
Mule,"Enable bidirectional XML generation/parsing","Since Mozart uses the DSL Resolver along with the XML Generation Service to write XMLs, we need a new service to be able to parse a given mule XML into the same object structure.","Enhancement Request",Blocker,Closed,"2017-01-31 20:16:22","2017-01-31 20:16:22",13
Mule,"poolingProfile being created without prefix by XMLGenerationService","When using the XMLGenerationService to convert a db config with a my-sql-connection connectionProvider the poolingProfile parameter is being created without prefix.    {code:title=database config}  <db:config name=database_config>    <db:my-sql-connection database=patients host=myDatabase.org password=organization_owner port=5432 user=myuser>      <pooling-profile acquireIncrement=1 maxPoolSize=5 maxWait=0 maxWaitUnit=SECONDS minPoolSize=0 preparedStatementCacheSize=5/>    </db:my-sql-connection>  </db:config>  {code}",Bug,Blocker,Closed,"2017-01-31 19:47:56","2017-01-31 19:47:56",1
Mule,"Forbid the use of Content in POJOs fields that are not groups","Forbid the use of Content in POJOs fields that are not groups","Enhancement Request",Critical,Closed,"2017-01-31 19:20:44","2017-01-31 19:20:44",13
Mule,"SDK should provide the working directory property","When initialising the extension, we would like to know the working directory. Nowadays this information can be retrieved by searching it in the Registry.","Enhancement Request",Major,Closed,"2017-01-31 19:04:39","2017-01-31 19:04:39",5
Mule,"Migrate old MessageProcessor interceptors to the new API","The old components that mey be reviewed and/or migrated to interceptors are:    * ProcessingStrategyInterceptingMessageProcessor  * ProcessorStartCompleteProcessor  * ProcessIfPipelineStartedMessageProcessor  * ProcessingTimeInterceptor  * FlowConstructStatisticsMessageProcessor  * AsyncReplyToPropertyRequestReplyReplier",Task,Major,New,"2017-01-31 15:41:34","2017-01-31 15:41:34",16
Mule,"Migrate use of blocking API by transports to use non-blocking API that supports new interceptors. Part 1.","This would allow the transaction support to use the reactor api, effectively deprecating and possibly removing the process method.    The outcome of this spike would be a determination of whether its more convenient to do this migration (MULE-11023) or to add an interception mechanism for the blocking Processor API.",Task,Critical,Done,"2017-01-31 15:38:30","2017-01-31 15:38:30",8
Mule,"Integration tests fail to execute because a classloading problem with extensions","When running the integration tests from maven in isolation it fails with: Caused by: java.lang.ClassNotFoundException: org.mule.extension.file.common.api.exceptions.FileError    While if the whole project is compile with maven, they work.    The complete stack trace is:    initializationError(org.mule.test.xml.functional.BeanPropertyExtractorTestCase)  Time elapsed: 0 sec  <<< ERROR!  java.lang.TypeNotPresentException: Type org.mule.extension.file.common.api.exceptions.FileError not present   at sun.reflect.annotation.TypeNotPresentExceptionProxy.generateException(TypeNotPresentExceptionProxy.java:46)   at sun.reflect.annotation.AnnotationInvocationHandler.invoke(AnnotationInvocationHandler.java:84)   at com.sun.proxy.$Proxy44.value(Unknown Source)   at org.mule.runtime.module.extension.internal.loader.enricher.ErrorsDeclarationEnricher.lambda$enrich$0(ErrorsDeclarationEnricher.java:72)   at java.util.Optional.ifPresent(Optional.java:159)   at org.mule.runtime.module.extension.internal.loader.enricher.ErrorsDeclarationEnricher.enrich(ErrorsDeclarationEnricher.java:69)   at org.mule.runtime.extension.internal.loader.ExtensionModelFactory.lambda$enrichModel$1(ExtensionModelFactory.java:191)   at java.lang.Iterable.forEach(Iterable.java:75)   at org.mule.runtime.extension.internal.loader.ExtensionModelFactory.enrichModel(ExtensionModelFactory.java:191)   at org.mule.runtime.extension.internal.loader.ExtensionModelFactory.create(ExtensionModelFactory.java:142)   at org.mule.runtime.extension.api.loader.ExtensionModelLoader.loadExtensionModel(ExtensionModelLoader.java:68)   at org.mule.test.runner.infrastructure.ExtensionsTestInfrastructureDiscoverer.discoverExtension(ExtensionsTestInfrastructureDiscoverer.java:92)   at org.mule.test.runner.api.ExtensionPluginMetadataGenerator.getExtensionModel(ExtensionPluginMetadataGenerator.java:162)   at org.mule.test.runner.api.ExtensionPluginMetadataGenerator.generateExtensionManifest(ExtensionPluginMetadataGenerator.java:177)   at org.mule.test.runner.api.AetherClassPathClassifier.generateExtensionMetadata(AetherClassPathClassifier.java:640)   at org.mule.test.runner.api.AetherClassPathClassifier.buildPluginUrlClassifications(AetherClassPathClassifier.java:426)   at org.mule.test.runner.api.AetherClassPathClassifier.classify(AetherClassPathClassifier.java:149)   at org.mule.test.runner.api.ArtifactIsolatedClassLoaderBuilder.build(ArtifactIsolatedClassLoaderBuilder.java:290)   at org.mule.test.runner.ArtifactClassLoaderRunner.createClassLoaderTestRunner(ArtifactClassLoaderRunner.java:223)   at org.mule.test.runner.ArtifactClassLoaderRunner.<init>(ArtifactClassLoaderRunner.java:131)   at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)   at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)   at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)   at java.lang.reflect.Constructor.newInstance(Constructor.java:423)   at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:107)   at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:86)   at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)   at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)   at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)   at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33)   at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:364)   at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)   at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)   at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)   at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)   at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)   at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)  Caused by: java.lang.ClassNotFoundException: org.mule.extension.file.common.api.exceptions.FileError   at java.net.URLClassLoader.findClass(URLClassLoader.java:381)   at java.lang.ClassLoader.loadClass(ClassLoader.java:424)   at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)   at java.lang.ClassLoader.loadClass(ClassLoader.java:357)   at java.lang.Class.forName0(Native Method)   at java.lang.Class.forName(Class.java:348)   at sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)   at sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)   at sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)   at sun.reflect.annotation.AnnotationParser.parseSig(AnnotationParser.java:439)   at sun.reflect.annotation.AnnotationParser.parseClassValue(AnnotationParser.java:420)   at sun.reflect.annotation.AnnotationParser.parseMemberValue(AnnotationParser.java:349)   at sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:286)   at sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:120)   at sun.reflect.annotation.AnnotationParser.parseAnnotations(AnnotationParser.java:72)   at java.lang.Class.createAnnotationData(Class.java:3521)   at java.lang.Class.annotationData(Class.java:3510)   at java.lang.Class.getAnnotation(Class.java:3415)   at org.mule.runtime.module.extension.internal.loader.java.MuleExtensionAnnotationParser.getExtension(MuleExtensionAnnotationParser.java:61)   at org.mule.runtime.module.extension.internal.loader.java.JavaModelLoaderDelegate.declare(JavaModelLoaderDelegate.java:152)   at org.mule.runtime.module.extension.internal.loader.java.JavaExtensionModelLoader.declareExtension(JavaExtensionModelLoader.java:109)   at org.mule.runtime.extension.api.loader.ExtensionModelLoader.loadExtensionModel(ExtensionModelLoader.java:67)   ... 26 more",Bug,Minor,Closed,"2017-01-31 14:26:07","2017-01-31 14:26:07",8
Mule,"Migrate `synchronous` processing strategy away from using blocking code path","Migrate `synchronous` processing strategy away from using blocking code path.",Task,Critical,Done,"2017-01-31 11:05:33","2017-01-31 11:05:33",4
Mule,"Set componentIdentifier into components during parsing","Set componentIdentifier into components during parsing",Task,Critical,Done,"2017-01-30 20:45:31","2017-01-30 20:45:31",4
Mule,"Make host and port required for HTTP request","Host and port should be required on HTTP request to align it with how other connectors work. Users can override them still at the request level. ",Bug,"To be reviewed",Closed,"2017-01-30 19:25:32","2017-01-30 19:25:32",1
Mule,"Implement a way to determine the ComponentType of a component","Also review other implementations of ComponentIdentifier#getComponentType()    Also, review SCOPE vs ROUTER in CompoenntType",Task,"To be reviewed",Done,"2017-01-30 18:39:08","2017-01-30 18:39:08",8
Mule,"Resolve operation parameters during interception","Operations have a different approach to resolving parameters that other processors. Those must be properly resolved to be passed to the interceptors.",Task,Major,Done,"2017-01-30 18:29:24","2017-01-30 18:29:24",4
Mule,"Rename AnnotatedObject to Component","Rename AnnotatedObject to Component(?)","Enhancement Request","To be reviewed",Closed,"2017-01-30 17:51:21","2017-01-30 17:51:21",2
Mule,"Fix ElementDeclaration handling of open objectTypes","Fix ElementDeclaration handling of open objectTypes so we can represent unknown keys in objectType",Bug,Blocker,Closed,"2017-01-30 17:31:56","2017-01-30 17:31:56",8
Mule,"Tooling API should not depend on xml APIs","Tooling API has a few third-party dependencies, the ones related to xml should not be included:    These libraries have issues when running Tooling API from Studio/OSGi",Task,Major,Done,"2017-01-30 16:45:09","2017-01-30 16:45:09",0
Mule,"Remove XML module","XML module will be replaced at some point with a XML extension.   Module will be removed from the code/distro to avoid exposing it on the API",Task,Critical,Done,"2017-01-29 15:23:26","2017-01-29 15:23:26",8
Mule,"MuleConfigurationConfigurator throws NPE and does not configure configuration","MuleConfigurationConfigurator throws NPE and does not configure configuration    Seems MuleContext is injected after getObject() is called.",Bug,Minor,Resolved,"2017-01-29 12:23:38","2017-01-29 12:23:38",4
Mule,"Mule exceptions thrown from an extension end up as UNKNOWN","Since upon an exception we try mapping it to an error according to the failing processor and sdk extensions define one for each component, any mule exceptions thrown from an operation (e.g. a transformation error when evaluating the operations parameters) will end up mapped using the operations mappings. Under most circumstances this results in an UNKNOWN error from the extension namespace.",Bug,Blocker,Closed,"2017-01-28 21:12:23","2017-01-28 21:12:23",1
Mule,"Create an API  to create beans that behave like flows","The Flow API will be close (i.e. the flows won't be part of the API)     MUnit requires to have elements that behaves like flow and add behavior around them.   It should also be able to retrieve them and trigger them.    We require an API from Mule that allow us to achieve this","Enhancement Request","To be reviewed",Resolved,"2017-01-28 14:03:05","2017-01-28 14:03:05",4
Mule,"Define mechanism to inform shared libraries dependencies","We need to define how we are going to identify shared libraries provided by the application or domain.",Task,Major,Done,"2017-01-27 19:02:44","2017-01-27 19:02:44",8
Mule,"Fail when a KeysResolver is used without an OutputResolver or TypeResolver","*Add a warning message when a KeysResolver is used without a OutputResolver or a TypeResolver*    * Nowadays an extension developer is able to put a {{KeysResolver}} without having a {{TypeResolver}} nor {{OutputResolveR}}, the build of the extension will be success, but in runtime, that {{KeysResolver}} won't be used, because there is not a TypeResolver configured.  * See {{MetadataScopeAdapter}}","Enhancement Request",Minor,Open,"2017-01-27 16:57:14","2017-01-27 16:57:14",3
Mule,"Pojo with Map field DSLSyntax element is not generated correctly","When consuming the DSL for a pojo with the following structure, the generated information is not correct.      The generated DSL has a properties element, with an attribute name of key, and no information about having a child element with name property.",Bug,Blocker,Closed,"2017-01-27 14:48:06","2017-01-27 14:48:06",5
Mule,"Add powermock version to global pom","As powermock is used on both CE and EE, we'll add it to dependency management to avoid possible differences in version used.","Enhancement Request",Major,Resolved,"2017-01-27 14:40:04","2017-01-27 14:40:04",0
Mule,"java.util.Map is listed in the types of an ExtensionModel","An Object with typeId java.util.Map is in the listo of types provided by an extension when it shouldn't    ",Bug,Critical,Closed,"2017-01-27 13:57:47","2017-01-27 13:57:47",1
Mule,"Add SSL as an ErrorType provided by Mule","*Add SSL as an ErrorType provided by Mule*    * Several connectors uses SSL for their connections, and in all these cases SSL Errors can be thrown, add the capability in Mule and in the SDK to provider an {{ErrorType}} associated with SSL Exceptions.","Enhancement Request",Critical,Closed,"2017-01-27 13:47:55","2017-01-27 13:47:55",8
Mule,"Tooling API should have only one ArtifactResolver interface","It would be better to only have one interface to be implemented by customers when using Tooling API for resolving external dependencies.",Task,Major,Done,"2017-01-27 11:32:11","2017-01-27 11:32:11",0
Mule,"Move HttpConstants and HttpHeaders to http-service-api","Move it to the service api so it may be accessed by users of the http service","Enhancement Request",Major,Closed,"2017-01-26 22:55:22","2017-01-26 22:55:22",1
Mule,"Have an ExpressionManager interface in API","In order to inject the ExpressionManager into services and other places, it has to be declared in mule-api.","Enhancement Request",Major,Closed,"2017-01-26 21:47:03","2017-01-26 21:47:03",1
Mule,"Add DataType for Map objects","There is currently no way of analysing a Map in terms of DataType. There's a CollectionDataType that allows checking the item DataType but we should have one for Map that allows checking key and value DataTypes. This is required by DW in order to properly analyse which bindings might have inner mime types (like the flow variables map does).",Task,Critical,Done,"2017-01-26 20:40:21","2017-01-26 20:40:21",4
Mule,"DslElementModel: Add default values and expose the value in the element","DslElementModel: Add default values and expose the value in the element","Enhancement Request",Blocker,Closed,"2017-01-26 20:00:03","2017-01-26 20:00:03",5
Mule,"XmlMetaDataFieldFactory returns empty field list for element with complexType/any","For an element definition in a schema such as:        metaDataFields is empty after calling XmlMetaDataFieldFactory#loadFields",Bug,Major,Closed,"2017-01-26 17:37:56","2017-01-26 17:37:56",0
Mule,"JMS: Add support for TypedValues","JMS: Add support for TypedValues","Enhancement Request",Major,Closed,"2017-01-26 16:49:07","2017-01-26 16:49:07",5
Mule,"Define a way to know which processors cannot be skipped from an interceptor","Interception will throw an exception if a InterceptingMessageProcessor type of processor is skipped by an interceptor.  During design time when registering interceptors this information should be available in order to avoid just failing when running the flow.",Task,Major,Done,"2017-01-26 14:58:02","2017-01-26 14:58:02",4
Mule,"JMS: Fails to set UserMessageProperty when using TypedValues","JMS: Fails to set UserMessageProperty when using TypedValues        Excepton occurs when runing `JmsAbstractQueueBridge`",Bug,Minor,Closed,"2017-01-26 14:49:14","2017-01-26 14:49:14",1
Mule,"Define interception API ","The API for interception should be added to mule-api and it should allow to do before/after and around interceptions.",Task,Blocker,Done,"2017-01-26 14:48:28","2017-01-26 14:48:28",8
Mule,"Parameters should be resolved only once if before doesn't make any changes while intercepting the processor ","Current approach for interception needs to resolve parameters before calling the interceptor as this is input while doing interception to make decision on how interceptor would handle a before operation either if the processor is skipped.  If the interceptor doesn't make any changes to the variables/message the parameters would be resolved once again when processor is executed.",Task,Major,Done,"2017-01-26 13:10:56","2017-01-26 13:10:56",8
Mule,"ComponentIdentifier/parameters not set into splitter/flow-ref components","This seems to be the case on components from parsers that are not yet migrated to the new way of parsing.",Bug,Major,Closed,"2017-01-26 13:05:27","2017-01-26 13:05:27",4
Mule,"Support compatibility fields from the event on interception","Some interceptions may want to change session variables.    We need to define how to use the privileged compatibility api for this.  ",Task,Major,Done,"2017-01-26 13:03:55","2017-01-26 13:03:55",2
Mule,"Automatically @Inject fields in the handler factories","This should happen during registration?",Task,Critical,Done,"2017-01-26 13:03:06","2017-01-26 13:03:06",2
Mule,"Support non-blocking interception handlers","{{CompletableFuture}} was included as part of the API for Interceptors. This task is to confirm and validate that it will allow to do non-blocking intercetor handlers and add tests for it.",Task,Major,New,"2017-01-26 13:00:30","2017-01-26 13:00:30",8
Mule,"Define interception handlers registration mechanism","Handler Factories may be registered at the context (for all the runtime) or for individual applications.    The order of the handlers in the chain must be predictable too.",Task,Blocker,Done,"2017-01-26 12:59:22","2017-01-26 12:59:22",8
Mule,"Define mechanism to patch the runtime and apps","Define mechanism to patch the runtime and apps",Task,Blocker,Done,"2017-01-26 10:55:38","2017-01-26 10:55:38",8
Mule,"Define optimum bufferSize for cursor streams","We need to do performance test/analysis to define the optimum size of the cursor stream's buffer",Task,Blocker,Done,"2017-01-25 21:16:22","2017-01-25 21:16:22",0
Mule,"Rework the Tooling API to avoid exposing Mule APIs - Dispatcher","As a consequence of the definition in MULE-11481 we must update Tooling API to not expose any Mule API.    The task of updating how the services should be invoked using reflection can be done as part of a separate issue.",Task,Critical,Done,"2017-01-25 21:05:14","2017-01-25 21:05:14",16
Mule,"MetadataKeyIdModelProperty shouldn't be public","The MetadatKeyIdModelProperty states the type and parameter name of the parameter containing the MetadataKeyId annotation. This is useful for the runtime, but tooling consumer can't do much with this info, and should always rely on the MetadataKeyPartModelProperty.    Problems arise regarding the keyId model property in the context of multi level datasense, since the parameterName in the mp actually references the name of the containing parameter group. It references the argument and not the parameter in the model (which is what we need in the runtime, but makes no sense for the external consumer)",Task,"To be reviewed",Done,"2017-01-25 17:48:54","2017-01-25 17:48:54",3
Mule,"JMS TopicBridgeTestCase: replace consumer with listener to avoid flakyness","JSM TopicBridgeTestCase: replace consumer with listener to avoid flakyness",Task,Major,Done,"2017-01-25 17:41:10","2017-01-25 17:41:10",5
Mule,"Ignore flaky JMS topic bridge test","Ignore flaky JMS topic bridge test",Task,Trivial,Done,"2017-01-25 17:38:36","2017-01-25 17:38:36",1
Mule,"Allow ExpressionManager to indicate mimeType related output","When evaluating an expression through DW, the resulting mime type is always application/java, we need to have an API that allows indicating whether    * the mime type should be modified or return as is   * another mime type is desired",Task,Major,Done,"2017-01-25 15:45:24","2017-01-25 15:45:24",4
Mule,"Improve parse behaviour for DW","With MEL, component like the logger could define a message attribute that would then be parsed which allowed String and expressions to be composed together (one could write message=My message or message=My #['message'] which would result in the same output). Since we've decided to deprecate the parse method and only allow straight up String in DW it is quite annoying to have to put a String (in the logger example, one has to write message='My message'). It would be ideal to find a way to avoid that double String thing.",Task,Blocker,Done,"2017-01-25 14:10:28","2017-01-25 14:10:28",2
Mule,"ModuleExceptionHandler should consider error type hierarchy","ErrorTypes have the notion of hierarchy but that however is not contemplated by the ModuleExceptionHandler when an error is thrown. The operation's ErrorTypeProvider is used to match exactly the thrown error and so one must defined each and everyone regardless of whether or not they belong to a hierarchy.   In my case, I had RESPONSE_VALDIATION error type and several children like BAD_REQUEST, but if only RESPONSE_VALIDATION was defined in the provider throwing BAD_REQUEST would fail. ",Bug,Critical,Closed,"2017-01-25 12:46:05","2017-01-25 12:46:05",8
Mule,"Implement cached IO scheduler that grows that uses async hand-off with queue.","- Should use a bounded queue for hand-off  - Should not have max size.  - Should grow on demand  - -Should start rejecting work when resources start getting tight.- -> MULE-13936","Enhancement Request","To be reviewed",Resolved,"2017-01-24 21:31:27","2017-01-24 21:31:27",2
Mule,"Disable scheduling of incoming requests in HTTP connector","Disable scheduling of incoming requests in HTTP connector",Task,Critical,Done,"2017-01-24 20:05:56","2017-01-24 20:05:56",1
Mule,"Move catalog related classes to a separate module to be consumed in the extensions-xml-support","The `ExtensionModel` generation in the *extensions-xml-support* module relies heavily on the custom types' catalog which is from the project *mule-datasense-api*.    For the time being, the catalog classes are copied from it to read a subset of types, but it must be dropped and moved to either another mule's module or make the `mule-datasense-api` not dependent on mule's internal implementations (such as the component model) or resolve circular dependencies.",Task,Blocker,Done,"2017-01-24 14:30:44","2017-01-24 14:30:44",0
Mule,"Provide a way to register functions with same name but different arguments","The binding context allows you to add a binding based on a function name, but one might want to have a function with the same name but different number of arguments. For example, myFunc() and myFunc(int).","Enhancement Request",Critical,Closed,"2017-01-24 14:23:59","2017-01-24 14:23:59",4
Mule,"MavenBundleDescriptorLoader forces zip type even for jar dependencies","Because all mule plugins that are loaded with the org.mule.runtime.module.deployment.impl.internal.plugin.MavenBundleDescriptorLoader are forcing the type to zip, it is impossible to resolve transitive dependencies to other mule plugins, when trying to load the extension model.  The type should be jar, or the code should check that if the packaging is mule-extension, the type is jar and not zip.",Bug,Blocker,Closed,"2017-01-24 02:26:47","2017-01-24 02:26:47",0
Mule,"SFTP connector uses . for listing and some implementations don't support it","The current implementation of SFTP uses . to denote a directory for listing files even after other paths (like /a/path/.). The RFC says it's optional to support it (should keyword), and removing it works for all servers tested.",Bug,Major,Resolved,"2017-01-23 20:21:56","2017-01-23 20:21:56",0
Mule,"Create an ExtensionModel for core components of Mule","Currently, mule's core components like Logger or SetPayload doesn't have an extension-model that represents them.     In order to unify the handling between SDK extensions and core components, both for runtime and tooling, we need to provide the extension models of each component accordingly.","Enhancement Request",Blocker,Closed,"2017-01-23 19:26:02","2017-01-23 19:26:02",8
Mule,"Change ConnectionExceptionCode to ErrorType","*Change ConnectionExceptionCode to ErrorType*    * Nowadays the {{ConnectionValidationResult}} exposes a {{ConnectionExceptionCode}} to communicate the type of error happened when creating/validating an exception.  * This {{ConnectionExceptionCode}} is an *Enum* which provides a set of different codes, but these codes get short when describing some specific situations, and the error ends being {{UNKOWN}} or another code that doesn't make too much sense.  * To improve this, change the {{ConnectionExceptionCode}} to an {{ErrorType}}",Task,Critical,Done,"2017-01-23 17:30:59","2017-01-23 17:30:59",8
Mule,"Add a way to validate transitive dependencies for Tooling Runtime Client","As transitive dependencies will change and we have to enforce API and implementation in different artifacts we have to have a way to keep control of these dependency graph.",Task,Major,Done,"2017-01-23 15:26:45","2017-01-23 15:26:45",1
Mule,"Allow to release versions of Tooling Runtime Client implementation for a already released Mule version","Current approach implemented maps Mule version with Tooling Runtime Client implementation and Agent Rest Client. The scenario where a bug was found in the implementation of Tooling Runtime Client should be handled by releasing a new version of the Client without affecting clients of the API as they always request a Tooling Runtime Client for a Mule version.    Some sort of override properties file could be added in order to map the last client version that works for a Mule version.",Task,Major,Done,"2017-01-23 15:23:51","2017-01-23 15:23:51",2
Mule,"Rename block to try","We should rename block to try as it's the most familiar term in our user base.  ",Bug,Critical,Closed,"2017-01-20 23:35:59","2017-01-20 23:35:59",2
Mule,"Review name attribute on child elements","Define if the rule of not having name attributes in child element must continue to exists or it should be removed. And as part of this task remove the rule if necessary.    Seems that the gain of having that rule is not much and allowing to use it in the dsl of child elements may simplify the DSL.",Task,Blocker,Done,"2017-01-20 20:15:55","2017-01-20 20:15:55",2
Mule,"Review if org.mule.runtime.core.management.stats.ProcessingTime is required","Mule 3.x uses org.mule.runtime.core.management.stats.ProcessingTime and org.mule.runtime.core.management.stats.ProcessingTimeWatcher to calculate the time used to process a given event.   A ProcessingTime is attached to each event when the event is created. ProcessingTimeWatcher uses weakReferences to those ProcessingTime instances to detect when a given event has been processed.  This approach has issues on mule 3, but it won't work on mule 4 as the event is immutable, to every change in the event requires to create a new one, so the ProcessingTime will be released every time the event is changed.  Mule 4 has EventContext#success and EventContext#onError methods that could be used to replace the ProcessingTime management",Task,Critical,Done,"2017-01-20 16:49:00","2017-01-20 16:49:00",2
Mule,"NPE on foreach when an expression in an inner operation fails","FtpTestCase has a scenario where a list of files is thrown in a foreach and inside a file write is done using an expression for the path. During the DW/MEL default inversion, that expression in the file write operation started failing but this showed up as an NPE in line 119 of the foreach, where the MessagingException failing processor is needed but is null. The error seemed to be related to the reactor hook for errors, since the ME thrown there is reaching the foreach without the failing processor, which should be the file write.",Bug,Critical,Closed,"2017-01-20 16:27:23","2017-01-20 16:27:23",4
Mule,"ParameterGroup's order are not populated automatically is a value was not configured manually","*ParameterGroup's order are not populated automatically is a value was not configured*    * Following the work of https://www.mulesoft.org/jira/browse/MULE-11247 , also the {{ParameterGroup}} should be populated with the order information.  * If the order is configured manually (Using the {{@Placement}} annotation), the value is populated correctly in the model.  * The solution should contemple that the *General* parameter group should be always the first group.",Bug,Major,Closed,"2017-01-20 14:30:27","2017-01-20 14:30:27",5
Mule,"Create first draft of Mule 4 architecture","The document will contain a high level diagram of the different components in Mule 4. For each component explain those that were changed / created for Mule 4, why we created them and why we decide to do it the way we did it.    This will be a short document, not a very detailed one. There will be link to the already existent specs for those who want to go deeper.",Task,Critical,Done,"2017-01-20 14:02:55","2017-01-20 14:02:55",8
Mule,"Reimplement flow path mechanism so it does not depend on each processor","Currently the flow path mechanism depends on adding logic on each processor. This mechanism is error prone and cause issues with debugger and eventually will cause problems with notifications and munit.     With the work done in the new parsers we can have a centralized place to configure the flow path for each element in a consistent way.",Task,Critical,Done,"2017-01-20 13:56:59","2017-01-20 13:56:59",8
Mule,"Define mechanism to decouple tooling API from changes in the runtime APIs","This task is to define the mechanism to use to decouple the tooling API from the runtime API so tooling projects (exchange, studio, mozart, etc) can always depend on the latest version of the Tooling API.    We need to take into account that, since we are keeping backward compatibility for our APIs, it's easy to think that just exposing the latest version of the API should work but this is not the case. For instance, a new method added to the API (keeps backward compatibility) will cause a NoSuchMethodException if it's invoked against a mule version older than the one that included this new method.",Task,Critical,Done,"2017-01-20 13:42:43","2017-01-20 13:42:43",8
Mule,"Support maven loaders on policies","Policies must support maven loaders on the PolicyTemplateDescriptor",Task,Major,Done,"2017-01-19 17:21:44","2017-01-19 17:21:44",4
Mule,"Tooling Runtime Client should expose Try it functionality from Mule Agent","Add to Tooling API the support for doing try it functionality",Task,Major,Done,"2017-01-19 17:15:51","2017-01-19 17:15:51",16
Mule,"Add support for Try it on Mule Agent to retrieve execution information ","The idea would be to allow through the Tooling API the deployment of an application with the capture data setting turn on which will make mule capture all the messages before executing an MP.     Then there would be another service provided by the Tooling API to gather the latest captured data so Mozart can display it. Such information will be group by flow and event id allowing the user to navigate through the whole execution of a particular inbound message.  ",Task,Critical,Done,"2017-01-19 16:55:06","2017-01-19 16:55:06",16
Mule,"Implement support for interception message processor from the Debugger","Debugger should use the interception support added in MULE-11346 with a different API due to the debugger should be able to modify session/flow variables along with the message too.",Task,"To be reviewed",Done,"2017-01-19 16:46:36","2017-01-19 16:46:36",8
Mule,"Allow definninig interceptors for message processors","MULE-11346 added support for interception processors executions. This task is about defining the API that MUnit would be using and how they could define the interceptors (callbacks) to be called by Mule Runtime.",Task,"To be reviewed",Done,"2017-01-19 16:43:38","2017-01-19 16:43:38",4
Mule,"Make HTTP messages body a TypedValue","The HTTP message body is an Object right now but we should have it be a TypedValue<Object> so that the MediaType is no longer needed.",Task,Blocker,Done,"2017-01-19 16:42:59","2017-01-19 16:42:59",2
Mule,"Remove Event from HTTP basic auth filter","Since the current basic auth filter is just that, a security filter, it requires the event. We should remove it once there's a way of setting the security context through an SDK operation by mimicking the filter functionality.",Task,Critical,Done,"2017-01-19 16:39:55","2017-01-19 16:39:55",4
Mule,"Remove Event from HTTP authentication API","We need to remove the event from the auth API which is the only thing keeping the Event in the requester. This will impact oauth as well.",Task,Critical,Done,"2017-01-19 16:37:35","2017-01-19 16:37:35",4
Mule,"Mule API Clean up","While we are still defining the API, there are things that we found that are not used anymore or deprecated components that must be removed. This issue is intended to track all the changes related to API clean up",Task,Major,Done,"2017-01-19 16:33:07","2017-01-19 16:33:07",16
Mule,"Benchmark to determine best approach for demultiplexing events and dispatching to cpu light","Benchmark to determine best approach for demultiplexing events and dispatching to cpu light",Task,Critical,Done,"2017-01-19 16:00:53","2017-01-19 16:00:53",8
Mule,"SDK connectors must not expose other plugins' packages as exportedPackages","A plugin must not export classes that are already exported by other plugins.    This is the case of the FTP and the FTPS (or HTTP with Sockets).  The current exported packages for the FTP connector is:      while the FTPS has the following:      The code responsible of doing the instrospection relies on org.mule.runtime.module.extension.internal.resources.manifest.ExportedArtifactsCollector","Enhancement Request",Critical,Open,"2017-01-19 13:49:45","2017-01-19 13:49:45",5
Mule,"Change mule runtime to support deployment of server plugins as jars","This is to support the new packaging of server plugins as jars in the runtime. The structure generated by the packager must be take into account since there are changes compared to the zip file structure.",Task,Critical,Done,"2017-01-19 13:35:04","2017-01-19 13:35:04",4
Mule,"Review and add message processing trace logging where needed","Review and add logging where needed",Task,Critical,Done,"2017-01-19 10:23:57","2017-01-19 10:23:57",8
Mule,"Make CPU-intensive pool a ForkJoinPool","ForkJoinPool seems to be a great fit for the computation pool.    When it is so, the mechanism it has to keep the parallelism may be put to allow a wait policy when scheduling from cpuintensive into a busy cpuLight pool",Task,"To be reviewed",Done,"2017-01-18 23:31:41","2017-01-18 23:31:41",0
Mule,"Introduce CursorStreams","Introduce the concept of a random access, reversable, concurrent InputStream.    This issue is about introducing the capability. Not integrating it into the actual runtime.","Enhancement Request",Major,Closed,"2017-01-18 22:13:09","2017-01-18 22:13:09",16
Mule,"Change mule runtime to support deployment of services as jars","This is to support the new packaging of services as jars in the runtime. The structure generated by the packager must be take into account since there are changes compared to the zip file structure.",Task,Critical,Done,"2017-01-18 21:37:35","2017-01-18 21:37:35",4
Mule,"Change mule runtime to support deployment of domains as jars","This is to support the new packaging of domains as jars in the runtime. The structure generated by the packager must be take into account since there are changes compared to the zip file structure.",Task,Critical,Done,"2017-01-18 21:36:13","2017-01-18 21:36:13",4
Mule,"Change mule runtime to support deployment of application as jars","This is to support the new packaging of applications as jars in the runtime. The structure generated by the packager must be take into account since there are changes compared to the zip file structure.",Task,Critical,Done,"2017-01-18 21:35:54","2017-01-18 21:35:54",4
Mule,"JMS connector doesn't allow subclasses to change send() parameters","Some connectors like WMQ need to change send() parameters based on endpoint configuration attributes or outbound properties.",Bug,Major,Resolved,"2017-01-18 18:07:05","2017-01-18 18:07:05",0
Mule,"Remove DynamicPipeline","DynamicPipeline and its implementations should be removed.",Task,Major,Done,"2017-01-18 14:51:36","2017-01-18 14:51:36",1
Mule,"Migrate performance tests to JMH","Contiperf framework is not compatible with JUnit 4.12+, so all tests need to be migrated to JMH which is also a more solid framework.",Task,Major,Done,"2017-01-18 13:38:24","2017-01-18 13:38:24",8
Mule,"Implement handling of back-pressure via OVERLOAD exception type.","Implement handling of back-pressure via OVERLOAD exception type.",Task,Critical,Done,"2017-01-18 10:27:22","2017-01-18 10:27:22",8
Mule,"Exclude mule-plugin dependencies from container classloader","The ArtifactIsolatedClassLoaderBuilder should know how to exclude from the container classloader all mule-plugin dependencies.     Not only the actual mule-plugin dependency but also all its transitives.    All this so the user's application pom.xml don't look like this:    ","Enhancement Request",Minor,Closed,"2017-01-17 20:04:20","2017-01-17 20:04:20",2
Mule,"Make ArtifactIsolatedClassLoaderBuilder to automatically discover mule-plugins by classifier","Currently in order to make ArtifactIsolatedClassLoaderBuilder to create a valid classloader graph we need to explicitly tell it what are the coordinates of the mule-plugins. something like that:    elements.add(com.mulesoft.mule.plugins:mule-ee-compatibility-plugin);  elements.add(org.mule.modules:mule-module-file);  elements.add(org.mule.modules:mule-module-http-ext);  elements.add(org.mule.modules:mule-module-sockets);  elements.add(org.mule.modules:mule-module-apikit);      The idea here will be that the builder should read the pom check for mule plugins and its transitives mule plugins and register them with out a user needing to tell it so.","Enhancement Request",Minor,Closed,"2017-01-17 19:21:45","2017-01-17 19:21:45",4
Mule,"Spike on supporting MULE_BASE","We need to do an spike on what it would take to support MULE_HOME MULE_BASE functionality in 4.0 since studio requires it for not duplicating the whole runtime and being able to start different instances.",Task,Critical,Done,"2017-01-16 21:29:04","2017-01-16 21:29:04",4
Mule,"Create DSL-API converter for string to enums","Add support for converting string to enums.",Task,Blocker,Done,"2017-01-16 20:07:30","2017-01-16 20:07:30",2
Mule,"Tooling Client cant resolve transitive mule plugin dependencies from zip files when loading extension.","When loading an extension model from a zip file we need to provide an ArtifactResolver implementation that resolves a given Artifact to a File, if we provide the dependency zip file it won't load the extension properly.",Bug,Critical,Closed,"2017-01-16 20:04:37","2017-01-16 20:04:37",3
Mule,"Adapt to DW new syntax","Some syntax changes have been introduced to DW, so we need to adapt our tests to them.",Task,Blocker,Done,"2017-01-16 20:00:08","2017-01-16 20:00:08",1
Mule,"Provide a way to set the SecurityContext in SDK","In order to eliminate all MuleEvent uses from HTTP, there must be a way to replace the HttpBasicAuthenticationFilter. Though a custom version could be built to replicate it's superclass, it's impossible to set the required SecurityContext without accessing the Event.",Task,Critical,Done,"2017-01-16 19:48:40","2017-01-16 19:48:40",8
Mule,"Different values in a connection don't trigger a new connect() for cached providers","When trying different scenarios for dynamic configs in the HTTP request part I stumbled upon the fact that performing 2 requests varying a dynamic host (which is a connection param) resulted in the second being the same as the first. In org.mule.test.module.http.functional.requester.HttpRequestDynamicConfigTestCase#requestsGoThroughClient1 the following requests demonstrate the issue:    Notice that the first request goes to localhost and without any more changes to the config parameters the next goes to 1.1.1.1 which should fail but instead is successful because it ends up reusing the first connection.  Though a combination of config and connection params should be taken into account to define whether to reuse the cached connection, it seems the connection ones are ignored.",Bug,Blocker,Closed,"2017-01-16 19:19:56","2017-01-16 19:19:56",3
Mule,"Support application declaration as interface between tooling and componentModel","Support application declaration as interface between tooling and componentModel","Enhancement Request",Blocker,Closed,"2017-01-16 15:39:42","2017-01-16 15:39:42",13
Mule,"Don't validate the existence of POJO fields when is used only as a return type","*Don't validate the existence of POJO fields when is used only as a return type*    * Nowadays when returning a POJO the SDK validates if each field has a getter and each getter has a field, this won't work on POJOs where the field values are calculated.  * Delete de validation when the POJO is only used as a return type","Enhancement Request",Major,Open,"2017-01-16 15:37:53","2017-01-16 15:37:53",5
Mule,"Useful error never informed by connectivity testing","When performing connectivity testing, the extensions almost never inform a useful connection code. UNKNOWN is constantly resolved",Bug,Blocker,Closed,"2017-01-16 15:20:50","2017-01-16 15:20:50",13
Mule,"Disallow operations to receive the current Event and Message","This should also include removing the concept of Function<Event, T>.    Coordinate with [~afelisatti] before executing this task.    Also add a validation that no operation tries to receive the event or the message  ",Task,Blocker,Done,"2017-01-16 14:58:20","2017-01-16 14:58:20",3
Mule,"Decouple email connector from MuleMessage","PagingProviderEmailDelegate manually generates a list of Messages. It shouldn't.","Enhancement Request",Blocker,Closed,"2017-01-16 14:06:35","2017-01-16 14:06:35",2
Mule,"Auto Generate extensions documentation","Auto generate documentation when the extension is built. Mimic what devkit currently has","Enhancement Request",Blocker,Closed,"2017-01-16 13:52:45","2017-01-16 13:52:45",13
Mule,"Loading ExtensionModels in Studio takes too long","We found that either the Extension support from Mule Runtime or the class loading stuff takes a too long when loading an extension model from Tooling and Tooling is running under an Eclipse Plugin classpath.  It could be related with the scan classpath that Extension support does in order to discover the class annotated with the @Extension. This issue is about to resolve this performance issue and make it work for Studio/Eclipse OSGi environments.",Task,Major,Done,"2017-01-14 03:01:04","2017-01-14 03:01:04",1
Mule,"Move extensions stuff from TokenManagerConfig to OAuthExtension","In order to have a consistent UX, this has to done, based on the following comments:    * https://github.com/mulesoft/mule/pull/3941#discussion-diff-95906036R35  * https://github.com/mulesoft/mule/pull/3941#discussion-diff-95900375R28    This currently blocked because of MULE-11412","Enhancement Request","To be reviewed",Closed,"2017-01-13 21:27:53","2017-01-13 21:27:53",4
Mule,"Support loading policies and extensions in FakeMuleServer","Enable to execute policies in FakeMuleServer.  Policies are applied on HTTP extension's listener/requesters, so we also need FakeMuleServer to support using extensions. HTTP at least.","Enhancement Request",Blocker,Closed,"2017-01-13 18:49:17","2017-01-13 18:49:17",0
Mule,"Remove request builder concept from HTTP","We should remove the request builder concept from HTTP. The reasons for this are:  * It is conceptually confusing. Why is body/headers part of it, but not path and method? There is no reason. All of these are pieces of the same request.  * Making the request builder reusable adds complexity to the UI.   * Manually specifying a request builder on each HTTP request is difficult. Instead, we should create something like a request template that can be specified on the connector - since 99% of the team any common pieces that would be shared for a request template would be shared for all API requests.  ",Bug,Critical,Closed,"2017-01-13 17:56:48","2017-01-13 17:56:48",4
Mule,"TypedValue and ParameterResolver can't be used inside a Pojo annotated with @Nullsafe and Content","*TypedValue and ParameterResolver can't be used inside a Pojo annotated with @Nullsafe*    * Nullsafe annotated pojos uses a different mechanism to create {{ValueResolvers}} which doesn't consider {{TypedValue}} and {{ParameterResolver}} parameters.  * Not considering this cases, this mechanism creates value resolvers that evaluate expressions to create TypedValue type.",Bug,Blocker,Closed,"2017-01-13 17:07:55","2017-01-13 17:07:55",5
Mule,"When an exception is thrown in ModuleFlowProcessingPhase, no response is returned","When an exception is thrown in ModuleFlowProcessingPhase, with enableSourcePolicies flag enabled, there is no response sent back from the server.    A way to reproduce this is to throw an exception from a pointcut    Branch with test case: https://github.com/mulesoft/mule-ee/tree/MULE-11419",Bug,Major,Resolved,"2017-01-13 16:44:54","2017-01-13 16:44:54",4
Mule,"Improve JMS Extension acknowledgement mechanism","*Improve JMS Extension acknowledgment mechanism*    *Improvements*  * In the *JMSListener* in the {{@OnError}} method execute a {{session.recover()}} to communicate to the JMS Broker that an error occurred and the message should be redelivered.  * When the user configures a {{AUTO}} acknowledgment mode, the listener should execute an ACK in the {{@OnSuccess}} method.  ** Take care that the JMS specification says when a {{AUTO}} acknowledgment mode is selected, the JMS Client will produce an ACK if the execution of the {{listen()}} is executed correctly, but as the listener once receive the message, dispatch this one asynchronously to the flow, the {{listen()}} method always is performed successfully, producing automatically an ACK not depending on the result of the flow.  ** To work around what is explained above, when the user select an {{AUTO ACK}}, the extension communicates to the client that a {{CLIENT_ACK}} has been chosen, so the client doesn't produce the ACK automatically, then in the {{@OnSuccess}} check the ACK Mode, and if is an Extension Auto ACK, manually execute an ACK.  * Nowadays is impossible to have a *JMS Listener* with *MANUAL ACK Mode*, and later doing the ACK Manually because the *listener* and the *ACK Operation* can't share the same connection, and as consequence the same session. This will make the *ACK* operation always fails because the new connection won't find a session to make the message an ACK.  Also doing a *consume* and a *ack* doesn't have a deterministic result, due that in both operations a different connection could be configured.  ** As a possible solution implement something like {{HttpRequesterConnectionManager}} for HTTP Connector https://github.com/mulesoft/mule/pull/3923/files. That is having a shared state between all the configurations where the messages/sessions are referenced to be able to do an ACK without depending of the injected connection in the ACK Operation.  * Change the *ackId* of the JMSAttributes from a *Optional<String>* to a *String*, due that this implies that the Mule user will need to unwrap the optional value at runtime.  * Review the implications of a {{transacted}} ACK Mode.  * With client ack mode, the messages are generated from a same session, the JMS spec defines that the ACK is done over a session, not over a particular message, so doing a ACK over a message will not only produce the ACK over this one althought the messages of the entire session doesn't matter if these had been sucessfully processed or are still in flight. The same can happen doing the recover the session, this method can affect on more that one message.","Enhancement Request",Critical,Closed,"2017-01-13 16:29:08","2017-01-13 16:29:08",13
Mule,"WS Consumer Module: Should use Mule TLS implementation to read the Remote WSDL instead of using the Java classes directly","The WS Consumer doesn't use the TLS configuration of the HTTP requester because it uses the Java Classes directly instead of the Mule Implementation.    This was fixed by MULE-11298, we only add tests here.","Enhancement Request",Major,Resolved,"2017-01-13 15:06:01","2017-01-13 15:06:01",0
Mule,"Review JMS Extension Migration","*Review JMS Extension Migration*  * Review and find gaps in the migration of the JMS Transport to JMS Extension",Task,Critical,Done,"2017-01-13 13:29:05","2017-01-13 13:29:05",13
Mule,"Fix DW dependency for FunctionalTestCase","Since DW is a plugin and FunctionalTestCase has no support for those, the EL fails to load and all tests, including ExtensionsFunctionalTestCase, cannot use DW as EL.",Task,Minor,Done,"2017-01-13 12:04:45","2017-01-13 12:04:45",2
Mule,"MuleContext, services and configs not injected into Pojos nested in a config","Take for instance OAuth grant types. Having a MuleContext field with @Inject, the field is null when iniitalize is called. This also happens with @UseConfig    Current workaround is to propagate the MuleContext from the HttpRequesterProvider (https://github.com/mulesoft/mule/pull/3940/files#diff-bf73dd2c2b906c68a00d1d8ec0c1d7d3R141)",Bug,Major,Closed,"2017-01-12 21:10:07","2017-01-12 21:10:07",5
Mule,"Too much contention in TraversableStream when using file store buffer","When using file store buffer, there's way too much contention on the file store. Add a second level of in memory buffering for each cursor.",Bug,Critical,Closed,"2017-01-12 20:20:31","2017-01-12 20:20:31",5
Mule,"mule-module-proxy dependencies must be updated","As part of MULE-11357, all mule plugins will install/deploy a single artifact.    Right now mule-module-proxy depends on mule-module-http-ext-4.0-SNAPSHOT.jar and mule-module-sockets-4.0-SNAPSHOT.jar.    Once MULE-11357 is done, the artifact that the plugins will generate are mule-module-http-ext-4.0-SNAPSHOT-mule-plugin.jar and mule-module-sockets-4.0-SNAPSHOT-mule-plugin.jar respectively.     For the time being, both artifacts will publish both jars, but it's just a workaround to not breaking GW build.",Task,Blocker,Done,"2017-01-12 18:36:08","2017-01-12 18:36:08",1
Mule,"Extensions Client not disposing processor after executing","DefaultExtensionsClient#createProcessor initializes and starts a processor, but that is never disposed.    Add a scheduler to a heisenberg operation to have coverage for this scenario/",Bug,Blocker,Closed,"2017-01-12 14:36:28","2017-01-12 14:36:28",3
Mule,"Apply OperationUX to the WSC","Apply OPERATION UX to the wsc","Enhancement Request",Critical,Closed,"2017-01-12 14:35:09","2017-01-12 14:35:09",8
Mule,"Migrate TCP transport parsers to Mule 4 mechanism ","Migrate TCP transport parsers to Mule 4 mechanism",Task,Blocker,Done,"2017-01-12 13:58:22","2017-01-12 13:58:22",4
Mule,"Migrate SSL transport parsers to Mule 4 mechanism ","Migrate SSL transport parsers to Mule 4 mechanism",Task,Blocker,Done,"2017-01-12 13:57:34","2017-01-12 13:57:34",4
Mule,"Migrate Sockets transport parsers to Mule 4 mechanism ","Migrate Sockets transport parsers to Mule 4 mechanism",Task,Blocker,Done,"2017-01-12 13:57:00","2017-01-12 13:57:00",2
Mule,"Migrate HTTP transport parsers to Mule 4 mechanism ","Migrate HTTP transport parsers to Mule 4 mechanism",Task,Blocker,Done,"2017-01-12 13:55:35","2017-01-12 13:55:35",8
Mule,"Migrate File transport parsers to Mule 4 mechanism ","Migrate File Transport module parsers to Mule 4 mechanism",Task,Blocker,Done,"2017-01-12 13:39:29","2017-01-12 13:39:29",4
Mule,"Migrate CXF module parsers to Mule 4 mechanism ","Migrate CXF module parsers to Mule 4 mechanism",Task,Blocker,Done,"2017-01-12 13:38:32","2017-01-12 13:38:32",4
Mule,"Migrate XML module parsers to Mule 4 mechanism ","Migrate JBoss TX module parsers to Mule 4 mechanism",Task,Blocker,Done,"2017-01-12 13:36:22","2017-01-12 13:36:22",8
Mule,"Migrate TLS module parsers to Mule 4 mechanism ","Migrate TLS module parsers to Mule 4 mechanism ",Task,Blocker,Done,"2017-01-12 13:35:23","2017-01-12 13:35:23",2
Mule,"Migrate spring security module parsers to Mule 4 mechanism ","Migrate JBoss TX module parsers to Mule 4 mechanism",Task,Blocker,Done,"2017-01-12 13:30:24","2017-01-12 13:30:24",4
Mule,"Migrate remaining spring module parsers to Mule 4 mechanism - Core 1","Components to migrate:  * username-password-filter,  * custom-security-filter,  * encryption-security-filter,  * value-extractor-transformer,  * queue-profile,  * redelivery-policy,  * resequencer,  * custom-aggregator,  * splitter,  * map-splitter,  * custom-splitter,  * custom-router,  * singleton-object,  * prototype-object,  * pooling-profile",Task,Blocker,Done,"2017-01-12 13:28:54","2017-01-12 13:28:54",4
Mule,"Migrate Scripting module parsers to Mule 4 mechanism","Migrate JBoss TX module parsers to Mule 4 mechanism",Task,Blocker,Done,"2017-01-12 13:26:53","2017-01-12 13:26:53",4
Mule,"Migrate Schedulers module parsers to Mule 4 mechanism","Migrate JBoss TX module parsers to Mule 4 mechanism",Task,Blocker,Done,"2017-01-12 13:25:56","2017-01-12 13:25:56",2
Mule,"Migrate PGP module parsers to Mule 4 mechanism","Migrate JBoss TX module parsers to Mule 4 mechanism",Task,Blocker,Done,"2017-01-12 13:25:13","2017-01-12 13:25:13",4
Mule,"Migrate JSON module parsers to Mule 4 mechanism","Migrate JBoss TX module parsers to Mule 4 mechanism",Task,Blocker,Done,"2017-01-12 13:23:00","2017-01-12 13:23:00",8
Mule,"Migrate JBoss TX module parsers to Mule 4 mechanism","Migrate JBoss TX module parsers to Mule 4 mechanism",Task,Blocker,Done,"2017-01-12 13:15:24","2017-01-12 13:15:24",2
Mule,"When an exception is thrown by a scheduled task, it should be logged","When an exception is thrown by a scheduled task, it should be logged","Enhancement Request",Major,Closed,"2017-01-12 12:20:41","2017-01-12 12:20:41",1
Mule,"Packaging: plugins, services, policies, and so on, must be packaged as JAR files","All modules that contribute to the runtime (plugins, services, policies, etc.) must be packaged as JAR files rather than ZIP.    Why we are picking JAR over ZIP files:  * maven knows how to contribute JARs to the classpath without any custom plugin. It can be modified to support ZIP (contributing to the classpath) with a custom maven plugin, but that also implies implementing several plugins for IDEs such as Eclipse, IntelliJ, etc.  * transitive dependencies will work out of the box (same rule as before, it can be done but with more custom code)  * it plugs easier when a mule app depends on a plugin (or a plugin depends on a plugin)  ",Task,"To be reviewed",Done,"2017-01-11 21:05:57","2017-01-11 21:05:57",8
Mule,"DynamicConfigurations not disposed when start() fails","When calling DynamicConfigurationProvider#registerConfiguration, the configuration is both initialized and started, but if start fails it is not being disposed, causing all resources obatained in initialize to be leaked.",Bug,Critical,Closed,"2017-01-11 16:17:32","2017-01-11 16:17:32",1
Mule,"Create list of elements to be remove / moved to compatibility module","Create a list of configuration elements to be removed or to be moved to compatibility modules and it's current state.",Task,Critical,Done,"2017-01-10 22:38:44","2017-01-10 22:38:44",4
Mule,"Allow SDK operations and sources to return List<Message>","Allow operations to return signatures of type List<Result<InputStream, FileAttributes>> which would output a list of Messages which payload is of type InputStream and attributes of type FileAttributes.    At the same time allow sources to extend Source<List<Result<InputStream, FileAttributes>>, Attributes> which would be a source which returns a similar collection as the operation above.","Enhancement Request",Critical,Closed,"2017-01-10 22:08:29","2017-01-10 22:08:29",8
Mule,"Change API for applying policies to allow policies templates","Since we will continue to support mustache templates in the policies zip files and the API gateway agent will be responsible for resolving those templates, we need to change our API so the agent can have a chance to process the template if needed.    The idea is to have a single API to cover both use cases: template or no template. The idea so far is that we just ask for the file (as InputStream or whatever) of the resolved template. If there's nothing to do then it will retrieve the policy config file as it is.    Processing the template will not resolve the parametrization of the policy that is not related to mustache. That will be done by mule.",Task,Major,Done,"2017-01-10 22:07:59","2017-01-10 22:07:59",2
Mule,"Define semantics for defining parameterization of policies","When a policy is defined, most likely it would allow a set of parameters that will be define at the moment of apply it.    In order to introspect the policy and be able to know which are this set of parameters, it's types, description, etc, we need a semantic in the XML where the user can provide this information.    The policy descriptor can be load later by the Tooling API so for instance, the API manager will be able to use it to render the UI for asking for parameters to the users.    This same mechanism can be used for externalized properties of application that, when doing a deployment of the application, a devops may have to customize.    This may be done in a minor version and not required for 4.0",Task,"To be reviewed",New,"2017-01-10 22:02:13","2017-01-10 22:02:13",0
Mule,"Support policies XML parameterization","When a policy is created, it may have several properties placeholder that would act as parameters of the policy. Whenever the policy es applied, the user with fill out the parameters for applying the policy (in throttling it would be the timeframe and the number of requests).     We need a basic support to get those parameters and apply it to the policy.","Enhancement Request",Critical,Open,"2017-01-10 21:57:13","2017-01-10 21:57:13",8
Mule,"Add the concept of Category to operations and sources","When a module has a long list of operations (ie Salesforce), a categorization of that list is needed. Or even just to group operations that refer to a subdomain, like DB and the Bulk Operations.    Since the categorization depends on the domain of the module, the model needs to provide information on how to categorize operations.    For reference:  https://docs.google.com/document/d/16BtNUJqe8wHLvOu4mViA_mYPJ66aJNfKM1D_fS9hEyw/edit#heading=h.xgbzkuoybq6q","Enhancement Request",Minor,Open,"2017-01-10 15:31:24","2017-01-10 15:31:24",5
Mule,"Remove JAAS module","JAAS module will be removed from the code/distro to avoid exposing it on the API.  Missing functionality will be replaced at some point with a new security extension. ",Task,Minor,Done,"2017-01-10 01:25:19","2017-01-10 01:25:19",1
Mule,"Request builder parameters need to be ordered in UI","Order should be:  * Body  * Headers  * URI Parameters (text should be corrected from 'Uri Params)  * Query Parameters (text should be corrected from 'Query Params)  * Media Type","Enhancement Request",Blocker,Closed,"2017-01-09 21:21:03","2017-01-09 21:21:03",2
Mule,"Tooling API should support to generate the Application class loader programmatically","As it is being done for ExtensionModel we should provide a way to get the application class loader in order to resolve DataWeave executions.  Parameters should be supported (find a way to provide a callback that runs with the app as the TCCL).",Task,Major,Done,"2017-01-09 20:06:00","2017-01-09 20:06:00",16
Mule,"Tooling API avoid M4 dependencies to mule-runtime artifacts from dataSense","DataSense 4.0-SNAPSHOT has declared M4 dependencies temporarily.  This should be changed but meanwhile we are going to override these dependencies on Tooling Client.",Task,Major,Done,"2017-01-09 19:16:00","2017-01-09 19:16:00",1
Mule,"Add error message if Flow Runner tries to run a stopped flow","When trying to run a flow that is stopped the following exeption is thrown.  ","Enhancement Request",Minor,Open,"2017-01-09 16:58:49","2017-01-09 16:58:49",4
Mule,"Replace TypedValue interface on mule-api with DefaultTypedValue from mule-core","Mule-api contains TypedValue interface, which is implemented on DefaultTypeValue on the core.  As it represents a value, it makes more sense to have TypedValue as a class, not an interface. ",Task,Minor,Done,"2017-01-09 14:57:55","2017-01-09 14:57:55",2
Mule,"Add non-blocking support to SchedulerMessageSource","Currently, PollingMessageSource calls the source and the flow in a blocking way using the same thread.    The source must be called according to its work type, and the flow according to its processingStrategy",Task,Major,Done,"2017-01-09 14:35:44","2017-01-09 14:35:44",4
Mule,"ArtifactClassLoaderRunner - Should avoid including services/plugins classified in Container CL","MULE-11182 added support for classifiers in all the filters and this change has impacted the logic for Container URLs classifications, the ID used to filter services and plugins from direct dependencies was not including the classifier (now that it is a must in poms to include the classifier the logic could always use the full artifact ID).  In addition to that, Aether will include transitive dependencies no matter if the patternExclusionFilter has a no match for a direct dependency. This is the expected behaviour for application classification due to we still want transitive (case of mule-test-functional->mule-core->x) but no in the container classification case.",Bug,Major,Closed,"2017-01-09 12:26:00","2017-01-09 12:26:00",1
Mule,"Tooling API fails when trying to create the container classloader from Studio","There is an issue in Equinox that when a resource is requested from a Bundle it returns twice the same URL. So, when the container classloader for Mule is created (without the MULE-11329 support yet) the following error is thrown:  ",Bug,Critical,Closed,"2017-01-09 11:54:13","2017-01-09 11:54:13",1
Mule,"Missing definition parser for parameter @Content of type InputStream","Got this error:        When deploying an application which uses an @Content parameter of type InputStream.  The code for reproducing the failing test is [here|https://github.com/fbarrios/hello-world-connector-4.x/tree/6991a614e14db32565505778185276b203574806].    Changing the parameter type to Object and then casting as InputStream fixes the error:  https://github.com/fbarrios/hello-world-connector-4.x/commit/d90f29c0214162e706fb2ad79865d639ce443fc1  ",Bug,Blocker,Closed,"2017-01-06 22:42:06","2017-01-06 22:42:06",5
Mule,"Adapt container to work with new binary heavy package ","The Container should adapt to read the new binary package.    The definition of such is detailed in this [document|https://docs.google.com/a/mulesoft.com/document/d/125WiY0yDxiCzjjY69ho8V_srq8n0pfA3J_SJlBkHBSI/edit?usp=sharing] in the section Phase 1.    This is a general description of how it looks like:        If you whish to generate the package you can already use the following maven plugin       ",Task,Major,Done,"2017-01-06 20:35:33","2017-01-06 20:35:33",2
Mule,"Path Element is not correctly created for elements after a MessageFilter","If there is any component after a MessageFilter, the path is not correctly created. The child number assigned is set to double of the difference between the component and the MessageFilter. For example:     The path for flow should be (...)/0/1, and it actually is (...)/1/3.",Bug,Minor,Resolved,"2017-01-06 17:43:34","2017-01-06 17:43:34",0
Mule,"Have all compatibility artifacts in their own subfolder in the repo","Have all compatibility artifacts in their own subfolder in the repo",Task,Major,Done,"2017-01-05 20:57:29","2017-01-05 20:57:29",2
Mule,"Remove MuleEvent from mule-api","-Add Event support in the mule-api.-  Remove MuleEvent from mule-api, change its uses to use Event.    Perform a first cleanup of the interfaces to be exposed.",Task,Major,Done,"2017-01-05 17:21:51","2017-01-05 17:21:51",4
Mule,"Rework ring-buffer based processing strategy implementations for stream approach","Update or redefine processing strategy implementations for stream approach",Task,Critical,Done,"2017-01-05 16:38:13","2017-01-05 16:38:13",8
Mule,"Streaming and back-pressure spike","Streaming and back-pressure spike",Task,Critical,Done,"2017-01-05 16:23:26","2017-01-05 16:23:26",16
Mule,"Introduce ChildEventContext to support per-flow completion","Introduce ChildEventContext to support per-flow completion",Task,Critical,Done,"2017-01-05 16:18:54","2017-01-05 16:18:54",4
Mule,"Migrate non-blocking approach used to use a single stream per Flow","Use single stream Flow with back-pressure support.    This requires:  - Reviewing and rethinking processing strategies.  - Serializable EventContext (separate issues)  - Cpu-Light scheduler that can WAIT. (separate issues)  - Introduce ChildEventContext. (seperate issue)  - Determining a way to limit concurrency based on flatMap in reactor that isn't an explicit limit.",Task,Critical,Done,"2017-01-05 16:16:06","2017-01-05 16:16:06",8
Mule,"Define expression language selection experience","We need to decide how the EL will be selected when evaluating expressions.",Task,Critical,Done,"2017-01-05 16:15:40","2017-01-05 16:15:40",2
Mule,"PoC using reactor for interceptors","Researched on MULE-11069.  The intention of this issue it to change that code to use reactor stuff and define the way to implement interception in Mule.",Task,Critical,Done,"2017-01-05 16:05:39","2017-01-05 16:05:39",16
Mule,"Add leak detection to http service","Add support in the service so that tests may check that all resources gotten from the http service are disposed after the test has run.",Task,Major,New,"2017-01-05 16:04:13","2017-01-05 16:04:13",4
Mule,"Make MuleEventContext Serializable","Make MuleEventContext Serializable",Task,Critical,Done,"2017-01-05 16:02:07","2017-01-05 16:02:07",8
Mule,"Policies must be registered eagerly to detect invalid instances","Policies are currently instantiated in a lazy way, when the first request hits the source when the policy is applied.   With this schema, is not possible to detect if a policy is invalid, for example, if the XML is misconfigured.   So, when a policy is added to an application, it must be fully initialized and the caller must know whether or not it was properly registered to take the corresponding action.","Enhancement Request",Major,Closed,"2017-01-05 15:52:21","2017-01-05 15:52:21",4
Mule,"Add leak detection to unit test scheduler service","There are many tests that seem to not be closing the created schedulers. A check should be enforced to avoid this, and also check any productive code doesn't leak schedulers.",Task,Major,Done,"2017-01-05 15:20:26","2017-01-05 15:20:26",4
Mule,"Migrate CXF Tests to MuleArtifactFunctionalTestCase","Check how the dependency on woodstox (inherited from xml module) is handled",Task,Major,Done,"2017-01-05 14:15:50","2017-01-05 14:15:50",4
Mule,"Configurable AbortPolicy for Schedulers","Ideally, the decision on whether to WAIT or REJECT when trying to schedule a task on a busy executor should be based on context. For instance, CPU_LIGHT trying to schedule to CPU_LIGHT should reject, while IO or INTENSIVE should wait.  Custom schedulers should define how they are treated.  When INTENSIVE will wait, the waiting must be dispatched to IO to avoid blocking the INTENSIVE thread.",Task,Critical,Done,"2017-01-04 19:10:37","2017-01-04 19:10:37",4
Mule,"Remove event dependency from Authentication interface and implementations","The event doesn't seem to be used in the Authentication's",Task,Major,Done,"2017-01-04 17:06:55","2017-01-04 17:06:55",1
Mule,"Move old MuleClient to compatibility module","Move org.mule.runtime.core.api.client.MuleClient and associated code to the compatibility plugin.",Task,"To be reviewed",Done,"2017-01-03 21:30:51","2017-01-03 21:30:51",4
Mule,"Migrate old MuleClient uses","Many modules use the httpClient in their tests, for instance, just to send http requests to a mule listener. These should be migrated to use just an apache http client.    Also, an alternative API should be needed for the test protocol",Task,Major,Done,"2017-01-03 21:23:40","2017-01-03 21:23:40",16
Mule,"ArtifactClassLoaderRunner - Is not considering exclusions declared on rootArtifact pom file","In some cases it is required to exclude transitive dependencies and this is declared in the pom.xml file of the rootArtifact but AetherClasspathClassifier is not considering this when creating the Dependency object for each test scope dependency declared as direct dependency.",Bug,Major,Resolved,"2017-01-03 20:39:49","2017-01-03 20:39:49",1
Mule,"Dynamically load Mule Runtime libraries on Tooling Runtime Client","MULE-11173 was the spike related to this issue, this task is about doing the implementation for Tooling Runtime client to allow loading Mule Runtime libraries dynamically (provided by clients) in order to avoid including them as part of the classpath.",Task,Critical,Done,"2017-01-03 17:36:25","2017-01-03 17:36:25",8
Mule,"OAuth2 client module encodes redirect_uri twice in the body","The oauth client module sends redirect_uri both as a query parameter and in the body as a form encoded parameter.    The body version is url-encoded twice, not conforming with the RFC (which says it's optional, but if present should be equal to the query parameter version).    Recently our oauth provider was fixed to url-decode parameters once instead of twice, because it's the same as doing nothing for parameters without special characters and fails when parameters have special characters. See SEC-277.",Bug,Major,Closed,"2017-01-03 15:15:43","2017-01-03 15:15:43",2
Mule,"Update JUnit to 4.12 and disable timeout when debugging","When debugging our 60 second timeout rule stops the program as when running tests in CI. This is inconvenient and can be disabled with a rule introduced in JUnit 4.12.    This is unrelated to the transport/connection timeout.","Enhancement Request",Minor,Resolved,"2017-01-03 13:40:32","2017-01-03 13:40:32",1
Mule,"Change policy descriptor to use json instead of properties files","Policy artifact are using properties descriptors, which should be replaced with JSON files to match the new descriptors used on artifact plugins","Enhancement Request",Major,Closed,"2017-01-03 11:26:04","2017-01-03 11:26:04",4
Mule,"NullPointerException when applying more than one policy","When trying to apply a second policy, a NullPointerException is thrown in MuleApplicationPolicyProvider.    It seems that the bundleDescriptor property of PolicyTemplateDescriptor is null.    ",Bug,Critical,Closed,"2017-01-02 20:06:36","2017-01-02 20:06:36",4
Mule,"Clean up POM unused properties","Clean up POM unused properties",Task,Minor,Done,"2017-01-02 17:33:32","2017-01-02 17:33:32",1
Mule,"Spike: refactor container and test runner to avoid code duplication","Much of the conde used to instantiate the Mule container is duplicated in some degree on both the isolated test runner and the M-unit test runner.  Besides the duplication, which is the main issue, another problem is that we can't hide many of the classes as they will need to be exported on the isolated classloader.  We should refactor the code to find a way to avoid/minimize the duplication and hide as much as we can",Task,Critical,New,"2017-01-02 16:13:53","2017-01-02 16:13:53",16
Mule,"Add stop capability to ExtensionWalker","Add stop capability to ExtensionWalker","Enhancement Request",Minor,Closed,"2017-01-02 15:45:20","2017-01-02 15:45:20",1
Mule,"Add list-exclusive operation to file and ftp extensions","support exclusive list","Enhancement Request",Blocker,Closed,"2017-01-02 15:36:35","2017-01-02 15:36:35",5
Mule,"File and FTP list operations should return list of messages","Drop TreeNode in favour of List<MuleMessage>","Enhancement Request",Blocker,Closed,"2017-01-02 15:35:15","2017-01-02 15:35:15",5
Mule,"Add support for Literal parameters","*Add support for Literal parameters*    * Add a mechanism to be able to retrieve expression values for a certain parameter in the same way as {{ExpressionSupport.Literal}}","Enhancement Request",Minor,Closed,"2017-01-02 15:21:28","2017-01-02 15:21:28",8
Mule,"Update the DslElementSyntax to be a tree representation of the component","Currently, when using the DslSyntaxResolver to resolve the DSL of a top level component like an Operation or Source, the user has to manually iterate over the component's parameters in order to obtain the full tree-like representation of the element in the DSL.    Changing the DSL to provide a nested view of the elements will simplify it's traversal and allow for easier consumption of the API","Enhancement Request",Blocker,Closed,"2017-01-02 12:17:27","2017-01-02 12:17:27",8
Mule,"Field setter for aliased inline parameter group fails to inject parsed value","When a parameter group has a parameter with an Alias, like:         And used as an inline group:         then the aliased parameter `myName` is parsed correctly but fails to inject it in the Object, while the non-aliased parameter `age` is injected without a problem.  ",Bug,Critical,Closed,"2016-12-31 14:26:25","2016-12-31 14:26:25",5
Mule,"Test connection issue with http listener, server is stopped","Doing test connection with this app        you get the following message    Test connection failed: Server on host 127.0.0.1 and port 8081 is stopped.  Server stopped",Bug,Minor,Closed,"2016-12-30 21:19:21","2016-12-30 21:19:21",8
Mule,"NPE doing test connection for http request with default values","If you try to do test connection with this app you get a NPE        stack trace    ",Bug,Blocker,Closed,"2016-12-30 20:42:30","2016-12-30 20:42:30",8
Mule,"Test connection error when having two listener config with the same data","If you try to execute test connection in this app:        It seems it tries to start a server in the same port twice",Bug,Blocker,Closed,"2016-12-30 20:00:29","2016-12-30 20:00:29",8
Mule,"allowInlineDefinition annotation is ignored on packaging","An operation defined with the following signature:        Generates the following XML schema:          Which allows the definition of the query both as a child element and as an attribute.    The code is available here: https://github.com/mulesoft/mongo-connector/tree/d3e70daf96ee16652edb27f75e65e0f00e11662d  ",Bug,Major,Closed,"2016-12-30 17:30:08","2016-12-30 17:30:08",3
Mule,"Make HTTP request scheduling fine grained","Right now, the HttpClient is calling the ResponseHandler and the extension is using an IO scheduler to process that considering there are scenarios where the stream will be read to memory. However, this is only true for a few scenarios. We should only execute in the IO pool when those cases arise.",Task,Critical,Done,"2016-12-30 17:22:12","2016-12-30 17:22:12",4
Mule,"Implement the Extensions Client.","Develop a mule java client api to execute extensions operations.    A first API approach could be something like this. (without adding the capability to pass an Event)        Key points:   * Smart Connectors support  * Maybe the execute methods should receive an Event.  * Operation parameters default values and null safeness","Enhancement Request",Blocker,Closed,"2016-12-30 17:19:46","2016-12-30 17:19:46",13
Mule,"Separate OAuth extension from the implementation","This would allow for components to use OAuth authentication without needing to use the OAuth extension.    As part of this, remove the dependency of OAuth with the Event interface to a minimum.",Task,Critical,Done,"2016-12-30 16:53:22","2016-12-30 16:53:22",8
Mule,"Cannot add @Alias annotation to operation parameter, function parameters and function names","The Alias annotation does not include PARAMETER in its @Target's ","Enhancement Request",Major,Closed,"2016-12-29 22:28:02","2016-12-29 22:28:02",5
Mule,"Update XML tests to use the same SAX transformer as Mule Standalone","Some XML tests are using Saxon transformer instead of Xalan, which might lead to a different behavior between Mule Standalone and the Functional tests.  Functional tests should be updated to use the same transformer as Mule Standalone.    Check also for other XML libraries (parsers, builders, etc)",Task,Critical,Done,"2016-12-29 21:12:54","2016-12-29 21:12:54",4
Mule,"Default XML Transformer factory does nor support StAXSource","The Xalan lib in the endorsed folder does not support StAXSource, but that is being given to it when trying to get a Document from an XMLStreamReader.",Bug,Major,Closed,"2016-12-29 18:20:00","2016-12-29 18:20:00",0
Mule,"Socket extension is not using CustomClassLoadingLengthProtocol","Sockets extension defines different TcpProtocols, and almost all of them are used, but org.mule.extension.socket.api.connection.tcp.protocol.CustomClassLoadingLengthProtocol is not.  Probably this was an omision and must be added, otherwise that class must be removed.",Task,Blocker,Done,"2016-12-29 12:04:51","2016-12-29 12:04:51",5
Mule,"Mule API Clean up","While we are still defining the API, there are things that we found that are not used anymore or deprecated components that must be removed. This issue is intended to track all the changes related to API clean up",Task,Major,Done,"2016-12-29 11:56:01","2016-12-29 11:56:01",16
Mule,"Review which org.mule.runtime.core.api.debug package must be maintained","Package org.mule.runtime.core.api.debug contains API used to provide debugging capabilities to Mule components. Parts of it will be replaced with the interception API, but other components should be maintained and probably moved to mule-api",Task,Major,Done,"2016-12-29 11:31:56","2016-12-29 11:31:56",1
Mule,"Functions, TypedValues and ParameterResolvers are not supported inside a Pojo","*Functions, TypedValues and ParameterResolvers are not supported inside a Pojo*    * To support {{Functions}}, {{TypedValues}} and {{ParameterResolvers}} model properties indicating this are used, due that for POJOs, model properties are not used, these resolvers can't be used.  * Think if this kind of parameters makes sense to be used in POJOs or how we should give support for this.",Bug,Blocker,Closed,"2016-12-27 19:36:13","2016-12-27 19:36:13",13
Mule,"Support Connectionless and Configless Metadata Resolvers","In current Metadata resolution, we require a Config and a Connection to be created and injected into the MetadataContext even if the Resolver doesn't make use of it.    Ideally, we should support a way to declare that a Resolver doesn't need either a config nor a connection so optimizations can be made using smaller apps or even resolving the Metadata statically using only the ExtensionModel.    Once this is implemented, the ToolingService will need to implement the support on their side to make use of this feature.","Enhancement Request",Critical,Open,"2016-12-27 19:20:55","2016-12-27 19:20:55",13
Mule,"ExtensionModelLoaders should not be loaded for each MuleContext"," uses SPI for discovering  in Container ClassLoader, this should only be made once instead of per each ExtensionManager created.    Having this code in one place only and outside the ConfigurationBuilder will allow Tooling Runtime Client to use it instead of copying the same logic twice.",Task,Minor,Done,"2016-12-27 18:12:37","2016-12-27 18:12:37",1
Mule,"Rename all groupIds and validate that runtime dependencies are always provided.","org.mule dependencies cannot have _compile_ scope.    plugins declared dependencies that has a groupId that starts with _org.mule.runtime_ or _com.mulesoft.mule.runtime_ should always be provided to avoid the extension to be packaged with those jars.    To enforce that we should validate it at package time.","Enhancement Request",Blocker,Closed,"2016-12-27 17:18:04","2016-12-27 17:18:04",0
Mule,"Add all metadata model dependencies as provided in the extensions parent poms","add the metadata-model-xml, metadata-model-json and metadata-model-java as provided dependencies on the extensions parent pom","Enhancement Request",Major,Closed,"2016-12-27 17:00:47","2016-12-27 17:00:47",1
Mule,"Copy bulk operation classes from mule-commons to mule-api","Mule commons dependecy must be removed from mule 4. In order to to that, classes used for bulk operations, must be copied to mule-api project. (mule 3.x still depends on these classes, so they can't be moved)",Task,Minor,Done,"2016-12-27 15:39:36","2016-12-27 15:39:36",1
Mule,"Improve registration of global contexts","Right now we have kept the search registry approach to finding global binding contexts but this is very restrictive and we can't guarantee it will work for the SDK. We need to figure out a better way of doing this.",Task,Critical,Done,"2016-12-26 19:08:59","2016-12-26 19:08:59",2
Mule,"HTTP service usage feedback","The following items could be improved in the HTTP service API:   * -Provide a builder to get a *PathAndMethodRequestMatcher*. Currently, the only way to get one is by instantiating the subclasses, which are in an internal package.-   * -HttpServerFactory#create() currently declares it throws ConnectionException, but in its implementation it does so only in one case and for the rest it throws a RuntimeException. A new exception type (ServerCreationException?) should be thrown in all cases form that method.-   * -Move org.mule.runtime.module.http.internal.HttpParser to the http service api-   * -Non-Blocking requester should return a CompletableFuture instead of receiving a callback.-   * -When processing responses, the body is an HttpEntity that doesn't have any method. We are force to downcast to InputStreamHttpEntity in order to continue operating.-   * -Start() method in client could return _this_ so that we can nest it in operations.-   * -RequestBuilder only exposes the headers, if we are passing the builder through several objects, they may want to get other data within the builder, for example the URI to do some calculations.-","Enhancement Request",Major,Closed,"2016-12-26 18:28:42","2016-12-26 18:28:42",4
Mule,"Policy parametrization must be used to create policy context","Policy parametrization properties must be used to define the policy's muleContext in order to provide values required by the used policy template ","Enhancement Request",Major,Closed,"2016-12-26 13:28:05","2016-12-26 13:28:05",4
Mule,"Create JMH benchmarks for Message, Event and Flow","Use to benchmark 3.x and compare with 4.x. Also benchmark and compare allocation rate.",Task,Critical,Done,"2016-12-26 12:58:04","2016-12-26 12:58:04",4
Mule,"Upgrade Tanuki license","Upgrade Tanuki Wrapper license since current expires in January 2017.  ",Task,Major,Done,"2016-12-26 11:49:41","2016-12-26 11:49:41",2
Mule,"Support non-blocking in OAuth http listeners","Support non-blocking in OAuth http listeners","Enhancement Request","To be reviewed",Open,"2016-12-23 22:51:27","2016-12-23 22:51:27",4
Mule,"OAuth callback doesn't support external listener references","When the callbacks listeners for OAuth are configured referencing an already existing http listener, the same server used by that listener must be used instead of creating a new one.    This is working in 3.x, but we still need to figure out how to make it work in 4.x with the HTTP service.",Bug,Critical,Closed,"2016-12-23 22:48:31","2016-12-23 22:48:31",2
Mule,"NoClassDefFoundError using Groovy in RestAssured","We are creating an SDK extension, and testing it with RestAssured. When running a test, the exception *NoClassDefFoundError: groovy/lang/GroovyObject* is raised.    The stack trace is:      <USER>helped me notice that *mule-module-spring-config-4.0* exports *Groovy*, but does not include the dependence.    If we remove it from *mule-module.properties* in that module, then the error is:        Guillermo found a possible temporary workaround:    - Create in our testing resource folder, the file *excluded.properties* with the following content:  ",Bug,Major,Closed,"2016-12-23 21:33:15","2016-12-23 21:33:15",8
Mule,"MVEL optimizer does not refresh when the payload type changes","In out fork of MVEL, we added the feature that let us access an _invalid_ property of the payload (getting in return a `null` value) ([MULE-7510]). In this case, the optimizer creates the Accessors, having a NullAccessor in the place that property should be called. After the payload is transformed (to a type that has the mentioned property), the Accessors are not updated (SE-4960).",Bug,Major,Closed,"2016-12-23 20:47:23","2016-12-23 20:47:23",0
Mule,"Support non-blocking in OAuth http calls","Support non-blocking in OAuth http calls","Enhancement Request",Major,Resolved,"2016-12-23 18:33:10","2016-12-23 18:33:10",4
Mule,"Migrate OAuth param extractor MEL to DW","Migrate all MEL specific code in OAuth to use th DW expression language.",Task,"To be reviewed",Done,"2016-12-23 13:08:24","2016-12-23 13:08:24",2
Mule,"Migrate OAuth tests to MuleArtifactFunctionalTestCase","Migrate OAuth tests to MuleArtifactFunctionalTestCase.    Check required provided dependencies.",Task,Major,Done,"2016-12-22 21:52:24","2016-12-22 21:52:24",2
Mule,"ArtifactClassLoaderRunner - Cannot handle classpath URLs escaped on Windows"," is not able to findClassPathURL when the URLs are escaped, for instance Windows environments when folder has a whitespace.",Task,Major,Done,"2016-12-22 19:15:51","2016-12-22 19:15:51",0
Mule,"Replace MetadataDescriptor with OperationModel","In the MetadataService, we currently return a :        The information contained in the MetadataDescriptor is mostly the structure of the Operation with the types of each element.     We'd like to change the Service API so instead of returning the Descriptor we return a new OperationModel typed accordingly to the resolved dynamic type","Enhancement Request",Blocker,Closed,"2016-12-22 18:57:44","2016-12-22 18:57:44",8
Mule,"Migrate OAuth http module usage to http service","Migrate OAuth http module usage to http service",Task,Blocker,Done,"2016-12-22 18:40:31","2016-12-22 18:40:31",8
Mule,"Update commons-net to 3.5","Update commons-net to latest version which includes the most recent bugfixes.","Enhancement Request",Major,Closed,"2016-12-22 18:20:58","2016-12-22 18:20:58",0
Mule,"Spike on new streaming capability","Spike it",Task,Critical,Done,"2016-12-22 17:25:51","2016-12-22 17:25:51",16
Mule,"Able to update mule message to avoid parsing over and over","Consider the following scenario (payload is an InputStream with JSON format):        DataWeave would have to parse the input stream twice, which would cause performance issues if the same input stream must be accessed several times.    We need to add a mechanism that DataWeave can use to correlate and InputStream (string, or whatever) with it's parsed representation.     We need to be careful with the mechanism to use to avoid memory leaks.",Story,Blocker,Done,"2016-12-22 14:47:32","2016-12-22 14:47:32",0
Mule,"Able to define reader properties in some place of the DataType. ","Define the experience",Story,Critical,New,"2016-12-22 14:46:45","2016-12-22 14:46:45",0
Mule,"Remove Event uses from HTTP extension","SDK must be Event agnostic so we need to remove it's uses from the HTTP extension as much as possible (if something cannot be done then it must be notified so the use case can be addressed).",Task,Critical,Done,"2016-12-22 14:16:29","2016-12-22 14:16:29",8
Mule,"Create POLICY artifact type","org.mule.runtime.core.config.bootstrap.ArtifactType defines APP and DOMAIN types, along with an ALL type that implies both APP/DOMAIN.  This type is used support different type of objects in the bootstrap properties and to selectthe proper context builder for an artifact.  Now that policy artifact also define a context, a POLICY type must be defined and ALL type must be re-evalauted to see if still makes sense (there could be things that apply to APP/DOMAIN but no a POLICY)","Enhancement Request",Blocker,Resolved,"2016-12-22 14:02:02","2016-12-22 14:02:02",0
Mule,"Add support to use artifact plugins on policies","Policies need more functionality than the provided by the mule core components. They need to be able to use artifact plugins as part of the policy configuration.  A policy must define which plugins are required. If a given plugin is used on the application, the policy must use the same plugin, if it is not compatible, the policy cannot be applied. If a given plugin is not used on the application, it must be deployed internally on the policy context.","Enhancement Request",Critical,Closed,"2016-12-22 13:58:01","2016-12-22 13:58:01",16
Mule,"Policies must be sorted before begin applied","Policies must be ordered before begin applied to a request.  Each parameterized policy must define a weight/order that will be used to sort each policy instance.","Enhancement Request",Major,Closed,"2016-12-22 13:52:48","2016-12-22 13:52:48",4
Mule,"Add a way to remove application policies","Application policies can be added/removed on runtime based on configuration changes. Current version supports adding, but removing policies is not done yet.","Enhancement Request",Major,Closed,"2016-12-22 13:50:17","2016-12-22 13:50:17",8
Mule,"Migrate Ext-API & Extension sources to use event submission instead of blocking accept","Migrate Ext-API & Extension sources to use event submission instead of blocking accept","Enhancement Request",Critical,Open,"2016-12-22 13:38:04","2016-12-22 13:38:04",8
Mule,"Introduce back-pressure mechanism so sources don't block on flow.","Introduce Enum in core/ext-api for Sink emission status",Task,Major,Done,"2016-12-22 13:29:38","2016-12-22 13:29:38",8
Mule,"Review ImportedTypesModel and SubtypeModels","Once MULE-11248 has been resolved, review how to reference the Imported types source extension and the base type in the subtypes model.    Update:    - For ImportedTypes, we will use the TypeCatalog in a given ResolvingContext to identify the Extension that declares the imported type.  - Subtypes mapping of imported types as base type will work out of the box, as long as the type has been declared as imported.    For this to work properly, we are assuming that dependencies between Extensions are handled by other actor, such as deployment or tooling, to ensure that the context with all the information is available for resolving the type's declaring extension.",Task,Blocker,Done,"2016-12-21 21:50:00","2016-12-21 21:50:00",3
Mule,"Review ExtensionModel version and artifact locator","Review if:    * The extensionModel needs the concept of getVersion() at all  * The extensionModel could benefit from some kind of artifacts locator/coordinates/whatever, or if on the contrary, only the deployment descriptors should contain that information.",Task,Blocker,Done,"2016-12-21 21:42:56","2016-12-21 21:42:56",3
Mule,"Populate all parameters with a layout order","Nowadays, parameters can have a LayoutModel which specifies (among other things) its order. If no placement is specified for any element, it is assumed that the element's natural order will be respected but that's only an assumption. We need to populate the LayoutModel with that information having into account 3 different scenarios:    1) All parameters have an order specified.  2) No parameter has an order specified.  3) Some the parameters have an order specified and some of them not (take a decision for this case and document it).","Enhancement Request",Critical,Closed,"2016-12-21 21:40:37","2016-12-21 21:40:37",5
Mule,"Improve PGP Module ","Currently the PGP module forces the user to provide a secureAliasId (the private key ID in decimal notation, something that isn't readily available from GnuPG for instance).    This is in principle not required as an encrypted message knows which key ID is required to decrypt it. By silently ignoring this information we make it difficult to detect configuration errors (entering the wrong key ID) and make it impossible to decrypt messages encrypted for different recipients.    A short term solution is to fail if the selected key ID doesn't match the one reported by the encrypted message, and a long term solution is to remove the secretAliasId altogether.    Additionally, we should consider PGP Decryption is not propagating the exceptions as expected. Error messages are not clear in the following scenarios:   # Incorrect PassPhrase.   # Invalid secretAliasId key.",Bug,Minor,Resolved,"2016-12-21 21:11:16","2016-12-21 21:11:16",4
Mule,"Fix memory leak in Extension Spring Support test cases","*Fix memory leak in Extension Spring Support test cases*",Task,Critical,Done,"2016-12-21 19:30:59","2016-12-21 19:30:59",13
Mule,"Expose Metadata result information such as resolver and category names in the MetadataService","Nowadays it is impossible to obtain information about the MetadataResolvers from the outside. Such information is contained in the `MetadataResolverFactoryModelProperty` which is not externalizable (and shouldn't be).    We have to provide a way for accessing Metadata Resolver information such as resolver name and category name. Two options for doing this is:    1) Implementing capabilities to extract that information from a component in the MetadataService.  2) Add that information to the MetadataDescriptors","Enhancement Request",Blocker,Closed,"2016-12-21 17:50:59","2016-12-21 17:50:59",5
Mule,"Disable schema validations on LazyMuleArtifactContext","It should be disable the xml/schema validation so ToolingService could deploy an application with an xml that may not be complete and allow doing connectivity testing.",Task,Major,Done,"2016-12-21 16:31:10","2016-12-21 16:31:10",1
Mule,"Lifecycle not applied to prototype objects when lookup by type is used","When objects are lookup on the registry by type, the returned objects do not have lifecycle applied if they are defined as prototypes.  To reproduce the issue add asPrototype() on proxy definition in org.mule.runtime.test.policy.TestPolicyBuildingDefinitionProvider the problem goes away.",Bug,Major,Resolved,"2016-12-21 15:14:51","2016-12-21 15:14:51",4
Mule,"Add support for Option Resolvers","Continue and implement what is specified in MULE-9613 and https://docs.google.com/document/d/1Vjd0cvWeETuuqhGveWfraWIwwX5CeIjtara-i2yWuKE/edit","Enhancement Request",Blocker,Closed,"2016-12-20 14:11:07","2016-12-20 14:11:07",0
Mule,"Apply changes from CXF-7162","Apply the changes made in CXF as per https://issues.apache.org/jira/browse/CXF-7162",Bug,Major,Closed,"2016-12-20 13:00:35","2016-12-20 13:00:35",0
Mule,"Allow parameter groups to be optionally be explicit in the DSL","Right now parameter groups are invisible at the DSL level. It should be possible to optionally make them implicit. E.g:        Translates to:        This is specially important for the interaction with tooling when the group pojo contains fields annotated with @Content.. It should be disallowed for pojo parameters to contain @Content fields. That should only be allowed on parameter groups (dsl explicit or not). Notice that this also means that the current support for ContentTypeAnnotation, etc, needs to be removed","Enhancement Request",Blocker,Closed,"2016-12-19 22:03:45","2016-12-19 22:03:45",8
Mule,"Add language rules into the extension model","Right now there're a number of synthetic things into an extension DSL which are considered language rules and are not reflected into the extension model. For example:    * Non void operations get a target attribute  * Pooled connection providers get a <pooling-profile>  * Tls parameters don't contain a description of the type    These and all other language rules need to be explicit in the extension model for tooling purposes","Enhancement Request",Blocker,Closed,"2016-12-19 21:51:38","2016-12-19 21:51:38",8
Mule,"Allow parameters to have a type which belongs to a namespace different than the extension's","Add a way in which it's possible to represent things like:        This doesn't have to rely on imported types, since the most common use case for this will be:    ","Enhancement Request",Blocker,Closed,"2016-12-19 21:41:54","2016-12-19 21:41:54",3
Mule,"Spike: Provide support for creating a serializable ElementModel from an ApplicationModel","Provide a service for moving from a configured Application to it's DSL serialization.",Task,Blocker,Done,"2016-12-19 20:17:30","2016-12-19 20:17:30",13
Mule,"Replace DictionaryType with open ObjectType","Once the  DictionaryType is removed from the MetadataType model, we should replace its usage in the Extensions with an open ObjectType    UPDATE:   This has already been implemented in the Metadata Model by Achaval in branch MDM-31","Enhancement Request",Blocker,Closed,"2016-12-19 20:16:37","2016-12-19 20:16:37",8
Mule,"Tooling API should receive a Supplier<URL> for Tooling API URL configuration","This will allow Studio to not start Mule when configuring the Tooling API runtime client but only when the client needs to get access to the Runtime.",Task,Major,Done,"2016-12-18 04:16:07","2016-12-18 04:16:07",1
Mule,"Allow operation parameters which override config ones","There's one common pattern in extensions:        The logic behind this is if optionalSomeParameter is not provided, then it defaults to whatever config.someParameter says. However, because someParameter might be dynamic, the operation ends up requiring access to the Event in order to resolve that value.    Because operations need to no longer be capable of accessing the Message nor the Event, we need to:    * Have a way to mark that an operation parameter is an override of a config one  * It should validate that both parameters are of the same type  * It should allow both parameters to have different names  * It should support the config parameter to be dynamic  * It should be compatible with either (or both) parameters to belong to different parameter groups","Enhancement Request",Blocker,Closed,"2016-12-16 20:41:56","2016-12-16 20:41:56",13
Mule,"HTTP Listener response not respecting payload encoding","setting a payload in a flow like this:        the response is expected to be encoded in CP-1252, but the actual encoding is UTF-8",Bug,Major,Closed,"2016-12-16 20:23:54","2016-12-16 20:23:54",4
Mule,"Spike on Mule Client","Perform a spike on building the new mule client",Task,Blocker,Done,"2016-12-16 20:11:37","2016-12-16 20:11:37",13
Mule,"Add error handling to Email connector","Add error handling capabilities to the new email connector","Enhancement Request",Blocker,Closed,"2016-12-16 19:50:12","2016-12-16 19:50:12",3
Mule,"Add error handling capabilities to the Ftp connector","Use the new error handling capabilities in the new FTP connector","Enhancement Request",Blocker,Closed,"2016-12-16 19:34:41","2016-12-16 19:34:41",3
Mule,"add error handling capabilities in File connector","Use the new error handling capabilities in the new file connector","Enhancement Request",Blocker,Closed,"2016-12-16 19:33:08","2016-12-16 19:33:08",3
Mule,"JMS: Add error handling","- Improve exceptions to be more granular  - Add Error types declaration to the module","Enhancement Request",Blocker,Closed,"2016-12-16 18:18:52","2016-12-16 18:18:52",5
Mule,"Allow to retrieve an ExtensionModel element from its ComponentIdentifier representation","Allow to retrieve an ExtensionModel element from its ComponentIdentifier representation.    This implies that coming from a ComponentModel Application definition, and providing all the ExtensionModels associated to that Application, the user should be able to retrieve the ExtensionModel elements based only in the ComponentIdentifier of a node in the application.",Task,Blocker,Done,"2016-12-16 17:49:33","2016-12-16 17:49:33",13
Mule,"Support Transactions in Sources","Spike: Support Transactions in Sources, see #MULE-10961","Enhancement Request",Critical,Closed,"2016-12-16 17:44:18","2016-12-16 17:44:18",8
Mule,"Review the HttpEntity interface and its Implementations.","currently, the HttpEntity that is bounded in a HttpMessage is just a marker interface and does not provide a way to obtain de Entity content without casting it to one of its implementations.    A possible approach could be to add a #getInputStream method to the interface.","Enhancement Request",Critical,Closed,"2016-12-16 16:48:38","2016-12-16 16:48:38",4
Mule,"DB: Enable TypeInference for input parameters of BulkOperations","DB: Enable TypeInference for input parameters of BulkOperations",Bug,Blocker,Closed,"2016-12-16 15:01:59","2016-12-16 15:01:59",1
Mule,"Parameters annotated with Content should not validate DSL rules","Parameters annotated with Content should not validate DSL rules like not having a `name` field",Bug,Blocker,Closed,"2016-12-16 14:33:23","2016-12-16 14:33:23",1
Mule,"Add concept of resolverName to the NamedTypeResolver","Currently the TypeResolvers have a `categoryName`, that relates a key resolver to an output or input resolver.    Since we now support multiple InputTypeResolvers for each operation, and In order for uniquely identifying a resolver associated to a Parameter without using it's class, we need that these input resolvers declare their own name.    By default, the name of an OutputResolver should be `output` and for an InputResolver `input`, valdiating later that these names are overwriten if more than one Resolver of the same name is found inthe same category","Enhancement Request",Blocker,Closed,"2016-12-16 14:06:13","2016-12-16 14:06:13",3
Mule,"Migrate DB integration tests to new extension","Migrate DB integration tests to new extension",Task,Critical,Done,"2016-12-16 13:53:01","2016-12-16 13:53:01",0
Mule,"WSC Extension: With WSS Timestamp using a timeToLive lower than a second doesn't send the expire tag","Using a timeToLive lower than a second makes the request produced by the WSC to not include the the expires tag. In the case this isn't supported by CXF it would be better to remove the Nanoseconds/Microseconds timeToLive units.        For example using 999 milliseconds:          +*Steps to reproduce:*+  * Changing in the WSS functional tests the config as the example above.   * Make a request to http://localhost:${http.port.wsc}/test-security-timestamp  * You will see that the request contains the timestamp tag but no the expires tag. ",Bug,Critical,Resolved,"2016-12-15 22:29:01","2016-12-15 22:29:01",3
Mule,"Nullsafe fails takes a ParameterGroup as a required field of the annotated POJO","Nullsafe fails takes a ParameterGroup as a required field of the annotated POJO",Bug,Major,Closed,"2016-12-15 20:54:41","2016-12-15 20:54:41",1
Mule,"Nullsafe ignores the ParameterGroups inside the annotated POJO","Nullsafe ignores the ParameterGroups inside the annotated POJO",Bug,Major,Closed,"2016-12-15 20:52:55","2016-12-15 20:52:55",3
Mule,"Source callback parameters types are not exported","Source callback parameters types are not exported",Bug,Blocker,Closed,"2016-12-15 20:50:42","2016-12-15 20:50:42",3
Mule,"When using the CXF module with MTOM, the wrong Content-Type is returned","Downloading an attachment from an MTOM service started with the CXF Module, the wrong content type is being returned.    ",Bug,Critical,Closed,"2016-12-15 20:09:43","2016-12-15 20:09:43",5
Mule,"CXF Module is not exporting the org.mule.apache.security package.","The CXF module should export the org.mule.apache.security package.   This is used when creating secured services, the WSS4J interceptos should be referenced from the XML as shown bellow, if those classes are not being exported the CXF module will throw a class not found exception.    usage example:      ",Bug,Blocker,Closed,"2016-12-15 20:07:30","2016-12-15 20:07:30",5
Mule,"headers element should go before body element","In the WSC consume operation, inside the message element, the correct element order should be:  # headers  # body  # attachments    instead of the current:    # body  # headers  # attachments",Bug,Minor,Closed,"2016-12-15 01:59:46","2016-12-15 01:59:46",1
Mule,"Xa JMS applications interfere with each other when undeploying one of them","As mentioned in SE-4799, when a Bitronix application is undeploy, that application and other ones using Xa Transactions start failing. These is caused by a race condition, since the writing of the journal is never protected by a lock, or synchronization.     Proposed solution: make the poll method of XaTransactedJmsMessageReceiver synchronized.",Bug,Major,Resolved,"2016-12-14 16:52:49","2016-12-14 16:52:49",0
Mule,"Return a 5xx response when thread pool is exhausted instead of ignoring the request","The http connector silently ignores requests when overloaded. Even if not all of them can be answered (with success or error), at least some of the failures should be returned as a 503 status code.    This issue is for 4.x, as the thread pool code changed from 3.x.",Bug,Critical,Resolved,"2016-12-14 16:04:16","2016-12-14 16:04:16",8
Mule,"File and FTP field ordering cleanup","* For all operations that require a Path, the order should be path, then content, then other fields in alphabetical order.   * In the case of copy and move, source and target paths should be at the top  * Match With is confusing. Use the term File matching rules as the header  * For List, Recursive should go above the matching section  * For read operation, remove the advanced tab since it's not needed.",Bug,Major,Closed,"2016-12-13 22:46:34","2016-12-13 22:46:34",1
Mule,"Tooling Runtime Client handle multiple configurations when building ApplicationModel for DataSense","Current implementation only supports reading the first configuration file defined by mule-deploy.properties. It would need to be change the ApplicationModel from DataSense API in order to allow building it from multiple configuration files.  In addition to that, the mule-deploy.properties may not be present so default (by convention) config file name should be used.",Task,Major,Done,"2016-12-13 20:06:43","2016-12-13 20:06:43",2
Mule,"NPE when using ParameterGroup on Source OnSuccess","Declaring a `@ParameterGroup` in the `@OnSuccess` of a Source produces a NullPointerException.    Example        Produced:      If the ParameterGroup annotation is removed the method is invoked correctly.",Bug,Blocker,Closed,"2016-12-13 18:38:17","2016-12-13 18:38:17",3
Mule,"SourceCallbackModel is deserialized as a TreeMap","After deserializing the SourceModel, instead of having a SourceCallbackModel inside the optional value, it has a TreeMap generating a ClassCastException    ",Bug,Blocker,Closed,"2016-12-13 15:02:56","2016-12-13 15:02:56",1
Mule,"SourceModel deserialize returns null instead of Optional.empty() for sucessCallBack and errorCallback fields","After deserializing an extension model with sources and no error or success callback, the SourceModel returns null values for the 2 optional fields.    Expected: When not provided, the value should be Optional.empty, not null",Bug,Major,Closed,"2016-12-13 14:56:49","2016-12-13 14:56:49",3
Mule,"Infinite loop on initialise if default error handler does not contain catch-all","When an error handler does not contain a catch-all on-error element (meaning one without type nor when expression) it tries to inject the default error handler as such. So an infinite loop occurs when said error handler IS the default because it will try to inject itself and fall on an initialisation loop.  The fix might be to inject something different but the real issue is the difference between the on-error elements and the error-handler one. These two are now different but we might have code treating them as the same because they used to be in 3.x.",Bug,Major,Closed,"2016-12-13 14:50:23","2016-12-13 14:50:23",4
Mule,"Processor error hook is not applied to any Publisher","An onOperatorError is added to most publishers so that any exceptions are wrapped in a MessagingException. That doesn't work for any publisher. If a ReactiveProcessor returns a new Mono.create() in the appy(Publisher<Event>) method, then that hook is not added to that publisher.    Adding such hook should be centralized and always applied. It shouldn't be up to each processor to do that.",Bug,Major,Closed,"2016-12-12 20:12:17","2016-12-12 20:12:17",4
Mule,"Create Flow micro-benchmark suite that covers different processing strategies and conconcurrencies","Expand Flow performance tests to test concurrency",Task,Critical,Done,"2016-12-12 19:16:40","2016-12-12 19:16:40",8
Mule,"ArtifactClassLoaderRunner - Change classifiers to classify zips instead of jars for plugins and services","We need to change the CL isolation classifiers so they know how to properly look up and classify extensions/services in the form of zip files.   Thus rendering useless the need of actually generating the content of the zip file based on a jar.","Enhancement Request",Minor,Closed,"2016-12-12 18:34:41","2016-12-12 18:34:41",4
Mule,"ArtifactClassLoaderRunner - Add to API different builders for MuleContext implemented in functional test code","The following classes in the module  mule-tests-runner needs to be moved to the api package as they are required by third party modules  (MUnit) :     * org.mule.munit.runner.TestBootstrapServiceDiscovererConfigurationBuilder  * org.mule.munit.runner.TestServicesMuleContextConfigurator  * org.mule.munit.runner.MuleContextManager.TestClassLoaderRepository    Please make sure this classes are part of the API","Enhancement Request",Major,Closed,"2016-12-12 18:31:00","2016-12-12 18:31:00",1
Mule,"ArtifactClassLoaderRunner - ClassLoaders should be injected with the application classloader set as TCCL","While setting services for instance the service manager is created and started, this could trigger to initialize a service and these services could use SPI therefore the application context classloader should be set as TCCL from the runner while injecting them.",Task,Minor,Done,"2016-12-12 18:28:58","2016-12-12 18:28:58",2
Mule,"Define flow macro-performance testing scenarios","Define flow performance testing scenarios",Task,Major,Done,"2016-12-12 18:04:09","2016-12-12 18:04:09",0
Mule,"Spike: Functions in DW","We need to define how functions will be passed to dw. This might regard creating function interfaces, a function DataType and the mechanism to make those 2 work. The goal is to provide a way to define dw functions through Java in the same way that ExpressionLanguageFunction did for MEL.",Task,Critical,Done,"2016-12-12 15:04:32","2016-12-12 15:04:32",8
Mule,"Spike: Allow ToolingRuntimeClient to load the Container class loader in order to support retrieving ExtensionModel","Tooling Runtime Client should create the Container ClassLoader so it can later resolve ExtensionModel of an extension using deployment model from Mule.",Task,Major,Done,"2016-12-12 12:09:28","2016-12-12 12:09:28",8
Mule,"Disable schema validation when deploying an application from ToolingService","As applications deployed from ToolingService may not be completed this validation should be disabled in order to allow ToolingService to do connectivityTesting.",Task,Major,Done,"2016-12-12 12:05:42","2016-12-12 12:05:42",4
Mule,"ArtifactClassLoaderRunner - WorspaceReader is only resolving SNAPSHOT between projects in reactor","The implementation of WorkspaceReader used for resolving Maven artifacts in TestRunner is only looking for SNAPSHOT versions when resolving references between projects/discovered as part of the reactor. This issue affects when releasing a version of an artifact that uses the TestRunner due to versions at that point are no longer SNAPSHOTS.",Bug,Major,Closed,"2016-12-12 11:59:07","2016-12-12 11:59:07",1
Mule,"Split Tooling Runtime Client from API and implementation","This will allow to release API and implementation with different versions.",Task,Major,Done,"2016-12-12 11:52:56","2016-12-12 11:52:56",1
Mule,"Define a way to provide information about classes and bean references for tooling","When Mule Module developers want to create classes given a full qualified name, or define that a field is a reference to something, using plane strings leads to a poor UI and UX.   Examples of this are the ObjectSource in the validation module:      In order to differentiate a simple string fields from any of this scenarios, we need to provide all the information that tooling can use to support this kind of fields.    For the field type, we could provide a annotation with the form of:       For the ref field, we could indicate it with a annotation marker @Ref","Enhancement Request",Critical,Closed,"2016-12-09 17:41:54","2016-12-09 17:41:54",5
Mule,"Policies should be non blocking","A spike was performed in MULE-11166 and there's a branch with a first attempt of achieving that.    However, as stated on the linked issue, there're design principles in the current policies solution which prevent to go fully non blocking.    We should overcome those limitations in order to allow NB policies.","Enhancement Request",Blocker,Resolved,"2016-12-08 14:07:37","2016-12-08 14:07:37",8
Mule,"Perform spike on NonBlocking policies","In order to support non blocking SDK operations, it'd be good to have policies applies in a Non blocking manner since right now the policies API is completely blocking.    Perform a spike and see what it takes",Task,Major,Done,"2016-12-08 13:29:55","2016-12-08 13:29:55",8
Mule,"Add Data Sense resolution into Tooling Runtime Client API","Integrate Data Sense support to Tooling Runtime Client API.",Task,Critical,Done,"2016-12-07 20:45:14","2016-12-07 20:45:14",4
Mule,"Update the cipher block used in PGP encryption","Mule pgp encryptor is using an old cipher block CAST5. We should upgrade to more up-to-date AES-256 cipher.","Enhancement Request",Major,Resolved,"2016-12-07 19:35:57","2016-12-07 19:35:57",0
Mule,"Concrete ParameterGroup validation throws unexpected exception","The following exception is thrown when an abstract class is used in a ParameterGroup.   The model error should be nicely communicated.    ",Bug,Major,Closed,"2016-12-07 13:56:13","2016-12-07 13:56:13",1
Mule,"Duplicated parameter generated for source with @OnSucces and @OnError annotated methods","When writing a source with the following operations, an error is shown indicating that the model is not valid   {code}   [ERROR] error on execute: org.mule.runtime.api.exception.MuleRuntimeException: org.mule.runtime.extension.api.exception.IllegalModelDefinitionException: Extension 'OnlySources' defines the ImmutableSourceModel 'AnotherSource' which has parameters with repeated names. Offending parameters are: [message]   {code}   This is the Source code:   {code:java}   @EmitsResponse  public class AnotherSource extends Source<String,BasicAttributes>  {        @UseConfig      private BasicExtensionConfig config;      /**       * Source Parameter description       */      @Parameter      private String anotherSourceParameter;        @Override      public void onStart(SourceCallback<String, BasicAttributes> sourceCallback) throws MuleException      {        }        @Override      public void onStop()      {        }        @OnSuccess      public void logSuccess( String successMessage){        }        @OnError      public void logError( String errorMessage, String details){        }  }  {code}",Bug,Major,Closed,"2016-12-06 12:48:06","2016-12-06 12:48:06",3
Mule,"Unify application deployment on Agent and Tooling Runtime Client API to receive a URL","Improve the experience of the API by only having one deployment method that receives a URL.",Task,"To be reviewed",Done,"2016-12-06 12:16:32","2016-12-06 12:16:32",2
Mule,"NoSuchMetodError hangs JVM","When throwing  NoSuchMethodError from inside a custom processor the JVM asumes this is a critical error and hangs the VM.   Showing the following logs:        In order to reproduce this you could have a flow like:        With the following implementation for the processor:        Now if I were to wrap that error in a messaging exception       Then the vm will not hang  ",Bug,Critical,Closed,"2016-12-05 22:04:12","2016-12-05 22:04:12",8
Mule,"Exclusive Parameters validations fails if the parameters uses an Alias","*Exclusive Parameters validations fails if the parameters uses an Alias*    * When having an {{ExclusiveParameters}} with *isOneRequired* and the parameters are annotated with {{@Alias}} the validation fails saying:   Although these parameters are configured correctly.  * In runtime, the values are configured correctly, but at validation time, the validation uses the names without the alias: {{ref, type}} instead of {{ref, class}}.  * Classes to see {{OperationMessageProcessorObjectFactory}}, {{AbstractExtensionObjectFactory}}, {{ExtensionUtils#getMemberName()}}  * This is can be reproduced adding the {{isOneRequired}} to the {{ObjectSource}} parameter of the {{customValidation}} operation of the {{Validations Extension}}",Bug,Major,Closed,"2016-12-05 17:24:58","2016-12-05 17:24:58",5
Mule,"Fix error handling behaviour when not able to send a response successfully.","We need to review the behaviour of failing during sending a response in a message source.    We need to define properly the behaviour in every case:   - When there's a failure generating the response parameters, should the exception strategy be executed and the error response parameters and function be invoked?. Seems like it should.   - When there's a failure while sending the response (actually writing the response through the underlying transport), should the exception strategy be invoked?. Seems like it should. And after the exception strategy it should not trigger the error response function.    We need to review if there's any other use case we need to consider.",Bug,Major,Closed,"2016-12-05 15:13:52","2016-12-05 15:13:52",4
Mule,"Never return null from a pipeline execution","Returning null from a pipeline execution causes issues like not being able to access the last event state. This was the case with the Mule 3.x filters where to signal the filtering of the pipeline a null value was returned. The problem with this is that message sources needed the event anyway and to access it we had to use the RequestContext.    Since we are going to refactor the filtering functionality we should also avoid returning null when filtering.",Task,Major,Done,"2016-12-05 13:17:13","2016-12-05 13:17:13",4
Mule,"Review ObjectFactories for AnnotatedObject","MULE-10970 migrated all message processor to AnnotatedObjects but as part of that task we found that there are a ObjectFactories declared in org.mule.runtime.config.spring.dsl.model.CoreComponentBuildingDefinitionProvider that would need to be reviewed in order to set up the annotations when it makes sense.",Task,Major,Done,"2016-12-05 12:44:14","2016-12-05 12:44:14",4
Mule,"Classloading: extension-manifest.xml must be dropped in favour of mule-plugin.json","SDK extensions generates a META-INF/extension-manifest.xml file that's used to load the 1) ExtensionModel, 2) generate the plugin.properties file and 3) help the test runner assembly a classloader.    That file, and everything around it, must be deleted in favour of the mule-plugin.json model   ",Task,Blocker,Done,"2016-12-02 16:48:44","2016-12-02 16:48:44",4
Mule,"Create initial flow performance test","Create initial flow performance test",Task,Critical,Done,"2016-12-02 13:12:52","2016-12-02 13:12:52",4
Mule,"Improve implementation of filtering/request-response processors to avoid concatMaps","Improve implementation of filtering/request-response processors to avoid concatMaps",Task,Major,Done,"2016-12-02 12:44:38","2016-12-02 12:44:38",4
Mule,"LocationExecutionContextProvider doesn't mask passwords","When an exception occurs and LocationExecutionContextProvider provides the tag which produced the error, it isn't accounting for that element containing sensitive information.    It should consider that the tag could:    * Contain an URL with credentials  * Contain a password attribute    In either case, that information should be masked",Bug,Critical,Closed,"2016-12-01 18:37:03","2016-12-01 18:37:03",0
Mule,"XMLInputFactory allows inline DTDs by default","Disable inline DTDs which could be insecure.",Bug,Critical,Closed,"2016-12-01 17:58:42","2016-12-01 17:58:42",2
Mule,"Spike: Expose underlying ulimit information to the thread pools config","On unix systems, ulimit provides a limit to the threads a process can create. This could be useful information to have on the threading config.    Equivalent ways of obtaining this information on different platforms should be investigated.",Task,"To be reviewed",New,"2016-12-01 13:17:56","2016-12-01 13:17:56",0
Mule,"Improve logs for tracking log lines related to a transaction","With the addition of a NB execution engine, supports has concerns that it will be more difficult to track related events which previously where able to be tracked since the same thread was executing the same operation for a certain transaction.    A good improvement for them would be to have a transaction id associated with each entry in the log files. We can use the event.context.id for each logging line executed by mule.    One way to solve this issue is using MDC from the logging mechanism.    We need to provide the information of TX ID within the logs in a way that later the log lines with a certain TX ID can be filtered.","Enhancement Request",Major,Resolved,"2016-11-30 21:46:47","2016-11-30 21:46:47",4
Mule,"Inject HTTP service in all FunctionalTestCases (as the scheduler is)","In order to properly simulate the container in tests, the HTTP service should be injected when not added by the artefact test runner. As the SchedulerService, it should be included via the org.mule.tck.config.TestServicesConfigurationBuilder but special attention should be taken regarding circular dependencies since a dependency in tests to the service and it's implementation mean those cannot depend on the tests.  AbstractCxfOverHttpExtensionTestCase, AbstractTlsRestrictedProtocolsAndCiphersTestCase and ExtensionFunctionalTestCase are affected by this.  For MULE-11257, a mock HttpService was introduced to all tests following the scheduler service uses. However, for scenarios where the real service is needed like the above mentioned this is still a difficulty.",Task,Critical,New,"2016-11-30 20:29:59","2016-11-30 20:29:59",4
Mule,"Return a 5xx response when thread pool is exhausted instead of ignoring the request","The http connector silently ignores requests when overloaded. Even if not all of them can be answered (with success or error), at least some of the failures should be returned as a 503 status code.",Bug,Major,Resolved,"2016-11-30 19:59:51","2016-11-30 19:59:51",0
Mule,"Cleanup GrizzlyServerManager server specific data","Since the GrizzlyServerManager used to exist per context and now it's per container, a lot of server specific data is stored in several different objects making it extremely difficult to dispose everything and a risk of leaks.  We need to refactor it so that it's cleaner.",Task,Major,New,"2016-11-30 19:56:28","2016-11-30 19:56:28",8
Mule,"Allow users to configure TcpServerSocketProperties in the HTTP Service","Since the HTTP connection manager used to be per context, one could lookup for instances of TcpServerSocketProperties defined in the config to use in the Grizzly transport. Now that we would have one per container this is no longer possible. We need to somehow specify this or alternatively analyse how to have a transport per server/context to do as before or even better allow it per server config.",Task,Blocker,Done,"2016-11-30 19:28:50","2016-11-30 19:28:50",4
Mule,"Add a stop() method to Scheduler","The new method without parameters should use a timeout configuration already on the scheduler. For this, when getting a Scheduler, the muleContext should be queried for the timeout and that value stored in the scheduler.",Task,Major,Done,"2016-11-30 19:14:30","2016-11-30 19:14:30",4
Mule,"Add DataWeave to Runtime distribution","Add DataWeave module to Mule distribution",Task,Major,Done,"2016-11-30 18:52:28","2016-11-30 18:52:28",1
Mule,"Review HTTP client authentication API","There's a weird interaction today between HttpRequestAuthentication and HttpAuthentication. I'd be good to review it to make sure it's ok. Plus we need a better way to create those in terms of the service API (it's all setters today).",Task,Major,Done,"2016-11-30 18:43:41","2016-11-30 18:43:41",4
Mule,"Http module should not export java mail libraries.","The http module is exporting _javax.mail_ packages from the _mail-1.4.3_ and _mail-api-1.4.3_ libraries, but now the new email extension is based on the lastest java mail api version (1.5.6) which classes will never be loaded because of that.","Enhancement Request",Blocker,Closed,"2016-11-30 18:07:10","2016-11-30 18:07:10",8
Mule,"Validate invalid extension namespace","Namespaces like `test` cause conflicts with mule namespaces, so we should avoid them","Enhancement Request",Major,Closed,"2016-11-30 15:26:47","2016-11-30 15:26:47",1
Mule,"ParameterRoleTypeAnnotation only present for content fields","When an ObjectType is generated through the Ext-API, a ParameterRoleTypeAnnotation is added for the content fields. We should always add them and specify BEHAVIOUR role for the other parameters",Bug,Major,Closed,"2016-11-30 00:03:38","2016-11-30 00:03:38",1
Mule,"Serialization fails if an Optional is used as a field for a MetadataType Type Annotation","Serialization fails if an Optional is used as a field for a MetadataType Type Annotation",Task,Major,Done,"2016-11-29 22:33:36","2016-11-29 22:33:36",0
Mule,"Move Scheduler interface to mule-api","Move interface Scheduler to api so it can be used from other services.",Task,Major,Done,"2016-11-29 20:29:19","2016-11-29 20:29:19",1
Mule,"Fix MessagePropertySessionScopesTestCase test case","We need to find out why the test MessagePropertySessionScopesTestCase.testSessionProperty() fails when executed with the whole suit.     We don't know why it started failing but it doesn't seem to be related to a change in the parsing mechanism. It may be that there was an issue already that now it's happening because of another change in the code.",Bug,Blocker,Closed,"2016-11-29 18:14:21","2016-11-29 18:14:21",4
Mule,"Minor changes in Extension API Maven Plugin to automate the release","Added the release profile with the gpg, sources and javadocs plugins.  Added the update_deps_version.sh script. This will allow avoiding using the mvn versions:update-property plugin which it wasn't intended to change to versions that haven't been released yet.  Change the verify.groovy scripts of the IT tests to obtain the artifact versions from the pom and not being hardcoded.",Task,Minor,Done,"2016-11-29 16:37:43","2016-11-29 16:37:43",2
Mule,"WSC: Use the HTTP service as default transport for HTTP urls.","The WSC is using OKHttp to make the Http request when working through http, we should remove that and use the service that mule provides if no specific configuration is provided.","Enhancement Request",Critical,Closed,"2016-11-29 15:19:07","2016-11-29 15:19:07",5
Mule,"Callback phases should be explicit in the SourceModel","The callback phases in the sources are now implemented behind the covers using model properties. They should be explicitly modeled in the SourceModel , since that information is needed by the new policies","Enhancement Request",Critical,Closed,"2016-11-29 14:24:28","2016-11-29 14:24:28",13
Mule,"Change the TLS context of the WSC configuration for an Object that handles security.","Currently, the WSC can be configured with a TLS context that is used to Sign and/or Encrypt the SOAP messages, but no TLS actions are performed and it's just used to take the parameters that the object provides. The TLS context should be replaced with some parameter group that has similar attributes but that is not related with TLS","Enhancement Request",Critical,Closed,"2016-11-29 14:01:38","2016-11-29 14:01:38",5
Mule,"Reactor does not handle RejectedExecutionException's",https://github.com/reactor/reactor-core/issues/275,Bug,Critical,Closed,"2016-11-28 12:15:24","2016-11-28 12:15:24",8
Mule,"Add error handling capabilities to the new WSC","Add error handling to WSC.","Enhancement Request",Major,Closed,"2016-11-25 22:26:44","2016-11-25 22:26:44",5
Mule,"Classloading: plugin.properties should be dropped in favour of mule-plugin.json","Current status allow different ways of describing plugins: xml, sdk, or the plugin itself (by hand).    There must be a single way to identify a plugin, which will be the JSON mule-plugin.json descriptor to treat every plugin in the same way.",Task,Major,Done,"2016-11-25 21:41:12","2016-11-25 21:41:12",2
Mule,"Deployment tries to redeploy when an app has a missing plugin","When writing the following test       fails as the current deployer tries to redeploy the application when the plugin dependantPlugin has a missing plugin in the classpath (in this sample, echoPlugin)    Current fix is:  ",Bug,Critical,Resolved,"2016-11-25 19:41:37","2016-11-25 19:41:37",4
Mule,"Introduce first iteration of new JMS connector","Merge first iteration, including spec and PR review",Task,Blocker,Done,"2016-11-25 19:03:10","2016-11-25 19:03:10",13
Mule,"Improve ErrorModel serialization in ExtensionModels","*Improve ErrorModel serialization in ExtensionModels*    * Nowadays in an {{ExtensionModel}} the error models are serialized at *extension* level and also in each *operation* that declares it, not only serializing the error identifier, serializing the entire error hierarchy.  * Improve the serialization (like MetadataTypes) to have a normalized JSON where the error models from operations are just references to the errors defined at extension level.","Enhancement Request",Major,Closed,"2016-11-25 17:49:53","2016-11-25 17:49:53",5
Mule,"Calling getMuleContext on an Application that failed to deploy throws NPE","When calling getMuleContext on an application that failed to deploy it throws a NullPointerException because artifactContext is null.",Bug,Critical,Resolved,"2016-11-25 17:47:10","2016-11-25 17:47:10",1
Mule,"Uptade Schema to allow parameters to be set in any order","Uptade Schema to allow parameters to be set in any order",Bug,Blocker,Closed,"2016-11-25 17:40:55","2016-11-25 17:40:55",3
Mule,"Spike on adding RPC Wsdl support for the SOAP engine","We should add support for RPC/literal wsdl.    The runtime (CXF) supports RPC/literal services request, but when trying to obtain the metadata types for validation or attachment handling fails.  ","Enhancement Request",Major,Open,"2016-11-25 16:59:03","2016-11-25 16:59:03",13
Mule,"Add support to declare ErrorTypes at ConnectionProvider level","*Add support to declare ErrorTypes at ConnectionProvider level*  ","Enhancement Request",Critical,Closed,"2016-11-25 16:42:30","2016-11-25 16:42:30",8
Mule,"Cannot use @ParameterGroup in sources","When using a ParameterGroup on a source, and having a source callback which also takes a parameter group or a complex pojo, then the SDK tries ton inject the parameter group into the wrong field.    An example to reproduce is the HttpListener",Bug,Critical,Closed,"2016-11-24 20:28:14","2016-11-24 20:28:14",5
Mule,"SPI errors not caught in Abstract BuilderFactories","Turns out, when a class is not found or a problem occurs doing the SPI loading, an Error is thrown. Because of this, our code using catch Exception is ignored.",Bug,Major,Closed,"2016-11-24 19:56:55","2016-11-24 19:56:55",1
Mule,"Message Processors should be AnnotatedObject","Make all MP to be AnnotatedObjects in order to store information needed by interception API later.",Task,Major,Done,"2016-11-24 16:27:45","2016-11-24 16:27:45",8
Mule,"Change Mule Runtime Tooling Client API in order to allow Data Sense integration","Change Runtime Tooling Client API in order to allow integration for DataSense resolution.",Task,Major,Done,"2016-11-24 16:21:51","2016-11-24 16:21:51",8
Mule,"Remove legacy processing strategies","Pending spec/review",Task,Critical,Done,"2016-11-24 16:19:07","2016-11-24 16:19:07",4
Mule,"Spike: Interception API","Spike to research and define the Interception API",Task,Critical,Done,"2016-11-24 16:18:15","2016-11-24 16:18:15",8
Mule,"Connection Exceptions should not be wrapped inside of a RetryPolicyException is a NoRetryPolicy is selected","*Connection Exceptions should not be wrapped inside of a RetryPolicyException is a NoRetryPolicy is selected*    * Nowadays if an Operation/ConnProvider/etc throws a {{ConnectionException}} this will trigger the *reconnection logic* (No matter if is configured with a {{NoRetryPolicy}})  * If the retry fails, it will throw a {{RetryPolicyExhaustedException}} although the retry policy is never executed and hides the true exception.","Enhancement Request",Major,Closed,"2016-11-24 15:05:17","2016-11-24 15:05:17",1
Mule,"Make all configuration components AnnotatedObject","We need to guarantee that annotations are available for most components since having that in place will allow us to later add new features, for example.",Task,Blocker,Done,"2016-11-24 14:46:02","2016-11-24 14:46:02",2
Mule,"Provide a way so that ArtifactFactory<Application>doesn't require deployed domain","Determine the best way to break the requirement for Application factory for deployed domains","Enhancement Request",Major,Open,"2016-11-24 14:44:23","2016-11-24 14:44:23",16
Mule,"Make ArtifactFactory support zip files apart from exploded dirs","Currently, ArtifactFactory works only with exploded apps. the code to process zip files runs before and then calls the factory with the folder. It has to be refactored to have that unzip logic inside ArtifactFactory ","Enhancement Request",Critical,Open,"2016-11-24 14:42:03","2016-11-24 14:42:03",16
Mule,"Allow reduced size schedulers","On some situations some throttling on the IO thread pool is required.    Also allow single-threaded view on cpuLight pool so if required a processing strategy can use a true eventLoop.","Enhancement Request",Major,Closed,"2016-11-24 14:13:11","2016-11-24 14:13:11",4
Mule,"Cannot do connectivity testing for an Application that has a DB connection","When trying to do connectivity testing over an application that has a DB connection an error happens before connectivity testing strategy can be applied, therefore this error is blocking the tooling service to allow doing checking connections.    The DB component should be started and then later the connectivity strategy applied in order to check the status of the connection, instead it tries to do it when it is started.",Bug,Blocker,Closed,"2016-11-24 12:56:13","2016-11-24 12:56:13",4
Mule,"Extensions in XML that use ExtensionModel requires java classes when should not be mandatory","Extensions in XML that use ExtensionModel requires java classes when should not be mandatory",Bug,Major,Closed,"2016-11-23 21:00:34","2016-11-23 21:00:34",1
Mule,"Tooling client and mule applications share the same log file","When the user performs test connectivity or fetching for metadata keys using the tooling client the logs are printed in the same file that mule uses for applications this create a little noise in the log files",Bug,Minor,Closed,"2016-11-23 18:09:54","2016-11-23 18:09:54",0
Mule,"Mule embedded distribution artifactId should be mule-embedded","Mule embedded distribution has the same artifactId as Mule root POM.  Mule embedded distribution artifactId should be renamed from {{mule}} to {{mule-embedded}}",Bug,Minor,Closed,"2016-11-23 18:09:03","2016-11-23 18:09:03",1
Mule,"Spike: Provide public API to create applications","Creation of Applications an other artifacts require to create the corresponding artifact factory, which requires to create a lot of different dependencies.  These dependencies are created on MuleArtifactResourcesRegistry class.  What is needed is a way to obtain a factory for applications without having to manually create all those dependencies, so tooling services can use this API to create artifacts.  ","Enhancement Request",Major,Closed,"2016-11-23 14:31:22","2016-11-23 14:31:22",4
Mule,"Introduce EventContext callback for request completion to allow requests to be processed as stream","Introduce EventContext callback for request completion to allow requests to be processed as stream",Task,Critical,Done,"2016-11-23 14:16:00","2016-11-23 14:16:00",16
Mule,"Logger cannot be parsed after deploying from tooling client","App:    <?xml version=1.0 encoding=UTF-8?>    <mule xmlns:httpn=http://www.mulesoft.org/schema/mule/httpn xmlns=http://www.mulesoft.org/schema/mule/core   xmlns:doc=http://www.mulesoft.org/schema/mule/documentation   xmlns:spring=http://www.springframework.org/schema/beans   xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance xsi:schemaLocation=http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd  http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd  http://www.mulesoft.org/schema/mule/httpn http://www.mulesoft.org/schema/mule/httpn/current/mule-httpn.xsd>   <httpn:request-config name=HTTP_Request_config doc:name=HTTP Request config />   <flow name=dataFlow >    <poll doc:name=Poll >     <logger level=INFO doc:name=Logger />    </poll>    <logger level=INFO doc:name=Logger />   </flow>   <flow name=dataFlow1 >    <httpn:request config-ref= path= doc:name=HTTP : Request />   </flow>  </mule>      Stacktrace:    org.mule.tooling.service.api.DeploymentException: Couldn't deploy the application  org.mule.tooling.service.api.DeploymentException: Couldn't deploy the application   at org.mule.tooling.agent.rest.client.RestAgentToolingService.deployApplication(RestAgentToolingService.java:112)   at org.mule.tooling.client.internal.DefaultToolingRuntimeClient.deployApplication(DefaultToolingRuntimeClient.java:61)   at org.mule.tooling.client.agent.impl.DefaultAgentDeploymentTooling.deploy(DefaultAgentDeploymentTooling.java:18)   at org.mule.tooling.messageflow.action.TestConnectorConnectionFromMuleConfigAction$1.run(TestConnectorConnectionFromMuleConfigAction.java:104)   at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:119)  Caused by: org.mule.tooling.agent.rest.client.exceptions.ToolingServiceAPIException: HTTP 500 Internal Server Error{errorType:class org.mule.runtime.deployment.model.api.DeploymentInitException,errorMessage:MuleRuntimeException: Could not create mule application since lazy init is enabled but there are component in the configuration that are not parsed with the new mechanism logger,logger}   at org.mule.tooling.agent.rest.client.tooling.applications.Applications.put(Applications.java:83)   at org.mule.tooling.agent.rest.client.RestAgentToolingService.deployApplication(RestAgentToolingService.java:106)   ... 4 more      java.lang.Throwable: org.mule.tooling.service.api.DeploymentException: Couldn't deploy the application     at org.mule.tooling.agent.rest.client.RestAgentToolingService.deployApplication(RestAgentToolingService.java:112)     at org.mule.tooling.client.internal.DefaultToolingRuntimeClient.deployApplication(DefaultToolingRuntimeClient.java:61)     at org.mule.tooling.client.agent.impl.DefaultAgentDeploymentTooling.deploy(DefaultAgentDeploymentTooling.java:18)     at org.mule.tooling.messageflow.action.TestConnectorConnectionFromMuleConfigAction$1.run(TestConnectorConnectionFromMuleConfigAction.java:104)     at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:119)    Caused by: org.mule.tooling.agent.rest.client.exceptions.ToolingServiceAPIException: HTTP 500 Internal Server Error{errorType:class org.mule.runtime.deployment.model.api.DeploymentInitException,errorMessage:MuleRuntimeException: Could not create mule application since lazy init is enabled but there are component in the configuration that are not parsed with the new mechanism logger,logger}     at org.mule.tooling.agent.rest.client.tooling.applications.Applications.put(Applications.java:83)     at org.mule.tooling.agent.rest.client.RestAgentToolingService.deployApplication(RestAgentToolingService.java:106)     ... 4 more         at org.mule.tooling.metadata.utils.MetadataUtils.showErrorMessage(MetadataUtils.java:393)     at org.mule.tooling.metadata.utils.MetadataUtils.showTestConnectionErrorMessage(MetadataUtils.java:384)     at org.mule.tooling.messageflow.action.TestConnectorConnectionFromMuleConfigAction.displayResultMessage(TestConnectorConnectionFromMuleConfigAction.java:136)     at org.mule.tooling.messageflow.action.TestConnectorConnectionFromMuleConfigAction.run(TestConnectorConnectionFromMuleConfigAction.java:125)     at org.mule.tooling.messageflow.dialog.GlobalElementDialog$1.widgetSelected(GlobalElementDialog.java:403)     at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)     at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)     at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)     at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)     at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)     at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)     at org.eclipse.jface.window.Window.runEventLoop(Window.java:827)     at org.eclipse.jface.window.Window.open(Window.java:803)     at org.mule.tooling.ui.modules.core.widgets.editors.GlobalRefEditor$AddGlobalElementAction.run(GlobalRefEditor.java:434)     at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)     at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:595)     at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:511)     at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:462)     at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)     at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)     at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)     at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)     at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)     at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)     at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)     at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)     at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)     at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:694)     at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)     at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:606)     at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)     at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)     at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)     at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)     at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)     at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)     at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:497)     at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)     at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)     at org.eclipse.equinox.launcher.Main.run(Main.java:1515)     at org.eclipse.equinox.launcher.Main.main(Main.java:1488)  ",Bug,Blocker,Closed,"2016-11-23 12:50:10","2016-11-23 12:50:10",1
Mule,"Remove SHITTY Maven plugin from build","Remove shitty-maven-plugin ",Task,Minor,Done,"2016-11-22 20:56:57","2016-11-22 20:56:57",1
Mule,"Remove dependency to HTTP extension plugin once HTTP service is implemented and compatibility module support migrated to use the service","mule-transport-module-support depends on HTTP extension.  Once this dependency is removed and the module started to use the HTTP Service instead, the dependency as plugin to the HTTP extension plugin should be removed from the plugin.properties files in all the transports too.",Task,Minor,Done,"2016-11-22 19:47:40","2016-11-22 19:47:40",8
Mule,"IllegalStateException is thrown when doing a graceful shutdown","Steps to reproduce:    1. Unpack CE distribution  2. Start Mule using {{./bin/mule}} and wait until it's fully started.  3. Stop Mule using {{CTRL+C}}  Mule fails to complete the graceful shutdown    Log:  ",Bug,Minor,Closed,"2016-11-22 17:23:51","2016-11-22 17:23:51",4
Mule,"WS Consumer exceptions should implement ErrorMessageAwareException","When receiving a WS error it is useful the SOAP response so the user has more details about the failure.",Bug,Critical,Closed,"2016-11-22 14:59:12","2016-11-22 14:59:12",3
Mule,"Handle threading errors with the error handling mechanism","Declare and use an error type for threading exceptions",Task,Major,Done,"2016-11-22 13:44:58","2016-11-22 13:44:58",4
Mule,"Mule service scheduler log file is being created under domain scope","Steps to reproduce:    1. Unpack Mule distribution  2. Start Mule with {{./bin/mule}}  3. Stop Mule  4. Run {{ls -la logs}}  5. A log file named {{mule-domain-mule-service-scheduler-4.0-SNAPSHOT}} is being created.    The Scheduler Service log should be included in the {{mule_ee.log}}. If we want to have a different log for each service, it shouldn't be related to {{mule-domain}}",Bug,Major,Closed,"2016-11-21 21:28:06","2016-11-21 21:28:06",3
Mule,"Allow the creation of custom schedulers in the SchedulerService","Allow the creation of custom schedulers with custom thread pools.",Task,Major,Done,"2016-11-21 21:11:55","2016-11-21 21:11:55",2
Mule,"Change SubflowMessageProcessorChain visibility to public","In MUnit, we need to know if a processor obtained from the registry is a SubflowMessageProcessorChain (the one inside SubflowMessageProcessorChainBuilder), in order to be able to set the mule context and initialize it. This is to cover the scenario where someone wants to run a subFlow from our java test cases (FunctionalMunitSuite).","Enhancement Request",Major,Closed,"2016-11-21 19:34:12","2016-11-21 19:34:12",2
Mule,"NPE when deserializing NO_DYNAMIC_METADATA_AVAILABLE json response","When trying to deserialize the following json message a NPE is thrown:    NPE:  ",Bug,Major,Closed,"2016-11-21 18:59:25","2016-11-21 18:59:25",2
Mule,"Enable online dependency resolution for artifact functional testcase","Enable online dependency resolution for artifact functional testcase.     This should be trough the builder(i.e. can be disable).  It should be disable by default. ","Enhancement Request",Blocker,Closed,"2016-11-21 18:57:13","2016-11-21 18:57:13",4
Mule,"Cannot reference flowVars directly using DW","Though it is possible to have an expression like variables.myFlowVar, myFlowVar directly does not work. This is a problem not only in terms of usability but compatibility since that was supported in MEL. The problem is that we are only binding the entire variable map but not each individually.",Bug,Critical,Closed,"2016-11-21 18:47:31","2016-11-21 18:47:31",2
Mule,"Add DW plugin dependency to the test runner directly","Since the DW plugin will always be present in standalone, it makes sense to have it by the default as a dependency plugin in the test runner. Otherwise in must be included in all tests. Though the dependency will still be required in the pom file this will indicate it is needed.",Task,Minor,New,"2016-11-21 18:44:19","2016-11-21 18:44:19",2
Mule,"Parsers are not validating the presence of a required parameter","For instance,  has a required color parameter but *null* is assigned.    See SubTypesMappingParserTestCase",Bug,Major,Closed,"2016-11-21 16:27:51","2016-11-21 16:27:51",5
Mule,"Quartz scheduler is too verbose","Every time you start or stop Mule, you get a lot of log lines from the Scheduler service.  The log should be reduced to only the necessary lines.    Start Log:      Stop log:  ",Bug,Minor,Closed,"2016-11-21 15:24:07","2016-11-21 15:24:07",1
Mule,"Move schema-related objects from extensions-spring-support to extensions-api","Schema classes from extensions-spring-support are mandatory when using XML extensions, as they are consumed through SPI when generating schemas in the ModuleDelegatingEntityResolver class (particularly, the one implementing SchemaResourceFactory interface, SchemaXmlResourceFactory).    Without this refactor, it's impossible to consume this class (SchemaXmlResourceFactory) from the testing framework (AbstractMuleTestCase) through SPI, failing when running the tests.",Task,Major,Done,"2016-11-21 14:39:05","2016-11-21 14:39:05",8
Mule,"Migrate transaction execution template mechanism to use non-blocking API","Migrate transaction execution template mechanism to use non-blocking API",Task,"To be reviewed",Done,"2016-11-21 10:44:55","2016-11-21 10:44:55",8
Mule,"Allow core operations to have error mappings","As part of MULE-10277 we introduced error mappings to all extension operations and anyone who might extend from abstract-operator (abstractOperatorType) and is an AnnotatedObject. We need to decide which core operations must also support it (by allowing it through the schema definition and from the AnnotatedObject stuff).  This task should culminate with the creation of a STUDIO ticket listing all operators that should now require the mappings functionality.",Task,Critical,New,"2016-11-18 23:51:36","2016-11-18 23:51:36",8
Mule,"Standalone Mule is not loading registry-bootstrap.properties from a jar within a plugin","This is working ok on integration tests.    See the @Ignore'd system test that is failing beacause of this.",Bug,Major,Closed,"2016-11-18 21:42:47","2016-11-18 21:42:47",4
Mule,"Allow to give names to the Schedulers retrieved from SchedulerService","Having a name in the scheduler will help generate better log entries.  The tasks should also have some indication of where they were scheduled.    Also pass flow name via `org.mule.runtime.core.api.processor.strategy.ProcessingStrategyFactory#create` and use for processing strategy schedulers.","Enhancement Request",Major,Closed,"2016-11-18 17:46:04","2016-11-18 17:46:04",2
Mule,"Race condition when running repeatable scheduled jobs","When using scheduledWithFixedDelay, a race cpndition may occur that causes the job to not run because a check is made before the state of the task is updated.",Bug,Major,Closed,"2016-11-18 17:25:33","2016-11-18 17:25:33",2
Mule,"Allow to define dependencies for ConnectivityTestingServiceBuilder to Tooling Runtime API","The Tooling Runtime API should also support for defining a list of dependencies in addition to extensions.",Task,Critical,Done,"2016-11-18 16:58:29","2016-11-18 16:58:29",4
Mule,"Add support for defining dependencies to ConnectivityTestingServiceBuilder","The Tooling Service should also support for defining a list of dependencies in addition to extensions.",Task,Critical,Done,"2016-11-18 16:45:33","2016-11-18 16:45:33",4
Mule,"Tooling API define DTOs for Extension Model Service","Tooling Runtime API is exposing Mule API ExtensionModel, as agreed the API for Tooling should define a DTO and utility classes for it.",Task,Major,Done,"2016-11-18 15:27:43","2016-11-18 15:27:43",16
Mule,"ExtensionModel cleanup ","The current implementation of ExtensionModel asks for different data related to versioning that must not be there.   For example: version and minMuleVersion must be dropped, as the deployment will be in charge of breaking the deployment if anything fails during startup",Task,"To be reviewed",Done,"2016-11-18 14:58:58","2016-11-18 14:58:58",0
Mule,"Decouple MulePluginModelJsonSerializer from mule-api into a mule-api-persistence module","The mule-api project holds a representation of a Mule plugin model and it's serializer from/to JSON.    Ideally, that class should be moved to a different project, similar to what the mule-extensions-api has, where there's the domain objects in api, and a layer of persistence in a different module",Task,"To be reviewed",Done,"2016-11-17 22:11:22","2016-11-17 22:11:22",5
Mule,"Increase of contention found using xpath, due to high classloading usage","Increase of contention found using xpath, due high classloading ussage, on previous release contention was normal but it has increased and reduces the performance of the application.    The consumed time appears to be from: org.mule.module.launcher.MuleApplicationClassLoader.getResource(String)    Note: this didn't affect other releases than 3.8.2, since the change was in the development branches.",Bug,Blocker,Resolved,"2016-11-17 20:13:43","2016-11-17 20:13:43",4
Mule,"ArtifactClassLoaderRunner - Lookup policies for Plugin in Region should honor dependencies","The region build by the isolated class loader factory is not considering the dependencies between plugins therefore plugins are ended up with a lookup policy CHILD_FIRST instead of CHILD_ONLY and PARENT_FIRST (first one if the plugin doesn't depend in another one that goes to the region too and the second one is when the plugin declares the dependency so it can access to a the dependent plugin exported classes).",Task,Major,Done,"2016-11-17 20:09:12","2016-11-17 20:09:12",2
Mule,"Update xmlbeans dependency to our fork in mule-common","We've created a fork of xmlbeans to fix an issue since it has no support anymore. Now the mule-common dependency should be updated.",Bug,Major,Resolved,"2016-11-17 19:47:38","2016-11-17 19:47:38",0
Mule,"Content-Length header case conflicts with streaming","Because we are reacting to having Content-Length as header (for querying and removal) having a different case has undesired consequences in terms of streaming. This happens for all headers so we need a general approach.",Bug,Major,Closed,"2016-11-17 17:28:07","2016-11-17 17:28:07",0
Mule,"Negative threadWaitTimeout used with SEDA processing strategy fails rather than waiting forever to enqueue.","Negative threadWaitTimeout used with SEDa processing strategy fails rather than waiting forever.",Bug,Minor,Closed,"2016-11-17 17:02:15","2016-11-17 17:02:15",2
Mule,"Change default processing strategy to remove single-threaded limitation for request-response","Change default processing strategy to remove single-threaded limitation for request-response.  Whenever a transaction is present single-threaded processing will still be used.",Task,Major,Done,"2016-11-17 14:00:44","2016-11-17 14:00:44",8
Mule,"Change default processing strategy to treat one-way and request-response equally","Regardless of if event is R-R or ONE-WAY or if processing strategy uses one or many threads, the flow result or exception should be returned/propagated.      This means that if the default processing strategy (in the case of ONE_WAY events) will:  - Return result event and not echo inbound event.  - Will propagate exceptions that occur as part of the flow processing and will be handled in the same way as when sync processing is used.  Error will not be handled in an async thread instead  - If Flow.process() is being used and exceptions are not handled, this will throw exceptions.  - Tests will need to be updated to use either async running of flow, or to use ONE_WAY exchange pattern on a case by case basis when .asynchronuosly() is currently used. ",Task,Critical,Done,"2016-11-17 13:48:03","2016-11-17 13:48:03",8
Mule,"Incorrect OS encoding displayed in the console","h3. Description  As a result of a change in MULE-7655, the OS Encoding is being reported as the system's File Separator. It would be ideal if the Encoding was displayed.      h3. Steps to reproduce  # Start up a mule application  # Observe the Application reports the OS Encoding as '/'    Log:  {code}  **********************************************************************  * Application: default                                               *  * OS encoding: /, Mule encoding: UTF-8                               *  *                                                                    *  * Agents Running:                                                    *  *   Batch module default engine                                      *  *   JMX Agent                                                        *  *   Wrapper Manager                                                  *  **********************************************************************  {code}    h3. Workaround  Ignore the output and manually check the file.encoding property.     h3. Notes  See: {{org.mule.util.ApplicationStartupSplashScreen.*doHeader*}} (_Line: 23_)  {code:java}      protected void doHeader(MuleContext context)      {          header.add(Application:  + context.getConfiguration().getId());          header.add(String.format(OS encoding: %s, Mule encoding: %s,                                   SystemUtils.FILE_SEPARATOR,                                   context.getConfiguration().getDefaultEncoding()));          header.add( );      }  {code}  ",Bug,Minor,Closed,"2016-11-17 03:20:16","2016-11-17 03:20:16",0
Mule,"Parallel deployment causes runtime contention on Logger.","We found that after the deployment worker threads are being blocked on org.mule.module.launcher.log4j2.LoggerContextCache.getLoggerContext(ClassLoader) this was introduced when the feature for parallel deployment was introduced.",Bug,Blocker,Closed,"2016-11-16 19:36:30","2016-11-16 19:36:30",2
Mule,"Content parameters should not be available as attributes in the DSL","What the title says. Applies to content parameters",Bug,Critical,Closed,"2016-11-15 19:26:18","2016-11-15 19:26:18",1
Mule,"java.lang.Object is persisted as a type in the extension model JSON","The following JSON is generated:      When the ExtensionModelJsonSerializer travels all the MetadataTypes for registering purposes, it ends up registering everything, even types such as java.lang.Object.",Bug,Major,Closed,"2016-11-15 18:35:13","2016-11-15 18:35:13",3
Mule,"Fail to load WeaveExpressionLanguage","When I try to execute Web Service Consumer operation I got a failure when Mule tries to load {{WeaveExpressionExecutor}}. Apparently it fails because DataWeave is not  a WSC dependency. Adding this line to WSC {{plugin.properties}} solves the problem:   ",Bug,Blocker,Closed,"2016-11-15 17:49:22","2016-11-15 17:49:22",4
Mule,"AbstractAggregator eventGroups object store ignores the object store configuration in the registry","On AbstractAggregator#internalEventsGroupsObjectStoreFactory the store should be looked up from the registry rather than from the deprecated static methods.    That way, when a core extension replaces the ObjectStores in the registry, the aggregator takes those instead of the defaults.",Bug,Major,Closed,"2016-11-15 17:43:52","2016-11-15 17:43:52",0
Mule,"JDK Resources are not being found when running a test with MuleArtifactClassloader","Running a test that requires a resource bundle that lives in the JDK, when the classloader cooked for testing is not delegating the look up of resources to its parent if the resource is not found.",Bug,Blocker,Closed,"2016-11-15 16:28:00","2016-11-15 16:28:00",2
Mule,"Improve support for identifying the next-operation message processor ","We need to improve how to find the next-operation message processor in the policy chain.    This must be done once we have a better navigation of the message processor in every chain. ",Task,Blocker,Done,"2016-11-15 15:46:26","2016-11-15 15:46:26",4
Mule,"Make everything possible an AnnotatedObject in SDK","We need to guarantee that most components support annotations so that features can be added later on, for example.  ",Task,Critical,Done,"2016-11-15 12:47:31","2016-11-15 12:47:31",16
Mule,"Make all message processor AnnotatedObject","We need to guarantee that annotations are available for most components since having that in place will allow us to later add new features, for example.",Task,Critical,Done,"2016-11-15 12:45:34","2016-11-15 12:45:34",8
Mule,"HTTP UI improvements","HTTP Request:  - API Configuration -> API Specification  - Configuration overrides should be moved to their own tab instead of going under Advanced.  - path should default to /  - host should have an example value of 0.0.0.0  - port should have an example value of 8081  - charset is represented as an object plus a checkbox which is called present - not sure what the fix is, but need to discuss and clean this up.   - Response Settings should be a new Response tab, not a group    HTTP Listener:  - HTTP path should be on the top of the form  - charset is represented as an object plus a checkbox which is called present (see above)  - configuration overrides should be a group, not a tab (especially since it only has one configuration option)  - Response Settings should be a new Response tab, not a group  - Error Response Settings should be a new Error Response tab, not a group",Task,Major,Done,"2016-11-14 19:12:21","2016-11-14 19:12:21",3
Mule,"WSC can't load embedded wsdl schemas on the types tag. ","Having a WSDL with a types tag like this one:      that defines an inner schema in the wsdl file, we are not taking it in count and all the types that are described there are not going to be loaded.",Bug,Blocker,Closed,"2016-11-14 18:00:22","2016-11-14 18:00:22",5
Mule,"Artifact plugins must include full dependency information","Artifact plugins currently provide the list of plugins names that are required as dependencies in order to deploy a given plugin.  That name is not enough as there could be multiple versions of a given plugin, which could or could not match with a the required version.  So, plugins must include the complete information of  to identify another plugin. Each dependency must include, instead of the name, the folowing information:  ",Task,Critical,Done,"2016-11-14 17:06:36","2016-11-14 17:06:36",1
Mule,"Decouple all message processors from FlowConstruct","Ideally no message processor need to be coupled to FlowConstruct. We should replace the FlowConstructAware requirement for other means, like NamingManager, etc.",Task,"To be reviewed",Done,"2016-11-14 16:00:42","2016-11-14 16:00:42",16
Mule,"Migrate Basic Tests from JMS transport to JMS Extension","Migrate Tests from JMS transport to JMS Extension",Story,Blocker,Done,"2016-11-14 16:00:37","2016-11-14 16:00:37",16
Mule,"Support Transactions in Sources","Support Transactions in Sources","Enhancement Request",Critical,Closed,"2016-11-14 15:54:08","2016-11-14 15:54:08",21
Mule,"Support error handling scenarios between policies and flows","This is to properly define behaviour and support the error scenarios when executing the next operation.    What error type propagate when the flow/operation execution fails?.  Should we allow the user to handle error in the policies for request operations?.",Task,Blocker,Done,"2016-11-14 15:49:34","2016-11-14 15:49:34",8
Mule,"Support Transactions in JMS Extension","Support Transactions in JMS Extension    * Implies the support of binding sessions to the transaction thread  * How the transactional action is related to the ACK Modes  * Make it happen","Enhancement Request",Critical,Closed,"2016-11-14 15:49:13","2016-11-14 15:49:13",13
Mule,"Support Sources in JMS Extension","Support Sources in JMS Extension","Enhancement Request",Blocker,Closed,"2016-11-14 15:48:29","2016-11-14 15:48:29",13
Mule,"Error accessing variables within a transform element","When trying to access the variables within a DW script, it fails because of an issue handling TypedValue class.    It seems that the problem is related to the fact that the variables binding is a type value with other type values inside.",Bug,Blocker,Closed,"2016-11-14 15:00:22","2016-11-14 15:00:22",2
Mule,"When shutting down a scheduler, it takes the timeout time even in there's no pending work to do","This causes unneeded delay in the execution of the tests, as well as a potential issue when shutting down applications.",Bug,Major,Closed,"2016-11-14 12:37:13","2016-11-14 12:37:13",1
Mule,"Provide a lookup method for SchedulerService in MuleContext","This is to avoid performing the lookup in the registry and handling RegistationException each time the service is needed.","Enhancement Request",Major,Closed,"2016-11-14 12:08:44","2016-11-14 12:08:44",1
Mule,"Tooling client does not support application deployment if there is not default domain","In order to test this you can remove the default domain from domains folder in mule installation.    org.mule.tooling.service.api.DeploymentException: Couldn't deploy the application     at org.mule.tooling.agent.rest.client.RestAgentToolingService.deployApplication(RestAgentToolingService.java:112)   at org.mule.tooling.client.internal.DefaultToolingRuntimeClient.deployApplication(DefaultToolingRuntimeClient.java:61)   at org.mule.integration.test.tooling.client.ConnectivityTestCase.deployEmailApp(ConnectivityTestCase.java:144)   at org.mule.integration.test.tooling.client.ConnectivityTestCase.cachingSuccessConnectionTesting(ConnectivityTestCase.java:112)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:497)   at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)   at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)   at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)   at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)   at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)   at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)   at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)   at org.junit.rules.RunRules.evaluate(RunRules.java:20)   at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)   at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)   at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)   at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)   at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)   at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)   at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)   at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)   at org.junit.runners.ParentRunner.run(ParentRunner.java:363)   at org.junit.runner.JUnitCore.run(JUnitCore.java:137)   at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:119)   at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42)   at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234)   at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:497)   at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)  Caused by: org.mule.tooling.agent.rest.client.exceptions.ToolingServiceAPIException: HTTP 500 Internal Server Error{errorType:class org.mule.runtime.deployment.model.api.DeploymentException,errorMessage:Domain \u0027default\u0027 has to be deployed in order to deploy Application \u0027tooling-4a47ffd0-aa10-11e6-af37-a0999b1354f3\u0027,errorDetail:org.mule.runtime.deployment.model.api.DeploymentException: Domain \u0027default\u0027 has to be deployed in order to deploy Application \u0027tooling-4a47ffd0-aa10-11e6-af37-a0999b1354f3\u0027\n\tat org.mule.runtime.module.deployment.internal.application.DefaultApplicationFactory.createAppFrom(DefaultApplicationFactory.java:91)\n\tat org.mule.runtime.module.deployment.internal.application.DefaultApplicationFactory.createArtifact(DefaultApplicationFactory.java:79)\n\tat org.mule.runtime.module.tooling.internal.DefaultToolingService.createApplication(DefaultToolingService.java:57)\n\tat com.mulesoft.agent.services.tooling.MuleAgentToolingService.deployToolingApplication(MuleAgentToolingService.java:233)\n\tat com.mulesoft.agent.services.tooling.MuleAgentToolingService.deployToolingApplication(MuleAgentToolingService.java:170)\n\tat com.mulesoft.agent.external.handlers.tooling.ToolingRequestHandler.lambda$deployToolingApplication$2(ToolingRequestHandler.java:150)\n\tat com.mulesoft.agent.util.ResponseHelper.response(ResponseHelper.java:88)\n\tat com.mulesoft.agent.external.handlers.tooling.ToolingRequestHandler.deployToolingApplication(ToolingRequestHandler.java:148)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:497)\n\tat org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81)\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:151)\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:171)\n\tat org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:152)\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:104)\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:387)\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:331)\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:103)\n\tat org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:271)\n\tat org.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\n\tat org.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:315)\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:297)\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:267)\n\tat org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:297)\n\tat org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:254)\n\tat org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1028)\n\tat org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:372)\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:381)\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:344)\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:221)\n\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:696)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1515)\n\tat com.mulesoft.agent.rest.RequestLoggingFilter.doFilter(RequestLoggingFilter.java:95)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1486)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:519)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1097)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:448)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1031)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:446)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:271)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:246)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)\n\tat java.lang.Thread.run(Thread.java:745)\n}   at org.mule.tooling.agent.rest.client.tooling.applications.Applications.put(Applications.java:83)   at org.mule.tooling.agent.rest.client.RestAgentToolingService.deployApplication(RestAgentToolingService.java:106)   ... 34 more",Bug,Critical,Closed,"2016-11-14 02:20:06","2016-11-14 02:20:06",0
Mule,"Provide a way to lookup non handleable errors ","Mule does not want third parties to be creating error types programatically .  Thus they provide a repo to look for an specific error type given an error type identifier.     ErrorTypeRepository.lookupErrorType(errorTypeComponentIdentifier);    Now this lookup does not consider those errors that can not be handle, as the critical errors.     MUnit has this need to check the repository for an specific error type id and obtain the error type with the goal of see if this specific error type matches one thrown.       ","Enhancement Request",Major,Closed,"2016-11-11 19:43:06","2016-11-11 19:43:06",4
Mule,"Support mutation of java objects","When working with policies, it needs to be possible to mutate the request attributes or the payload that is going to be sent by the http:request operation or the response of the http:listener source.    It must be possible to reset headers, add headers, remove headers from attributes.",Task,Critical,Done,"2016-11-11 15:31:23","2016-11-11 15:31:23",0
Mule,"Remove Event.isTransacted() and Event.refreshSync()","Remove Event.isTransacted()",Task,Critical,Done,"2016-11-11 11:31:30","2016-11-11 11:31:30",4
Mule,"Populate Layout information for Transactional Action parameters","*Populate Layout information for Transactional Action parameters*    * The {{Transactional Action}} parameter is injected when using a {{Transactional Connection}}, due that is injected by the SDK and not defined by the extension developer, there is no chance to be able to define a custom layout information.  ","Enhancement Request",Major,Closed,"2016-11-10 18:07:34","2016-11-10 18:07:34",1
Mule,"Some hamcrest assertions are using mockito matchers","Fix the tests",Bug,Major,Closed,"2016-11-10 17:55:30","2016-11-10 17:55:30",0
Mule,"Parameter placement order have two different default values","*Parameter placement have two different default values*    * If a parameter doesn't use the {{@Placement}} annotation, the default order is {{0}}  * If the parameter use the {{@Placemente}} annotation, but without defining the order value, the value to be configured in the ext model will be {{-1}}    *Review the same for:*  * Tabs  * Groups  * Other layout information with default values",Bug,Major,Closed,"2016-11-10 17:53:11","2016-11-10 17:53:11",3
Mule,"Review and define processing type for all core processors.","Review and define processing type for all core processors.",Task,Critical,Done,"2016-11-10 16:13:57","2016-11-10 16:13:57",4
Mule,"Review validate and exception uses","The validate method used to throw an InvalidExpressionException so most uses remain that way, plus they rely on that to determine the failure instead of analysing the ValidationResult. We need to refactor all its uses.",Task,Major,Done,"2016-11-10 15:43:37","2016-11-10 15:43:37",2
Mule,"Define interaction between DataType and MetadataType (function)","Need to start defining functions as bindings so we need to define how to type them.",Task,Critical,Done,"2016-11-10 14:49:29","2016-11-10 14:49:29",2
Mule,"Cover all DW/MEL scenarios for ExpressionManager in tests","Define infrastructure to run test in both modes.",Task,Major,Done,"2016-11-10 14:44:28","2016-11-10 14:44:28",8
Mule,"Add DW plugin to our tests dependencies","We need to make it possible for everyone to use DW on their tests from now on.",Task,Critical,Done,"2016-11-10 14:34:08","2016-11-10 14:34:08",1
Mule,"Separate deployment artifact implementations from deployment module","Deployment model currently contains both deployment artifact implementations (artifact and factories) and deployment management logic (directory watcher, listeners, etc)  We need to have deployment artifacts in a different module so tooling can use it without having to depend on the deployment logic, which has to be used on the container only",Task,Major,Done,"2016-11-10 14:26:04","2016-11-10 14:26:04",8
Mule,"Allow the SchedulerService to create pools per app rather that per container","Provide a switch in the configuration to configure whether the pools exist at the container level or per application.    In the per app case append the name of the app to the name of the thread    In the per container case, add metadata to the threads to know what application the executing task is from. See how this can be visualized from visualvm.",Task,Blocker,Done,"2016-11-10 14:12:48","2016-11-10 14:12:48",16
Mule,"Migrate extensions source to use the new Schedulers","Migrate extensions source polling to use the new Schedulers",Task,Major,Done,"2016-11-10 13:22:19","2016-11-10 13:22:19",4
Mule,"Add internal support for retrieving metadata in Tooling Client","Tooling Client API would need to use for DataSense the Metadata for an operation, this operation would need to be implemented internally in the REST Client inside the tooling but should not be exposed to external clients.",Task,Critical,Done,"2016-11-10 13:18:23","2016-11-10 13:18:23",2
Mule,"Tooling API should allow to generate an Extension Model for a plugin","Allow to generate the extension model for a plugin from Tooling API client.",Task,Major,Done,"2016-11-10 13:13:38","2016-11-10 13:13:38",2
Mule,"Tooling API allow to do connectivity testing using ConnectivityTestingServiceBuilder","Expose API for MULE-10930 to allow doing connectivity testing without deploying an application. This API will be changed later to also do deploy for the application as the current API in client is done.",Task,Critical,Done,"2016-11-10 13:05:46","2016-11-10 13:05:46",8
Mule,"Change Tooling REST API to allow doing connectivity testing using ConnectivityTestingServiceBuilder","It will be required to expose (temporary) the service to do connectivity testing without deploying an application, therefore we will have to expose ConnectivityTestingServiceBuilder through this API.",Task,Critical,Done,"2016-11-10 13:03:48","2016-11-10 13:03:48",8
Mule,"Support policy packaging and deployment","This is to define and support policy packaging. Such definition must contain:   - A policy descriptor file. This descriptor file will contain information about the minimum runtime required version, the name of the policy, a description of the policy and the set parameters accepted by the policy. There will be a PolicyModelDescriptor similar to what we have for ExtenisonModel to be able to load the descriptor from the policy zip file and describe it for tooling purposes. For instance, API platform can use this mechanism to understand any policy (custom or not) and describe it in the UI.",Task,Major,Done,"2016-11-10 11:05:26","2016-11-10 11:05:26",16
Mule,"Support parametrization of policies","Policies support parametrization. For instance throttling policies allows to parametrize the number of request per seconds based on user input. This is to define a mechanism to define the parametrization of the policies when applied.  ",Task,Major,Done,"2016-11-10 11:00:11","2016-11-10 11:00:11",8
Mule,"Support http policy specific pointcuts","This is to add support in HTTP connector to provide information specific to it to be able to apply pointcuts specific to HTTP",Task,Critical,Done,"2016-11-10 10:57:54","2016-11-10 10:57:54",8
Mule,"Support policy composition","This is to support the dynamic application of policies into mule, which requires:   - API to create a context for the policies that can be destroyed gracefully and that has isolation over the applicaton components   - Mechanism to register new policies",Task,Critical,Done,"2016-11-10 10:55:27","2016-11-10 10:55:27",16
Mule,"Support http proxy policy injection without pointcuts","This is full support for http proxy policies including:   - Variables scoping    - Source logic   - Source output modification   - Request logic   - Request content modification  ",Task,Major,Done,"2016-11-10 10:50:48","2016-11-10 10:50:48",8
Mule,"No reference to actual exception on MessageRedeliveredException","When the IdempotentRedeliveryPolicy fails because the attempts are exceeded, the last exception that caused that is lost. ",Bug,Major,Resolved,"2016-11-10 01:42:32","2016-11-10 01:42:32",4
Mule,"Add ShutdownHook to MuleDeployment rule ","Add ShutdownHook to MuleDeployment rule to be sure that aren't left running any runtime when a test is aborted doing a control + c","Enhancement Request",Major,Closed,"2016-11-09 21:32:45","2016-11-09 21:32:45",5
Mule,"DefaultScheduler periodic scheduling methods not working","When using DefaultSchedulers methods scheduleAtFixedRate or scheduleWithFixedDelay, the task is only executed the first time and never again.",Bug,Major,Closed,"2016-11-09 20:31:56","2016-11-09 20:31:56",2
Mule,"FtpWork never processes file if lock is not granted","When an FtpWork (FtpMessageReceiver) runs and cannot get the lock for the file (e.g. another FtpWork got the lock for another file with the same name; in another folder), the work finishes without removing the file from the scheduleFiles, causing it to never be processed. ",Bug,Major,Resolved,"2016-11-09 20:23:14","2016-11-09 20:23:14",0
Mule,"Allow to configure timeouts for operations and connections on Tooling Client","There is no way to set up timeout for tooling operations and connections to remote service too.",Task,Major,Done,"2016-11-09 19:31:09","2016-11-09 19:31:09",1
Mule,"Parameter group resolution is super coupled to everything","ParameterGroup resolution is coupled to model properties on each parameter which makes it super coupled to a lot of components.     We need a way to do the same thing without being tied to the model properties of a parameter model. An awful example of this is the NullSafeValueResolverWrapper. ",Bug,Critical,Closed,"2016-11-09 19:14:38","2016-11-09 19:14:38",8
Mule,"Until successful is losing session vars","As a consequence of MULE-10100 where we prevented until successful from returning an event copy, the session vars altered within such component are lost. We copy the flow variables but not session ones which is causing the trouble.",Bug,Major,Resolved,"2016-11-09 18:56:05","2016-11-09 18:56:05",0
Mule,"Change ResponseAssertionMessageProcessor to use tasks instead of threads for assertions","When dispatching a task to a Scheduler, if the dispatching tasks finishes before the dispatched task starts, the dispatched one may end up running in the same thread as the dispatcher.    To avoid this, we should put some token in the thread local of the thread running the task and use that for assertion, instead of asserting of the threads identity.    This is causing flakyness in NonBlockingFullySupportedFunctionalTestCase","Enhancement Request",Major,Closed,"2016-11-09 13:12:39","2016-11-09 13:12:39",2
Mule,"Remove BlockingMessageProcessor since it's not actually used","Right now, the core provider defining the block component is using a specific type definition and an object factory. However, the object type from the latter is a MessageProcessorChain while the type definition a BlockMessageProcessor.",Bug,Major,Closed,"2016-11-08 19:04:46","2016-11-08 19:04:46",2
Mule,"Function Types should be exposed as the generic type of it and not as a Function","*Function Types should be exposed as the generic type of it and not as a Function*    * In the same way as the {{ParameterResolver}}, the Type that appears in the Extension Model should not be the {{Function<>}} type, instead should be the generic type of it, for example:   ** {{Function<Event, SomePojo>}}, should be exposed as {{SomePojo}}",Bug,Blocker,Closed,"2016-11-08 14:43:01","2016-11-08 14:43:01",2
Mule,"MessagingException.getCause should return throwable","This is the constructor of MuleException      All constructors of MessagingException receives Throwable as cause  Then this is the getCause of MessagingException        Shouldn't this be Throwable?","Enhancement Request",Major,Closed,"2016-11-08 14:22:18","2016-11-08 14:22:18",4
Mule,"Add support for implicit Keys Resolvers for Enum and Boolean MetadataKeyIds","Add support for implicit Keys Resolvers for Enum and Boolean MetadataKeyIds","Enhancement Request",Critical,Closed,"2016-11-07 20:49:46","2016-11-07 20:49:46",5
Mule,"Provide a way for the extension developer to inject mule default encoding","Provide a way for the extension developer to inject mule default encoding so we avoid code like this:        We could annotate a parameter with @Encoding to automatically supply default mule's encoding if there is no value present.","Enhancement Request",Major,Closed,"2016-11-07 19:46:43","2016-11-07 19:46:43",5
Mule,"Fix TCP tests to use system property instead of a flow var","The following tests are still using a flow var to set the protocol and as a result are not actually being parameterised:   TcpSendAndReceivePojoTestCase  TcpSendAndReceiveStringTestCase",Task,Minor,Done,"2016-11-07 17:15:55","2016-11-07 17:15:55",1
Mule,"@NullSafe does not work on POJO fields. ","Having a POJO that is not parameter group when using the @NullSafe annotation in one of its @Parameter fields is not injecting anything.    We want the same behaviour that we have for operation @Parameters in this NullSafe annotated fields",Bug,Major,Closed,"2016-11-07 17:01:06","2016-11-07 17:01:06",2
Mule,"Source callback parameters can be part of only one CallbackPhase","Source Callback parameters have a {{CallbackParameterModelProperty}} indicating from which CallbackPhase (*OnError* or *OnSuccess*) they are a part.   These parameters can be a part of both phases, but in the model property, just one phase is stored.",Bug,Blocker,Closed,"2016-11-07 13:40:45","2016-11-07 13:40:45",3
Mule,"Extract classLoader model definition from artifact descriptors","All the information used to create classLoaders is part of the artifact descriptors.  This makes hard to used different ways to create artifact (zipped/unzipped) as the creation of the classLoaders is split on different places.",Task,Major,Done,"2016-11-04 21:14:16","2016-11-04 21:14:16",8
Mule,"ConnectionValidationResult support for JSON serialization/deserialization ","Current version of the class has a field with the exception, this will not allow to be serialized and deserialized as JSON format when using it from Tooling Client.",Task,Major,Done,"2016-11-04 20:45:35","2016-11-04 20:45:35",0
Mule,"Add services support to domains","Services are not currently available in domains.",Bug,Blocker,Closed,"2016-11-04 20:44:53","2016-11-04 20:44:53",2
Mule,"Remove Studio distribution","Remove Studio distribution",Task,Major,Done,"2016-11-04 19:25:45","2016-11-04 19:25:45",1
Mule,"Classloading: MuleArtifactUrlConnection must be enhanced to support any mule artifact","The current implementation `MuleArtifactUrlConnection` supports mule plugin artifacts but it has to be enhanced to support any other artifact such as: services, plugin servers, applications and domains.    This will allow us to stop unzipping any artifact mule relies on when doing a deployment (no more exploded apps, neither plugins, neither <put any artifact here>). To do so, we need to also be sure that mule stops writing in the local folders of any application (e.g.: `your-app/.mule/`).    ",Task,Critical,Done,"2016-11-04 18:38:33","2016-11-04 18:38:33",0
Mule,"Soap Service: Create interceptor to parse embedded attachment in SOAP response.","Currently, we are parsing the response in different ways if the client supports MTOM or doesn't because a response with embedded attachments does not parse the attachments before building the final response body.    We should try to create an interceptor that loads the attachments prior to the final response body gets build and then we can treat every response the same way.","Enhancement Request",Major,Closed,"2016-11-04 15:05:18","2016-11-04 15:05:18",8
Mule,"GrizzlyHttpClient#createGrizzlyRequest: separate RequestBuilderCreation from its actual configuration","Seaparate the creation and the configuration","Enhancement Request",Major,Closed,"2016-11-03 17:44:53","2016-11-03 17:44:53",0
Mule,"Support operation UX","Add support for the new Operation UX guidelines","Enhancement Request",Blocker,Closed,"2016-11-02 18:11:31","2016-11-02 18:11:31",13
Mule,"Unregister resources from Bitronix (ResourceRegistrar and ManagementRegistrar)","In 3.6.2 the queue and resources are not being unregistered from the Bitronix registries. In 3.8.2 the queue is unregistered but the database connector is not, so redeploying an application with a db connector will cause a replication in the uniqueName. ",Bug,Major,Closed,"2016-11-02 14:44:14","2016-11-02 14:44:14",0
Mule,"AsyncInterceptingMessageProcessor#processNextAsync not rethrowing exception","Add the missing 'throw' in the catch block of processNextAsync",Bug,Critical,Closed,"2016-11-02 13:37:05","2016-11-02 13:37:05",1
Mule,"HTTP does not support multiple headers/query params (same name)","Right now, since the headers attribute is a Map, having multiple headers with the same key is impossible. We should try using ParameterMap or something like that.   This is a real issue for the proxy scenario since the headers received by a listener can't be exactly matched by a request.",Bug,Critical,Closed,"2016-11-01 20:46:53","2016-11-01 20:46:53",4
Mule,"SDK should be able to handle parameters as TypedValues","The SDK should be able to request any parameter not just as a single value, but as a TypedValue.    This should be the mechanism to obtain a DataType or MediaType of a given value.","Enhancement Request",Blocker,Closed,"2016-11-01 18:16:53","2016-11-01 18:16:53",8
Mule,"Classloading: Drop unzipping mechanism when loading plugins ","Plugins shouldn't be unzipped when generating the filtered classloader, as it not only generates overhead while unzipping or doing the house keeping after the app it's stopped (aka: deleting the files), but it will be also helpful from a tooling point of view.    This jira is part of a set of them where the main intent is to allow tooling to extract an ExtensionModel for any plugin, generating a classloader for that plugin in a simplified way (i.e.: no unzipping, nor cleaning after it was consumed)",Task,Major,Done,"2016-11-01 15:51:14","2016-11-01 15:51:14",0
Mule,"Add support on Tooling API to access remote Mule Runtime instance","In addition to current support for accessing local mule instances it would have to allow access remove mule instances.",Task,Major,Done,"2016-11-01 14:00:59","2016-11-01 14:00:59",2
Mule,"Duplicate content-type created in response builder","Content-type specified in http response builder and also in a property duplicates it:        Calling this flow will receive 2 content-type headers returned:    {quote}  curl -v localhost:8081  * Connected to 127.0.0.1 (127.0.0.1) port 8081 (#0)  > GET / HTTP/1.1  > Host: 127.0.0.1:8081  > User-Agent: curl/7.43.0  > Accept: */*  >  < HTTP/1.1 200  < Content-Length: 4  < Content-Type: application/json;charset=UTF-8  < Content-Type: application/xml;charset=UTF-8  {quote}    ",Bug,Minor,Closed,"2016-11-01 13:06:52","2016-11-01 13:06:52",0
Mule,"Migrate individual threads","I found the following places where individual threads are started:    * DefaultProcessingTimeWatcher  * AbstractAggregator  * EventCorrelator  * AbstractAsyncRequestReplyHandler  * AbstractMonitoredObjectStore  * ExpiryMonitor (move to compatibility?)  * JmsConnector#responseTimeoutTimer (compatibility)    Migrate those to use the corresponding scheduler.    Also, move ThreadNameHelper to compatibility",Task,Major,Done,"2016-11-01 12:41:25","2016-11-01 12:41:25",4
Mule,"Migrate scheduler module","Quartz should be removed as a dependency of the runtime and be only on the scheduler service.",Task,Major,Done,"2016-11-01 12:40:29","2016-11-01 12:40:29",8
Mule,"on-error-continue has a name attribute","{{on-error-continue}} element accepts {{name}} attribute, which makes deployment fails because only top level elements can have a {{name}} attribute.    To reproduce try to deploy an application with this:    ",Bug,Minor,Resolved,"2016-10-31 20:04:07","2016-10-31 20:04:07",1
Mule,"Write try transaction tests","We need to write unit/functional tests for {{<block transactionalAction}} behavior.",Task,Blocker,Done,"2016-10-31 18:24:45","2016-10-31 18:24:45",8
Mule,"Remove unused Generic on TypeBuilder","MetadataTypeBuilder no longer uses generics it should be removed from its uses.",Bug,Major,Closed,"2016-10-31 17:39:20","2016-10-31 17:39:20",2
Mule,"Support new Error Handling in Extensions API","Implement what was written in the matching spec","Enhancement Request",Blocker,Closed,"2016-10-31 15:30:22","2016-10-31 15:30:22",13
Mule,"Change groupId and artifactId from muleesb to mule","Change all references to artifacts called muleesb to mule",Task,Major,Done,"2016-10-31 13:54:13","2016-10-31 13:54:13",1
Mule,"Definition parser doesn't support Connection Providers with alias","When setting an alias for a Connection Provider, the packaged connector won't deploy due to a definition parser error.    This was tested in M3 but is reproducible in SNAPSHOT as well.    The bug can be reproduced using [this repo commit|https://github.com/fbarrios/hello-world-connector-4.x/tree/6ac23ed73aa2aa150bd098ef512d8c267967b2e7].    The error logged in the runtime is the following:  ",Bug,Major,Closed,"2016-10-28 22:20:52","2016-10-28 21:20:52",3
Mule,"Improve WSC attachments UX","We should add metadata support for attachments in the wsc.    Input:  * If at least one attachment is required the field should be marked as an ArrayType of binary types  * if no attachment is required the list should be marked as NullType.    Output:  * If the output contains at list one attachment the output of the consume operation should be a multipart payload object.  * if the output does not contains any attachments then the result should be an string type representing the xml body response.    We should also check if its possible to remove the Content ID required from the list of parameters and automatically add this field to the requesting body.      ","Enhancement Request",Major,Closed,"2016-10-28 19:28:35","2016-10-28 18:28:35",8
Mule,"Make SchedulerService available in tests","For unit tests, a simple service with just 2 threads would be enough.    For integration tests, the actual service has to be used.",Task,Major,Done,"2016-10-28 18:52:50","2016-10-28 17:52:50",4
Mule,"Define configuration for input parameters for the content of operations","Define how operation content parameter/s needs to be configured for all connectors.",Task,Critical,Done,"2016-10-27 17:55:05","2016-10-27 16:55:05",0
Mule,"Mule 4 - Operation UX","Define how operation content parameter/s needs to be configured for all connectors taking into account:   - Type checking   - Auto-transformation of parameters   - Consistency for different types of connectors   - Have in mind the input parameters and the output parameters (http:listener, http:request)   - Have in mind how http policies work and policiies in general",Epic,Critical,Done,"2016-10-27 17:53:34","2016-10-27 16:53:34",0
Mule,"Define replacement for MuleClient","One of the idea is to include a mechanism that underneath uses the EL to execute functions that are the extensions operations.    This must also include the review of the usages of MuleClient to see if it's really needed as it is today.",Task,Critical,Done,"2016-10-27 17:49:14","2016-10-27 16:49:14",8
Mule,"Spike for policies artifacts on Mule 4","Need to investigate different approaches to support isolated policies artifacts on the gateway",Task,Critical,Done,"2016-10-27 17:37:40","2016-10-27 16:37:40",16
Mule,"Implement internal object serializers","Current object serialization is using the external serialization protocols, i.e., the serialization protocol that do not know anything about the internal Mule class loading mechanism.  Need to implement internal versions of the serialization protocol in order to be able to serialize/deserialize classes which are not exposed from the originating classloader.  ","Enhancement Request",Critical,Closed,"2016-10-27 16:04:21","2016-10-27 15:04:21",16
Mule,"Mule 4 - I18N","Define API for i18n in Mule 4",Epic,Critical,New,"2016-10-27 15:55:52","2016-10-27 14:55:52",8
Mule,"Move serialization API from core to mule-api","Move API defined on core/src/main/java/org/mule/runtime/core/api/serialization to mule-api project.",Task,Major,Done,"2016-10-27 15:31:23","2016-10-27 14:31:23",2
Mule,"Spike: Support MVEL and DW","We need to define a way to support both MVEL and DW (MULE-10410 regards deprecating MVEL by restricting it to the compatibility module and redefining how both will be supported there).   This task includes possibly adapting the old language to the new and at the very least allowing the expression component to use DW so that testing can be done.",Task,Major,Done,"2016-10-27 15:18:51","2016-10-27 14:18:51",16
Mule,"Improve EL API considering feedback","We need to take into account Achaval's feedback regarding the EL API and make the appropriate modifications. His thoughts:  {quote}  ValidationResult      - Needs to have a list of messages           -  A message has               - severity: Severity (Warning,Error,Info)              - message: String              - location: Location                  - startPosition: Position (line:Int,column:Int,offset:Int)                 - endPosition:Position   Nice to have two factory methods   - createSucessResult   - createErrorResult       Nice to have a factory method with an already existing bindingContext specially to start summing context  BindingContextBuild.builder(bindingContext)    ScriptingException? What type of exception should I throw when it fails the execution.    evaluate(script: String, expectedOutputType: DataType, bindingContext: BindingContext)  For this to work we need to discuss */* what is the menaing of this?? Should it be changed to application/java -- (Pablo K and Pablo LG)  Also need a way to access the mule transformers  {quote}    Seems like we need to:   - provide a better ValidationResult abstraction and a factory (basic factory methods added in (done in MULE-10842))   - provide an exception signature for the evaluate method   - provide a factory method for the binding context considering an existing one (done in MULE-10842)   - handle expectedDataType stuff ourselves (in the ExpressionLanguage instead of the ExpressionExecutor) since we have access to the MuleContext and all transformers (done in MULE-10842)",Task,Major,Done,"2016-10-27 14:46:14","2016-10-27 13:46:14",4
Mule,"Operation Exceptions are not being exported.","All declared exceptions in an operation signature must be exported in the extension manifest.    For example having an operation with a signature like this one:      The packages of SalamiException and CustomException must be exported.",Bug,Major,Closed,"2016-10-26 20:49:40","2016-10-26 19:49:40",5
Mule,"ArtifactClassLoaderRunner - Review dependencies to mule-module-service needed by the runner","When service testing support was added to isolated test runner this dependency had to be added to artifacts where the runner is used. This was needed due to the module-service classes are used by the runner to register the services found during classification and class loading creation.    Find a way to improve this either by getting it from the test scope dependency (it comes from runner too) or have a container artifact that declares the basic stuff that the container should have (a new pom).",Task,Minor,New,"2016-10-26 18:29:41","2016-10-26 17:29:41",4
Mule,"Decouple DSL API from spring module","Decouple DSL API from spring module",Task,Critical,Done,"2016-10-25 21:31:38","2016-10-25 20:31:38",8
Mule,"Define Mule exception API","Define Mule exception API.    This is the based exceptions (DefaultMuleException, MuleRuntimeException) and the support for i18n.",Task,Critical,Done,"2016-10-25 21:20:48","2016-10-25 20:20:48",4
Mule,"Make ComponentDefinitionBuildingProviders independent from MuleContext","Removing MuleContext from the API will allow us to do processing of the XML configuration files decoupled from an actual application. This would allow us to provide rules from each external module that can later be used for checking errors at design time and provide a report with the set of errors to tooling.",Bug,Blocker,Closed,"2016-10-25 21:03:16","2016-10-25 20:03:16",4
Mule,"org.mule.runtime.module.repository.internal.RepositorySystemTestCase fails when executed offline","org.mule.runtime.module.repository.internal.RepositorySystemTestCase fails when executed offline. There should be an assumption to check that there is internet conection before executing it",Task,Minor,Done,"2016-10-25 19:20:29","2016-10-25 18:20:29",4
Mule,"Add support for checking Mule's service when installed on Windows","Linux script has support for checking the status of the process, on Windows there is no way to check the status of the service. Tanuki has support for it so it will be nice to include an 'status' command to the bat used on Windows.    https://wrapper.tanukisoftware.com/doc/english/launch-win.html#standalone-status","Enhancement Request",Minor,Closed,"2016-10-25 14:36:51","2016-10-25 13:36:51",1
Mule,"Add support for resolving Metadata Keys to Tooling client","Add support for resolving Metadata Keys to Tooling client",Task,Critical,Done,"2016-10-24 12:55:49","2016-10-24 11:55:49",8
Mule,"Default for JmsConnector.persistentDelivery should be true","When sending a message via    Delivery mode is set to PERSISTENT by default., see  http://docs.oracle.com/javaee/5/api/javax/jms/MessageProducer.html    As mule always uses a method with {{int deliveryMode}} as parameter it should be ensured that default is true.    Request is to change:  org.mule.transport.jms.JmsConnector.persistentDelivery  from    to      _Workaround:_  For each jms connector specify  ",Bug,"To be reviewed",Closed,"2016-10-24 11:38:56","2016-10-24 10:38:56",4
Mule,"Move logic for temporary application deployment from Agent to Mule","Tooling Service in Mule should handle the copy of the appLocation folder to a temporary folder in Mule and the same for an inputStream (with zip content).",Task,"To be reviewed",Done,"2016-10-21 20:47:13","2016-10-21 19:47:13",2
Mule,"Integrate Metadata Services to Tooling REST API","Integrate Metadata Services to REST API.",Task,Critical,Done,"2016-10-21 15:52:01","2016-10-21 14:52:01",8
Mule,"Remove auto-generated REST Client for Tooling Runtime Client","It has limitations, implement it directly instead of auto-generating it from RAML.",Task,Major,Done,"2016-10-21 15:49:58","2016-10-21 14:49:58",0
Mule,"Allow to enable/disable Tooling Runtime REST API verbose by query param","Allow to pass a query param to enable verbose mode so errors and failures will be added to response on Tooling Runtime REST API.",Task,Minor,Done,"2016-10-21 15:48:25","2016-10-21 14:48:25",1
Mule,"Add missing name clashing validators","*Add missing name clashing validators*    * Parameter annotated with {{@Query}}. (This annotated parameters generates child elements so an operation called {{query}} that contains a String parameter called {{query}} will clash and fail in runtime)  * Different POJOs with the same {{@Alias}}   * Maps and Lists with the same wrapper name     ","Enhancement Request",Major,Open,"2016-10-20 23:20:05","2016-10-20 22:20:05",5
Mule,"ArtifactIsolatedClassLoaderBuilder to add URLs to the application classloader","The ArtifactIsolatedClassLoaderBuilder needs to provide a way to add jars to the application classloader (jars not maven coordinates) ","Enhancement Request",Critical,Closed,"2016-10-20 22:28:09","2016-10-20 21:28:09",2
Mule,"Unify coordinate language for ArtifactIsolatedClassLoaderBuilder","The coordinate language should be such as:    If the optionals are not provided they should be assumed.",Task,Major,Done,"2016-10-20 20:26:39","2016-10-20 19:26:39",1
Mule,"ClassNotFound exception is thrown when resolving metadata thought Mule Agent","When resolving the metadata of a component using the Mule Agent with the Tooling API the endpoint throws the following error:           Debugging internally, the ClassLoader that tries to load {{TransactionIsolation}} from DB Connector, is the ClassLoader of the *Agent* which doesn't have access to that class.",Bug,Major,Closed,"2016-10-20 19:22:01","2016-10-20 18:22:01",0
Mule,"Deployment should look for application resources relative to the artifactFolder","When applications are deployed from Tooling Services API the internal implementation of the service delegates the deployment to the deployment module which is not taking into account the artifactFolder to search for the application resources, instead it is using the appName relative to MULE_HOME/apps/$appName    This has to be changed in order to allow Tooling Service API to use deployment service and deploy temporary applications that are not going to be added to the MULE_HOME/apps folder.",Task,Major,Done,"2016-10-20 16:25:04","2016-10-20 15:25:04",1
Mule,"Support native libraries/required dependencies","For extensions like DB or connectors like SAP, PeopleSoft, JDE users need to specify jars/libraries that are required for the connector to work, but cannot be packaged inside of it because of technical or legal restrictions.    We need to define a mechanism to provide this information in the extension model so that tooling can generate a proper UI for it.    As an example of the information we currently support we can check the editors in studio:  *SAP*    *MySQL*    *Oracle*  ","Enhancement Request",Blocker,Closed,"2016-10-20 16:15:17","2016-10-20 15:15:17",13
Mule,"Migrate AsyncProcessingStrategy and AsyncDelegateMessageProcessor to use new Non-Blocking API","Migrate AsyncProcessingStrategy to use new Non-Blocking API.",Task,Critical,Done,"2016-10-20 15:05:08","2016-10-20 14:05:08",8
Mule,"HTTP Extension: Sanity tests Requester ","HTTP Extension: Sanity tests Requester ",Bug,Major,Closed,"2016-10-20 14:43:50","2016-10-20 13:43:50",8
Mule,"Migrate HTTP Module Requester QA tests to HTTP Extension in Mule 4.x","After the inclusion of the Allure framework listener the numberValidator tests are failing ",Task,Critical,Done,"2016-10-20 14:31:29","2016-10-20 13:31:29",8
Mule,"Improve error handling on Tooling Runtime REST API","Improve error handling on REST API to allow understand what went wrong doing tooling operations.  Propagate errors from Mule Tooling Service API throw the REST and also propagate the exception stack trace from   These error handling features should be enabled/disabled through configuration.",Task,Major,Done,"2016-10-19 21:50:46","2016-10-19 20:50:46",2
Mule,"IT tests on Windows environment are failing for Tooling Runtime Client","The way it is implemented to call Tanuki Service Wrapper is considering the application (default) anchor file to check the status of the Mule Runtime process.  This has issues when running the tests on Windows due to raise conditions are happening and the default application gets deleted.  Find a way to improve this logic.",Bug,Critical,Closed,"2016-10-19 21:47:57","2016-10-19 20:47:57",3
Mule,"Rename MetadataTypeUtils to ExtensionMetadataTypeUtils","Rename internal MetadataTypeUtils",Task,Major,Done,"2016-10-19 19:43:42","2016-10-19 18:43:42",1
Mule,"WSC: Add tests for SOAP 12","Currently all tests in the wsc are being executed with a SOAP11 service. We should add tests for SOAP 12 and fix the gaps, if there are any.","Enhancement Request",Critical,Closed,"2016-10-19 00:10:36","2016-10-18 23:10:36",5
Mule,"Remove the old Ws Consumer from mule","Remove The WS Consumer based on the cxf Module  Replace the ws consumer invocations in integration tests with the new SDK based WSC  ",Task,Major,Done,"2016-10-18 22:25:35","2016-10-18 21:25:35",5
Mule,"Add support for building mule-service modules","Add support in mule-extensions-maven-plugin to build services.    Define a mule-service artifact type.","Enhancement Request",Major,Closed,"2016-10-18 18:40:13","2016-10-18 17:40:13",2
Mule,"Model validator does not enforce returning an OperationResult when the OutputResolver specifies an attributes resolver","The following code should fail at compile time since the OutputResolver specifies an attributes resolver, but the return type is not an OperationResult:    ",Bug,Major,Closed,"2016-10-18 15:09:04","2016-10-18 14:09:04",3
Mule,"Re enable dynamic metadata resolution for operation output attributes","re enable the capability to create a dynamic metadata type for the output attributes of an operation.","Enhancement Request",Major,Closed,"2016-10-17 21:46:38","2016-10-17 20:46:38",3
Mule,"Add Allure configuration for the Extensions Tests.","Add Allure configuration for the Extensions Tests.",Task,Major,Done,"2016-10-17 19:15:24","2016-10-17 18:15:24",5
Mule,"SessionHandler picks wrong serializer when connector is on domain","Bug reported on MULE-7990 was re-introduced during the work for MULE-9929.  When the muleContext was removed from the MuleMessage, we lost the ability to change the object serializer that has to be used to deserialize a serialized session.  Problem was not detected as the tests covering this scenario on mule 3.x was deleted from 4.x as part of the original clean up before transports returned back.",Bug,Major,Resolved,"2016-10-17 11:50:32","2016-10-17 10:50:32",2
Mule,"Define an API for a mule plugin from which a DeploymentModel and an ExtensionModel can be generated","Define an API in mule-api that will allow any client generate a Plugin object from which it could, later, generate the DeploymentModel and/or ExtensionModel (see MULE-10250) .    The first implementation of the API must support loading plugins from plain folders (current mule mechanism when working with the classloader) and also from zip files. In a future, we might implement different mechanisms for takin plugins from URLs (as in exchange) allowing us work different.    This API is intended to be used from a variety of clients:   * tooling: Studio, Mozart, Exchange, documentation, etc.  * runtime: classloading module (see org.mule.runtime.module.deployment.internal.plugin.ArtifactPluginDescriptorFactory#create )    The idea is to make it as simple as possible from a consumption POV, so a code like the following should be supported:    ","Enhancement Request",Critical,Closed,"2016-10-16 21:30:09","2016-10-16 20:30:09",16
Mule,"Add soap faults support in the new Web Service Consumer.","Add Soap Faults support when the soap server produces an error.","Enhancement Request",Major,Closed,"2016-10-14 21:11:35","2016-10-14 20:11:35",5
Mule,"Make the Web Service Consumer use the Soap Service","To ease the first stage of development of the new WSC we used a basic http library as underlying transport to send the SOAP Request, we need to use the Http Extension to ensure consistency and give more options to configure. ","Enhancement Request",Major,Closed,"2016-10-14 20:25:54","2016-10-14 19:25:54",13
Mule,"Add output metadata to the new WebService Consumer","We should add output metedata for the response body and headers from attributes of the consume operation.","Enhancement Request",Major,Closed,"2016-10-14 20:14:36","2016-10-14 19:14:36",5
Mule,"Ensure test parity between the old and new Web Service Consumer","Check that all the cases that were tested in the old connector are tested in the new extension.","Enhancement Request",Major,Closed,"2016-10-14 20:10:55","2016-10-14 19:10:55",8
Mule,"Prepare the new WSC for merge.","Prepare the new Web Service Consumer so it can be merged to mule 4.  This consists on:  * Add javadocs  * Prettify code and design.  * Basic runtime working  * Input Metadata working ",Task,Major,Done,"2016-10-14 20:08:04","2016-10-14 19:08:04",8
Mule,"Add Security Strategies to the new WSC","Add different security strategies to the new Web Service Consumer,   UsernameToken, Timestamp and Encryption were supported by the old connector we should at least add those to the new one.","Enhancement Request",Major,Closed,"2016-10-14 20:03:30","2016-10-14 19:03:30",13
Mule,"Add attachment support to the new Web Service Consumer","Add attachment support","Enhancement Request",Major,Closed,"2016-10-14 19:49:50","2016-10-14 18:49:50",8
Mule,"HTTP Extension: Create Test Plan for Listener","HTTP Extension: Create Test Plan",Task,Critical,Done,"2016-09-29 17:03:12","2016-09-29 16:03:12",8
Mule,"Make attributes a TypedValue","Just like the payload, the attributes should be a TypedValue.",Task,Major,Done,"2016-10-13 22:20:39","2016-10-13 21:20:39",4
Mule,"Jaxb unmarshaller doesn't support namespaces anymore","After the security fix for xml factories the parser used by Jaxb stopped supporting namespaces.",Bug,Critical,Closed,"2016-10-13 22:06:43","2016-10-13 21:06:43",3
Mule,"Use a final (non snapshot version) of reactor-core for BETA","We are depending on an SNAPSHOT version for reactor-core, as soon as the 3.0.3 is released we should upgrade our dependency.    ",Task,Blocker,Done,"2016-10-13 21:00:08","2016-10-13 20:00:08",2
Mule,"IndexOutOfBoundsException on ApplicationModel when having an empty flow config","Having a config with a flow without an element:      An IndexOutOfBoundsException is thrown when parsing it.   ",Bug,Major,Closed,"2016-10-13 19:03:44","2016-10-13 18:03:44",1
Mule,"Spike for validating that API policies can be applied to Mule 4","Validate that the defined approach is feasible.",Task,Critical,Done,"2016-10-13 17:17:28","2016-10-13 16:17:28",16
Mule,"Define global bindings","We need to define bindings like app, server, regex, etc.",Task,Critical,Done,"2016-10-13 16:31:04","2016-10-13 15:31:04",8
Mule,"Sanity test of parallel deployment","In 3.9.0, 3.8.2, 3.7.5 we will introduce Parallel deployment which can be activated via a system property and will allow for all applications to be deployed in parallel, instead of sequentially.  Perform a sanity test to ensure the console is behaving correctly when this new feature is enabled, and application statuses are reflected correctly.  To enable the feature, start mule using:  ",Task,Major,Done,"2016-10-13 15:56:19","2016-10-13 14:56:19",8
Mule,"HTTP Service: Create TcpProperties and ProxyConfig builders","Since users of the HTTP service will need to define ProxyConfigs and TcpProperties objects, we need to expose builders of those types. The ProxyConfig one may already be available in the old module (as part of all the exposed builders for requesters and listeners).",Task,Major,Done,"2016-10-13 15:54:26","2016-10-13 14:54:26",4
Mule,"HTTP Service: Move specific dependencies to the service and remove them from the container","Libraries such as AHC and grizzly that are specific for http shouldn't be in the container classloader, but rather on the service's.",Task,"To be reviewed",Done,"2016-10-13 15:47:25","2016-10-13 14:47:25",3
Mule,"HTTP Service: Create request and response builders","We need to provide a way for users to create requests (for the client) and responses (for the listener). This will also include a way to generate HttpEntity objects, considering the multipart one as well.",Task,Major,Done,"2016-10-13 15:28:34","2016-10-13 14:28:34",8
Mule,"HTTP Service: Make Servers aware of its owner","HTTP Servers created with the http service may be shared in an application domain, but an application trying to create a server for a port already used by another app has to fail. It might be better to fail in more elegant way than just an Address already in use.",Task,Blocker,Done,"2016-10-13 15:25:03","2016-10-13 14:25:03",4
Mule,"Migrate HTTP Module Listener QA tests to HTTP Extension in Mule 4.x","Migrate HTTP Module QA tests to HTTP Extension in Mule 4.x",Task,Major,Done,"2016-07-07 15:28:24","2016-07-07 14:28:24",8
Mule,"HTTP Extension: Review Jiras of the HTTP Module/Transport to incorporate scenarios in the Testplan","Review Jiras of the HTTP Module/Transport to incorporate scenarios in the Testplan",Task,Major,New,"2016-10-13 14:25:31","2016-10-13 13:25:31",2
Mule,"Spike JMS Extension migration","Spike JMS Extension migration:    - Find gaps in spec vs transport  - Iteration one of configs and connections","Enhancement Request",Critical,Closed,"2016-10-13 14:07:10","2016-10-13 13:07:10",13
Mule,"Remove VoidMuleEvent","Remove VoidMuleEvent, instead return same event.",Task,Critical,Done,"2016-10-13 09:10:11","2016-10-13 08:10:11",8
Mule,"SDK: Inconsistent behavior when injecting a tlsContext in a pojo","Take *ClientCredentialsFullConfigTestCase* in branch *oauth-ext*.    The *nested* case works correctly, since the inline definition of the tlsContextFactory is properly injected into the pojo *ClientCredentialsGrantType*.    However, on the *global* case, the name is never resolved and the tlsContextFactory remains null.",Bug,Major,Closed,"2016-10-12 23:51:49","2016-10-12 22:51:49",5
Mule,"HTTP Extension: when the requester and the listener use different protocols it gives a timeout","When the requester tls conf uses  TLSv1.2 and the listener TLS conf uses TLSv1.1 it throws timeout. If you invert the versions it works fine.    You can check it in the test HttpRestrictedCiphersAndProtocolsTestCase#failsWithProtocolMismatch on the Branch MULE-10752    After the fix is done, please remove the ignore from the test HttpTlsContextCustomProtocolsTestCase#testGlobalTlsContextCustomProtocolsRestrictive which is failing from the same issue.",Bug,Minor,Resolved,"2016-10-12 22:53:20","2016-10-12 21:53:20",8
Mule,"Complete support for locating a component in the configuration by path and name","Complete support for locating a component in the configuration by path and name.",Task,Minor,Done,"2016-10-12 22:06:29","2016-10-12 21:06:29",8
Mule,"Basic support for locating a component in the configuration by path and name","Basic support for locating a component in the configuration by path and name",Task,Major,Done,"2016-10-12 22:05:31","2016-10-12 21:05:31",3
Mule,"Define mechanism to allow reuse of streams if they get consumed by dataweave.","Define mechanism to allow reuse of streams if they get consumed by dataweave.",Task,Critical,Done,"2016-10-12 21:49:21","2016-10-12 20:49:21",8
Mule,"Define mechanism to provide configuration for readers in dataweave","We need to define a mechanism to configure readers in dataweave, for instance, a CSV readers needs to be configured with the field separator, or an XML reader needs to resolve what to return for an empty node, like a null or empty string.    There are two possible options so far:   - Define this properties in the mapping   - Define this properties when defining the data type    ",Task,Critical,Done,"2016-10-12 21:47:58","2016-10-12 20:47:58",5
Mule,"Move CXF module to the compatibility module","Remove the cxf module from the container.    Review how the dependency of cxf on the http extension is declared.",Task,Major,Done,"2016-10-12 21:32:07","2016-10-12 20:32:07",4
Mule,"Remove WS consumer module","Remove the module.",Task,Major,Done,"2016-10-12 21:31:01","2016-10-12 20:31:01",1
Mule,"HTTP Extension: Migrate TLS Tests","Migrate TLS Tests from 3.x system tests and incorporate them in Mule4 HTTPs.",Task,Critical,Done,"2016-09-29 17:16:41","2016-09-29 16:16:41",5
Mule,"Define a way to do expression semantic validation","Right now we only have syntactic validation in place. In order to have semantic as well we'll need a way to share the typing of variable/functions with the expression executor.",Task,Critical,New,"2016-10-11 15:34:37","2016-10-11 14:34:37",16
Mule,"Remove ReplyToHandler and associated code","ReplyToHandler is technically only used by transports, so it may be possible to move to compatibility module. That said, given it's relationship to Event, this might not be possible at this stage. Take a look and see if it's possible, and what the effort it and move it if feasible with minimal effort.    For now, the only place where it's method is called is TemplateOnErrorHandler. There a ReplyToPropertyRequestReplyReplier is used to route the message to the ReplyToHandler.",Task,Minor,Done,"2016-10-11 10:10:20","2016-10-11 09:10:20",4
Mule,"ArtifactClassLoaderRunner - Automatically generate plugin.properties for compatibility libs","Currently, for the proper running of the compatibility tests in an isolated manner, each library that has integration tests has its own plugin.properties to be taken into account when building the classloaders. This causes the same information to be repeated among different libraries.    It would be better if those files could be automatically generated, maybe by aggregating the mule-module.properties of the compile dependencies. This would also be useful for automatically generating the mule-module.properties of the compatibility plugin.","Enhancement Request",Major,Closed,"2016-10-08 14:15:58","2016-10-08 13:15:58",8
Mule,"Model validator not complaining for missing output resolver when returning a List<Map<String,Obkect>","When writing an extension with metadata, if the operation returns a Map<String,Object> and there is not OutputResolver, a model validator fails and shows an error, but if the return type is a List<Map<String,Object>> the validation doesn't fail    *Invalid code*      The example above fails with the error:  {code}  org.mule.runtime.extension.api.exception.IllegalModelDefinitionException: createEntity 'Metadata' specifies 'java.util.Map' as a return type. Operations and Sources with return type such as Object or Map must have defined a not null OutputTypeResolver    org.mule.runtime.core.api.MuleRuntimeException: org.mule.runtime.extension.api.exception.IllegalModelDefinitionException: createEntity 'Metadata' specifies 'java.util.Map' as a return type. Operations and Sources with return type such as Object or Map must have defined a not null OutputTypeResolver     at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:946)  {code}    After adding the @OutputResolver to the create entity, the compilation doesn't fail, but it should fail for the createBulk  *Invalid code that doesn't fail*  {code:java}  public class BasicOperations  {      @OutputResolver(TestInputAndOutputResolverWithKeyResolver.class)      public Map<String, Object> createEntity(@Connection MetadataConnection connection, @MetadataKeyId String type,                                              @Content @TypeResolver(TestInputAndOutputResolverWithKeyResolver.class) Map<String, Object> dynamicObject);       public List<Map<String, Object>> createBulk(@Connection MetadataConnection connection,  @MetadataKeyId String type,                               @Content @TypeResolver(TestInputAndOutputResolverWithKeyResolver.class) List<Map<String, Object>> dynamicObjects);  {code}",Bug,Blocker,Closed,"2016-10-07 22:34:37","2016-10-07 21:34:37",5
Mule,"ArtifactClassLoaderRunner - Does not work when using Allure","Cannot run isolated tests when enabling Allure.  Also the following error messages are logged:  ",Bug,Major,Closed,"2016-10-07 20:29:41","2016-10-07 19:29:41",0
Mule,"Event.Builder.variables does not clear previous values","In the interface   org.mule.runtime.core.api.Event.Builder we are needing a method to clear properties and variables.     The use case is as follows:  I have an Event completely defined and I want a copy of it BUT with no flow variables.    Currently there is no way to clean only the variables of the event. ","Enhancement Request",Major,Closed,"2016-10-07 20:28:24","2016-10-07 19:28:24",1
Mule,"on-error-continue by default should not print the exception","Usually when you want to go on with the execution you don't care about the error.","Enhancement Request",Minor,Closed,"2016-10-07 19:37:59","2016-10-07 18:37:59",1
Mule,"Update LICENSE.txt to fix year and url for third-party software used by Mule","The LICENSE.txt files refers to year 2016.    For example Copyright (c) 2003-2016 in LICENSE.txt in the root path of the mule repository.    Also the URL referencing the information on the license type for each third-party software product used by Mule is pointing to an old link. The correct one now is https://docs.mulesoft.com/mule-user-guide/v/3.8/third-party-software-in-mule",Task,Trivial,New,"2016-10-07 02:23:14","2016-10-07 01:23:14",0
Mule,"com.ning.http.client.ws packaged is not exported in HTTP module","The HTTP module exports various packages from async-http-client but not com.ning.http.client.ws which causes classloading issues for plugins using it such as the Mule Agent.",Bug,Minor,Closed,"2016-10-06 20:29:01","2016-10-06 19:29:01",1
Mule,"Not Handling FTP Connection Errors in FTPMessageReceiver","While retrieving information from the FTP server, if a null line is read (check SE-4039) it is thrown a FTPConnectionClosedException, which is not handled as a (mule) ConnectException in the AbstractSystemExceptionStrategy.   ",Bug,Major,Resolved,"2016-10-06 20:00:51","2016-10-06 19:00:51",0
Mule,"xml-to-dom-transformer default returnType should be org.w3c.dom.Document instead of byte[]","The class  has no constructor and hence its inherited field returnType is set by its parent class,  which is .  ",Bug,Minor,Closed,"2016-10-06 19:07:44","2016-10-06 18:07:44",0
Mule,"Enrich HttpClient exception to include request URI","When the requester fails sending a request, the only message is that it failed, there's no reference to the actual request that failed. This is a debugging pain since the requester is very dynamic and the actual request can vary and change completely, making it hard to pinpoint exactly which one failed.","Enhancement Request",Minor,Closed,"2016-10-06 17:20:28","2016-10-06 16:20:28",3
Mule,"Add a MuleArtifactFunctionalTestCase exclusions for EE artifacts","MuleArtifactFunctionalTestCase included in CE provides a list of exclusions that must be applied when defining the container classloader.  As EE uses a different set of group Ids on the artifacts those artifacts must be added to the exclusion list  ",Task,Minor,Done,"2016-10-04 19:16:23","2016-10-04 18:16:23",0
Mule,"Remove loader.override references","Loader override is not used anymore. Remove references to it",Task,Trivial,Done,"2016-10-05 23:19:10","2016-10-05 22:19:10",0
Mule,"Include body in request/response builder with payload as default","We need to include the body in the HTTP builders so that it can be parameterised without first modifying the Message.",Task,Critical,Done,"2016-10-05 16:51:07","2016-10-05 15:51:07",2
Mule,"Use custom factory builder for XML parsers to avoid vulnerabilities","Use custom factory builder for XML parsers to avoid vulnerabilities","Enhancement Request",Critical,Resolved,"2016-10-04 23:22:59","2016-10-04 22:22:59",0
Mule,"Improve MetadataResults propagation in Metadata Service ","Currently, the MetadataManager exposes an structure where each MetadataDescriptor is contained inside a MetadataResult.    Navigating through this elements is cumbersome and not clear for the user, since in the serialization we provide a flattened view.   We should simplify this error communication mechanism","Enhancement Request",Blocker,Closed,"2016-10-04 20:58:01","2016-10-04 19:58:01",8
Mule,"ArtifactClassLoaderRunner - Improve  classification for excluded artifacts","When a test is configured with the ArtifactClassLoaderRunnerConfig annotation and defines test exclusions, the ArtifactClassLoaderRunner uses those exclusions to ensure that the excluded artifacts are not included in the application classloader.  However, when those artifacts are not included as provided on the test's maven pom, then they won't be included in the container classloader.  At least, there should be a check to ensure that those dependencies are manually included by the user.","Enhancement Request",Major,Open,"2016-10-04 19:20:39","2016-10-04 18:20:39",4
Mule,"Foreach should support arrays","{{foreach}} should work when receiving an array.","Enhancement Request","To be reviewed",Closed,"2016-10-04 16:16:28","2016-10-04 15:16:28",4
Mule,"Improve HttpRequestAttributes builder to accept nothing/old attributes","The HttpRequestAttributes should have a builder to accept old attributes or nothing. Nowadays the constructor receives all the attributes and it is not very helpful:  ","Enhancement Request",Major,Closed,"2016-10-03 19:34:57","2016-10-03 18:34:57",2
Mule,"Extensions modules take a long time to build","Take for instance the http extension. When building that module on my local machine it takes around 3 minutes. After seeing the output log:        2 things can be observed  * The phases between lines 100964 and 179075 run 2 times, doubling the bulk of the work being done  * The phase process-classes which runs the ExtensionResourcesGeneratorAnnotationProcessor takes around xxx seconds. After profiling that code, i saw that in this case it is scanning the classpath looking for extensions 3 times (see ClasspathBasedDslContext#findExtensionsInClasspath()).    Bases on that observations, the build time for that module could be reduce by 1/6, going from 3 mins to around 30 secs.","Enhancement Request",Critical,Closed,"2016-10-03 18:30:03","2016-10-03 17:30:03",5
Mule,"Improve exception messages when classes are not found in RegionClassLoader","RegionClassLoader doesn't provide enough information for troubleshooting a   ClassNotFound exception.",Task,Major,Done,"2016-10-03 17:34:51","2016-10-03 16:34:51",1
Mule,"Some TypeAnnotations doesn't override equals() and hashCode() methods","*TypeAnnotations doesn't override equals() and hashCode() methods*    The {{TypeAnnotations}}:   * FlattenedTypeAnnotation  * TextTypeAnnotation    Doesn't override the *equals()* and *hashCode()* methods, this produce that equals {{MetadataTypes}} are considered different.",Bug,Critical,Closed,"2016-10-03 15:31:58","2016-10-03 14:31:58",0
Mule,"Allow plugins/extensions to include spring components","Currenty, all spring classes are loaded from the container classloader.    Certain extensions or plugins may want to include their own spring components (for instance, spring-jms in the jms extension or the compatibility module plugin).    Currently, all org.springframework.* classes are loaded from the container classloader, which prevents the intended usage.","Enhancement Request",Minor,Closed,"2016-10-01 14:16:39","2016-10-01 13:16:39",3
Mule,"Disable entity expansion when processing XML to avoid DoS","In the jersey module it's possible to trigger a DoS by submitting an XML Billion Laughs attack.",Bug,Blocker,Resolved,"2016-09-30 23:07:57","2016-09-30 22:07:57",0
Mule,"TestRunner fetches spring annotated classes when looking for Extensions","ExtensionPluginMetadataGenerator calls  on method scanForExtensionAnnotatedClasses().    The true parameter means that it will look for spring specific annotations that not only are not needed but may cause the calling method to return unwanted classes, causing failures.",Bug,Major,Closed,"2016-09-30 22:08:55","2016-09-30 21:08:55",1
Mule,"Make DataSense tooling service consistent with the test connectivity one","The current Metadata Service has consistency and conceptual problems. Problems are that:    * It requires a deployed app  * It requires providing the coordinates to an actual message processor  * It requires providing the metadata key, which is not only already present on the message processor, there's also not guaranteeing that the key supplied in the XML matches that on the API invocation.    We should move to a model similar to that of the connectivity testing service which:    * Can obtain metadata for a particular MP on a deployed app (using the key already configured in that MP)  * Allows pushing an entire config, deduces a minimal app, deploys it as a temporal artifact, extracts the data, disposes the temporal artifact. (This should be done reusing as much logic as possible from the connectivity testing service)","Enhancement Request",Blocker,Closed,"2016-09-30 21:44:49","2016-09-30 20:44:49",13
Mule,"Replace NullType with VoidType in places which makes sense","Right now we use NullType to represent Void, although NullType is intended to be used as an actual null.    Find those places and replace them with a VoidType","Enhancement Request",Major,Closed,"2016-09-30 21:32:37","2016-09-30 20:32:37",8
Mule,"Replace Describer with extension loader concept","Replace the concept of extension describer with that of ExtensionModelLoader.","Enhancement Request",Blocker,Closed,"2016-09-30 21:28:32","2016-09-30 20:28:32",13
Mule,"Email: Support deleteAfterRetrieve in the imap list operation","Add a boolean parameter to the list operation of the imap protocol, so when all the emails are retrieved are also deleted.","Enhancement Request",Major,Closed,"2016-09-30 20:33:59","2016-09-30 19:33:59",2
Mule,"schedulers module shouldn't export c3p0","The schedulers module is currently exporting c3p0. This is not only conceptually wrong, it also generates leaks when the DB connector (which internally also uses c3p0) tries to dispose pooled datasources.",Bug,Critical,Closed,"2016-09-30 20:16:11","2016-09-30 19:16:11",3
Mule,"Lazy Artifact Context should not create the components on initialise","Before connectityTesting can occur an Application has to created and initialised.  The LazyMuleArtifactContext should not initialize all the components present in ApplicationModel as they will be initialized and started while doing connectityTesting or metadata resolution.",Task,Major,Done,"2016-09-29 20:42:54","2016-09-29 19:42:54",16
Mule,"Fix parameters ordering in new Email connector","Fix ordering:    * Connection configuration information needs to be always on top  * User/password always grouped together.  * Host/port always grouped together.  * Other stuff you can identify and improve",Bug,Major,Closed,"2016-09-29 17:06:55","2016-09-29 16:06:55",2
Mule,"Improve field ordering in new Http connector"," Fix ordering:    * Connection configuration information needs to be always on top.   * User/password always grouped together.  * Host/port always grouped together.   * Other stuff you can see","Enhancement Request",Major,Closed,"2016-09-29 16:40:00","2016-09-29 15:40:00",3
Mule,"Remove host/port from HTTP overrides","will be replaced with expressions in <config> element",Task,"To be reviewed",Done,"2016-09-29 16:38:02","2016-09-29 15:38:02",3
Mule,"ArtifactClassLoaderRunner - URLClassLoaders are created for classification process, these CLs have to be closed","Close URLClassLoaders used for searching resources and other stuff while creating the ArtifactClassLoader for tests.",Task,Minor,Done,"2016-09-29 16:12:40","2016-09-29 15:12:40",1
Mule,"Transports - Make tests run isolated","MULE-10301 has added support for testing transports that will go to compatibility plugin. As part of MULE-10628 these transports artifacts were migrated to use isolated test runner but the plugin.properties had to be copied to these artifacts.  Clean up these plugin.properties to only export what is needed.",Task,Major,Done,"2016-09-29 15:44:24","2016-09-29 14:44:24",8
Mule,"Cleanup MessageProcessorChains to ensure consistency of injection and lifecycle","Cleanup MessageProcessorChains to ensure consistency of injection and lifecycle","Enhancement Request",Critical,Closed,"2016-09-29 11:31:44","2016-09-29 10:31:44",8
Mule,"Model Validator should not complain if the singularized name clashes with another parameter name, when the generic of the list is of the same as the parameter type","It is a very common case that you can have operations for a single entity or multiple entities in the same connector.      Right now we are failing at compile time with the error:      Expected: The compilation should pass    Also, we should not mention internal implementations like ImmutableRuntimeOperationModel when reporting errors to the users",Bug,Critical,Closed,"2016-09-29 08:42:02","2016-09-29 07:42:02",5
Mule,"ArtifactClassLoaderRunner - Add support for running isolated functional test cases on Mule Modules","Currently we support PLUGIN and APPLICATION while classifying the rootArtifact, it should also be supported MODULE.  This means that the target/classes for the rootArtifact should not go to a plugin classification neither to application classification, it should go to container classification urls.",Task,Major,Done,"2016-09-28 16:03:34","2016-09-28 15:03:34",1
Mule,"Remove HTTP module","The current module needs to be replaced by the extension. This means moving all common classes to the extension.",Task,Blocker,Done,"2016-09-28 13:35:00","2016-09-28 12:35:00",4
Mule,"StackOverflow error while compiling extension with recursive pojos","Compilation of an extension fails with StackOverflow when using as parameter of an operation a structure like the following:      Same happens if we use maps:  ",Bug,Blocker,Closed,"2016-09-28 09:35:17","2016-09-28 08:35:17",3
Mule,"Refactor GrizzlyHttpClient to use BodyDeferringAsyncHandler","As it turns out, the standard implementation of AsyncHandler which we are using saves the entire response to memory (see com.ning.http.client.AsyncCompletionHandler#onBodyPartReceived and its uses in GrizzlyHttpClient). This is a problem as there is no actual streaming and can cause an OOM when the response is large. It seems that in order to allow an InputStream to be used as payload and the data provided as the body parts arrive to be streamed down to other components reading it, we need to use a com.ning.http.client.BodyDeferringAsyncHandler providing it with a PipedOutputStream. Then the payload can be a PipedInputStream using that one. Special care should be taken since those two should write/read in different threads and the solution should be applied to both the blocking and non-blocking send.  Notice that when dealing with multipart or form url encoded data, reading the whole message is necessary (an InputStream should not be propagated). ",Task,Critical,Done,"2016-09-27 20:39:09","2016-09-27 19:39:09",8
Mule,"ResourceBundle class loader leak when undeploying application","https://docs.oracle.com/javase/6/docs/api/java/util/ResourceBundle.html#clearCache(java.lang.ClassLoader)   should be called as part of DefaultResourceReleaser process for releasing resources for an Application/Domain ClassLoader.    This will prevent ClassLoader leaks when undeploying applications/domains.    Also ResourceBundle leaves a reference to the class loader if a non existent bundle was obtained just right before the dispose is made this reference should be nulled too.",Task,Major,Done,"2016-09-27 16:22:11","2016-09-27 15:22:11",0
Mule,"Application name should appear in application undeployment message","When I undeploy an application the message printed in the log doesn't mention the application name but an hexadecimal number, like this:        To reproduce undeploy any application by deleting its anchor file.",Bug,Minor,Closed,"2016-09-27 04:09:17","2016-09-27 03:09:17",1
Mule,"Allow declaration of MetadataResolver at parameter level","Currently we support only to resolve Dynamic MetadataType for the Content parameter.  In order to have dynamic type inference for other parameters, regardless whether or not the parameter is the Content of the operation, we'll have to support the declaration of MetadataResolvers at parameter level.    ","Enhancement Request",Critical,Closed,"2016-09-26 22:13:33","2016-09-26 21:13:33",8
Mule,"Remove lib/shared folder from distributions","Old mule 3.x used lib/shared folder to share libraries across different applications. That concept was replaced with the concept of domains and this folder deprecated. Now is time to remote it from the distro.",Task,Minor,Done,"2016-09-26 20:12:09","2016-09-26 19:12:09",1
Mule,"Remove references to per-app distribution folder ","Per-app folder was used on mule-3.x branches to place modules that had dependencies on third party libraries that were not part of mule distribution (like WMQ client).  This folder is not used anymore on Mule 4 as this kind of functionality will be provided by artifact plugins which will have access to app's shared libraries",Task,Minor,Done,"2016-09-26 19:34:03","2016-09-26 18:34:03",1
Mule,"Improve extension model serialization tests","Improve extension model serialization tests in order to cover a more comprehensive and complex use cases.",Task,Minor,Done,"2016-09-26 18:37:55","2016-09-26 17:37:55",5
Mule,"Most externalizable model properties should be actual part of the ExtensionModel","The extension model needs to be more prescriptive and be more front center with the stuff it has. ModelProperties should be all non externalizable and used for runtime implementation things only. All data model properties should be incorporated into the mainstream model.  The only currently identified exception are the DataSense ones","Enhancement Request",Blocker,Closed,"2016-09-26 18:30:47","2016-09-26 17:30:47",13
Mule,"Support SDK extensions on domains","Currently, it is not supported to define a config of an SDK based extensions on a domain. It should be","Enhancement Request",Critical,Resolved,"2016-09-26 17:26:28","2016-09-26 16:26:28",13
Mule,"Error handling locator API should work with Throwable","Right now, all of our error handling locating logic works considering Exception. The problem there is that a) we are leaving out a part of the Java error hierarchy and b) we are casting to Exception in several places which could cause trouble.   We should use the more general Throwable, avoid the casts and add a proper type for things in Java under Error (IMO we should have a separate hierarchy from ANY so that those are not handled, though we need to be careful since some modules might need to handle things under Error).",Bug,Critical,Closed,"2016-09-26 15:02:15","2016-09-26 14:02:15",5
Mule,"Review HTTP extension exported packages","Currently, the http extension is not exporting some classes that are needed by its users, and some are even in an 'internal' package.",Task,Blocker,Done,"2016-09-26 14:08:20","2016-09-26 13:08:20",5
Mule,"Configurations are not registered in the XSD with their hyphenated name","*Configurations are not registered in the XSD with their hyphenated name*    For example we have a configuration like:        In the XSD the configuration element will be registered as {{ConfigOne}}, but the ExtensionDefinitionParser will try to load it as {{config-one}}.  As consequence everything fails.",Bug,Major,Closed,"2016-09-23 18:23:18","2016-09-23 17:23:18",1
Mule,"Extension model JSON inside a package is not a valid JSON","When building [this sample extension|https://github.com/fbarrios/hello-world-connector-4.x/commit/6a5d018cf9d861db48d86b635ac047394f0b21d8], the generated JSON is not well formed, as it has duplicated the version key:    ",Bug,Major,Closed,"2016-09-22 20:13:13","2016-09-22 19:13:13",1
Mule,"Envelope namespace used in body produces broken xml when getting the body","When the body is extracted, it has the soapenv prefix but it lacks the namespace declaration for that prefix.",Bug,Major,Closed,"2016-09-22 18:41:20","2016-09-22 17:41:20",0
Mule,"FilteringArtifactClassLoader is not being used by RegionClassLoader when loading classes and resources instead it uses the ArtifactClassLoader","As part of the introduction of the RegionClassLoader when an ArtifactClassLoader is added to the region with the passed filter a new FilteringArtifactClassLoader is created but not later used to resolve classes and resources.",Bug,Major,Closed,"2016-09-22 18:22:46","2016-09-22 17:22:46",2
Mule,"Migrate Error Handling API to use Non-Blocking API","Migrate Error Handling API to use Non-Blocking API",Task,Critical,Done,"2016-09-22 17:21:00","2016-09-22 16:21:00",4
Mule,"Define requester behaviour when outputType doesn't match actual type","Right now, the outputType parameter is ignored by the request operation and t's only there for design time metadata definition. However, since the request operation will generate a certain output type we need to decide how to act when it does not match the user define one.   For example, if the user indicated that the request would produce a MultiPartPayload type but then a form url encoded response is received and a Map type returned, should we log a warning or should we fail entirely?",Task,Minor,Done,"2016-09-22 15:36:07","2016-09-22 14:36:07",1
Mule,"Upgrade JAXB to 2.1.17","Upgrade JAXB to 2.1.17",Task,Critical,Done,"2016-09-21 23:24:23","2016-09-21 22:24:23",0
Mule,"ParameterResolver should be usable on a config or connection provider","Right now the ParameterResolver is usable from an operation because we create a new instance per execution and we wrap the event.    There's also the need to be able to use it from configurations and connection providers. This means that the event needs to be communicated somehow else.    REQUIREMENTS:    * Enable the aforementioned  * Allow for those config/providers to use this with XML supported complex types (the DSL shouldn't be different if a ParameterResolver or a straight up value is used)  * Create a minimal facade to communicate the event. Something like:        Where Context is an initially empty interface which we can downcast to an internal implementation which holds the event. This context is to be obtained as an operation parameter:        DESIGN TASKS:    * Come out with a good name for the Context thing. I lean towards OperationContext or ExecutionContext, but both names are taken. Come out with a third viable option or rename OperationContext to something else.  * For the currently supported cases of operations which receive a ParameterResolver we need to either split the ParameterResolver interface in two (one which resolve() method is argless and one which receives the context), or make the context always required and force the operations to also receive the Context.  ","Enhancement Request",Critical,Closed,"2016-09-21 21:22:47","2016-09-21 20:22:47",8
Mule,"Remove support for literal expressions","Remove such support since it's not needed anymore",Task,Major,Done,"2016-09-21 17:29:02","2016-09-21 16:29:02",0
Mule,"HttpListener: add method to find the status of the listener","So far there isn't any way to find out the status of the listener and the its initial status.  The Runtime Manager team is working on the management of flows and endpoints. We need to have the status of Http Listener to be able to manage it (start/stop)    Note that with the Http endpoint is was possible to know its status.    This should be included in mule 3.x and 4.x    ","Enhancement Request",Major,Closed,"2016-09-21 16:07:45","2016-09-21 15:07:45",2
Mule,"Extension's API POJOs should have a getter method for each @Parameter field","*Extension's API POJOs should have a getter for each @Parameter field*    * To be fully with compliant with DataWeave all the POJOs that an Extension expose _(operation parameter, operation return type, etc)_ should have a getter method for each {{@Parameter}} field.  * The fundaments for this new requirement are:  ** DW detects public attributes thought getter methods. This enables auto transformation.   If the POJO attributes are found by looking all the fields there is no way to detect when a field is an {{@Parameter}} (an be exposed) or not.  ** Does not exist any case where a *public* POJO have an attribute exposed by a {{@Parameter}} but doesn't have a *getter* to be able to access to the field value.    *Action* : Validate that the extension API POJOs have a getter for every {{@Parameter}} field.   _(Configurations, ConnProviders, Sources don't enter in this validation)_","Enhancement Request",Critical,Closed,"2016-09-20 22:07:36","2016-09-20 21:07:36",3
Mule,"ArtifactClassLoaderRunner - AutoDiscoverWorkspaceLocationResolver when discovering reactor should also include pom packaging types no matter if they are not included in classpath","The current implementation of AutoDiscoverWorkspaceLocationResolver bases the resolution on classpath entries, either Maven or IDEs will not include in classpath artifacts packaged as pom, so when running from Maven it has to run a  to find these artifacts in local Maven repository.    For instance, integration tests fail due to all-modules cannot be found:      It would be great to find a way to resolve this as workspace references too.","Enhancement Request","To be reviewed",Open,"2016-09-20 17:27:56","2016-09-20 16:27:56",8
Mule,"Parameter Model should include groups and exclusive optionals information","*Model property for ExclusiveOptionals parameter groups should be externalizable*    * Nowadays the information about {{@ExclusiveOptional}} parameter groups are stored in the *no externalizable* {{ParameterGroupModelProperty}}. This makes imposible for UI generators (Mozart/Studio) know when to generate the proper support.  * Make the actual {{ParameterGroupModelProperty}} externalizable is not a good option due that it will expose a lot of java relationship between java objects that doesn't make sense.  * *Possible Solutions*:   ** Create a new externalizable model property to expose the information about {{@ExclusiveOptional}} parameter groups.  ** Create a custom serializer for the {{ParameterGroupModelProperty}} to just expose the needed information.",Bug,Critical,Closed,"2016-09-20 15:29:29","2016-09-20 14:29:29",8
Mule,"System Tests Debugging","Using a property we should activate debug mode in Mule server used in system tests.",Task,Major,Done,"2016-09-01 16:02:38","2016-09-01 15:02:38",3
Mule,"Upgrade CXF to latest 2.7.x patch release","Upgrade to a version that includes the fix for https://issues.apache.org/jira/browse/CXF-7058",Task,"To be reviewed",Done,"2016-09-19 20:30:38","2016-09-19 19:30:38",1
Mule,"Upgrade XStream to Version 1.4.9 ","Upgrade XStream to version 1.4.9  ",Task,Blocker,Done,"2016-09-19 20:29:02","2016-09-19 19:29:02",1
Mule,"Release extensions parent POM 4.0-M3","Release Extensions Parent POM 4.0-M3",Task,Major,Done,"2016-09-19 17:27:43","2016-09-19 16:27:43",0
Mule,"Generic types are not being exported in the extension manifest. ","When having an operation that contains a generic type with generic types as output of an operation, the package of those generics is not being added to the  exported types in the extension.manifest    for example in the email:list operation.        In this case the POP3Attributes package is not being exported.",Bug,Major,Closed,"2016-09-19 16:27:08","2016-09-19 15:27:08",5
Mule,"App with missing config fails to deploy but has status created","Even though deployment fails, the application status is created so the Anypoint platform proxy interface reports it as starting (which of course never finishes).",Bug,Major,Resolved,"2016-09-19 16:12:47","2016-09-19 15:12:47",0
Mule,"ArtifactClassLoaderRunner - Improve error message for dependencies not declared as expeted","When checking for dependencies declared by the rootArtifact an exception could be thrown if they are not with the correct scope.  At the same time IDEA sometimes breaks the classpath and points to another target/classes (even compile the classes there) so it would be great to add to these kind of errors the rootArtifact coordinates.",Task,Minor,Done,"2016-09-19 16:03:44","2016-09-19 15:03:44",1
Mule,"Email: delete the delete IMAP protocol operation.","In the primary structure of the new email connector the delete operation had a lot of sense, but when the operation moved to be only for the IMAP protocol, since POP3 does not support email fetching by id, this is an overkill because IMAP has the capability to mark the emails as deleted and then physically eliminate them from the folder with the expunge operation.","Enhancement Request",Major,Closed,"2016-09-19 15:57:24","2016-09-19 14:57:24",1
Mule,"Review/Migrate usages of ThreadingProfile","Move ThreadingProfile to transport-core",Task,Major,Done,"2016-09-16 23:31:11","2016-09-16 22:31:11",4
Mule,"Make the container ThreadPools configurable","Based on current definition of ThreadingProfile.    Allow functions of the processors and memory for this (available memory makes sense for the max size of the io pool).",Task,Major,Done,"2016-09-16 23:26:35","2016-09-16 22:26:35",8
Mule,"Review MetadataService serialization API","MetadataService interface is exposing more behaviour than it should be.        We need to handle the serialization for the different type of MetadataResult internally and not expose it in the API. Having only one method for obtaining the serialized string from the MetadataResult would be  away to go. ",Task,Major,Done,"2016-09-16 21:46:21","2016-09-16 20:46:21",5
Mule,"NPE when an operation throws exception inside a foreach","When an extension operation is used inside a foreach and this one throws an exception the foreach component throws an NPE.     Stack Trace is:  ",Bug,Major,Closed,"2016-09-16 20:35:40","2016-09-16 19:35:40",8
Mule,"Operation reconnection should be decoupled from config reconnection","Right now, when an operation fails due to connectivity, it attempts to reconnect using the same retry policy from the config.    This is bad mainly because the retry policy for an operation should not allow blocking=false.    Additionally, it is highly likely that the amount of retries, frequency and exhaustion policy that you want for reconnecting at deploy time are not the same ones as when you're executing an operation, since the operation will block while reconnecting.    We should define a way to configure these two reconnection moments separately.","Enhancement Request",Blocker,Resolved,"2016-09-16 17:59:42","2016-09-16 16:59:42",8
Mule,"Centralize and APIfy reconnection","Right now, each time a component throws a connection exception it attempts to reconnect. However, if multiple of those are thrown concurrently by different components, many reconnections will be attempted concurrently.    Connections for a given config should happen in a thread safe manner, and many components shouldn't attempt to reconnect at the same time.    Also, if a source looses connectivity, it should be stopped until the connection is regained. When it does, the source should be notified of it so that it can resume. This should actually be the case with any component, but sources are particularly tricky so watch out.","Enhancement Request",Blocker,Resolved,"2016-09-16 17:53:38","2016-09-16 16:53:38",8
Mule,"Exception thrown form a Work#run() is ignored by the WorkManager","When the #run method of a Work throws an exception, it is ignored by the WorkContext. It must be logged at the very least.",Bug,Critical,Closed,"2016-09-16 15:48:10","2016-09-16 14:48:10",0
Mule,"Create serializer for the entity metadata ","Create serializer in extension-api to be used by the agent.",Task,Major,Done,"2016-09-15 22:54:04","2016-09-15 21:54:04",0
Mule,"Add model validator for parameters that have the same name as then entries of a map","*Add model validator for parameters that have the same name as then entries of a map*  Exist a border case where a parameter is called exactly as the entry of a map, for example:  {code}  public void processDoor(Door door, @Optional Map<String, Door> doors) {}{code}  The SDK when generates the XSD representation of the {{doors}} parameter will generate an element called {{door}} the same name of the parameter {{Door door}}:  {code:xml}<flow name=pojoIsUsedInMapAndAlone>         <subtypes:process-door>             <subtypes:door>                 <subtypes:house-door isLocked=false/>             </subtypes:door>             <subtypes:doors>                 <subtypes:doorkey=leftDoor>                     <subtypes:car-door handle=left/>                 </subtypes:door>                 <subtypes:doorkey=rightDoor>                     <subtypes:car-door handle=right/>                 </subtypes:door>             </subtypes:doors>         </subtypes:process-door>     </flow>{code}  This will generate a clashing between the resolvers and finally having troubles in runtime.  Other cases to validate: * Same name of top level elements and operations  Add a validation to prevent this case.","Enhancement Request",Major,Closed,"2016-09-15 21:54:41","2016-09-15 20:54:41",3
Mule,"ArtifactClassLoaderRunner - Compatibility doesn’t install/deploy mule-plugin classifier jar","It is missed the maven-jar-plugin declaration to add the jar classified.",Task,Major,Done,"2016-09-15 18:25:56","2016-09-15 17:25:56",1
Mule,"ArtifactClassLoaderRunner - TestContainerClassLoaderFactory is not using the ModuleDiscoverer with the list of only URLs for Container","This ends up in a duplicated module error when container loads Mule Modules.",Task,Major,Done,"2016-09-15 18:24:41","2016-09-15 17:24:41",2
Mule,"Create tooling client to communicate to the mule runtime services","Create tooling client to communicate to the mule runtime services",Task,Critical,Done,"2016-09-15 18:21:30","2016-09-15 17:21:30",8
Mule,"Support non-blocking operations in Ext-API","Support non-blocking API in Ext-API operations","Enhancement Request",Blocker,Closed,"2016-09-15 17:36:07","2016-09-15 16:36:07",13
Mule,"Support non-blocking message sources","Support non-blocking message sources using Reactive Streams approach",Task,Critical,Done,"2016-09-15 17:35:47","2016-09-15 16:35:47",8
Mule,"Remove ExchangePattern and cleanup sync/async conditional logic","Remove ExchangePattern and cleanup sync/async conditional logic",Task,Major,Done,"2016-09-15 17:35:15","2016-09-15 16:35:15",4
Mule,"Review and improve notifications and processing time based on new execution model.","Review and improve notifications and processing time based on new execution model.",Task,"To be reviewed",New,"2016-09-15 17:34:34","2016-09-15 16:34:34",8
Mule,"Introduce per-processor scheduling based on type in new default smart Processing strategy","Based on Non-Blocking threading spec.",Task,Critical,Done,"2016-09-15 17:33:51","2016-09-15 16:33:51",8
Mule,"SPIKE: Message Sources + Ext-API Sources","- Inbound sources + operations.  - Do mediator intercepters need to be non-blocking?",Task,Critical,Done,"2016-09-15 17:32:39","2016-09-15 16:32:39",8
Mule,"Expose rest service to do connection testing over an application","Expose rest service to do connection testing over an application / domain",Task,Critical,Done,"2016-09-15 15:23:03","2016-09-15 14:23:03",5
Mule,"The log4j2.xml confs in the apps are ignored in Mule 4.","For example in the case of HTTP you can add this line:        You spect to see the HTTP Extensions DEBUG logs and also the Grizzly logs of the requests. But right now this is not working. In the case of FTP the same is happening.",Bug,Critical,Closed,"2016-09-15 15:21:23","2016-09-15 14:21:23",8
Mule,"Definition Parsers doesn't load an object if the parameter name is the same of their base type","*Definition Parsers doesn't load an object if the parameter name is the same of their base type*    *Heisenberg case:*    We have the following SubtypeMapping:  {code}@SubTypeMapping(baseType = Weapon.class, subTypes = {Ricin.class}){code}    And then the following operation:  {code}  public Map<String, Weapon> processWeapon(Weapon weapon) {      ...    }{code}    And then in a Mule app:    {code:xml}    <flow name=processWeaponAsChildElement>          <heisenberg:process-weapon >              <heisenberg:weapon>                  <heisenberg:ricin microgramsPerKilo=32432>                      <heisenberg:destination victim=Lidia address=Stevia coffe shop/>                  </heisenberg:ricin>              </heisenberg:weapon>          </heisenberg:process-weapon>      </flow>{code}    When the definition parser try to load the object, treats {{</heisenberg:weapon>}} as the abstract base type of the subtype mapping instead of the wrapper of the concrete type.    This explodes with the following stact trace {code}org.mule.runtime.core.api.lifecycle.InitialisationException: Error creating bean with name 'processWeaponAsChildElement': Cannot create inner bean '(inner bean)#31eef343' of type [org.mule.runtime.module.extension.internal.config.dsl.operation.OperationMessageProcessorObjectFactory$$EnhancerByCGLIB$$99e38baf_42] while setting bean property 'messageProcessors' with key [1]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#31eef343': Cannot create inner bean '(inner bean)#56a73b6b' of type [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22] while setting bean property 'parameters' with key [<<weapon>>]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#56a73b6b': Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22]: Constructor threw exception; nested exception is org.mule.runtime.core.api.MuleRuntimeException: java.lang.IllegalArgumentException: Class interface org.mule.test.heisenberg.extension.model.Weapon cannot be instantiated.     at org.mule.runtime.core.registry.AbstractRegistry.initialise(AbstractRegistry.java:93)   at org.mule.runtime.core.registry.AbstractRegistryBroker$1.onTransition(AbstractRegistryBroker.java:49)   at org.mule.runtime.core.registry.AbstractRegistryBroker$1.onTransition(AbstractRegistryBroker.java:45)   at org.mule.runtime.core.lifecycle.RegistryLifecycleManager.invokePhase(RegistryLifecycleManager.java:128)   at org.mule.runtime.core.lifecycle.RegistryBrokerLifecycleManager.fireInitialisePhase(RegistryBrokerLifecycleManager.java:54)   at org.mule.runtime.core.registry.AbstractRegistryBroker.initialise(AbstractRegistryBroker.java:45)   at org.mule.runtime.core.registry.MuleRegistryHelper.fireLifecycle(MuleRegistryHelper.java:123)   at org.mule.runtime.core.lifecycle.MuleContextLifecycleManager$MuleContextLifecycleCallback.onTransition(MuleContextLifecycleManager.java:77)   at org.mule.runtime.core.lifecycle.MuleContextLifecycleManager$MuleContextLifecycleCallback.onTransition(MuleContextLifecycleManager.java:74)   at org.mule.runtime.core.lifecycle.MuleContextLifecycleManager.invokePhase(MuleContextLifecycleManager.java:62)   at org.mule.runtime.core.lifecycle.MuleContextLifecycleManager.fireLifecycle(MuleContextLifecycleManager.java:56)   at org.mule.runtime.core.DefaultMuleContext.initialise(DefaultMuleContext.java:299)   at org.mule.runtime.core.context.DefaultMuleContextFactory.doCreateMuleContext(DefaultMuleContextFactory.java:194)   at org.mule.runtime.core.context.DefaultMuleContextFactory.createMuleContext(DefaultMuleContextFactory.java:77)   at org.mule.tck.junit4.AbstractMuleContextTestCase.createMuleContext(AbstractMuleContextTestCase.java:203)   at org.mule.tck.junit4.AbstractMuleContextTestCase.setUpMuleContext(AbstractMuleContextTestCase.java:132)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:497)   at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)   at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)   at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)   at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)   at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)   at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)   at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)   at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)  Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'processWeaponAsChildElement': Cannot create inner bean '(inner bean)#31eef343' of type [org.mule.runtime.module.extension.internal.config.dsl.operation.OperationMessageProcessorObjectFactory$$EnhancerByCGLIB$$99e38baf_42] while setting bean property 'messageProcessors' with key [1]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#31eef343': Cannot create inner bean '(inner bean)#56a73b6b' of type [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22] while setting bean property 'parameters' with key [<<weapon>>]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#56a73b6b': Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22]: Constructor threw exception; nested exception is org.mule.runtime.core.api.MuleRuntimeException: java.lang.IllegalArgumentException: Class interface org.mule.test.heisenberg.extension.model.Weapon cannot be instantiated.   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:313)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:129)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:382)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:157)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1475)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1220)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)   at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)   at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)   at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)   at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)   at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:728)   at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:762)   at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)   at org.mule.runtime.config.spring.SpringRegistry.doInitialise(SpringRegistry.java:112)   at org.mule.runtime.core.registry.AbstractRegistry.initialise(AbstractRegistry.java:89)   ... 27 more  Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#31eef343': Cannot create inner bean '(inner bean)#56a73b6b' of type [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22] while setting bean property 'parameters' with key [<<weapon>>]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#56a73b6b': Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22]: Constructor threw exception; nested exception is org.mule.runtime.core.api.MuleRuntimeException: java.lang.IllegalArgumentException: Class interface org.mule.test.heisenberg.extension.model.Weapon cannot be instantiated.   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:313)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:129)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedMap(BeanDefinitionValueResolver.java:407)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:165)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1475)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1220)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:299)   ... 43 more  Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#56a73b6b': Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22]: Constructor threw exception; nested exception is org.mule.runtime.core.api.MuleRuntimeException: java.lang.IllegalArgumentException: Class interface org.mule.test.heisenberg.extension.model.Weapon cannot be instantiated.   at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:275)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1137)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1040)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:299)   ... 51 more  Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22]: Constructor threw exception; nested exception is org.mule.runtime.core.api.MuleRuntimeException: java.lang.IllegalArgumentException: Class interface org.mule.test.heisenberg.extension.model.Weapon cannot be instantiated.   at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:163)   at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:122)   at org.mule.runtime.config.spring.util.LaxInstantiationStrategyWrapper.lambda$instantiate$84(LaxInstantiationStrategyWrapper.java:66)   at org.mule.runtime.core.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:143)   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:995)   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:961)   at org.mule.runtime.config.spring.util.LaxInstantiationStrategyWrapper.instantiate(LaxInstantiationStrategyWrapper.java:64)   at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:267)   ... 56 more  Caused by: org.mule.runtime.core.api.MuleRuntimeException: java.lang.IllegalArgumentException: Class interface org.mule.test.heisenberg.extension.model.Weapon cannot be instantiated.   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:946)   at org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory.<init>(TopLevelParameterObjectFactory.java:46)   at org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22.<init>(<generated>)   at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)   at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)   at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)   at java.lang.reflect.Constructor.newInstance(Constructor.java:422)   at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)   ... 63 more  Caused by: java.lang.IllegalArgumentException: Class interface org.mule.test.heisenberg.extension.model.Weapon cannot be instantiated.   at org.mule.runtime.module.extension.internal.util.IntrospectionUtils.checkInstantiable(IntrospectionUtils.java:354)   at org.mule.runtime.module.extension.internal.util.IntrospectionUtils.checkInstantiable(IntrospectionUtils.java:349)   at org.mule.runtime.module.extension.internal.runtime.DefaultObjectBuilder.<init>(DefaultObjectBuilder.java:30)   at org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory.lambda$new$51(TopLevelParameterObjectFactory.java:48)   at org.mule.runtime.core.util.ClassUtils.lambda$withContextClassLoader$18(ClassUtils.java:942)   at org.mule.runtime.core.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:143)   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:995)   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:961)   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:941)   ... 70 more {code}",Bug,Critical,Closed,"2016-09-15 15:17:03","2016-09-15 14:17:03",5
Mule,"Change OAuth callback API to support external url and avoid confusion","We have the redirectUrl attribute in oauth2:authorization-code-grant-type for the local callback. It's somehow misleading because it's a local callback address to open a listener.    It would be better to rename it in addition to adding the external url, and possibly supporting a listener configuration.","Enhancement Request",Major,Closed,"2016-09-15 14:55:17","2016-09-15 13:55:17",8
Mule,"Fix performance tests and run them in main build as junit tests so future errors are caught faster.","Some of the contiperf tests stoped working due code changes in the respective modules, as this test are in a different module are not run during normal testing, causing the perf test to fail and cant be differentiated from an SLA deviation. Now the test will be run as a junit test on the main build to validate it pass and then in the Perf build we will run the ContiPerft test to validate the performance.",Bug,Major,Closed,"2016-09-15 14:23:44","2016-09-15 13:23:44",4
Mule,"ArtifactClassLoaderRunner - Create on the fly the extension manifest for testing","JUnits on test-runner have a hard-coded extension-manifest.xml for testing, find out if possible to generate this on the fly.",Task,Minor,Done,"2016-09-15 12:18:06","2016-09-15 11:18:06",1
Mule,"Separate artifact construction from artifact deployment","In order to reuse classloader construction on the isolated test runner, we can't depend on deployment module form the runner module, as that creates a dependency cycle.   We must extract artifact classloaders contruction (and related concepts) to a different module. This new module must be related to artifacts and classloaders construction and the deployment module must manage only the deployment part of those artifacts  ",Task,Major,Done,"2016-09-14 23:40:44","2016-09-14 22:40:44",8
Mule,"Cleanup asynchronousProcessingStrategy vs threadingProfileType vs asynchronousThreadingProfileType overlap in schema","Clenup the schema definition",Task,"To be reviewed",Done,"2016-09-14 22:07:55","2016-09-14 21:07:55",2
Mule,"Customisable configuration of ProcessingStrategy per app/domain","Allow to define processing strategies that define the thread pools they use. These processing strategies may be shared among flows.",Task,Major,New,"2016-09-14 21:14:02","2016-09-14 20:14:02",8
Mule,"Spike: Use “disruptor” backed ExecutionServices","Before doing this we should have some performance metrics to measure how much we gain by doing this.",Task,"To be reviewed",Done,"2016-09-14 21:08:47","2016-09-14 20:08:47",16
Mule,"Process to detect blocking of non-io threads","Log a warning when this situation is encountered. Provide context information about the cause/location of the blocking.         See for reference: https://github.com/reactor/reactor-core/issues/1102",Task,"To be reviewed",New,"2016-09-14 21:05:09","2016-09-14 20:05:09",16
Mule,"Implement ThreadingService#getExecutorStats() - Runtime Support","Should there be a method in the service that returns the stats for all schedulers or could each scheduler expose its data? Since we need a centralized access to the stats, regardless of the application/flow that requested a Scheduler, the first option makes more sense.",Task,"To be reviewed",New,"2016-09-14 21:04:23","2016-09-14 20:04:23",16
Mule,"Cleanup WorkManager and WorkListener","Remove unneeded and unused code. Cleanup the MuleContext.",Task,Major,Done,"2016-09-14 21:04:03","2016-09-14 20:04:03",8
Mule,"Expose the type of processing the current thread is performing","This is needed by the ProcessingStrategies to make scheduling decisions",Task,Major,Done,"2016-09-14 21:03:20","2016-09-14 20:03:20",2
Mule,"Update notifications threading with usage of the ThreadingService","Changes for notifications",Task,Major,Done,"2016-09-14 21:02:36","2016-09-14 20:02:36",16
Mule,"Change http selectors/workers to use a connector pool from the service","This depends on the final definition of http module vs extension vs service.",Task,Major,Done,"2016-09-14 20:58:37","2016-09-14 19:58:37",8
Mule,"Change ProcessingStrategy to use SchedulerService instead of flow ThreadingProfile","Review all the broken tests because of this change.  See if the schema definition can be updated to reflect this",Task,Blocker,Done,"2016-09-14 20:58:06","2016-09-14 19:58:06",4
Mule,"Implement the SchedulerService","Define the threading profiles for the container pools.  Hook up the ThreadingService with the service infrastructure.",Task,Blocker,Done,"2016-09-14 20:56:58","2016-09-14 19:56:58",8
Mule,"Fix ToolingService class API","The ToolingService class expose two methods that are not related at all.    While we won't to keep the ToolingService as an agregator of the funcionality that can be used for tooling, we should have a clear API.     Probably move the createApplication method to another class.",Task,"To be reviewed",Done,"2016-09-14 19:39:49","2016-09-14 18:39:49",2
Mule,"Email: Remove the EmailIdConsumerExecutor.","The EmailIdConsumerExecutor class is the responsible for looking in the incoming message if there are one or more emailIds to accept and perform some operation, as part as mule4 we want to avoid falling back to the incoming messages and be explicit when parameters are needed   ","Enhancement Request",Major,Closed,"2016-09-13 19:39:01","2016-09-13 18:39:01",3
Mule,"Avoid wrapping exceptions to ME in CXF ","Right now, the CxfOutboundMessageProcessor is wrapping the exceptions that occur when calling the client processor in a MessagingException. This allows the interceptor that catches that exception to use the latest event which went through the client processor. We need to figure out a way to not use a MessagingException and still get the same behaviour.",Task,Major,Done,"2016-09-13 17:24:37","2016-09-13 16:24:37",0
Mule,"Content parameter should not support child element declaration","When consuming an API that has dynamic entities, like salesforce, the most common way to do it is to use a map to represent the entity:      In this scenario, the child element name should not be pluralized, and when configuring it as a child, the name of the element should be *dynamic-object*, and not *dynamic-objects*",Bug,Critical,Closed,"2016-09-13 14:36:12","2016-09-13 13:36:12",5
Mule,"Connections should be validated at start time","When the application starts, all connection providers should get a connection, validate it and release it. If any of those fail, the application should not start.    User should be able to provide a <reconnect blocking=false /> to prevent the application from failing","Enhancement Request",Major,Closed,"2016-09-13 14:28:48","2016-09-13 13:28:48",5
Mule,"When using a list of maps, the map parameter items xml tag is not recognized by the parser","If an extension uses List<Map<String,Object>> parameters, the parser fails to load the inline definition of the parameter with the following error:  {code}  org.mule.runtime.core.api.lifecycle.InitialisationException:   Configuration problem: The element 'map-parameter' does not have an associated Bean Definition Parser.  Is the module or extension associated with http://www.mulesoft.org/schema/mule/map-list present on the classpath?  Offending resource: URL [file:/Users/pablocabrera/dev/mule-tooling-mock-connector/extension-with-map-list/target/test-classes/mule-config.xml]  Caused by: org.springframework.beans.factory.parsing.BeanDefinitionParsingException:   Configuration problem: The element 'map-parameter' does not have an associated Bean Definition Parser.  Is the module or extension associated with http://www.mulesoft.org/schema/mule/map-list present on the classpath?  {code}    This is the operations definition  {code:java}  public class BasicOperations {   public String operationWithMap(@UseConfig BasicExtensionConfig config, List<Map<String,Object>> mapParameters) {     return null;   }  }  {code}    The mule app:  {code:xml}  <?xml version=1.0 encoding=UTF-8?>  <mule xmlns:doc=http://www.mulesoft.org/schema/mule/documentation xmlns:spring=http://www.springframework.org/schema/beans xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance        xmlns:map-list=http://www.mulesoft.org/schema/mule/map-list        xmlns=http://www.mulesoft.org/schema/mule/core        xsi:schemaLocation=http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd  http://www.mulesoft.org/schema/mule/map-list http://www.mulesoft.org/schema/mule/map-list/current/mule-map-list.xsd  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd>      <map-list:config name=MapStringPojo_Config doc:name=MapStringPojo Config>          <map-list:connection>              <map-list:map-parameters>                  <map-list:map-parameter value=#[['a':'1','b':'2']]/>              </map-list:map-parameters>          </map-list:connection>      </map-list:config>      <flow name=dummy-flow>          <map-list:operation-with-map config-ref=MapStringPojo_Config doc:name=MapStringPojo>              <map-list:map-parameters>                  <map-list:map-parameter value=#[['a':'1','b':'2']]/>                  <map-list:map-parameter value=#[['c':'3','d':'4']]/>              </map-list:map-parameters>          </map-list:operation-with-map>      </flow>  </mule>  {code}    The XSD has all the definitions maching this signature.    Expected: The app should be able to load the XML",Bug,Major,Closed,"2016-09-13 12:56:36","2016-09-13 11:56:36",2
Mule,"ArtifactClassLoaderRunner - Add support for sharing libraries/modules between plugins","MULE-9867 require to be supported from ArtifactClassLoaderRunner",Task,Critical,Done,"2016-09-13 05:33:30","2016-09-13 04:33:30",2
Mule,"Migrate HTTP test that needs to access plugin classes from IT test to Functional Test Case in HTTP Extension","MULE-9702 added test for HTTP extension, as part of isolation runner modifications classes cannot be exported for plugins except if the rootArtifact is the plugin that those classes belong to.  Currently only two tests would need to be moved to HTTP extension test folder:  org.mule.test.module.http.functional.requester.HttpRequestFunctionalTestCase  org.mule.test.module.http.functional.requester.HttpRequestProxyConfigTestCase  ",Task,Major,Done,"2016-09-13 04:06:50","2016-09-13 03:06:50",1
Mule,"Rename and make optional the key attribute of HTTP request operation","The key attribute is necessary for metadata resolution since we are returning an Object, however it should A) be named something like outputType and B) be optional using the ANY type as default. Once MULE-10377 is done, this can be addressed.",Task,Blocker,Done,"2016-09-12 22:38:35","2016-09-12 21:38:35",3
Mule,"Changes in metadata serialization for improved agent error handling","Change metadata serialization API","Enhancement Request",Major,Closed,"2016-09-12 21:30:22","2016-09-12 20:30:22",5
Mule,"Do not allow UNKNOWN to be handle as error type in the config","We should only use the UNKNOWN error type internally and not let the user use it in the config.    This is because we will probably have many UNKNOWN error types that we would be moving to specific error types in minor versions. If we let the user catch UNKNOWN, then if we change those we would be breaking backwards compatibility. In such case the users can use the ANY error type.",Bug,Blocker,Closed,"2016-09-12 16:40:18","2016-09-12 15:40:18",3
Mule,"Exported elements are not in the list of types in the extension-model.json","None of the exported types is populated in the types field of the extension-model.json    Check the sockets extension org.mule.modules:mule-module-sockets for example.    TcpClientSocketProperties should be in the list of types, but it is not.",Bug,Blocker,Closed,"2016-09-11 17:23:56","2016-09-11 16:23:56",2
Mule,"Add test cases for routers and error handling","We need to make sure that when a router fails it throws RoutingExceptions (ROUTING error type) but when an inner route fails the original exception is available.",Task,Critical,Done,"2016-09-09 18:18:50","2016-09-09 17:18:50",2
Mule,"Move all exception classes away from MessagingException","We need to hide MessagingException as much as possible and expose the exceptions that might make it to the user. This will mean no more causedBy and restoring the behaviour in MessageVariableResolverFactory when handling exception to stop wrapping it.",Task,Critical,Done,"2016-09-09 18:16:46","2016-09-09 17:16:46",8
Mule,"Add information on the EventContext about the origin of its events","Notifications should contain this information. This will allow the system receiving this notifications to identify the source of those events. Currently, it is containing the name of the xml element for the source or the url of the inbound endpoint for compatibility module.    Some more data that would make sense:    * name of the receiving flow construct  * name of the module and operation of the connector receiving the event",Task,Blocker,Done,"2016-09-09 18:01:49","2016-09-09 17:01:49",2
Mule,"Declare config-ref attribute as a reference in the ComponentBuildingDefinition","The SDK must declare the attributes pointing to pojos config-ref attribute as a reference when defining the component building definition of the operations.    Mule needs to know about the reference parameters in the config in order to clearly know the dependencies between different components in the configurations.    This let us create an isolated component together with it dependencies.",Bug,Major,Closed,"2016-09-09 17:35:58","2016-09-09 16:35:58",5
Mule,"ArtifactClassLoaderRunner - Refactor to encapsulate Aether API inside the runner implementation","The following packages had to be exported as part of the migration to Aether, refactor the code to avoid exposing this as part of the API:    ",Task,Minor,Done,"2016-09-09 16:25:13","2016-09-09 15:25:13",8
Mule,"ArtifactClassLoaderRunner - Check how DSL metadata is generated for extensions","org.mule.functional.api.classloading.isolation.ExtensionPluginMetadataGenerator is generating DSL metadata at the end when all the extensions were registered and its manifest created.  These means that spring stuff and xsds are created at that point to only one folder, actually it is added this URL to every plugin.    Check if this (having the whole metadata on each plugin resources) would have a problem with Extensions Runtime.",Task,Minor,Done,"2016-09-09 16:16:24","2016-09-09 15:16:24",1
Mule,"Remove final modifier from process method in MessageProcessor implementations","Due to the fact that the process method is declared final in the class AbstractRequestResponseMessageProcessor, MUnit is unable to mock any message processor that extends it.    The intercepting library we are using is cglib and it can't intercept final methods. What we suggest is the removal of the *final* from the method's signature.","Enhancement Request",Major,Closed,"2016-09-09 15:52:48","2016-09-09 14:52:48",1
Mule,"Migrate HTTP extension to depend on Sockets extension as plugin dependency","As MULE-9867 added support for extension/plugins dependencies HTTP extension has to be migrated to use this new approach.",Task,Major,Done,"2016-09-09 15:52:10","2016-09-09 14:52:10",2
Mule,"OAuth Authorization in HTTP Requester redirection URL only works on localhost","The redirectionUrl needs to be something ESB can listen on as the callback(generated dynamic flow) will be using it. As a result, in CloudHub, this can only be using host: 0.0.0.0    However, when OAuth provider authenticates the login and send an HTTP response with a 'location' header of http://0.0.0.0:8081/callback, the browser is not able to corelate it to the one exposed by the application, which should be http://appName.cloudhub.io/callback.    We need an extra attribute, say 'ExternalRedirectionURL', to send to the remote OAuth provider, so that, when the OAuth provider returns the redirect, it's going to the ExternalRedirectionURL, which eventually will land on the redirectionURL where the ESB runtime is listening on.",Bug,Major,Resolved,"2016-09-08 22:40:30","2016-09-08 21:40:30",0
Mule,"File workingDir attribute should be at the file:connection level","The file connector has the workingDir at the configuration level. This means that the connection provider of file is not considering it when doing connection testing. That should be used since it may be that the configured folder does not exists.",Bug,Major,Closed,"2016-09-08 22:34:54","2016-09-08 21:34:54",3
Mule,"Make mule-module-file-common an artifact plugin","File common modules is currently distributed in the container an exposed in the API. File, FTP and FTPS extensions depend on that module.  As now plugins can depend on other plugins, file common must be removed from the container and converted in to an artifact plugin.",Task,Critical,Done,"2016-09-08 22:11:29","2016-09-08 21:11:29",8
Mule,"DSLSyntaxElement element name is not populated if the paramter has the @Text annotation","For Database and Email extensions, some parameter are annotated with the @Text annotation.  {code}  public FooPojo {    @Text    @Parameter    private String superField;  }  {code}    When resolving the DSLElementSyntax using its metadata type, and getting the DSLElementSyntax for the field annotated with @Text,  the resulting DSLElementSyntax has an empty element name.     Without a name, we cannot persist it in the XML.    {code:java}      String fieldName = superField;      DslElementSyntax resultFromMetadata = getSyntaxResolver().resolve(parameterModel.getType()); //This is a FooPojo      DslElementSyntax metadataFieldDsl = getChildFieldDsl(fieldName ,resultFromMetadata);      assertElementName(fieldName ,metadataFieldDsl); //This fails  {code}",Bug,Blocker,Closed,"2016-09-08 21:35:37","2016-09-08 20:35:37",1
Mule,"Custom URL path in JMX management module is not working","Since the host attribute was deprecated, JMX urls with a custom path are not being correctly parsed, and the default */server* is always used as the path.",Bug,Minor,Closed,"2016-09-08 19:08:47","2016-09-08 18:08:47",1
Mule,"ArtifactClassLoaderRunner - Add unit tests for Aether classification process","In order to support multiple versions for different artifacts (plugin/container) the classification process for the class loader isolated runner has been changed to use Eclipse Aether (Maven resolution API).  This code needs to be tested in order to avoid having to run all the tests that use the runner to check if a change there breaks something else.","Enhancement Request",Major,Closed,"2016-09-08 18:42:44","2016-09-08 17:42:44",8
Mule,"SoapFaultException must keep the original SoapFault","When building a SoapFaultException, certain attributes of the original SoapFault are being kept. Instead, reference to the SoapFault itself should be kept.",Bug,Minor,Closed,"2016-09-08 18:14:29","2016-09-08 17:14:29",0
Mule,"Review exported extension plugins when packaging.","We should remove the capability to specify exported plugins in the <pluginDependencies> property and move to what the was defined to solve the classloading and testing issues.    Also add tests for this feature.  ","Enhancement Request",Major,Closed,"2016-09-08 16:32:31","2016-09-08 15:32:31",2
Mule,"Microbenchmark event/message creation/copying/usage","Update and run benchmarks.",Task,Critical,Done,"2016-09-08 16:23:38","2016-09-08 15:23:38",8
Mule,"Improve test infrastructure for creating Events/Messages","Review how messages/events are created. Migrate to use the builder.",Task,Minor,Done,"2016-09-08 16:21:31","2016-09-08 15:21:31",5
Mule,"Refactor DB Connector parameter's structure","*Refactor DB Connector parameter's structure*    The new DB Connector has a several parameters that should be exclusive and not be able to configure them at the same time.  *Example:* If you configure a {{DataSource}} bean, doesn't make sense to configure a *host* and *port*.    ","Enhancement Request",Major,Closed,"2016-09-08 15:54:47","2016-09-08 14:54:47",8
Mule,"Add missing UI TypeAnnotations to improve the POJOs support","*Add missing UI TypeAnnotations to improve the POJOs support*    * Nowadays the ExtensionModel have several {{ModelProperty}} that contribute on how to render a UI:  ** *LayoutModelProperty*  *** Whether is a password  *** Whether is a text  *** The order of the element  *** Group  *** Tab  ** *DisplayModelProperty*  *** DisplayName  *** Summary    Some of these information there is no way to contribute to a {{MetadataType}} because a {{TypeAnnotation}} is missing and in some other cases the {{MetadataType}} is not contributed correctly.","Enhancement Request",Major,Closed,"2016-09-08 14:21:04","2016-09-08 13:21:04",5
Mule,"Allow on-error-* to handle several error types","Need to support OR operator.",Task,Critical,Done,"2016-09-08 04:47:07","2016-09-08 03:47:07",5
Mule,"ArtifactClassLoaderRunner - Add support for reading the maven-shade-plugin configuration using Xpp3 Maven API","While reading if the pom has maven-shade-plugin during the Workspace findArtifact resolution it would be nice to read the settings of the plugin in order to avoid hardcoding the dependency-reduced-pom.xml file name for reduced pom.","Enhancement Request",Trivial,Closed,"2016-09-07 21:31:17","2016-09-07 20:31:17",2
Mule,"ArtifactClassLoaderRunner - Improve exportPluginClasses to only export classes of the plugin that contains those classes","While migrating extensions there was this need for exporting classes from the plugin/extension that are not exposed. The tests need to access them for testing the features but they are not supposed to be exported as part of the API.  MULE-10144 implements a way to allow exporting particular classes for plugins/extensions but these set of classes is exported by all the plugins/extensions due to there is no way to match which plugin/extensions contains those classes.  Find a way to improve this.    h5. Proposed solution  It should only be allowed to export classes for the rootArtifact if it is a plugin, therefore you would only be able to export classes when doing functional tests from the same plugin that is exporting those classes",Task,Minor,Done,"2016-09-07 19:01:45","2016-09-07 18:01:45",0
Mule,"Replace Geronimo dependencies with javax ","We should consider upgrading all spec libraries to the latest version of the javax flavor and remove Geronimo packages from the distribution.    - J2EE  - JMS  - EJB  - JAX-RPC  - Servlet",Task,Major,Done,"2016-09-06 21:40:59","2016-09-06 20:40:59",5
Mule,"Email: Add pagination support for the list operation.","Now the SDK has pagination support, and we should make the list operation paginable.  Remember to modify Email's spec to reflect this change.","Enhancement Request",Major,Closed,"2016-09-06 21:08:21","2016-09-06 20:08:21",3
Mule,"Move deployment code to its own module","Move deployment code to its own module",Task,Critical,Done,"2016-09-06 18:40:33","2016-09-06 17:40:33",5
Mule,"Description is not populated in the extension model when the operation is declared at the Configuration instead of the Extension","If you add operation at an @Configuration class, all the operations and parameters descriptions are empty    Operations    Generated JSON for the operations:      The description should be populated. For configless operations, all the descriptions are populated correctly",Bug,Minor,Closed,"2016-09-06 18:02:38","2016-09-06 17:02:38",5
Mule,"Pojos should not have top level element support by default","The current default is to add top level element support for all instantiable types on the XML dsl. This is fine for the code connectors but is problematic for cloud ones. Plus, not all core connectors need that either.    Additionally, the tooling becomes cluttered by an excess of top level elements, most of which are hardly needed.    Default should change to false, and this should explicitly enabled through a XmlHints annotation","Enhancement Request",Blocker,Closed,"2016-09-06 16:37:41","2016-09-06 15:37:41",8
Mule,"Provide a way to specify mule plugin dependencies of an extension","When packaging an extension we should include in the plugin.properties file an entry plugin.dependencies' that specifies the list of plugins that the extension is dependant on.    We should see if this could be auto-discovered or specified somewhere.","Enhancement Request",Critical,Closed,"2016-09-06 16:31:12","2016-09-06 15:31:12",2
Mule,"DSLSyntaxResolver crashes when resolving metadata types if the class is not in the classpath","When loading the extension model and generating the XML definition in studio using as input a metadata type, the DSLSyntaxResolver crashes because it is looking for classes in the classpath.     The DSL should not depend on classes being in the classpath.    This was working before.",Bug,Blocker,Closed,"2016-09-06 16:23:37","2016-09-06 15:23:37",8
Mule,"Review email operations that return or receive a multipart mule message.","Review the experience of the email operations that return or receive a multipart mule message, describe the final decisions in the Email Connector spec. ",Task,Critical,Done,"2016-09-06 16:02:55","2016-09-06 15:02:55",5
Mule,"Review Email operations that return mule messages.","We dont want to expose the Message in the operations of extensions, so we should replace this with the OperationResult concept","Enhancement Request",Major,Closed,"2016-09-06 15:56:29","2016-09-06 14:56:29",5
Mule,"Upgrade javax.mail to latest version","E-mail extension is being built using the 1.4.7 version of the javax.mail dependency (March 2013). We should upgrade to the latest version (1.5.6) released in August 2016. Available at: https://mvnrepository.com/artifact/javax.mail/javax.mail-api  Also, the dependency is marked as provided, so the version shipped with the distribution is being used. Consider shipping this library with the extension plugin.",Bug,Critical,Closed,"2016-09-05 22:56:16","2016-09-05 21:56:16",3
Mule,"Define DslSyntaxResolver behaviour when type is not global","Define how the resolve(MetadataType type) method should behave when the type doesn't allow global definitions and is not wrapped. Should it fail? Should it return an empty element Name?",Task,Major,Done,"2016-09-05 20:07:40","2016-09-05 19:07:40",5
Mule,"Provide a builder for a custom TlsContextFactory","Right now, our API exposes a TlsContextFactoryBuilder but this only allows you to get a default TlsContextFactory. So if a custom one is desired, there's nothing expose in our API to allow it.  We should provide right there a proper builder.",Task,Major,Done,"2016-09-05 20:00:00","2016-09-05 19:00:00",4
Mule,"Update javax transport version to 1.2","Upgrade the library",Task,Minor,Done,"2016-09-05 14:12:39","2016-09-05 13:12:39",0
Mule,"FTP Extension: In the create dir operation when the Directory already exist it doesn't mention the complete path, just the directory name","For example  for this config:        It only displays Directory 'input' already exists. in place of *Directory /Users/alejandro/ftp-test/input/ already exists.* or *Directory 'input' already exists. in /Users/alejandro/ftp-test/*",Bug,Minor,Closed,"2016-09-03 06:46:36","2016-09-03 05:46:36",1
Mule,"FTP Extension: SFTP delete log appears twice when a folder is removed","When you add the in the log4j2.conf the DEBUG level to the FTP package it shows twice the line of folder deleted in SFTP. In the case of the delete of a file it only shows it once as expected. In the logs you will see both behaviours:    {quote}  DEBUG 2016-09-03 01:54:50,249 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-delete-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.connection.SftpClient: Attempting to cwd to: /Users/alejandro  DEBUG 2016-09-03 01:54:50,250 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-delete-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.command.SftpDeleteCommand: Preparing to delete file '/Users/alejandro/output/hello-world.txt'  DEBUG 2016-09-03 01:54:50,251 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-delete-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.command.SftpDeleteCommand: Successfully deleted '/Users/alejandro/output/hello-world.txt'  DEBUG 2016-09-03 01:54:50,251 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-delete-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.connection.SftpClient: Attempting to cwd to: /Users/alejandro  DEBUG 2016-09-03 01:54:50,252 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-delete-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.command.SftpDeleteCommand: Preparing to delete directory '/Users/alejandro/output'  DEBUG 2016-09-03 01:54:50,254 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-delete-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.command.SftpDeleteCommand: Successfully deleted '/Users/alejandro/output'  DEBUG 2016-09-03 01:54:50,254 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-delete-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.command.SftpDeleteCommand: Successfully deleted '/Users/alejandro/output'  {quote}",Bug,Trivial,Closed,"2016-09-03 06:17:55","2016-09-03 05:17:55",1
Mule,"FTP Extension: SFTP Rename operation doesn't work ","When trying to do a Rename using SFTP it throws an exception Exception occurred while trying to change working directory to null.    *Steps to reproduce:*  * Start the SFTP server in mac and check it is running  * Try to rename a file/folder with a flow like this:      {quote}  DEBUG 2016-09-03 01:57:45,268 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-rename-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.connection.SftpClient: Attempting to cwd to: null  {quote}    {quote}  ********************************************************************************  Message               : Exception occurred while trying to change working directory to null.  Payload               : null  Payload Type          : null  Element               : /flow-sftp-rename-folder-and-file/processors/0 @ 65af1b30-7191-11e6-93b2-0a0027000000  --------------------------------------------------------------------------------  Root Exception stack trace:  java.lang.NullPointerException   at com.jcraft.jsch.ChannelSftp.remoteAbsolutePath(ChannelSftp.java:2916)   at com.jcraft.jsch.ChannelSftp.cd(ChannelSftp.java:339)   at org.mule.extension.ftp.internal.sftp.connection.SftpClient.changeWorkingDirectory(SftpClient.java:100)   at org.mule.extension.ftp.internal.sftp.connection.SftpFileSystem.changeToBaseDir(SftpFileSystem.java:98)   at org.mule.runtime.module.extension.file.api.StandardFileSystemOperations.rename(StandardFileSystemOperations.java:310)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)  {quote}",Bug,Blocker,Closed,"2016-09-03 06:02:12","2016-09-03 05:02:12",1
Mule,"Define how our socket factories should be enforced","Right now, the TlsContextFactory claims to be able to generate client and server socket factories when in fact it only exposes a way of obtaining an SSLContext. The problem then is that if we don't exposed TlsConfiguration or our restricted client and server socket factories, users will have no way of obtaining a mule regulated socket factory that guarantees a cipher and protocol configuration that respects the admin setup.  We need to define whether we want to add that capabilities to the TlsContextFactory or refactor our TLS approach to allow another way of providing those socket factories.",Task,Critical,Done,"2016-09-03 03:50:36","2016-09-03 02:50:36",0
Mule,"Avoid having to wrap mutators for compatibility module","Remove the need to wrap mutators for compatibility module, using a `org.mule.runtime.config.spring.parsers.generic.WrappingChildDefinitionParser`    See the TODO in code for reference.",Task,Minor,Done,"2016-09-03 00:25:42","2016-09-02 23:25:42",4
Mule,"Exported types are not declared in the extension model","When an extension declares an Exported type, and that types is not used, or used only as a ParameterGroup are not declared in the extension model of the Extension.",Bug,Blocker,Closed,"2016-09-02 19:44:37","2016-09-02 18:44:37",13
Mule,"Memory leak caused by per-app logging","Per-application logging is causing a memory leak as the logging context maintains a reference to the application classloaders.  The issue is easily reproduced  on a clean distribution, after default has started redeploy it a couple of times. A profiler will show that there are many MuleappplicationClassLoader instances with strong references when there should be only one.    This issue is not reproduced when mule is running using -M-Dmule.simpleLog",Bug,Blocker,Closed,"2016-09-01 22:11:50","2016-09-01 21:11:50",8
Mule,"Memory leak caused by DefaultDataTypeBuilder's cache","DefaultDataTypeBuilder contains a cache, used to avoid recreating the same instance DataType instance on each request.   This cache is not flushed when the app is undeployed, and because the key references the datatype instance, wich references the classloader, there is a memory leak",Bug,Blocker,Closed,"2016-09-01 22:08:28","2016-09-01 21:08:28",3
Mule,"Mule 4 Processing Strategy Spec",Spec,Task,Critical,Done,"2016-09-01 18:10:07","2016-09-01 17:10:07",8
Mule,"Introduce new Non-Blocking API","Introduce new Non-Blocking API",Task,Critical,Done,"2016-09-01 18:06:56","2016-09-01 17:06:56",8
Mule,"Non-Blocking API Spec","Create/share/review spec for new non-blocking API.",Task,Critical,Done,"2016-09-01 18:06:16","2016-09-01 17:06:16",5
Mule,"FTP Extension: Test List operation after the changes and updates needed are done","The list operation of the FTP Extension needs some changes and updates in it functionality. After they are done we need to test it again.  ",Task,Major,Done,"2016-09-01 17:28:45","2016-09-01 16:28:45",8
Mule,"Spec: Mule 4 Threading model","Write a spec for the new threading model",Task,Major,Done,"2016-09-01 17:25:47","2016-09-01 16:25:47",8
Mule,"Write classloader spec","Need a classloader model spec showing all the latest changes to share with the team",Task,Major,New,"2016-09-01 16:55:56","2016-09-01 15:55:56",16
Mule,"Isolated test runner must process plugins and app lookup strategies","Isolated test runner must take in account lookup policies from the app and plugins in the same way as it is done in the container","Enhancement Request","To be reviewed",Open,"2016-09-01 16:54:19","2016-09-01 15:54:19",16
Mule,"Define plugin versions and improve plugin dependencies","Current version defines plugin dependencies by name.   As there will be multiple versions of a given artifact, the name is not enough.  Dependencies must be declared in a better way, maybe by defining the maven ID of each artifact.  Then the plugin dependencies must be resolved taking in account that there could be multiple versions of a given plugin","Enhancement Request",Major,Closed,"2016-09-01 16:52:15","2016-09-01 15:52:15",8
Mule,"Improve logging to help to resolve classloading issues","FineGrainControlClassLoader should log what classes are being loaded, what lookup policy is being used and what classloader is finally used to load the class.","Enhancement Request",Major,Closed,"2016-09-01 16:24:04","2016-09-01 15:24:04",1
Mule,"Add a way to shared libs on the isolated tests","Applications can share libraries with artifact plugins deployed as part of the app. The isoalted test runner must support this feature so we can use libraries that are not part of the extensions (like DB drivers) on our tests","Enhancement Request",Major,Closed,"2016-09-01 16:20:07","2016-09-01 15:20:07",5
Mule,"Compilation fails for an extension with operations shared with different config","I had an extension that have 2 configs, and they share the same operation, but after the merge of the MULE-10220 it stopped compiling.    The extension:    Operation:      Expected: The compilation should not fail, and when it fails, it should not fail with the execption it is currently failing. The error should specify the components that generated the conflict",Bug,Major,Closed,"2016-09-01 15:08:39","2016-09-01 14:08:39",3
Mule,"Generic typing (List<T>)","Generic typing (List<T>)",Story,Major,Done,"2016-09-01 14:32:48","2016-09-01 13:32:48",21
Mule,"Function typing","Function typing",Story,Major,Done,"2016-09-01 14:32:25","2016-09-01 13:32:25",21
Mule,"Spike for moving operation execution from ExtAPI to core","The idea is to see what is the impact of moving the code to execute operation from extensions API to the core so we can reuse it for every operation that executes like a function.",Task,"To be reviewed",Done,"2016-09-01 14:31:19","2016-09-01 13:31:19",8
Mule,"Migrate mule test cases to EL expressions","Migrate mule test cases to EL expressions",Story,"To be reviewed",New,"2016-09-01 14:25:43","2016-09-01 13:25:43",32
Mule,"Allow transform processor to load the script from a file","Since a dw script can be quite large, it would be ideal to load them from a file.",Story,Critical,Done,"2016-09-01 14:25:21","2016-09-01 13:25:21",8
Mule,"Support expression language config for DW","While the current configuration should remain as part of a MEL compatibility module, we need to have a way to do this for DW. Users should be able to add functions and so on. Consider importing dw files.",Story,Critical,New,"2016-09-01 14:25:06","2016-09-01 13:25:06",16
Mule,"Redefine DW current components ","- Redefine DW current components    - set-payload vs dw:transform    - Make DW components as part of core namespace.",Story,Critical,Done,"2016-09-01 14:23:59","2016-09-01 13:23:59",8
Mule,"Review new operator won't be supported in EL","Review new won't be supported in EL. Need to evaluate the impact and define how to approach the fact that 'new' won't be accepted in the EL.",Story,"To be reviewed",Done,"2016-09-01 14:23:32","2016-09-01 13:23:32",5
Mule,"Define bindings to use in Mule 4 from the event","Define bindings to use in Mule 4",Story,Major,Done,"2016-09-01 14:23:02","2016-09-01 13:23:02",8
Mule,"Add mechanism to provide an error message from failing components","This task is to allow components in mule configuration to provide a MuleMessage with information related to the error like in http when there's an http status code validation but the response of the request must still be available to be used by the user.",Task,Major,Done,"2016-09-01 14:19:36","2016-09-01 13:19:36",5
Mule,"Define and implement how to deal with composite exceptions","We need to provide a mechanism for components that execute many routes to provide a composite exception with the different errors that occur in each route and make that accessible by the user. (i.e.: scatter-gather).    This also includes supporting that in mule core components  ",Task,Blocker,Done,"2016-09-01 14:15:36","2016-09-01 13:15:36",8
Mule,"Add validation for built-in redelivery handler and mule redelivery handler","At parsing the config the maxRedeliveryCount and the redelivery-policy must be validated so only one exists in the config.",Task,Major,Done,"2016-08-31 19:39:31","2016-08-31 18:39:31",4
Mule,"Remove old DefaultMessagingExceptionStrategy and all its code","Remove old DefaultMessagingExceptionStrategy and all its code",Task,Major,Done,"2016-08-31 19:20:51","2016-08-31 18:20:51",4
Mule,"Define API to do type inference for bindings (functions and variables)","Define API to do type inference for bindings (functions and variables) ",Story,Major,Done,"2016-08-31 15:06:29","2016-08-31 14:06:29",0
Mule,"Spike: Define how to define EL functions from modules","Define how to define EL functions from modules",Story,Critical,Done,"2016-08-31 15:05:44","2016-08-31 14:05:44",8
Mule,"Define how to do beans lookup","Define how to do beans lookup. One way this was done was using the app global which exposed the registry.",Story,Critical,Done,"2016-08-31 15:03:20","2016-08-31 14:03:20",0
Mule,"Move MEL to compatibility module","Move MEL to compatibility module and define how migration would be","Enhancement Request",Critical,Open,"2016-08-31 14:49:44","2016-08-31 13:49:44",16
Mule,"Move enricher to compatibility","Define the UX for enricher that uses MEL. We need to review how now having the enricher affects us considering the 3.x use cases.",Story,Major,Done,"2016-08-31 14:44:55","2016-08-31 13:44:55",8
Mule,"Define a way to hook to the default EL in Mule","Define a way to hook to the default EL in Mule",Story,Critical,Done,"2016-08-31 14:43:34","2016-08-31 13:43:34",5
Mule,"FTP Extension: In SFTP the create directory doesn't work, it says that the path to create doesn't exist.","FTP Extension: In SFTP the create directory doesn't work, it says that the path to create doesn't exist.    Steps to reproduce:  * Start SFTP server in Mac  * try to create a directory",Bug,Blocker,Closed,"2016-08-31 08:09:34","2016-08-31 07:09:34",5
Mule,"FTP Extension: SFTP doesn't support the known_hosts validation if the key uses ECDSA or RSA ","Testing with the MAC SFTP server when you connect using sftp localhost the key added to your known_hosts file is using ecdsa-sha2-nistp256.    When I want to connect using Mule SFTP Connection I receive this warning   {quote}  Root Exception stack trace:  com.jcraft.jsch.JSchException: UnknownHostKey: localhost. RSA key fingerprint is bb:cb:63:07:52:24:32:13:d8:b8:ac:07:e3:2e:15:23   at com.jcraft.jsch.Session.checkHost(Session.java:797)    {quote}    If I add the entry after obtaining the ssh-rsa using the command ssh-keyscan localhost it throws:  {quote}  org.mule.runtime.core.api.MuleRuntimeException: Error during login to alejandro@localhost.  2016-08-31 03:53:24,863 [[fb407c40-6f46-11e6-8f29-acbc32a683df].sftp-flow-create-directory.worker.01] ERROR org.mule.runtime.core.exception.DefaultMessagingExceptionStrategy -   ********************************************************************************  Message               : org.mule.runtime.core.api.MuleRuntimeException: Error during login to alejandro@localhost  Payload               : null  Payload Type          : null  Element               : org.mule.runtime.module.extension.internal.runtime.DefaultExecutionMediator$OperationRetryCallBack@1f147640 @ app  --------------------------------------------------------------------------------  Root Exception stack trace:  java.lang.ArrayIndexOutOfBoundsException: 222   at com.jcraft.jsch.Util.fromBase64(Util.java:52)   at com.jcraft.jsch.KnownHosts.setKnownHosts(KnownHosts.java:218)   at com.jcraft.jsch.KnownHosts.setKnownHosts(KnownHosts.java:54)   at com.jcraft.jsch.JSch.setKnownHosts(JSch.java:317)   at org.mule.extension.ftp.internal.sftp.connection.SftpClient.configureHostChecking(SftpClient.java:187)   at org.mule.extension.ftp.internal.sftp.connection.SftpClient.configureSession(SftpClient.java:170)  {quote}",Bug,Major,Closed,"2016-08-31 06:43:02","2016-08-31 05:43:02",8
Mule,"Fix Error API issues","We need to do a couple of improvements over the Error API in Mule:    - Make MuleEvent.getError() return optional instead of an Error. Since this API is not going to be expose through EL we can make it follow the general Optional rule.   - Rename ErrorType.getStringRepresentation() to ErrorType.getIdentifier()   - Remove every other method from ErrorType that is held by the MuleEvent since the user doesn't need to know about the parent or namespace.",Task,Critical,Done,"2016-08-30 21:10:02","2016-08-30 20:10:02",3
Mule,"FTP Extension: Write operation doesn't work using SFTP when the destination is a new file. It throws Found exception trying to obtain path... ","Trying to write using SFTP with Mac doesn't work if the file doesn't exist. It throws:  {quote}  ********************************************************************************  Message               : Found exception trying to obtain path /Users/alejandro/sftp-test/output/text.out.  Payload               : org.mule.extension.ftp.internal.sftp.SftpInputStream@92728f  Element               : /read-write-as-copy-config-local-to-local-sftp/processors/1 @ fb1a0d50-6eea-11e6-89d4-985aebc8e9b5  --------------------------------------------------------------------------------  Root Exception stack trace:  2: No such file   at com.jcraft.jsch.ChannelSftp.throwStatusError(ChannelSftp.java:2846)   at com.jcraft.jsch.ChannelSftp._stat(ChannelSftp.java:2198)   at com.jcraft.jsch.ChannelSftp._stat(ChannelSftp.java:2215)   at com.jcraft.jsch.ChannelSftp.stat(ChannelSftp.java:2172)   at org.mule.extension.ftp.internal.sftp.connection.SftpClient.getAttributes(SftpClient.java:114)  {quote}    *Steps to reproduce:*  * Start SFTP Server  ** Launch System Preferences and go to “Sharing”  ** Click on the checkbox next to “Remote Login” to enable SSH and SFTP  ** Check it is working with executing in the cosole sftp localhost.  * Use this config copied at the end of the ticket.   * Send a request to http://localhost:9090/read-write-like-copy-local-to-local-sftp    +*App to reproduce:*+      ",Bug,Blocker,Closed,"2016-08-30 21:09:44","2016-08-30 20:09:44",2
Mule,"User should not need to create a maven-module-mapping.properties to be able to run their extension tests","Users are forced to create a file named maven-module-mapping.properties to do a mapping or the artifact Id of the project and the name of the folder, even inside a single module project or if the name of the artifact and the folder is the same.      This file should not even exists in this scenario.",Bug,Critical,Closed,"2016-08-30 19:33:13","2016-08-30 18:33:13",0
Mule,"Remove HTTP parsing mechanism","Removing the set-attachment component from mule 4, there is no way to create a multipart payload. This means, for example, that a multipart request can't be generated.  We need to provide a way to create such a payload, considering all the set-attachment attributes (content type, name) but also filename and custom headers.  Now that operation UX is done we need to have a way of creating such payloads with DW.",Task,Blocker,Done,"2016-08-30 19:25:04","2016-08-30 18:25:04",8
Mule,"Review multipart implementation in HTTP","We need to check the implementation regarding the multipart payload to make sure nothing is missing and no irrelevant component remain.    After this is finished, we will be able to migrate MULE-10233 to 4.x.",Task,Blocker,Done,"2016-08-30 19:21:12","2016-08-30 18:21:12",5
Mule,"integrate exception strategies in mule application model to mule flow type checking fmwk","support for mule processors exception strategies on type system    ",Task,Major,Done,"2016-08-30 19:15:12","2016-08-30 18:15:12",13
Mule,"create operation model for all the operations not built with SDK","For all the core routers and operations we need to provide and OperationModel or ScopeModel that allow us describe it in order to make it work with the type system.    This can be prioritized based on the most used components.",Task,Major,Done,"2016-08-30 18:07:20","2016-08-30 17:07:20",13
Mule,"Default and ExpressionSupport Annotations are not persisted in the json when a Pojo field is not annotated with @Parameter","If your pojo has the following definition, the default and expression support information is lost:      We should either support this and process the annotation when the field only has setters and getters, or we should fail at compile time.",Bug,Major,Closed,"2016-08-30 18:06:32","2016-08-30 17:06:32",1
Mule,"Support configuration of maven repositories","The repository module allows to configure a set of maven repository URLs using a system property. We need to enhance that capability to accept more complex configuration including credentials to access external repositories.    This is to allow Mozart to configure, at mule runtime provisioning time, the maven repository to get the artifact from. Most likely there's always going to b e repository that is going to be Exchange but it may also be possible that per organization, there's a custom repository holding non-free dependencies.    This configuration must be provided at startup. It seems that a good option is to allow the configuration to be sent to the runtime as a configuration parameter and also using a file in /conf",Task,Major,Done,"2016-08-30 17:00:48","2016-08-30 16:00:48",4
Mule,"Provide REST service to download plugin/dependency into the runtime repository","This task is to create a REST service in the runtime to allow mozart to eagerly download a plugin/dependency into the runtime so whenever a test connectivity or datasense request is made using that dependency, the request is fullfilled much faster.",Task,Critical,Done,"2016-08-30 16:56:55","2016-08-30 15:56:55",4
Mule,"Support change of configuration during deployment","Support provisioning/replacement of configuration to the application when deploying.    When an application is getting promoted from one env to another (Dev -> QA or QA -> Prod), the devops need to be able to change connection provider configuration.    The idea is that the devops get a list of all the connection configurations and it's able to redefine the connection parameters during deployment.    This task is to define how the runtime manager (or any client) can get the set of connection providers that may require changing connection parameters and also to be able, during deployment, to provide those new parameters and the runtime must be able to apply them.",Task,"To be reviewed",New,"2016-08-30 16:37:06","2016-08-30 15:37:06",32
Mule,"Expose rest service to retrieve metadata over an application.","Define a REST endpoint in a Mule instance to post an application configuration plus the operation over the one the user is requesting to get DataSense information.",Task,Critical,Done,"2016-08-30 16:25:46","2016-08-30 15:25:46",8
Mule,"integrate routers and scopes in mule application model to mule flow type checking fmwk","mule processors including scope and router processors    ",Task,Major,Done,"2016-08-30 15:49:52","2016-08-30 14:49:52",13
Mule,"Classloading issue using extension extending from ExtensionFunctionalTestCase using HTTP connector","Consuming the HTTP connector from a test ends up in classloading issues throwing the following exception:        To try to workaround the issue, I edited the HttpConnector class, adding the HttpClient with the @Export annotation (making it visible in the plugin.properties as an exported package) but still got the same issue.    Code of the Java test      Code of the http-ext-integration-text.xml      Dependencies for the test I needed:  ",Bug,Minor,Closed,"2016-08-30 15:41:21","2016-08-30 14:41:21",2
Mule,"mule flow type checking fmwk - define semantic model for exceptions","- define semantic model (mule 4 app AST) and builder for mule 4 type system. [Link to prototype|https://github.com/mulesoft-labs/flow-typechecker/tree/poc-annotating_mule_with_types/mule-typechecking-api].  ",Task,Major,Done,"2016-08-30 15:05:35","2016-08-30 14:05:35",11
Mule,"mule flow type checking fmwk - define semantic model for routers and scopes","- define semantic model (mule 4 app AST) and builder for mule 4 type system. [Link to prototype|https://github.com/mulesoft-labs/flow-typechecker/tree/poc-annotating_mule_with_types/mule-typechecking-api].  ",Task,Major,Done,"2016-08-30 15:05:12","2016-08-30 14:05:12",11
Mule,"SAXParseException adding logger","When using a {{logger}} I get a SAXParseException, without the loggers the application gets deployed and works fine. To reproduce try to deploy the attached application.",Bug,Critical,Closed,"2016-08-30 14:36:10","2016-08-30 13:36:10",1
Mule,"Support boolean and Enums in MetadataKeyId parameter","Support boolean and Enums as MetadataKeyId parameter types.","Enhancement Request",Major,Closed,"2016-08-29 23:19:22","2016-08-29 22:19:22",5
Mule,"Support keyless metadata fetching","We should add support in the metadata mediator to get dynamic metadata without specifying a metadata key and removing the capability to get the static metadata that is not used by anyone and it's bounded in the extension model.  So the new metadata fetch without key should cover this 2 cases: * the key is required (has @MetadataKeyId) so default values should be used to build the key or if tehre are no default values to build the key the fetch *must* fail. * the key is not required  (operation without @MetadataKeyId) and the dinamic resolution should be done with the NullMetadataKey ","Enhancement Request",Critical,Closed,"2016-08-29 22:52:39","2016-08-29 21:52:39",5
Mule,"Implement support for error mapping and error type discovery","Implement support for error mapping and error type discovery",Task,Critical,Done,"2016-08-29 21:05:49","2016-08-29 20:05:49",8
Mule,"MuleArtifactClassLoader dispose fail","When trying to dispose a MuleArtifactClassLoader the method   #createResourceReleaserInstance fails due to a classcast exception.    This seems only to fail when creating the CL loader through MuleClassLoaderFactory     ",Bug,Major,Closed,"2016-08-29 21:01:40","2016-08-29 20:01:40",8
Mule,"Review possible flaky test or transformer problem","After introducing the test HttpMessageReceiver100ContinueTestCase I discovered that it fails only when HttpTransformersMule1815TestCase or HttpTransformersMule1822TestCase run before. And if executed multiple times, only the first run fails.  This is independent of the rest of the changes introduced to implement the tested functionality (i.e. the dependency or clean-up problem wasn't introduced by MULE-10356).  In the best case this could be a clean-up problem with the transformer tests, and in the worst case a bug in the transformers. Use this to reproduce:  {code:title=TestSuite.java|borderStyle=solid} @RunWith(Suite.class) @Suite.SuiteClasses({         // if any of these two are run, the first of the following series fails         HttpTransformersMule1815TestCase.class,         HttpTransformersMule1822TestCase.class,          HttpMessageReceiver100ContinueTestCase.class,         HttpMessageReceiver100ContinueTestCase.class,         HttpMessageReceiver100ContinueTestCase.class, })  public class TestSuite {  } {code}  Also, adding a logger at the end of the flow to http-receiver-100-continue-config-flow.xml fixes the issue.  Another way to make the test pass is adding a 500ms sleep after calling sendExpect100, which hints that there could be a problem with flushing or thread ordering.  Looking at the applyTransformers method didn't shed any light about the issue.",Task,Minor,New,"2016-08-29 16:23:50","2016-08-29 15:23:50",0
Mule,"Remove custom-exception-strategy element","Remove custom-exception-strategy element and default-exception-strategy. Since this is the last component that requires the old exception handling infrastructure, as part of this task we also need to remove all of that code.",Task,Critical,Done,"2016-08-29 15:02:53","2016-08-29 14:02:53",0
Mule,"FTP Extension: ftp create dir or sftp in general without the working dir field throws NPE. ","FTP Extension: using a ftp config without the working directly field throws NPE. It should default to server default for that user.     *Steps to reproduce FTP (works fine):*  * create app with ftp config without workdir.   * Send a http request http://localhost:9090/read-write-like-copy-remote-local-to-server-sftp:        ----  *Steps to reproduce SFTP:*  * Send a http request http://localhost:9090/cant-obtain-write-path  * This exception will appear:    {quote}  ********************************************************************************  Message               : Found exception trying to obtain path /Upload/text.out.  Payload               : org.mule.extension.ftp.internal.ftp.ClassicFtpInputStream@9bdf14a  Element               : /read-write-as-copy-config-remote-local-to-server-sftp/processors/1 @ a0907800-7c4c-11e6-b531-985aebc8e9b5  --------------------------------------------------------------------------------  Root Exception stack trace:  2: No such file.   at com.jcraft.jsch.ChannelSftp.throwStatusError(ChannelSftp.java:2846)   at com.jcraft.jsch.ChannelSftp._stat(ChannelSftp.java:2198)   at com.jcraft.jsch.ChannelSftp._stat(ChannelSftp.java:2215)   at com.jcraft.jsch.ChannelSftp.stat(ChannelSftp.java:2172)   at org.mule.extension.ftp.internal.sftp.connection.SftpClient.getAttributes(SftpClient.java:114)   at org.mule.extension.ftp.internal.sftp.command.SftpCommand.getFile(SftpCommand.java:48)   at org.mule.extension.ftp.internal.ftp.command.FtpCommand.getFile(FtpCommand.java:66)   at org.mule.extension.ftp.internal.sftp.command.SftpWriteCommand.write(SftpWriteCommand.java:52)   at org.mule.extension.file.common.api.AbstractFileSystem.write(AbstractFileSystem.java:116)   at org.mule.extension.file.common.api.StandardFileSystemOperations.write(StandardFileSystemOperations.java:171)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:498)  {quote}      ----  *Steps to reproduce SFTP:*  * Using the same config but changing the SFTP connection:       * Send a http request http://localhost:9090/read-write-like-copy-remote-local-to-server-sftp  * This exception will appear:  {quote}  2016-08-29 20:03:18,834 [[bacdc740-6e3c-11e6-973e-985aebc8e9b5].read-write-as-copy-config-remote-local-to-server-sftp.worker.01] ERROR org.mule.runtime.core.exception.DefaultMessagingExceptionStrategy -   ********************************************************************************  Message               : Exception occurred while trying to change working directory to null.  Element               : /read-write-as-copy-config-remote-local-to-server-sftp/processors/1 @ bacdc740-6e3c-11e6-973e-985aebc8e9b5  --------------------------------------------------------------------------------  Exception stack is:  Exception occurred while trying to change working directory to null. (org.mule.runtime.core.api.MessagingException)    com.jcraft.jsch.ChannelSftp.remoteAbsolutePath(ChannelSftp.java:2916)    com.jcraft.jsch.ChannelSftp.cd(ChannelSftp.java:339)    org.mule.extension.ftp.internal.sftp.connection.SftpClient.changeWorkingDirectory(SftpClient.java:100)    org.mule.extension.ftp.internal.sftp.connection.SftpFileSystem.changeToBaseDir(SftpFileSystem.java:98)    org.mule.runtime.module.extension.file.api.StandardFileSystemOperations.write(StandardFileSystemOperations.java:165)  {quote}    +*In the case of the FTP create directory*+  {quote}  2016-09-03 02:35:48,074 [[41723430-7198-11e6-93b2-0a0027000000].flow-copy-prepare-environment.worker.01] ERROR org.mule.runtime.core.exception.DefaultMessagingExceptionStrategy -   ********************************************************************************  Message               : null.  Payload               : null  Payload Type          : null  Element               : /flow-copy-prepare-environment/processors/0 @ 41723430-7198-11e6-93b2-0a0027000000  --------------------------------------------------------------------------------  Root Exception stack trace:  java.lang.NullPointerException   at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)   at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)   at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)   at java.nio.file.Paths.get(Paths.java:84)   at org.mule.extension.ftp.internal.ftp.command.FtpCommand.createDirectory(FtpCommand.java:167)   at org.mule.extension.ftp.internal.ftp.command.FtpCreateDirectoryCommand.createDirectory(FtpCreateDirectoryCommand.java:34)   at org.mule.runtime.module.extension.file.api.AbstractFileSystem.createDirectory(AbstractFileSystem.java:152)   at org.mule.runtime.module.extension.file.api.StandardFileSystemOperations.createDirectory(StandardFileSystemOperations.java:325)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:498)  {quote}  ",Bug,Critical,Closed,"2016-08-29 14:25:28","2016-08-29 13:25:28",1
Mule,"Declare the exception mappings for every component once the extension model is part of core.","Once the extension model, or a part of it, is part of the core, we need to add the logic to introspect all the extension models present in the application and create the error mappings between exceptions and error types",Task,Critical,New,"2016-08-28 02:54:52","2016-08-28 01:54:52",8
Mule,"Add support for excluding a type from top level element support","As  a connector developer, I'd like to disable the generation of top level elements for a given type.","Enhancement Request",Critical,Closed,"2016-08-26 19:33:47","2016-08-26 18:33:47",8
Mule,"Code formatter improvements","Requested improvements over the formatter:    * Bigger line width. Optimize for coding experience instead of PR reviewing experience.  * Enums (E.g: org.mule.extension.db.api.param.JdbcType)  * Respect user indentation: The following lambda is manually formatted by the developer to make it more clear:    * When the formatter runs, it puts all the statements at the same level making it harder to read, even though the author gave all his love to make it more readable  * Increase margin, padding or whatever you want to call it  * It'd be great if it could be smarter regarding methods with long argument lists. For example, instead of:    I'd like it to format as:      * Formatter should automatically join split lines if the fit in the max line width.  * Align by margin instead of parenthesis    * Add braces to single line if/else/while bodies,","Enhancement Request","To be reviewed",Open,"2016-08-26 17:36:49","2016-08-26 16:36:49",4
Mule,"Add support for proxys in SFTP connector (for 4.x)","The current SFTP connector does not offer proxy support out-of-the-box. It would be nice to be able to configure a proxy via attributes in the connector similar to the following:  <ftp:sftp-connection proxyHost=$  {PROXY_HOST}   proxyPort=$  {PROXY_PORT}   ....  Then in the SFTPClient class, within the login(String user, String identityFile, String passphrase) method, simply use the attributes set in the connector and use jsch to set a proxy like the following after getting the jsch session:  session.setProxy(new ProxySOCKS5(proxyHost, proxyPort));","Enhancement Request",Major,Closed,"2016-08-26 16:09:52","2016-08-26 15:09:52",5
Mule,"Notifications must contain the path of the processor and the correlation","Correlation refers to the object that contains the sequence number and size.    This should apply, at leat, to the following notifications:    |AsyncMessageNotification     |Object (MuleEvent)  |ComponentMessageNotification |MuleMessage  |EndpointMessageNotification  |MuleMessage  |EventNotification            |MuleEvent  |ExceptionNotification        |Object (MessagingException)  |ExceptionStrategyNotification|Object (MuleEvent)  |PipelineMessageNotification  |Object (MuleEvent)  |TransactionNotification      |Object (MuleEvent)  |ConnectorMessageNotification      |Object (MuleEvent)",Task,Blocker,Done,"2016-08-26 16:00:55","2016-08-26 15:00:55",4
Mule,"HTTP Oauth2 token manager support should be improved","Consuming the oauth module when the API slightly different to the regular standard might be harsh to understand, ending in debugging the java mule-module-oauth component to truly understand what's happening.    Such usability issues are (there might be more):  1) if the *refreshToken* is missing in the *oauth2:token-response* the application fails at start up (some APIs do not invalidate their tokens, thus refreshing is useless)  2) if, for some reason, there's a need to access the already obtained access token, the oauth2 module requires me to pass a *tokenManager-ref* although I do not necessarily have the need to redefine anything on the object store. Just accesing the access token.  3) this is higly related to *2)*, where some times the obtained token must go in a different header than the *Authorization * one, or change the *Bearer * name for something else. Taking Slack API, the obtained token must go as a query parameter named token, to achieve it I need to implement the following app (ideally, accessing the access token should be simpler, as I already know which *http:requester-config* I'm working with):      4) is quite common to fail hard when understanding APIs, specially when trying to consume those that relies on OAuth to authenticate with. It will be nice to have a safety relay -like, where the first time authenticating and trying to extract the access token, besides showing how your MEL expression failed it also shows the *complete* body's response, so that the developer could quickly understand that maybe the ID is wrong, the MEL is wrong, or anything else.    ",Task,Critical,Done,"2016-08-26 00:08:02","2016-08-25 23:08:02",0
Mule,"Debugging support for operations","Once an operation is expanded into the mule application, a new chain will be defined to contain part of the original structure (see MULE-10353) and support scoping.    Besides that, the chain will have to support runtime-debugging capabilities which might imply some changes in the current model consumed by other parties (such as the tooling).     Today, the API is held by org.mule.runtime.core.api.construct.MessageProcessorPathResolver which returns a String. That might not be strong enought when using operations of a given module, as we want to be sure the tooling knows which flow/operation is calling.     Other API to see if it fits for the new chain (defined in MULE-10353) is org.mule.runtime.core.context.notification.MessageProcessorNotification",Task,"To be reviewed",Done,"2016-08-25 23:37:38","2016-08-25 22:37:38",0
Mule,"HTTP requester should support reconnection strategy","When implementing/thinking MULE-10359, it has to be taken into account that it would be ideal to have a way to force a reconnection/session-refresh when the API returns an specific error value.    If that applies, then the current session should be destroyed and regenerated",Task,"To be reviewed",Done,"2016-08-25 23:27:34","2016-08-25 22:27:34",0
Mule,"HTTP requester should support custom authentication","The <http:requester-config> provides a set of possible authentication mechanisms: oauth2, basic, NTLM, etc., but none of them is session based, which is where most of connectors rely nowadays.    Several APIs have a similar handshake to start communicating with them successfully:   1) hit a dedicated endpoint to obtain a session (and sometimes other parameters such as production URLs)  2) for every subsequent hit, each request has to be signed somehow in either the headers or the body  3) if the session is invalidated, then refresh it.    Today, the way the http requester supports multiple authentication mechanisms are based on the `org.mule.extension.http.api.request.authentication.HttpAuthentication#authenticate(MuleEvent, HttpRequestBuilder)` Java API. Ideally, if we provide a DSL for using custom authentication, several APIs could be handled out of the box with the requester-config.","Enhancement Request","To be reviewed",Open,"2016-08-25 23:12:45","2016-08-25 22:12:45",0
Mule,"Group support for properties","There will be cases where for the same API different parametrization will be a nice to have, such as: oauth + basic auth for Salesforce API.    For those cases, the properties of a <module> should support different constructors from within a config element allowing different expansions of an app.    Suggested code for a module:        And to use it in a mule app, it should be something like:  ",Task,"To be reviewed",Done,"2016-08-25 22:50:18","2016-08-25 21:50:18",0
Mule,"Http inbound endpoint returns additional headers in 100 Continue response","The HTTP inbound endpoint incorrectly handles Expect: 100-continue because it adds additional headers that make some clients fail (like AsyncHttpClient).    Current response (wrong):  HTTP/1.1 100 Continue  Content-Type: text/plain  Content-Length: 0  Connection: close    Expected response (right):  HTTP/1.1 100 Continue",Bug,Major,Resolved,"2016-08-25 22:27:08","2016-08-25 21:27:08",0
Mule,"Implement the dependencies graph for modules","Due to the fact that <module> works with templating, it's not possible to expand circular dependencies. This imply that if a module A depends on B, and B on A, it's not possible to generate an expanded mule application out of it.    If this case happens, then the application must fail during start up explaining the cycle issue.",Task,Blocker,Done,"2016-08-25 22:12:46","2016-08-25 21:12:46",0
Mule,"Make HttpClient Startable instead of Initialisable to match Stoppable","HttpClient is now initialisable and stoppable, which causes a flow stopped and started to fail since the http client is not recreated but it is stopped.",Bug,Major,Closed,"2016-08-25 19:51:14","2016-08-25 18:51:14",0
Mule,"WSC Should use http requester to resolve WSDL if specified.","The WS Consumer doesn't use the TLS configuration of the HTTP requester because it uses the Java Classes directly instead of the Mule Implementation.     ","Enhancement Request",Blocker,Closed,"2016-08-25 19:04:11","2016-08-25 18:04:11",13
Mule,"Support expression for response parameters in sources","MULE-9864 had to be done as a workaround since right now it is not possible to have parameters in a source that support expressions.   Though it may make sense for parameters that are required when generating a message, when the response makes it back to the source (assuming the source handles responses) there is a MuleEvent to evaluate expressions against. Thus it does make sense that some of the parameters (the ones used to define a response, for example) support expressions.  Another option would be to generate child support for Functions, since those are allowed but a combination of a Map and a Function<MuleEvent, Map> must be used now to supports children and expression.  ","Enhancement Request",Critical,Closed,"2016-08-25 14:02:17","2016-08-25 13:02:17",13
Mule,"Generics are not resolved for Map implementations","There's a limitation in the current HTTP request builder (HttpRequesterRequestBuilder) regarding being able to set multiple values for headers or query params. In order to accomplish that, those parameters would need to be defined as ParameterMap instead of the current Map<String, String>.   The problem is that ParameterMap implements interface HttpParameters which in turn implements Map<String, String> so the generics are not available in the class itself. This causes the schema builder to only generate expression support for that dictionary type but no child support.  The generics should be lookup further IMO since then custom collections will not be fully supported.",Bug,Major,Closed,"2016-08-25 13:49:36","2016-08-25 12:49:36",4
Mule,"Upgrade woodstox to 5.0.4","Upgrade to woodstox 5.0.4, which contains the fix for https://github.com/FasterXML/woodstox/issues/21 and https://github.com/FasterXML/woodstox/issues/22",Task,Major,Done,"2016-08-24 19:26:16","2016-08-24 18:26:16",0
Mule,"Define API for bindings between mule and EL","Define API for bindings between mule and EL ",Task,Critical,Done,"2016-08-23 22:24:51","2016-08-23 21:24:51",8
Mule,"Add support to define the placement order of groups","*Add support to define the placement order of groups*    * Nowadays the the {{@Placement}} annotation gives the possibility of define the order of a parameter inside a certain group, but there is no possibility to order the groups themselves.  * Add support to be able to define the order between groups.   ","Enhancement Request",Major,Closed,"2016-08-23 21:43:41","2016-08-23 20:43:41",3
Mule,"Replace Function<MuleEvent, T> with a better abstraction","This feature collides a little bit with LITERAL expression support, which ends up requiring the user to know about the ExpressionManager and the MuleEvent.    Provide a better API for doing that, one that is:    * A top level object, which is capable of evaluating the expression and returning its literal value  * Replaces ExpressionSupport.LITERAL  * Less verbose  ","Enhancement Request",Critical,Closed,"2016-08-22 20:37:42","2016-08-22 19:37:42",5
Mule,"Create a build tool to run formatter over all the projects","Create an script to run the formatter maven goal over all the maven artifacts in the project.",Task,Critical,Done,"2016-08-22 16:02:12","2016-08-22 15:02:12",3
Mule,"SchemaBuilder wrongfully adds stuff when operation has a group","Look at the XSD generated for the stored-procedure operation of the new DB connector. All the ParameterGroup elements are both as flattened attributes and child elements, as if they were pojos",Bug,Major,Closed,"2016-08-19 23:52:20","2016-08-19 22:52:20",5
Mule,"Complete spec/analysis and perform any updates to id/correlationId work in M3","Complete spec/analysis and perform any updates to id/correlationId work in M3",Task,Critical,Done,"2016-08-19 20:09:10","2016-08-19 19:09:10",5
Mule,"Provide a way to identify a subtitution group for a parameter and subtypes mapping when using the DslElementSyntax","When generating the editors.xml for an extension that has a subtype mapping, or extensible elements, there is no way to identify the element associated group in order to allow other extensions to contribute to the element.    If you use the get the dsl for a base type, it has the element name of something that doesn't exists in the XSD and that it can conflict with a parameter model name.    Check extension: https://github.com/mulesoft/mule-tooling-mock-connector/tree/mule-4.x/extension-with-subtypes","Enhancement Request",Critical,Closed,"2016-08-19 18:38:16","2016-08-19 17:38:16",5
Mule,"Invalid extension can be packaged when an operation has the same name as a POJO","When an extension has an operation with the same name as a POJO (ignoring case) and that POJO is used as an argument of the operation, the extension can be packaged, but it should fail because a Mule app with this extension fails when deployed.    This is the signature of the failing method:      And this is the Mule exception:        The source code to reproduce this issue is [here|https://github.com/fbarrios/success-factors-connector/tree/40c2810a0406c75fee7e2059c9ab1a1dba55798c].",Bug,Major,Closed,"2016-08-19 17:57:42","2016-08-19 16:57:42",5
Mule,"Define handlers reutilisation (refs)","We need to define and provide a way for handler to be reused.  This includes deciding whether only whole error-handlers or even on-error components can be referenced.  This should allow us to get rid of the reference exception strategy.",Task,Critical,Done,"2016-08-19 14:36:49","2016-08-19 13:36:49",5
Mule,"basic mule flow type checking tooling","basic mule flow type checking tooling (ie: console)",Task,Major,New,"2016-08-19 04:11:36","2016-08-19 03:11:36",7
Mule,"integrate basic mule application model to mule flow type checking fmwk","basic constructs  -   basic mule apps  - Decouple ApplicationModel generation from the runtime - Should be possible generate even if the XML is not semantically correct  - Decouple ExtensionModels generation from the runtime  - Consume Type Checking semantic model API  support untyped legacy flows  - message source signature from SourceModel to mule type system AST  ",Task,Major,Done,"2016-08-19 04:10:11","2016-08-19 03:10:11",21
Mule,"Add option to disable internal entity expansion in XML (leads to DoS)","Internal entity expansion in XML allows the following DoS attack in the XSLT component: https://en.wikipedia.org/wiki/Billion_laughs    Like in MULE-7390 the solution would involve adding a parameter to disable entity expansion.",Bug,Major,Closed,"2016-08-18 21:27:12","2016-08-18 20:27:12",0
Mule,"Extensions Parser fails to load pojos declared as top element if the pojo is only used as value of  Map","The Extension parsers fails to load a global Pojo, when the pojo is only used as the value of a map.    The XSD element exists, but you get the following error:    The parameter looks like    The mule app is:    The pojo used for test:  ",Bug,Major,Closed,"2016-08-18 17:58:30","2016-08-18 16:58:30",5
Mule,"Define and implement MuleEventBuilder API","Define MuleEventBuilder API",Task,Critical,Done,"2016-08-18 16:51:22","2016-08-18 15:51:22",5
Mule,"ArtifactClassLoaderRunner - Support for testing transports from compatibility plugin","Add support for classifying transports as plugins in order to allow testing them with isolation before they are assembled to the compatibility plugin.","Enhancement Request",Major,Closed,"2016-08-18 16:50:14","2016-08-18 15:50:14",1
Mule,"ArtifactClassLoaderRunner - As maven dependency graph could generate loops between dependencies this should be handled while resolving dependencies","When testing the runner from external extensions there was a loop created by the dependency graph maven plugin when jaxen artifact was having a link to itself. These scenarios should be avoided when reading the graph generated by the plugin.  Add a way to handle this cases and log a warn message.",Task,"To be reviewed",Done,"2016-08-18 16:47:09","2016-08-18 15:47:09",2
Mule,"Remove MuleEvent dependency on FlowConstruct.","Maybe move it to the execution context?",Task,Major,Done,"2016-08-18 16:38:58","2016-08-18 15:38:58",13
Mule,"Deploy applications in parallel","Mule application deployment is done sequentially, this means that one application is deployed (installed, initialized, started) before any other app is deployed.   Some applications can take a lot of time to deploy because the usage of components that require initializing many things, or just because the config XML is huge.  When there are many applications deployed in the same container, the time required to start all of them is significative. Making the deployment parallel would help to reduce the required time.","Enhancement Request",Critical,Closed,"2016-08-18 16:30:31","2016-08-18 15:30:31",13
Mule,"Remove event.getMuleContext() dependency from flow statistics","Remove event.getMuleContext() dependency from flow statistics",Task,Major,Done,"2016-08-18 16:30:30","2016-08-18 15:30:30",5
Mule,"Remove event.getMuleContext() dependency from exception creation","Remove event.getMuleContext() dependency from exception creation",Task,Major,Done,"2016-08-18 16:30:05","2016-08-18 15:30:05",5
Mule,"target attribute accepts expressions","when the SDK automatically adds the target parameter, it accepts values such as #[flowVars.pepe]. It should not. It should verify that it's not an expression. it should also validate that it doesn't start with the flowVars. prefix either",Bug,Major,Closed,"2016-08-18 16:10:41","2016-08-18 15:10:41",3
Mule,"Support TypeConverters on simple type child elements","We need to define a mechanism that complex elements that resolve to simple types can have a type converter.",Task,Critical,Done,"2016-08-18 15:45:13","2016-08-18 14:45:13",5
Mule,"Migrate test for chunked transfer with content length (MULE-9737) to 4.x","Migrate test for chunked transfer with content length (MULE-9737) to 4.x  ",Task,Major,New,"2016-08-18 15:44:48","2016-08-18 14:44:48",8
Mule,"Migrate core filters to new parsing mechanism","Migrate core filters to new parsing mechanism",Task,Blocker,Done,"2016-08-18 15:42:16","2016-08-18 14:42:16",4
Mule,"Modify the event to support parametrization","Current mule event holds information just for the flow variables which won't be enough to represent the new <operation>s parametrization.  When call calling <operation>s those parameters must live in a different working space so that can be consumed independently from flow variables (such as: debugging, expression languages, and any other).      ",Task,Critical,Done,"2016-08-18 15:37:20","2016-08-18 14:37:20",0
Mule,"Expressions not evaluated on @Text parameters","When a parameter is annotated with @Text, the value is always assigned as is, without expression evaluation",Bug,Major,Closed,"2016-08-18 06:32:21","2016-08-18 05:32:21",1
Mule,"Stack overflow in DslSyntaxResolver when indirect cyclic reference found","Consider the following classes:        DslSyntaxResolver contains logic to control composite relationships in a class. However, when that cycle is implemented through a parameter group, it is not detected and a StackOverflow arises",Bug,Major,Closed,"2016-08-18 05:21:52","2016-08-18 04:21:52",8
Mule,"@Expression has no effect when used in abstract parameter group","Given the following classes        When using the Concrete class as a parameter, the text field expression is resolved even though marked as literal.             ",Bug,Major,Closed,"2016-08-18 05:18:41","2016-08-18 04:18:41",8
Mule,"@Text has no effect when applied to a parameter group in abstract class","Given the following classes        When using the Concrete class as a parameter, the text field translates into the DSL as an attribute instead of an element. If Base were no longer abstract and used instead, then the text field behaves as expected          ",Bug,Major,Closed,"2016-08-18 05:17:12","2016-08-18 04:17:12",2
Mule,"Add error support in HTTP","We need to use the error message of the error field to hold the response message of an http:request that failed because of an invalid status code.  We also need to make sure that the errors we create are interpreted by the listener.",Task,Blocker,Done,"2016-08-17 20:36:57","2016-08-17 19:36:57",4
Mule,"Create MuleEvent error field","Define the new field within the MuleEvent to hold the error data field  This also involves:   - Take into account i18n   - Define exception type that may hold the error message so it can be used when the error field gets created.",Task,Blocker,Done,"2016-08-17 20:35:11","2016-08-17 19:35:11",8
Mule,"Define API to consume operations error types for DataSense","This involves:   - Process the flow configuration to gather all possible error types   - Provide an API to introspect which are the possible error types thrown by a flow / message processor (required for the error mapping capabilities)   - Process the error-handler to define which are the possible propagates error types to be thrown (useful for knowing the error types of a flow-ref).   - Expose this API through the agent.",Task,Blocker,New,"2016-08-17 20:28:43","2016-08-17 19:28:43",16
Mule,"Implement error mappings for message processors","All message processor must be allowed to define an error mapping, meaning when some error occurs, the actual type is a customised one:      To map any errors one could use ANY as sourceType or omit the sourceType attribute altogether.    Notice that this should also include allowing the on-error-propagate component to declare an error mapping for the re-thrown error.",Task,Major,Done,"2016-08-17 20:26:08","2016-08-17 19:26:08",8
Mule,"Include exception mapping mechanism in HTTP","The HTTP service/module/extension needs to declare mappings for each status code error, so as to know which code to send.",Task,Critical,Done,"2016-08-17 20:18:06","2016-08-17 19:18:06",5
Mule,"Move extension model to the runtime so it can be used to describe any extension.","We want to move part of the extension model to the Mule API since we need a mechanism to describe the different components that can be use in a mule application. This components descriptors will help us have a simpler interaction between mule and tooling and will also allow us to get information from an application just from parsing the configuration and using the descriptors like doing type checks at design time.    We want descriptors mainly for:   - Global elements   - Operations - simple message processors that execute a single action   - Routers   - Scopes   - Transformers    Descriptors will contain information about the parameters types of the operations, the return types and also if they reference other global elements in the configuration.    Use cases:    - Tooling XML writing         By providing information with the component describer on what are the possible parameters and how the component can be serialized in XML we have a mechanism for tooling to know how to deal with every component, show an editor for it, and write it to XML.         By providing information with the parameters that may reference global elements, and the type of those global elements, the tooling can know which are the possible global elements that may be referenced from a reference parameter.    - XML validation         Validations             - We can validate in design time the values provided for the parameters by the user. For instance, if the user configured an expression over an attribute that do not accepts expressions the we can validate it. Or if the user is referencing a global element that does not match the required type then we can validate it.         Type checking             - By having all the expected parameter types and the output types provided by then and propagation rules we can do type checking on design time. This also required type inference from the EL used to get the return type of an expression where the input type is known.",Task,Blocker,Done,"2016-08-17 20:17:10","2016-08-17 19:17:10",8
Mule,"Add support to be able to add restriction to parameters values","*Add support to add restriction to parameters values*    * When receiving an *Number* parameter in most cases that value should be restricted to the useful numbers, example:  ** *HTTP Connector Port*: 0 and 65535  ** *Anypoint MQ - Fetch size*: 1-10  ** etc...    * Also this can be made for *String* parameters, where a regex can be placed to validating that the input is correct, for example, for an email or a URL.    * This feature is UI focused and is really important to communicate with out reading a documentation, and more important with out running the mule app, if the configured values is correct or not.","Enhancement Request",Major,Closed,"2016-08-17 20:13:22","2016-08-17 19:13:22",8
Mule,"Include the exception mapping mechanism to all modules that require it","Each module that requires to define exception mappings will need to implement a provider.",Task,Critical,Done,"2016-08-17 20:11:36","2016-08-17 19:11:36",16
Mule,"Define and implement mechanism to declare exception mappings per module","We must define and implement a way for modules to declare exception mappings (e.g. via a provider) that the error type inference interceptor can get when a given message processor fails with an exception to determine the error type.",Task,Critical,Done,"2016-08-17 20:09:00","2016-08-17 19:09:00",8
Mule,"Proxy Authentication Header is not included when using proxy for HTTPS target server","When using HTTP Requestor with Proxy for HTTPs protocol, the Proxy Authentication is not included.  https://github.com/AsyncHttpClient/async-http-client/issues/1152    This is an issue reported in AHC and fixed in 1.9.39. MULE-10165 upgraded AHC so this issue will include a test in Mule to verify that the issue is fixed.",Bug,Major,Closed,"2016-08-17 20:01:47","2016-08-17 19:01:47",0
Mule,"Allow to define message-redelivery element within any SDK source","We need the SDK to allow inside ANY message source a message-redelivery element (with the same structure as today's idempotent-message-redelivery). The SDK does not need to do any processing with it. The runtime will enforce the required behaviour",Task,Critical,Done,"2016-08-17 19:43:37","2016-08-17 18:43:37",1
Mule,"Define common error types and create mapping for internal exceptions within core","We need to:   - Define the set of common errors thrown by the runtime   - Define the logic to map the internal processor exceptions to the common errors types   - Execute the mapping logic before invoking the error handler (done in MULE-10376)   - Move MessagingException away from the API (done in MULE-10376)   - Change Error handlers to receive always a MessageException (done in MULE-10262)",Task,Critical,Done,"2016-08-17 19:41:15","2016-08-17 18:41:15",13
Mule,"Create scope for error handling + transactions","This is to:   - Rename transactional element to the new name for the error-handling + transaction scope   - Rename transactional attribute configuration.   - Rename all test cases",Task,Critical,Done,"2016-08-17 19:28:28","2016-08-17 18:28:28",5
Mule,"Implement message redelivery support","This is to:   - Rename idempotent-redelivery-policy to redelivery-policy   - Process placeholder for redelivery-policy inside message source so it's part of the flow chain   - Create REDELIVERY_EXHAUSTED error type   - Migrate existing test cases.",Task,Critical,Done,"2016-08-17 19:20:42","2016-08-17 18:20:42",5
Mule,"Allow to enable/disable stack trace during error logging","This is to rethink error logging configuration and make changes based on the new capability to enable/disable logging of stack traces.",Task,Blocker,Done,"2016-08-17 19:14:29","2016-08-17 18:14:29",4
Mule,"Include error type attribute into on-error handlers","This is just to include the error type parameter with an UNKNOWN error type and be able to filter using it.",Task,Critical,Done,"2016-08-17 19:11:56","2016-08-17 18:11:56",3
Mule,"Refactor exception strategies to new error handling semantics","This task includes:   - Refactor choice-exception-strategy to error handler   - Refactor catch-exception-strategy to error-handler + on-error-continue   - Refactor rollback-exception-strategy to error handler + on-error-propagate: This task does not include get rid of <on-redelivery-attempts-exceeded>     This task does not include also changing any configuration parameter from existing exception strategies.",Task,Critical,Done,"2016-08-17 19:07:51","2016-08-17 18:07:51",8
Mule,"Add endpoint for retrieving keys by config or resolver ","Provide the capability for retrieving all the MetadataKeys associated to a config or resolver.","Enhancement Request",Critical,Closed,"2016-08-17 17:50:35","2016-08-17 16:50:35",13
Mule,"Add DSQL into the SDK.","Add the necessary mechanism to the SDK in order to handle DSQL queries on extensions     Full feature specification can be found [here|https://docs.google.com/document/d/11MvxHPCtKHZl5BJw8EM8lAhtAYpO16c8YSKFXJTBGOs/edit#]","Enhancement Request",Critical,Closed,"2016-08-17 17:47:47","2016-08-17 16:47:47",13
Mule,"Cannot access test classes when running isolated tests","Consider the SelectStoreProcedureTestCase in the DB extension. It doesn't work because the classloader can't find a class in which the store procedure is implemented. There should be a way to make utility classes available.",Bug,Major,Closed,"2016-08-17 17:27:03","2016-08-17 16:27:03",0
Mule,"@ParameterGroup doesn't work on abstract pojos","If a pojo is used as a parameter and such pojo has a parameterGroup on a parent abstract class, then such parameterGroup is not injected.",Bug,Critical,Closed,"2016-08-16 18:15:31","2016-08-16 17:15:31",5
Mule,"InterceptingCallback implementation with out generic as return type of an operation produces an ArrayOutOfBoundException when describing an Extension","*InterceptingCallback implementation with out generic as return type of an operation produces an ArrayOutOfBoundException when describing an Extension*    Having a {{InterceptingCallback}} implementation like :      Will produce an ArrayOutOfBounds exception when describing the annotated extension. This occurs in the {{IntrospectionUtils#unwrapInterceptingCallback}} when tries to get the generic value of the {{InterceptingCallback}}",Bug,Major,Closed,"2016-08-16 15:34:42","2016-08-16 14:34:42",3
Mule,"Define packaging and distribution mechanism for modules and SDK connectors","From a user POV, working with a module or an SDK connector should be the same. That includes the way of discovering it and install it into Studio.    To do so, we need an API on Exchange to define how should them be shipped, and later be located by our tooling to later be installed in a consistent way.    We might also need to define how the SDK components and module components are placed into a mule app (today, SDK components go in the /plugins folder, which *might* change in a near future)",Task,Major,Done,"2016-08-16 15:28:18","2016-08-16 14:28:18",0
Mule,"Migrate components to use new parsing mechanism","Migrate components to use new parsing mechanism",Task,Critical,Done,"2016-08-16 14:55:42","2016-08-16 13:55:42",8
Mule,"Move META-INF generated folder and content from folder /classes to /generated-sources","Right now we are generating all the XSD and resources of the extension under the folder {root}/target/classes.     For IDEs to work correctly and out of the box, generated sources should always go to {root}/target/generated-sources.    This makes the development of mule app for testing for the extensions much easier since the XSD are recognized automatically allow you ot use the autocompletion.    We need to move the location were the files is generated, but without changing the current way we package the extensions.","Enhancement Request",Minor,Closed,"2016-08-12 18:55:06","2016-08-12 17:55:06",5
Mule,"Subtypes cannot be parsed as top level elements","Subtypes pojos not always find their way into a top level element parser",Bug,Critical,Closed,"2016-08-12 17:24:16","2016-08-12 16:24:16",1
Mule,"ExtensionsFieldHandler does not consider ParameterGroups","ObjectType does not contain the fields which should be derived from a ParameterGroup annotation",Bug,Blocker,Closed,"2016-08-12 16:25:13","2016-08-12 15:25:13",1
Mule,"Some http config parameters should move to the ConnectionProvider","Things like user/pass authorization are currently on the request config element, which will make it impossible to manage through the connectivity service.Those should move connection provider.    It would also be good to have a general review of all attributes to make sure that we're not missing anything else.",Bug,Blocker,Closed,"2016-08-12 15:53:16","2016-08-12 14:53:16",3
Mule,"Get rid of SimpleRegistry from Mule","We need to get rid of the SimpleRegistry that is no longer needed. To do so we also need to consolidate test using AbstractMuleContextTestCase to use the spring mechanism to create the MuleContext.    While the SimpleRegistry is later consolidated into the SpringRegistry it's causing issues since, for instance, is making transformers to be registered twice in the transformer graph. This is because the transformer is registered when a transformer is registered as an object intante in the SimpleRegistry but later the SpringRegistry creates a ConstantFactoryBean from it an when it does post processing of beans it registers the transformer twice.    This is avoid currently by checking duplicates object in the post processing of registered objects which is not the right way to do it.",Task,Major,Done,"2016-08-12 14:59:35","2016-08-12 13:59:35",0
Mule,"CXF components will throw a NPE when added after WMQ or AMQP inbound endpoints","CXF components will throw a NPE when added after WMQ or AMQP inbound endpoints.  The org.apache.cxf.binding.soap.SoapTransportFactory#getDestination() method only recognize the http and jms protocols.  Endpoint URL protocol need to be replaced with http:// to works properly.  org.mule.module.cxf.builder.AbstractInboundMessageProcessorBuilder#getAddress() method already uses http as default protocol.    Pull request to fix the issue submitted. Link below:  https://github.com/mulesoft/mule/pull/2631",Bug,Minor,Closed,"2016-08-11 20:03:15","2016-08-11 19:03:15",1
Mule,"Move services from launcher to a new services module","MULE-9752 define the concept of services for the Mule Container. This code was implemented inside mule-module-launcher, this issue is about moving out that code to a new mule-module-services so it can be used from other modules.","Enhancement Request",Major,Closed,"2016-08-11 19:09:34","2016-08-11 18:09:34",2
Mule,"TypeAliasAnnotation value is populated with the wrong value","When using subtypes, the TypeAlias value generated for pojos that don't use the @Alias doesn't have the expected value.    For a pojo with name *Book*, the value should be *book*  For a pojo with name *BasePojo*, the value should be *base-pojo*    Check the extensions located at https://github.com/mulesoft/mule-tooling-mock-connector/tree/mule-4.x/extension-with-subtypes  ",Bug,Blocker,Closed,"2016-08-11 18:56:28","2016-08-11 17:56:28",5
Mule,"Move core components that may be revamp within 4.x lifetime to another module","We need to define the set of components that we have in core that we would like to revamp within the mule 4.x series. There may be different modules, not just one.",Task,Blocker,Done,"2016-08-10 20:18:58","2016-08-10 19:18:58",4
Mule,"Migrate File transport parsing to new method","Migrate the file transports BDP to the new definitions",Task,Blocker,Done,"2016-08-09 12:46:12","2016-08-09 11:46:12",4
Mule,"Move MuleEventContext to compatibility module","Remove DefaultMuleEventContext and MuleEventContext.",Task,Major,Done,"2016-08-08 21:46:13","2016-08-08 20:46:13",4
Mule,"Create tooling packaging","In order to separate the artifacts that are deployed when building a mule app and the artifacts that are used for tooling or dependencies management we need to generate another artifact.    Currently inside the Studio plugin we have the following information:      Also we have a MANIFEST.MF      The packaging we need to define should contain:  * The zip of the mule plugin that is deployed with the mule app using this extension.  * An icons folder with the following structure:   ** _theme.id_:    *** a small and a large version of the icon. The naming convention is: {prefix}-connector-small.png and {prefix}-connector-large.png   The current themes generated by the SDK are: *theme.classic*, *theme.light*  * The extension model json.  * The custom editor if the extension defines one.  * Sources of the extension if available (Community connectors currently package this).  * Javadocs of the extension if available (Community connectors currently package this).  * Generated documentation (The one DevKit used to generated, this is no the same as Javadocs).  * A descriptor/Manifest that has at least the following information:   ** Contribution Jar: This can be used to attach the sources for debugging purposes   ** Contribution Sources: The sources that the user needs to attach    ** Contribution Type: We need know if this is a template, a mule extension, or a mozart project.   ** Required Execution Enviroment: In the future maybe some extension will require java 9.    ** The dependencies (in the extensions case, the extensions this extension depends of).    The extension model already has the following information:   * Extension Version   * Min mule version   * Namespace prefix   * Namespace URI   * Namespace Schema Location  ","Enhancement Request",Critical,Closed,"2016-08-08 16:48:39","2016-08-08 15:48:39",8
Mule,"Add the concept of operation and sources which don't require a config","In the current model each operation needs to be executed with a resolved configuration. This is not something that is always needed. Some operations like http:basic-auth-filter doesn't require a config a trying to resolve one is an usability problem, since the extension doesn't contain an implicit config and most common thing is to have two configs defined.","Enhancement Request",Critical,Closed,"2016-08-08 16:42:32","2016-08-08 15:42:32",8
Mule,"Exclusive optionals should support nested groups","To be completed....","Enhancement Request",Major,Closed,"2016-08-08 16:27:30","2016-08-08 15:27:30",8
Mule,"ParameterGroups with a ParameterGroup field of the same type of their parent produces a StackOverFlow","ParameterGroups with a ParameterGroup field of the same type of their parent produces a StackOverFlow",Bug,Major,Closed,"2016-08-08 16:25:45","2016-08-08 15:25:45",1
Mule,"Support auto paging operations in SDK","Support auto paging","Enhancement Request",Critical,Closed,"2016-08-08 16:21:47","2016-08-08 15:21:47",8
Mule,"Spike on introducing DSQL into the SDK","Perform a Spike on introducing DSQL into the extensions. Consider:    * syntax  * execution  * data sense  * extension model",Task,Critical,Done,"2016-08-08 16:19:24","2016-08-08 15:19:24",13
Mule,"@Import should not require a class element","The import annotation requires a class element which makes DslSyntaxResolver to have that class in the classpath plus forces extensions to export too many classes.",Bug,Blocker,Closed,"2016-08-08 16:15:16","2016-08-08 15:15:16",8
Mule,"Use new MetadataType AnnotationTypes interface","Mule changes regarding to https://www.mulesoft.org/jira/browse/MDM-12",Task,Major,Done,"2016-08-08 13:28:10","2016-08-08 12:28:10",0
Mule,"DefaultResourceReleaser should not be exposed, move to an internal package"," and its implementation are exposed by launcher module, in addition to that they are part of runtime packages     This could end up in an linkage error due to these classes have to be loaded by each Application and Domain classloader in order to dispose the resources (jdbc drivers).    They have to be moved to an internal package.",Task,Major,Done,"2016-08-05 22:02:13","2016-08-05 21:02:13",1
Mule,"Contribute to the MetadataModel with custom TypeAnnotationAdapters","Contribute to the MetadataModel with custom TypeAnnotationAdapters so serialization of custom annotations provided by the extension are serialized correctly","Enhancement Request",Major,Closed,"2016-08-05 19:58:57","2016-08-05 18:58:57",3
Mule,"Define message redelivery configuration in Mule 4","Complete the error handling spec with how to manage and configure message redelivery in Mule 4.",Task,Blocker,Done,"2016-08-05 16:12:29","2016-08-05 15:12:29",5
Mule,"Review Mule runtime APIs exposed to tooling","Review current API exposed to tooling (Studio and Mozart) from Mule Runtime.     We've been discussing how to reuse the SDK model for communicating the required structure of our DSL to tooling. We need to come up with a plan on the things we need to do and when.",Task,Critical,Done,"2016-08-05 16:07:21","2016-08-05 15:07:21",8
Mule,"Create HTTP service","We need to move core HTTP functionalities to a service that can be exposed so others can create their own servers and clients. The HTTP extension will use said service as will OAuth, for example.",Task,Critical,Done,"2016-08-05 15:59:31","2016-08-05 14:59:31",8
Mule,"Consider making all header related attributes case insensitive","In 3.x, headers were mapped to inbound/outbound properties. Since those were case insensitive, users could then access the headers regardless of the key case they were using. This was particularly necessary considering that in HTTP, Grizzly automatically turns headers to lower case, which is then transparent to the user in most cases. With the current approach in 4.x, now users must be aware of this lower case transformation so we should consider using case insensitive maps for those cases to hide that from the users and maintain the 3.x UX.",Task,Blocker,New,"2016-08-05 15:38:35","2016-08-05 14:38:35",16
Mule,"Move to a separate module ArtifactClassLoaderRunner ","Move code to another module",Task,Major,Done,"2016-08-05 15:26:31","2016-08-05 14:26:31",1
Mule,"ArtifactClassLoaderRunner - Make it more extensible","* TestClass should be only used in JUnit context, so the classification and factory can be used outside a JUnit context   * Context, remove everything related to testClass and annotation to JUnit runner only  * ClassPathURLProvided should allow to extend it with a list of provided URLs  * Set the rootArtifactClassesFolder and rootArtifactTestClassesFolder paths to the classification context  * Change name to ClassLoaderRunnerFactory to ClassLoaderIsolationFactory  * Make protected the three methods on buildAppUrls, buildPluginsUrlClassification, buildContainerUrls (internal extension)  * Remove comma separated parsing logic from classloading code and put it in runner JUnit  * Define the public API   ","Enhancement Request",Major,Closed,"2016-08-05 15:22:02","2016-08-05 14:22:02",3
Mule,"ArtifactClassLoaderRunner - Add support to infer which kind of artifact is being classified","There are different cases where classification and classloaders for running tests would happen:  * testing extension code from the test folder of the artifact  * testing plugin code from the test folder of the artifact  * testing an application that uses plugins/extensions     Each case defines how target/classes and target/test-classes folder would have to classified and in which classloader should go.    It would help to infer if the artifact being tested is a plugin, extension or application:  * plugin, the target/classes should go to the plugin classloader and target/test-classes to the application classloader  * extension, same as plugin in addition to that it should generate the metadata  * application, target/classes and target/test-classes should both go to the application classloader","Enhancement Request",Major,Closed,"2016-08-05 15:12:48","2016-08-05 14:12:48",2
Mule,"Define how spring profiles feature should be replaced in the new DSL","We need to define a way to replace the spring profile functionality within mule.    ",Task,Blocker,New,"2016-08-04 18:41:05","2016-08-04 17:41:05",4
Mule,"Add custom TypeAliasAnnotation for MetadataType","When a Class is annotated with @Alias, then the metadataType should be able to preserve that information.    If no alias is provided, then the class simpleName will be used as alias.",Bug,Major,Closed,"2016-08-04 17:33:48","2016-08-04 16:33:48",3
Mule,"Review boot packages needed to be exported when migrating IT tests to run with isolation","While migrating integration tests to run with isolated test runner I needed to expose groovy and aop packages. review why this is necessary.    ContainerClassLoaderFactory:      This also applies to yourkit.",Task,Major,Done,"2016-08-03 21:53:27","2016-08-03 20:53:27",2
Mule,"Allow ModelProperties to be searched hierarchically","Right now, you cannot have a hierarchy of model property since you cannot get them by a base class.    Make it happen","Enhancement Request",Major,Closed,"2016-08-02 23:11:04","2016-08-02 22:11:04",1
Mule,"Create HTTP hamcrest matchers","Create Hamcrest matchers that we can reuse in HTTP tests.",Task,Minor,Done,"2016-08-02 21:41:13","2016-08-02 20:41:13",3
Mule,"Classloader leak due to shutdown listeners are not cleared","h5. Problem  During the disposal process of the application classloader there is a reference to the classloader due to  has an anonymous classes with an strong reference to the classloader.     The root cause of this issue is classloader doesn't not null the list of listener after it triggers the calls to them.    h5. Proposal  Clear the list of shutdown listeners",Bug,Major,Closed,"2016-08-02 17:37:46","2016-08-02 16:37:46",0
Mule,"ArtifactClassLoaderRunner CXF issue when running all tests, works when executed isolated","Running all test ends up failing on these test when isolated runner is used. ",Bug,Major,Closed,"2016-08-02 16:40:49","2016-08-02 15:40:49",0
Mule,"Migrate compatibility transport IT tests to use isolated test runner","Review what would be needed in order to migrate transports compatibility IT tests to use isolated test runner.",Task,Major,Done,"2016-08-02 16:23:52","2016-08-02 15:23:52",5
Mule,"Duplicate class definition exception when disposing domain 'default'","When starting a FakeMuleServer with an App that fails to deploy, the system proceeds to stop the domain 'Default' and an exception is raised.     Stack trace:    ",Bug,Critical,Closed,"2016-08-02 15:17:33","2016-08-02 14:17:33",0
Mule,"Migrate core transformers to new parsing mechanism.","Migrate core transformers to new parsing mechanism.",Task,Critical,Done,"2016-08-02 13:00:48","2016-08-02 12:00:48",8
Mule,"Classloader leak when Oracle JDBC Driver is not used but included in application lib folder","h5. Problem  During the disposal process of the application classloader the DriverManager is called to get the registered drivers in order to deregister them if they were loaded with the current classloader.    The DriverManager has an static block code that loads by SPI the drivers present in the classloader (from where the DriverManager was called) so whenever  is called during the classloader's disposable phase if the OracleDriver was not used by the application it will be loaded when  is called just before it will be deregistered by the releaser.  This has a side effect and generates classloader leaks due to OracleDriver leaves open inputStreams.    h5. Proposal  Remove the workaround for http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5041014 in  and call method  (added in jdk7) that does a better job by closing the classloader and releasing any inputStream opened. This fixes the file locked in Windows OS environments to OracleDriver's jar file.    h5. Caveats  Oracle has still a memory leak that cannot be resolved with the proposal described here, two objects are left in ThreadLocal and not removed when the driver is deregistered.  The objects left in ThreadLocal are:   ",Bug,Major,Closed,"2016-08-01 20:36:52","2016-08-01 19:36:52",0
Mule,"InputStream not closed on core, launcher and spring-config","While researching an issue on Windows when an application is undeployed and some files are not removed from file system I found a few inputStreams not closed. This will generate leaks and in OS' like Windows will lock files.",Bug,Major,Closed,"2016-08-01 20:20:05","2016-08-01 19:20:05",0
Mule,"Upgrade Repository module dependencies","Analyze where the dependency comes from and upgrade to the latest version.  The current versions include betas and milestone releases.",Task,Major,Done,"2016-08-01 04:23:54","2016-08-01 03:23:54",3
Mule,"Review where do ConnectionProvide specializations belong","The ConnectionProvider interface has some specializations (PoolingConnectionProvider, CachedConnectionProvider, etc) and they all live in mule-api.    There's a concern if the specializations should move to ext-api, in order to keep the main mule-api as tight as possible.    Doing so has the following disadvantages:    * No real ease in backwards compatibility, since ext-api has to be as backwards compatible as the mule-api  * mule-core should have to depend on ext-api which is something we want to avoid",Task,Major,Done,"2016-07-29 20:58:31","2016-07-29 19:58:31",3
Mule,"ConnectionProviders should be better typed","For metadata and transaction support purposes, we need a better way to determine the type of connection management that should be applied to each connection provider.    Because the current approach is based on the double dispatch pattern, it requires live instances which is not a good approach for these use cases.    ConnectionProviders should be typed in a way that it's simple to provide this information both in the meta model and in live instances.","Enhancement Request",Critical,Closed,"2016-07-29 18:21:16","2016-07-29 17:21:16",0
Mule,"Migrate perf-test to mule4 to add them to a build using JMH","Migrate perf-test to mule4 to add them to a build using contiperf.",Task,Major,Done,"2016-07-29 14:43:37","2016-07-29 13:43:37",8
Mule,"Move lifecycle interfaces to mule-api","Lifecycle interfaces must be moved to the mule-api project as they are need by other parts of the API",Task,Major,Done,"2016-07-26 21:55:55","2016-07-26 20:55:55",2
Mule,"Add the concept of keywords to the extension model","When searching for a component in Studio palette (or even for Mozzart) we support the concept of associated keywords, that makes it easier to find elements in the palette.    This keywords have a weight that is used to determine the best match when the user types in the palette filter.     For example, the database connector has the following keywords:  {code:xml}  <keywords>   <keyword value=db weight=1/>   <keyword value=jdbc weight=1/>   <keyword value=tables weight=1/>   <keyword value=trigger weight=1/>   <keyword value=views weight=1/>   <keyword value=store-procedure weight=1/>   <keyword value=storeprocedure weight=1/>   <keyword value=sql weight=1/>   <keyword value=connection weight=1/>   <keyword value=select weight=1/>   <keyword value=insert weight=1/>   <keyword value=update weight=1/>   <keyword value=delete weight=1/>   <keyword value=oracle weight=1/>   <keyword value=db2 weight=1/>   <keyword value=mysql weight=1/>   <keyword value=postgres weight=1/>   <keyword value=database weight=2/>   <keyword value=datasource weight=2/>  </keywords>  {code}    We could have an annotation that could be used at  Extension Level that has a list of Keyword Pojos or a repetable Keyword Annotation.    Something like:  {code:java}  @Keywords({      @Keyword(value=db,weight=2),      @Keyword(value=jdbc,weight=2)  })  public class MyExtension{  ...  }  {code}  Or with the repeatable annotation:  {code:java}  @Keyword(value=db weight=2)  @Keyword(value=jdbc weight=1)  public class MyExtension{  ...  }  {code}","Enhancement Request",Critical,Closed,"2016-07-26 16:43:22","2016-07-26 15:43:22",3
Mule,"ArtifactClassLoaderRunner - When loading modules for container classloader it is using launcher classloader instead of the correct one","When discovering modules for container classloader it is using TCCL that is launcher CL instead of the one that holds only the urls classified for the container:    Instead, it should do:      ",Bug,Minor,Closed,"2016-07-25 19:45:41","2016-07-25 18:45:41",0
Mule,"ArtifactClassLoaderRunner - Missing dependencies at classification when transitive dependency is declared explicitly with another scope","The following scenario is not well handled by the ArtifactClassLoaderRunner.  If an artifact defines a transitive dependency explicitly it is not handled correctly:    So, when collecting provided dependencies as scope was part of the identity of a MavenArtifact there was not possible to get the transitive dependency for org.glassfish.grizzly:grizzly-http-server:jar.    Fix is to remove scope from the identity and traverse transitive dependencies by artifact identity: groupId/artifacItd/version (optional).",Bug,Minor,Closed,"2016-07-25 19:36:43","2016-07-25 18:36:43",0
Mule,"File extension baseDir is actually a workingDir","File extension baseDir is actually a workingDir because it works like unix working Dir and not like HTTP basePath which doesn't allow absolute paths and always appends paths to base.",Bug,Major,Closed,"2016-07-25 18:47:38","2016-07-25 17:47:38",1
Mule,"Create serialiser for SubtypesModelProperty","*Create serialiser for SubtypesModelProperty*","Enhancement Request",Blocker,Closed,"2016-07-25 16:23:37","2016-07-25 15:23:37",5
Mule,"Refactor DeploymentServiceTestCase to avoid using pre-compiled classes and jars","DeploymentServiceTestCase is currently using different class and jars files to build application, domains, extension and services during the deployment tests.  As those files are binary files, is impossible to review the changes on them during the code review process.   Also, every change on those file, requires the developer to unzip them into a temp location, change them and then recreate the files replacing the originals.  ",Task,Major,Done,"2016-07-22 21:44:43","2016-07-22 20:44:43",5
Mule,"Encapsulate isConsumable logic within DataType","Encapsulate isConsumable logic within DataType",Task,Critical,Done,"2016-07-22 21:27:41","2016-07-22 20:27:41",3
Mule,"SchemaBuilder doesn't support child elements for List of Date types","Right now, we can provide the value of a Date/LocalDateTime/etc in the XML. That value is parsed and the object is constructed, but if I wanted to specify those objects as child elements of a List that's no possible because those types doesn't fulfil the condition of generating child elements:        What we should do is implementing  the logic for generating child elements in a metadatatype visitor for the shouldGenerateChildElements method.","Enhancement Request",Major,Closed,"2016-07-22 19:46:32","2016-07-22 18:46:32",8
Mule,"Remove mule-tests-functional from distribution","Remove Mule Testing Framework and its dependencies from Mule distributions.  Remove JUnit  Remove XMLUnit    Users who wish to test their applications should use MUnit Framework.",Task,Major,Done,"2016-07-22 19:45:37","2016-07-22 18:45:37",2
Mule,"ArtifactClassLoaderRunner - Add support to explicitly export plugin classes","While migrating extensions there was this need for exporting classes from the plugin/extension that are not exposed. The tests need to access them for testing the features but they are not supposed to be exported as part of the API.  Implement a way to allow exporting particular classes for plugins/extensions.","Enhancement Request",Major,Closed,"2016-07-22 18:30:06","2016-07-22 17:30:06",0
Mule,"Support multi transactions in SDK powered operations","SDK should allow extensions to have operations which join multi transactions","Enhancement Request",Critical,Closed,"2016-07-21 18:49:48","2016-07-21 17:49:48",8
Mule,"Support XA transactions in SDK extensions at the operation level","Allow SDK powered extensions to have operations which join XA transactions","Enhancement Request",Major,Closed,"2016-07-21 18:43:50","2016-07-21 17:43:50",8
Mule,"Add the concept of exclusive parameters","Add a way for two optional parameters (at any level) to declare that only one of them can be defined at the same time.    This should not be applicable among required parameters.","Enhancement Request",Major,Closed,"2016-07-21 17:11:43","2016-07-21 16:11:43",8
Mule,"Allow AnnotationBasedDescriber to work with AST trees","Following in the work of MULE-10135, implement a Type abstraction which works with an AST tree obtained from an AnnotationProcessor.    This also includes changing the current SDK annotation processor to not explicitly enrich the model through the javadocs, but rather rely on this Type abstraction to already provide them. ","Enhancement Request",Major,Resolved,"2016-07-21 16:59:43","2016-07-21 15:59:43",13
Mule,"ArtifactClassLoaderRunner - Add support for services","Add support for testing MULE-9752  * Classification process should look for services, basically it would scan the classpath to get which jars or target/classes have a service.properties  * In order to classify the dependencies it will get all the compile dependencies for those discovered artifacts (as with plugins/extensions, compile is the scope defined for this matter)  * Once the classification is done a new artifactClassLoader (with the filter) has to be created as child of container CL but it should not be part of the hierarchy, sharedLibs will continue to be the parent of the composite CL and child of container  * In addition to that, a service discoverer would need to be written in order to change the discover default mechanism that Mule Service has for registering the services","Enhancement Request",Major,Closed,"2016-07-21 16:57:27","2016-07-21 15:57:27",5
Mule,"Annotation Based describer should be abstracted from classes","The AnnotationBased describer currently works by introspecting through the java.reflect API.    Create an abstraction around types, methods, fields, etc which allows the describer to work without directly relying on a Class object","Enhancement Request",Major,Closed,"2016-07-21 16:53:06","2016-07-21 15:53:06",13
Mule,"Migrate extensions to use isolated test runner","HTTP, FTP and validations are not yet using the isolated test runner.  This task is about migrating those extensions.",Task,Major,Done,"2016-07-21 16:49:33","2016-07-21 15:49:33",5
Mule,"FTP Extension: Make Test Plan","FTP Extension: Make Test Plan",Task,Major,Done,"2016-07-21 16:32:35","2016-07-21 15:32:35",5
Mule,"FTP Extension: Review existing tests ","FTP Extension: Review existing tests ",Task,Major,Done,"2016-07-21 16:27:32","2016-07-21 15:27:32",3
Mule,"FTP Extension: Review Spec","Review FTP Extension Spec",Task,Major,Done,"2016-07-21 16:25:50","2016-07-21 15:25:50",5
Mule,"Change code formatter","Change code formatter to Google's in a new branch and run a Cloudbees plan to verify everything works correctly.  ",Task,Major,Done,"2016-07-21 16:25:47","2016-07-21 15:25:47",5
Mule,"ArtifactClassLoaderRunner - Add support for artifacts with different versions","The current version it is not considering different versions for artifacts, for instance if mule-core depends on commons-collections 1.1 and it doesn't export it and an extension/plugin has a dependency to commons-collection 2.3 and it is used internally by the plugin (it is not exported too) the classification and class loaders should be created each with the correct version.  We are not supporting this and the classpath is built by maven using nearest version resolution therefore on the described scenario the only commons-collection jar that will be in classpath is version 2.3 due to the testing is happening from the extension artifact.","Enhancement Request",Major,Closed,"2016-07-21 15:45:52","2016-07-21 14:45:52",8
Mule,"Remove MuleMessage ReplyTo","Make Message ReplyTo a string.","Enhancement Request",Major,Closed,"2016-07-21 15:45:20","2016-07-21 14:45:20",3
Mule,"SchemaGenerator doesn't generate elements in the same order","elements in a generated XSD not necesarilly maintain order. Although this is not a productive problem since the test case is still valid and the runtime doesn't really care, it does makes code review harder, because when a schema does change you see a lot of changes which are unrelated.    For example look at https://github.com/mulesoft/mule/pull/2982#discussion_r71688076",Bug,Minor,Closed,"2016-07-21 15:42:48","2016-07-21 14:42:48",1
Mule,"[SPIKE] Error handling proposal spec","Per the error handling proposal, we need to implement an error-handler that takes on-error elements capable of assigning the handling to the one that can handle the type of error generated.","Enhancement Request",Critical,Closed,"2016-07-21 15:22:47","2016-07-21 14:22:47",13
Mule,"Review messageId, rootId, parentMessage and event.id for tracking of message through Flow.","Review messageId, rootId, parentMessage and event.id for tracking of message through Flow.","Enhancement Request",Major,Closed,"2016-07-21 15:20:53","2016-07-21 14:20:53",8
Mule,"Map not sent as form data if mimeType is application/java","When a Java map is used as payload and the data type's mime type reflects this using application/java, said map is not sent as form data via HTTP. This is because we assumed under that scenario the calculated content type would be null (but it's application/java).",Bug,Minor,Closed,"2016-07-21 00:32:18","2016-07-20 23:32:18",0
Mule,"MVELExpressionExecutor used after a TypeSafeExpressionValueResolver from extensions API cannot load application classes","Having the configuration attached to this issue where it has an expression-component and uses sockets extension.  See  for more details, it part of socket's extension tests.    The expression-component fails due to it cannot find the class  which is the super class of the test being executed.     After debugging the code I found that  caches the compiled MVEL expressions but always uses the same instance of  which resolves only once the ClassLoader for executing the expresion by obtaining it from Thread.currentThread().getContextClassLoader() and assign it to a variable.  Therefore, when  resolves the  expression the parserConfiguration gets the extension classloader and when trying later to evaluate the expresion-component from the flow it cannot find the class.",Bug,Blocker,Closed,"2016-07-19 20:31:32","2016-07-19 19:31:32",1
Mule,"Review how correlation is implemented/achieved","Review the implementation/usages of *org.mule.runtime.core.message.Correlation*.    Ref: http://www.informit.com/articles/article.aspx?p=1398616&seqNum=6    ",Task,Major,Done,"2016-07-19 17:48:04","2016-07-19 16:48:04",8
Mule,"ExtensionFunctionalTestCase creates wrong manifest directory when using #getConfigFiles()","When extending from ExtensionFunctionalTestCase and using the method `String[] getConfigFiles()` for returning the list of XML files, the `ExtensionFunctionalTestCase#getEffectiveConfigFile()` fails in the `getConfigurationResources()` implmented by default, as it does return empty string rather than `null`.  By returning an empty string, the files generated by the extensions (META-INF/spring.schemas, META-INF/spring.handler, etc..) end up in the current folder of the module being tested rather than in the /target folder (target/META-INF/spring.schemas and so on..)    The fix should be checking for `!StringUtils.isBlank(configFile)` in all the ifs, rather than `configFile != null`.",Bug,Major,Closed,"2016-07-18 20:13:45","2016-07-18 19:13:45",1
Mule,"File copy/move fail to overwrite when target file is in a different directory","When you use the file:copy or file:move operation and you try to overwrite a file which leaves in a different directory than the source one, then it doesn't overwrite but fails saying that the file already exists",Bug,Major,Closed,"2016-07-18 19:23:03","2016-07-18 18:23:03",0
Mule,"notifyDeletes should default to false in file:listener","Most use cases for file:listener often include a move or delete operation. Having delete notifications enabled by default can result in confusing loops.    Switch the default to false to better suite most common use cases.","Enhancement Request",Major,Closed,"2016-07-18 15:21:13","2016-07-18 14:21:13",0
Mule,"Start development of the new WS consumer extension","Create the necessary extension classes required to build a the new extension.","Enhancement Request",Major,Closed,"2016-07-15 20:19:01","2016-07-15 19:19:01",13
Mule,"SPIKE: new CXF proxy client for the new WS Consumer  ","The current WS consumer works using the inbound and outbound properties for managing headers and attachments, since in mule 4.0 the properties concepts is going to dissapear a new proxy client must be created.  The client must be based on a specially configured CXF Client to allow sending raw XML representing a SOAP envelope over CXF for SOAP processing, WS-Security, etc.          ","Enhancement Request",Major,Closed,"2016-07-15 20:06:59","2016-07-15 19:06:59",13
Mule,"Add Metadata support to WS-CONSUMER","Add the necessary metadata resolvers needed to support datasense in the new WSC module.   This must cover Headers (Represented as a Key Value pair) and the body content for both input and output.    WSC usability is highly coupled to this.","Enhancement Request",Major,Closed,"2016-07-15 19:50:50","2016-07-15 18:50:50",13
Mule,"file:matcher name should be mandatory outside a flow","When a {{file:matcher}} is defined as a top level element it should be mandatory the {{name}} attribute.    ",Bug,Major,Closed,"2016-07-15 15:45:27","2016-07-15 14:45:27",3
Mule,"Incomplete application is continously redeployed","After configuring the continuous build to work in parallel, a test started to fail from time to time:  org.mule.runtime.module.launcher.DeploymentServiceTestCase.redeploysBrokenExplodedAppOnStartup.  After playing with the test, if a Thread.sleep(10000) is added right before the last assertion, then the test will fail. Why? Because the application redeployment does not occur just once, but it occur on every cycle of the deployment service.",Bug,Major,Closed,"2016-07-14 21:05:11","2016-07-14 20:05:11",1
Mule,"Subtypes of a type declared only as a generic are not parsed correctly","Subtypes of a type declared only as a generic are not parsed correctly.",Bug,Major,Closed,"2016-07-14 20:45:25","2016-07-14 19:45:25",5
Mule,"Release maven extension plugin and parent","Release maven extension plugin and parent",Task,Critical,Done,"2016-07-14 18:14:19","2016-07-14 17:14:19",3
Mule,"Fix extensions studio plugin packaging","In order to be able to load custom editor files provided by extensions we need to do the following:  - Rename field *editorsPath* => *path* to avoid breaking current mechanism and existing  - *editors.xml* doesn't need to be part of the jar used in runtime to run the app. Because of this, the file should not be placed under src/main/resources for it to be part of the generated plugin. The file should be located inside an *editor* folder and copied to the root at the same level as the *plugin.xml* file",Bug,Blocker,Closed,"2016-07-14 15:01:42","2016-07-14 14:01:42",2
Mule,"Refactor SpringXmlConfigurationBuilder to always only accept a java representation of the configuration","Currently SpringXmlConfigurationBuilder is accepting a set of XML configuration files or an object representing the artifact configuration but it should only accept one format, the object representation.     Different types of configuration files (XML, JSON, whatever) should be parsed and generate the common object representation.",Task,"To be reviewed",New,"2016-07-13 17:01:55","2016-07-13 16:01:55",0
Mule,"ArtifactClassLoaderRunner - Improve classpath classification for selecting which artifacts are already bundled within the container","ArtifactClassLoaderRunner uses an exclusion filter pattern for artifacts that should not be included in the application classloader neither the plugin classloaders.  This is fine for a first version but there could be another way to solve this without having to explicitly set this filters due to they have the issue of keeping duplicated things that are already in pom files into an annotation (see org.mule.functional.junit4.runners.ArtifactClassLoaderRunnerConfig).     One approach could be to use maven instead and create a pom that depends in all the mule modules (modules, core, container, etc) that would go to the container, so the users of this runner could define that dependency as provided and that will go to the container class loader. But, still the test dependencies have also transitive dependencies to the same artifacts so they would be need to be optional or either provided so they are not linked from the tests scope artifacts.","Enhancement Request",Major,Closed,"2016-07-13 16:54:33","2016-07-13 15:54:33",8
Mule,"ArtifactClassLoaderRunner - Add support for scanning multiple base packages when discovering extensions","The current version only supports to configure one basePackage to be used when discovering extensions by scanning the class path for classes annotated with @Extension.  It would be nice to support multiple packages in order to allow customers to have extensions with a complete different package from the Mule built in Extensions.  Consider performance impact or other tools when implementing this, current version is using Spring to scan the class path.","Enhancement Request",Major,Closed,"2016-07-13 16:38:08","2016-07-13 15:38:08",2
Mule,"Avoid Quartz update check","The Quartz update included an automatic check for updates that causes an outbound HTTP call to be triggered when Mule starts. See https://jira.terracotta.org/jira/browse/QTZ-29","Enhancement Request",Minor,Closed,"2016-07-12 23:01:05","2016-07-12 22:01:05",0
Mule,"Properly handle disposal of XaTransactedJmsMessageReceiver","The session and consumer for a XaTransactedJmsMessageReceiver are stored in a thread local. This causes these resources to be leaked when the receiver is disposed form a thread different than the one that started it.",Bug,Major,Closed,"2016-07-12 22:52:26","2016-07-12 21:52:26",0
Mule,"Metadata Type resolution fails when an operation returns int[][]","If an operation returns an int[][], then the generated MetadataType doesn't contain a TypeAnnotation",Bug,Major,Closed,"2016-07-12 22:16:19","2016-07-12 21:16:19",3
Mule,"Support text parameters","We need to have String parameters which support extensive text. E.g.:        For this we can reuse the @Text annotation which right now is just a display hint.","Enhancement Request",Major,Closed,"2016-07-12 22:07:17","2016-07-12 21:07:17",5
Mule,"Introduce the concept of @XmlElementStyle parameters","We need a RefOnly annotation that can be applied to complex type parameters (all across the board) so that they cannot be defined inline, they can only be referenced from the registry or provided through an expression.    This annotation is:    * Exclusive with @NoRef   * Only valid when applied to complex types  * Redundant when applied to a non instantiable type","Enhancement Request",Major,Closed,"2016-07-12 22:02:25","2016-07-12 21:02:25",5
Mule,"email: Add the capability of add attachments when forwarding and replying an email","*email: Add the capability of add attachments when forwarding an email*    * In the same way when using the {{send}} operation, add the capability on {{forward}} operation to be able to add email attachments","Enhancement Request",Major,Closed,"2016-07-12 20:11:05","2016-07-12 19:11:05",2
Mule,"email: Analyse the support for multiple 'from address'","*Analyse the support for multiple 'from address' in Email extension*    The email [RFC 822|http://tools.ietf.org/html/rfc822] gives the concept of multiple *from* addresses, mean while the Email Extension support a unique from address.    From: [RFC 5322 | http://tools.ietf.org/html/rfc5322]  {quote}The from field consists of the field name From and a comma-     separated list of one or more mailbox specifications.  If the from     field contains more than one mailbox specification in the mailbox-     list, then the sender field, containing the field name Sender and a     single mailbox specification, MUST appear in the message.{quote}    {quote}  The originator fields indicate the mailbox(es) of the source of the     message.  The From: field specifies the author(s) of the message,     that is, the mailbox(es) of the person(s) or system(s) responsible     for the writing of the message.  The Sender: field specifies the     mailbox of the agent responsible for the actual transmission of the     message.  For example, if a secretary were to send a message for     another person, the mailbox of the secretary would appear in the     Sender: field and the mailbox of the actual author would appear in     the From: field.  If the originator of the message can be indicated     by a single mailbox and the author and transmitter are identical, the     Sender: field SHOULD NOT be used.  Otherwise, both fields SHOULD     appear.{quote}    Check at: http://serverfault.com/questions/554520/smtp-allows-for-multiple-from-addresses-in-the-rfc-was-this-ever-useful-why-do","Enhancement Request","To be reviewed",Closed,"2016-07-11 19:28:30","2016-07-11 18:28:30",2
Mule,"Artifact must export resource files instead of resource's folder paths","Artifacts are currently exporting resources using the resource path. For example, for a resource with path META-INF/test.properties, a META-INF entry is added to the module properties.  This introduces a problem as resource paths can be used in different jars (opposed to java packages which should not be reused)",Task,Major,Done,"2016-07-11 18:42:06","2016-07-11 17:42:06",5
Mule,"Email Connector: Support connection level headers for SMTP Connections.","The Email connector must have support for a set of headers that are bounded in each SMTP operation.","Enhancement Request",Major,Closed,"2016-07-11 18:27:08","2016-07-11 17:27:08",2
Mule,"Spike on SDK powered WS-Consumer","Spike on effort and features needed",Task,Critical,Done,"2016-07-11 16:28:26","2016-07-11 15:28:26",13
Mule,"Do not propagate attributes when operation does not set it",sdf,Bug,Blocker,Closed,"2016-07-11 16:17:06","2016-07-11 15:17:06",1
Mule,"Provide dynamic metadata resolvers for file and ftp attributes","File and Ftp connectors share operations but use different implementations of the FileAttributes interface. Add a MetadataResolver which communicates the right type.    Consider that this also affect the TreeNode object that the list operation returns",Task,Major,Done,"2016-07-11 16:03:03","2016-07-11 15:03:03",5
Mule,"Support single resource transactions on SDK operations","Support transactions for local, single resource transactions on operations.","Enhancement Request",Critical,Closed,"2016-07-11 16:00:43","2016-07-11 15:00:43",13
Mule,"Add concept of standalone Email to Email Connector","The new email connector does not have metadata support, we must add the resolvers to support it.","Enhancement Request",Major,Closed,"2016-07-11 15:58:32","2016-07-11 14:58:32",5
Mule,"Rethink the lifecycle of the MuleContext","In Mule 3.x the MuleContext lifecycle had two main faces, first initialization and second configuration. By aggregating all those faces into the spring configuration there is no more distinction. Both happen almost at the same time.    We need to review if we need to get rid of the configuration phase or the initialization phase of keep both of them. Also we need to reconsider the usage of ConfigurationException and InitialisationException.",Task,"To be reviewed",New,"2016-07-11 10:17:45","2016-07-11 09:17:45",0
Mule,"Fix transports-parsers-tests xml schema","Fix the following tests:    org.mule.compatibility.config.spring.parsers.endpoint.AttributeErrorTestCase.testError  org.mule.compatibility.config.spring.parsers.endpoint.ComplexEndpointTestCase.testComplex  org.mule.compatibility.config.spring.parsers.endpoint.MultipleTransformerRefsTestCase.testSingleRef  org.mule.compatibility.config.spring.parsers.endpoint.MultipleTransformerRefsTestCase.testMultipleRefs  ",Bug,Minor,Closed,"2016-07-09 14:17:43","2016-07-09 13:17:43",1
Mule,"Create a simple builder for creating a MuleContext","We need a simplified version of the MuleContext builder that we can use to customize the construction of a MuleContext for different types of artifacts.",Task,Critical,Done,"2016-07-08 14:59:21","2016-07-08 13:59:21",0
Mule,"Allow new parsers to support different children of same type","Support for child elements with different names but the same type in the parsers","Enhancement Request",Critical,Closed,"2016-07-07 23:18:52","2016-07-07 22:18:52",3
Mule,"Maven module plugin is not properly detecting transitive exported dependencies","If CXF module is not exporting org.apache.commons.httpclient.params, the module plugin will not detect the missing  exported package, but any application will fail to deploy when a plugin includes http client library.  ",Bug,Critical,Closed,"2016-07-07 22:26:44","2016-07-07 21:26:44",16
Mule,"Update Extensions-API persistance JSON test resources","Update Extensions-API persistance JSON resources due to changes in https://www.mulesoft.org/jira/browse/MDM-11",Task,Minor,Done,"2016-07-07 14:48:44","2016-07-07 13:48:44",1
Mule,"Extension Studio packager generates a wrong feature name","Extension Studio packager generates a wrong feature name",Bug,Critical,Closed,"2016-07-06 19:43:03","2016-07-06 18:43:03",2
Mule,"Expand MuleMessageBuilder/MuleEventBuilder tests","Expand MuleMessageBuilder tests.    * Ensure we have coverage of what was in MessagePropertiesContextTestCase that no longer exists.  * Organize/combine DefaultMuleMessageTestCase and DefaultMuleMessageBuilder test cases.",Task,"To be reviewed",Done,"2016-07-06 18:13:06","2016-07-06 17:13:06",5
Mule,"Redundant basePath attribute in file:create-directory","When using {{file:create-directory}} the full path is composed by {{file:config/baseDir+file:create-directory/basePath+file:create-directory/directoryName}}, basePath is not needed since {{directoryName}} can use an expression.",Bug,Major,Closed,"2016-07-06 17:24:56","2016-07-06 16:24:56",3
Mule,"file:create-directory accepts paths in directoryName attribute","This causes that if I put a full directory in {{directoryName}} to create a directory ignoring the {{basePath}}      ",Bug,Major,Closed,"2016-07-06 14:22:14","2016-07-06 13:22:14",1
Mule,"Operations should no longer be allowed to return a MuleMessage instance","SDK operations should no longer be allowed to return MuleMessage instances since those will no longer have generic types. A new OperationResult object should be created instead so that we can keep using generics as a way of communicating metadata types and decoupling the extensions from the MuleMessage",Task,Blocker,Done,"2016-07-05 22:41:01","2016-07-05 21:41:01",5
Mule,"Create annotation to be able to provide descriptions/summaries for Components, Parameters, etc","*Create annotation to be able to provide descriptions/summaries for Components, Parameters, etc*    * In the same way as DevKit does with the {{@Summary}} annotation, create an annotation to provide a way to give a summary or brief description of an Operation, Source, Configuration, Parameter, etc with out using JavaDocs.","Enhancement Request",Major,Closed,"2016-07-04 23:16:10","2016-07-04 22:16:10",5
Mule,"Remove <response/> in Mule 4.0","Remove <response/> in Mule 4.0",Task,Major,Done,"2016-07-04 20:00:09","2016-07-04 19:00:09",4
Mule,"Add an Extensible as a custom TypeAnnotation contributed by the SDK","When a Class is annotated with Extensible, the SDK should contribute to the MetadataType of that Class with a custom TypeAnnotation that declares it as an SDK extensible component.    This should not be part of `ClassInformationAnnotation` since an extensible class is any non final class, but for the sdk an extensible type is only the classes annotated with Extensible.","Enhancement Request",Major,Closed,"2016-07-04 16:27:49","2016-07-04 15:27:49",1
Mule,"Update Extension's SchemaBuilder to use the DslSyntaxResolver","Currently, the schema builder has logic regarding when to generated a child element, a wrapper, how to express a collection based on the types, etc.     All this logic should be covered in the DslElementResolver, and the schemaBuilder should consume it in order to generate the according schema, instead of duplicating its logic.","Enhancement Request",Major,Closed,"2016-07-04 13:50:38","2016-07-04 12:50:38",8
Mule,"Minimize the amount of classes that extensions need to expose.","Currently, extensions expose the config classes, the operation classes, the connection providers, etc.    Ideally, it should be possible to only expose the complex parameter and return types.","Enhancement Request",Blocker,Closed,"2016-07-01 20:27:55","2016-07-01 19:27:55",8
Mule,"OperationContext should distinguish between null-value parameters and not passed parameters","This is needed, for instance, in AbstractReturnDelegate, to know if mediaType and encoding were set. If not, the values that come with the original message must remain.    In the case where a value is an expression that evaluates to null, we should fail when setting that as mediaType or charset instead of silently leaving the values form the original message.",Bug,Major,Closed,"2016-07-01 19:46:58","2016-07-01 18:46:58",2
Mule,"Add capability to lookup for external bundles within mule","For connectivity testing using just the parameters of a connection provider we need to be able to locate a bundle that may be stored externally from the runtime.    This change introduces a repository module for remote retrieval an local caching of external dependencies.","Enhancement Request",Critical,Closed,"2016-07-01 18:50:36","2016-07-01 17:50:36",0
Mule,"SDK date attributes should support ISO 8601","SDK date or datetime attributes should support ISO 8601 format.","Enhancement Request",Major,Closed,"2016-06-30 21:49:18","2016-06-30 20:49:18",5
Mule,"Remove RequestContext","Remove usages of RequestContext and RequestContext itself.","Enhancement Request",Major,Closed,"2016-06-30 21:14:28","2016-06-30 20:14:28",8
Mule,"Move message serialization logic from within the message to an external service","DefaultMuleMessage currently has serializer hookup methods that convert the payload to byte[] if it's not Serializable. This is done by doing a lookup of the transformer inside those methods.    That transformation logic has to be moved to a serializer service, that does the necessary conversions before serializing.","Enhancement Request",Critical,Open,"2016-06-30 19:16:08","2016-06-30 18:16:08",8
Mule,"file:matcher minSize accepts negative numbers",,Bug,Minor,Closed,"2016-06-30 17:42:26","2016-06-30 16:42:26",1
Mule,"Transport Message Compatibility/Adaption Documention","In 3.x DefaultMuleMessage:  - Used default encoding, now it has empty (optional) encoding by default.  - Set CORRELATION outbound properties, not it doesn't.  - Used ENCODING (and CONTENT_TYPE?) in inbound property to set DataType when message created, now it doesn't.  - Updated DataType when outbound ENCODING or CONTENT_TYPE properties set, now it doesn't.  - Message allows null payload and converts to NullPayload internally, now it does not allow null.  - Message allowed inconsistency between `message.payload.class` and `message.dataType.type`, now it doesn't.  - Message allowed `message.payload.class` to be sub-class of  `message.dataType.type`, now it doesn't.  - Message allowed receiving a message as payload and copying its properties, now it doesn't.  - MessageInfoMapping is removed. Use set-correlation-id to get the same functionality.  - Splitter no longer has an enableCorrelation. use set-correlation-id to get the same functionality if needed.",Task,"To be reviewed",Done,"2016-06-30 10:54:44","2016-06-30 09:54:44",8
Mule,"Improve integration tests performance","There are several resource leaks in integration tests, which lead to the module taking over 30 minutes to build.  The log shows almost 200 hung threads after all tests had run.  As a workaround, we increased the PermGen space setting it to 256m, but we should be able to revert this after we fix the tests.",Task,Major,Done,"2016-06-30 05:43:49","2016-06-30 04:43:49",0
Mule,"StringToBoolean transformer transforms hello to false","As shown in MULE-9948 and MULE-9915 this can cause problems when transformer expressions that end up configuring a message processor.",Bug,Major,Closed,"2016-06-29 21:11:10","2016-06-29 20:11:10",1
Mule,"After the inclusion of the mule-module-maven-plugin the execution of the maven plugins is duplicated","This made that embedded distribution build started to fail.    The Embedded EE distribution is failing to build because it doesn't find the spring.handlers in the CE distro.    For an unknown reason is executing (without logging it) the cleanup-spring-handlers execution (phase process-resources) before the generate-spring-handlers (process-sources phase).  This started to happend after this change in the commit of CE 44fc58ae166ed880c5c4d1b49da62c532cb2055e.    ",Bug,Blocker,Resolved,"2016-06-28 20:28:59","2016-06-28 19:28:59",4
Mule,"OAuth2 authorization-code-grant-type should reuse refresh_token","h5. Problem  According to the following section of RFC 6749:  https://tools.ietf.org/html/rfc6749#section-6  {quote}     The authorization server MAY issue a new refresh token, in which case     the client MUST discard the old refresh token and replace it with the     new refresh token.  The authorization server MAY revoke the old     refresh token after issuing a new refresh token to the client.  If a     new refresh token is issued, the refresh token scope MUST be     identical to that of the refresh token included by the client in the     request.  {quote}    It is up to be interpreted by readers but an interpretation would be: if the authorization server didn't return a new refresh_token the old one should be used when refreshing the access_token next time.    This scenario is what some servers called it offline or never expire and it is used mostly with APIs from mobiles.  Google's OAuth2 server supports this scenario:  https://developers.google.com/identity/protocols/OAuth2WebServer#offline  But they would also would need to support RFC 7009 'OAuth 2.0 Token Revocation' in order to allow uses to revoke an offline/never expire refresh token for a given user/app.  https://tools.ietf.org/html/rfc7009  On the other hand, other implementations such Box.com do not support this and they always issue to clients both tokens during a refresh access_token. https://www.box.com/blog/oauth2-update-longer-lived-refresh-tokens/    h5. Proposed implementation  As the specification has this optional scenario where refresh_token 'MAY' not be issued by the server when refreshing the access_token, the OAuth2 component should keep the old 'refresh_token' for next attempt.  MULE-9660 changed the behaviour to log a warning message if 'refresh_token' was not issued by the authorization server instead of failing, it was always expecting to get both tokens with every refresh token operation. So, that would be modified to keep the old refresh_token instead and the warning message reverted.   If during the next attempt to get a new access_token using the old refresh_token happens after the refresh_token was revoked in authorization server, an unauthorized exception would be thrown.",Bug,Major,Closed,"2016-06-29 03:30:54","2016-06-29 02:30:54",0
Mule,"Add the concept of minimum Mule Version and Extension Category","*Add the concept of minimum Mule Version and Extension Category*    * In the same way as DevKit does:   ** add the concept of min Mule Runtime version for extension, to be able to declare which is the minimum version that the extension requires to work correctly  ** add the concept of extension category *(Community, Select, Premium and Certified)*, this is required when packaging a connector and also for license checking.",Bug,Major,Closed,"2016-06-28 19:33:32","2016-06-28 18:33:32",5
Mule,"Incorrect vendor when loading file extension","When deploying an application that uses file extensions the vendors for the available extensions are listed in the log, but it is empty:    ",Bug,Minor,Closed,"2016-06-28 19:22:58","2016-06-28 18:22:58",1
Mule,"First successful is not notifying all paths","The element first Successful like the one in the example bellow:        When asked the Mule context to create all the paths for a flow containing only this code it will return 4 paths:        Of those paths, this one flowname/processors/0/0 belongs to the processor chain.    Now the problem is, when running this code no notification informing the execution of the path flowname/processors/0/0 is coming.     If the processor chain is outside the first successful  the notification comes but not inside the first successful.  ",Bug,Major,Closed,"2016-06-28 16:09:20","2016-06-28 15:09:20",3
Mule,"Preserve media type parameters in mule","Currently, when a media type is parsed, only the charset parameter is kept in mule. Maybe we should keep/propagate any other parameters as well.","Enhancement Request",Major,Closed,"2016-06-27 23:08:45","2016-06-27 22:08:45",1
Mule,"Improve overall performance of JUnit tests","Profile test and make small changes to reduce the build time.","Enhancement Request",Critical,Open,"2016-06-27 22:03:40","2016-06-27 21:03:40",4
Mule,"DataSense service returns incomprehensible payload","when DataSense for a given MP is returned, the JSON response is hard to understand and use. Use a better format.",Bug,Blocker,Closed,"2016-06-27 16:42:28","2016-06-27 15:42:28",8
Mule,"Support full xml generation based on elements DslModelProperty","In order to generate the application Xml, Studio and Mozart are required to introspect the MetadataTypes, follow naming conventions and special logic based on the type and its usages.    Ideally, we should be able to provide a way to generate the Xml based only in the DslModelProperty, which should contain all the required rules",Bug,Major,Closed,"2016-06-27 16:22:09","2016-06-27 15:22:09",5
Mule,"ConnectionProvider.connect() should not depend on the config","Right now people find it hard to identify which parameters should be placed in the config and which in the connection provider.    Also, requiring the CP to have a config in order to connect overcomplicates the connectivity testing feature.     To solve the UX and implementation problem, we'll just remove the config parameter from the connect method so that ConnectionProviders can work standalone","Enhancement Request",Blocker,Closed,"2016-06-27 16:02:11","2016-06-27 15:02:11",5
Mule,"Review DataType implementations equals/hashCode standard compliance","Currently, DataType implementors have some logic in their equals method that does not comply with the java specification.",Bug,Major,Resolved,"2016-06-27 15:56:43","2016-06-27 14:56:43",2
Mule,"Introduce MultipartPayload","Introduce MultipartPayload",Task,Major,Done,"2016-06-27 09:50:16","2016-06-27 08:50:16",8
Mule,"Add temporary support for spring property placeholders in new DSL","For now, and until MULE-9825 is complete, we need to add basic support for spring property placeholders in the XML configuration.",Task,Critical,Done,"2016-06-24 10:34:53","2016-06-24 09:34:53",3
Mule,"Spike: IPv6 support","Perform a spike on assessing the current support for IPv6 and detect the possible gaps.     The outcome of a quick assessment performed by [~nahuel] is that IPv6 is not fully supported. Following are the steps taken for the validation:    {quote}  Started mule as    ./mule -Djava.net.preferIPv6Addresses=true -Djava.net.preferIPv4Stack=false    Oracle JDK 8, OS X El Capitan, Amazon AMI with RedHat    Note: On wrapper.conf, the default is wrapper.java.additional.3=-Djava.net.preferIPv4Stack=TRUE    Deployed an app with a listener with the broadcast host configured in different ways:    HOST -- Result    0.0.0.0 -> OK  :: -> NPE/Protocol Family unavailable  0:0:0:0:0:0:0:0 -> NPE  [::] -> NPE  ::1 -> OS X: OK/ Amazon AMI using RedHat: Protocol Family unavailable  FF02::1 (ie all nodes) -> Address Family not supported  FF02::2 (ie all routers) ->  Address Family not supported  ::0.0.0.0 -> NPE/Protocol Family unavailable  {quote}    For this spike to be considered successful, we should have a clear understanding of the current support status and have identified the gaps.",Task,Critical,Done,"2016-06-24 01:59:23","2016-06-24 00:59:23",13
Mule,"Test Grizzly's PRESERVE_HEADER_CASE property","Test Grizzly's PRESERVE_HEADER_CASE property",Task,Blocker,Done,"2016-06-23 16:19:57","2016-06-23 15:19:57",3
Mule,"HTTP listener provider should reuse server","Right now, the provider is creating a new server on each connect but since the management is cached it works.",Bug,Major,Closed,"2016-06-23 16:13:39","2016-06-23 15:13:39",0
Mule,"Validate that complex types are provided on a exclusive way","por complex parameters (pojos, lists, maps), we want to allow the user to provide such value either as an expression parameter or as a child element. For example:        or         We need to have a way so that the parser automatically validates that if the myPojo attribute is present, then the my-pojo element is forbidden.    Corner cases:    * the myPojo element might have a default value, so Element.getAttribute(String) would return a non-null value anyway. We have to consider Element.getAttributeNode(String).getSpecified()  * given the myPojo attribute, the name of the child element to verify is calculated as follows:  ** for a Map: hyphenize(pluralize(myPojo))  ** for a List or Pojo: hyphenize(myPojo)    NOTE: hyphenize and pluralize functions are defined in org.mule.runtime.module.extension.internal.util.NameUtils, feel free to take them somewhere else as long as the SDK runtime is able to use them","Enhancement Request",Critical,Closed,"2016-06-23 15:52:34","2016-06-23 14:52:34",5
Mule,"Wrong validation is made when using Map<String,Pojo>","When an operation returns a Map<String,Pojo> and the pojo is a concrete, none abstract class with getters and setters, an error is reported saying you need to add a metadata resolver.  *Pojo*    *Operation class*      *Error*      Expected: No error should be shown since there is no dynamic metadata.",Bug,Major,Closed,"2016-06-22 20:39:06","2016-06-22 19:39:06",3
Mule,"POJO @Parameters default values are not being set.","Having a POJO with any @Parameter that is @Optional and has a defaultValue, that defaultValue is never going to be set.  The defaultValues aren't written in the schema and are not taking in count when parsing the xml, instead always null is set for those values.    For example, for a simple POJO like this one:   ",Bug,Major,Closed,"2016-06-22 19:54:33","2016-06-22 18:54:33",5
Mule,"Make DataType getters return Objects instead of Strings","Methods getMimeType and getEncoding currently return strings. They should return MimeType and Charset respectively.",Task,Major,Done,"2016-06-22 19:33:19","2016-06-22 18:33:19",8
Mule,"Set up parallel builds in Maven ","Set up the project modules to build in parallel at least for the 4.x CE branch.  Some tests may need tweaking in order to properly run in multithreaded mode, but our spike shows we can reduce build time by at least 50% in CE.",Task,Major,Done,"2016-06-22 18:30:01","2016-06-22 17:30:01",8
Mule,"Unclear error message when building an extension with multiple providers","When building an extension that has 2 or more connection providers with no XML annotation the error shown is useless since it doesn't tell you what were the error is, nor how to solve it.    The error should tell you the name of the classes that generated the conflict and suggest to use the @org.mule.runtime.extension.api.annotation.Alias annotation.    ",Bug,Major,Closed,"2016-06-22 16:17:58","2016-06-22 15:17:58",5
Mule,"Make FreePortFinder thread safe.","Improve test framework to make it possible to run tests in parallel by properly reserving network resources.  FreePortFinder implementation should be stateless and reserve ports checking system-wide availability.",Task,Major,Done,"2016-06-22 15:37:32","2016-06-22 14:37:32",4
Mule,"Lifecycle wrongfully applied on ObjectFactory instances","Run OperationExecutionTestCase.    What happens is that the product of OperationMessageProcessorObjectFactory is receiving its lifecycle before the getObject() method is even invoked on ConfigurationProviderObjectFactory. This happens despite the order declared at org.mule.runtime.config.spring.SpringRegistryLifecycleManager.SpringContextInitialisePhase#SpringContextInitialisePhase    What's expected is that:    * ConfigurationProvider instances are registered first  * ConfigurationProvider instances receive lifecycle first  * OperationMessageProcessor comes later    Also consider that the same has to work for ConnectionProviderObjectFactory",Bug,Blocker,Closed,"2016-06-16 22:56:34","2016-06-16 21:56:34",5
Mule,"Extract HTTP response creation logic from response builder component","Right now, the response builder component that matches the XML code has the transformation logic. This will be a problem when said component is no longer required and is also inconsistent with the request builder code. Having the logic in a separate MuleEventToHttpResponse would be much clearer.","Enhancement Request",Major,Closed,"2016-06-16 18:26:18","2016-06-16 17:26:18",3
Mule,"Remove MuleContext from MuleMessage","Remove MuleContext from MuleMessage.    The following places where the muleContext is used have to be reviewed:    * DefaultMuleMessage#serializeValue()  ** transformer to byte[] from the registry  * DefaultMuleMessage$SerializedDataHandler  ** transformer to byte[] from the registry  * MessagingException#generateMessage()  ** get a transformation service  * WildcardFilter#accept()  ** get a transformation service  * AbstractSessionHandler#deserialize()  ** getExecutionClassLoader()  * SerializeOnlySessionHandler#storeSessionInfoToMessage  ** getObjectSerializer()  * DefaultMuleEvent  ** get muleContext from message to keep reference  * WsConfig$DynamicAttributeEvalutorMap#getEvaluatedMap()  ** getExpressionManager()  * OutputPayloadInterceptor#handleMessage  ** get a transformation service  * IsJsonFilter#accept()  ** get a transformation service  ",Task,Major,Done,"2016-06-16 16:09:13","2016-06-16 15:09:13",5
Mule,"Remove default app from distribution","Mule Server now starts without failures without that application and it is no needed and the users must manually remove it.","Enhancement Request",Major,Closed,"2016-06-15 15:34:01","2016-06-15 14:34:01",1
Mule,"Add some default values to the @Optional annotation.","It would be a good idea to have some default value constants in the Optional annotation for cases where the default value is highly used in multiple connectors.  For example:      This way we avoid having a PAYLOAD constant in each connector.    True and False are other posible default values.","Enhancement Request",Major,Closed,"2016-06-14 20:18:57","2016-06-14 19:18:57",2
Mule,"Cannot name paramater as the name of the class","It is pretty common that when you have an operation that receives a Pojo, the parameter name will be the name in camelcase.        Right now we force the users to change the name of the parameter of the class.    Even more inconsistent is the fact that if you have a Pojo with the following structure we generate the XSD perfectly and we don't complain about the child element name:    Expected: No renaming should be required for this simple scenario.      A DslModelProperty will describe how each element should be generated regarding wrapped and non-wrapped elements, by describing the element name, if its wrapper or not, and the wrapped element name.",Bug,Blocker,Closed,"2016-06-14 14:17:26","2016-06-14 13:17:26",8
Mule,"Cannot have a Function parameter with Map<String, String> result","I had a parameter defined as:    but the method org.mule.runtime.module.extension.internal.config.XmlExtensionParserDelegate#getResolverFromValue failed because org.mule.metadata.java.utils.JavaTypeUtils#getGenericTypeAt returned an empty Optional, rooted at a ClassNotFoundException trying to load Map<String, String>.",Bug,Major,Closed,"2016-06-13 21:30:48","2016-06-13 20:30:48",5
Mule,"Implement FileAttributes#toString() so log messages make sense","If I log a FileAttributes object I see this:   It would be useful to see al the FileAttributes information in a nice format",Bug,Minor,Closed,"2016-06-13 19:29:18","2016-06-13 18:29:18",1
Mule,"Verbose logging for Runtime","Add the functionality included last Hackathon regarding logging verbosity in the runtime such as: product version, patches installed, classloader, etc...    *TBD*: Scope and get rid of the etc.","Enhancement Request",Minor,Closed,"2016-06-13 16:43:20","2016-06-13 15:43:20",5
Mule,"Enrich all the extension with display properties","Make sure that all currently available extensions receive a lot of love regarding display annotations.   Give the tooling as much information as possible. Even try to see how the updated extensions models would look like in the toolings we have.  Also evaluate if we need better framework support to communicate this, in which case report and fix those issues.  Edit: DisplayName annotation doesn't work on methods or types. We need to add these capability in order to enrich those names. ","Enhancement Request",Critical,Closed,"2016-06-13 16:11:27","2016-06-13 15:11:27",13
Mule,"Support encoding while sending Strings in the Sockets Extension","Nowadays, when we serialise the String that will be send/received through the socket we get the byte[] from it with  losing the encoding information.    Add a parameter to the SocketOperation and save the encoding information.","Enhancement Request",Major,Closed,"2016-06-13 16:04:56","2016-06-13 15:04:56",5
Mule,"Use new parsing mechanism in extensions framework","Take the work performed on the spike and complete it so that extensions use the new parsing mechanism","Enhancement Request",Critical,Closed,"2016-06-13 15:56:17","2016-06-13 14:56:17",13
Mule,"Support type converter on simple type collections","Collection with simple types parsed from child configuration elements must also support a custom converter between the configuration type and the value generated by the user.","Enhancement Request",Critical,Closed,"2016-06-13 15:52:50","2016-06-13 14:52:50",3
Mule,"Provide a builder api for creating DataType s","Replace DataTypeFactory with a builder API and move its code to mule-api.",Task,Major,Done,"2016-06-10 22:59:02","2016-06-10 21:59:02",5
Mule,"MetadataKeyId params are always considered as ParameterGroup","*MetadataKeyId params are always considered as ParameterGroup*    * Since the introduction of MultiLevel MetadataKeys, to represent this levels SDK started to represent this Keys as ParameterGroup.  * The problem comes with simple MetadataKey that are not ParameterGroups, but they are considered in that way, failing at parameter value resolution time.  * *Classes to look*:  ** {{AnnotationsBasedDescriber}}  ** {{MuleExtensionAnnotationParser}}  ** {{MethodArgumentResolverDelegate}}  ** {{IntrospectionUtils}}",Bug,Blocker,Closed,"2016-06-10 22:27:21","2016-06-10 21:27:21",3
Mule,"Child element generated for map parameter is pluralized","If the parameter is of type Map the child element associated to it pluralized even when it shouldn't.    Example:    The resulting schema add a child with name *accounts* instead of *account*    Expected: The child element should be the same",Bug,Major,Closed,"2016-06-10 18:39:27","2016-06-10 17:39:27",1
Mule,"Interface can be used as the type of a @ParameterGroup yet no error or warning is thrown","SDK is not checking that the field annotated as a @ParameterGroup is instantiable , which allows things like:        That doesn't make any sense because we want to use @ParameterGroup to gather together actual fields. This behaviour shouldn't be allowed (it isn't harmful but it will confuse the user for sure).    Fix: Check that the @ParameterGroup type is instantiable and if it is not throw an error.   ",Bug,Major,Closed,"2016-06-10 18:36:25","2016-06-10 17:36:25",1
Mule,"HTTP Listener sets arbitrary encoding","When I send an HTTP POST to an HTTP listener the message DataType has encoding=UTF-8 although I didn't set in the request. I've tried to change the default encoding of the Mule server for UTF-16 configuring it in the wrapper.conf but it doesn't pay attention to it. You can reproduce deploying the attached config and running {{curl -ik -X POST -d a.json -H 'Content-Type: juan/perez' http://localhost:8082/read-message}}.    h3. HTTP request  ",Bug,Major,Closed,"2016-06-09 21:22:32","2016-06-09 20:22:32",2
Mule,"Restarted configuration has no connectivity","Testing whether connections are broken when configs are stopped I found restarting them has no effect. Take the following code:    When trying to send a request again it is refused.  It seems like in LifecycleAwareConfigurationInstance, the stop performs and unbind but since the bind is performed in the initialise method, the connection is not reestablished at start time.",Bug,Major,Closed,"2016-06-09 20:20:15","2016-06-09 19:20:15",1
Mule,"Remove dependency on mule-commons","Mule 4 is still depending on mule-commons in order to use:  *  Bulk operation classes used on batch (org.mule.common.bulk.BulkOperationResult, org.mule.common.bulk.BulkItem)  * Connectivity testing (org.mule.common.Testable, org.mule.common.Result.Status, etc)  * Metadata (org.mule.common.metadata.ConnectorMetaDataEnabled, org.mule.common.metadata.MetaData, etc)  ",Task,Minor,Done,"2016-06-09 19:31:37","2016-06-09 18:31:37",1
Mule,"Sometimes file:write acquires lock even when the lock is already taken","When writing a file with a lock it fails only sometimes. To reproduce deploy the attached flow and run       This is the file structure:    temp  temp/.DS_Store  temp/file  temp/file.1  temp/file.10  temp/file.100  temp/file.1000  temp/file.101  temp/file.102  temp/file.103  temp/file.104  temp/file.105  temp/file.106  temp/file.107  temp/file.108  temp/file.109  temp/file.11  temp/file.110  temp/file.111  temp/file.112  temp/file.113  temp/file.114  temp/file.115  temp/file.116  temp/file.117  temp/file.118  temp/file.119  temp/file.12  temp/file.120  temp/file.121  temp/file.122  temp/file.123  temp/file.124  temp/file.125  temp/file.126  temp/file.127  temp/file.128  temp/file.129  temp/file.13  temp/file.130  temp/file.131  temp/file.132  temp/file.133  temp/file.134  temp/file.135  temp/file.136  temp/file.137  temp/file.138  temp/file.139  temp/file.14  temp/file.140  temp/file.141  temp/file.142  temp/file.143  temp/file.144  temp/file.145  temp/file.146  temp/file.147  temp/file.148  temp/file.149  temp/file.15  temp/file.150  temp/file.151  temp/file.152  temp/file.153  temp/file.154  temp/file.155  temp/file.156  temp/file.157  temp/file.158  temp/file.159  temp/file.16  temp/file.160  temp/file.161  temp/file.162  temp/file.163  temp/file.164  temp/file.165  temp/file.166  temp/file.167  temp/file.168  temp/file.169  temp/file.17  temp/file.170  temp/file.171  temp/file.172  temp/file.173  temp/file.174  temp/file.175  temp/file.176  temp/file.177  temp/file.178  temp/file.179  temp/file.18  temp/file.180  temp/file.181  temp/file.182  temp/file.183  temp/file.184  temp/file.185  temp/file.186  temp/file.187  temp/file.188  temp/file.189  temp/file.19  temp/file.190  temp/file.191  temp/file.192  temp/file.193  temp/file.194  temp/file.195  temp/file.196  temp/file.197  temp/file.198  temp/file.199  temp/file.2  temp/file.20  temp/file.200  temp/file.201  temp/file.202  temp/file.203  temp/file.204  temp/file.205  temp/file.206  temp/file.207  temp/file.208  temp/file.209  temp/file.21  temp/file.210  temp/file.211  temp/file.212  temp/file.213  temp/file.214  temp/file.215  temp/file.216  temp/file.217  temp/file.218  temp/file.219  temp/file.22  temp/file.220  temp/file.221  temp/file.222  temp/file.223  temp/file.224  temp/file.225  temp/file.226  temp/file.227  temp/file.228  temp/file.229  temp/file.23  temp/file.230  temp/file.231  temp/file.232  temp/file.233  temp/file.234  temp/file.235  temp/file.236  temp/file.237  temp/file.238  temp/file.239  temp/file.24  temp/file.240  temp/file.241  temp/file.242  temp/file.243  temp/file.244  temp/file.245  temp/file.246  temp/file.247  temp/file.248  temp/file.249  temp/file.25  temp/file.250  temp/file.251  temp/file.252  temp/file.253  temp/file.254  temp/file.255  temp/file.256  temp/file.257  temp/file.258  temp/file.259  temp/file.26  temp/file.260  temp/file.261  temp/file.262  temp/file.263  temp/file.264  temp/file.265  temp/file.266  temp/file.267  temp/file.268  temp/file.269  temp/file.27  temp/file.270  temp/file.271  temp/file.272  temp/file.273  temp/file.274  temp/file.275  temp/file.276  temp/file.277  temp/file.278  temp/file.279  temp/file.28  temp/file.280  temp/file.281  temp/file.282  temp/file.283  temp/file.284  temp/file.285  temp/file.286  temp/file.287  temp/file.288  temp/file.289  temp/file.29  temp/file.290  temp/file.291  temp/file.292  temp/file.293  temp/file.294  temp/file.295  temp/file.296  temp/file.297  temp/file.298  temp/file.299  temp/file.3  temp/file.30  temp/file.300  temp/file.301  temp/file.302  temp/file.303  temp/file.304  temp/file.305  temp/file.306  temp/file.307  temp/file.308  temp/file.309  temp/file.31  temp/file.310  temp/file.311  temp/file.312  temp/file.313  temp/file.314  temp/file.315  temp/file.316  temp/file.317  temp/file.318  temp/file.319  temp/file.32  temp/file.320  temp/file.321  temp/file.322  temp/file.323  temp/file.324  temp/file.325  temp/file.326  temp/file.327  temp/file.328  temp/file.329  temp/file.33  temp/file.330  temp/file.331  temp/file.332  temp/file.333  temp/file.334  temp/file.335  temp/file.336  temp/file.337  temp/file.338  temp/file.339  temp/file.34  temp/file.340  temp/file.341  temp/file.342  temp/file.343  temp/file.344  temp/file.345  temp/file.346  temp/file.347  temp/file.348  temp/file.349  temp/file.35  temp/file.350  temp/file.351  temp/file.352  temp/file.353  temp/file.354  temp/file.355  temp/file.356  temp/file.357  temp/file.358  temp/file.359  temp/file.36  temp/file.360  temp/file.361  temp/file.362  temp/file.363  temp/file.364  temp/file.365  temp/file.366  temp/file.367  temp/file.368  temp/file.369  temp/file.37  temp/file.370  temp/file.371  temp/file.372  temp/file.373  temp/file.374  temp/file.375  temp/file.376  temp/file.377  temp/file.378  temp/file.379  temp/file.38  temp/file.380  temp/file.381  temp/file.382  temp/file.383  temp/file.384  temp/file.385  temp/file.386  temp/file.387  temp/file.388  temp/file.389  temp/file.39  temp/file.390  temp/file.391  temp/file.392  temp/file.393  temp/file.394  temp/file.395  temp/file.396  temp/file.397  temp/file.398  temp/file.399  temp/file.4  temp/file.40  temp/file.400  temp/file.401  temp/file.402  temp/file.403  temp/file.404  temp/file.405  temp/file.406  temp/file.407  temp/file.408  temp/file.409  temp/file.41  temp/file.410  temp/file.411  temp/file.412  temp/file.413  temp/file.414  temp/file.415  temp/file.416  temp/file.417  temp/file.418  temp/file.419  temp/file.42  temp/file.420  temp/file.421  temp/file.422  temp/file.423  temp/file.424  temp/file.425  temp/file.426  temp/file.427  temp/file.428  temp/file.429  temp/file.43  temp/file.430  temp/file.431  temp/file.432  temp/file.433  temp/file.434  temp/file.435  temp/file.436  temp/file.437  temp/file.438  temp/file.439  temp/file.44  temp/file.440  temp/file.441  temp/file.442  temp/file.443  temp/file.444  temp/file.445  temp/file.446  temp/file.447  temp/file.448  temp/file.449  temp/file.45  temp/file.450  temp/file.451  temp/file.452  temp/file.453  temp/file.454  temp/file.455  temp/file.456  temp/file.457  temp/file.458  temp/file.459  temp/file.46  temp/file.460  temp/file.461  temp/file.462  temp/file.463  temp/file.464  temp/file.465  temp/file.466  temp/file.467  temp/file.468  temp/file.469  temp/file.47  temp/file.470  temp/file.471  temp/file.472  temp/file.473  temp/file.474  temp/file.475  temp/file.476  temp/file.477  temp/file.478  temp/file.479  temp/file.48  temp/file.480  temp/file.481  temp/file.482  temp/file.483  temp/file.484  temp/file.485  temp/file.486  temp/file.487  temp/file.488  temp/file.489  temp/file.49  temp/file.490  temp/file.491  temp/file.492  temp/file.493  temp/file.494  temp/file.495  temp/file.496  temp/file.497  temp/file.498  temp/file.499  temp/file.5  temp/file.50  temp/file.500  temp/file.501  temp/file.502  temp/file.503  temp/file.504  temp/file.505  temp/file.506  temp/file.507  temp/file.508  temp/file.509  temp/file.51  temp/file.510  temp/file.511  temp/file.512  temp/file.513  temp/file.514  temp/file.515  temp/file.516  temp/file.517  temp/file.518  temp/file.519  temp/file.52  temp/file.520  temp/file.521  temp/file.522  temp/file.523  temp/file.524  temp/file.525  temp/file.526  temp/file.527  temp/file.528  temp/file.529  temp/file.53  temp/file.530  temp/file.531  temp/file.532  temp/file.533  temp/file.534  temp/file.535  temp/file.536  temp/file.537  temp/file.538  temp/file.539  temp/file.54  temp/file.540  temp/file.541  temp/file.542  temp/file.543  temp/file.544  temp/file.545  temp/file.546  temp/file.547  temp/file.548  temp/file.549  temp/file.55  temp/file.550  temp/file.551  temp/file.552  temp/file.553  temp/file.554  temp/file.555  temp/file.556  temp/file.557  temp/file.558  temp/file.559  temp/file.56  temp/file.560  temp/file.561  temp/file.562  temp/file.563  temp/file.564  temp/file.565  temp/file.566  temp/file.567  temp/file.568  temp/file.569  temp/file.57  temp/file.570  temp/file.571  temp/file.572  temp/file.573  temp/file.574  temp/file.575  temp/file.576  temp/file.577  temp/file.578  temp/file.579  temp/file.58  temp/file.580  temp/file.581  temp/file.582  temp/file.583  temp/file.584  temp/file.585  temp/file.586  temp/file.587  temp/file.588  temp/file.589  temp/file.59  temp/file.590  temp/file.591  temp/file.592  temp/file.593  temp/file.594  temp/file.595  temp/file.596  temp/file.597  temp/file.598  temp/file.599  temp/file.6  temp/file.60  temp/file.600  temp/file.601  temp/file.602  temp/file.603  temp/file.604  temp/file.605  temp/file.606  temp/file.607  temp/file.608  temp/file.609  temp/file.61  temp/file.610  temp/file.611  temp/file.612  temp/file.613  temp/file.614  temp/file.615  temp/file.616  temp/file.617  temp/file.618  temp/file.619  temp/file.62  temp/file.620  temp/file.621  temp/file.622  temp/file.623  temp/file.624  temp/file.625  temp/file.626  temp/file.627  temp/file.628  temp/file.629  temp/file.63  temp/file.630  temp/file.631  temp/file.632  temp/file.633  temp/file.634  temp/file.635  temp/file.636  temp/file.637  temp/file.638  temp/file.639  temp/file.64  temp/file.640  temp/file.641  temp/file.642  temp/file.643  temp/file.644  temp/file.645  temp/file.646  temp/file.647  temp/file.648  temp/file.649  temp/file.65  temp/file.650  temp/file.651  temp/file.652  temp/file.653  temp/file.654  temp/file.655  temp/file.656  temp/file.657  temp/file.658  temp/file.659  temp/file.66  temp/file.660  temp/file.661  temp/file.662  temp/file.663  temp/file.664  temp/file.665  temp/file.666  temp/file.667  temp/file.668  temp/file.669  temp/file.67  temp/file.670  temp/file.671  temp/file.672  temp/file.673  temp/file.674  temp/file.675  temp/file.676  temp/file.677  temp/file.678  temp/file.679  temp/file.68  temp/file.680  temp/file.681  temp/file.682  temp/file.683  temp/file.684  temp/file.685  temp/file.686  temp/file.687  temp/file.688  temp/file.689  temp/file.69  temp/file.690  temp/file.691  temp/file.692  temp/file.693  temp/file.694  temp/file.695  temp/file.696  temp/file.697  temp/file.698  temp/file.699  temp/file.7  temp/file.70  temp/file.700  temp/file.701  temp/file.702  temp/file.703  temp/file.704  temp/file.705  temp/file.706  temp/file.707  temp/file.708  temp/file.709  temp/file.71  temp/file.710  temp/file.711  temp/file.712  temp/file.713  temp/file.714  temp/file.715  temp/file.716  temp/file.717  temp/file.718  temp/file.719  temp/file.72  temp/file.720  temp/file.721  temp/file.722  temp/file.723  temp/file.724  temp/file.725  temp/file.726  temp/file.727  temp/file.728  temp/file.729  temp/file.73  temp/file.730  temp/file.731  temp/file.732  temp/file.733  temp/file.734  temp/file.735  temp/file.736  temp/file.737  temp/file.738  temp/file.739  temp/file.74  temp/file.740  temp/file.741  temp/file.742  temp/file.743  temp/file.744  temp/file.745  temp/file.746  temp/file.747  temp/file.748  temp/file.749  temp/file.75  temp/file.750  temp/file.751  temp/file.752  temp/file.753  temp/file.754  temp/file.755  temp/file.756  temp/file.757  temp/file.758  temp/file.759  temp/file.76  temp/file.760  temp/file.761  temp/file.762  temp/file.763  temp/file.764  temp/file.765  temp/file.766  temp/file.767  temp/file.768  temp/file.769  temp/file.77  temp/file.770  temp/file.771  temp/file.772  temp/file.773  temp/file.774  temp/file.775  temp/file.776  temp/file.777  temp/file.778  temp/file.779  temp/file.78  temp/file.780  temp/file.781  temp/file.782  temp/file.783  temp/file.784  temp/file.785  temp/file.786  temp/file.787  temp/file.788  temp/file.789  temp/file.79  temp/file.790  temp/file.791  temp/file.792  temp/file.793  temp/file.794  temp/file.795  temp/file.796  temp/file.797  temp/file.798  temp/file.799  temp/file.8  temp/file.80  temp/file.800  temp/file.801  temp/file.802  temp/file.803  temp/file.804  temp/file.805  temp/file.806  temp/file.807  temp/file.808  temp/file.809  temp/file.81  temp/file.810  temp/file.811  temp/file.812  temp/file.813  temp/file.814  temp/file.815  temp/file.816  temp/file.817  temp/file.818  temp/file.819  temp/file.82  temp/file.820  temp/file.821  temp/file.822  temp/file.823  temp/file.824  temp/file.825  temp/file.826  temp/file.827  temp/file.828  temp/file.829  temp/file.83  temp/file.830  temp/file.831  temp/file.832  temp/file.833  temp/file.834  temp/file.835  temp/file.836  temp/file.837  temp/file.838  temp/file.839  temp/file.84  temp/file.840  temp/file.841  temp/file.842  temp/file.843  temp/file.844  temp/file.845  temp/file.846  temp/file.847  temp/file.848  temp/file.849  temp/file.85  temp/file.850  temp/file.851  temp/file.852  temp/file.853  temp/file.854  temp/file.855  temp/file.856  temp/file.857  temp/file.858  temp/file.859  temp/file.86  temp/file.860  temp/file.861  temp/file.862  temp/file.863  temp/file.864  temp/file.865  temp/file.866  temp/file.867  temp/file.868  temp/file.869  temp/file.87  temp/file.870  temp/file.871  temp/file.872  temp/file.873  temp/file.874  temp/file.875  temp/file.876  temp/file.877  temp/file.878  temp/file.879  temp/file.88  temp/file.880  temp/file.881  temp/file.882  temp/file.883  temp/file.884  temp/file.885  temp/file.886  temp/file.887  temp/file.888  temp/file.889  temp/file.89  temp/file.890  temp/file.891  temp/file.892  temp/file.893  temp/file.894  temp/file.895  temp/file.896  temp/file.897  temp/file.898  temp/file.899  temp/file.9  temp/file.90  temp/file.900  temp/file.901  temp/file.902  temp/file.903  temp/file.904  temp/file.905  temp/file.906  temp/file.907  temp/file.908  temp/file.909  temp/file.91  temp/file.910  temp/file.911  temp/file.912  temp/file.913  temp/file.914  temp/file.915  temp/file.916  temp/file.917  temp/file.918  temp/file.919  temp/file.92  temp/file.920  temp/file.921  temp/file.922  temp/file.923  temp/file.924  temp/file.925  temp/file.926  temp/file.927  temp/file.928  temp/file.929  temp/file.93  temp/file.930  temp/file.931  temp/file.932  temp/file.933  temp/file.934  temp/file.935  temp/file.936  temp/file.937  temp/file.938  temp/file.939  temp/file.94  temp/file.940  temp/file.941  temp/file.942  temp/file.943  temp/file.944  temp/file.945  temp/file.946  temp/file.947  temp/file.948  temp/file.949  temp/file.95  temp/file.950  temp/file.951  temp/file.952  temp/file.953  temp/file.954  temp/file.955  temp/file.956  temp/file.957  temp/file.958  temp/file.959  temp/file.96  temp/file.960  temp/file.961  temp/file.962  temp/file.963  temp/file.964  temp/file.965  temp/file.966  temp/file.967  temp/file.968  temp/file.969  temp/file.97  temp/file.970  temp/file.971  temp/file.972  temp/file.973  temp/file.974  temp/file.975  temp/file.976  temp/file.977  temp/file.978  temp/file.979  temp/file.98  temp/file.980  temp/file.981  temp/file.982  temp/file.983  temp/file.984  temp/file.985  temp/file.986  temp/file.987  temp/file.988  temp/file.989  temp/file.99  temp/file.990  temp/file.991  temp/file.992  temp/file.993  temp/file.994  temp/file.995  temp/file.996  temp/file.997  temp/file.998  temp/file.999  temp/out  temp/out/out  temp/out/output.1  temp/out/output.10  temp/out/output.100  temp/out/output.1000  temp/out/output.101  temp/out/output.102  temp/out/output.103  temp/out/output.104  temp/out/output.105  temp/out/output.106  temp/out/output.107  temp/out/output.108  temp/out/output.109  temp/out/output.11  temp/out/output.110  temp/out/output.111  temp/out/output.112  temp/out/output.113  temp/out/output.114  temp/out/output.115  temp/out/output.116  temp/out/output.117  temp/out/output.118  temp/out/output.119  temp/out/output.12  temp/out/output.120  temp/out/output.121  temp/out/output.122  temp/out/output.123  temp/out/output.124  temp/out/output.125  temp/out/output.126  temp/out/output.127  temp/out/output.128  temp/out/output.129  temp/out/output.13  temp/out/output.130  temp/out/output.131  temp/out/output.132  temp/out/output.133  temp/out/output.134  temp/out/output.135  temp/out/output.136  temp/out/output.137  temp/out/output.138  temp/out/output.139  temp/out/output.14  temp/out/output.140  temp/out/output.141  temp/out/output.142  temp/out/output.143  temp/out/output.144  temp/out/output.145  temp/out/output.146  temp/out/output.147  temp/out/output.148  temp/out/output.149  temp/out/output.15  temp/out/output.150  temp/out/output.151  temp/out/output.152  temp/out/output.153  temp/out/output.154  temp/out/output.155  temp/out/output.156  temp/out/output.157  temp/out/output.158  temp/out/output.159  temp/out/output.16  temp/out/output.160  temp/out/output.161  temp/out/output.162  temp/out/output.163  temp/out/output.164  temp/out/output.165  temp/out/output.166  temp/out/output.167  temp/out/output.168  temp/out/output.169  temp/out/output.17  temp/out/output.170  temp/out/output.171  temp/out/output.172  temp/out/output.173  temp/out/output.174  temp/out/output.175  temp/out/output.176  temp/out/output.177  temp/out/output.178  temp/out/output.179  temp/out/output.18  temp/out/output.180  temp/out/output.181  temp/out/output.182  temp/out/output.183  temp/out/output.184  temp/out/output.185  temp/out/output.186  temp/out/output.187  temp/out/output.188  temp/out/output.189  temp/out/output.19  temp/out/output.190  temp/out/output.191  temp/out/output.192  temp/out/output.193  temp/out/output.194  temp/out/output.195  temp/out/output.196  temp/out/output.197  temp/out/output.198  temp/out/output.199  temp/out/output.2  temp/out/output.20  temp/out/output.200  temp/out/output.201  temp/out/output.202  temp/out/output.203  temp/out/output.204  temp/out/output.205  temp/out/output.206  temp/out/output.207  temp/out/output.208  temp/out/output.209  temp/out/output.21  temp/out/output.210  temp/out/output.211  temp/out/output.212  temp/out/output.213  temp/out/output.214  temp/out/output.215  temp/out/output.216  temp/out/output.217  temp/out/output.218  temp/out/output.219  temp/out/output.22  temp/out/output.220  temp/out/output.221  temp/out/output.222  temp/out/output.223  temp/out/output.224  temp/out/output.225  temp/out/output.226  temp/out/output.227  temp/out/output.228  temp/out/output.229  temp/out/output.23  temp/out/output.230  temp/out/output.231  temp/out/output.232  temp/out/output.233  temp/out/output.234  temp/out/output.235  temp/out/output.236  temp/out/output.237  temp/out/output.238  temp/out/output.239  temp/out/output.24  temp/out/output.240  temp/out/output.241  temp/out/output.242  temp/out/output.243  temp/out/output.244  temp/out/output.245  temp/out/output.246  temp/out/output.247  temp/out/output.248  temp/out/output.249  temp/out/output.25  temp/out/output.250  temp/out/output.251  temp/out/output.252  temp/out/output.253  temp/out/output.254  temp/out/output.255  temp/out/output.256  temp/out/output.257  temp/out/output.258  temp/out/output.259  temp/out/output.26  temp/out/output.260  temp/out/output.261  temp/out/output.262  temp/out/output.263  temp/out/output.264  temp/out/output.265  temp/out/output.266  temp/out/output.267  temp/out/output.268  temp/out/output.269  temp/out/output.27  temp/out/output.270  temp/out/output.271  temp/out/output.272  temp/out/output.273  temp/out/output.274  temp/out/output.275  temp/out/output.276  temp/out/output.277  temp/out/output.278  temp/out/output.279  temp/out/output.28  temp/out/output.280  temp/out/output.281  temp/out/output.282  temp/out/output.283  temp/out/output.284  temp/out/output.285  temp/out/output.286  temp/out/output.287  temp/out/output.288  temp/out/output.289  temp/out/output.29  temp/out/output.290  temp/out/output.291  temp/out/output.292  temp/out/output.293  temp/out/output.294  temp/out/output.295  temp/out/output.296  temp/out/output.297  temp/out/output.298  temp/out/output.299  temp/out/output.3  temp/out/output.30  temp/out/output.300  temp/out/output.301  temp/out/output.302  temp/out/output.303  temp/out/output.304  temp/out/output.305  temp/out/output.306  temp/out/output.307  temp/out/output.308  temp/out/output.309  temp/out/output.31  temp/out/output.310  temp/out/output.311  temp/out/output.312  temp/out/output.313  temp/out/output.314  temp/out/output.315  temp/out/output.316  temp/out/output.317  temp/out/output.318  temp/out/output.319  temp/out/output.32  temp/out/output.320  temp/out/output.321  temp/out/output.322  temp/out/output.323  temp/out/output.324  temp/out/output.325  temp/out/output.326  temp/out/output.327  temp/out/output.328  temp/out/output.329  temp/out/output.33  temp/out/output.330  temp/out/output.331  temp/out/output.332  temp/out/output.333  temp/out/output.334  temp/out/output.335  temp/out/output.336  temp/out/output.337  temp/out/output.338  temp/out/output.339  temp/out/output.34  temp/out/output.340  temp/out/output.341  temp/out/output.342  temp/out/output.343  temp/out/output.344  temp/out/output.345  temp/out/output.346  temp/out/output.347  temp/out/output.348  temp/out/output.349  temp/out/output.35  temp/out/output.350  temp/out/output.351  temp/out/output.352  temp/out/output.353  temp/out/output.354  temp/out/output.355  temp/out/output.356  temp/out/output.357  temp/out/output.358  temp/out/output.359  temp/out/output.36  temp/out/output.360  temp/out/output.361  temp/out/output.362  temp/out/output.363  temp/out/output.364  temp/out/output.365  temp/out/output.366  temp/out/output.367  temp/out/output.368  temp/out/output.369  temp/out/output.37  temp/out/output.370  temp/out/output.371  temp/out/output.372  temp/out/output.373  temp/out/output.374  temp/out/output.375  temp/out/output.376  temp/out/output.377  temp/out/output.378  temp/out/output.379  temp/out/output.38  temp/out/output.380  temp/out/output.381  temp/out/output.382  temp/out/output.383  temp/out/output.384  temp/out/output.385  temp/out/output.386  temp/out/output.387  temp/out/output.388  temp/out/output.389  temp/out/output.39  temp/out/output.390  temp/out/output.391  temp/out/output.392  temp/out/output.393  temp/out/output.394  temp/out/output.395  temp/out/output.396  temp/out/output.397  temp/out/output.398  temp/out/output.399  temp/out/output.4  temp/out/output.40  temp/out/output.400  temp/out/output.401  temp/out/output.402  temp/out/output.403  temp/out/output.404  temp/out/output.405  temp/out/output.406  temp/out/output.407  temp/out/output.408  temp/out/output.409  temp/out/output.41  temp/out/output.410  temp/out/output.411  temp/out/output.412  temp/out/output.413  temp/out/output.414  temp/out/output.415  temp/out/output.416  temp/out/output.417  temp/out/output.418  temp/out/output.419  temp/out/output.42  temp/out/output.420  temp/out/output.421  temp/out/output.422  temp/out/output.423  temp/out/output.424  temp/out/output.425  temp/out/output.426  temp/out/output.427  temp/out/output.428  temp/out/output.429  temp/out/output.43  temp/out/output.430  temp/out/output.431  temp/out/output.432  temp/out/output.433  temp/out/output.434  temp/out/output.435  temp/out/output.436  temp/out/output.437  temp/out/output.438  temp/out/output.439  temp/out/output.44  temp/out/output.440  temp/out/output.441  temp/out/output.442  temp/out/output.443  temp/out/output.444  temp/out/output.445  temp/out/output.446  temp/out/output.447  temp/out/output.448  temp/out/output.449  temp/out/output.45  temp/out/output.450  temp/out/output.451  temp/out/output.452  temp/out/output.453  temp/out/output.454  temp/out/output.455  temp/out/output.456  temp/out/output.457  temp/out/output.458  temp/out/output.459  temp/out/output.46  temp/out/output.460  temp/out/output.461  temp/out/output.462  temp/out/output.463  temp/out/output.464  temp/out/output.465  temp/out/output.466  temp/out/output.467  temp/out/output.468  temp/out/output.469  temp/out/output.47  temp/out/output.470  temp/out/output.471  temp/out/output.472  temp/out/output.473  temp/out/output.474  temp/out/output.475  temp/out/output.476  temp/out/output.477  temp/out/output.478  temp/out/output.479  temp/out/output.48  temp/out/output.480  temp/out/output.481  temp/out/output.482  temp/out/output.483  temp/out/output.484  temp/out/output.485  temp/out/output.486  temp/out/output.487  temp/out/output.488  temp/out/output.489  temp/out/output.49  temp/out/output.490  temp/out/output.491  temp/out/output.492  temp/out/output.493  temp/out/output.494  temp/out/output.495  temp/out/output.496  temp/out/output.497  temp/out/output.498  temp/out/output.499  temp/out/output.5  temp/out/output.50  temp/out/output.500  temp/out/output.501  temp/out/output.502  temp/out/output.503  temp/out/output.504  temp/out/output.505  temp/out/output.506  temp/out/output.507  temp/out/output.508  temp/out/output.509  temp/out/output.51  temp/out/output.510  temp/out/output.511  temp/out/output.512  temp/out/output.513  temp/out/output.514  temp/out/output.515  temp/out/output.516  temp/out/output.517  temp/out/output.518  temp/out/output.519  temp/out/output.52  temp/out/output.520  temp/out/output.521  temp/out/output.522  temp/out/output.523  temp/out/output.524  temp/out/output.525  temp/out/output.526  temp/out/output.527  temp/out/output.528  temp/out/output.529  temp/out/output.53  temp/out/output.530  temp/out/output.531  temp/out/output.532  temp/out/output.533  temp/out/output.534  temp/out/output.535  temp/out/output.536  temp/out/output.537  temp/out/output.538  temp/out/output.539  temp/out/output.54  temp/out/output.540  temp/out/output.541  temp/out/output.542  temp/out/output.543  temp/out/output.544  temp/out/output.545  temp/out/output.546  temp/out/output.547  temp/out/output.548  temp/out/output.549  temp/out/output.55  temp/out/output.550  temp/out/output.551  temp/out/output.552  temp/out/output.553  temp/out/output.554  temp/out/output.555  temp/out/output.556  temp/out/output.557  temp/out/output.558  temp/out/output.559  temp/out/output.56  temp/out/output.560  temp/out/output.561  temp/out/output.562  temp/out/output.563  temp/out/output.564  temp/out/output.565  temp/out/output.566  temp/out/output.567  temp/out/output.568  temp/out/output.569  temp/out/output.57  temp/out/output.570  temp/out/output.571  temp/out/output.572  temp/out/output.573  temp/out/output.574  temp/out/output.575  temp/out/output.576  temp/out/output.577  temp/out/output.578  temp/out/output.579  temp/out/output.58  temp/out/output.580  temp/out/output.581  temp/out/output.582  temp/out/output.583  temp/out/output.584  temp/out/output.585  temp/out/output.586  temp/out/output.587  temp/out/output.588  temp/out/output.589  temp/out/output.59  temp/out/output.590  temp/out/output.591  temp/out/output.592  temp/out/output.593  temp/out/output.594  temp/out/output.595  temp/out/output.596  temp/out/output.597  temp/out/output.598  temp/out/output.599  temp/out/output.6  temp/out/output.60  temp/out/output.600  temp/out/output.601  temp/out/output.602  temp/out/output.603  temp/out/output.604  temp/out/output.605  temp/out/output.606  temp/out/output.607  temp/out/output.608  temp/out/output.609  temp/out/output.61  temp/out/output.610  temp/out/output.611  temp/out/output.612  temp/out/output.613  temp/out/output.614  temp/out/output.615  temp/out/output.616  temp/out/output.617  temp/out/output.618  temp/out/output.619  temp/out/output.62  temp/out/output.620  temp/out/output.621  temp/out/output.622  temp/out/output.623  temp/out/output.624  temp/out/output.625  temp/out/output.626  temp/out/output.627  temp/out/output.628  temp/out/output.629  temp/out/output.63  temp/out/output.630  temp/out/output.631  temp/out/output.632  temp/out/output.633  temp/out/output.634  temp/out/output.635  temp/out/output.636  temp/out/output.637  temp/out/output.638  temp/out/output.639  temp/out/output.64  temp/out/output.640  temp/out/output.641  temp/out/output.642  temp/out/output.643  temp/out/output.644  temp/out/output.645  temp/out/output.646  temp/out/output.647  temp/out/output.648  temp/out/output.649  temp/out/output.65  temp/out/output.650  temp/out/output.651  temp/out/output.652  temp/out/output.653  temp/out/output.654  temp/out/output.655  temp/out/output.656  temp/out/output.657  temp/out/output.658  temp/out/output.659  temp/out/output.66  temp/out/output.660  temp/out/output.661  temp/out/output.662  temp/out/output.663  temp/out/output.664  temp/out/output.665  temp/out/output.666  temp/out/output.667  temp/out/output.668  temp/out/output.669  temp/out/output.67  temp/out/output.670  temp/out/output.671  temp/out/output.672  temp/out/output.673  temp/out/output.674  temp/out/output.675  temp/out/output.676  temp/out/output.677  temp/out/output.678  temp/out/output.679  temp/out/output.68  temp/out/output.680  temp/out/output.681  temp/out/output.682  temp/out/output.683  temp/out/output.684  temp/out/output.685  temp/out/output.686  temp/out/output.687  temp/out/output.688  temp/out/output.689  temp/out/output.69  temp/out/output.690  temp/out/output.691  temp/out/output.692  temp/out/output.693  temp/out/output.694  temp/out/output.695  temp/out/output.696  temp/out/output.697  temp/out/output.698  temp/out/output.699  temp/out/output.7  temp/out/output.70  temp/out/output.700  temp/out/output.701  temp/out/output.702  temp/out/output.703  temp/out/output.704  temp/out/output.705  temp/out/output.706  temp/out/output.707  temp/out/output.708  temp/out/output.709  temp/out/output.71  temp/out/output.710  temp/out/output.711  temp/out/output.712  temp/out/output.713  temp/out/output.714  temp/out/output.715  temp/out/output.716  temp/out/output.717  temp/out/output.718  temp/out/output.719  temp/out/output.72  temp/out/output.720  temp/out/output.721  temp/out/output.722  temp/out/output.723  temp/out/output.724  temp/out/output.725  temp/out/output.726  temp/out/output.727  temp/out/output.728  temp/out/output.729  temp/out/output.73  temp/out/output.730  temp/out/output.731  temp/out/output.732  temp/out/output.733  temp/out/output.734  temp/out/output.735  temp/out/output.736  temp/out/output.737  temp/out/output.738  temp/out/output.739  temp/out/output.74  temp/out/output.740  temp/out/output.741  temp/out/output.742  temp/out/output.743  temp/out/output.744  temp/out/output.745  temp/out/output.746  temp/out/output.747  temp/out/output.748  temp/out/output.749  temp/out/output.75  temp/out/output.750  temp/out/output.751  temp/out/output.752  temp/out/output.753  temp/out/output.754  temp/out/output.755  temp/out/output.756  temp/out/output.757  temp/out/output.758  temp/out/output.759  temp/out/output.76  temp/out/output.760  temp/out/output.761  temp/out/output.762  temp/out/output.763  temp/out/output.764  temp/out/output.765  temp/out/output.766  temp/out/output.767  temp/out/output.768  temp/out/output.769  temp/out/output.77  temp/out/output.770  temp/out/output.771  temp/out/output.772  temp/out/output.773  temp/out/output.774  temp/out/output.775  temp/out/output.776  temp/out/output.777  temp/out/output.778  temp/out/output.779  temp/out/output.78  temp/out/output.780  temp/out/output.781  temp/out/output.782  temp/out/output.783  temp/out/output.784  temp/out/output.785  temp/out/output.786  temp/out/output.787  temp/out/output.788  temp/out/output.789  temp/out/output.79  temp/out/output.790  temp/out/output.791  temp/out/output.792  temp/out/output.793  temp/out/output.794  temp/out/output.795  temp/out/output.796  temp/out/output.797  temp/out/output.798  temp/out/output.799  temp/out/output.8  temp/out/output.80  temp/out/output.800  temp/out/output.801  temp/out/output.802  temp/out/output.803  temp/out/output.804  temp/out/output.805  temp/out/output.806  temp/out/output.807  temp/out/output.808  temp/out/output.809  temp/out/output.81  temp/out/output.810  temp/out/output.811  temp/out/output.812  temp/out/output.813  temp/out/output.814  temp/out/output.815  temp/out/output.816  temp/out/output.817  temp/out/output.818  temp/out/output.819  temp/out/output.82  temp/out/output.820  temp/out/output.821  temp/out/output.822  temp/out/output.823  temp/out/output.824  temp/out/output.825  temp/out/output.826  temp/out/output.827  temp/out/output.828  temp/out/output.829  temp/out/output.83  temp/out/output.830  temp/out/output.831  temp/out/output.832  temp/out/output.833  temp/out/output.834  temp/out/output.835  temp/out/output.836  temp/out/output.837  temp/out/output.838  temp/out/output.839  temp/out/output.84  temp/out/output.840  temp/out/output.841  temp/out/output.842  temp/out/output.843  temp/out/output.844  temp/out/output.845  temp/out/output.846  temp/out/output.847  temp/out/output.848  temp/out/output.849  temp/out/output.85  temp/out/output.850  temp/out/output.851  temp/out/output.852  temp/out/output.853  temp/out/output.854  temp/out/output.855  temp/out/output.856  temp/out/output.857  temp/out/output.858  temp/out/output.859  temp/out/output.86  temp/out/output.860  temp/out/output.861  temp/out/output.862  temp/out/output.863  temp/out/output.864  temp/out/output.865  temp/out/output.866  temp/out/output.867  temp/out/output.868  temp/out/output.869  temp/out/output.87  temp/out/output.870  temp/out/output.871  temp/out/output.872  temp/out/output.873  temp/out/output.874  temp/out/output.875  temp/out/output.876  temp/out/output.877  temp/out/output.878  temp/out/output.879  temp/out/output.88  temp/out/output.880  temp/out/output.881  temp/out/output.882  temp/out/output.883  temp/out/output.884  temp/out/output.885  temp/out/output.886  temp/out/output.887  temp/out/output.888  temp/out/output.889  temp/out/output.89  temp/out/output.890  temp/out/output.891  temp/out/output.892  temp/out/output.893  temp/out/output.894  temp/out/output.895  temp/out/output.896  temp/out/output.897  temp/out/output.898  temp/out/output.899  temp/out/output.9  temp/out/output.90  temp/out/output.900  temp/out/output.901  temp/out/output.902  temp/out/output.903  temp/out/output.904  temp/out/output.905  temp/out/output.906  temp/out/output.907  temp/out/output.908  temp/out/output.909  temp/out/output.91  temp/out/output.910  temp/out/output.911  temp/out/output.912  temp/out/output.913  temp/out/output.914  temp/out/output.915  temp/out/output.916  temp/out/output.917  temp/out/output.918  temp/out/output.919  temp/out/output.92  temp/out/output.920  temp/out/output.921  temp/out/output.922  temp/out/output.923  temp/out/output.924  temp/out/output.925  temp/out/output.926  temp/out/output.927  temp/out/output.928  temp/out/output.929  temp/out/output.93  temp/out/output.930  temp/out/output.931  temp/out/output.932  temp/out/output.933  temp/out/output.934  temp/out/output.935  temp/out/output.936  temp/out/output.937  temp/out/output.938  temp/out/output.939  temp/out/output.94  temp/out/output.940  temp/out/output.941  temp/out/output.942  temp/out/output.943  temp/out/output.944  temp/out/output.945  temp/out/output.946  temp/out/output.947  temp/out/output.948  temp/out/output.949  temp/out/output.95  temp/out/output.950  temp/out/output.951  temp/out/output.952  temp/out/output.953  temp/out/output.954  temp/out/output.955  temp/out/output.956  temp/out/output.957  temp/out/output.958  temp/out/output.959  temp/out/output.96  temp/out/output.960  temp/out/output.961  temp/out/output.962  temp/out/output.963  temp/out/output.964  temp/out/output.965  temp/out/output.966  temp/out/output.967  temp/out/output.968  temp/out/output.969  temp/out/output.97  temp/out/output.970  temp/out/output.971  temp/out/output.972  temp/out/output.973  temp/out/output.974  temp/out/output.975  temp/out/output.976  temp/out/output.977  temp/out/output.978  temp/out/output.979  temp/out/output.98  temp/out/output.980  temp/out/output.981  temp/out/output.982  temp/out/output.983  temp/out/output.984  temp/out/output.985  temp/out/output.986  temp/out/output.987  temp/out/output.988  temp/out/output.989  temp/out/output.99  temp/out/output.990  temp/out/output.991  temp/out/output.992  temp/out/output.993  temp/out/output.994  temp/out/output.995  temp/out/output.996  temp/out/output.997  temp/out/output.998  temp/out/output.999  temp/prefix  ",Bug,Critical,Closed,"2016-06-09 19:10:29","2016-06-09 18:10:29",5
Mule,"Allow to set up the collection type using a supplier instead of just a type","We need to do an improvement over MULE-9848 so instead of letting the user supply the type they can provide a supplier which can instantiate the collection type.",Task,Minor,New,"2016-06-09 18:10:33","2016-06-09 17:10:33",4
Mule,"Review if packages imported from other modules must be explicitly declared","Modules are declaring which classes are exported, both because the module own the class or because the class is a transitive dependency of a owned class.  Review if when a module requires to export a class from other module, that class must be declared as imported, so we can validate whether or not there is more than one module exporting the same package.",Task,"To be reviewed",Done,"2016-06-09 16:41:17","2016-06-09 15:41:17",8
Mule,"Change registry bootstrapping to avoid leaking classes on plugins","Bootstrap process works searching for bootstrap properties files and then instantiating each required object using reflection.  To be able to create those objects, the plugin must expose the classes of the objects to bootstrap, which is not good.  Bootstrapping process should invert the dependency so each plugin can instantiate objects without requiring to expose them.","Enhancement Request",Major,Closed,"2016-06-09 16:37:50","2016-06-09 15:37:50",8
Mule,"Ensure that modules are exporting the right packages","Ensure that each module exports everything that is transitively exposed from the module packages.",Task,Major,Done,"2016-06-09 16:29:07","2016-06-09 15:29:07",5
Mule,"Create maven plugin to ensure that modules export a complete API","Modules are defined exporting packages/resources.  In order to avoid classlaoding errors on runtime, each module must export every class that is part of the API exposed to other artifacts.  For example, if org.foo.A has a method doStuff(org.bar.B) then both org.foo and org.bar must be exported. If there are other dependencies, they must be also exported.","Enhancement Request",Major,Closed,"2016-06-09 16:24:23","2016-06-09 15:24:23",13
Mule,"Add a way to share libraries/module between application plugins","Different applications plugins can export classes from the same library (ex: connectors sharing a common SDK) or application plugins can extend the functionality provided by another connector (ex: FTP/FTPs).  If those plugins need to export the same classes, these classes must be shared in a library/module that is accesible to both plugins. Otherwise the application using those plugins will be exposed to two versions of the same class.","Enhancement Request",Blocker,Closed,"2016-06-09 16:12:01","2016-06-09 15:12:01",13
Mule,"Provide better logging for classloading process","Classloading model for mule 4 will be more complex than the one used on mule 3.x. In order to make easier to resolve classloading issues, it will be needed to understand what is going on.   Better logging must be provided, indicating which classes are loaded from which classloader, which classes are being filtered/accepted, etc.  ","Enhancement Request",Minor,Closed,"2016-06-09 16:01:57","2016-06-09 15:01:57",8
Mule,"New parsers still require the spring bundle","The new parsers still depend on the spring bundle to locate the XSD. This forces new components to have a dummy NamespaceHandler which basically does nothing, just to load the XSD.",Bug,Blocker,Closed,"2016-06-09 15:42:52","2016-06-09 14:42:52",8
Mule,"Support expression in HTTP response builder headers field","To make it possible for other teams to use the HTTP extension fully, the headers in the response should allow being set through an expression.",Bug,Major,Closed,"2016-06-09 15:29:21","2016-06-09 14:29:21",3
Mule,"Define commons-pool version in dependency management","Extract commons-pool version to a property and use it from dependencyManagemnt","Enhancement Request",Minor,Closed,"2016-06-09 15:08:52","2016-06-09 14:08:52",1
Mule,"Connection repository connectivity testing API implementation","Implementation of API defined by MULE-9860","Enhancement Request",Critical,Closed,"2016-06-09 15:01:58","2016-06-09 14:01:58",13
Mule,"Dev tooling connectivity testing API implementation - Application","Implementation of API defined in MULE-9704.    It seems we will have to rethink some of the capabilities of ExtAPI and move it to the runtime now that we have better capabilities over the mule configuration.","Enhancement Request",Critical,Closed,"2016-06-09 14:58:40","2016-06-09 13:58:40",8
Mule,"Define API for connectivity testing - Connection repository","We need to define the mule API for doing connectivity testing when someone is defining a new connection or trying to test connection over a connection created in the connection repository.",Task,Critical,Done,"2016-06-09 14:55:48","2016-06-09 13:55:48",5
Mule,"Define Message API's/wrappers/adaptors to support clean API + mule-core + transports","Define Message API's/wrappers/adaptors to support clean API + mule-core + transports",Task,Critical,Done,"2016-06-09 11:17:50","2016-06-09 10:17:50",8
Mule,"Make Message CorrelationId/SequenceID etc. message attributes rather than properties","Make Message CorrelationId/SequenceID etc. message attributes rather than properties",Task,Major,Done,"2016-06-09 11:16:59","2016-06-09 10:16:59",5
Mule,"Create MuleMessage builder","Create MuleMessage builder",Task,Critical,Done,"2016-06-09 11:15:20","2016-06-09 10:15:20",8
Mule,"Make MuleMessage immutable","Make MuleMessage immutable",Task,Major,Done,"2016-06-09 11:14:56","2016-06-09 10:14:56",8
Mule,"List of pojos not parsed","Run ParameterizedConfigParserTestCase and place a breakpoint to obtain the configuration named heisenberg.    The ricinPacks collection is null although properly defined on the definition provider.","Enhancement Request",Blocker,Closed,"2016-06-08 22:40:31","2016-06-08 21:40:31",3
Mule,"Support DI on ObjectFactory","It'd be great to be able to have dependencies injected in an ObjectFactory. Consider that it might not be possible to inject anything since by the time the getObject() method is invoked the spring registry might not yet be available, or maybe there's still not enough information to instantiate objects int the right order.    But at the very least, if the beans available on the SimpleRegistry (MuleContext, ConnectionManager, etc) could be injected, that'd be great.","Enhancement Request",Minor,Closed,"2016-06-08 22:35:48","2016-06-08 21:35:48",0
Mule,"Empty domain log files created for each extension","When you start Mule with the default application these empty log files are created:        Even if you use the extension nothing is added to those files.",Bug,Major,Closed,"2016-06-08 21:50:48","2016-06-08 20:50:48",1
Mule,"Support for parsing maps","Need to add support for parsing Maps. Just like with collections, it should be possible to provide a Supplier<Map> which creates the map instance    Examples of desired syntax:    *From String to list of strings*        {code:xml}  <heisenberg:deaths-by-seasons>              <heisenberg:deaths-by-season key=s01>                  <heisenberg:deaths-by-season-item value=emilio/>                  <heisenberg:deaths-by-season-item value=domingo/>              </heisenberg:deaths-by-season>              <heisenberg:deaths-by-season key=s02 value=#[['some', 'other']]/>              <heisenberg:deaths-by-season key=s02 value=#[['tuco', 'tortuga']]/>          </heisenberg:deaths-by-seasons>  {code}    *From String to Long*  {code:java}  private Map<String, Long> recipe;  {code}    {code:xml}  <heisenberg:recipes>              <heisenberg:recipe key=methylamine value=75/>              <heisenberg:recipe key=pseudoephedrine value=0/>              <heisenberg:recipe key=P2P value=#[24+1]/>          </heisenberg:recipes>  {code}    *From String to Object*  {code:java}  private Map<String, Ricin> labeledRicin;  {code}    {code:xml}  <heisenberg:labeled-ricins>              <heisenberg:labeled-ricin key=pojo>                  <heisenberg:ricin microgramsPerKilo=22>                      <heisenberg:destination>                          <heisenberg:door victim=Lidia address=Stevia coffe shop/>                      </heisenberg:destination>                  </heisenberg:ricin>              </heisenberg:labeled-ricin>          </heisenberg:labeled-ricins>  {code}","Enhancement Request",Blocker,Closed,"2016-06-08 21:41:47","2016-06-08 20:41:47",5
Mule,"Lifecycle not applied on ObjectFactory output","When a component definition uses an ObjectFactory, lifecycle is applied on it but not on the object that it produces.     It should be applied on both",Bug,Blocker,Closed,"2016-06-08 21:29:41","2016-06-08 20:29:41",0
Mule,"Add the concept of referenceOrExpression","We need to be able to hint the parsers that a given attribute could either be a reference to a complex type, or an expression which returns an instance of such type.","Enhancement Request",Blocker,Open,"2016-06-08 21:14:01","2016-06-08 20:14:01",4
Mule,"Need to be able to provide the collection type when parsing a List","When parsing a child list (either complex or simple types), there should be a way to provide a Supplier which instantiates a custom type of collection.    These might also lead to change the API so that the AttributeDefinition refers simply to collections instead of Lists","Enhancement Request",Blocker,Closed,"2016-06-08 21:04:38","2016-06-08 20:04:38",3
Mule,"Add the capability to register multiple XmlInfoProviders","Currently, the XmlInfoProviders are obtained via SPI. We need an api so that they can be added programatically by a ComponentBuildingDefinitionProvider","Enhancement Request",Blocker,Closed,"2016-06-08 21:01:26","2016-06-08 20:01:26",3
Mule,"New parsers should support list of simple types","Currently, the new parsers support parsing childs of complex types through the fromChildConfiguration factor method. We need something similar so that things such as List<String> or List<int> can also be parsed.     Example, List of String called pets         As an additional suggestion, I would rename fromChildConfiguration to fromChildParameter, or something like that  ","Enhancement Request",Blocker,Closed,"2016-06-08 17:09:42","2016-06-08 16:09:42",3
Mule,"When assembling extensions/plugins, exclude dependencies with boot/system packages","This is to avoid including libraries in the assembly that will not be used.    This has to go hand in hand with a mechanism to determine which are those dependencies (currently, we only have a packages list in ContainerClassLoaderFactory#SYSTEM_PACKAGES and #BOOT_PACKAGES)",Task,Major,Done,"2016-06-08 15:01:53","2016-06-08 14:01:53",0
Mule,"Normalize loggers instanciation (SLF4J and static final)","Replace all logging instantiations to use SLF4J.  Also, make all loggers static and final.",Task,Minor,New,"2016-06-08 14:49:45","2016-06-08 13:49:45",8
Mule,"Replace FunctionalTestCase and superclasses with JUnit Rules","This will enable a better reusability of the testing infrastructure.","Enhancement Request",Minor,Open,"2016-06-08 14:13:21","2016-06-08 13:13:21",32
Mule,"Cleanup MuleMessage properties implementation","Cleanup, make properties case sensitive.",Task,Critical,Done,"2016-06-07 22:50:17","2016-06-07 21:50:17",5
Mule,"Make a reusable ActiveMQ Broker for tests","Make a reusable junit Rule for starting AMQ since that will be needed also in the system tests and the new JMS extension.",Task,Major,Done,"2016-06-07 16:02:36","2016-06-07 15:02:36",1
Mule,"StringIndexOutOfBoundsException is thrown while documenting the schema with javadoc ","StringIndexOutOfBoundsException is thrown while documenting the schema with javadoc.    ",Bug,Major,Closed,"2016-06-07 15:06:11","2016-06-07 14:06:11",5
Mule,"Attributes are not copied when MuleMessage is","When analysing some test that use a test queue element, the returned message had no attributes. The queue copies the event (and thus the message) but the attributes are not copied so they are lost.",Bug,Critical,Closed,"2016-06-07 14:50:39","2016-06-07 13:50:39",3
Mule,"Make management work in the compatibility module","Fix management support for transport/endpoint specific stuff.",Task,Major,Done,"2016-06-06 22:53:11","2016-06-06 21:53:11",1
Mule,"I cannot write an String to a file with an arbitrary encoding","I have created an String with ASCII encoding and I want to write it in a file with encoding UTF-16.",Bug,Major,Closed,"2016-06-06 19:34:09","2016-06-06 18:34:09",3
Mule,"file:write doesn't preserve encoding when writing an String","I want to be able to create an String with an encoding different from the default platform encoding during my flow execution and later write that String in a file with that encoding.",Bug,Major,Closed,"2016-06-06 19:30:12","2016-06-06 18:30:12",3
Mule,"Change application parsing to use new mechanism when all elements have a building definition","To verify that everything works with the new model we need to start parsing  all the configuration only using the new mechanism.    This approach will also let add new capabilities that can only be done with the new mechanism.",Task,Critical,Done,"2016-06-06 17:26:42","2016-06-06 16:26:42",8
Mule,"HTTP timeout when sending x-www-form-urlencoded POST","To reproduce deploy the attached config and run {{curl -X POST -d 'a=1&b=2' http://127.0.0.1:8081/print-payload}}",Bug,Blocker,Closed,"2016-06-06 17:16:01","2016-06-06 16:16:01",0
Mule,"Rename transports packages so they don't collide with the core packages","package org.mule.runtime is reserved for the runtime core classes. Classes in the compatibility plugin must have a different package prefix so they can be properly loaded by the new classloaders.",Task,Major,Done,"2016-06-06 15:57:13","2016-06-06 14:57:13",3
Mule,"Logged error should suggest how to enable flowstack","When an error is logged there is a hint about how to enable verbose logging:        We should add:    ","Enhancement Request",Minor,Closed,"2016-06-06 15:50:15","2016-06-06 14:50:15",0
Mule,"Improve MetadataResult error communication ","*Improve MetadataResult error communication*    * Nowadays when resolving metadata, this result are wrapped within a {{MetadataResult<>}}, this wrapper helps communicating if the resolutions finished correctly or not, and in this last case, communicates which was the error message.   * For cases where the resolution is just for input or output, the error message is very simple, because there is a unique error for the single resolution, the problem comes when resolving the metadata for the entire {{Component}}, so you resolve metadata for the *input* and *output* at the same time, and in the case that something fails you receive a message that you don't know where it came from (input or output), or in a worst scenario you get 2 error messages which you don't know how are their fathers.","Enhancement Request",Major,Closed,"2016-06-06 13:46:06","2016-06-06 12:46:06",8
Mule,"Add the concept of part name/level to MetadataKeys","*Add the concept of part name/level to MetadataKeys*    * Nowadays {{MetadataKeys}} are able to have {{MetadataKeys}} childs to represent multilevel metadata keys, the problem comes that each level of metadata key doesn't know to which part of the entire multi level MetadataKey represent.  * Doesn't having the name of the level inside the MetadataKey complex the Metadata resolution due that there is not way to ensure that each MetadataKey is really the level that the resolution needed.","Enhancement Request",Major,Closed,"2016-06-05 01:42:00","2016-06-05 00:42:00",13
Mule,"Thrown exceptions are unwrapped and trace is lost","Most exceptions that our internal HTTP client throws are wrapped in a IOException, thus the expected cause of a MessagingException from the HTTP requester is an IOException. However, most migrated test are failing because the exceptions received are more lower level.  For example, in HttpRequestTlsInsecureTestCase the exception received is a java.security.cert.CertificateException.",Bug,Critical,Closed,"2016-06-03 20:25:43","2016-06-03 19:25:43",3
Mule,"Determine how to handle javax.* packages","Currently, javax packages are handled as system packages.    However, there could also be the case where an application wants to use a jar containing such classes (not bundled in mule) and the current status doesn't allow to do so.    This can also happen in extensions. JMS extension to connect to active mq requires geronimo-j2ee-management_1.1_spec-1.0.1.jar, which contains interfaces in javax.* packages",Task,Major,Done,"2016-06-03 20:00:59","2016-06-03 19:00:59",8
Mule,"Extract plugin-only functionality from extensions-maven-plugin","For plugins, the assembly functionality of mule-extensions-maven-plugin is needed. It has to be extracted and reutilized by both plugins and extensions builder.",Task,Major,Done,"2016-06-03 19:42:19","2016-06-03 18:42:19",3
Mule,"Introduce the concept of @NoRef parameters","Currently, parameters of complex types support either expressions or static string values. When a static string is supplied, it is interpreted as a reference to an object on the Mule Registry.    There're cases such as <tcp:send content=blah /> in which the content attribute should be of type Object, but the static blah value should not be interpreted as a reference, but as the actual String blah.    To support these cases, the @NoRef attribute needs to be created. It can be applied either to an operation parameter or a configuration field.     Should also include updating connectors such as File, FTP and Http ","Enhancement Request",Major,Closed,"2016-06-03 17:20:13","2016-06-03 16:20:13",5
Mule,"Avoid exclusions for transitive dependencies in all-extensions pom","As part of the distributions we have a pom artifact that groups the extensions that would be added to the distro as apps-plugins.  These extensions have to be declared as zip type but as currently the maven-assembly-plugin is configure to build the lib/opt folder we have a limitation due to libraries from these extensions are being copied to the lib/opt.    This issue is forcing us to duplicate ourselves when declaring dependencies in extensions due to they also have to be excluded.    There is a open bug in maven-assembly-plugin related to this issue, it is supposed to work if you do wildcard exclusion:  https://issues.apache.org/jira/browse/MASSEMBLY-799",Task,Minor,Done,"2016-06-03 14:43:17","2016-06-03 13:43:17",1
Mule,"Lifecycle is not being applied on the connection used in a Message Source","If a source uses a connection that implements Initialisable interface, the initialise method is not being invoked.    This doesn't happen to the connections used for operations.    The test for this bug should consist in: Implementing Initialisable on HeisenbergConnection and setting some value during the initialise phase, and then check that value was correctly set. ",Bug,Critical,Closed,"2016-06-02 21:41:18","2016-06-02 20:41:18",1
Mule,"Byte to ByteArray ends up serialising Byte","When the payload is a {{java.lang.Byte}} instead of returning that value HTTP listener returns its serialized value or something else.  To reproduce deploy the below flow and run {{curl -i http://localhost:8081/http-respose-byte}}.  This occurs because the default is to seek a transformation to a ByteArray and the ObjectToByteArray transformer does not handle single Bytes, so SerializableToByteArray is used instead.  ",Bug,Minor,Closed,"2016-06-02 21:39:44","2016-06-02 20:39:44",8
Mule,"Manifest generator should use ExtensionWalker","Replace the custom iteration logic in ExportedArtifactsCollector with the ExtensionWalker",Task,Major,Done,"2016-06-02 15:23:10","2016-06-02 14:23:10",1
Mule,"Support multiple configuration values injection in ComponentBuildingDefinition","When defining how to create an Object from a configuration, we need to allow the injection of multiple configuration parameters or children into a single field/constructor argument.",Task,Critical,Done,"2016-06-02 14:49:56","2016-06-02 13:49:56",5
Mule,"Create serializer for ImportedTypesModelProperty","*Create serialiser for ImportedTypesModelProperty*    * {{ImportedTypesModelProperty}} is being serialized in the following way:   * This model property lacks of a serializer friendly name, to show a non Java name for the JSON. Look at --> {{JsonSerializationConstants.java}}  * Also review the serialized result, principally {{importedTypes}} attribute.","Enhancement Request",Major,Closed,"2016-06-02 13:25:04","2016-06-02 12:25:04",3
Mule,"If a domain fails to be deployed a NPE is thrown when deploying and app that is registered for the same domain","If the domain fails to be deployed then when an application is about to be deployed a NPE is thrown and also the status logged in console throws another NPE.    Domain:      Then application throws a NPE:      Finally the MuleDeploymentService throws another NPE:  ",Bug,Minor,Closed,"2016-06-01 22:25:42","2016-06-01 21:25:42",1
Mule,"Fix test case NonBlockingFullySupportedOneWayReplyToFunctionalTestCase","Test NonBlockingFullySupportedOneWayReplyToFunctionalTestCase is working only because it's always using the non blocking processing strategy. The default processing strategy change in the test case has no effect because the one set in the configuration is the one being used.",Task,"To be reviewed",Done,"2016-06-01 19:37:58","2016-06-01 18:37:58",4
Mule,"Provider not found error when running Mule Standalone","When an application/domain is deployed the following   ",Bug,Minor,Closed,"2016-06-01 15:13:56","2016-06-01 14:13:56",8
Mule,"Re-enable PGP security tests","PGP Tests are being skipped when no JCE installed because in previous versions of the JDK, some encryption methods were not available without JCE. Now we need to re-enable them.",Task,Major,Done,"2016-05-31 21:56:46","2016-05-31 20:56:46",0
Mule,"Missing i18n resource for validation extension","mule-module-validation when deployed as app-plugin (extension) it is not able to access its i18n resource bundle.    h5. Problem  Resource is not accessible due to org.mule.runtime.core.config.i18n.MessageFactory.getBundlePath() uses dot characters instead of slash characters.  Exception:      h5. Proposed solution  * To use slash instead of dot character for referencing to i18n resources due to they are exported as folders in MessageFactory  * Export the i18n resource file using  annotation from Extensions API so it will be accessible from the plugin classloader",Bug,Major,Closed,"2016-05-31 17:43:43","2016-05-31 16:43:43",2
Mule,"Add RAML metadata support to HTTP extension","The RAML metadata support was outside of the HTTP module but we now need to move it to the extension.",Task,Blocker,Done,"2016-05-30 23:01:44","2016-05-30 22:01:44",0
Mule,"Metadata model properties should not reference classes","Trying to get the extension from a mule app does not work.    When asking for a single instance the serializer crashes with the error:    {errorType:class java.lang.ClassCastException, errorMessage:com.google.common.collect.SingletonImmutableSet cannot be cast to java.util.List}    When asking for the entire list the error is:    {errorType:class java.lang.UnsupportedOperationException, errorMessage:Attempted to serialize java.lang.Class: java.lang.String. Forgot to register a type adapter?}    This happens because the MetadataKeyIdModelProperty class references types by class instead of using a MetadataType.    The mule app is a simple app that lists files of a directory:  ",Bug,Major,Closed,"2016-05-23 23:06:19","2016-05-23 22:06:19",1
Mule,"Extensions should generate studio plugin","Whatever Devkit does","Enhancement Request",Critical,Closed,"2016-05-30 16:50:59","2016-05-30 15:50:59",8
Mule,"MuleLoggerContextFactory should not create artifact descriptors","MuleLoggerContextFactory is creating artifact descriptors in order to determine which logging configuration should be used.  Creating descriptors requires to access the file system and requires and requires to create the artifact factories. In some cases, creating the artifact factory would require to create many different objects.  To avoid these problems the MuleLoggerContextFactory should use a service that searches for descriptors available in the deployment service's dependencies.","Enhancement Request",Major,Closed,"2016-05-30 15:53:45","2016-05-30 14:53:45",0
Mule,"Review per-app logging on mule 4","On mule 4, there are different types of mule artifacts. It must be defined what is the expected behaviour of those artifacts regarding logging.  As logging is highly related to classloading (because the logging context  is tracked by classlaoder), the new estructure of artifacts/classlaoders should be reviewed from the logging perspective and define how each artifact is supposed to log.",Task,Critical,Done,"2016-05-30 15:38:40","2016-05-30 14:38:40",0
Mule,"Fix the http-ext to include it as a zip in the distribution","Fix HTTP Extension to generate a zip and include it in the app-plugins folder to be treated as plugins. We should wait until the validations extension is fixed to move forward though.",Bug,Critical,Closed,"2016-05-30 15:36:57","2016-05-30 14:36:57",0
Mule,"Extension sources should include the concept of ExchangePattern","Sources should have the concept of Exchange pattern to indicate if they generate a response or not.    * First, a source should declare which patterns it does support (at least one).  * The supported types should be accesible from the SourceModel  * If the source supports more than one, then the SDK should generate DSL support so that the desired type is configurable  * The selected exchange pattern should be available in Runtime through the SourceContext  * It is the source's responsibility to honour that MEP, SDK will not enforce it    ","Enhancement Request",Major,Closed,"2016-05-27 22:08:49","2016-05-27 21:08:49",8
Mule,"Add non-blocking support for HTTP extension","The current extension is blocking. Once non-blocking support is defined we need to add it to HTTP.",Task,Critical,Done,"2016-05-27 22:04:53","2016-05-27 21:04:53",4
Mule,"include json representation of ExtensionModel inside extension's jar","For external reference, the extension's jar should include a extension_model.json file with the JSON representation of the model","Enhancement Request",Critical,Closed,"2016-05-27 22:00:58","2016-05-27 21:00:58",2
Mule,"ExtensionModel should say where is dynamic metadata supported","It should be possible by just looking at the ExtensionModel to know  which operation parameters support dynamic metadata and which operation have dynamic return types","Enhancement Request",Critical,Closed,"2016-05-27 21:46:49","2016-05-27 20:46:49",8
Mule,"Sources are instantiated twice","ExtensionMessageSource creates the source during initialisation and during start (because of the reconnection strategy).  The issue was fixed in MULE-9490 because it was blocking the task but now we need to add a test.",Bug,Major,Closed,"2016-05-27 21:06:00","2016-05-27 20:06:00",2
Mule,"Show detailed extension loading information","When deploying an application I need more detailed extension loading information to troubleshoot. Explain which extension is being loaded.","Enhancement Request",Minor,Resolved,"2016-05-27 20:53:18","2016-05-27 19:53:18",0
Mule,"move current sockets module to the transport compatibility layer","move current sockets module to the transport compatibility layer, using a different maven group and artifact ids, so that it doesn't conflicts with the new sockets extension",Task,Major,Done,"2016-05-27 19:12:45","2016-05-27 18:12:45",2
Mule,"A warning is not shown when using default baseDir","According to the spec this config should show a WARNING in start time because it is using the default baseDir:    ",Bug,Minor,Closed,"2016-05-27 17:51:43","2016-05-27 16:51:43",1
Mule,"Show clear error when a property is not resolved","When I try to deploy a config with a property that I don't configure it tries to deploy the application using the property text (`${propertyName}`) instead of failing because the property was not found.","Enhancement Request",Minor,Open,"2016-05-27 17:42:44","2016-05-27 16:42:44",8
Mule,"Validate the creation of recursive MetadataKeys","*Validate the creation of recursive MetadataKeys*    Nowadays exist two border cases of {{MetadataKey}} creation:    * *Recursive Keys:* When creating a multilevel key, you can set a child for a key, this is adding a new level to the MetadataKey, but the problem comes when this child is a parent in the key hierarchy creating a recursive relationship. Besides of been a invalid case this also can be a source of bugs for the parts that uses MetadataKeys: MetadataKey serialiser, this kind of recursive structure produces a {{StackOverflowError}} when trying to serialise the object.{code:title=Recursive keys|bgColor=#FFFFCE} Root Key      +      |      v  +->Key1  |   +  |   |  |   v  |  Key2  |   +  +---+    ","Enhancement Request",Major,Closed,"2016-05-27 17:19:27","2016-05-27 16:19:27",5
Mule,"Connection leak if pooling listener fails","If a Connection provider is pooling connections and the pooling listener fails to execute the onBorrow() method, then the connection is not returned to the pool nor invalidated.    ",Bug,Major,Closed,"2016-05-27 15:07:10","2016-05-27 14:07:10",1
Mule,"Change test extensions packaging from jar to mule-extension","We need to update the packaging of the test extensions so that we can use them inside mule apps",Task,Critical,Done,"2016-05-27 15:06:01","2016-05-27 14:06:01",5
Mule,"Add the concept of extension walker","As the ExtensionModel grows in complexity how to navigate and find things on it also becomes harder, which leaves to bugs or omissions.    Create the concept of ExtensionWalker so that the complexity can be abstracted.","Enhancement Request",Major,Closed,"2016-05-26 17:30:10","2016-05-26 16:30:10",1
Mule,"Spike on hooking the ExtAPI to the new xml parsing mechanism","We need to find a way to get rid of the bean definitions parsers from the ExtAPI and make it use the new parsing mechanism.",Task,Critical,Done,"2016-05-26 17:21:53","2016-05-26 16:21:53",13
Mule,"Classloading model prone to linkage errors","Current classloading model  suffers from LinkageErrors when applications or plugins redefine classes from the container classloader, and those classes are exposed through the API.  Example:  Container has      and application classloader contains:      When the application executes new C(), the linkage error will be thrown as  the B parameter passed to A, is the B from the application classloader, instead of being the one from the container.",Bug,Major,Closed,"2016-05-26 17:04:31","2016-05-26 16:04:31",8
Mule,"Define services for the mule container","Fill details  ","Enhancement Request",Major,Closed,"2016-05-26 17:03:08","2016-05-26 16:03:08",13
Mule,"Extensions to log operation and arguments when logging level is DEBUG","As a developer I would like extensions message processors to log operation and arguments when they are executed and logging level is TRACE. This way, when I have to troubleshoot an application I can set the logging level to TRACE and see how that message processor is invoked.","Enhancement Request",Minor,Open,"2016-05-26 16:04:37","2016-05-26 15:04:37",1
Mule,"Analyse ResponseFailureCallback changes impact","Some small changes were required in the response callback used for failures. We need to make sure they don't impact the behaviour of the extension.",Task,"To be reviewed",Done,"2016-05-26 12:33:41","2016-05-26 11:33:41",0
Mule,"Analyse CurrentEventHolder use in HTTP extension","Moving to 4.0, we need to analyse whether all the RequestContext related code is still necessary in the HTTP extension.",Task,Major,Done,"2016-05-26 12:31:42","2016-05-26 11:31:42",0
Mule,"Migrate functional test bean definition parsers to new mechanism","Migrate functional test bean definition parsers to new mechanism",Task,Critical,Done,"2016-05-25 00:02:13","2016-05-24 23:02:13",8
Mule,"Deadlocks comparing MuleEndpointURI","A deadlock was found when comparing instances of MuleEndpointURI under load.     To reproduce use this code:    ",Bug,Critical,Resolved,"2016-05-24 22:03:28","2016-05-24 21:03:28",0
Mule,"Migrate VM bean definitions to new parsing method","Migrate VM bean definitions to new parsing method.",Task,Critical,Done,"2016-05-24 19:52:31","2016-05-24 18:52:31",5
Mule,"Improve functional test case to work with extensions","Functional test case uses a filtering classloader similar to the one used on the standalone container in order to reproduce a similar behaviour.  That classloader uses a filter that exposes only the mule API. That filter is created using the available mule-module.properties files.  In order to use created extensions on functional test cases, each extension must currently provide a mule-module.properties file. This file is only used for testing purposes and must be removed and improve the functional test case to use the API information already defined in the extension descriptor.","Enhancement Request",Major,Closed,"2016-05-24 14:27:36","2016-05-24 13:27:36",13
Mule,"Add the capability to add attributes to the MuleMessage generated by the TestEventRunner ","The framework that we use today to run the tests is outdated with some of the changes that are going on in mule 4, because of that, we can't run a flow with a message that contains attributes.    Would be ideal if we can add a method to the FlowConstructRunner   _withAttributes(Serializable attributes)_ so we can prepare the flow this way        ","Enhancement Request",Major,Closed,"2016-05-24 01:53:40","2016-05-24 00:53:40",2
Mule,"Mapped subtype from a different module than its baseType is not parsed correctly","When extension A Imports a baseType Fruit from extension B, and maps it to a new subtype Apple (declared in A), when Apple is used as a parameter of some B component, then the parsing fails not finding the type Apple instantiate.    For the declarations:          Then, the following xml is valid for the schema, but the parser fails to instantiate the Apple    ",Bug,Major,Closed,"2016-05-23 21:07:07","2016-05-23 20:07:07",5
Mule,"Injected config not present during source initialisation","I have an Initialisable Source that references it's config:    However, when initialise() runs, the config is null.",Bug,Major,Closed,"2016-05-23 17:08:45","2016-05-23 16:08:45",1
Mule,"DefaultExtensionFactory is setting the incorrect ClassLoader","While doing some changes to classloaders as part of MULE-9652 I found that there is an issue related to how the extension classloader is set.  I'm testing my changes by using validations extensions in my application.    h5. Problem  DefaultExtensionFactory is setting MuleContainerSystemClassLoader instead of the application classloader when creating the RuntimeExtensionModel on method:      Actually, the extensionDeclarer has the correct reference to the app classloader:       h5. Expected result  Application should be successfully deployed and started    h5. Actual result  I'm getting a classnotfoundexception while the extension namespace handler is being registered. See log attached to the issue.",Bug,Major,Closed,"2016-05-23 14:36:33","2016-05-23 13:36:33",8
Mule,"Migrate 3.7 ReplyToHandler centric non-blocking support to use reactive streams API","The existing approach has significant limitations and is a maintenance issue.","Enhancement Request",Critical,Closed,"2016-05-22 16:26:53","2016-05-22 15:26:53",13
Mule,"Support grizzly's PRESERVE_HEADER_CASE property","Right now, all incoming headers are transformed to lower case by Grizzly. Thus all our code is based around that, meaning when we need a header like Host we ask for host, same with Content-Type and others.   However, the introduction of Grizzly property org.glassfish.grizzly.http.PRESERVE_HEADER_CASE means that when it's set to true all that code will fail. The property is very important for proxy scenarios where the headers received are meant to be sent back to another service exactly as received.   We should make sure our code works with that property and add tests to verify the proxy scenario is valid.","Enhancement Request",Major,Closed,"2016-05-20 20:24:59","2016-05-20 19:24:59",5
Mule,"Upgrade grizzly to 2.3.25","We need to upgrade to the latest version to be released around May 23 (2016).",Task,Major,Done,"2016-05-20 20:19:13","2016-05-20 19:19:13",1
Mule,"Extension plugin not working if annotated class defines an operation that uses an enum class not included in the same package","If the extension declares an operation that uses an enum class and it is not in the same package as the extension annotated class when application that uses this plugin is deployed it will fail due to the application classloader is not able to find the operation class when registering the extension.  This happens due to the exported packages is only fulfilled with the package of the extension annotated class.      As an example the mule-module-validation defines the extension:   so the metadata for the plugin would have this package as exported but at the same time the extension defines an operations with classes in the same package but internally end up using classes from   For this example the classes are: ValidationExtension->NumberValidationOperation->NumberType.  Where NumberType is an enum.",Bug,Major,Closed,"2016-05-20 16:23:23","2016-05-20 15:23:23",5
Mule,"Refactor FTP connector code to allow FTPS one to reuse it","Do some refactoring so that code is more reusable by the FTPS connector",Task,Major,Done,"2016-05-19 19:15:18","2016-05-19 18:15:18",0
Mule,"TlsContextFactory not properly parsed when used as extension parameters","When extensions take TLsContextFactory as parameters, the keyStore and trustStore elements are ignored injecting a blank TlsContextFactory which doesn't honour much of its config.",Bug,Critical,Closed,"2016-05-19 17:43:26","2016-05-19 16:43:26",1
Mule,"Complex type child elements not parsed when default value is set","In operations with complex parameters that have a default value like the following:        Then, support for creating the parameter as child element is provided, but is always overridden by the attribute's default value.   In the example, the operation will always take the users List form the users attribute, instead of parsing the child elements    ",Bug,Major,Closed,"2016-05-19 13:36:42","2016-05-19 12:36:42",5
Mule,"Reintroduce 'useTransportForUris' configuration flag","    This configuration allows components such as the WS consumer to use the http transport rather than the module to perform the http request.",Task,"To be reviewed",Done,"2016-05-18 23:53:59","2016-05-18 22:53:59",0
Mule,"Output MetadataResolvers should consider the message attributes","Currently the output metadata resolvers only represent the message payload. There're cases in which it's also necessary to represent the message attributes (e.g.: when the attribute type is an interface).    It should be possible to provide a resolver to handle such cases","Enhancement Request",Major,Closed,"2016-05-18 19:07:32","2016-05-18 18:07:32",5
Mule,"Collections of enums not supported as child elements","When an extension has a collection of enums as a parameter, the XSD only supports it as a expressionList attribute. It should be possible to also define it statically as child elements",Bug,Major,Closed,"2016-05-18 19:02:56","2016-05-18 18:02:56",3
Mule,"Extensions should not depend on mule-module-extensions-spring-support","*Extensions should not depend on mule-module-extensions-spring-support*    - In a opposite way that MULE-9665 do, extensions should not depend on {{mule-module-extensions-spring-support}}.","Enhancement Request",Major,Closed,"2016-05-17 23:13:51","2016-05-17 22:13:51",5
Mule,"Subtypes model property should not be externalizable","Subtypes model property should not be externalizable",Bug,Major,Closed,"2016-05-17 19:51:30","2016-05-17 18:51:30",1
Mule,"Rename operation is missing a overwrite feature in the new file and ftp connectors","When a file is renamed, a FileWriteMode is missing for the cases in which the target file already exists",Bug,Major,Closed,"2016-05-17 19:48:45","2016-05-17 18:48:45",3
Mule,"Top level parameters are not being registered for configuration specific operations ","Actually when registering top level parameters the sdk introspect every configuration parameter and every extension operation parameter.    It must also introspect all the operations that are configuration specific.  In order to achieve this the _ExtensionNamespaceHandler#registerTopLevelParameters_ method should be updated with that logic.",Bug,Critical,Closed,"2016-05-17 17:57:19","2016-05-17 16:57:19",1
Mule,"Change namespaces of the transports","This so they do not conflict with the new extensions for Mule 4.",Task,Major,Done,"2016-05-17 13:51:54","2016-05-17 12:51:54",3
Mule,"Validate SubTypes and BaseType alias names are not the same","When using SubTypes mapping, if a subtype declares the same alias name that its base type or some of its peers, then model validation should fail.",Bug,Major,Closed,"2016-05-16 18:34:56","2016-05-16 17:34:56",3
Mule,"Reintroduce TCP/SSL transports","Bring those transports back.",Task,Minor,Done,"2016-05-13 00:02:21","2016-05-12 23:02:21",5
Mule,"Remove HTTP module - Migrate tests","Migrate tests that use the old http module to use the new extension",Task,Blocker,Done,"2016-05-12 18:02:14","2016-05-12 17:02:14",8
Mule,"Define API for connectivity testing - Dev tooling","Define the API provided for dev tools to do connectivity testing over Configs and ideally over Sources as well",Task,Critical,Done,"2016-05-12 17:26:28","2016-05-12 16:26:28",8
Mule,"Migrate HTTP tests to use extension","The tests found in tests/http need to be migrated to use the new HTTP extension. Some might need to be ignored until certain functionality is completely migrated or deleted if the use case doesn't make since anymore.",Task,Critical,Done,"2016-05-12 17:24:36","2016-05-12 16:24:36",13
Mule,"Cleanup MuleMessage properties API","Separate properties mutable/immutable API. Clean up API. Require Serializable properties.",Task,Critical,Done,"2016-05-12 17:19:52","2016-05-12 16:19:52",8
Mule,"Migrate JMS bean definition parsers to new mechanism","Do a spike to see the effort to migrate transports BDP mechanism to new mechanism.",Task,Critical,Done,"2016-05-12 17:18:02","2016-05-12 16:18:02",8
Mule,"Migrate basic security filter to HTTP extension","HttpBasicAuthenticationFilter needs to be migrated in a way that allows the same functionality to be used.",Task,Critical,Done,"2016-05-12 17:14:50","2016-05-12 16:14:50",8
Mule,"Improve ComponentBuildingDefinition.Builder so it usage does not require use of copy","We need to improve the builder for ComponentBuildingDefinition so it usage does not require a copy method which may be error prone.",Task,"To be reviewed",Done,"2016-05-11 20:45:11","2016-05-11 19:45:11",4
Mule,"Redefine how MessageProcessor owners are configured","The idea is to remove a lot of duplicate code that we have in routers and scopes. For instance, doing lifecycle or having to create the message processor chain, or defining the MPs paths.",Task,Critical,New,"2016-05-11 20:20:04","2016-05-11 19:20:04",8
Mule,"Move mule client to compatibility","Since AbstractBaseOptionsBuilder is part of the API we should try not to expose methods that are required to work with transports.","Enhancement Request","To be reviewed",Resolved,"2016-05-11 18:45:24","2016-05-11 17:45:24",4
Mule,"Split Jar reactor from Distribution reactor ","APIkit is included in Mule distribution, but it depends on the Mule jars. To build Mule distribution we need first to build the jars, then build APIkit and then the distribution.",Task,Major,Done,"2016-05-11 18:12:55","2016-05-11 17:12:55",3
Mule,"Wrong schema generation when Parameter List has a name that cannot be singularised.","Having a List @Parameter attribute with a name that cannot be singularised  is generating the childs with the same name as the parent.  So for this cases the child name should be composed by the parent name and append to it a *-item*.    For example having      The generated schema will contain something like this for this element:      The parent should be named *bcc* and the child *bcc-item*    ",Bug,Major,Closed,"2016-05-10 21:51:18","2016-05-10 20:51:18",8
Mule,"Implicit provider generation fails assigning default value to attribute","I have a ConnectionProvider with the following optional attribute:    Since all it's configuration is quite advanced, defining a connection is not required. However, when I try defining my config without it I get the following error:    This is the configuration definition:    Defining an empty http:request-connection within it solves the problem.",Bug,Critical,Closed,"2016-05-10 18:03:12","2016-05-10 17:03:12",5
Mule,"Extensions spring support module is required to use an extension","In order to use an extension in a project, the following dependency must be present:    Otherwise things like abstractConnectionProvider won't be found.",Bug,Critical,Closed,"2016-05-10 16:15:25","2016-05-10 15:15:25",8
Mule,"Define the list of objects that we will allow to inject in the domain objects","There's a bunch of objects that are provided by mule and must be possible to inject them in the domain objects.    The class ObjectReferencePopulator contains a hardcoded list of values. This list must be populated ideally from a centralized place in which we define the set of object that will be part of the API and accesible by extensions or core domain objects.",Task,Blocker,Done,"2016-05-09 20:10:54","2016-05-09 19:10:54",8
Mule,"Review tests for new TCP/UDP/SSL connectors","Make sure new connectors have 100% feature parity with the old transport",Task,Major,Done,"2016-05-09 16:23:24","2016-05-09 15:23:24",13
Mule,"Review tests for new Email connector","Make sure that the new EMail connector has 100% feature parity with the old transport",Task,Major,Done,"2016-05-09 16:20:52","2016-05-09 15:20:52",8
Mule,"Implement new TCP, UDP and SSL connectors","Implement new TCP, UDP and SSL connectors for Mule 4","Enhancement Request",Major,Closed,"2016-05-09 15:52:20","2016-05-09 14:52:20",13
Mule,"Implement new Email connector","Implement new email connector for Mule 4","Enhancement Request",Major,Closed,"2016-05-09 15:48:49","2016-05-09 14:48:49",13
Mule,"Add SFTP support to new FTP connector","Add SFTP support for the new ftp connector implemented in MULE-9216","Enhancement Request",Major,Closed,"2016-05-09 15:20:45","2016-05-09 14:20:45",8
Mule,"Loading Interface Metadata type with ExtensionsFieldHandler adds inexistent fields to the MetadataType. ","When using ClassTypeLoader to load an Interface Type with getter methods defined the resulting *MetadataType* contains inexistent fields      For example having an Interface Animal like this one:      The resulting MetadataType will contain a field named speciesName ",Bug,Major,Closed,"2016-05-06 18:42:30","2016-05-06 17:42:30",1
Mule,"Upgrade Saxon to 9.6.0.7-HE","Upgrade Saxon due to several issues have been solved since 9.6.0-7-HE version.   * 9.6.0-1-HE is the current version used in Mule: [List of issues solved in Saxon 9.6-HE|https://sourceforge.net/projects/saxon/files/Saxon-HE/9.6/]",Task,Minor,Done,"2016-05-06 19:01:31","2016-05-06 18:01:31",0
Mule,"Attributes clash between interface baseType and class subType in schema","I'm defining the following subtype mapping, where ProxyConfig is an interface, DefaultProxyConfig (alias proxy) a proper implementation and NtlmProxyConfig (alias ntlm-proxy) another that extends it:    DefaultProxyConfig defines the following parameters:    The subtype is then used as a parameter for a ConnectionProvider:    When the schema is generated the following are types are defined:    Thus a conflict arises since both ProxyConfig and DefaultProxyConfig have the attributes from the latter, which is weird since ProxyConfig is an interface. The following error indicating the clash is thrown when trying to parse a test xml:  ",Bug,Major,Closed,"2016-05-06 17:07:05","2016-05-06 16:07:05",1
Mule,"Extension sources should have a CompletionHandler which receives an ExceptionCallback","Extensions sources use a CompletionHandler to get a callback when the owning flow finishes processing the message.    However, if the onComplete() method fails, an ExceptionCallback is needed so that the CompletionHandler notifies that it couldn't handle the response.    Notice that this requires having the MuleEvent moved over to mule-api",Bug,Major,Closed,"2016-05-05 18:47:28","2016-05-05 17:47:28",3
Mule,"Extensions using external parent doesn't compile due to lack of dependencies","*Extensions using external parent doesn't compile due to lack of dependencies*    * When compiling an Extension using the external extension parent {{mule-extensions-parent}}, fails with the following error:    * This issue is because the {{mule-module-extensions-spring-support}} is configured with *test scope*",Bug,Major,Closed,"2016-05-05 16:05:48","2016-05-05 15:05:48",1
Mule,"Configs with sources require some connected operation","i have the following configuration:    Then I define the following element:  {code:xml}      <httpn:listener-config name=lisConfig>          <httpn:listener-connection host=localhost port=${serverPort} protocol=HTTP/>      </httpn:listener-config>   {code}  However, when it's parsed the connection is ignored causing the following error:  {code}  org.mule.runtime.api.connection.ConnectionException: No ConnectionProvider has been registered for owner org.mule.extension.http.api.listener.HttpListenerConfig@5f642a7e  {code}  It seems the error is in org.mule.runtime.module.extension.internal.config.ConfigurationBeanDefinitionParser#parseConfigurationProvider since the provider is ignored if no connected operations are found in the config:  {code:java}          if (MuleExtensionUtils.getConnectedOperations(configurationModel).isEmpty())          {              builder.addConstructorArgValue(new StaticValueResolver<>(null));              return;          }  {code}  As a worked around I added a dummy operation to the config that takes a connection.",Bug,Major,Closed,"2016-05-05 15:05:43","2016-05-05 14:05:43",3
Mule,"Child element not generated for SubType in Source","If a message source has a Parameter for which a subtype is defined, the XSD attribute is generated but the XSD element is not",Bug,Major,Closed,"2016-05-04 22:38:01","2016-05-04 21:38:01",3
Mule,"Make CompletionHandler receive a MuleEvent instead of a MuleMessage","Right now Sources are forced to create a CompletionHandler that takes a MuleMessage. However, the new message is quite limiting: you can basically only ask for the payload and the data type (attributes too but at that point it won't make too much sense). Things like the encoding cannot be determined. I think it would be best to use a MuleEvent.","Enhancement Request",Major,Closed,"2016-05-04 22:10:37","2016-05-04 21:10:37",2
Mule,"OAuth2 authorization-code-grant-type is always expecting a refresh_token when it is optional according to the spec","h5. Problem  According to https://tools.ietf.org/html/rfc6749#section-1.5 refresh_token is optional:  {quote}     Refresh tokens are credentials used to obtain access tokens.  Refresh     tokens are issued to the client by the authorization server and are     used to obtain a new access token when the current access token     becomes invalid or expires, or to obtain additional access tokens     with identical or narrower scope (access tokens may have a shorter     lifetime and fewer permissions than authorized by the resource     owner).  Issuing a refresh token is optional at the discretion of the     authorization server.  If the authorization server issues a refresh     token, it is included when issuing an access token (i.e., step (D) in     Figure 1).  {quote}  More detail about this in:  https://tools.ietf.org/html/rfc6749#section-5.1  {quote}  Successful Response     The authorization server issues an access token and optional refresh     token, and constructs the response by adding the following parameters     to the entity-body of the HTTP response with a 200 (OK) status code:       access_token           REQUIRED.  The access token issued by the authorization server.       token_type           REQUIRED.  The type of the token issued as described in           Section 7.1.  Value is case insensitive.       expires_in           RECOMMENDED.  The lifetime in seconds of the access token.  For           example, the value 3600 denotes that the access token will           expire in one hour from the time the response was generated.           If omitted, the authorization server SHOULD provide the           expiration time via other means or document the default value.       refresh_token           OPTIONAL.  The refresh token, which can be used to obtain new           access tokens using the same authorization grant as described           in Section 6.       scope           OPTIONAL, if identical to the scope requested by the client;           otherwise, REQUIRED.  The scope of the access token as           described by Section 3.3.    {quote}  Current implementation of OAuth2 authorization-code-grant-type is expecting always to get refresh_token so if the OAuth2 server during a refresh token operation sends only the access_token Mule is failing to get the refresh_token with the following exception:      h5. Proposed Solution  As described in the spec if there is a refresh_token issued by the OAuth2 server it should be used for getting new access_tokens if not it should fail when the current access_token is no longer valid (after a 401/403 status code and before retrying the request) and a exception of type should be thrown. For instance:   ",Bug,Major,Resolved,"2016-05-04 20:28:47","2016-05-04 19:28:47",0
Mule,"Define functionality required on embedded mode distribution","Mule embedded on mule 3 provides a reduce set of features compared to standalone distribution.  For mule 4, we need to define what features are required to work on a embedded mode, as the feature set would be completely reduce now that we make use of extensions as application plugins",Task,Critical,Done,"2016-05-04 14:26:31","2016-05-04 13:26:31",16
Mule,"Add a way to deploy applications that use plugins not packaged in the app","As part of the isolation improvement on Mule 4, connectors and extensions will be packaged as application plugins. Those application plugins will be deployed inside each application that use them.  As the number of used plugins increases, so does the size of the application. Some plugins, In particular Data-weave (when converted to an application plugin) are pretty big which, would make the problem more significative.    Problem to solve is then how to define an application that can use plugins that are not packaged inside the application artifact.  ","Enhancement Request",Major,Closed,"2016-05-04 14:22:53","2016-05-04 13:22:53",8
Mule,"Add a way to share application plugins on the domain","Provide a way to use application plugins on a domain in order to share resources from those plugins.  For example, if HTTP is an application plugin, I would like to share a configuration across the apps in the domain.","Enhancement Request",Major,Closed,"2016-05-04 13:38:49","2016-05-04 12:38:49",8
Mule,"Define standalone distribution content","Need to define what would be the content of the standalone distribution: which modules and extensions will be available in the basic distro? If no every available module/extension is shipped on the distro, can the user build custom distributions to include them? ",Task,Major,Done,"2016-05-04 13:35:33","2016-05-04 12:35:33",8
Mule,"Remove visibility of server plugins from applications","Applications have access to functionality provided by server plugins by getting access to those plugin's classloaders.  In mule 4, we want to provide extra functionality only with application plugins, that is removing the visibility of server plugins from the app.  ",Task,Minor,Done,"2016-05-04 13:31:32","2016-05-04 12:31:32",3
Mule,"Define initial Mule API","An initial Mule API must de defined, maybe exposing everything that we expose without isolation, so we can start cleaning it up later.",Task,Critical,Done,"2016-05-04 13:25:48","2016-05-04 12:25:48",8
Mule,"Check that different application plugins do not export the same java packages","On application deployment, an extra validation should be added to ensure that different application plugins do not export the same Java packages to avoid classloading problems on runtime.","Enhancement Request",Major,Closed,"2016-05-04 13:23:19","2016-05-04 12:23:19",4
Mule,"Externalise spring configuration from mule config files","Do not support anymore spring beans inside mule configuration.     An spring integration module should be used for that instead.",Task,Blocker,Done,"2016-05-03 21:28:23","2016-05-03 20:28:23",16
Mule,"MessageHandler should not restrict CompletionHandler's result type","Right now the MessageHandler's handle method is defined as:    which basically means a Source should produce and expect the same kind of MuleMessage since the payload and attributes type must be the same for the message and completionHandler. This is wrong since nothing can be assumed about the flow's result.  ",Bug,Major,Closed,"2016-05-03 19:48:48","2016-05-03 18:48:48",1
Mule,"Add Datasense support for partial fetching of multi-level keys . ","A main concern regarding multiple-level keys was that all the possible combinations of the multiple levels had to be resolved at the same time, on a single fetch. This can be a time-consuming task\  To solve this we should add the possibility of partial construction/fetching of the keys that will be provided, allowing the connector developer to improve the responsiveness if its use case requires it.     A possible solution is to add a *List<MetadataKey> appendChilds(MetadataContext context, T key)* method to the MetadataKeyResolver interface that appends the result List<MetadataKey> to the partial fetched key.      Work started in: https://github.com/mulesoft/mule/tree/partial-key-fetching","Enhancement Request",Major,Closed,"2016-05-03 18:58:34","2016-05-03 17:58:34",8
Mule,"Expression for Map in POJO not generated","I have a POJO containing a Map, which is used in an operation:    But the schema generated only consideres adding each element explicitly, not via an expression that resolves to a Map:  ",Bug,Critical,Closed,"2016-05-02 21:22:18","2016-05-02 20:22:18",5
Mule,"Map in POJO not populated","I have a POJO which I'm using in an operation and it contains a Map marked as a Parameter:    However, using the following the operation receives a requestBuilder that has a null map causing an NPE:  ",Bug,Critical,Closed,"2016-05-02 21:14:04","2016-05-02 20:14:04",3
Mule,"Application of function requiring Enum output fails","I have a parameter declared as     where HttpStreamingType is an Enum (AUTO, ALWAYS, NEVER).  When I try to apply the function, however, I get:  ",Bug,Critical,Closed,"2016-04-29 18:47:53","2016-04-29 17:47:53",3
Mule,"Clean up new parsing mechanism code","Currently we have the old parsing mechanism working together with the new parsing mechanism in order to replace spring using an incremental changes.    There would be probably other tasks to get rid of old parsing mechanism for different extensions but this one is meant to review the new parsing mechanism to remove the code added to make it work side by side with the old mechanism.",Task,Blocker,New,"2016-04-29 18:18:18","2016-04-29 17:18:18",8
Mule,"Include AHC/Grizzly performance fix in mule's custom ahc code","Include the changes with the performance fix in ahc (https://github.com/AsyncHttpClient/async-http-client/commit/178ec0d668884be648f0a192666e1efcb228f857) into our ahc custom code.",Task,Major,Done,"2016-04-28 17:14:13","2016-04-28 16:14:13",2
Mule,"Reintroduce file transport","Undo the changes from MULE-8873",Task,Minor,Done,"2016-04-28 15:39:14","2016-04-28 14:39:14",8
Mule,"Reintroduce HTTP transport","Undo the changes from MULE-9111",Task,Minor,Done,"2016-04-28 15:39:03","2016-04-28 14:39:03",13
Mule,"Cherry pick changes in transports from 3.x","Including but not limited to: MULE-9503, MULE-9417, MULE-9556  ",Task,Minor,Done,"2016-04-28 15:38:56","2016-04-28 14:38:56",3
Mule,"Refactor out transport spring support code","Refactor out transport spring support code",Task,Major,Done,"2016-04-28 15:38:04","2016-04-28 14:38:04",8
Mule,"Refactor out transport support code in core","Refactor out transport support code in core",Task,Major,Done,"2016-04-28 15:37:55","2016-04-28 14:37:55",8
Mule,"Separate transport core support to its own module","Separate transport core support to its own module",Task,Major,Done,"2016-04-28 15:37:42","2016-04-28 14:37:42",8
Mule,"Update Subtypes schema generation to avoid name collisions with parameters","Modify schema generation for subtypes to use type references instead of creating named elements.     With this, we should be able to have a parameter with the same name as the subtypes alias name",Bug,Major,Closed,"2016-04-28 15:33:25","2016-04-28 14:33:25",8
Mule,"Updated log4j version to 2.3 for versions previous 3.8.","A client pointed to us that the logger MP was impacting highly the performance of a simple application, updating the version of the logger from 2.1 to 2.3 decreases the impact of the logging from a 43% to 20%.    We also need to create a patch for the client (SE-3664).","Enhancement Request",Major,Closed,"2016-04-28 13:49:06","2016-04-28 12:49:06",2
Mule,"NestedProcessors generates leaks of OperationMessageProcessor instances","When there is a flow using validation:all, there is a constant generation of beans of type OperationMessageProcessor as singleton in the mule registry.    This constant generation, over time, causes OutOfMemoryError in the servers.    The flow that reproduces this issue is:  <?xml version=1.0 encoding=UTF-8?>  <mule xmlns:http=http://www.mulesoft.org/schema/mule/http xmlns:validation=http://www.mulesoft.org/schema/mule/validation xmlns=http://www.mulesoft.org/schema/mule/core xmlns:doc=http://www.mulesoft.org/schema/mule/documentation   xmlns:spring=http://www.springframework.org/schema/beans    xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance   xsi:schemaLocation=http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd  http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd  http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd  http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd>      <http:listener-config name=http-lc-0.0.0.0-8081 host=0.0.0.0 port=8081 protocol=HTTP/>      <flow name=leak-operationmessageprocessorFlow>          <http:listener config-ref=http-lc-0.0.0.0-8081 path=/ doc:name=HTTP/>          <validation:all doc:name=Validation>              <validation:validations>                  <validation:is-true expression=#[1 == 1]/>              </validation:validations>          </validation:all>      </flow>  </mule>  ",Bug,Critical,Closed,"2016-04-27 23:42:04","2016-04-27 22:42:04",1
Mule,"ConnectionProvider element missing from config XSD","When a configuration specifies its own connection provider, the corresponding XSD element is only added if other connection providers are also defined at the extension level",Bug,Critical,Closed,"2016-04-27 20:18:53","2016-04-27 19:18:53",1
Mule,"Reintroduce transport infrastructure in Mule 4","Readd transport infrastructure and a couple of transports to validate.",Task,Major,Done,"2016-04-27 19:25:00","2016-04-27 18:25:00",0
Mule,"Extension configs can not define the same Source/Operation Class","*Extension configs can not define the same Source/Operation Class*    * Since MULE-9475, SDK supports to define *Source and Operation at config level*.  * With this feature if you have something like the following:     where you have *two different configs defining the same Source class*, the extension won't work at runtime due that the *generated schema is invalid*, due that the {{SchemaBuilder}} creates two times the same Top Level element _(one per config defining that Source)_.  * *Possible Solution:* When generating the schema, check if the Source/Operation class was already defined by other config and skip the generation.  ",Bug,Major,Closed,"2016-04-27 19:05:50","2016-04-27 18:05:50",5
Mule,"Allow Subtypes placeholder to be populated with any implementation of the base type ","When an extension declares a @SubType replacement group, we should leave open the possibility for any implementation of the _baseType_ to be used to populate the parameter.","Enhancement Request",Major,Closed,"2016-04-27 14:46:45","2016-04-27 13:46:45",8
Mule,"Spike on supporting parameters to have a provider for a dynamic list of possible values","As a connector developer, I'd like to be able to have a dynamic resolver for the possible values that a given parameter can have with my current Connection/Configuration.    The idea is similar to what we already use to resolve the MetadataKey values that then are shown as a dropdown to the user so she can select one.     This is useful for cases when the possible values of the parameter come from a given set of data (like the channels you have configured in slack), but the set is dynamic since values can be created, updated or deleted, and you have to discover them each time.    ","Enhancement Request",Major,Closed,"2016-04-27 14:34:28","2016-04-27 13:34:28",8
Mule,"Upgrade MVEL to 2.1.9-MULE-010","Upgrade to latest MVEL version.",Task,Major,Done,"2016-04-21 14:08:33","2016-04-21 13:08:33",1
Mule,"Decouple the extensions namespace from Spring","The extensions namespace allows configuring how the runtime handles the extensions. That is currently implemented on the extensions-spring-support module, which means that all extensions have a test dependency to it (because the generated schema imports elements from mule-extensions.xsd)    Once the new parsers are implemented, we should move the extensions namespace support to a module which does not require coupling to spring","Enhancement Request",Major,Closed,"2016-04-20 20:54:13","2016-04-20 19:54:13",3
Mule,"SPIKE: migrate OAuth modulo to SDK","Perform SPike on migrating the OAUth modulo to SDK",Task,Major,Done,"2016-04-20 20:48:21","2016-04-20 19:48:21",13
Mule,"Add support for package and resource export on Extensions","Now that extensions are been built as plugins we need to add support for exporting packages and resources.    The following should be exported automatically:    * Classes annotated with @Extension  * Classes annotated with @Configuration  * Classes annotated with @Operation  * ObjectType parameters  * ConnectionProviders  * Generated schema and spring bundles  * Generated extension manifest    On top of that, there should be an annotation to allow manually exporting custom classes and resources... something like an extension level annotation similar to this:        Keep in mind that:    * The generated plugin descriptor should not reference the selected classes but their packages  * It's possible that several exposed classes belong to the same package. The plugin.descriptor should declare each package only once  * The Export annotation is additive. It does not override what's exposed by default.","Enhancement Request",Major,Closed,"2016-04-20 15:44:18","2016-04-20 14:44:18",8
Mule,"Disallow packaging more than one extension in the same plugin","one plugin should not contain more than one extension",Bug,Major,Closed,"2016-04-20 15:35:13","2016-04-20 14:35:13",1
Mule,"Release MVEL 2.1.9-MULE-010","Perform a release of MVEL that contains the fix for the linked issues.",Task,Critical,Done,"2016-04-20 13:50:31","2016-04-20 12:50:31",1
Mule,"MEL cached expression with null safe property is invalid after returning null","When an expression is evaluated and an inner node evaluates to null, the optimized expression will always return null for that inner node, no matter if the context now contains objects fir that expression and it shouldn't return null.",Bug,Major,Closed,"2016-04-18 19:35:26","2016-04-18 18:35:26",0
Mule,"MuleEndpointURI fails to extract right user and password","MuleEndpointURI fails when handling special characters in the user and password fields. This happens because the user info is often handled decoded instead of raw, so encoded characters like : and @ are decoded and cause trouble when analysing the delimitations of the fields within the URI.",Bug,Major,Closed,"2016-04-18 11:54:00","2016-04-18 10:54:00",0
Mule,"Upgrade ActiveMQ to version 5.15.0","We need to evaluate the effort and migrate ActiveMQ dependencies to 5.13.2 to take advantage of the latest bugfixes.    Changes since 5.11.1 (our current version):    |*Release*|*Bugs*|*Improvements*|*New Features*|*Tasks*|*Tests*|  |5.13.2|9|4|0|2|0|  |5.13.1|30|8|2|2|0|  |5.13.0|52|13|7|19|0|  |5.12.2|20|4|1|3|0|  |5.12.1|16|5|0|1|0|  |5.12.0|129|43|15|25|2|  |5.11.3|7|0|0|0|0|  |5.11.2|10|4|0|0|0|",Task,Major,Done,"2016-04-15 18:21:47","2016-04-15 17:21:47",8
Mule,"Fix flakyness in HttpRequestProxyConfigTestCase","On some occassions, the test is run before the mock proxy has started, causing failures.",Task,Minor,Done,"2016-04-15 15:53:01","2016-04-15 14:53:01",0
Mule,"Extensions must not be able to override a  ModelProperty","Extensions must not be able to have more than one ModelProperty of the same type when being described.  If this occur an IllegalArgumentException should be throwed.    * Modify the method withModelProperty of the BaseDescriber.",Bug,Major,Closed,"2016-04-13 20:58:52","2016-04-13 19:58:52",2
Mule,"Using transactions when non blocking should log a warning not an info","When I use a transactional context in a flow with non-blocking processing strategy this message is logged:        It logging level is INFO but it should be WARN",Bug,Minor,Closed,"2016-04-13 20:11:27","2016-04-13 19:11:27",1
Mule,"Reorganize SDK packages","Some classes in the Extensions API and framework and in wrong packages.    Other packages are excessively big. Rearrange.",Bug,Major,Closed,"2016-04-13 17:35:36","2016-04-13 16:35:36",1
Mule,"Add lib folder to the extension zip even if there are no dependencies to add","This is happening with the file extension. The solution is simply adding the lib folder to the extension zip whether exists dependencies in the pom.xml or not.",Bug,Major,Closed,"2016-04-13 17:19:51","2016-04-13 16:19:51",1
Mule,"slf4j-api schould be 1.7.12 to avoid problems with async-http-client","  with rule RequireUpperBoundDeps reports      and      So async-http-client library may call methods in slf4j-api which are currently not implemented in the version used for runtime (1.7.7)",Bug,"To be reviewed",Closed,"2016-04-13 07:40:05","2016-04-13 06:40:05",1
Mule,"Enforce metadata dynamic output resolver for Map and Object","The discussion for this feature appeared with the inheritance of metadata resolvers (from the Extension or the Operation class). What happens is that if you have an operation which doesn't need a dynamic resolver but the parent has one defined, it should *only* be applied if the operation return type is a  Map or Object. With that solution we avoid the need of an @IgnoreDynamicResolver annotation.    The other thing is that in SDK we want to be as restrictive as possible with the developer, and it may be a good idea to forbid operations which return type is Map and doesn't have a resolver assigned. ","Enhancement Request",Major,Closed,"2016-04-12 17:22:26","2016-04-12 16:22:26",5
Mule,"SFTP: Pooled connections not returned to pool on server/network error","When an sftp connection from a pool is disconnected because of a network error or disconnected by the server, it is not returned to the pool and is leaked.",Bug,Major,Closed,"2016-04-12 17:05:09","2016-04-12 16:05:09",0
Mule,"AHC/Grizzly: Readd locally closed connection validation","Undo the remming of the else clause in HttpTransactionContext.listener#onClosed()",Bug,Critical,Closed,"2016-04-11 21:28:41","2016-04-11 20:28:41",8
Mule,"Content-Type set in request builder is not considered","When you set up an HTTP request with a request builder and the header Content-Type, the actual request CT is taken from the payload. The problem is that in MuleEventToHttpRequest, the builder headers are set, then the outbound properties and then if there's no CT outbound property it is set using the data type. Since the check is only against outbound properties the builder header is ignored.  As a workaround, one must set the CT as an outbound property instead of using the request builder.",Bug,Minor,Closed,"2016-04-11 18:42:42","2016-04-11 17:42:42",0
Mule,"Return UnionType when static metadata is fetch on a type that declares SubTypes","Return UnionType when static metadata is fetch on an abstract POJO type or interface that declares SubTypes.",Task,Major,Done,"2016-04-11 16:20:45","2016-04-11 15:20:45",5
Mule,"Crete a Json serializer for the MetadataResult class","Create a GSON based serializer which leverages the MetadataTypeGsonTypeAdapter class and allows to properly serialize an OperationMetadataDescriptor to Json and back.    Try to have such serializer be as consistent with ExtensionModelJsonSerializer as possible","Enhancement Request",Major,Closed,"2016-04-08 20:37:02","2016-04-08 19:37:02",5
Mule,"Remove the need for extensions to explicitly declare a Describer","Have extensions to automatically ship with a descriptor, manifest or similar resource which removes the need for extensions to ship with a describer.    Also, define what to do with all the model validators and other componetns which currently depend on SPI. We should not rely on that anymore","Enhancement Request",Major,Closed,"2016-04-08 20:31:46","2016-04-08 19:31:46",8
Mule,"HTTP failing response streaming calls exception strategy but returns generic error","The response sent to the client is a simple 500 code, instead of corresponding to what is done in the Exception Strategy.    This happens only when there is a streaming response that is lazily evaluated.",Bug,Major,Closed,"2016-04-07 23:00:34","2016-04-07 22:00:34",0
Mule,"The new stack trace report in 3.8 formatting should be the same as java’s standard one","Every stack trace line in the current version has this format:    sun.reflect.DelegatingConstructorAccessorImpl.newInstance:45)  and it should be:    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",Bug,Minor,Closed,"2016-04-07 22:44:04","2016-04-07 21:44:04",1
Mule,"Support non-blocking processing in one-way flows","Currently the following scenarios are not supported meaning that http requester and jms outbound request-response endpoints will block, which in turn requires tuning.    ","Enhancement Request",Major,Closed,"2016-04-07 14:35:51","2016-04-07 13:35:51",13
Mule,"Be able to define Metadata Resolvers at Operation class level","*Be able to define Metadata Resolvers at operation class level*    * By now, the extension developer can define Metadata Resolvers (*ContentMetadataResolver*, *OutputMetadataResolver* and *MetadataKeyResolver*) at *Extension class level* or *Operation method level*.  * A nice to have feature is to be able to configure Metadata Resolvers at Operation class level, to impact the entire set of operations inside that class.  ** *Why?* : If this operations are separated in different classes, you maybe had a grand chance to have different resolvers.  ","Enhancement Request",Major,Closed,"2016-04-06 20:34:18","2016-04-06 19:34:18",5
Mule,"NPE while building an extension without @Operations","java.lang.NullPointerException      at org.mule.module.extension.internal.capability.xml.schema.AnnotationProcessorUtils.getOperationMethods(AnnotationProcessorUtils.java:113)      at org.mule.module.extension.internal.capability.xml.schema.SchemaDocumenter.documentOperations(SchemaDocumenter.java:77)      at org.mule.module.extension.internal.capability.xml.schema.SchemaDocumenter.document(SchemaDocumenter.java:71)      at org.mule.module.extension.internal.capability.xml.schema.SchemaDocumenterModelEnricher.enrich(SchemaDocumenterModelEnricher.java:58)      at org.mule.module.extension.internal.introspection.DefaultExtensionFactory.lambda$enrichModel$2(DefaultExtensionFactory.java:300)      at java.lang.Iterable.forEach(Iterable.java:75)      at org.mule.module.extension.internal.introspection.DefaultExtensionFactory.enrichModel(DefaultExtensionFactory.java:300)      at org.mule.module.extension.internal.introspection.DefaultExtensionFactory.createFrom(DefaultExtensionFactory.java:121)      at org.mule.module.extension.internal.resources.ExtensionResourcesGeneratorAnnotationProcessor.parseExtension(ExtensionResourcesGeneratorAnnotationProcessor.java:108)      at org.mule.module.extension.internal.resources.ExtensionResourcesGeneratorAnnotationProcessor.lambda$process$0(ExtensionResourcesGeneratorAnnotationProcessor.java:77)      at java.lang.Iterable.forEach(Iterable.java:75)      at org.mule.module.extension.internal.resources.ExtensionResourcesGeneratorAnnotationProcessor.process(ExtensionResourcesGeneratorAnnotationProcessor.java:72)      at com.sun.tools.javac.processing.JavacProcessingEnvironment.callProcessor(JavacProcessingEnvironment.java:794)      at com.sun.tools.javac.processing.JavacProcessingEnvironment.discoverAndRunProcs(JavacProcessingEnvironment.java:705)      at com.sun.tools.javac.processing.JavacProcessingEnvironment.access$1800(JavacProcessingEnvironment.java:91)      at com.sun.tools.javac.processing.JavacProcessingEnvironment$Round.run(JavacProcessingEnvironment.java:1035)      at com.sun.tools.javac.processing.JavacProcessingEnvironment.doProcessing(JavacProcessingEnvironment.java:1176)      at com.sun.tools.javac.main.JavaCompiler.processAnnotations(JavaCompiler.java:1170)      at com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:856)      at com.sun.tools.javac.main.Main.compile(Main.java:523)      at com.sun.tools.javac.api.JavacTaskImpl.doCall(JavacTaskImpl.java:129)      at com.sun.tools.javac.api.JavacTaskImpl.call(JavacTaskImpl.java:138)      at org.bsc.maven.plugin.processor.AbstractAnnotationProcessorMojo.executeWithExceptionsHandled(AbstractAnnotationProcessorMojo.java:545)      at org.bsc.maven.plugin.processor.AbstractAnnotationProcessorMojo.execute(AbstractAnnotationProcessorMojo.java:285)      at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)      at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)      at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)      at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)      at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)      at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)      at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)      at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)      at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)      at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)      at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)      at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)      at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)      at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)      at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)      at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)      at java.lang.reflect.Method.invoke(Method.java:497)      at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)      at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)      at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)      at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)      at org.codehaus.classworlds.Launcher.main(Launcher.java:47)      at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)      at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)      at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)      at java.lang.reflect.Method.invoke(Method.java:497)      at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)  [ERROR] error on execute: java.lang.NullPointerException",Bug,Critical,Closed,"2016-04-06 19:54:05","2016-04-06 18:54:05",1
Mule,"AHC improovment to 1.9.37","Updating AHC library caused a 15% regression in the Proxy scenario, it appears to be a memory related issue, possibly a memory leak.",Bug,Major,Resolved,"2016-04-06 15:26:41","2016-04-06 14:26:41",5
Mule,"ExtensionManager should have utility methods to local models by name and/or vendor","The ExtensionManager currently supports retrieving all the extensions. It would be helpful to be able to locate by name and name+vendor","Enhancement Request",Major,Closed,"2016-04-05 19:59:01","2016-04-05 18:59:01",1
Mule,"Reconnect Strategy not triggered for JMS with XA transactions","When a JMSException occurs in the XA transaction handler, it is wrapped and that causes the reconnection strategy to not be triggered as expected.",Bug,Major,Closed,"2016-04-05 15:55:27","2016-04-05 14:55:27",0
Mule,"Properly cleanup state in logging integration tests","*LogConfigurationTestCase* and *ConnectorLevelMessageDispatchingTestCase* do not properly clean up the logger context they initialize.","Enhancement Request",Minor,Closed,"2016-04-04 14:20:45","2016-04-04 13:20:45",0
Mule,"Migrate Sockets module to Sockets extension","Migrate Sockets module to Sockets extension","Enhancement Request",Major,Closed,"2016-04-01 21:47:27","2016-04-01 20:47:27",3
Mule,"HTTP Connector MESSAGE_REQUEST_END notification message has no information about the HTTP response","h5. Problem  HTTP connector is sending the request mule message in both notification events so this makes impossible for notification listeners of these events to get data about the response such http.status.    In addition to that, events had mule messages with different ids so it will also make impossible to correlate a begin/end message.    h5. Proposed Solution  Both mule messages sent to begin and end notifications should have the same id and rootId, so the id and rootId will be propagated to the response mule message generated by HTTP module.  The mule message generated from the http response is the one that will be sent to the end notification so users could check the result of the request made.    h5. Caveats  HTTP transport works in a different way so there will be not the same data on this notification events.   The transport generated inbound properties for request and response based on its configuration, the connector used them to do the http request instead and they are not set to the mule message. As example, http.request, http.query.params, http.query.string but the URI is passed to the event as it was before.",Bug,Major,Closed,"2016-04-01 18:03:39","2016-04-01 17:03:39",2
Mule,"Provide a way to by pass exception thrown inside a catch exception strategy","All exception thrown inside a catch exception strategy are being handle by the exception strategy.   Although this doesn't posses a problem for a mule user (it's actually a mule restriction) it is an issue for MUnit.     If a user want's to spy a mp inside a catch, and as a result an exception is being thrown, then this exception is going to be eat by the catch causing the test not to fail.     We need a way to register an specific kind of exception/error/throwable in the mule context.     At the same time we need that if such exception/error/throwable is being thrown then the mule catch exception strategy to throw it up in the stack so it surface in the actual test. ","Enhancement Request",Major,Closed,"2016-03-31 20:03:59","2016-03-31 19:03:59",8
Mule,"Ability to set a property at a domain level which can be used by every application","As a user, I would like to be able to set a property in a domain, e.g. connection.url=123, and then reference it via ${connection.url} in every child app  ","Enhancement Request",Minor,Closed,"2016-03-31 16:00:30","2016-03-31 15:00:30",8
Mule,"Upgrade AHC to 1.9.37","Upgrade to latest ahc version.",Task,Major,Done,"2016-03-30 18:13:57","2016-03-30 17:13:57",0
Mule,"Improve Config retrieval when resolving Metadata for MetadataAware components","When resolving Metadata for MetadataAware components, we need to fetch the Configuration in order to initialize the MetadataContext.    Currently, we don't support dynamic configs, which result in two issues:  - We need to validate that the config that will be resolved is static, for all the available ways of acquiring a config (access with config-name, with extensionModel or implicit resolution). We need to make this validations without duplicating all the ExtensionManager logic for this.  - Even when there is no dynamic config support, it is required to pass a MuleEvent when fetching the config, so we are forced to create an empty event, which may result in an error if the config was indeed of dynamic nature. ",Bug,Major,Closed,"2016-03-30 15:25:43","2016-03-30 14:25:43",5
Mule,"Add TLS files in conf directory to Studio distribution","Add conf directory to Studio distribution with only these two files:  tls-default.conf  tls-fips140-2.conf",Task,Critical,Done,"2016-03-29 21:34:31","2016-03-29 20:34:31",1
Mule,"Deadlock shutting down Mule when using JMS","In certain circumstance when Mule is shutting down while JMS messages are being received Mule can enter a deadlock and hang.",Bug,Minor,Closed,"2016-03-29 15:44:49","2016-03-29 14:44:49",0
Mule,"Add a way to configure system and boot packages used on class loading lookup","Artifact classloader uses a class lookup policy that differentitates between system packages (those which must always use parent only lookup) vs user packages (those which will use child first lookup).  Currently, system packages are hard coded. There must be a way to define them using a more dynamic or configurable way.","Enhancement Request",Major,Open,"2016-03-29 14:18:04","2016-03-29 13:18:04",4
Mule,"Replace MetadataKey properties with typed properties. Add also to MetadataDescriptors","Replace MetadataKey properties with typed properties  and add also to MetadataDescriptors.     This typed properties will be similar to the current ModelProperties.",Task,Major,Done,"2016-03-28 16:48:37","2016-03-28 15:48:37",5
Mule,"second round of review on DataSense","review PR again an apply new changes",Task,Major,Done,"2016-03-28 16:26:12","2016-03-28 15:26:12",8
Mule,"Refactor extensions packaging to be compatible with new plugin architecture","Make changes into the extensions packaging mechanism to support the work done on MULE-9436","Enhancement Request",Critical,Closed,"2016-03-28 15:57:37","2016-03-28 14:57:37",13
Mule,"Create serializers for the ExtensionModel","We need to create reusable serializer/deserializers to marshall extension models to json and back. These need to be reusable so that can be leveraged in Studio and in the agent.    Right now we're using XStream but it's doing a very poor job at it and it's hard to customize. Consider using Gson or any other proper tool (careful with the recursive references in the MetadataType).","Enhancement Request",Critical,Closed,"2016-03-28 15:53:43","2016-03-28 14:53:43",13
Mule,"Scheduler error when starting Mule Standalone","Error message:      The error is thrown in the following scenarios:  1. When Mule starts  2. When an application is deployed.  3. When an application is undeployed.  ",Bug,Major,Closed,"2016-03-15 19:19:54","2016-03-15 19:19:54",8
Mule,"Provide extension points in http module for RequestBuilder","Allow to override steps of the of the RequestBuilder setup.  Allow for http module tests to be run from dependant modules.",Task,Major,Done,"2016-03-23 15:25:48","2016-03-23 15:25:48",0
Mule,"Apply feedback on DataSense review","Apply feedback from PR",Task,Major,Done,"2016-03-23 15:15:39","2016-03-23 15:15:39",13
Mule,"SFTP :Support two factor authentication","An as SFTP connector user, I need to connect to an SFTP server that does Certificate and User/Pass authentication. Currently, mule can do either one or the other. See  https://github.com/mulesoft/mule/blob/mule-3.x/transports/sftp/src/main/java/org/mule/transport/sftp/SftpClient.java Lines 124 and 157.  Looks like mule could use a single login method and pass all parameters, and if some are not set then use only the others.","Enhancement Request",Major,Closed,"2016-03-23 14:01:10","2016-03-23 14:01:10",5
Mule,"Message Processors invocations inside an Until Successful are not notified","Message Processors invoked inside an Until Successful scope are not notified through the message processor notification server.  For example, if you have set-payload inside an Until Successful scope. The invocation of the UntilSuccessful is notified but not the invocation of the set-payload.  Another example, if you have an set-payload inside an enricher, and the enricher inside an Until Successful. The invocation of the UntilSuccessful is notified, but  not the enricher. On the other hand, the set-payload invocation is notified. This causes notifications in the form of /myFlow/processors/0 and /myFlow/processors/0/0/0 but not /myFlow/processors/0/0",Bug,Minor,Closed,"2016-03-22 22:01:04","2016-03-22 22:01:04",8
Mule,"Allow specifying custom log4j config locations.","It would be useful if apps could customise in some ways from where the log4j properties file is loaded, i.e. specify this in mule-deploy.properties","Enhancement Request",Major,Closed,"2016-03-18 22:02:41","2016-03-18 22:02:41",0
Mule,"Timezone attribute in Quartz connector and scheduler module","As a user I want to set a specified timezone for the cron expression that I want to use.  Right now I have to set the cron in the timezone that I am, if i am using mule local I have to set the cron in my timezone. So I have to change the cron expression every time I change the environment.  Quartz Scheduler allow you to do this, but in java code. This is going to be useful if we can set the timezone in the transport like an attribute.","Enhancement Request",Major,Closed,"2016-03-18 13:44:15","2016-03-18 13:44:15",0
Mule,"Use flow paths to obtain Processors and Sources from a Flow in the MuleMetadataManager","* Actually the *MuleMetadataManager* to retrieve the *MessageProcessor* or *MessageSource* from a flow uses the flow index.   * Using a index to retrieve this components ends up being short for the requirement of retrieve metadata from any message processor inside a flow, due that a flow can contain ramifications.  * Change the actual logic the *MuleMetadataManagager* to use *flow paths* to obtain MessageProcessors in the same way that the *Mule Debugger* or *Flow Stacks* do","Enhancement Request",Blocker,Closed,"2016-03-17 17:23:20","2016-03-17 17:23:20",8
Mule,"Mule 4 scopes revamp proposal ","We need to review the different Mule 4 scopes and come up with an specifications on how the different scopes will look like in Mule 4 considering the required changes for error handling.",Task,Critical,Done,"2016-03-17 16:15:55","2016-03-17 16:15:55",5
Mule,"mule-app-maven-plugin generates an invalid archive if configuration files are within subfolders (v1.1)","When using a maven project, deployment of the project fails if configuration files are within subfolders. It expects all configuration files to be present in the 'app' folder, and doesn't work in subfolders. The mule-deploy.properties file contents are properly populated by Studio but runtime fails during deployment of the application.    The archive file generated by the plugin leaves the subfolder within the configuration file inside the classes folder and the mule-deploy.properties is automatically generated by Studio when running the application and it doesn't include the classes folder on it.  Plus, if the application is exported the configuration files are duplicated by Studio in root of app folder and classes folder.    The proposed solution is to change the plugin to include in the root of the archive folder the configuration files and folders with configuration files and avoid duplicating them into classes folder too.",Bug,Major,Closed,"2016-03-16 20:21:37","2016-03-16 20:21:37",2
Mule,"Migrate Http Connector to extensions API","The current HTTP connector must be replaced with a version developed using extensions API","Enhancement Request",Major,Closed,"2016-03-16 17:22:31","2016-03-16 17:22:31",13
Mule,"Provide an InterceptiongMessageProcessor equivalent in SDK","The HttpBasicAuthenticationFilter has exposed the need for InterceptingMessageProcessors to be supported in extensions. There should be a way to have these and not just MPs.","Enhancement Request",Major,Closed,"2016-03-16 17:15:02","2016-03-16 17:15:02",8
Mule,"Extensions should be able to import TopLevel parameters from other extensions","Extensions that depend on TCP could take advantage of the API defined in the mule sockets module, which is why it would be great to support it just like say, threading profiles are.  Basically, one can define socket properties like this:    So if I define as a parameter a TcpClientSocketProperties I'd expected the schema to allow that.","Enhancement Request",Major,Closed,"2016-03-16 14:43:06","2016-03-16 14:43:06",8
Mule,"Remove mule-extensions-annotations dependency from mule-extensions-parent","Remove mule-extensions-annotations dependency from mule-extensions-parent due that dependency is not needed any more",Task,Major,Done,"2016-03-15 23:57:10","2016-03-15 23:57:10",1
Mule,"Support object hierarchies","Suppose I have 3 different kinds of authentication for my configuration, each one requires a different (could be similar) POJO. Right now I have to add each one as an optional parameter and check myself whether several have been added, since having only one is allowed.   It would make more sense to have just one parameter that references an interface or abstract class, and say I want all implementations/subclasses to be considered as possibilities.  See HTTP authentication or proxy configuration, for example (HttpAuthentication->abstract-http-request-authentication-provider, ProxyConfig->choice).","Enhancement Request",Major,Closed,"2016-03-15 14:07:31","2016-03-15 14:07:31",5
Mule,"Cannot define a threading profile within my config","I have a config with a ThreadingProfile element annotated with @Parameter. However, the schema produced does not recognised it as such.",Bug,Major,Closed,"2016-03-14 21:03:50","2016-03-14 21:03:50",5
Mule,"Move transports and endpoints metadata resolution from Studio to mule core","We need to move HTTP, FTP, JMS, File endpoints datasense resolution to the mule core",Task,"To be reviewed",Done,"2016-03-14 15:03:07","2016-03-14 15:03:07",8
Mule,"Injected object in configuration is not initialised","When attempting to migrate the DefaultHttpListenerConfig to an extension configuration, it was failing because the injected HttpListenerConnectionManager was not initialised. Workaround was to initialise it from the config's initialise method.  You can look at those classes and find the workaround in branch MULE-8864, class HttpListenerConfig.",Bug,Critical,Closed,"2016-03-14 14:51:35","2016-03-14 14:51:35",8
Mule,"Add support for Datasense in Sources model","Add support for Datasense in Sources model",Task,Major,Done,"2016-03-14 14:37:42","2016-03-14 14:37:42",5
Mule,"Create tests for extensions metadata resolver","Create tests for extensions metadata resolver",Task,Major,Done,"2016-03-14 14:20:19","2016-03-14 14:20:19",5
Mule,"Refactor and extend Metadata test suite","Refactor current Metadata testCases to improve extensibility.  Add more test cases, especially those needed for error handling.",Task,Critical,Done,"2016-03-14 14:17:29","2016-03-14 14:17:29",5
Mule,"Add MetadataCache to the MetadataContext","Add the implementation of MetadataCache to the MetadataContext, as defined in the Metadata Spec document.","Enhancement Request",Major,Closed,"2016-03-14 12:19:23","2016-03-14 12:19:23",8
Mule,"Allow config level components in the Extensions API","When an extension has several configuration models available, there's often the need to have operations, connection providers or even sources which can only function with a subset of those configurations. This is currently not possible.    We need to be able to:    * Define sources, connection providers an operations an a configuration level.  * The sources, providers and operations available to a configuration are those defined at its own level + the ones defined at the extension level  * It is possible to have configurations which share any of those components, even though they're not declared at the extension level. For example, an extension has three configs (A, B, C); Configs A and B both point to the AwesomeOperations class. For that to work, there has to be some common type abstraction between A and B so that AwesomeOperations can receive any of those on the operations annotated with @UseConfig  * Going back to the example above, if AwesomeOperations is only referenced by configuration A, it should be possible to write such operations depending on A exclusively, making it no longer necessary for A to share any kind of type abstraction with B or C  ","Enhancement Request",Major,Closed,"2016-03-14 12:18:04","2016-03-14 12:18:04",13
Mule,"Add multi-level key support for Datasense","Implement the mechanism that allow multi level key resolving to the current metadata model.  ","Enhancement Request",Major,Closed,"2016-03-14 12:15:50","2016-03-14 12:15:50",13
Mule,"SPIKE: Metadata multi-level key structure","Define the first approach to take on Multi-level metadata keys",Task,Major,Done,"2016-03-14 12:13:32","2016-03-14 12:13:32",13
Mule,"Review first SDK Support for Datasense PR","Review first SDK Support for Datasense PR",Task,Critical,Done,"2016-03-14 12:06:30","2016-03-14 12:06:30",8
Mule,"Prepare first Datasense PR","Prepare datasense epic branches for the first pull request.   This includes squashing, code review and review of javadocs.    ",Task,Critical,Done,"2016-03-14 12:03:56","2016-03-14 12:03:56",3
Mule,"Add Failure and Result handling to Metadata API","Allow the developer to communicate errors occurred during Metadata retrieval using exceptions with FailureTypes, and then returning those errors gracefully as Results in the MetadataManager api",Task,Major,Done,"2016-03-14 11:58:30","2016-03-14 11:58:30",5
Mule,"Implement Operation metadata retrieval","- Implement retrieval of Metadata from the MessageProcessor using the MetadataManager.     - Add concept of MetadataDescriptor for Operations and Parameters",Task,Major,Done,"2016-03-14 11:51:39","2016-03-14 11:51:39",5
Mule,"QName with invalid character is generated when using an Inner Enum class as parameter","*QName with invalid character is generated when using an Inner Enum class as parameter*    When using a Enum Class as parameter of a Operation, the SDK generates a child element with the name of this class.  {code:title=SchemaBuilder.java}   attribute.setType(new QName(schema.getTargetNamespace(), enumType.getName() + SchemaConstants.ENUM_TYPE_SUFFIX));  {code}  But the problem comes when this Enum Class, is a Inner Enum Class, so the full qualifier name of this type would be, for example: {{org.mule.module.http.api.HttpConstants$ProtocolsEnumType}}, which contains the {{$}} symbol, is an Invalid character for a QName.    *What to do?*  * Fix generation of Inner Enums, replacing or deleting invalid characters.  * Check the same problem for Inner Classes    *Valid and Invalid characters:*  http://stackoverflow.com/questions/1631396/what-is-an-xsncname-type-and-when-should-it-be-used  ",Bug,Major,Closed,"2016-03-13 13:39:02","2016-03-13 13:39:02",5
Mule,"Add return message attributes type to the OperationModel","Just like the SourceModel which has a getAttributeType(), the OperationModel should expose a similar thing.","Enhancement Request",Major,Closed,"2016-03-11 19:07:07","2016-03-11 19:07:07",3
Mule,"Create a contract around model properties","Currently model properties can be of any class and have keys with an implicit contract.    We need to be able to:    * Clearly identify model properties by a well defined name  * Being able to specify if they are public (should be serialized by the agent) or private (information just for the sake of the runtime)  * Move all the public ones to the extensions-api artifact  * keep the privates on mule internals","Enhancement Request",Critical,Closed,"2016-03-11 19:04:02","2016-03-11 19:04:02",3
Mule,"Implement watcher message source in new File connector","Implement the watcher message source as described in the spec","Enhancement Request",Major,Closed,"2016-03-11 18:54:41","2016-03-11 18:54:41",13
Mule,"Specify version for maven-jar-plugin in mule-extension-parent pom","Version plugin is missing",Bug,Major,Closed,"2016-03-11 17:54:32","2016-03-11 17:54:32",1
Mule,"Make configurations name available to them","Configurations have a name attribute by default but there's no way to access it. It's marked as reserved when trying to add it as a parameter.   It would be helpful to make it available, for example, for logging purposes (JMS config 'basicJmsConfig' is set as whatever so this and that will happen.).","Enhancement Request",Critical,Closed,"2016-03-11 15:26:02","2016-03-11 15:26:02",5
Mule,"Remove the defaultPoolingProfile parameter from the all the ConnectionHandlingStrategyFactory methods","Currently when using a concrete ConnectionHandlingStrategyFactory the developer must specify a defaultPoolingProfile for the connector and most of the times the default pooling profile is used like       So now we want that SDK manage the defaultPoolingProfile whether is supported or required so the dev doesn't need to think in default pooling profiles.    So to accomplish this we must:  * Remove the defaultPoolingProfile parameter from the all the ConnectionHandlingStrategyFactory methods and from all its references,  * Create a getDefaultPoolingProfile() method in the ConnectionManagerAdapter that returns the SDK defaultPoolingProfile when the final user didnt specified anything in the XML.    ","Enhancement Request",Major,Closed,"2016-03-09 17:25:14","2016-03-09 17:25:14",8
Mule,"Remove endpoint references from generated schemas","the concept of Endpoint has been removed from Mule 4.x.    The following replacements should be done on the schema generator:    * mule:messageProcessorOrOutboundEndpoint -> mule:messageProcessorOrMixedContentMessageProcessor  * mule:messageSourceOrInboundEndpoint -> mule:abstract-message-source        ",Task,Major,Done,"2016-03-08 21:22:48","2016-03-08 21:22:48",1
Mule,"Replace the NestedProcessor interface with a non blocking API","The NestedProcessor interface was inherited from Devkit and serves the purpose of abstracting the concept of a MuleMessage/MessageProcessor. In mule 4 this will no longer be needed since MessageProcessor and MuleMessage will be API.    NestedProcessor should be removed in favor of MessageProcessor","Enhancement Request",Major,Closed,"2016-03-08 21:09:36","2016-03-08 21:09:36",13
Mule,"Pojo's properties not properly introspected depending on code conventions","The org.mule.module.extension.internal.util.IntrospectionUtils#getExposedFields method checks a given class for fields annotated with @Parameter.    If no such field is found, then it uses Introspector.getBeanInfo(Class) to get the pojos properties. However, it then tries to match those properties to fields, assuming that the pojo was written using a code convention in which the getter name is just like the field but with the get prefix.    If the pojo was written using a convention such as _name, then getName() will not be matched to any field and will get dropped.    Because the whole purpose of the feature is to support pojos which source is outside of the developer's control, this bug should not behave like this.    The fix is harder than it seems. All the ObjectBuilder implementations work on terms of Fields. A deep refactor is needed so that Property accessors are also supported.",Bug,Major,Closed,"2016-03-08 21:05:58","2016-03-08 21:05:58",8
Mule,"Add support for XPath 3.1 that includes maps and arrays as return types","[Saxon 9.7 add supports for XPath 3.1|http://www.saxonica.com/html/documentation/expressions/xpath31new.html] which includes a few interested features such:  * Maps  * Arrays    Mule will be upgraded to Saxon 9.7 which supports XPath 3.1 but as these new types are not yet in JAXP API and Mule uses the java API instead of Saxon directly a custom component needs to be implemented in order to use Saxon s9api a get support for map and arrays return types.","Enhancement Request",Major,Closed,"2016-03-08 20:23:08","2016-03-08 20:23:08",3
Mule,"Separate Extension Model into a description and a runtime model","Currently the ExtensionModel mixes extension description properties and properties required only at runtime.    In order to easily handle Serialization/Deserialization into a JSON for Studio and Mozzart, we need to separate them so that they can be easily consumed using a plain REST api.    The refactor involves remove the methods of the current interfaces required only at runtime into other interfaces that extend them with the same name and the prefix Runtime on extensions-api, and refactor mule code so that we get the minimal interface required at each method.    ",Task,Major,Done,"2016-03-08 18:16:10","2016-03-08 18:16:10",8
Mule,"Connection Provider is not registered in XSD inside of a Config if an Extension only have a Source component","*Connection Provider is not registered in XSD inside of a Config if an Extension only have a Source component*    * In the SchemaBuilder, when registering a Config, there is a logic of asking *if any Connected Operation exists* _(An operation that uses a @Connection)_, if not, the Connection Provider is not registered inside the Config.  * The border case comes when trying to have a Source (Connected Source) with out any operation or with Disconnected Operations, where SDK doesn't generate that Connection Provider although is necessary for the Source.",Bug,Major,Closed,"2016-03-07 13:50:27","2016-03-07 13:50:27",3
Mule,"TransactionManager created by TestTransactionManagerFactory returns null for hashCode()","This causes a null pointer exception when the created object is to be put in a HashSet, or a HashSet check for contains of the created object.",Bug,Major,Closed,"2016-03-07 12:40:39","2016-03-07 12:40:39",1
Mule,"Fix flaky test org.mule.module.launcher.DeploymentServiceTestCase.redeploysDomainZipRefreshesApps","Test org.mule.module.launcher.DeploymentServiceTestCase.redeploysDomainZipRefreshesApps fails form time to time on mule 4 branch on the continues build",Task,Minor,Done,"2016-03-07 00:11:13","2016-03-07 00:11:13",1
Mule,"Upgrade Saxon to 9.7.0.3-HE","Upgrade Saxon due to several issues have been solved since 9.7.0-3-HE version.   * [List of issues solved in Saxon 9.7.0-3-HE|https://sourceforge.net/projects/saxon/files/Saxon-HE/9.7/]   * in addition to the ones fixed since 9.6.0-1-HE that is the current version used in Mule: [List of issues solved in Saxon 9.6-HE|https://sourceforge.net/projects/saxon/files/Saxon-HE/9.6/]",Task,Minor,Done,"2016-03-04 16:35:30","2016-03-04 16:35:30",3
Mule,"Update Maven plugin versions","Update Maven plugins versions and move the version to a property",Task,Major,Done,"2016-03-04 14:35:58","2016-03-04 14:35:58",1
Mule,"Move extensions annotations to the extensions-api jar","We no longer require the extension annotations to be on a separate artifact. On the contrary, we want to be able to leverage them in order for the fluent API to generate complete MetadataType models.    Merge them into one single artifact and modify the build","Enhancement Request",Critical,Closed,"2016-03-03 15:32:34","2016-03-03 15:32:34",1
Mule,"Improve serialization of isolated objects","Serialization/deserialization of java objects that where created inside isolated artifacts introduces the problem that, on deserialization, no every class could be visible in order to create the deserialized objects.    The way how this will be solve is still under discussion. This issue is created as a placeholder to make this missing part visible to the team.","Enhancement Request",Blocker,Closed,"2016-03-03 15:12:17","2016-03-03 15:12:17",13
Mule,"Document mule 4 classloading/deployment model","All the changes introduced on the classloader/deployment model as part of the isolation story must be documented on this task.",Task,Major,Done,"2016-03-03 15:02:06","2016-03-03 15:02:06",8
Mule,"Replace application plugins with extensions","Replace application plugins artifacts with extensions.","Enhancement Request","To be reviewed",Closed,"2016-03-03 15:00:12","2016-03-03 15:00:12",8
Mule,"Define deployment model for extensions","Extensions created with extensions API must define a package format, deployment lifecycle and isolation capabilities.  ",Task,Critical,Done,"2016-03-03 14:58:23","2016-03-03 14:58:23",8
Mule,"Add isolation improvements to FunctionalTestCase ","Isolation changes introduced on the deployment model should be reflected on the functional test infrastructure in order to have the same restrictions than a standalone execution.  Not sure that this will be exactly the same, as for example functional test on mule 3 are not the same than a mule 3 standalone execution, but it should be as similar as possible without causing too much disruption on the development process. ","Enhancement Request",Major,Closed,"2016-03-03 14:49:56","2016-03-03 14:49:56",8
Mule,"Isolate domains from core artifact","Domains and child elements as applications and application plugins are exposed to all the resources included in the core artifact classloader.  Instead of using the core classloader as parent, domains should take a filtering classloader that exposes only the API defined on the core.","Enhancement Request",Critical,Closed,"2016-03-03 14:42:07","2016-03-03 14:42:07",5
Mule,"Invert classloading lookup process for deployed artifacts","Mule 3 uses a parent-first classloading lookup process. This causes that plugins and application must explicitly define loader overrides when they want to use a different version thatn the one provided by mule.   It also means that some apps/plugins can stop working on following versions of mule when mule includes a library that was not used before.  To solve this issues and make upgrades easier, classloader lookup must be child-first but everything but mule core system packages.","Enhancement Request",Critical,Closed,"2016-03-03 14:38:41","2016-03-03 14:38:41",8
Mule,"Add a way to dynamically configure the exported API on the core artifact","On the modularization approach we are implementing, all the core modules will be deployed as an artifact, so they will have to define what is exported to the other artifacts.  As the number of included core modules could depend on the version or distribution, the exported resources should be dynamically determined, having each module to define them explicitly inside the module binary.","Enhancement Request",Major,Closed,"2016-03-03 14:34:45","2016-03-03 14:34:45",5
Mule,"Update artifact export policy to support packages and folders only","Mule 3 plugin export policy is based on classes and packages prefixes (i:e: org.mule.api.* or org.mule.api.Message*).   Detecting if a given class is exported or not, in the presence of wildcards, could take some time. In order to improve the classloading lookup time and be more similar to what OSGi does, we should export packages/folders explicitly, with no wildcards.","Enhancement Request",Major,Closed,"2016-03-03 14:20:48","2016-03-03 14:20:48",5
Mule,"Isolate applications from application plugins","Applications are currently exposed to all the code included on application plugins, which is not good from the isolation point of view.  Application should only access to the resources explicitly exported by the application plugins.","Enhancement Request",Critical,Closed,"2016-03-03 14:10:37","2016-03-03 14:10:37",5
Mule,"Isolate application plugins","Application plugins (aka connectors) are not isolate between them as all they are loaded in the same classloader.   Those plugins must be isolated in the same way server plugins are isolate on mule 3.","Enhancement Request",Critical,Closed,"2016-03-03 14:07:24","2016-03-03 14:07:24",5
Mule,"Refactor plugin classloading features","Extract and refactor code used to isolate server plugins in order to reuse it on the artifacts from the launcher module.","Enhancement Request",Minor,Closed,"2016-03-03 14:05:35","2016-03-03 14:05:35",8
Mule,"Properly define behavior for req-resp flows - HTTP","HTTP Connector must return a 204 - No Content response in case a message is filtered.",Task,Major,Done,"2016-03-02 22:14:26","2016-03-02 22:14:26",2
Mule,"Provide detour functionality","Make the when element available outside of a choice:    <when expression=””/>   ...  </when>",Task,"To be reviewed",New,"2016-03-02 22:13:03","2016-03-02 22:13:03",16
Mule,"Remove <message-filter> functionality overlap","* Remove ‘throwOnUnaccepted’, a validator should be used for this use case.  * Remove onUnaccepted.  <when/> should be used instead.  ",Task,Major,Done,"2016-03-02 22:11:52","2016-03-02 22:11:52",4
Mule,"Remove dependency on filters from choice; Remove wire-tap","* <wire-tap> must have a when element with an expression instead of a filter element.  * drop support for child <filter> element in a choice/when.",Task,Critical,Done,"2016-03-02 22:10:18","2016-03-02 22:10:18",4
Mule,"Move all filters to the compatibility Module","Remove all filters that can be replaced with expressions or that overlap with the validations module.",Task,Critical,Done,"2016-03-02 22:05:01","2016-03-02 22:05:01",8
Mule,"Add an optional display name metadata to components","We need an equivalent to Devkit's @FriendlyName annotation. It should translate to model properties at all the models that this feature will have impact in (Sources, Parameters, Operations).    Since @FriendlyName its a bit confusing with the SDK @Alias annotation, @DisplayName sounds a little bit clearer.    If no value is specified, the name is inferred from the annotated element's name as it does now.  ","Enhancement Request",Major,Closed,"2016-03-02 19:44:31","2016-03-02 19:44:31",3
Mule,"Add support for non-blocking to JMS outbound request response endpoint","Add support for non-blocking to the request-reply component","Enhancement Request",Critical,Closed,"2016-03-02 16:55:57","2016-03-02 16:55:57",13
Mule,"Troubleshooting: DB insert and delete don't show the element xml and number line in the exception logging","When an exception occurs in a DB Insert or Delete the logs shows null the config file and the number line. Please check the null:null in bold below in the element section:    ********************************************************************************  Message               : The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by 'SQL151106174158370' defined on 'PLANET'. (java.sql.SQLIntegrityConstraintViolationException).  Element               : /jdbcInsertUpdateCountRequestResponse/processors/1 @ 612f4740-dff8-11e5-960f-8a315f85db5e:*null:null*  --------------------------------------------------------------------------------  Exception stack is:...    +*Steps to reproduce:*+  * In mule project checkout to branch MULE-9416-TEST-TO-REPRODUCE  * Run test testRequestResponse of class InsertDefaultTestCase inside the DB Module. (.../GitHub/mule/modules/db/src/test/java/org/mule/module/db/integration/insert/InsertDefaultTestCase.java)  * In the logs you will see the exception copied above. ",Bug,Major,Closed,"2016-03-01 21:42:41","2016-03-01 21:42:41",1
Mule,"SPIKE: DataSense API for mule runtime","We need to define how metaData will be resolved as a service from Mule and how it will be related to the Extension and its model",Task,Major,Done,"2016-02-29 15:24:29","2016-02-29 15:24:29",8
Mule,"Add the concept of DataSense to the extension model","Add the concept of DataSense (scope, resolver, key, content, etc) to the extension model.    Rely on the MetaData spec to do so:  https://docs.google.com/a/mulesoft.com/document/d/1inPuybiA3CTXa4Ihgz4OKl2eoI0Mlj-7vlscarQujnY/edit?usp=sharing",Task,Critical,Done,"2016-02-29 15:16:44","2016-02-29 15:16:44",5
Mule,"Add default implementations for MetaData interfaces","Some interfaces require a default implementation provided by mule  * MetadataResolver * NullMetadataKey * MetadataKeyBuilder ",Task,Major,Done,"2016-02-29 15:13:50","2016-02-29 15:13:50",8
Mule,"Create interfaces required for MetaData implementation","Following are the basic required interfaces:      As specified in its spec:  https://docs.google.com/a/mulesoft.com/document/d/1inPuybiA3CTXa4Ihgz4OKl2eoI0Mlj-7vlscarQujnY/edit?usp=sharing",Task,Major,Done,"2016-02-29 15:09:36","2016-02-29 15:09:36",5
Mule,"Create MetaData annotations","Create the following annotations (and any other that is required for DataSense)       As described in it's spec: https://docs.google.com/a/mulesoft.com/document/d/1inPuybiA3CTXa4Ihgz4OKl2eoI0Mlj-7vlscarQujnY/edit?usp=sharing",Task,Major,Done,"2016-02-29 15:07:06","2016-02-29 15:07:06",3
Mule,"Move immutable implementations of the extension model to the API","Move the ImmutableExtensionModel familiy of objects to the extensions-api jar","Enhancement Request",Major,Closed,"2016-02-26 20:32:35","2016-02-26 20:32:35",8
Mule,"Replace extensions DataType with MetadataModel","Leverage the new data sense MetadataModel to replace the org.mule.extension.api.introspection.DataType and provide a richer extension model","Enhancement Request",Critical,Closed,"2016-02-26 19:23:18","2016-02-26 19:23:18",13
Mule,"NullPointerException when setting a context-property with a null value on org.mule.module.xml.transformer.XsltTransformer","When a context-property for the xslt-transfomer has a null value,  is not handling it therefore setting a null parameter to  and it is supported to set null values so an NPE is thrown.    *Instead the XsltTransformer should handle this and throw a MuleException with the proper message.*    ",Bug,Major,Closed,"2016-02-25 17:56:16","2016-02-25 17:56:16",2
Mule,"Inconsistent names in XSD for list parameters","When an extensions has a configurable list, the name of the root element of the list should always be written in plural.    The following parameter generates a root element called parameterList with a child element named parameterList.      The root name generated in the XSD should be parametersLists or parameters",Bug,Major,Closed,"2016-02-23 19:27:05","2016-02-23 19:27:05",3
Mule,"Missing child elements in XSD when the extension parameter is a List<Map>","When an extensions has the following field, no child element is generated.      A child should be generated for this element",Bug,Major,Closed,"2016-02-23 19:14:23","2016-02-23 19:14:23",5
Mule,"Mule throws a LifecycleException when disposing an Extension Source","*Mule throws a LifecycleException when disposing an Extension Source*    * When working with Mule Extension Sources, a way to fail at start time is to to throw an exception inside {{start()}} of a Source, this exception inside the SDK is analysed and if it could not be handled, is propagated to Mule. Mule when detect this exception starts to dispose the Source, when this occur a exceptions is thrown. Stack trace:    ",Bug,Major,Closed,"2016-02-23 17:10:59","2016-02-23 17:10:59",0
Mule,"Add support for @OnException for Sources","*Add support for @OnException for Sources*    * Nowadays, {{@OnException}} only works when a operation throws an exception, but in case that a {{@Source}} throws an *Exception* on {{start()}} or using the {{sourceContext.getExceptionCallback().onException();}} the Exception Enricher is ignored although this is configured at *extension level*.  * Give the same support as operations, save in the Source model the exception enricher factory.  * Add support in {{ExtensionMessageSource.java}} to execute the *exception enricher* in case of failure. ","Enhancement Request",Major,Closed,"2016-02-23 01:30:59","2016-02-23 01:30:59",8
Mule,"Remove warning when building external extension","When building an external extension a warning is shown because of a missing version in the parent pom for the org.apache.maven.plugins:maven-jar-plugin.    We should specify it to avoid this logs:    ",Task,Minor,Done,"2016-02-22 16:25:27","2016-02-22 16:25:27",1
Mule,"Spike: Mule Runtime data sense execution API","We need to do a spike for DataSense execution in the Mule Runtime. DataSense requires the Mule Runtime to resolve how to create components based on the application specific configuration.    Ideally we should allow to load single component (connectors, message source, operation) without having to load the whole application.","Enhancement Request",Critical,Closed,"2016-02-18 17:56:28","2016-02-18 17:56:28",13
Mule,"Support configurable ObjectStore in every mule component","We need to allow all components using ObjectStore internally to provide configuration to overriding the default ObjectStore configuration.    Components to be updated are:   - Idempotent Redelivery Policy   - Aggregators   - DevKit token manager","Enhancement Request",Major,Closed,"2016-02-18 17:04:40","2016-02-18 17:04:40",8
Mule,"Spike: Allow http:request to retry request when there are several IPs for the same hostname","DNS servers may provide several IPs for the same hostname. This may be used for failover mechanism when a certain IP is not available.    We should provide a way to configure http:request to do failover and retry when a certain IP is not reachable and more than one IP has been resolved for a certain hostname.  ",Task,Major,Done,"2016-02-18 16:35:59","2016-02-18 16:35:59",5
Mule,"Mule Context's getTransactionManager randomly returns null if called during context start","This happens because of a race condition.    For instance, when a JMSXAConnector tries to get the transaction manager from the Mule Context and the Mule Context is still starting.    The problem seems to be in Spring's DefaultListableBeanFactory.",Bug,Major,Closed,"2016-02-18 12:44:20","2016-02-18 12:44:20",0
Mule,"Add placement and group metadata to parameters","We need an equivalent to Devkit's @Placement and @Group annotations. They should translate to model properties at a ParameterModel level and should be available both on configs and operations.    This impacts:    * Annotations  * Describers  * Fluent API  * The agent needs to be able to expose this when creating the extension's JSON representation  * Studio needs to add support for this when generating the Studio editor","Enhancement Request",Critical,Closed,"2016-02-17 20:37:16","2016-02-17 20:37:16",8
Mule,"Stream not closed when using async scope","When deploying the following config and sending this request ({{curl -X POST --data-binary ' ' http://127.0.0.1:8081/input}}) the response is never returned, probably because the stream is not closed. The correct behaviour seems to be not to allow to execute an async router when streaming.    ",Bug,Major,Closed,"2016-02-17 19:27:22","2016-02-17 19:27:22",8
Mule,"Add support for Ref Only parameters for Extension's operations","*Add support for Ref Only parameters for Extension's operations*    Nowadays the *SDK* knows when introspect a parameter or not.   In the case of POJO parameters, the actual logic is the following:  * If a *@Parameter* is used, the SDK will only register the annotated fields.  * If it's a pure *POJO*, the SDK will look for all the getters/setters available.    But could be cases where we don't want to use annotations or the POJO to be introspected, _examples?_   * The POJO is too complex to be rendered in Studio.  * The POJO contains a reserved name that clash with other one in the extension schema.  * *I love DataWeave*, the future is DataWeave  * Because I want    For this cases doesn't exist support yet, to fix that a *DevKit* like *@RefOnly* should be implemented  ","Enhancement Request","To be reviewed",Closed,"2016-02-17 15:00:24","2016-02-17 15:00:24",5
Mule,"Allow to receive/send http content with invalid content-type headers","When a server returns a Content-Type HTTP header without a value (Content-Type:\r\n) an exception is thrown parsing the value when creating a Mule Message. While this is not probably a valid header when trying the same request with Firefox or Chrome the header is ignored so it would be reasonable to validate the header value before trying to use it and ignore if not valid.    This also happens when receiving a content type ended in a semicolon:  Content-Type: image/tiff;",Bug,Major,Closed,"2016-02-17 14:41:55","2016-02-17 14:41:55",0
Mule,"Expand FlowRunner to support different FlowConstruct types","Currently, *FlowRunner* only supports running *Flow*s. It must be extensible to allow running other implementations of *FlowConstruct*.","Enhancement Request",Major,Closed,"2016-02-12 13:51:27","2016-02-12 13:51:27",0
Mule,"@Operation annotation should be implicit","Currently, the new SDK requires specifying the classes in which the extension's operations are defined, plus, those methods need to be annotated with @Operation.    This is kind of redundant, since the @Operation does not add any information.    We should:    * Delete that annotation  * All public method in operations classes should be automatically consider as operations  * Public methods annotated with @Ignored should be skipped  * Add test for @Ignored annotation  ","Enhancement Request",Major,Closed,"2016-02-10 20:43:59","2016-02-10 20:43:59",5
Mule,"Cleanup run* and test* methods in FunctionalTestCase","Migrate tests that use run* and test* methods in FunctionalTestCase to use the new flowRunner.",Task,Major,Done,"2016-02-10 19:23:19","2016-02-10 19:23:19",4
Mule,"Create spec for isolation using custom classloading","Create a spec describing pros/cons and behaviour of getting component isolation though a custom class loading model. ",Task,Major,Done,"2016-02-10 16:33:10","2016-02-10 16:33:10",8
Mule,"Proposal for improving error handling in Mule","Create a proposal to improve error handling in mule. Ideally we should do error handling in a java agnostic way.     We need to consider also the DataWeave limitation of working with Java exceptions.  ",Task,Critical,Done,"2016-02-10 16:18:26","2016-02-10 16:18:26",8
Mule,"Proposal to get rid of message enricher","Since the target attribute is allowed in any message processor from now on, message enricher it may not be required anymore.    One of the things message enricher allows to do is to do a target over a set of message processors instead of just one.     We need to create a proposal on how to replace all the use cases covered by message enricher with target attribute + any other change.",Task,"To be reviewed",Done,"2016-02-10 15:50:15","2016-02-10 15:50:15",5
Mule,"Add known_hosts validation to SFTP Transport","We are trying to push a file to an sftp server. We are using the machine name to connect to it. We want to validate that the server we are connecting to is the correct one. We have the third party servers public key.      * Does this apply to any connection type or only when using identity file?  ** yes i believe this is true for identity file or password based authentication  * Any limitations/validations should be applied on that parameter?  ** it should be a file that is readable.","Enhancement Request",Major,Closed,"2016-02-10 15:36:54","2016-02-10 15:36:54",0
Mule,"DecryptStreamTransformer does not close original input stream","DecryptStreamTransformer is not closing the input stream used as source.  This causes a problem when a decrypting an encrypting file and the source will never be released (deleted if the file inbound uses autoDelete)",Bug,Major,Closed,"2016-01-29 21:09:55","2016-01-29 21:09:55",0
Mule,"Infinite loop encrypting/decrypting zero length values","Both EncryptStreamTransformer and DencryptStreamTransformer assume that the value to encrypt/decrypt will have at least one character. This causes an infinite loop when the value has no bytes to process.",Bug,Major,Closed,"2016-01-29 19:38:16","2016-01-29 19:38:16",0
Mule,"Update xmlsec version","xmlsec version is fixed to 1.5.3 which has these medium vulnerabilities: CVE-2013-4517 and CVE-2013-2172. This dependency is only used in CXF, which depends on a newer version where those vulnerabilities are fixed. We should remove the explicit xmlsec dependency from pom.xml so we can use the version that CXF uses. Initially this dependency was added in this commit: 4723ca54625b0318488f2380eb5ca9574d73e779. But right now it doesn't seem that we need a separate version anymore.",Task,Critical,Done,"2016-01-28 20:32:53","2016-01-28 20:32:53",3
Mule,"Remove invocation and session property scopes from MuleMessage","Mule has two ways of setting and accessing flow/session variables. Both via message (old approach) and via event (new approach).  Supporting both meant introducing some hacks to support this.  Remove the API in message to set/get these and the hack introduced, as well as update all uses.    This work affects other things also, such as splitters/aggregators/MEL and dataType propagation.",Task,Major,Done,"2016-01-28 12:04:05","2016-01-28 12:04:05",8
Mule,"Two ways of setting aliases for parameters","The @Alias annotations is the default mechanism to force a name on the SDK.    However, the @Parameter annotation also provides an alias attribute which collides with the one above.    We need to remove that attribute and standarize on @Alias",Bug,Major,Closed,"2016-01-27 19:01:55","2016-01-27 19:01:55",3
Mule,"Add configuration for maven-jar-plugin in the Extensions Parent Pom","*Add configuration for maven-jar-plugin in the Extensions Parent Pom*    Add configuration to add missing entries in the Manifest file like *Implementation-version* and *Specification-version*",Task,Critical,Done,"2016-01-27 17:26:51","2016-01-27 17:26:51",2
Mule,"Remove ContentMetadataConcept from SDK","In MULE-8959 a mechanism was added to allow obtaining and setting the output dataType from a extension operation.    With the coming of the new mule message, this mechanism is no longer necessary, since the MuleMessage became a minimalistic thing on which the DataType became a first class citizen.    So we need to:    1) Rename the ContentMetadataParameters annotation to DataTypeParameters  2) Delete de ContentMetadata and ContentType concepts from the extensions-api  3) rewrite the org.mule.module.extension.internal.runtime.processor.AbstractReturnDelegate#resolveDataType so that the same behaviour is maintained but using org.mule.api.metadata.DataType instead",Task,Major,Done,"2016-01-27 14:13:19","2016-01-27 14:13:19",5
Mule,"Move ConnectionHandlingTypeModelProperty to Extension API so that it can be consumed from Studio","In order to generate studio support for pooling profile we need to move the property to extensions API instead of being internal",Task,Major,Done,"2016-01-26 13:29:11","2016-01-26 13:29:11",0
Mule,"Required pojos are marked as optional on XSD if not instantiable","When required pojos are instantiable, the SchemaBuilder generates an optional attribute and an optional nested element to define it. Then, there's a runtime validation to make sure that one of the two have been honoured.    However, if the pojo type is not instantiable, the nested element is not generated, yet the parameter is still marked as optional.",Bug,Major,Closed,"2016-01-25 21:55:57","2016-01-25 21:55:57",3
Mule,"Initialisation value should be respected when optional parameter defaults to null","Consider the following code:         If the paremeter had some specific optional value, it would make sense for the QueuDestinationType created there to be overriden. However, if it defaults to null, it's not from a UX perspective to force the user into implementing Initialisable and doing the check/initialisation there. That value should be respected when the optional is null.","Enhancement Request",Major,Closed,"2016-01-25 19:46:46","2016-01-25 19:46:46",5
Mule,"When extensions has a POJO parameter with ExpressionSupport.REQUIRED, no child element should be generated for it","When a Parameter or Field is configured with org.mule.extension.api.introspection.ExpressionSupport.REQUIRED, no child element should be generated in the XSD.    The global element associated to the pojo should be generated.    ",Bug,Major,Closed,"2016-01-25 17:20:13","2016-01-25 17:20:13",5
Mule,"Merge 3.x to 4.x","Merge the latest changes on the 3.x branch into 4.x",Task,Blocker,Done,"2016-01-25 17:07:17","2016-01-25 17:07:17",8
Mule,"MESSAGE_SEND_BEGIN event for EndpointMessageNotification is sent after the outbound call is executed","The event MESSAGE_SEND_BEGIN for the Endpoint Message Notification is triggered only after the message is sent and not before.  This causes that the notification is not sent if the outbound call fails (i.e a connection error)",Bug,Major,Closed,"2016-01-22 18:42:08","2016-01-22 18:42:08",0
Mule,"TlsContextFactory should throw CreationException","On MULE-9344, the CreationException had to be removed from the TlsContextFactory because of a temporary technical limitation moving that class to mule-api.    This issue is to track the task to give that exception back once the exceptions have been moved to mule-api",Task,Critical,Done,"2016-01-22 18:02:50","2016-01-22 18:02:50",4
Mule,"Move TlsContextFactory to the Mule API","Move the contents of org.mule.module.tls.api to the mule-api project",Bug,Major,Closed,"2016-01-22 18:00:34","2016-01-22 18:00:34",3
Mule,"Fix flaxy SFTP tests","Fix flaxy SFTP tests",Task,Minor,Done,"2016-01-21 12:45:09","2016-01-21 12:45:09",0
Mule,"Remove TLS v1.0 support from tls-default.conf","Due to TLS 1.0 no longer being acceptable for PCI compliance we have to remove support for this protocol version from the tls-default.conf.",Task,Critical,Done,"2016-01-21 03:06:23","2016-01-21 03:06:23",3
Mule,"Review the implementation of RetryPolicyTemplates in Extensions API to support Async/Non Blocking","*Review the implementation of RetryPolicyTemplates in Extensions API to support Async/NonBlocking*    * Extensions API uses RetryPolicyTemplate to do the retry logic in case of ConnectionExceptions. The problem comes that this RetryPolicyTemplate comes in two flavours Sync and Async, which the last one is not supported nowadays.  * This is could be an importante feature in case of transactional scopes.  ","Enhancement Request",Blocker,Closed,"2016-01-20 17:34:39","2016-01-20 17:34:39",3
Mule,"Remove Expression Evaluators","Remove expression evaluators",Task,Major,Done,"2016-01-20 00:11:50","2016-01-20 00:11:50",3
Mule,"Refactor Transformers to operate on MuleEvent","Refactor Transformers to operate on MuleEvent.",Task,Critical,Done,"2016-01-19 12:02:48","2016-01-19 12:02:48",16
Mule,"Misconfigured file:list throws unfriendly error","The following log is obtained from a misconfigured file:list operation:    {code}    ERROR 2016-01-15 14:34:43,672 [[ftp-app].ftp-appFlow.stage1.02] org.mule.exception.DefaultMessagingExceptionStrategy:   ********************************************************************************  Message               : null.  Payload               :   Element               : /ftp-appFlow/processors/0 @ ftp-app  --------------------------------------------------------------------------------    [2:35]   ERROR 2016-01-15 14:34:55,674 [[ftp-app].ftp-appFlow.stage1.02] org.mule.exception.DefaultMessagingExceptionStrategy:   ********************************************************************************  Message               : null.  Payload               :   Element               : /ftp-appFlow/processors/0 @ ftp-app  --------------------------------------------------------------------------------  Root Exception stack trace:  java.lang.NullPointerException      at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)      at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)      at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)      at sun.nio.fs.AbstractPath.resolve(AbstractPath.java:53)  {code}    Error message should be friendlier and more descriptive about the problem that actually happened. The configuration that generated this is:    {code:xml}  <?xml version=1.0 encoding=UTF-8?>  ​  <mule xmlns:file=http://www.mulesoft.org/schema/mule/file xmlns=http://www.mulesoft.org/schema/mule/core xmlns:doc=http://www.mulesoft.org/schema/mule/documentation   xmlns:spring=http://www.springframework.org/schema/beans    xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance   xsi:schemaLocation=http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd  http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd  http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd>      <file:config name=File_Connector_config baseDir=/Users/pablocabrera/dev/connectors/connector-name-connector doc:name=File Connector config/>      <flow name=ftp-appFlow>          <poll doc:name=Poll>              <logger message=Started Flow level=INFO doc:name=Logger/>          </poll>          <file:list config-ref=File_Connector_config doc:name=File Connector/>          <logger message=#[payload] level=INFO doc:name=Logger/>      </flow>  </mule>  {code}",Bug,Major,Closed,"2016-01-15 17:57:16","2016-01-15 17:57:16",3
Mule,"Rethink SDK support for data types","Currently, the SDK supports obtaining and setting the output message through a combination of the following:    * ContentType interface  * ContentMetadata interface  * ContentMetadataParameters annotation    Given that the DataType is now a first class citizen on the new MuleMessage API, we need to rethink if it makes sense to continue to do things like that or if we should just use a simpler, MuleMessage based model",Task,Major,Done,"2016-01-15 17:36:30","2016-01-15 17:36:30",3
Mule,"Add support for reconnection on SDK message sources","Extend the work done in MULE-8909 to augment MULE-9083","Enhancement Request",Critical,Closed,"2016-01-15 14:17:25","2016-01-15 14:17:25",13
Mule,"Add support for new MuleMessage in the SDK","SDK should no longer be compatible with the Mule 3.x MUle Message. Instead, it should only support the new MuleMessage interface defined in mule-api.    Because the new mule message is meant to be immutable but we still haven't reach that point, operations which return a MuleMessage must set the payload, attributes and dataType of the returned message into the one that entered the pipeline.    If the attributes or dataType of the returned message are null, then the values currently set on the original message must be preserved.    Operations will no longer be allowed to return a MuleEvent.","Enhancement Request",Blocker,Closed,"2016-01-15 14:12:43","2016-01-15 14:12:43",5
Mule,"Add the 'target' synthetic parameter on all SDK operations","All operations written through the SDK must automatically include a parameter named target. This parameter is an optional String and doesn't support expression.    When provided, it means that the message that first entered the OperationMessageProcessor must leave it untouched. However, whatever output the operation produces must be propagated on a new MuleMessage which is set on a flowVar which name is taken from the target property","Enhancement Request",Critical,Closed,"2016-01-15 13:55:26","2016-01-15 13:55:26",5
Mule,"Update project description in parent pom","Currently, the description reads:    Mule is the world's most widely used open source Enterprise Service Bus (ESB) implementation. Designed to support high-performance, multi-protocol transactions between heterogeneous systems and services,  Mule provides the basis for service oriented architecture (SOA).    I should read:    Mule is the runtime engine of Anypoint™ Platform. It is the industry’s only unified platform that combines data and application integration across legacy systems, SaaS applications, and APIs with hybrid deployment options for maximum flexibility.",Task,Major,Done,"2016-01-14 14:25:28","2016-01-14 14:25:28",0
Mule,"No exception is thrown when folder in path is removed","During run-time if the path to pool files from using the File transport is removed or renamed then the File Transport pooling will not throw any exception.",Bug,Major,Closed,"2016-01-14 21:41:43","2016-01-14 21:41:43",0
Mule,"WS consumer fails when reading secured WSDL","When a wsdl is secured with basic credentials the WS consumer fails to start.    The WS consumer does create the following configuration in Studio:      As you can see the authentication is sent as part of the URL.",Bug,Major,Closed,"2016-01-14 17:12:19","2016-01-14 17:12:19",0
Mule,"Define threading model for message sources in Mule 4","In Mule 3, receivers have a thread pool which they use to run the generated message through the flow.    Receivers no longer exist in 4 so we need to define if:    * Each MessageSource creates its own thread pool (that's what temporarily happening right now, although it's not possible to configure it)  * Each flow has its own thread pool and the message source consumes that  * Some other cleaver thought",Task,Critical,Done,"2016-01-14 14:26:48","2016-01-14 14:26:48",5
Mule,"Update joda-time to version 2.9 or newer","We need to update joda-time to the latest version due to compatibility issues with the latest updates of Oracle JDK 8","Enhancement Request",Critical,Closed,"2016-01-13 21:10:49","2016-01-13 21:10:49",0
Mule,"HTTP outbound credentials not picked up if credentials exist from inbound","Customer has a http outbound which needs basic authentication. What he observed is if the inbound is a file connector, it works correctly; however if the inbound is a ftp/sftp connector which has username/password set, it fails with 401. ",Bug,Blocker,Closed,"2016-01-13 18:32:29","2016-01-13 18:32:29",0
Mule,"Upgrade libraries and remove deprecated components in XML module","Upgrade saxon and remove all the deprecated components in mule-module-xml",Task,Major,Done,"2016-01-13 04:34:03","2016-01-13 04:34:03",5
Mule,"MVEL expressions that return NullPayload must return the object","The following premises should apply:    - When comparing a NullPayload with null in a MVEL expression, it must return true.  - When getting a NullPayload, it must get a NullPayload instance instead of null.",Bug,Major,Closed,"2016-01-12 22:04:10","2016-01-12 22:04:10",0
Mule,"List of misc pending tasks for Mule 4.0","This issue contains a list of small changes we need to do in Mule 4 that are consequences of removing code or small changes we notice we will have to do.    List of tasks:  - Re-write rollback exception strategy scenarios whenever flowContruct is responsible for defining the redelivery policy use instead of the inbound endpoint  - Re-add test for component binding - ComponentBindingTestCase  - Review what to do with Multicast router  - JMS readd support for JMS in bitronix - See classes in com.mulesoft.mule.bti.jms  - Re-add test cases for single resource tx and XA EndpointToEndpointBitronixXaTransactionTestCase and EndpointToEndpointXaTransactionTestCase  - Review what to do with test EncryptionFunctionalTestCase - Currently is not supported with new HTTP module (See MULE-9202) and we still need to define VM support  - Reimplement test in ShutdownAppInDomainTestCase that tests JMS scenario   - Add test cases to validate security context serialization in MuleSession (if we are going to support it)   - Read test cases from UnsupportedConnectorsMuleArtifactTestCase  - Review what to do around imx (management module) since everything seems to revolve around endpoints (JmxDuplicateEndpointNamesTestCase, JmxStatisticsAsyncTestCase, MessageProcessorNotificationTestCase).  - Scripting Module: Review how to implement GroovyBindingFunctionalTestCase (It uses VM endpoint inside a script:java-interface-binding) and GroovyMessageBuilderTestCase (which calls a VM endpoint inside a groovy script)     - Review what to do with recipient-list since it's based on OutboundEndpoint (see MessageProcessorNotificationTestCase: recipient-list flow & FlowConfigurationFunctionalTestCase: testRecipientList).  - Review what to do with request-reply since it's based on endpoints (see MessageProcessorNotificationTestCase: request-reply flow, RequestReplyInFlowTestCase).  - Review flowEndingWithOneWayEndpointReturnsNull configuration fag (see OneWayOutboundReturningNullTestCase)  - Review redelivery policy  - Review what to do with dynamic endpoints.  - Reimplement XaVmTransactionalElementTestCase, have a way other than VM to test the possible XA scenarios.  - Rethink recipient-list element since it's completed couple to endpoints urls  - Re-add support for binding element  - Define what to do with filtering outbound routers  - Re-add test cases MulticastingRouterTestCase and MessageSplitterRouterTestCase once we have support for sync and async operations   - Define what to do with management module publish-notifications and outbound-endpoint elements - Also what to do with JMX functionality for connectors and endpoints   - Define what to do with java-interface-binding   - Define what to do with CXF proxy-client decoupledEndpoint attribute   - Define what to do with custom-transaction element   - Re-add test case RedeliveryPolicyNamespaceHandlerTestCase once it gets supported in new connectors   - Review inbound endpoint security credentials: MuleEventTestCase.testMuleCredentialsSerialization   - Review one-way endpoint test cases: LaxAsyncInterceptingMessageProcessorTestCase.testProcessOneWay, LaxSedaStageInterceptingMessageProcessorTestCase.testProcessOneWay, SimpleCollectionAggregatorTestCase.testAggregateMultipleEvents, SimpleCollectionAggregatorTestCase.testAggregateSingleEvent, AsyncInterceptingMessageProcessorTestCase.testProcessOneWay, SedaStageInterceptingMessageProcessorTestCase.testProcessOneWay, ProxyTestCase.testOneWaySendWithSoapActionSpoofing   - DefaultMuleEvent no longer depends on endpoints. We need to define how to configure values for attributes transacted, messageSourceName, messageSourceURI, timeout, enconding, exchange-pattern and credentials   - Review reconnection logic that was removed as part of the transport infrastructure removal   - ReplyToHandler depends on endpoint to send the reply. We need to update to work with new connectors operations.   - Review processing strategies to determine when it's possible or not to execute asynchronously.   - Re-add test case MuleEventTestCase.testMuleCredentialsSerialization once we define what we do with credentials   - Re-add test case JsonBeanRoundTripNonAsciiTestCase once we define the proper interface for transformers. Since we remove endpoints, transformers not longer get injected with endpoints and the transformer took the source encoding from it. Now it should take it from the source DataType but due to the current interface for transformers we can't access it.",Task,Blocker,New,"2016-01-11 20:25:24","2016-01-11 20:25:24",16
Mule,"Remove ESB occurrences from logs and splash","- Review logging",Task,Minor,Done,"2016-01-11 19:07:19","2016-01-11 19:07:19",0
Mule,"Extensions fail to build if parameter has a wildcard generic","Consider an extension with a parameter like this:        Building such a extension results on the following error:        The problem is that because the generic is a wildcard, the ResolveableType  obtained by IntrospectionUtils.getFieldDataType() returns a null rawClass. As a result, the generated DataType points to a null class which in turn causes a NPE when an attempt is made to obtain a qualifier.    The SDK should:    * Ignore a type's generics one they contain at least one wildcard (consider cases like Map<String, ?>  * Log a warning when it founds a wildcard generic  * Also verify this behaviour for the case of operations in which the parameters are obtained from method arguments instead of fields  ",Bug,Critical,Closed,"2016-01-09 02:37:07","2016-01-09 02:37:07",5
Mule,"Make DataType immutable","If TypedValue is immutable and the plan is that MuleMessage is immutable too, then DataType needs to be immutable too.",Task,Major,Done,"2016-01-08 15:51:49","2016-01-08 15:51:49",5
Mule,"Refactor ExpressionLanage and AbstractMessageTransformer to operate on MuleEvent","Refactor MEL to operate on MuleEvent and update event.message when message is mutated.",Task,Major,Done,"2016-01-07 15:29:17","2016-01-07 15:29:17",8
Mule,"Review and update naming and deprecation","- TypedValue.value -> TypedValue.content ?  - MuleEvent.variables -> MuleEvent.properties?  - MuleEvent -> Message & Message -> Payload?",Task,Blocker,Done,"2016-01-07 12:23:24","2016-01-07 12:23:24",5
Mule,"Define and implement MessageMapping mechanism and default implementation for connectors and implement for ext-api","This is a placeholder for issue discussed regarding how to propagate correlationId's, and properties in JMS bridge use cases without requiring knowledge of connector specific attributes objects. Potentially similar to spring integration property mappings",Task,Minor,New,"2016-01-07 12:21:04","2016-01-07 12:21:04",16
Mule,"Cleanup MuleEvent, Make MuleEvent immutable and update uses","This task will probably require some discussion/analysis/decisions relating to:    - MuleEvent/MuleMessage Parent/Child Relationship  - MuleEvent Scoping  - OriginalPayload  - ExceptionPayload  - Attachments  - ReplyTo  ",Task,Major,Done,"2016-01-07 12:19:40","2016-01-07 12:19:40",13
Mule,"Extract Static/Request context from MuleEvent into ExecutionContext","ExecutionContext should be immutable and have a factory that can be used from MessageSources, where some values used in the ExecutionContext are provided by the source itself, while others are provided by Mule as required.",Task,Major,Done,"2016-01-07 12:17:04","2016-01-07 12:17:04",2
Mule,"Spike: Cleanup MuleMessage and make it immutable.","Everything we need in MuleMessage other than payload, dataType, metaData should be moved to MuleEvent.  The result should be a simple/immutable MuleMessage, that doesn't require a builder. ",Task,Major,Done,"2016-01-07 12:13:17","2016-01-07 12:13:17",8
Mule,"Add Attributes to MuleMessage and make MuleMessage extend TypedValue.","Also make updates to MEL as required.",Task,Major,Done,"2016-01-07 12:11:15","2016-01-07 12:11:15",5
Mule,"Troubleshooting: Expression component doesn't show the doc:name, element xml and number line in the exception logging","Troubleshooting: Expression component doesn't show the doc:name, element xml and number line in the exception logging",Bug,Major,Closed,"2016-01-07 03:35:39","2016-01-07 03:35:39",1
Mule,"Troubleshooting: It would be nice to add the payload type in the exception logging","Right now if the payload is not consumable you see the content of the payload but the type is not shown. You can guess but you are not 100% sure if the payload is a string or another type that as the toString is apply to show the content.     It could be added at the beginning of the payload field (if it is at the end and the payload is long, for example a json it will be difficult to see it) or in another field like payload type (in this case it will be added only when the payload is non-consumable) ","Enhancement Request",Minor,Closed,"2016-01-07 03:28:35","2016-01-07 03:28:35",1
Mule,"Troubleshooting: When an exception is thrown in a for_each component the element appear with null ","When an exception is thrown in a for_each component the element appear with null:    ********************************************************************************  Message               : Execution of the expression collection failed. (org.mule.api.expression.ExpressionRuntimeException).  Payload               : org.glassfish.grizzly.utils.BufferInputStream@72503074  FlowStack             : at for_each_flow(/for_each_flow/processors/0 @ troubleshooting_for_each_null:troubleshooting_for_each_null.xml:14 (For Each))  Element               : null @ troubleshooting_for_each_null:null:null  --------------------------------------------------------------------------------",Bug,Major,Closed,"2016-01-07 03:17:43","2016-01-07 03:17:43",1
Mule,"Troubleshooting: There are some components that only shows the exception message without element xml, element, etc","There some components that when the throw exception they don't show the element, element xml, etc.     I have found that VM, Dataweave, Expression Transformer and Groovy Transformer have this issue.    +The groovy transformer exception looks like this:+    ********************************************************************************  Message               : groovy.lang.MissingPropertyException: No such property: lala for class: Script5  Possible solutions: class (javax.script.ScriptException)  Transformer           : ScriptTransformer{this=1a4cfd8, name='ScriptTransformer', ignoreBadInput=false, returnClass=SimpleDataType{type=java.lang.Object, mimeType='*/*', encoding='null'}, sourceTypes=[]}  --------------------------------------------------------------------------------    +Expression Transformer exception looks like this:+    ********************************************************************************  Message               : Execution of the expression fail failed. (org.mule.api.expression.ExpressionRuntimeException)  Transformer           : ExpressionTransformer{this=58e8d62c, name='ExpressionTransformer', ignoreBadInput=false, returnClass=SimpleDataType{type=java.lang.Object, mimeType='*/*', encoding='null'}, sourceTypes=[SimpleDataType{type=java.lang.Object, mimeType='*/*', encoding='null'}]}  --------------------------------------------------------------------------------",Bug,Major,Closed,"2016-01-06 21:27:10","2016-01-06 21:27:10",1
Mule,"Improve logging when a TLS error occurs","Right now we might get a Remotely closed IOException in the requester, with no relation to TLS or tip to debug it, and no message at all in the listener. ",Bug,Minor,Closed,"2016-01-06 20:24:23","2016-01-06 20:24:23",1
Mule,"SDK: POJO fields with and without @Parameter annotation doesn't get validated","*SDK: POJO fields with and without @Parameter annotation doesn't get validated*  * By now all *@Parameter* fields from *Configurations*, *Extensions* and *parameters of operations* are validated by the {{ParameterModelValidator}} with exception of the *@Parameter POJO fields* and the *fields of a POJO without that annotation*. *Why?* Because this fields are not described in a intermediate model, unlike the other examples, they are just taken in taken in account to generate the schema. * *Approaches:*  ** Create a model for this kind of fields or use an existing model, and integrate them to the actual validation system. ** Validate at SchemaBuilding time, horrible, duplicated code. ** Other? sure.",Bug,Major,Closed,"2016-01-06 14:51:59","2016-01-06 14:51:59",8
Mule,"SDK: Parameter classes names clashes with Operations, Configurations and ConnectionProvider names","*SDK: Parameter classes names clashes with Operations, Configurations and ConnectionProvider names*    * In case that you define a *@Operation* like:    Will generate a schema like:    When the Mule Application start a *SAXParseException* is thrown due there are two elements defined with the same name:    * The same issue can occur when you have a *ConnectionProvider* and a *Operation*: For Example a *ConnectionProvider* without an *Alias* _(so connection as name)_ and a POJO Parameter of type Connection with generate two elements with connection as name.    *Work to do*: Add more name clashing validations _(Taking in consideration Parameters types names, ConnectionProviders names, Operations names and Configuration names)_ for this cases to fail nicely at Extension generation time, and not fail at runtime when the Mule App starts.    ",Bug,Major,Closed,"2016-01-05 20:36:26","2016-01-05 20:36:26",8
Mule,"Allow studio to discover and instantiate ExtensionModels","Allow studio to discover and instantiate ExtensionModels.    We need to provide an interface that Studio can use to discover extensions given a runtime or extension.    ",Bug,Major,Closed,"2016-01-05 20:17:17","2016-01-05 20:17:17",0
Mule,"SDK: Default values are not registered in the Extension XSD","*SDK: Default values are not registered in the Extension XSD*    *Issue:*  * The SchemaBuilder class provides the createAttribute() method to create an attribute for the Extension XSD, but the method signature doesn't provide a way to configure the default values of the attributes.    *Symptoms:*  * Luckily _(And not so luckily)_ when the attribute is based in a *ParameterModel*, the default value is grabbed from the model and not from the XSD so this bug doesn't affect that kind of attributes.  * This bug affects to attributes that are doesn't based in any kind of Model, like *disableValidation* , from *ConnectionProvider*, which should have a true value by default or POJOs when are configured without *@Parameter* fields.    *Work to do:*  * *createAttribute()* signature should provide a way to give a default value.  * Fix all places where a *createAttribute()* with Default Value it's required.",Bug,Major,Closed,"2016-01-05 19:34:07","2016-01-05 19:34:07",3
Mule,"Add support for TlsContext in SDK","It should be possible in the SDK to have configurations/connection providers which receive a TlsContextFactory:        This should automatically generate the proper support to configure a tls-context element reusing the existing infrastructure.     If the parameter is also marked as @Optional, then the default TlsCOntext should be injected if the element is not present on the XML","Enhancement Request",Major,Closed,"2016-01-04 17:50:30","2016-01-04 17:50:30",5
Mule,"Support to receive Mule expressions as parameters without getting resolved","Add support on the SDK for receiving MEL expressions without getting the string evaluated.    This features was supported in DevKit as described here:   https://www.mulesoft.org/jira/browse/DEVKIT-245    This will be supported both for @Parameters and Operation arguments, when they are annotated with _@Literal_  When @Literal is used, ExpressionSupport should be _SUPPORTED_.",Story,Major,Done,"2016-01-04 15:35:40","2016-01-04 15:35:40",8
Mule,"Allow users to use Text editor for long String input fields","For long String input fields, users should be able to mark the fields with @Text to generate a text editor instead of a String editor, as the DevKit did.",Bug,Minor,Closed,"2016-01-04 15:26:28","2016-01-04 15:26:28",2
Mule,"Allow users to use password editor for sensitive data fields","When a field is related to sentisitive data, like passwords or tokens, users should be able to use the password editor field.    To do this, users should be able to mark the parameters and configurable field with @Password.",Bug,Major,Closed,"2016-01-04 14:53:47","2016-01-04 14:53:47",2
Mule,"Add support for Maps in the SDK","Add support to allow configurations and operations to receive Map parameters","Enhancement Request",Major,Closed,"2016-01-04 14:51:17","2016-01-04 14:51:17",13
Mule,"Remove extensions test jars from mule distribution","Currently, when creating the studio distributions, extensions used for testing only are being discovered inside the runtime. (Heisenberg Extension).    This jar should not be included in the distribution, or at least we should have a flag that needs to be explicitly provided for this jars to be included.",Bug,Major,Closed,"2016-01-04 14:26:59","2016-01-04 14:26:59",3
Mule,"SDK: Extend IllegalModelDefinitionException to be more specific when validating the Extension model","*SDK: Extend IllegalModelDefinitionException to be more specific when validating the Extension model*    In some test cases like: *ExtensionBuildersTestCase* there are some test cases that are expecting *IllegalModelDefinitionException* or *IllegalArgumentException* that are caused due to some model validations, and a problem that is happening, that maybe a new validation is added and all tests cases still failing with the expected Exception but with an incorrect cause.  To solve this:  * Review all kinds of exceptions thrown by the validations, and check if make sense to migrate from an super generic *IllegalArgumentException* to an *IllegalModelDefinitionException*.  * Extend *IllegalModelDefinitionException* to be more specific in the validation error. An approach could be extending for any kind of model available (Operation, Configuration, Connection Provider and also for Parameters). For example: If it fails because the configuration was not configured with a *ConfigurationFactory*, It should fail with a *IllegalConfigurationModelDefinitionException*.  * Review all ModelValidators to throw proper exceptions.","Enhancement Request",Major,Closed,"2015-12-29 22:11:21","2015-12-29 22:11:21",3
Mule,"Extract FlowStack testing code to a common location","So it can be reused by other modules that include components that support flowStack",Task,Minor,Done,"2015-12-23 22:23:29","2015-12-23 22:23:29",0
Mule,"Null pointer while catching the exception thrown from Enricher processor","When exception is caught that was thrown from Enricher processor, it throws null pointer exception     org.mule.exception.CatchMessagingExceptionStrategy: Caught exception in Exception Strategy: null  java.lang.NullPointerException   at org.mule.processor.AbstractRequestResponseMessageProcessor$1.processReplyTo(AbstractRequestResponseMessageProcessor.java:107) ~[mule-core-3.7.2.jar:3.7.2]   at org.mule.routing.requestreply.AbstractReplyToPropertyRequestReplyReplier.processReplyTo(AbstractReplyToPropertyRequestReplyReplier.java:67) ~[mule-core-3.7.2.jar:3.7.2]   at org.mule.routing.requestreply.AbstractReplyToPropertyRequestReplyReplier.process(AbstractReplyToPropertyRequestReplyReplier.java:43) ~[mule-core-3.7.2.jar:3.7.2]",Bug,Major,Closed,"2015-12-23 18:16:14","2015-12-23 18:16:14",0
Mule,"File connector requires a custom matcher","The file connector has the concept of creation, modification and access timestamp for files.    The rest of the file connectors most commonly only have the concept of timestamp which is tied to modification time.    As defined today, all the connectors based on file-common have the 3 concepts. It should be possible for the FTP family to only handle a timestamp and only file have the specific concept","Enhancement Request",Major,Closed,"2015-12-22 21:14:20","2015-12-22 21:14:20",5
Mule,"Update File and FTP connectors to leverage the changes in the new MuleMessage","The work on MULE-9216 is based on a FilePayload pojo which is set as payload. Per the changes in the new MuleMessage structure this should be revamped as:    * The input stream goes into the payload  * The rest of the attributes go into a FileAttribute pojo which is set as metadata  * The list operation returns a List<MuleMessage>","Enhancement Request",Critical,Closed,"2015-12-22 21:11:38","2015-12-22 21:11:38",8
Mule,"UntilSuccessfulTestCase is throwing NPE","It seems the exception handler was not added to the until-successful functional test case so some of the tests are throwing NPEs.",Bug,Minor,Closed,"2015-12-22 19:51:55","2015-12-22 19:51:55",0
Mule,"SDK: Split extensions parent POM, for internal and external extensions","*Split extensions parent POM*    * Create a new Parent POM for external (to Mule Distribution) extensions, to be used by MuleSoft internal connectors (Salesforce, Workday, etc) and third party (custom connectors, certification).  ** One of the problems the actual POM is that project version (the extension version) is attached to all Mule dependencies version. For external connectors, this should be detached .  * Rollback the changes made in the actual extensions POM, to be used exclusively for Mule Distribution extensions. (MULE-9055)",Task,Major,Done,"2015-12-22 14:12:39","2015-12-22 14:12:39",5
Mule,"Logging issues when using domain configuration with JMS connector","JMS receiver is not setting the context classloader of the application its message is for. This causes that when the message is received by a thread managed by the domain or an embedded broker, any log entries for that message processing do not end up in the application log.",Bug,Minor,Closed,"2015-12-21 20:55:24","2015-12-21 20:55:24",0
Mule,"If the @XML annotation is not present, the extension should not fail.","Currently when creating an extension, the @XML annotation is mandatory, we should specify at least the namespace of the extension.    If the @XML annotation is not present, this error is thrown   [ERROR] diagnostic: error: xml model property cannot be null.    Instead of creating a validator for avoiding this error, we must implement a default behaviour for the @XML annotation when it is not present.    The behavior should be that:    1) The annotation can be either completely absent or present but with all optional parameters  2) The namespace attribute will be derived from the extension name by transforming to lower case, removing all occurrences of the connector String and hyphenizing  3) The schemaLocation should default to http://www.mulesoft.org/schema/mule/{1}, where {1} is replaced by the namespace value  4) The schemaVersion should default to the Major and minor components of the Semver extension version, without classifiers. For example: 4.0.0-SNAPSHOT should translate to 4.0    ",Bug,Major,Closed,"2015-12-21 19:10:33","2015-12-21 19:10:33",5
Mule,"Using multiple threads in an until successful causes an exception if the message is rejected","When a thread stores an event for processing, it owns it's message. If the pool has many threads another might pick it up and though it copies it for processing it does not when abandoning the retries and calling the exception handler (no DLQ is configured) which need to add the exception payload, so an access violated error occurs.",Bug,Major,Closed,"2015-12-21 15:32:45","2015-12-21 15:32:45",0
Mule,"Add buildPaths method to Notification Utils that returns Map<MessageProcessor, String> ","As a result of a refactor you've change the return type of NotificationUtils.buildPaths    This from MUnit point of view brakes backward and render future MUnit versions incompatible with older versions of Mule.    If possible we would like you guys to change it back to return the same type.","Enhancement Request","To be reviewed",Open,"2015-12-18 15:21:33","2015-12-18 15:21:33",1
Mule,"Create a Syntax Validator to group all validations made for annotation based Extensions ","*Create a syntax validator to group all validations made for annotation based Extensions*    * The purpose of create a Syntax validator is because exists rules, for annotation based extensions, that cannot be made from the built model.  * We need to provide an API to provide information about the code errors in the Extension to be consumed in Studio. _(Feature that with the current Model Validators are not possible)_.  * Nowadays all validations made for annotation based extension, are distributed in different classes, mainly at the moment of create the Extension Model.    *Additional validations to add*    * No Source should have more than one method annotated with `OnResponse` or `OnError`  * Parameters that are not exposed in the model like DefaultEncoding cannot be annotated with `@Parameter` nor any of its modifiers","Enhancement Request",Critical,Open,"2015-12-17 18:49:31","2015-12-17 18:49:31",13
Mule,"Update spring schemas to 3.8","Update spring schemas to 3.8",Task,Major,Done,"2015-12-17 17:06:36","2015-12-17 17:06:36",1
Mule,"Introduce the new File and FTP connectors","Introduce the base for the new file and ftp connectors (even though future commits will keep adding features)","Enhancement Request",Major,Closed,"2015-12-17 14:28:49","2015-12-17 14:28:49",0
Mule,"File system connectors should default to mule message information when possible","As it is today, the filesystem connectors require the user to provide path and content for each operation.     That's great for some cases. In other cases in which the mule message already contains a reference to a file, those attributes should be optional and the connectors should be smart enough to get the necessary parameters from the message itself.","Enhancement Request",Major,Closed,"2015-12-16 21:07:05","2015-12-16 21:07:05",2
Mule,"Add missing syntax validators for annotation driven extensions","*Add missing syntax validators for annotation driven extensions*  * Validate @UseConfig or @UseConfig are used more that once  * Validate if configurations or connection providers from the @Extension are compatible with every @UseConfig or @Connection type from the @Operations","Enhancement Request",Major,Closed,"2015-12-16 20:46:47","2015-12-16 20:46:47",3
Mule,"Transfer mode and passive attributes should not trigger new config instances","Currently, the passive and transferMode attributes in the new FTP connector are dynamic. However, those should accept expressions but not trigger new config instances since those shouldn't require a new pool to be created.    Leverage MULE-9211 to allow this.","Enhancement Request",Major,Closed,"2015-12-16 18:29:46","2015-12-16 18:29:46",3
Mule,"Configurations should be able to have dynamic parameters which don't trigger dynamic configurations","Currently, all configuration parameters with expression values are translated into a DynamicConfigurationResolver. This is fine for most cases    There're other cases though in which it's desirable to have dynamic values which shouldn't necessarily trigger a new config instance. For example, an FTP connector which needs to switch between ASCII and BINARY mode. It should be fairly easy to switch modes through the use of an expression, but we don't want to trigger new connection pools for each case. Only connection credentials should trigger that.    To enable this case, we can leverage the ValueResolver<T> object which already exists in the extension-support module.    The config can have:        and then when you want to get the value you go:    ","Enhancement Request",Major,Closed,"2015-12-16 18:26:39","2015-12-16 18:26:39",8
Mule,"ConnectionProvider getHandlingStrategy must receive a parameterized ConnectionHandlingStrategyFactory","Current ConnectionProvider getHandlingStrategy interface method receive a ConnectionHandlingStrategyFactory raw type parameter, this  results in an unchecked warning on every implementation of this method.  The signature of the method must be  ",Bug,Major,Closed,"2015-12-15 21:54:24","2015-12-15 21:54:24",2
Mule,"XmppMessageDispatcher doesn't reconnect","h3. Problem description    The customer is working in a scenario where the XMPP Server (Openfire) can disconnect Mule ESB as a client.     The class *org.mule.transport.xmpp.XmppConnector* doesn't implement any mechanism to validate the underlying *org.jivesoftware.smack.XMPPConnection*    The class XMPPConnection has the method *isConnected()* that could be used to validate the connection before dispatching messages, and eventually fire a reconnection, if needed.    Note that during my tests I was able to verify that killing Openfire (with kill -9), no reconnection strategy was fired.    Reconnection seems to work only when at initialization time it detects that there is no connection towards the XMPP Server.",Bug,Major,Closed,"2015-12-15 19:06:12","2015-12-15 19:06:12",0
Mule,"HTTP Requester + OAuth: Add the option to send Client id/secret with Basic Auth using Client Credentials","Right now the HTTP Requester sends the client_id and client_secret in the request-body.     This is a valid option but the RFC also allows to send them using Basic Authentication:  * https://tools.ietf.org/html/rfc6749#section-2.3.1     For example Paypal and Spotify APIs only support to send them using Basic Auth.  * Example: https://developer.paypal.com/docs/api/#oauth-request--response      ","Enhancement Request",Major,Closed,"2015-12-15 18:16:49","2015-12-15 18:16:49",5
Mule,"MTOM attachments not working with WS consumer and HTTP listener","See MtomFunctionalTestCase.    Fails because it seems there's a malformed response.",Bug,Major,Closed,"2015-12-15 15:22:58","2015-12-15 15:22:58",8
Mule,"Review new http module and password encryption filter","Old http transport inbound endpoint allow to configure a filter to do some kind of encryption /decription over the password.                    <inbound-endpoint address=http://localhost:${port1}>                      <encryption-security-filter strategy-ref=PBE/>                  </inbound-endpoint>    See EncryptionFunctionalTestCase and PlainTextFunctionalTestCase    We need to define if we want to support this functionality in the new HTTP module. The main problem is the usage inside a composite source.",Task,Major,Done,"2015-12-15 14:39:37","2015-12-15 14:39:37",2
Mule,"HTTP request should throw a ConnectException when it fails to send a request","Test ExceptionStrategyCommonScenariosTestCase.testStopFlowBasedOnExceptionType is failing because the HTTP request element is not thrown a ConnectException. Is thrown a plain MessagingException.",Bug,Minor,Closed,"2015-12-15 14:12:20","2015-12-15 14:12:20",0
Mule,"Fix context shutdown test cases with http:listener","Some test cases in ValidShutdownTimeoutRequestResponseTestCase and ExpiredShutdownTimeoutRequestResponseTestCase are failing after migration to new http module.",Bug,"To be reviewed",Resolved,"2015-12-15 13:55:28","2015-12-15 13:55:28",2
Mule,"HTTP client in devkit support not working against HTTP listener","The http client in devkit support is failing against and http:listener.    The http client implementation is really poor, so was the old http transport and that may be the cause of the failure, bad implementation. Perhaps is better to use a http client library in devkit support instead of a custom implementation.",Bug,"To be reviewed",Closed,"2015-12-15 13:40:48","2015-12-15 13:40:48",0
Mule,"JAXBMarshallerTransformer fails to transform to byte array","JAXBMarshallerTransformer fails to transform to a byte array.    The easy fix is to add an if in JAXBMarshallerTransformer for byte array. But the real fix seems to be fix the auto transformation logic. Since JAXBMarshallerTransformer knows how to transform to a String and mule knows how to transform from String to byte array then the auto transformation should work.",Bug,Major,Closed,"2015-12-14 19:57:11","2015-12-14 19:57:11",8
Mule,"Review new HTTP module if should propagate root message id as old transport","Old transport propagates the root message id using HTTP headers. We need to define if we want to keep this functionality in Mule 4.","Enhancement Request",Major,Closed,"2015-12-14 19:37:11","2015-12-14 19:37:11",8
Mule,"Big memory footprint on XMPP Transport: org.jivesoftware.smack.PacketCollector","XMPP transport uses smack, which stores in memory a large number of objects for the received messages. On versions later that the one currently in use in Mule, the max size of this objects to store is configurable.",Bug,Critical,Closed,"2015-12-11 19:12:06","2015-12-11 19:12:06",0
Mule,"Spike on new FTP connector","Spike on a new FTP connector which is consistent with the new File one","Enhancement Request",Critical,Closed,"2015-12-11 18:23:34","2015-12-11 18:23:34",13
Mule,"RegistrationException More than one AbstractJmxAgent when using domain and enabling jmx","When starting an application that has a jmx agent, and that application is in a domain other than default, with Mule version 3.7.2, you should get:  RegistrationException: More than one object of type class org.mule.module.management.agent.AbstractJmxAgent registered but only one expected.  If you change the app's domain back to default (the one it's using has no configuration), that exception will not happen on startup.  In /META-INF/services/org/mule/config/registry-bootstrap.properties in mule-module-management-3.7.2.jar there are these two agents which are getting picked up automatically by Mule on startup:  jmx-agent=org.mule.module.management.agent.JmxApplicationAgent,applyToArtifactType=app  domain-jmx-agent=org.mule.module.management.agent.JmxDomainAgent,applyToArtifactType=domain  Mule 3.7 uses one registry so maybe that is why this exception is happening.",Bug,Major,Closed,"2015-12-11 14:40:06","2015-12-11 14:40:06",0
Mule,"Improved DataType support in MuleMessage to include information of types of list payload","This is related to consolidation of dataType in mule/ext-api/mule-commons.",Story,Minor,Done,"2015-12-11 13:32:34","2015-12-11 13:32:34",1
Mule,"Cleanup of Events put in ThreadLocal with RequestContext","By using RequestContext and OptimizedRequestContext, the event is put into the ThreadLocal of the processing thread. However, the thread may belong to a pool defined in a domain, and not clenaing the RequestContext properly will result in application stuff being referenced by domain objects, and these will not be garbage collected when undeploying the application while keeping the domain.",Bug,Major,Closed,"2015-12-09 19:57:42","2015-12-09 19:57:42",0
Mule,"CXF: Status code for successful one-way operations should be 202","For web service invocations that do not return an envelope (like one-way operations), status code 202 (Accepted) has to be returned instead of 200 (Ok)    Reference: http://www.w3.org/TR/soap12-part2/#http-reqbindwaitstate",Bug,Minor,Closed,"2015-12-09 13:05:46","2015-12-09 13:05:46",0
Mule,"CXF proxy trying to send response for one-way operations","When invoking SOAP webservice - Proxy Service, calling a one-way operation (no output defined) the response builder of http fails with the stack:        When the operation is one-way, an empty payload and status code 202 must be returned.",Bug,Major,Closed,"2015-12-04 20:23:18","2015-12-04 20:23:18",0
Mule,"Allow users to write Transformers as part of their extension","Users should be able to write Transformers in their extensions","Enhancement Request",Major,Closed,"2015-12-04 18:30:54","2015-12-04 18:30:54",13
Mule,"Add support for a Palette Name so that extension can define the display name (like the friendlyName of @Connector)","Users need to be able to specify a friendly name that will be used to generate the display name of the extension.    For example salesforce extension should say Salesforce in the palette, and we cannot generate this form the namespace nor the class name.","Enhancement Request",Major,Closed,"2015-12-04 18:09:11","2015-12-04 18:09:11",5
Mule,"Security credentials not passed to JMS broker when using 1.0.2b spec","When using JMS 1.0.2b, and *cacheJmsSessions* is not set to *false*, credentials are not passed to the JMS Connection.",Bug,Minor,Closed,"2015-12-03 19:53:21","2015-12-03 19:53:21",0
Mule,"Exclude xalan serializer from CXF","Nowadays, xalan is excluded from all dependencies and only added when necessary with version 2.7.2. The serialised however is not excluded and even though it is not part of the distribution, the CXF module does include it because of a transitive dependency with version 2.7.1. This causes trouble since the two versions don't match.","Enhancement Request",Minor,Closed,"2015-12-03 13:16:01","2015-12-03 13:16:01",0
Mule,"When using only one @Configuration users should not be forced to specify a config name","When writing an Extension with only one class annotated with @Configuration with no name, validations fails forcing you to specify a name for the annotation.    If you don't specify a name it fails.      The @Configuration should have a name by default and only check collisions of the name attribute",Bug,Minor,Closed,"2015-12-02 16:18:35","2015-12-02 16:18:35",3
Mule,"Implement a testing tool to check misusages of lifecycles","Allow a build to be run with a profile that fails tests when any of the following happen:    * lifecycle method is called more than once for a given object.  * dispose/stop method called without matching initialise/start having been called (if defined). Check for any possible combination scenarios.    Run the test suite with this tool enabled and verify any test failures caused by it. File a bug for each component that has a failure.    Provide this functionality to other teams do they can validate themselves the proper lifecycle usage of their defined objects.",Task,"To be reviewed",New,"2015-12-02 14:22:45","2015-12-02 14:22:45",8
Mule,"Users should not be forced to use @Parameter to expose pojo fields","In order to expose pojo fields users are force to annotate the each field with @Parameter.    When users consumes external jar, they cannot modify the code. Also if they generate java stubs from a WSDL using CXF, they will need to modify a huge amount of Pojos just to get this to work properly, and what is worst, if a new version of the WSDL goes out and you try to update your connector, you will lose everything after generating the new stubs.    The mechanism should be that if the Pojo has any field annotated with @Parameter, then the current logic is valid and should only expose those fields. However, if the Pojo has no @Parameter, every single field that has a gettter and setter should be taken into account (including nested pojo fields)",Bug,Major,Closed,"2015-12-01 14:08:39","2015-12-01 14:08:39",8
Mule,"Functional Tests for modules should be in the same artifact","As part of the OSGi research we need to move test from an artifact to a separate artifact. This is no longer needed so FunctionalTestCases should be in the same artifact, for instance mule-core and mule-core-tests should be merged.",Task,"To be reviewed",Done,"2015-11-30 18:23:58","2015-11-30 18:23:58",4
Mule,"Release MVEL 2.1.9-MULE-009","Perform a release of MVEL that contains the fix for the linked issues.",Task,Major,Done,"2015-11-30 16:53:47","2015-11-30 16:53:47",5
Mule,"MVEL gets in an infinite loop in CompileException","An infinite loop happens when building an error message for an invocation on a null object.    This is already fixed in MVEL repo: https://github.com/mvel/mvel/commit/188660b2eb6dab8d2262cd385b270017f4a50047",Bug,Major,Closed,"2015-11-30 16:49:07","2015-11-30 16:49:07",0
Mule,"ForEach component is loaded twice into the Registry","This is the root cause of MULE-9161    Analyzing the registry when the exception occurs, it is seen that the registry contains an additional uninitialized ForEach component.",Bug,"To be reviewed",Closed,"2015-11-30 15:44:52","2015-11-30 15:44:52",2
Mule,"Upgrade to Log4j latest version","https://issues.apache.org/jira/browse/LOG4J2-998 figures as already fixed in 2.3 and 2.5 is already out.  Mule is currently using 2.1  This may allow to get rid to some custom hacks currently being done in Mule side.","Enhancement Request",Major,Closed,"2015-11-26 17:07:38","2015-11-26 17:07:38",5
Mule,"Change TransformationService to not mutate MuleMessage","There are two parts to this:  * applyTransformers() methods:  ** Update applyTransformers() method signatures to return a MuleMessage instance.  ** Change implementation of  applyTransformers() to return a new message instance with the result of the transformation rather than mutating the original message instance.  ** Update all uses to use the return value as the result of the transformation.  * getPayload() methods:  ** Remove the logic that transparently transforms consumable payloads by mutating the message and setting a byte[] representation.   ** Calls to getPayload() that require transformation of a consumable payload will now fail.  ** Update uses to perform transformation to non-consumable prior to getPayload() if required.  ** Update getPayloadForLogging() implementation to return something like “Stream payload (InputStream)” instead of failing or performing translation. ** Ensure getPayloadForLogging() is only used for system logging and not used be user configured <logger/> component.",Task,Major,Done,"2015-11-26 15:38:40","2015-11-26 15:38:40",8
Mule,"Remove BootstrapServiceDiscoverer reference from MuleContext","As part of MULE-9089 MuleContext was updated in order to provide a BootstrapServiceDiscoverer.  That was done to make easier to start migration to the new container model and must be removed and repalced with dependency injection once the rest of the code is also migrated.",Task,Major,Done,"2015-11-26 12:37:47","2015-11-26 12:37:47",2
Mule,"@Optional should not be allowed when @Parameter group is used","When using @ParameterGroup, @Optional should be marked as an error.    ",Bug,Major,Closed,"2015-11-25 18:36:57","2015-11-25 18:36:57",5
Mule,"@Optional should not be allowed as a modifier for methods","@Optional can currently be used to annotate methods.     User should not be able mark methods with @Optional",Bug,Major,Closed,"2015-11-25 18:25:51","2015-11-25 18:25:51",0
Mule,"Add support for interfaces as parameters of an @Operation","When using interfaces as parameters of an operation, it fails to generate the Extension module giving a missleading wrong error message.    Whe should add the support to have interfaces as parameters.    Current error log:  ","Enhancement Request",Minor,Closed,"2015-11-25 17:20:18","2015-11-25 17:20:18",2
Mule,"Upgrade antlr to 3.5","We need to upgrade this dependency to match the one in mule-common and avoid conflicts. The affected modules would be drools and jBPM.",Task,Major,Done,"2015-11-24 19:17:40","2015-11-24 19:17:40",3
Mule,"Fix flaky ProcessorsTraceTestCase / MessageProcessorNotificationTestCase","Fix flaky tests",Task,Minor,Done,"2015-11-24 19:07:24","2015-11-24 19:07:24",0
Mule,"AsyncUntilSuccessful uses a fixed thread pool","When defining a threading profile for a asynchronous until successful the concurrent threads won't pass the value defined for maxThreadsIdle, when it should grow up to maxThreadsActive.    This is because AsynchronousUntilSuccessfulProcessingStrategy creates a scheduled executor that has a fixed thread pool by definition.    From https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html    bq. While this class inherits from ThreadPoolExecutor, a few of the inherited tuning methods are not useful for it. In particular, because it acts as a fixed-sized pool using corePoolSize threads and an unbounded queue, adjustments to maximumPoolSize have no useful effect. Additionally, it is almost never a good idea to set corePoolSize to zero or use allowCoreThreadTimeOut because this may leave the pool without threads to handle tasks once they become eligible to run.",Bug,Major,Closed,"2015-11-24 15:37:09","2015-11-24 15:37:09",0
Mule,"SFTP Request doesn’t autoDelete original file","When using MuleClient to use a SFTP endpoint, autoDelete property of the endpoint or the connector is being ignored, behaving as if it were false.",Bug,Major,Closed,"2015-11-23 20:04:59","2015-11-23 20:04:59",0
Mule,"Transformed value is lost when transformed value datatype does not match the expected one","After applying a transformation, the TransformationService checks whether or not the resulting value is of the expected type and if it does not match, then it must throw an exception.  The problem is that, as the message is immutable, in cases when the payload is consumable both the original and the transformed values will be lost.  As the transformation service throws an exception, that is the only place where a message containing the new payload can be placed.",Bug,Major,Closed,"2015-11-23 12:37:01","2015-11-23 12:37:01",8
Mule,"Create new Transformation Service","Create new Transformation Service.    This issue should be updated and split into different stories once these improvements have been analyzed.",Story,Major,Done,"2015-11-23 12:30:23","2015-11-23 12:30:23",32
Mule,"host header expected even for HTTP 1.0 clients","A minimal HTTP 1.0 request that doesn't include the Host header makes the listener to throw a 500 HTTP response status, triggering the issue. The Host header should be mandatory only in HTTP 1.1.    Also, 1.1 clients omitting the host header should receive a 400 status instead of the 500 that is being sent.",Bug,Minor,Closed,"2015-11-20 21:44:33","2015-11-20 21:44:33",0
Mule,"Revamp poll message source","We need to review current poll message source implementation:   - clean up code   - review poll threading logic. Ideally start using a centralized service.   - review notifications   - use MessageProcessingManager to standarise exception handling   - improve notifications   - decouple frequence from poll element?  - rename to trigger and make so that it's no longer a scope  - Should have a retry policy so that it stops polling after certain conditions or delays the polls accordingly","Enhancement Request",Blocker,Closed,"2015-11-20 20:52:13","2015-11-20 20:52:13",16
Mule,"Fix flaky DeploymentServiceTestCase","Fix flaky test redeployModifiedDomainAndRedeployFailedApps in DeploymentServiceTestCase.",Task,Minor,Done,"2015-11-20 17:27:43","2015-11-20 17:27:43",0
Mule,"Cleanup transport infrastructure","1.3.1 - Cleanup transport infrastructure",Task,Critical,Done,"2015-11-19 15:05:13","2015-11-19 15:05:13",21
Mule,"Define future of tomcat module"," Define future of tomcat module",Task,Blocker,Done,"2015-11-19 15:03:58","2015-11-19 15:03:58",0
Mule,"Discuss managment support for extensions and JMX support","Discuss managment support for extensins and JMX support",Task,Blocker,Done,"2015-11-19 15:01:22","2015-11-19 15:01:22",0
Mule,"Remove management module","1.2.24 Remove management module",Task,Minor,Done,"2015-11-19 15:00:50","2015-11-19 15:00:50",4
Mule,"Remove devkit-support module ","Remove module from the Mule 4 project",Task,Major,Done,"2015-11-19 14:59:46","2015-11-19 14:59:46",2
Mule,"Remove annotations module","1.2.18 Clean up annotaitons module",Task,Major,Done,"2015-11-19 14:56:58","2015-11-19 14:56:58",3
Mule,"Remove JMS transport","1.2.17 Remove JMS transport",Task,Blocker,Done,"2015-11-19 14:56:35","2015-11-19 14:56:35",8
Mule,"Remove TCP transport","1.2.13 Remove TCP transport",Task,Blocker,Done,"2015-11-19 14:55:15","2015-11-19 14:55:15",5
Mule,"Remove SSL transport","1.2.14 Remove SSL transport",Task,Blocker,Done,"2015-11-19 14:54:18","2015-11-19 14:54:18",5
Mule,"Remove VM transport","Remove VM transport    - All test cases testing VM must be removed  - All test cases  that are using VM as a mean for testing something else should be migrated to use something else whenever possible. PK created some infrastructure to replace VM usage like FunctionalTestCase.runFlow and <test:queue> component. ( see DatasourcePoolingLimitTestCase)  - When is not possible to replace VM a new task should be created to cover that scenario when we have the required connectors/features to be able to test it. Add the test cases class names so we can use them as input for re-creating the test cases). Use issue https://www.mulesoft.org/jira/browse/MULE-9307",Task,Major,Done,"2015-11-19 14:48:15","2015-11-19 14:48:15",21
Mule,"Allow SDK to generate Studio support","Allow the new SDK to optionally generate Studio editors and update site. On a first pass we only require functionality similar to that provided by Devkit. We'll iterate more in the future","Enhancement Request",Critical,Closed,"2015-11-18 18:13:12","2015-11-18 18:13:12",13
Mule,"Add the concept of Message Sources in the Ext-Api","Allow the Ext-Api and the Ext-Framework to define and implement message sources","Enhancement Request",Critical,Closed,"2015-11-18 17:58:00","2015-11-18 17:58:00",13
Mule,"Properly dispose connections and connectionProvider on ConnectionManager#unbind()","The ConnectionManager introduced in MULE-8952 has the concept of binding a config to a connectionProvider. When that binding is broken through the unbind() method, the connections are closed. However, before doing that we must:    * Wait for all connections to be released before closing them  * Once all connection have been closed, apply shutdown lifecycle over the provider if necessary","Enhancement Request",Major,Open,"2015-11-18 17:22:56","2015-11-18 17:22:56",8
Mule,"Errors on Extension code cannot be shown properly","When building an extension, the errors should show exactly the line of code and java element (method, parameter, field, annotation, annotation field or others) that has the error.    Currently we just show a plain text message.  ","Enhancement Request",Critical,Closed,"2015-11-18 16:51:42","2015-11-18 16:51:42",0
Mule,"Add missing model validators","The following ModelValidators are missing and should be added:    * Validate that all configuration models can be used with all operation models. This comes to the fact that an operation can require a connection type for which the available connection providers might be incompatible with certain configs (Moved to MULE-9214)  * Validate that no parameters, configs nor operations are named as any of the following reserved words: name, config, configRef, connection.  * Validate clashes on @ParameterGroup fields  * Move some validations currently in ImmutableParameterGroup to validators  * Validate that all connection providers have different names. Hint the user into using the @Alias annotation to customize the provider's names.  ","Enhancement Request",Major,Closed,"2015-11-18 16:07:35","2015-11-18 16:07:35",5
Mule,"Spike: Remove MuleEvent dependency on MuleContext if possible.",.,Task,Major,Done,"2015-11-18 15:52:04","2015-11-18 15:52:04",8
Mule,"Remove RC4 cipher suites from tls-default.conf","As per https://tools.ietf.org/html/rfc7465 we should remove this cipher suites from our suggested ones.",Task,Critical,Done,"2015-11-17 21:06:29","2015-11-17 21:06:29",3
Mule,"WebService Consumer: xsd:import for external resources through HTTP fails with java.io.FileNotFoundException","WS consumer can't handle imported or included wsdl/xsd files when they are located externally.",Bug,Major,Closed,"2015-11-17 20:58:10","2015-11-17 20:58:10",5
Mule,"Cleanup MuleSession","Cleanup MuleSession, moving anything that can be moved to compatibility module and ensure it's not exposed as part of mule-api.",Story,Critical,Done,"2015-11-17 18:22:44","2015-11-17 18:22:44",8
Mule,"Add HTTP (transport/module) tests of empty headers","We need to add tests on empty headers to ensure all HTTP components behave the same way.",Task,Minor,Done,"2015-11-16 19:49:28","2015-11-16 19:49:28",0
Mule,"set-property throws runtime exception if the propertyName is empty","When using set-property, if the propertyName is empty, the schema consider it as a valid value, but every attept to use it throws a java.lang.StringIndexOutOfBoundsException. As a side effect, this also makes the request fail if the set-property is in a flow which contains an http:listener element.    The solution IMHO would be changing the mule.xsd schema and adding a minLength value to the set-property element.    How to reproduce:  - Use the following mule-config. The deployment of the app will be successful.      When making a request, the config produces the following exception, and the response *never comes back*.      ",Bug,Minor,Closed,"2015-11-16 18:24:46","2015-11-16 18:24:46",1
Mule,"IndexOutOfBoundsException when header key has empty value","When an empty header is sent to a Jetty endpoint, it fails with said exception.",Bug,Major,Closed,"2015-11-16 18:24:33","2015-11-16 18:24:33",5
Mule,"Dropping new domain.zip file does not redeploy apps associated with that domain","Dropping a new domain.zip for an existing domain does not trigger application redeployment.  To reproduce:  1) Start Mule  2) Drop domain zip in <MULE_HOME>/domains  3) Drop app zip (dependant on the domain) in <MULE_HOME>/apps  4) Drop a new version of the domain zip    The domain will be redeployed, but the application is not seeing the changes in the domain.",Bug,Major,Closed,"2015-11-16 15:24:56","2015-11-16 15:24:56",0
Mule,"RandomAccessFileQueueStore leak files and space after being disposed","When a RandomAccessFileQueueStore is disposed, the contents of the queue files are cleared but the files themselves are recreated, causing them to accumulate.    Additionally, the CRL file is never clearer not deleted, causing a disk space leak which although small, adds up and can become significant",Bug,Major,Closed,"2015-11-16 14:40:46","2015-11-16 14:40:46",0
Mule,"Update commons-collections version","The Apache commons-collections library (4.0, 3.2.1 and older) has a vulnerability in the InvokerTransformer object where serializable collections are allowed to execute arbitrary Java code, whenever the library is in the classpath.    If we have an endpoint that receives a serializable object, that object can invoke arbitrary Java code at the moment we try to deserialize it.    We should upgrade to the fixed version (3.2.2) as soon as it's available or remove the class from our classpath.  ",Task,Blocker,Done,"2015-11-16 13:28:29","2015-11-16 13:28:29",3
Mule,"Fix flaky InstanceLockGroupTestCase","This is a flaky that was ignored.",Task,Minor,Done,"2015-11-13 17:34:12","2015-11-13 17:34:12",0
Mule,"HTTP Listener accepting invalid content-type without body and returning 500 with body","When an invalid Content-Type is sent on a request to the HTTP listener, it is only rejected if the request has a body and with a 500 instead of a 400. If there is no body, the request goes through and (if the Content-Type is not removed or changed) fails trying to create the HTTP response. We should reject such requests with a 400, just like in MULE-9044.",Bug,Major,Closed,"2015-11-13 13:13:32","2015-11-13 13:13:32",0
Mule,"ForEach fails to provide path elements when not initialised ","When trying to call the method: addMessageProcessorPathElements  In a ForEach object that has not been init the method fails with:        The reason for it is that, foreach is expecting to be initialised at this time, thus having at least 3 MP.         When not init the for each only contains those MP defined in the XML with out the splitter and the filter. So in the event the for each only contains 1 mp it fails.     The class ForEach should validate the size of the list, or at least know if it has been init in order not to fail.         ",Bug,Critical,Closed,"2015-11-12 20:26:50","2015-11-12 20:26:50",0
Mule,"Jersey module doesn't support multipart requests","When trying to use a multipart request against a Jersey component it fails to start Mule with this error:      This is happening because multipart is not registered as valid type.",Bug,Critical,Closed,"2015-11-11 20:41:49","2015-11-11 20:41:49",0
Mule,"Review pooling profile and pooling mechanism","Review if we want to keep using apache as a pooling library and if we can simplify the pooling profile concept",Task,Blocker,Done,"2015-11-10 14:28:51","2015-11-10 14:28:51",13
Mule,"HTTP Listener not sending reason phrase when error occurs","When an error occurs handling a request, the HTTP listener responds with a 400/500 but since no reason phrase is set it sends the default OK which is confusing.",Bug,Minor,Closed,"2015-11-09 12:53:45","2015-11-09 12:53:45",0
Mule,"HTTP Listener returning 500 instead of 400 on invalid Content-Type","When an error occurs handling a request, the listener returns a 400/500 but since the error is not logged, there's no way of knowing what went wrong. This happens for example when sending a request with an invalid Content-Type header, when additionally a 500 instead a 400 is sent.",Bug,Major,Closed,"2015-11-09 12:49:47","2015-11-09 12:49:47",0
Mule,"Keep property with original remote address even if X-Forwarded-For present","The HTTP module allows clients to spoof the remote address by setting whatever value in the X-Forwarded-For header.    For instance, if one makes this request:      Then the inbound properties show this:      This allows any client to forge a fake remote address.    Note:  This behaviour is intentional, as per this commit:  https://github.com/mulesoft/mule/commit/6421194922b0644687e68a57d753b8eb4bae3db6    However this poses the security issue described above.    The solution would be: http.remote.address is always the immediate IP (proxy or not). If the X-Forwarded-For header is present, an inbound property will be included in the message with its value.","Enhancement Request",Major,Closed,"2015-11-06 18:34:10","2015-11-06 18:34:10",0
Mule,"Build Mule 3.7.3 final binaries","Build Mule 3.7.3 final binaries",Task,Critical,Done,"2015-11-05 16:15:38","2015-11-05 16:15:38",3
Mule,"Add extensions parent pom to script for deploying to maven central repo","Currently buildtools/scripts/DeployArtifacts.groovy doesn't deploy org.mule.extensions:mule-extensions, we need it because is the parent for all modules created by extensions-api",Task,Critical,Done,"2015-06-30 19:19:33","2015-06-30 18:19:33",5
Mule,"Upgrade BouncyCastle libraries to version 1.54 or newer","We should consider upgrading BouncyCastle to version 1.54 to leverage the latest bugfixes.  This is a security related library and we should always use the latest stable version.","Enhancement Request",Critical,Closed,"2015-11-02 15:29:03","2015-11-02 15:29:03",5
Mule,"Changes on domain are not being registered by applications","When updating a domain config that causes a redeploy, the related apps do not see the new changes in the domain.",Bug,Critical,Closed,"2015-10-27 15:04:36","2015-10-27 15:04:36",0
Mule,"Upgrade BouncyCastle libraries to latest version","We need to upgrade BouncyCastle libraries to latest artifacts and versions as follows:    | *Artifact* | *Version* | *New artifact* | *New version* |  | bcmail-jdk16 | 1.46 | bcmail-jdk15on | 1.46 |  | bcpg-jdk16 | 1.46 | bcpg-jdk15on | 1.50 |  | bcprov-ext-jdk16 | 1.46 | bcprov-ext-jdk15on | 1.50 |  | bcprov-jdk16 | 1.46 | bcprov-jdk15on | 1.50 |  | bctsp-jdk16 | 1.46 | bctsp-jdk15on | 1.46 |",Task,Critical,Done,"2015-10-22 22:00:54","2015-10-22 21:00:54",0
Mule,"Upgrade Apache Geronimo libraries to latest versions","Upgrade Apache Geronimo libraries to latest versions    | *Artifact* | *Current* | *New* |  | geronimo-j2ee-connector_1.5_spec | 1.1 | 2.0.0 |  | geronimo-jms_1.1_spec | 1.1 | 1.1.1 |  | geronimo-jaxrpc_1.1_spec | 1.1 | 2.1 |",Task,Critical,Done,"2015-10-22 20:28:33","2015-10-22 19:28:33",0
Mule,"Processing XLSX files that have comments in mule fails","The failure is a NPE caused by the fact that XmlBeans.NO_TYPE is null. Issue is a wrong use of BuiltinSchemaTypeSystem in mule-common.",Bug,Major,Closed,"2015-10-21 19:12:27","2015-10-21 18:12:27",0
Mule,"Include the name of the xml file where an element is declared when logging the element path","Currently, only the mule path and the application name are being logged when logging the path of an element as part of an exception message.    For large applications composed of many files, the name of the xml file will be helpful to better find the component where the exception happened.","Enhancement Request",Major,Closed,"2015-10-16 16:00:05","2015-10-16 15:00:05",3
Mule,"Expand Flowstack functionality","The list of processors that were executed as part of a message should contain all processors executed, for all flows, so that it can be queried even after the message processing finished.","Enhancement Request",Major,Closed,"2015-10-16 15:42:31","2015-10-16 14:42:31",5
Mule,"[FIX INCLUDED] MimeType is not set in DataTypeFactory","[FIX INCLUDED]     Steps to reproduce:  Have a custom transformer which converts List<ABC> to List<XYZ>  List<ABC> will have type as java.util.List, itemType as ABC and mime as application/abc  List<XYZ> will have type as java.util.List, itemType as XYZ and mime as application/xyz    Because of the below bug None of the Collection based transformers are invoked because of the mime set to MimeTypes.ANY    I am giving the fix below and i have tested that.    MimeType is not set in DataTypeFactory.getObjectMimeType Line number 128.    Existing code:  if (value instanceof MuleMessage)          {              MuleMessage mm = (MuleMessage) value;              mm.getDataType().getMimeType();          }    Fixed code:  if (value instanceof MuleMessage)          {              MuleMessage mm = (MuleMessage) value;              mime = mm.getDataType().getMimeType();          }",Bug,Major,Closed,"2015-10-16 07:35:13","2015-10-16 06:35:13",0
Mule,"When logging a payload as part of an exception message, show its content rather than its class","When logging an exception, unless the payload is consumable, its content should be logged instead of just its class name so the developer can have a better understanding what caused the exception.","Enhancement Request",Major,Closed,"2015-10-06 18:44:17","2015-10-06 17:44:17",0
Mule,"Improve truncated stack trace in exception log","The 3-line truncated stacktrace should show only mule code entries, in order to provide useful context about the exception.","Enhancement Request",Minor,Closed,"2015-10-06 18:02:59","2015-10-06 17:02:59",0
Mule,"Logging of message reception is written to domain log instead of app log when sharing jms connector","When I run the project (in standalone server), the first log messages are routed to the application log file (as expected).     The are created by thread [ActiveMQ Session Task-1]    After some (short) time, the log message are routed to the log file of the domain (not expected).     In the domain log file I have never seen a log message from Task-1, only from Task-2 to Task-5.    This bug looks like MULE-7383, but this one affects jms instead of http. ",Bug,"To be reviewed",Closed,"2015-10-02 15:10:22","2015-10-02 14:10:22",0
Mule,"Allow insecure HTTPS connections","It is now impossible to disable all certificate validations in HTTPS, which would be useful for QA and early development scenarios. Though -Dcom.ning.http.client.AsyncHttpClientConfig.acceptAnyCertificate=true is intended for this, we are always adding our own default TlsContext when the protocol is HTTPS and thus bypassing that AHC logic.","Enhancement Request",Major,Closed,"2015-09-22 18:56:49","2015-09-22 17:56:49",8
Mule,"XPath expression right after blocking http request can't access the http response payload","When running the given mule app, the xpath expression should be able to access the payload returned by the remote http call.    On non-blocking requests this doesn't happen because the non-blocking handling method calls       which correctly sets the environment that the XPath evaluator uses.    This can be worked around just by adding a logger right after the http request.",Bug,Major,Closed,"2015-09-21 14:31:24","2015-09-21 13:31:24",0
Mule,"MEL: Concurrent use of a function variable fails","There seems to be a concurrency issue with either MVEL or MEL.    Error given:      Steps to reproduce:  1. Run the application in configuration:  2. Do a request to http://localhost:8888/meltest  3. It should work.  4. Now run it with concurrency (i.e.: with jmeter). 5 simultaneus threads should be enough.  ",Bug,Major,Closed,"2015-09-18 17:41:34","2015-09-18 16:41:34",0
Mule,"Use java.util.Base64 for encoding/decoding instead of custom code","Java 8 provides a Base64 encoder/decoder (java.util.Base64) that outperforms mule's current implementation avg. execution time by 18%.    Apart for the performance gain ,we would also be relying on a standard implementation rather than a custom one.",Task,Major,Done,"2015-09-17 20:52:02","2015-09-17 19:52:02",8
Mule,"SFTP connection leak when the user doesn't have permissions","When the user has no access to a file inside the folder being polled, an exception is thrown but the client used to retrieve the file is not released. This causes a connection leak (or a deadlock when using a connection pool).   Additionally, the exception is not logged in 3.7.1.",Bug,Critical,Closed,"2015-09-17 15:30:36","2015-09-17 14:30:36",0
Mule,"Extensions API should know the Mule API","Ext-Api should not depend on mule-core. However, now that 4.x will contain a mule-api jar, it makes no sense to shield the ext-api from concepts like the MuleEvent.     However, ext-api is advancing faster than the mule-api which is not available yet. For that reason, components such as the ExtensionsManager or the ConfigurationProvider receive the MuleEvent as simply an Object and then cast it on the implementation.    When the mule-api becomes available with a well defined MuleEvent, those Objects should be actually typed as MuleEvent.    Although this issue uses the MuleEvent as an example, the extent of this goes beyond it and included LIfecycle, MuleMessage, etc.    TODO:  - Update MetadataResolvingException to extend MuleException  ",Bug,Blocker,Closed,"2015-09-16 16:43:34","2015-09-16 15:43:34",3
Mule,"Exceptions in scatter-gather routes are difficult to find","When an exception happens in a route of a scatter-gather, a composite exception is created and thrown. Even if this composite has the actual exceptions of the route(s) inside of it, they are not being sent to the log by default (only logged at DEBUG level). For troubleshooting purposes, it would make sense to have at least the original exception message logged at the ERROR level.    Also, when the exception in the route is not a MuleException (i.e.: a MEL exception), it is swallowed and not even an empty composite exception is thrown. (MULE-7975)","Enhancement Request",Major,Closed,"2015-09-16 16:11:08","2015-09-16 15:11:08",0
Mule,"Release MVEL 2.1.9-MULE-008","Perform a release of MVEL that contains the fix for MULE-8831    # Update pom.xml to meet Maven Central repository requirements  # Update build plan to deploy to Maven Central  # Sign the jar using gpg  # Add javadoc plugin for releases ",Task,Major,Done,"2015-09-14 17:49:09","2015-09-14 16:49:09",5
Mule,"The 'protocol' attr in an http:request-config element does not support '${propertyname}' as value","When using the http:request-config element in the flow.xml, the 'protocol' attr only supports HTTPS or HTTP, it does not support a property placeholder like:        Not only Studio complains of this issue, but also mule does when you start the application.","Enhancement Request",Minor,Closed,"2015-09-11 19:48:00","2015-09-11 18:48:00",3
Mule,"MEL: Concat expression with an empty term throws obscure error","When evaluating a MEL expression that happens to be invalid, the error message shows what was the expression that caused the error.    However, for some invalid expressions (i.e:     ) only the message not an statement is logged, with no indication of what was the expression.    On non-trivial applications, this makes it very difficult to find the source of the error.  ",Bug,Minor,Closed,"2015-09-08 20:30:06","2015-09-08 19:30:06",0
Mule,"Change release profile in EE with a new distributions profile","Change release profile with distribution profile in EE to avoid the need to use the property skipDistributions=false when we wanted to build the artifacts of EE (there we use the plugins included in the profile release of CE but we didn't want to build the distributions).  *UPDATE*: After the changes: * -Prelease: you can use the -Prelease which will activate the profile release of CE without adding the distribiutions module of EE * -Pdistributions: will only add the distributions module in EE * -DbuildDistributions=true : will activate the release and distributions profile mentioned before. ",Task,Minor,Done,"2015-09-02 22:18:32","2015-09-02 21:18:32",0
Mule,"Proxy validation looses XML tag when payload is body","When the body tag is immediately followed by another opening tag, said tag is lost and the resulting message is incomplete. This seems to be caused by the StartBodyInterceptor which consumes it and since the ReversibleXMLStreamReader is added after it, that event is not captured.",Bug,Major,Closed,"2015-09-07 14:49:13","2015-09-07 13:49:13",0
Mule,"Have to manually encode @ (or other special characters) when setting the username/password for an smtp sender","See: MULE-6279 and MULE-6139",Bug,Major,Closed,"2015-09-03 18:35:43","2015-09-03 17:35:43",0
Mule,"Enricher broken when target expression references a key inside a map","Enriching message properties which are maps like    does not work on 3.7.x branch.  Expected behaviour is that after the enricher, product property contains both 'style' and 'items' keys, but the map is replaced with the 'items'  value    ",Bug,Major,Closed,"2015-09-03 13:47:24","2015-09-03 12:47:24",0
Mule,"mule-maven-plugin CloudHub deployment does not check for file existence","When you try to deploy a Mule application through a ZIP file, the Maven plugin does not check if the file actually exists.  If it is an unexistent file, the deployment process starts anyway and the application is created in CloudHub using the name of the given unexistent file.  The build fails because it can't deploy the application but the changes in CloudHub are already done and they're not rolled back.    The expected behavior is that the plugin checks if the file exists before making any change in CloudHub. If not, it should throw an exception and fail the build.",Bug,Blocker,Closed,"2015-09-02 18:54:51","2015-09-02 17:54:51",1
Mule,"JMS transformer is selected even when not using JMS","Even when JMS is not being used JMS transformer is selected.",Bug,Critical,Closed,"2015-09-02 16:05:29","2015-09-02 15:05:29",0
Mule,"Unclear message when more than one transformer is available","When Mule finds more than one transformer flow execution fails. In this case we should show more information about the problem to the user, like why those transformers where selected and what to do to solve the problem.",Bug,Critical,Closed,"2015-09-02 16:04:07","2015-09-02 15:04:07",2
Mule,"Add Visibility on which transformers are selected","Right now users don't have visibility on which transformers are selected when the user don't specify one. To troubleshoot this the user has no other option than debug Mule code.  Solution could be to log with debug level which transformers are selected and why.",Task,Critical,Done,"2015-09-02 16:00:47","2015-09-02 15:00:47",0
Mule,"Implement connection validation policy on Ext-Api","Create a mechanism so that connections can be validated to still be functional. Notice that this is not design time connection testing but runtime validation of a connection being usable. If the validation fails, then the reconnection workflow should be triggered","Enhancement Request",Critical,Closed,"2015-08-31 18:58:20","2015-08-31 17:58:20",8
Mule,"Implement Reconnection on the Ext-Api","Implement Reconnection on the Ext-Api","Enhancement Request",Critical,Closed,"2015-08-31 18:36:41","2015-08-31 17:36:41",8
Mule,"Add the concept of ExceptionEnricher in Ext-Api","Add the concept of an ExceptionEnricher in the ext-api which gets invoked whenever an operation throws an exception. This is useful to avoid repetitive try..catch blocks.    It would be defined by an interface roughly looking like this        Then you can declare it at an Extension level:        Or at a configuration level:        A simple implementation would look similar to this:    ","Enhancement Request",Critical,Closed,"2015-08-31 18:35:25","2015-08-31 17:35:25",8
Mule,"mule-maven-plugin CloudHub redeployment configuration loss","When you use the Maven plugin to redeploy an application with the redeploy=true flag, the existing application gets deleted before the updated application is deployed.  This behavior causes all CloudHub configured properties to be lost, and the plugin currently supports only a few of the configurations to be set on the POM file.  CloudHub configurations such as Properties, Insight and Logging need to be reconfigured every time the application is deployed.    Ideally, we should be able to specify all configurations so they can be updated through the POM file, or the Maven plugin should redeploy without deleting the existing application so we don't lose the configuration.",Bug,Critical,Closed,"2015-08-31 17:05:11","2015-08-31 16:05:11",3
Mule,"Upgrade async-http-client to 1.9.31.","Once it is available, we should upgrade to that version to fix MULE-8282 and MULE-8829.",Task,Major,Done,"2015-08-28 15:56:06","2015-08-28 14:56:06",0
Mule,"Update Groovy to version 2.4.4","There is a new vulnerability detected on Groovy (CVE-2015-3253) which is fixed on 2.4.4 version. Need to update to it","Enhancement Request",Critical,Closed,"2015-08-27 17:42:41","2015-08-27 16:42:41",0
Mule,"mule-maven-plugin CloudHub deployment rollback not working properly","Consider the following scenario:    1. You have application A & application B deployed on your CloudHub environment  2. You use the Maven plugin to redeploy app A & B.  3. App A deploys successfully but app B fails because the file doesn't exist or because of a connection issue.    Current behavior:   - App A will be rolled back and deleted from CloudHub (even though it existed previously)  - App B will remain on CloudHub with Undeployed status.    Expected behavior:  A better solution would be to leave App A as it is, since it deployed correctly, and roll back deployment of App B which failed.  ",Bug,Critical,Closed,"2015-08-26 22:15:00","2015-08-26 21:15:00",0
Mule,"mule-maven-plugin CloudHub deployment fails when domain is already in use","When trying to deploy an application to CloudHub, deployment fails if the domain is already in use.    Plugin should validate that the domain is free before trying to deploy the application.",Bug,Blocker,Closed,"2015-08-26 16:49:32","2015-08-26 15:49:32",1
Mule,"Review the test related artefacts included in the distribution","Right now we are adding the mule-tests-functional jar to our distribution, as well as mule-core and extensions-support* test jars, to name a few. We need to review this and decide if this makes sense or not.   *The extensions-support test jar could be removed if the methods used by ExtensionsFunctionalTestCase were part of mule-tests-functional.",Task,"To be reviewed",Done,"2015-08-25 20:10:13","2015-08-25 19:10:13",4
Mule,"Create a TimeSupplier based scheduler/executor","In MULE-8869, the concept of application wide TimeSupplier was introduced. However, we also need to modify existing Mule components to depend on the configured supplier instead of pulling the system time directly.     For that we need to:    * Modify the poll schedulers to use this time  * Create a replacement for Executors.newSingleThreadScheduledExecutor which uses the TimeSupplier","Enhancement Request",Major,Open,"2015-08-25 15:55:10","2015-08-25 14:55:10",8
Mule,"Remove spring-extras module","Remove spring-extras module from codebase and distributions",Task,Major,Done,"2015-08-25 13:55:27","2015-08-25 12:55:27",2
Mule,"Migrate Oauth module to extensions API","Replace current oauth module with a version developed with extensions API",Task,Blocker,Done,"2015-08-25 13:53:21","2015-08-25 12:53:21",8
Mule,"[Spike] Migrate Http Connector to extensions API","Replace current HTTP connector with a version developed using extensions API","Enhancement Request",Major,Closed,"2015-08-25 13:46:15","2015-08-25 12:46:15",13
Mule,"Remove client module","Remove client module from codebase and distributions",Task,Minor,Done,"2015-08-25 13:41:56","2015-08-25 12:41:56",1
Mule,"Remove builders module","Remove builders module from codebase and distributions",Task,Major,Done,"2015-08-25 13:37:18","2015-08-25 12:37:18",1
Mule,"Exceptions are wrapped in extensions API","There's a problem when throwing certain exceptions. I was invoking a non existent method in the operation of an extension, expecting the NoSuchMethodException to be wrapped by a MessagingException. The result was a MessagingException wrapping a UndeclaredThrowableException that then contained my exception. I tracked it down to the rethrowRuntimeException method in class org.springframework.util.ReflectionUtils:   public static void rethrowRuntimeException(Throwable ex) {    if (ex instanceof RuntimeException) {     throw (RuntimeException) ex;    }    if (ex instanceof Error) {     throw (Error) ex;    }    throw new UndeclaredThrowableException(ex);   }  So it seems this involves all exceptions that are not RuntimeException or Error.",Bug,Blocker,Closed,"2015-08-24 14:56:53","2015-08-24 13:56:53",1
Mule,"until-successful should propagate the root exception","Currently until-successful does not propagate the root cause of the exception to the outside of the scope. There's a workaround written by John DEmic, it just needs to be merged to the core:  https://gist.github.com/<USER>5670325  ","Enhancement Request",Major,Closed,"2015-08-14 21:14:05","2015-08-14 20:14:05",0
Mule,"Improve usability to manage cookies in the HTTP listener","Currently, the only way to handle cookies in the HTTP listener is through the Set-Cookie and Cookie headers (reading and setting them manually). Improve the usability so that the user doesn't have to manually parse a cookie sent by the client, or know how to create a Set-Cookie header. (Probably by adding come cookie object as the old http transport had, and adding some new syntax to the response-builder element in the config).","Enhancement Request",Major,Open,"2015-08-13 22:06:11","2015-08-13 21:06:11",13
Mule,"Fix ext-api version in 3.x","Further development of the ext-api will continue on the Mule 4 branch and thus the version of it should be fix for 3.x",Task,Major,Done,"2015-08-12 16:16:23","2015-08-12 15:16:23",1
Mule,"Require jdk8","Make jdk8 required and set the compilation level to 1.8",Task,Major,Done,"2015-08-12 16:02:42","2015-08-12 15:02:42",1
Mule,"NTLM proxy authentication in HTTP Requester sends basic authentication","When a NTLM proxy is set up, the actual authentication done is Basic. This is a problem in the Grizzly provider of async-http-client.",Bug,Critical,Closed,"2015-08-11 15:40:43","2015-08-11 14:40:43",0
Mule,"Tests for HTTP connector in HttpSecurityFilterFunctionalTestCase depend on tests executed one the HTTP transport","org.mule.module.cxf.HttpSecurityFilterFunctionalTestCase is executed on flows using HTTP transport and HTTP connector.  All test pass under the current configuration as the HTTP transport tests are executed before the HTTP connector's.   Running the connector test only or switching the order breaks the following tests:  * testAuthenticationAuthorisedGetHttps  * testAuthenticationAuthorisedPostHttps  * testAuthenticationFailureBadCredentialsGetHttps  * testAuthenticationFailureBadCredentialsPostHttps",Bug,Minor,Closed,"2015-08-06 19:29:03","2015-08-06 18:29:03",5
Mule,"Unable to deploy Application in Mule 3.7.0","Nowadays, if you want to create a proxy, you have to specify the port name and the soapVersion for each binding. This information is provided by the wsdl, so it shouldn't be required, the proxies should detect them automatically.    As a consequence, if you have an API with multiple ports, one of them receiving a SOAP 1.1 envelope, and other one receiving a SOAP 1.2 envelope, and if you don't specify the port and the soapVersion in both proxies (service and client) you will not be able to send a SOAP 1.2 message.     This means that a simple proxy cannot be used with both types of SOAP versions.  ",Bug,Critical,Closed,"2015-08-05 18:05:19","2015-08-05 17:05:19",8
Mule,"OAuth2 Refresh token logic fails after restart for preexistent connection","This issue is related to the problem encountered in JIRA MULE-8277.    After restarting an application that uses the Box Connector, the first time a box request is made with a preexisting Box connection, that has an expired access token in its OAuthState, a refresh token process is triggered that does not attempt to save the refresh and access token obtained from box in the connector's ObjectStore.    The Box connector postAuthorize method invokes one of the connector's processors in order to retrieve the id of the user after the OAuth2 dance for identification purposes. That request within the postAuthorize triggers the first refresh token process for the connector on its first use after restart.    The way to reproduce the issue would be:  - Run a mule application on mule 3.6.2 with the Box Connector and a persistent Objectstore for it  - Do the OAuth dance with a Box user using the authorize MessageProcessor.  - Wait until the Box access token expires or modify it in the OAuthState saved in the Objectstore to make it invalid  - Restart the mule application and attempt to run a Box MessageProcessor like <box:get-user /> twice. (The first attempt should refresh but not save and the second should fail to refresh)",Bug,Critical,Closed,"2015-08-05 00:55:32","2015-08-04 23:55:32",5
Mule,"Concurrent calls to the OAuth2 authorize MessageProcessor fail when passing different values for accessTokenUrl","When the authorize MessageProcessor is invoked by 2 different users at the same time and each of those invocations is done with a different value for the accessTokenUrl, the access token request for one of them is made to the wrong url.    I am using the salesforce connector v6.2.1 and this is how my authorize call looks like:    <sfdc:authorize       display=#[flowVars['display']]       authorizationUrl=#[flowVars['salesForceUrl'] + '/authorize']       accessTokenUrl=#[flowVars['salesForceUrl'] + '/token']       config-ref=sfdcConnectorConfig       state=#[payload]       accessTokenId=#[flowVars['remoteUserId']] />    The flowVar salesforceUrl can take 2 possible values, which are:  https://login.salesforce.com (Salesforce Production)  https://test.salesforce.com (Salesforce Sandbox)    When a user does the OAuth dance to login.salesforce.com at the same time another user does the OAuth dance to test.salesforce.com, one of the dances fail.    ------------------------------------------------------------------------------------------    I believe the problem can be found in the way the accessTokenUrl is retrieved and saved by these 2 processors (in mule-devkit-support):  - org.mule.security.oauth.processor.BaseOAuth2AuthorizeMessageProcessor<T>  - org.mule.security.oauth.processor.OAuth2FetchAccessTokenMessageProcessor    The BaseOAuth2AuthorizeMessageProcessor<T> (line 81) saves the accessTokenUrl value in the defaultUnauthorizedConnector object of the OAuth2Manager.  The OAuth2FetchAccessTokenMessageProcessor (line 57) obtains an OAuth2Adapter (used to fetch the access token) from the OAuth2Manager. The OAuth2Manager creates the adapter setting the accessTokenUrl (line 256 BaseOAuth2Manager<T>) with the value taken from the defaultUnauthorizedConnector object.    https://github.com/mulesoft/mule/blob/mule-3.5.2/modules/devkit-support/src/main/java/org/mule/security/oauth/processor/BaseOAuth2AuthorizeMessageProcessor.java#L81    https://github.com/mulesoft/mule/blob/mule-3.5.2/modules/devkit-support/src/main/java/org/mule/security/oauth/processor/OAuth2FetchAccessTokenMessageProcessor.java#L57    https://github.com/mulesoft/mule/blob/mule-3.5.2/modules/devkit-support/src/main/java/org/mule/security/oauth/BaseOAuth2Manager.java#L256    The defaultUnauthorizedConnector of the OAuth2Manager is common to all events and threads. I believe that when 2 users are doing the oauth dance at the same time the accessTokenUrl value of the defaultUnauthorizedConnector is being overwritten by the second user before the first is able to fetch the access token.",Bug,Critical,Closed,"2015-08-04 20:47:14","2015-08-04 19:47:14",8
Mule,"Performance degradation on registry lookup","Because the mule registry was unified on Spring, lookup and get operations take longer to execute because spring checks for prototypes, etc.    We should add a cache to speed up lookups of things that we know are not prototypes",Bug,Critical,Closed,"2015-08-04 16:19:19","2015-08-04 15:19:19",5
Mule,"MVEL prints stacktraces to the console","A class in the mule-mvel library is printing the stack traces to the console when it fails to parse an expression. In this case is a XPath expression that tries to parse an xml form a string that is not an xml.    If this error is triggered in a ESB running in CentOS, the tanuki wrapper starts to consume increasingly more memory over time leading to a crash.    This simple flow can reproduce this error:      <flow name=flow>          <poll doc:name=Poll>              <fixed-frequency-scheduler frequency=100000000/>              <set-payload value=invalidxml doc:name=Set Payload/>          </poll>          <object-to-string-transformer doc:name=Object to String/>          <logger message=[ID: #[message.id]] Message: #[message] - Payload: #[payload] level=INFO doc:name=Logger/>          <message-properties-transformer scope=invocation doc:name=Evaluate Root Node>           <add-message-property key=event-name value=#[xpath(&quot;name(/*[1])&quot;)]/>          </message-properties-transformer>          <logger message=#[flowVars['event-name']] level=INFO doc:name=Logger/>      </flow>    In the Studio console you should see the printed stack traces in red.    The bug is in this line in this class:   https://github.com/mulesoft/mvel/blob/master/src/main/java/org/mule/mvel2/optimizers/impl/refl/ReflectiveAccessorOptimizer.java#L437",Bug,Critical,Closed,"2015-08-04 16:04:34","2015-08-04 15:04:34",0
Mule,"Cron job used by multiple Poll component in different projects misfiring","I have 2 different mule projects created, each containing different cron frequency and names.  When the first application is deployed the polling cron is registered, when we deploy the second application then the poller endpoint is registered  The problem is, when I un-deploy the first application with which the cron was registered, the second application poller stops working.  It's messing up the logging, both the projects have different log4j's , writing to different files. When the first app is deployed it logs fine, as soon as the second one is deployed you'd notice the logs of 2nd application appearing in the first one.  INFO 2015-07-23 15:31:52,009 : ------------------------------In for Polling_2 step1  INFO 2015-07-23 15:31:52,009 : ----------In for Polling_1 step2  INFO 2015-07-23 15:31:54,002 : ----------In for Polling_1 step1  INFO 2015-07-23 15:31:54,003 : ----------In for Polling_1 step2  INFO 2015-07-23 15:31:56,006 : ----------In for Polling_1 step1  INFO 2015-07-23 15:31:56,007 : ------------------------------In for Polling_2 step1  INFO 2015-07-23 15:31:56,008 : ----------In for Polling_1 step2  Steps to reproduce:  1 Import both the projects (pollproject1 & pollproject2) on standalone  2. deploye pollproject1.zip on ti the server   3. observe the logs mule-app-poll-1.log, cron should be working every 2 sec.   4. deploy the pollproject2.zip   5. observe the logs mule-app-poll-2.log, cron should be working every 4 sec.   6. undeploy the pollproject1 by deleting the pollproject2-anchor.txt file.   7. observe the logs mule-app-poll-2.log, the messages stop as well.",Bug,Major,Closed,"2015-08-03 23:35:02","2015-08-03 22:35:02",0
Mule,"Multipart Content-Type header is sent twice when copying attachments","Observed in the HttpListenerAttachmentsTestCase: attachments are copied so they already have a Content-Type header but when creating the multipart content this header is added again. Example:    POST /formDataPath HTTP/1.1  Content-Length: 213  Content-Type: multipart/form-data; boundary=3B0ItAx4ggGN72zKDerT2p0ninKyMiYijUm  Host: localhost:14106  Connection: Keep-Alive  User-Agent: Apache-HttpClient/4.3.5 (java 1.5)  Accept-Encoding: gzip,deflate    --3B0ItAx4ggGN72zKDerT2p0ninKyMiYijUm  Content-Disposition: form-data; name=field1  Content-Type: text/plain; charset=ISO-8859-1  Content-Transfer-Encoding: 8bit    yes  --3B0ItAx4ggGN72zKDerT2p0ninKyMiYijUm--  HTTP/1.1 200   Content-Length: 197  Content-Type: multipart/form-data; charset=UTF-8  Date: Mon, 03 Aug 2015 14:22:44 GMT    --null  Content-Type: text/plain; charset=ISO-8859-1  Content-Type: text/plain; charset=ISO-8859-1  Content-Transfer-Encoding: 8bit  Content-Disposition: form-data; name=field1    yes  --null--",Bug,Major,Closed,"2015-08-03 15:43:29","2015-08-03 14:43:29",0
Mule,"Multipart content is always sent chunked by listener","When responding with multipart content, the listener doesn't set any encoding headers (Content-Length, Transfer-Encoding). Grizzly ends up deciding to use chunked and it seems under those circumstances it never sends the 0 ending part.",Bug,Major,Closed,"2015-07-30 20:45:22","2015-07-30 19:45:22",0
Mule,"Multipart content should include Content-Disposition header","As per the RFC (https://tools.ietf.org/html/rfc7578#section-4.2) all parts should include the header Content-Disposition and the part name in it. Parts that represent a file should also contain the filename.  Example:   Content-Disposition: form-data; name=user; filename=user.txt    ",Bug,Major,Closed,"2015-07-23 20:52:53","2015-07-23 19:52:53",0
Mule,"Message mime type/encoding must be reset when payload is set without a datatype","DefaultMuleMessage#setPayload(Object) is maintaining previous mimeType/encoding   instead of cleaning it, this is causing issues as transformers read the payload value taking in account the mimeType, which won't match the payload that was set.",Bug,Blocker,Closed,"2015-07-23 15:27:25","2015-07-23 14:27:25",1
Mule,"Unnecessary tracking of overridden non disposable objects in TransientRegistry","When adding an object to the registry, if there is a previous object associated with the same key, it will be stored in a Set called lostObjects, this is so in order to be able to call its dispose logic when the application shuts down:  https://www.mulesoft.org/jira/browse/MULE-7293  However if the object is not Disposable storing this object won't be necessary, and it could eventually cause an OOM exception because these objects are never cleared.  The Registry should remove the previous entries if the stored object is not Disposable  ","Enhancement Request",Major,Closed,"2015-07-23 02:36:28","2015-07-23 01:36:28",0
Mule,"IOUtils#getResourceAsString is not closing streams","IOUtils#getResourceAsString opens a streams to load application's resources.  Those streams should be automatically closed after is consumed, but that is not the case and this causes a problem in Windows where the mentioned resources files are locked making the undeployment impossible.",Bug,Critical,Closed,"2015-07-23 00:52:22","2015-07-22 23:52:22",0
Mule,"ClassPathRegistryBootstrapDiscoverer is not closing resource streams","ClassPathRegistryBootstrapDiscoverer searches for all the application resources that are bootstrap.properties and opens a stream against each of them.  Each stream should be automatically closed after is consumed, but that is not the case and this causes a problem in Windows where the jars containing the bootstrap properties are locked making the redeployment impossible.",Bug,Critical,Closed,"2015-07-21 21:35:44","2015-07-21 20:35:44",0
Mule,"If multiples HTTP response headers are associated to the same header name, only the first one is mapped to an inbound property.","HTTP allows to map several header values to the same header name, when we map the HTTP response to a Mule message, headers are mapped to inbound properties, but only the first value for each header name is mapped, next values are discarded.",Bug,Critical,Closed,"2015-07-21 15:22:23","2015-07-21 14:22:23",0
Mule,"Polling message receiver should unregister scheduler on dispose.","When you stop a flow programmatically, if it has a polling message receiver, the scheduler is not stopped but it's recreated when it's programmatically re-started, so both schedulers remain active and events are duplicated. ",Bug,Major,Closed,"2015-07-21 01:51:26","2015-07-21 00:51:26",0
Mule,"Create App Control Compatibility tests for CE","Create automated tests to validate Mule Start, Stop, Restart, Deploy and related functionality for CE edition.",Task,Major,Done,"2015-07-16 21:08:04","2015-07-16 20:08:04",4
Mule,"Revisit DefaultExtensionManager implicit config test cases considering MULE-8741","Now that implicit configs are instantiated by DefaultImplicitConfigurationFactory related tests should be refactored and that class should have its own tests.",Task,"To be reviewed",Done,"2015-07-16 16:10:36","2015-07-16 15:10:36",5
Mule,"Hostname verification not working correctly with HTTPS proxy","When configuring the http requester with HTTPS and a proxy, hostname verification is done against the proxy instead of the real host. This makes the request fail, as the certificate doesn't contain the url of the proxy. The verification should be made against the host of the request.    This is a bug in AHC, it is fixed in AHC 1.9.27, so a possible solution to this is updating at least to this version.",Bug,Critical,Closed,"2015-07-14 19:05:11","2015-07-14 18:05:11",5
Mule,"Create the new object store ","Create the new object store.","Enhancement Request",Critical,Closed,"2015-07-10 15:41:38","2015-07-10 14:41:38",13
Mule,"Synchronous until successful should retry on the original message ","When an until successful component is configured to be synchronous, the retries are performed over the same event, so subsequent modifications are performed on the same event. Every retry should be performed over the original message.",Bug,Major,Closed,"2015-07-08 21:30:06","2015-07-08 20:30:06",0
Mule,"Loggers memory leak after fixing MULE-8635","Changes from MULE-8635 introduced a memory leak where MuleApplicationClassLoaders are not being disposed.  MULE-8635 added logic to clean up loggers, but seems that the logic is executed but the memory is not released.  To reproduce the issue:  _ Start a vainilla mule instance  _ Once default app is deployed force a redeploy touching the app's config file    Expected behaviour, according to the code, is that after 15 seconds the memory is released, but that does not happen.  ",Bug,Blocker,Closed,"2015-07-08 13:00:21","2015-07-08 12:00:21",8
Mule,"HTTP requester fails to send HTTPS request through a proxy","When using the new HTTP connector to send HTTPS requests through a proxy, there are some problems depending on the mule version. In 3.6.2, the request is sent correctly through the proxy, but query parameters are lost. In 3.6.x (3.6.3-SNAPSHOT), the request blocks (this started happening after the Grizzly update).   The fix for this is to also upgrade async-http-client (that fixes the original query parameter bug), and add test cases for this scenario.",Bug,Major,Closed,"2015-07-06 19:10:34","2015-07-06 18:10:34",0
Mule,"Broken link in BUILD.md","The contributing doc link in the build one is broken. It seems the name changed from CONTRIBUTE.md to CONTRIBUTING.md but it wasn't updated in BUILD.md.",Bug,Minor,Closed,"2015-07-04 00:34:42","2015-07-03 23:34:42",0
Mule,"Give the Extension model the concept of vendor","Currently Extension instances are matched by its getName() method. They should also include the concept of vendor and be used for matching purposes as well.  ","Enhancement Request",Critical,Closed,"2015-07-01 14:23:59","2015-07-01 13:23:59",5
Mule,"Mule registry failing to lookup sub-flows","When trying to do the following     ```  context.getRegistry().lookupObjects(SubflowMessageProcessorChainFactoryBean.class);  ```    Over a context that has been created with the following xml:  ```  <mule xmlns=http://www.mulesoft.org/schema/mule/core        xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance        xsi:schemaLocation=          http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd>          <sub-flow name=firstFlow>          <set-payload value=#['real_payload']/>      </sub-flow>    </mule>  ```    The method returns an empty collection.    When you do something like   ```  context.getRegistry.get(firstFlow)  ```    The bean is returned. It seems as if the problem is with the type lookup",Bug,Critical,Closed,"2015-06-26 20:38:03","2015-06-26 19:38:03",8
Mule,"Cannot build Mule ESB Maven Tools with Java 8","When trying to build mule-esb-maven-tools from source code using JDK 8, it fails with the attached error message.",Bug,Major,Closed,"2015-06-26 18:54:16","2015-06-26 17:54:16",8
Mule,"Extract logic for creating implicit configs to a separate class","The logic for creating implicit configurations is now part of the DefaultExtensionsManager. Would be good to have that extracted to a separate class",Task,Major,Done,"2015-06-25 22:24:17","2015-06-25 21:24:17",5
Mule,"No data type resolution accessing flow/session properties using dot notation","Data type resolution works for session/flow variables on MEL expressions using map syntax (like flowVars['foo']) but does not work when using dot syntax (like flowVars.foo).",Bug,Blocker,Closed,"2015-06-25 20:29:55","2015-06-25 19:29:55",1
Mule,"Enricher does not propagates datatype","Message enricher is not propagating datatype when well-known expressions are used (like expressions returning message's payload/properties)",Bug,Blocker,Closed,"2015-06-25 17:12:02","2015-06-25 16:12:02",8
Mule,"MuleMessage is going to registry for every transformation when extended transformations are used.","Now there is no longer a transient registry it is critical that we don't lookup objects in the registry in runtime per-message.  Not doing so will cause an performance impact and also thread contention at higher concurrencies.    org.mule.DefaultMuleMessage#applyAllTransformers  org.mule.DefaultMuleContext#getDataTypeConverterResolver",Bug,Blocker,Closed,"2015-06-25 14:01:22","2015-06-25 13:01:22",1
Mule,"Update LICENSE.txt to fix year and url for third-party software used by Mule","The LICENSE.txt files refers to year 2009 in CE and 2010 in EE.     For example Copyright (c) 2003-2009 in LICENSE.txt in the root path of the mule repository.    Also the URL referencing the information on the license type for each third-party software product used by Mule is pointing to an old link. The correct one now is https://developer.mulesoft.com/docs/display/current/Third-Party+Software+In+Mule",Task,Trivial,Done,"2015-06-23 21:08:24","2015-06-23 20:08:24",0
Mule,"Apply minor miscellaneous fixes per the ext-api review ","Per the ext-api review, many action items came out which were translated into jira issues.    however, there's another bunch which are really small fixes, javadoc enhancements etc, which don't really justify a one issue per fix approach. For those improvements, this is your jira.","Enhancement Request",Major,Closed,"2015-06-23 19:21:16","2015-06-23 18:21:16",0
Mule,"Implememnt multitenant configuration eviction policy","When using configs multitenant with extenision API there should be a way to evict (dispose) config that are not longer used.     This is critical to avoid OOM and wasting resources for use cases where there may be hundreds or thousands config created over time.","Enhancement Request",Major,Closed,"2015-06-23 18:24:52","2015-06-23 17:24:52",8
Mule,"Operation state handling in extensions api","We need to clearly define how to manage state within operations define with extensions api. Not only define how to implement each use case but also doing it in a way that fits the user mindset.    We need:   - Global state between operators   - Global state per config   - Global state per tenant config   - State for a particular operation (one per xml element) disregarding the config    I'm just trying to list all the cases, then we would have to try to come up with use cases for each use case. ","Enhancement Request",Major,Closed,"2015-06-23 18:21:40","2015-06-23 17:21:40",8
Mule,"Write test cases for LIfecycleUtils","Write unit tests for LifecycleUtils class",Task,Minor,Done,"2015-06-22 18:18:15","2015-06-22 17:18:15",5
Mule,"Merge mule 3.x on 4.x branch","Merge latest changes on mule 3 into mule 4 branch",Task,Trivial,Done,"2015-06-18 16:42:28","2015-06-18 15:42:28",5
Mule,"Incorrect XSD generated for extension built using extension API","Reviewing the code or extensions API implementation, found that the XSD sceham generated for the test Heinsenberg extension's killOne operation is wrong.      From that snipet, a XML like the following would be valid if checked against a schame validation tool:  ",Bug,Major,Closed,"2015-06-10 22:26:00","2015-06-10 21:26:00",3
Mule,"NonBlockingNotSupportedFunctionalTestCase.aggregator caused InboundAggregationNoTimeoutTestCase to fail.","Messages created in NonBlockingNotSupportedFunctionalTestCase.aggregator are not related by their rootId which caused InboundAggregationNoTimeoutTestCase to fail.",Bug,Major,Closed,"2015-06-09 22:49:33","2015-06-09 21:49:33",5
Mule,"XA transaction must set tx timeout in XA resources","XA transaction must set tx timeout in XA resources",Bug,Blocker,Closed,"2015-06-09 16:52:48","2015-06-09 15:52:48",3
Mule,"Remove registry deprecation warnings from log.","In API Gateway we need to use a registry feature that generates several log entries like:       How to reproduce:  - Configure GW to use any valid organization  - Deploy an API with autodiscovery  - Run GW    Expected:  - The information is not logged at all in no log file.    Actual:  - The information is logged in mule_ee with WARN level.",Task,Major,Done,"2015-06-08 20:33:11","2015-06-08 19:33:11",1
Mule,"CopyOnWriteCaseInsensitiveMap should be interoperable with a regular map","CopyOnWriteCaseInsensitiveMap provides improved performance in cases in which reads vastly outnumbers reads.    However, it's not good when:    * I want to create a CopyOnWriteCaseInsensitiveMap from an existing map  * The initial assumption stops being true and I want to transform the CopyOnWriteCaseInsensitiveMap to a regular one    This should be supported","Enhancement Request",Critical,Closed,"2015-06-05 21:16:23","2015-06-05 20:16:23",1
Mule,"Allow TLS context to be shared in a domain","It'd be good to be able to share a TLS context so that several shared listener configs can use the same one. Another benefit is that all that data (including passwords) will only need to be visible at the domain level, so app developers could use the certs without having access to the perhaps critical data.","Enhancement Request",Critical,Closed,"2015-06-04 19:22:24","2015-06-04 18:22:24",8
Mule,"HTTP Requestor should not use Host property.","If I have configured requestor to hit google.com, i should then not be able to set a host message property or host header (on request builder) that conflicts with google.com. Currently if i hit google.com and i have <set-property propertyName=Host value=pirulo/> in my flow then google with receive Host: pirulo.    If the host configured is an ip address then thats different, need to decide if requestor should take Host value from message properties or only from response-builder (or neither) in that case.",Bug,Major,Closed,"2015-06-04 13:14:10","2015-06-04 12:14:10",5
Mule,"HTTP requestor should ignore 'Transfer-Encoding' property as it is a hop-by-hop header","Transfer-Encoding is a hop-by-hop header and therefore shouldn't really be used by HTTP requestor if there is a transfer-encoding property present in the outbound property scope to determine request streaming behaviour.  Generally current behaviour is fine, but there is one case that is currently incorrect IMO.    * We shouldn't stream a String payload when the transfer-encoding outbound message property is present.    Also:  * Aso, While I think it is probably correct that a String payload should be streamed when a transfer-encoding header is configured and streaming mode is 'AUTO'. This is not the way the user should be enabling streaming and I suggest we log an INFO message whenever a transfer-encoding header is set suggesting the user uses the responseStreamingMode attribute instead.  * There are currently no tests covering the case when these headers are configured using a <request-builder>, we should add these.    *AUTO Behaviour appears to be inconsistent with HTTP listener because the presence of both transfer-encoding/content-length headers results in no streaming with requestor, but streaming with listener*    Failing test that show this can be found in this branch: https://github.com/mulesoft/mule/compare/MULE-8676",Bug,Major,Closed,"2015-06-04 12:51:33","2015-06-04 11:51:33",8
Mule,"HTTP listener should ignore 'Transfer-Encoding' property as it is a hop-by-hop header","Transfer-Encoding is a hop-by-hop header and therefore shouldn't really be used by HTTP listener if there is a transfer-encoding property present in the outbound property scope to determine response streaming behaviour.    Generally current behaviour is fine, but there is one case that is currently incorrect IMO.    * We shouldn't stream a String payload when the transfer-encoding outbound message property is present.  * We shouldn't stream a String payload when the transfer-encoding and content-length outbound message properties are both present.  * Aso, While I think it is probably correct that  a String payload should be streamed when a transfer-encoding header is configured and streaming mode is 'AUTO'.  This is not the way the user should be enabling streaming and I suggest we log an INFO message whenever a transfer-encoding header is set suggesting the user uses the responseStreamingMode attribute instead.    Failing test that show this can be found in this branch: https://github.com/mulesoft/mule/compare/MULE-8676    *AUTO Behaviour appears to be inconsistent with HTTP requestor because the presence of both transfer-encoding/content-length headers results in no streaming with requestor, but streaming with listener*",Bug,Major,Closed,"2015-06-04 12:27:59","2015-06-04 11:27:59",8
Mule,"non-blocking processing strategy should only allow direct-threading-profile ","Currently we cannot force the configuration to use direct-threading-profile for all non-blocking flows, this is because thread pool belong to the listener and not to the flow. We need a bigger change that we cannot make now and we can only address it in Mule 4.  Because we don't have a concrete use scenario for using non-blocking with a worker threading profile we want to validate that you can only use direct-threading-profile for HTTP listeners when flow's processing strategy is non-blocking. This validation will be on runtime.",Bug,Major,Closed,"2015-06-03 14:44:57","2015-06-03 13:44:57",1
Mule,"Set mime type correct for common files with FTP/File connectors","The FTP and File connectors should set mime types for common file types correct, including CSV, XML, and JSON.",Bug,Blocker,Closed,"2015-06-02 21:13:36","2015-06-02 20:13:36",5
Mule,"Update jython to 2.5.3","Need update jython to 2.5.3 to avoid CVE-2013-2027 vulnerability.",Task,Major,Done,"2015-06-02 14:33:35","2015-06-02 13:33:35",0
Mule,"Typo in AbstractFlowConstruct","AbstractFlowConstruct validateConstruct method contains an exception message that says: Flow exception listener contains and exception strategy that doesn't handle all request. Should be an exception instead of and exception.",Bug,Trivial,Closed,"2015-06-01 18:04:50","2015-06-01 17:04:50",0
Mule,"Update jython to 2.7.0","Update to the lastest jython release",Task,Major,Done,"2015-05-28 20:11:00","2015-05-28 19:11:00",3
Mule,"SecurityFilterMessageProcessor does not support non-blocking.","SecurityFilterMessageProcessor should implement NonBlockingSupported",Task,Blocker,Done,"2015-05-27 21:50:14","2015-05-27 20:50:14",3
Mule,"Resolve data type from simple MEL expressions","Now that dataType is being propagated for payload and properties, it would be good if dataType can be propagated when MEL expressions are used.  For example, when using set-payload with flowVars['foo'] expression, it would be good if the property dataType is assigned to the payload's datatype.    Simple expressions include:  * payload/message.payload  * direct access to invocation/session properties, like #[foo], where foo is an invocation/session variable  * access to flowVars, like flowVars['foo']  * access to sessionVars, like sessionVars['foo']","Enhancement Request",Major,Closed,"2015-05-27 20:09:59","2015-05-27 19:09:59",8
Mule,"FTP requester is not validating single files","When the requester is triggered and a single file is processed (on purpose or because the folder selected only contains one file) validations are not applied  and the file is processed regardless. These validations include filename filters and file age in EE.",Bug,Major,Closed,"2015-05-27 18:36:38","2015-05-27 17:36:38",0
Mule,"Remove jasper-jdt-6.0.29.jar from Mule distributions","There are some vulnerabilities related to jasper-jdt-6.0.29.jar that could being affecting mule applications:     CVE-2014-0119, CVE-2011-0013, CVE-2012-5886, CVE-2014-0075, CVE-2011-5062,  CVE-2011-0534,  CVE-2013-2067,  CVE-2011-1184,  CVE-2011-2526,  CVE-2013-4286, CVE-2012-4431,  CVE-2010-4172, CVE-2012-5568,  CVE-2014-0096,  CVE-2012-3544, CVE-2011-4858, CVE-2012-3546,  CVE-2010-4312, CVE-2012-2733,  CVE-2012-0022,  CVE-2014-0227, CVE-2012-5885,  CVE-2013-4590,  CVE-2011-5064, CVE-2011-5063,  CVE-2014-0099,  CVE-2012-5887, CVE-2013-4322, CVE-2014-0227    The only way to avoid these vulnerabilities is to remove the mentioned artifact from the distributions and manually add it in case that is required.",Task,Major,Done,"2015-05-26 19:11:51","2015-05-26 18:11:51",0
Mule,"Update Tomcat Libraries","There is a vulnerability on coyote-6.0.41 that require to upgrade to a newer version. For more details check https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0227",Task,Critical,Done,"2015-05-26 18:50:25","2015-05-26 17:50:25",0
Mule,"Upgrade grizzly to 2.3.21","We need this because of issues on version 2.3.20.",Bug,Critical,Closed,"2015-05-25 15:53:49","2015-05-25 14:53:49",0
Mule,"[Regression] NPE when filter fails","When a filter evaluation fails message is discarded but a NPE is shown in app log.",Bug,Blocker,Closed,"2015-05-22 20:46:07","2015-05-22 19:46:07",8
Mule,"ConcurrentModificationException when hot deploying","To reproduce:  # Deploy first application in Mule Standalone CE  # Deploy second application to a different server (app1 depends on it)  # Load application with some requests (Don't know if this is needed to reproduce)  # Deploy third application by moving the exploded app to apps directory",Bug,Critical,Closed,"2015-05-22 15:56:42","2015-05-22 14:56:42",8
Mule,"HTTP Listener Connector reject a GET and DELETE that contains a body. ",http://forum.mulesoft.org/mulesoft/topics/http-get-delete-how-to-get-the-body-of-request-using-http-listenner-connector,Bug,Blocker,Closed,"2015-05-22 06:48:40","2015-05-22 05:48:40",5
Mule,"HTTP Connector should not send/respond http.* properties ","HTTP Connector knows these properties are internal, so it makes sense that they are filtered and not sent.",Bug,Critical,Closed,"2015-05-21 18:03:24","2015-05-21 17:03:24",5
Mule,"Review CXF documentation","Review CXF documentation",Task,Major,Done,"2015-05-21 17:50:08","2015-05-21 16:50:08",8
Mule,"Connection and Keep-Alive message properties should not affect Listener/Requestor connection reuse behaviour.","Listener can be set up to use persistent connections and client attempt to reuse connections, but if for some reason a connection header gets returns to the listener this behaviour breaks.  Connection reuse behaviour should be encapsulated in listener/requestor.",Bug,Critical,Closed,"2015-05-21 16:51:46","2015-05-21 15:51:46",5
Mule,"Support disablePropertiesAsHeaders in http:request builder config","http:listener element supports disablePropertiesAsHeaders in the response builder configuration.     We should add support for disablePropertiesAsHeaders in the http:request builder element. Also it must support mule expressions.","Enhancement Request","To be reviewed",Open,"2015-05-21 14:33:31","2015-05-21 13:33:31",5
Mule,"Review event copying and access control in non-blocking support","Need to ensure there are no issues..",Task,Critical,Done,"2015-05-20 11:49:46","2015-05-20 10:49:46",1
Mule,"NTLM auth doesn't work on redirect","There's an issue in the underlying library (async-http-client) which causes such a request to fail when the server responds with a 307 redirect instead of a 200 ok.  Issue link is: https://github.com/AsyncHttpClient/async-http-client/issues/866  This was fixed in version 1.9.21 of AHC.",Bug,Critical,Closed,"2015-05-19 19:09:01","2015-05-19 18:09:01",0
Mule,"HTTP requester has a worker thread pool that is not used","The grizzly client used in the HTTP requester is configured with SameThreadIOStrategy, so that the thread that is executing the flow is the same that executes the request. However, a worker thread pool is also defined (unused). This was a workaround for a NPE of the same thread strategy. This pool should not exist.","Enhancement Request",Major,Closed,"2015-05-18 18:57:47","2015-05-18 17:57:47",0
Mule,"Update MVEL version to 2.1.9-MULE-006","Need to update MVEL to include the fix for  MULE-8336",Task,Major,Done,"2015-05-15 17:57:05","2015-05-15 16:57:05",1
Mule,"Should be able to fetch prototype by name without lifecycle applied","In most scenarios, when a prototype is lookup up by name, lifecycle should be applied to it before returning.    There're some scenarios (e.g.: fetching a MessageProcessor that will go into a DynamicPipeline) which are not so and we need a way to specify that this case is different.    The following method was applied to the LifecycleRegistry to support such case:    ",Bug,Blocker,Closed,"2015-05-15 14:55:36","2015-05-15 13:55:36",1
Mule,"Incorrect error processing on Jetty transport","Jetty transport is not properly managing error conditions that occur when a MuleMessage fails to be created for the current request.  For example, if a request contains an invalid mimeType, it won't be possible to create a DefaultMuleMessage from it, an exception will be thrown to signal the error, but the returned response will be a 200 instead of 500. (NOTE: the problem exists only when there is no MuleMessage, once it has been created, then it works as expected)",Bug,Major,Closed,"2015-05-14 15:08:45","2015-05-14 14:08:45",2
Mule,"keepAlive is not working correctly in the HTTP requester","keepAlive is not working as expected. The http:request element always sends the header Connection: keep-alive in the request, regardless of the usePersistentConnections attribute in the config. If usePersistentConnections is set to false, keepAlive should be disabled, but the header is still sent.    Also, in the proxy scenario (using a listener and a requester) connections are kept alive but not reused. See example config here: https://github.com/mulesoft/performanceworks/blob/master/APPS/PROXY-MCD/100B/http_module_proxy/proxy.xml  This causes Remotely closed errors, thrown by the service that is being proxied in a highly concurrent scenario.    ",Bug,Critical,Closed,"2015-05-14 14:58:25","2015-05-14 13:58:25",8
Mule,"Deployment should fail when using invalid encoding","When deploying the below config deployment should fail because encoding does not exists. Now is failing in runtime when executing the flow    ",Bug,Major,Closed,"2015-05-13 20:55:25","2015-05-13 19:55:25",3
Mule,"Setting wrong encoding causes flow execution to hang","Deploy the below config and run this:    curl -m 10 http://localhost:8081/  curl: (28) Operation timed out after 10004 milliseconds with 0 bytes received    It logs an error as soon as I send the request but then I only receive the curl timeout without Mule doing anything.    When I remove encoding=asdfsadf ti returns 200 immediately.",Bug,Blocker,Closed,"2015-05-13 20:36:24","2015-05-13 19:36:24",8
Mule,"Deployment should fail when using Invalid MIME type","When deploying the below config deployment should fail because MIME type does not exists. Now is failing in runtime when executing the flow    ",Bug,Major,Closed,"2015-05-13 19:31:35","2015-05-13 18:31:35",3
Mule,"set-payload with invalid MIME type returns an ugly error","When using an invalid MIME type in set-payload the error message is not very clear.    Deploy this app:        Request:  ~  curl http://localhost:8081/  javax.activation.MimeTypeParseException: Unable to find a sub type. (org.mule.api.MuleRuntimeException). Message payload is of type: BufferInputStream%    App log:    org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor:32 (http://www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/MessagingException.html)  --------------------------------------------------------------------------------  Root Exception stack trace:  javax.activation.MimeTypeParseException: Unable to find a sub type.   at javax.activation.MimeType.parse(MimeType.java:102)   at javax.activation.MimeType.<init>(MimeType.java:63)   at org.mule.transformer.types.SimpleDataType.<init>(SimpleDataType.java:40)      + 3 more (set debug level logging or '-Dmule.verbose.exceptions=true' for everything)  ********************************************************************************    ",Bug,Major,Closed,"2015-05-13 19:26:51","2015-05-13 18:26:51",3
Mule,"Add a Base64 decoded which doesn't automatically unzip","Currently, the Base64.decode(String) method automatically unzips if it detects a GZIp magic number header.    Add a new method which doesn't","Enhancement Request",Critical,Closed,"2015-05-11 21:07:15","2015-05-11 20:07:15",0
Mule,"Upgrade grizzly to 2.3.20","This is necessary to upgrade AHC.",Task,Critical,Done,"2015-05-07 18:12:28","2015-05-07 17:12:28",1
Mule,"Upgrade async-http-client to 1.9.21","This version includes several fixes but depends on also upgrading Grizzly.",Task,Critical,Done,"2015-05-07 18:11:22","2015-05-07 17:11:22",3
Mule,"Spike on Collection splitter is not setting the group size when payload is an Iterator","Salesforce queries return an iterator and when a collection splitter is used, it fails to aggregate the collection after because the group size is set to -1.  Attached mule config    This seems to be happening because this class https://github.com/mulesoft/mule/blob/bfb3a17263d1e4b32ee10272cbf710a2bf41b16b/core/src/main/java/org/mule/routing/outbound/IteratorMessageSequence.java is used from https://github.com/mulesoft/mule/blob/1dbf6e09a651184e9c54ec8988ecf1907cbdd58f/core/src/main/java/org/mule/util/collection/EventToMessageSequenceSplittingStrategy.java and it is setting UNKNOWN_SIZE as Group size for all Iterator payloads",Bug,Critical,Closed,"2015-05-07 17:37:21","2015-05-07 16:37:21",5
Mule,"Fix JDK8 build","Tests run in a different order in the JDK8 build, so HttpsSharePortTestCase fails in that case because of some other test that runs before it. ",Task,Major,Done,"2015-05-07 15:00:33","2015-05-07 14:00:33",5
Mule,"Datatype cannot be configured when adding properties using message-property-transformer","You can't set the datatype to the properties in the Message Properties transfomer","Enhancement Request",Major,Closed,"2015-05-06 23:17:10","2015-05-06 22:17:10",3
Mule,"It would be useful to have the Datatype mimeType info when you use the logger ","Right now you have the payload type and the encoding but not the mimeType:    Ex:  org.mule.DefaultMuleMessage  {    id=badce400-f435-11e4-b227-20c9d0cf41e7    payload=java.lang.String    correlationId=<not set>    correlationGroup=-1    correlationSeq=-1    encoding=UTF-8    exceptionPayload=<not set>  ...  }","Enhancement Request",Trivial,Closed,"2015-05-06 23:11:44","2015-05-06 22:11:44",0
Mule,"Add support for expressions in the authentication configuration of the HTTP connector","Add support for MEL expressions in the attributes of the authentication elements of the new HTTP connector.","Enhancement Request",Critical,Closed,"2015-05-06 19:02:35","2015-05-06 18:02:35",3
Mule,"Dependency injection fails when injection candidate is registered on domain","When the @Inject annotation is used to inject an instance which leaves on the parent domain context, injection fails",Bug,Blocker,Closed,"2015-05-06 16:21:28","2015-05-06 15:21:28",3
Mule,"Applications and corresponding domains should share the same OptionalObjectController","OptionalObjectsController is used to track objects registered through registry-bootstrap.properties which are optional.    When an application belongs to a domain, that instance should be shared between the app and the domain. ",Bug,Blocker,Closed,"2015-05-05 22:29:14","2015-05-05 21:29:14",5
Mule,"Add support for preemptive basic authentication in the HTTP module","Allow to configure if basic authentication is preemptive or not in the new HTTP connector, by adding an attribute to the config: preemtive=true|false|expression    Also add this to the config builder in the public API of the connector.","Enhancement Request",Critical,Closed,"2015-05-05 15:13:40","2015-05-05 14:13:40",3
Mule,"Deployment failure if two apps are both using BTM in the same Mule server","Deployment failure if two apps are both using BTM in the same Mule server",Bug,Major,Closed,"2015-04-29 16:12:20","2015-04-29 15:12:20",0
Mule,"SpringRegistry is not thread-safe","In versions prior to 3.7.0, the SpringRegistry was read only and all objects registered through the MuleRegistry API went to the transient registry.    Per the work in MULE-7588, the TransientRegstry no longer exists and the SpringRegistry is writable. However, it's missing the ReadWriteLock that TransientRegistry had to allow register and lookup objects concurrently.    This causes random failures, specially when dealing with dynamic endpoints",Bug,Blocker,Closed,"2015-04-29 00:51:26","2015-04-28 23:51:26",3
Mule,"Promote to public api DefaultHttpListenerConfig.resolvePath or equivalent behavior","There's no way to resolve the full path of a listener using the public API.    Mule 3.6 offered the following method that was changed in 3.7:  ","Enhancement Request",Blocker,Closed,"2015-04-28 20:32:22","2015-04-28 19:32:22",5
Mule,"Add max-send-buffer-size entry in wrapper.conf","We need to add that property now that it's available.",Bug,Critical,Closed,"2015-04-28 18:34:27","2015-04-28 17:34:27",3
Mule,"Transformers are registered twice","As a side effect of MULE-7588, transformers registered either through registry-bootstrap.properties or as Spring beans are registered twice. As a result, some transformer resolutions fails, specially when the object contains XML or JSon annotations.    Although this seems benign at first sight, in some cases it leads to wrong resolution since Mule might thing that it has more than one transformer to resolve the same case",Bug,Blocker,Closed,"2015-04-28 15:43:44","2015-04-28 14:43:44",0
Mule,"Update C3P0 to version 0.9.5","There is a new version of C3P0. Would be great to update it to replace the old version that is shipped on Mule","Enhancement Request",Major,Closed,"2015-04-28 15:39:25","2015-04-28 14:39:25",2
Mule,"Upgrade Spring security to 4.0.1.RELEASE","Spring dependencies were updated to 4.1.6 and keeping Spring security in 3.1.0 is an important risk.",Task,Critical,Done,"2015-04-28 15:03:41","2015-04-28 14:03:41",5
Mule,"Unused resolvePath method in DefaultHttpListenerConfig","That method was removed but later reintroduced by the merge of a lifecycle branch that had been branched when the method was still present.",Bug,Major,Closed,"2015-04-28 14:04:25","2015-04-28 13:04:25",0
Mule,"Core schema for 3.6 is not defined and rubbish at the end of line","https://github.com/mulesoft/mule/blob/mule-3.x/modules/spring-config/src/main/resources/META-INF/spring.schemas#L11    And remove rubbish bracket at end of line.",Bug,Critical,Closed,"2015-04-27 19:04:26","2015-04-27 18:04:26",1
Mule,"CXF schemas for 3.5 and 3.6 are wrong","https://github.com/mulesoft/mule/blob/mule-3.x/modules/cxf/src/main/resources/META-INF/spring.schemas#L5-L6  ",Bug,Critical,Closed,"2015-04-27 19:03:17","2015-04-27 18:03:17",1
Mule,"Exposes information needed by DataMapper in order to run as a plugin","DataMapper is accessing some elements in our code that is defined as protected. Because now DataMapper is going to be a Mule plugin, this won't work anymore as it will ran in a different classloader.    Need access to the following fields on MVELExpressionLanguage: globalFunctions, parserConfiguration and aliases    Need access to MuleImmutableVariableResolver class","Enhancement Request",Blocker,Closed,"2015-04-23 17:55:54","2015-04-23 16:55:54",2
Mule,"Lifecycle not applied to Objects manually registered during initialisation","Suppose an Initialisable or Startable object which during any of those phases registers a new Lifecycle object (e.g.: like an endpoint which creates and registers a connector).    Only the already completed phases are applied to the newly registered object while the one being currently executed isn't",Bug,Blocker,Closed,"2015-04-24 20:01:44","2015-04-24 19:01:44",1
Mule,"Dispose lifecycle phase is invoked even when initialise phase fails","dispose() should not be invoked if initialise() fails.  At least thats how I believe it always worked.      This change causes NPE's in dispose() in a lot of cases. Which results in much more verbose and confusing errores being logged.",Bug,Blocker,Closed,"2015-04-24 19:39:17","2015-04-24 18:39:17",5
Mule,"DI should never include Devkit components","Although MULE-8534 and MULE-8415 tried to keep some level of compatibility between mule's injector and devkit's components, some other integration issues keep popping up so we decided that for now Devkit will be excluded from it. Devkit will provide its own solution for DI","Enhancement Request",Blocker,Closed,"2015-04-24 01:04:11","2015-04-24 00:04:11",1
Mule,"Ensure that transformers use a proper return datatype","Transformers define an output dataType which is set on the message after the transformation.  In order to properly propagate message dataType, transformers must return the proper type, mimeType and encoding that corresponds to the executed transformation.","Enhancement Request",Critical,Closed,"2015-04-23 18:13:21","2015-04-23 17:13:21",8
Mule,"Reverse the semmantics of MULE-8415","The flag introduced in MULE-8415 disables dependency injection for devkit components. We need it to be other way around. By default, Mule is not to inject into Devkit and the property is to be renamed to mule.devkit.participates.di and only when set to true devkit will be considered into DI.",Task,Critical,Done,"2015-04-23 17:53:49","2015-04-23 16:53:49",1
Mule,"MBeans/JMX Memory Leak on vanilla Mule ESB Standalone","Jira created at request of <USER>- see http://forum.mulesoft.org/mulesoft/topics/mbeans-jmx-memory-leak-on-vanilla-mule-esb-standalone-no-custom-code-deployed?utm_source=notification&utm_medium=email&utm_campaign=new_reply&utm_content=reply_button&reply%5Bid%5D=15618818#reply_15618818    1) Deploy an out of the box Mule Standalone ESB, e.g. mule-standalone-3.6.1  2) Start - default app deploys, no custom code deployed  3) Start Oracle VisualVM, connect to Mule ESB  4) Watch the heap being consumed    I performed this test with max memory changed to 256Mb in wrapper.conf (so I didn't have to wait so long for memory to be consumed), on openSuse 13.1, with Oracle Java version 1.8.0_31  Java(TM) SE Runtime Environment (build 1.8.0_31-b13)  Java HotSpot(TM) 64-Bit Server VM (build 25.31-b07, mixed mode)    I have observed the same symptoms using Java jdk1.7.0_75 on openSuse, and Java jdk1.7.0_xx on Mac/OS, so it doesn't seem to be o/s or Java related.    If I don't attempt to monitor Mule ESB, the memory leaks don't appear to happen, though it's difficult to be sure without being able to monitor, but I presume that this is MBean/JMX instrumentation related.    Running Oracle JConsole does not appear to induce the same dramatic memory consumption, but does seem to cause some sort of slow incremental leak.  ",Bug,Critical,Closed,"2015-04-23 15:19:59","2015-04-23 14:19:59",8
Mule,"Async Loggers stop working after reconfiguration","If the log4j2.xml file of a deployed application is modified, then log4j2 automatically picks up the change and reconfigures itself, which causes the current Configuration object to be stopped.    However, because MuleLoggerContext wraps the loggers into a DispatchingLogger instance, the updateConfiguration(Configuration) method never reach the actual loggers which remain pointing to the stopped configuration instead of the new one. As a result, no AsyncLogger can ever again post any message",Bug,Critical,Closed,"2015-04-22 20:50:54","2015-04-22 19:50:54",0
Mule,"Remove AspectJ dependency in CE","AspectJ needs to be upgraded to version 1.8.5 to be consistent with the version number across all distributions and remove warnings when building.",Task,Major,Done,"2015-04-21 18:38:44","2015-04-21 17:38:44",3
Mule,"Provide access to client certificate on 2-way TLS authenticated connections","When a 2-way TLS authenticated connection is created the client certificate should be exposed in the flow since it may be useful to use it to identify the client.    We are going to expose the client certificate ONLY (not the CA certificates) in the flow using a new inbound property http.client.cert.    The user can access the client principal by doing message.inboundProperties['http.client.cert'].getSubjectDN()    We analyse if there is any risk by exposing the certificate as an inbound property but we got to the conclusion that there's no risk since the client certificate is publicly available in general and it's not used for the communication encrypt  / decrypt. It's only used to identify the client.","Enhancement Request",Blocker,Closed,"2015-04-20 17:59:22","2015-04-20 16:59:22",5
Mule,"Add support for non-blocking processing strategy to CXF/WS-Consumer","Add support so that CXF/WS-Consumer can be used in Flow and non-blocking processing supported.","Enhancement Request",Critical,Closed,"2015-04-20 15:08:36","2015-04-20 14:08:36",8
Mule,"Allow default processing strategy to be configured per app","Currently if you want to use a sync processing strategy in every flow it is necessary to configure it on every single flow in your app.  Add a attribute to the <configuration> element to define this once.    Also, consider allowing a system property too.  This would be useful for:  - Alternative testing plans  - Setting default per instance, e.g. in cloudhub maybe.    ","Enhancement Request",Major,Closed,"2015-04-20 14:26:53","2015-04-20 13:26:53",3
Mule,"Setting a NullPayload in a property must behave as setting null","Mule uses NullPayload to represent a null value in a MuleMessage's payload.  When a message has NullPayload and a property is set using an expression like #[payload], then the property will contain NullPayload.  This situation requires that checking a property requires to consider NullPayload value as a separate case other than null and not null.  ","Enhancement Request",Major,Closed,"2015-04-19 13:40:34","2015-04-19 12:40:34",2
Mule,"CXF Proxy-Client is throwing NullPointerException","Nowadays, if you want to create a proxy, you have to specify the port name and the soapVersion for each binding. This information is provided by the wsdl, so it shouldn't be required, the proxies should detect them automatically.    As a consequence, if you have an API with multiple ports, one of them receiving a SOAP 1.1 envelope, and other one receiving a SOAP 1.2 envelope, and if you don't specify the port and the soapVersion in both proxies (service and client) you will not be able to send a SOAP 1.2 message.     This means that a simple proxy cannot be used with both types of SOAP versions.  ",Bug,Critical,Resolved,"2015-04-17 23:01:18","2015-04-17 22:01:18",8
Mule,"XSD Generator fails to generate documentation for attributes","We should check with [this tool|https://github.com/mulesoft/mule-tool-schema-doc] that the documentation generated for Validators extension is correct.",Bug,Critical,Closed,"2015-04-17 18:49:47","2015-04-17 17:49:47",5
Mule,"XSD Generator creates wrong attribute types for numeric parameters","h2. Size validator has int parameters for min and max values but the generated XSD creates attributes with Long data type.        {code}  /**       * Validates that {@code value} has a size between certain inclusive boundaries. This       * validator is capable of handling instances of {@link String}, {@link Collection},       * {@link Map} and arrays       *       * @param value   the value to validate       * @param min     the minimum expected length (inclusive, defaults to zero)       * @param max     the maximum expected length (inclusive). Leave unspecified or {@code null} to allow any max length       * @param options the {@link ValidationOptions}       * @param event   the current {@link MuleEvent       */      @Operation      public void validateSize(Object value,                               @Optional(defaultValue = 0) int min,                               @Optional Integer max,                               @ParameterGroup ValidationOptions options,                               MuleEvent event) throws Exception      {          ValidationContext context = createContext(options, event);          validateWith(new SizeValidator(value, min, max, context), context, event);      }  {code}    h2. expressionObject is generated for java.lang.Long parameters in isLong validator  {code:xml}    <xs:element xmlns=http://www.mulesoft.org/schema/mule/validation type=IsLongType substitutionGroup=validator-message-processor name=is-long></xs:element>    <xs:complexType name=IsLongType>      <xs:complexContent>        <xs:extension xmlns:mule=http://www.mulesoft.org/schema/mule/core base=mule:abstractMessageProcessorType>          <xs:attribute type=mule:substitutableName use=required name=config-ref>            <xs:annotation>              <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>            </xs:annotation>          </xs:attribute>          <xs:attribute type=mule:expressionString use=optional name=pattern></xs:attribute>          <xs:attribute type=mule:expressionString use=required name=value></xs:attribute>          <xs:attribute type=mule:expressionString use=optional name=locale></xs:attribute>          <xs:attribute type=mule:expressionObject use=optional name=minValue></xs:attribute>          <xs:attribute type=mule:expressionObject use=optional name=maxValue></xs:attribute>          <xs:attribute type=mule:expressionString use=optional name=exceptionClass></xs:attribute>          <xs:attribute type=mule:expressionString use=optional name=message></xs:attribute>        </xs:extension>      </xs:complexContent>    </xs:complexType>  {code}",Bug,Critical,Closed,"2015-04-17 18:06:15","2015-04-17 17:06:15",3
Mule,"Remove the extension prefix from the generated XSD file name","Since per MULE-8485 we decided that extensions should not have any naming differentiator, the %s-extension-%s pattern which is now used to name generated XSD needs to change to be source agnostic.",Bug,Blocker,Closed,"2015-04-16 23:28:50","2015-04-16 22:28:50",1
Mule,"Remove log4j2 error message when building","When running the Maven build from source, the following error message is thrown, even when the build finishes successfully.    {quote}  [INFO] --- maven-processor-plugin:2.2.4:process (process) @ mule-extension-validation ---  ERROR StatusLogger No log4j2 configuration file found. Using default configuration: logging only errors to the console.  {quote}",Task,Minor,New,"2015-04-16 19:24:42","2015-04-16 18:24:42",1
Mule,"ExtensionManagerConfigurationBuilder not invoked when Mule starts in standalone mode","When starting in standalone mode, the ExtensionManagerConfigurationBuilder is not been invoked and thus applications fail to deploy if they contain any extensions",Bug,Blocker,Closed,"2015-04-16 18:28:41","2015-04-16 17:28:41",1
Mule,"Message transformation must maintain original mimeType and encoding when transformer does not provide them","When a transfomer is applyed on a DefaultMuleMessage and changes its payload, then the transformer's output datatype is assigned to the message datatype.  However, transformer's output datatype not always defines mimeType and encoding. If a transformer does not change any of those fields, then the fields from original payload's datatype should be used.","Enhancement Request",Major,Closed,"2015-04-16 09:38:57","2015-04-16 08:38:57",3
Mule,"Allow to set certificate alias in keystore configuration","When multiple certificates are installed in the keystore file, we need to provide a mechanism to pick one in the tls context element.    How this is done can be review but most likely is using the certificate alias. So an alias optional attribute must be used in the keystore element.    When there are multiple certificates and alias is not defined we should define hich on we should pick.","Enhancement Request",Critical,Closed,"2015-02-03 19:44:20","2015-02-03 19:44:20",3
Mule,"rename the artifact mule-extension-validations to mule-module-validation","We finally decided to not reflect the difference between a craft module and an ext-api based one on the artifact name since from a user's point of view there shouldn't be a difference",Task,Critical,Done,"2015-04-15 14:49:54","2015-04-15 13:49:54",1
Mule,"Succesful undeployment is not show in console","# Download 3.7.0-M2-SNAPSHOT  # Copy any Mule app to apps directory  # Start server  # Delete default-anchor.txt    Undeployment request is logged and is done but concole never shows that now there is only one app deployed and that default app was undeployed successfully.",Bug,Major,Closed,"2015-04-15 14:04:36","2015-04-15 13:04:36",1
Mule,"Update message data type when Content-Type property changes","When Content-Type property is set on a message, then payload's data type must be updated to reflect the new value.",Bug,Major,Closed,"2015-04-15 12:33:46","2015-04-15 11:33:46",5
Mule,"Provide a builder for HttpRequesterConfig interface","Despite the normal use case for initializing a HttpRequesterConfig is from the definition parser, for a specific DevKit's story [DEVKIT-1527|https://www.mulesoft.org/jira/browse/DEVKIT-1527] we need to feed the WsConsumerConfig with an already initialized instance of *DefaultHttpRequersterConfig*.    Before this jira, ideally, [MULE-8481|https://www.mulesoft.org/jira/browse/MULE-8481] should be tackled down to make WsConsumerConfig consume the HttpRequesterConfig interface, so that from a DevKit's POV initializing objects and passing through the WsConsumerConfig will work properly.","Enhancement Request",Blocker,Closed,"2015-04-14 15:08:55","2015-04-14 14:08:55",8
Mule,"WSConsumerConfig should use the HttpRequesterConfig interface rather than the internal implementation","The *connectirConfig* field of the class org.mule.module.ws.consumer.WSConsumerConfig can be configured by passing an initialized instance of a *DefaultHttpRequesterConfig* when it should be using the interface of the the previous one: *HttpRequesterConfig*.    This small chance will unblock the DevKit's story [DEVKIT-1527|https://www.mulesoft.org/jira/browse/DEVKIT-1527] providing an automated way of instantiating WSC manually when initializing a HttpRequesterConfig by hand.","Enhancement Request",Blocker,Closed,"2015-04-14 14:58:03","2015-04-14 13:58:03",3
Mule,"Consider renaming @ImplementationOf to @ExtensionOf","Consider renaming @ImplementationOf to @ExtensionOf since it's clearer for some persons","Enhancement Request",Major,Closed,"2015-04-13 22:41:02","2015-04-13 21:41:02",1
Mule,"Operations of an Extensible extensions should not require to be annotated with @ImplementationOf","Extensions can be annotated with @Extensible to signal that external modules can extend them further. Right now, it's required for the classes in which such extensions are implemented to be annotated with @ImplementationOf.     However, that's redundant since a given extension operations are by very definition extending it. Such annotation should only appear on third party extensions which are in fact extending it.","Enhancement Request",Major,Closed,"2015-04-13 22:40:03","2015-04-13 21:40:03",5
Mule,"It should not be mandatory for a class annotated with @Operation to depend on the config object","Right now, when a class contains methods annotated with @Operation, then it is demanded that a single constructor is available to create the instance and pass the configuration instance over.    However, not in all cases the operations in a class require of the configuration. The behaviour should be that if such constructor exists then it's used. If it doesn't, then a default constructor is used to create a config-less operation instance.    Only if no constructor is found which matches both criterias should an exception be thrown.","Enhancement Request",Critical,Closed,"2015-04-13 22:36:02","2015-04-13 21:36:02",5
Mule,"Validate that Pojo attributes are not composites","When a pojo is used as a parameter in an Extension, XSD support is generated to allow users define the instance on the XML.    However, this won't work if the object is a composite. The composite fields should be skipped when generating the XSD support.","Enhancement Request",Major,Closed,"2015-04-13 22:32:41","2015-04-13 21:32:41",5
Mule,"Spike on on inferring extension version from project version","Currently, the @Extension annotation includes a version attribute which is used to specify an extension version.    However, it's undesirable to have the need to upgrade the version of every extension each time that a new version is released.    A mechanism should be defined for the extension version to be automatically inferred from the underlying ${project.version}. There should still be a way to fix the extension version arbitrarily","Enhancement Request",Major,Closed,"2015-04-13 22:28:02","2015-04-13 21:28:02",8
Mule,"Implement a solution to automatically infer supported schema versions for XML compatible extensions","Right now, when an extension is to have XML support, the @Xml annotation includes a schemaVersion attribute.    That is not a scalable solution because assuming that an extension is released in version 3.7, then its spring bundle should support schemas 3.7, 3.8, 3.9 and so forth, and it's very undesirable for a developer to traverse through all the extensions modifying that.     We need a solution in which given an inception version version, the current schema version is inferred and the prior ones back to the inception version are also included in the spring bundle. ","Enhancement Request",Major,Closed,"2015-04-13 22:26:00","2015-04-13 21:26:00",5
Mule,"remove the repackaged package from extension-support module","Because ext-api development started when mule was using Spring 3.x, a Spring 4.x package was embedded into our code.    Now that Spring was upgraded to the lastest version, that repackage should be remove in favor of the original classes in the spring jar","Enhancement Request",Critical,Closed,"2015-04-13 22:18:39","2015-04-13 21:18:39",1
Mule,"Configs should be optional when using Ext-api operations in a flow","Right now, every MP which executes an extension operation is required to provide a config. This is not good from a usability standpoint so the desired behaviour is:    * If a config is specified through the config-ref attribute, then use it  * If no config is specified but there's one configured, then locate it and use it  * If no config is specified nor defined, then depending on the extension an implicit one can be created. An implicit configuration is created by simply instantiating the default config. Configs should be marked as not supporting implicit creation through some annotation/annotation attribute","Enhancement Request",Blocker,Closed,"2015-04-13 22:17:05","2015-04-13 21:17:05",8
Mule,"Fix maven-processor-plugin version in extensions pom","Version of maven-processor-plugin is not specified in extensions pom.xml.  Because of that, the latest available version is used (3.1.0-beta1).  Using that version causes compilation failures apparently in some machines (apparently when maven version > 3.0.x)  Fixing version to 2.2.4 fixes the problem",Task,Critical,Done,"2015-04-13 20:24:44","2015-04-13 19:24:44",0
Mule,"Race condition on <reconnect-forever> and deployment lifecycle","When using a reconnect-forever for a transport connector, the connection logic runs in a different thread. Thus, when the components are being started and receivers are added that need to connect themselves there can be a race condition between the registration of a receiver (where it is connected only if the connector itself is connected) and the connector's connection logic (where the existing receivers are connected). When it occurs the connector's connection logic finds there are no receivers to be connected and the receiver registration finds the connector is not connected, so that receiver is never connected. ",Bug,Critical,Closed,"2015-04-13 14:52:42","2015-04-13 13:52:42",0
Mule,"Message transformation must no update payloads data type when payload was not transformed","DefaulMuleMessage#transformMessage(MuleEvent, Transformer) always updates the message data type to the transformer output data type.  That is wrong because some transformers update parts of the message other than the payload. (like message properties)  Probably those transformers should be plain message processors, but a way to fix this problem is to check that payload has changed after the transformation.",Bug,Major,Closed,"2015-04-12 12:59:54","2015-04-12 11:59:54",3
Mule,"Improve data type propagation for properties","Work done on MULE-8453 did not include updating some property setter methods to include datatype.","Enhancement Request",Critical,Closed,"2015-04-11 14:13:27","2015-04-11 13:13:27",2
Mule,"ArgumentTypeMismatch when many nested operations are supported but only one is provided","The ext-api supports defining operations which can take one nested Operation or a list of them.    When the operation supports many but only one is provided, the ResolverSetResult doesn't contain a list of one NestedOperation but a single one, which results on an ArgumentTypeMismatch.",Bug,Critical,Closed,"2015-04-09 21:21:54","2015-04-09 20:21:54",1
Mule,"Generated XSD defines restriction groups by extension","When an operation takes NestedProcessors as an argument, the @RestrictedTo annotation can be used to limit the acceptable message processors to a given substitution group.    However, what the XSD generator is doing is to create a group which lists all of the operations in the given restriction type. Because that group is fixed, it doesn't allow to externally contribute more elements with the same substitution group.     What the generator should do is to define a group which has a reference to the substitutionGroup and thus allowing variable elements which meet the restriction",Bug,Critical,Closed,"2015-04-09 20:54:19","2015-04-09 19:54:19",1
Mule,"Improve set properties transformers to set property datatype","Mule message properties now contain a datatype. All the transformers that set properties in a message/session should provide a way to configure the datatype and update that datatype in the property accordingly.","Enhancement Request",Critical,Closed,"2015-04-09 16:11:12","2015-04-09 15:11:12",8
Mule,"Implement NTLM authentication for the HTTP Requester","Once AHC is upgraded to 1.9.18 we should be able to add support for NTLM.",Task,Critical,Done,"2015-04-09 13:17:47","2015-04-09 12:17:47",5
Mule,"Upgrade async-http-client to 1.9.19.","We need to upgrade to version 1.9.18 in order to support NTLM.  Here's AHC's migration guide:  https://github.com/AsyncHttpClient/async-http-client/blob/master/MIGRATION.md  There could also be some issues with missing multipart classes.",Task,Critical,Done,"2015-04-09 13:15:26","2015-04-09 12:15:26",13
Mule,"Replace SetPayloadTransformer with a plain message processor","SetPayloadTransfomer is the implementation behind set-payload element.  As the name implies, is a Transformer and is executed invoking muleMessage transformation capabilities.  Problem with this transformer is that it returns only a value and in order to properly propagated message's dataType, it must set the correct dataType (the one configured by the user).  Besides that, transfomer's source/target dataType is not valid on this particular case, because the datatpye is dynamic (assigned value can be resolved from an expression). So dataType can't be statically defined.","Enhancement Request",Critical,Closed,"2015-04-09 00:15:53","2015-04-08 23:15:53",5
Mule,"Add data type to message properties","MuleMessage properties have no information about the type of the value they are holding.  Providing a way to maintain this information will help to support more transformation scenarios and will improve usability in Studio","Enhancement Request",Critical,Closed,"2015-04-08 16:41:30","2015-04-08 15:41:30",5
Mule,"Introduce type level aliases for extensions API","When the XML support for the ext-api maps a java complex type as a top level element (usually the case when defining global pojos), there's the need to provide an alias so that the global element can have a name which is not directly tied to the Java type name.","Enhancement Request",Critical,Closed,"2015-04-08 00:22:35","2015-04-07 23:22:35",1
Mule,"add the concept of parameter alias in the ext-api annotations","When using the ext-api through annotations, there're limitations on the possible names that parameters can take because of the java language reserved words. For example, an attribute cannot be named class. Another problem is when from a coding point of view, an attribute should have one name which isn't so representative when seen from an extension's parameter point of view.    Because of that, we need the ability to add an alias attribute to the @Parameter annotation.","Enhancement Request",Critical,Closed,"2015-04-07 16:21:18","2015-04-07 15:21:18",1
Mule,"ExtensionResourcesGeneratorAnnotationProcessor is not been fired","ExtensionResourcesGeneratorAnnotationProcessor is not been fired because the full classname of @Extension has changed and the refactor didn't modified this file. This is because of a java language limitation which doesn't allow a .class.getName() kind of reference there.    As a result, xsd is not generated when building a extension",Bug,Critical,Closed,"2015-04-07 13:28:27","2015-04-07 12:28:27",1
Mule,"extension API should consistently always inject values through fields instead of setters","Right now, when the ext-api creates an object uses setters to inject values parsed from XML, while in some other scenarios like when resolving expressions it uses fields. That leads to some inconsistency plus the setter injection limits the ability to encapsulate the internal representation of some object's state.    Always use fields to inject values.",Bug,Critical,Closed,"2015-04-06 22:46:26","2015-04-06 21:46:26",1
Mule,"app.home property is no longer available","When an application is deployed, the Spring configuration builder is running before the SimpleConfigurationBuilder making some properties like app.home not available to the mule config",Bug,Critical,Closed,"2015-03-31 14:24:54","2015-03-31 13:24:54",1
Mule,"Add a way to inject all available core extensions in a core extension","Mule core extensions can have dependencies against other core extensions, but these dependencies are fixed on compile time (dependencies are defined using MuleCoreExtensionDependency method annotation).  In order to properly support some management scenarios, we need to provide a way to let a core extension to receive all the available core extensions.    Given the constraints on lifecycle imposed by the MuleCoreExtensionDependency dependencies, a core extension that receives all the available core extensions cannot contain any methods annotated with it.","Enhancement Request",Critical,Closed,"2015-03-31 13:02:40","2015-03-31 12:02:40",5
Mule,"Remove unused manifest files","These MANIFEST files are present in our code but are not used:    ./modules/boot/src/main/resources/META-INF/MANIFEST.MF  ./modules/builders/src/main/resources/META-INF/MANIFEST.MF  ./modules/jaas/src/main/resources/META-INF/MANIFEST.MF  ./modules/management/src/main/resources/META-INF/MANIFEST.MF  ./modules/ognl/src/main/resources/META-INF/MANIFEST.MF  ./modules/scripting/src/main/resources/META-INF/MANIFEST.MF  ./modules/xml/src/main/resources/META-INF/MANIFEST.MF    They are all replaced by the manifest configured in root pom.xml    This manifest   ./core/src/test/resources/META-INF/MANIFEST.MF  is used to test the Java version checking, we shouldn't use a real manifest, we should use a fake one to check that version control is working.",Task,Major,New,"2015-03-30 16:41:35","2015-03-30 15:41:35",3
Mule,"Check if Ext-api jars are Maven Central compliant","Perform that verifyication on the mule-extensions-api and mule-extensions-api-annotations projects",Task,Critical,Done,"2015-03-27 19:55:50","2015-03-27 19:55:50",5
Mule,"Create MEL version for each validator in the validations module","Create MEL version for each validator in the validations module",Task,Major,Done,"2015-03-20 18:58:15","2015-03-20 18:58:15",5
Mule,"Implement Validations XML components","Implement Validations XML components",Task,Major,Done,"2015-03-20 18:57:18","2015-03-20 18:57:18",8
Mule,"Improve MuleMessage's data type consistency","DefaultMuleMessage's datatype is not being properly updated and maintained.  For example:  _DefaultMuleMessage#setEncoding does not update dataType's encoding  _DefaultMuleMessage#setMimeType does not update dataType's mimeType  _DefaultMuleMessage#setPayload does not update dataType's type  _DefaultMuleMessage#setProperty is not update dataType when a encoding property is set on the message    Improving data type consistency and propagation is required to better support auto transformations and mapping tools","Enhancement Request",Critical,Closed,"2015-03-20 18:01:46","2015-03-20 18:01:46",8
Mule,"Domains are not well disposed and get reused on redeploy.","Domains are cached on creation but they are not correctly removed on dispose so on redeployments they get reused.",Bug,Major,Closed,"2015-03-19 18:11:47","2015-03-19 18:11:47",5
Mule,"Add a backwards compatiblity setting to support Devkit artifacts which violate JSR-330","Per the work done on MULE-7588, Mule now supports the JSR-330 spec. However, as DEVKIT-1539 explains, Devkit is currently violating that spec.    Devkit will fix this for the latest version but we need to add a compatibility setting to allow artifacts generated with older versions of devkit to function. This will work by customizing the injecting post processor to detectinstances which instances are devkit generated and skip dependency injection on them ",Bug,Critical,Closed,"2015-03-19 18:02:24","2015-03-19 18:02:24",5
Mule,"Reuse OperationImplementation instances instead of creating and injecting new ones each time","Currently the ext-api is creating a new instance of the operation implementation for each event. That is very confortable for the user, but it has performance considerations associated to garbage collection and the new to perform dependency injection all the time.     We need to move to a schema in which:     * One instance is created per configuration and reused as long as that configuration lives  * The Class holding the method annotated with @Operation needs to have a constructor which receives a single argument which is the configuration to use. Failure to provide such a constructor which result in the application not starting  * Upon creation, Mule will inject dependencies on this class but will not add it to the registry  * This also means that it will no longer be valid to obtain things like the MuleEvent through a @Inject annotation, you have to receive it a method argument, which means that the invoker needs a refresh too","Enhancement Request",Major,Closed,"2015-03-19 14:14:32","2015-03-19 14:14:32",8
Mule,"XmlToXMLStreamReader does not support OutputHandler as source type","XmlToXMLStreamReader declares OutputHandler as source type (in its superclass) but fails to convert that type.",Bug,Critical,Closed,"2015-03-19 14:01:46","2015-03-19 14:01:46",3
Mule,"Leverage MULE-7588 in extensions api","Leverage the work done in MULE-7588 to implement a corrected lifecycle and dependency injection in the extensions api","Enhancement Request",Major,Closed,"2015-03-19 13:51:44","2015-03-19 13:51:44",8
Mule,"Collection splitter is not setting the group size when payload is an Iterator","Salesforce queries return an iterator and when a collection splitter is used, it fails to aggregate the collection after because the group size is set to -1.  Attached mule config    This seems to be happening because this class https://github.com/mulesoft/mule/blob/bfb3a17263d1e4b32ee10272cbf710a2bf41b16b/core/src/main/java/org/mule/routing/outbound/IteratorMessageSequence.java is used from https://github.com/mulesoft/mule/blob/1dbf6e09a651184e9c54ec8988ecf1907cbdd58f/core/src/main/java/org/mule/util/collection/EventToMessageSequenceSplittingStrategy.java and it is setting UNKNOWN_SIZE as Group size for all Iterator payloads",Bug,Critical,Closed,"2015-03-18 23:10:14","2015-03-18 23:10:14",5
Mule,"Backport MULE-8315 and MULE-7789 to all maintenenance branches","As part of the library updates related to security vulnerabilities, there is a couple of changes that must be backported to 3.5.x, 3.4.x, 3.3.x, 3.2.x and 3.1.x:    MULE-7789: needed to remove the usage of tomcat-util artifact (this one is already included in 3.5.x branch)  MULE-8315: needed to upgrade tomcat libraries to a newer version",Task,Blocker,Done,"2015-03-18 21:07:14","2015-03-18 21:07:14",8
Mule,"Unable to use a keystore with $ in its path","In IOUtils, method getResourceAsStream tries to parse the resource name and assumes it's a placeholder if $ is found, which causes an exception to be raised since it is not.",Bug,Major,Closed,"2015-03-18 12:19:46","2015-03-18 12:19:46",0
Mule,"mule-esb-maven-tools pom.xml dependes on mule-artifact-archiver with wrong version","mule-esb-maven-tools pom.xml dependes on mule-artifact-archiver version 1.0-SNAPSHOT but should be 1.1-SNAPSHOT.  Also, remember that this version should be changed to 1.1 on release time.",Bug,Major,Closed,"2015-03-17 18:31:23","2015-03-17 18:31:23",0
Mule,"Add support for PGP signature verification","The PGP module is able to decrypt signed messages, but is not performing any verification on the signature. Add support to verify PGP signatures, and also consider that the key used to sign might not match the key used to encrypt.","Enhancement Request","To be reviewed",Resolved,"2015-03-13 16:59:44","2015-03-13 16:59:44",8
Mule,"Session vars lost in foreach that uses outbound endpoint","After a foreach that calls an outbound endpoint and modifies a session property, the modification can only be seen in the event's session but not the event's message session properties unless a new event is generated.",Bug,Major,Closed,"2015-03-13 15:08:38","2015-03-13 15:08:38",0
Mule,"Can't uncompress zip files containing no entries for folders","Mule requires ZIP files that contain entries for folders and files like this:  x/lib  x/lib/a.jar  x/lib/b.jar    When the zip file contains only entries for files lie this:  x/lib/a.jar  x/lib/b.jar    The file cannot be processed correctly.",Bug,Major,Closed,"2015-03-13 01:59:31","2015-03-13 01:59:31",2
Mule,"Minor fixes for support Java 8.","Required fixes to run our tests with Java 8.",Bug,Major,Closed,"2015-03-12 18:07:38","2015-03-12 18:07:38",0
Mule,"Release Mule ESB Maven Tools (v 1.1)","We need to release version 1.1 (ideally for 3.7) since this version now includes a proper test case for apps that belong to a domain. The release will also mean reviewing the current solution and testing the tools.",Task,Major,Done,"2015-03-12 15:18:41","2015-03-12 15:18:41",8
Mule,"Upgrade ActiveMQ to version 5.11.0","We need to evaluate the effort and migrate ActiveMQ dependencies to 5.11.0 to take advantage of the latest bugfixes.",Task,Major,Done,"2015-03-11 16:35:19","2015-03-11 16:35:19",3
Mule,"Modify substitutableInt restriction to allow APIGateway extension language ","API Gateway has an extension language composed by:   ![ <language extension> ]   This extension cannot be used in the port property of the listener-config and request-config, because of the substitutableInt restriction.    The actual regex in the restriction is:  <xsd:pattern value=(\#\[.+\]|\$\{[^\}]+\})/>    Including the Gateway language extension should be:   <xsd:pattern value=(\#\[.+\]|\$\{[^\}]+\}|\!\[.+\])/>    ","Enhancement Request",Critical,Closed,"2015-02-10 21:29:10","2015-02-10 21:29:10",1
Mule,"Add http.relative.path to the list of inboundProperties in the new http module","Add http.relative.path property to inboundProperties. This property should be the result of removing the basePath part of the request path.","Enhancement Request",Major,Closed,"2015-03-09 14:38:34","2015-03-09 14:38:34",0
Mule,"Update commons-io in mule-commons to match the one used in mule","In mule-common the commons-io version is 1.4:      While mule is declaring the version to 2.4:      This happens both in 3.6.x and master branches.",Bug,Minor,Closed,"2015-03-06 16:46:03","2015-03-06 16:46:03",1
Mule,"Source attribute in http requester not working when payload is null","When the source attribute is specified in an http:request element, it is ignored when the payload of the Mule message is NullPayload.    Example:        <http:request-config name=config host=localhost port=${httpPort} />      <http:listener-config name=listenerConfig host=localhost port=1234 />        <flow name=formParam>          <http:listener config-ref=listenerConfig path=/* allowedMethods=GET,POST />          <set-variable variableName=httpBody value=#[{'testName1':'testValue1', 'testName2':'testValue2'}] />          <!--              With this line uncommented, the map is sent. If not, the POST request has no body even if the source attribute contains a map.              <set-payload value=test />            -->          <http:request config-ref=config path=testPath method=POST source=#[flowVars.httpBody] />      </flow>",Bug,Major,Closed,"2015-03-05 17:39:55","2015-03-05 17:39:55",5
Mule,"README.txt in <MULE_HOME>/logs is outdated","The README.txt has not been updated to reflect the changes derived from the implementation of log4j 2.",Bug,Major,Closed,"2015-03-04 12:53:19","2015-03-04 12:53:19",1
Mule,"After upgrade CXF to 2.7.15 some jaxws-client configurations fail when using a proxy.","When the service method receives a Holder OUT parameter and then a String, the string value is not received by the server.  If the method returns void, then the value placed in the OUT parameter does not arrive the to client.    See org.mule.module.cxf.HolderTestCase, method testClientProxyEcho3Holder.",Bug,Major,Closed,"2015-03-03 19:48:04","2015-03-03 19:48:04",8
Mule,"HTTP Request returns 401 when given correct authentication","A prospect has not been able to connect to a web service hosted in IIS using Digest auth in the HTTP listener.  They could connect using a java class with same credentials.    none of the following combination worked as username in the HTTP connector: {realm\username, realm\\username, username:realm.    Here is the webservice I used to reproduce the error:  http://httpbin.org/digest-auth/auth/user/passwd  Credentials {username=user, password=passwd}  If needed: port=80; realm=<EMAIL>    Returned is 401: unauthorized",Bug,Critical,Closed,"2015-03-02 18:44:00","2015-03-02 18:44:00",8
Mule,"Review and update classloading documentation","Documentation of mule classloading at http://www.mulesoft.org/documentation/display/current/Classloader+Control+in+Mule is not accurate and is out of date.  There are missing things like application plugins, new domain classloading, etc",Task,Major,Done,"2015-02-27 17:47:57","2015-02-27 17:47:57",5
Mule,"NPE when Content-Disposition header is absent from multipart-response","NPEs are being reported ( http://stackoverflow.com/q/28733880/387927 ) when the {{Content-Disposition}} header is not present in HTTP multi-part responses. Using this header is optional, it can't be assumed present.    The crux of the problem is here: https://github.com/mulesoft/mule/blob/mule-3.x/modules/http/src/main/java/org/mule/module/http/internal/HttpParser.java#L94        If the header is missing, {{[0]}} is called on {{null}}.",Bug,Major,Closed,"2015-02-26 15:41:14","2015-02-26 15:41:14",0
Mule,"Domain redeployment fails with zip file closed","When doing a redeploy of a domain it fails with zip file closed when trying to reload some classes.",Bug,Blocker,Closed,"2015-02-25 18:14:34","2015-02-25 18:14:34",5
Mule,"HTTP listener fails when receiving empty request with content type x-www-form-urlencoded","When a POST request with content type application/x-www-form-urlencoded and empty body is sent to an http:listener, a 500 response is received and the flow is not executed. This happens because of a ClassCastException inside the listener. The flow should be executed, with NullPayload in the Mule message.",Bug,Major,Closed,"2015-02-23 17:22:45","2015-02-23 17:22:45",1
Mule,"Fix Mule ESB Maven Tools testing for apps using domains.","1.1-SNAPSHOT right now depends on changes for 3.7 that haven't been done yet. We need to modify it so that ExampleFunctionalTestCase extends from DomainFunctionalTestCase if the app belongs to a domain.",Task,Major,Done,"2015-02-19 16:37:30","2015-02-19 16:37:30",3
Mule,"Application Plugins (Cloud Connectors) support for external dependencies","As a user I will like to use a connector such as Siebel, packaged as a plugin deployed in the plugins folder and be able to use external dependencies that cannot be shipped inside the connector.","Enhancement Request",Major,Closed,"2015-02-19 16:20:18","2015-02-19 16:20:18",8
Mule,"Improve Jenkins email notifications to add the info about who made the last commit ","Mail Notifications of failure don’t have the message of the commit which launch the build.","Enhancement Request",Minor,Closed,"2015-02-19 15:49:57","2015-02-19 15:49:57",3
Mule,"HTTP delete body is not allowed","I am not able to call HTTP delete verb from mule HTTP connector with body .   ","Enhancement Request",Major,Closed,"2015-02-19 01:05:28","2015-02-19 01:05:28",5
Mule,"write a spec on new lifecycle and registry consolidation","Write and circulate a spec on MULE-7588",Task,Major,Done,"2015-02-18 22:37:54","2015-02-18 22:37:54",8
Mule,"Review and merge MULE-7588","Review and merge MULE-7588",Bug,Critical,Closed,"2015-02-18 22:29:18","2015-02-18 22:29:18",5
Mule,"WS consumer not evaluating flow vars in the serviceAddress when used with the new HTTP connector","WS consumer allows MEL expressions in the serviceAddress property. Since 3.6, when the new HTTP connector is used by default, flowVars are not recognized in MEL expressions in the serviceAddress. The only variables that work are properties related to the Mule message. With the HTTP transport it works OK.  This is because the outbound call uses muleClient to use the HTTP requestor, and the MuleEvent that carries the flowVars is lost.  To reproduce, modify DynamicAddressFunctionalTestCase to use a flow var instead of an inbound property.",Bug,Critical,Closed,"2015-02-13 18:22:28","2015-02-13 18:22:28",5
Mule,"HTTP requester always add a / at the beginning of the request URI","An http requester with this config http:request path=something should generate a request with uri something but it's generating /something instead.",Bug,Critical,Closed,"2015-02-13 00:00:50","2015-02-13 00:00:50",5
Mule,"Schema locations for includes are not being fixed.","When a WSDL file includes types from another file, the schema location is not fixed to a proper URI. This prevents the metadata from being generated and the check for input parameters to be done, so the payload is used as SOAP body and operations without parameters fail.",Bug,Critical,Closed,"2015-02-12 18:59:43","2015-02-12 18:59:43",0
Mule,"HTTP requester throws timeout errors with POST request","Appears to be related to the Expect: 100 continue header with Grizzly, that is found in HTTP/1.1 POST request.  The bug reproduces in ESB 3.6 and 3.6.1, also GW 1.4.    attached is the jmx file, using this proxy app for ESB (no Gateway tags).  https://github.com/mulesoft/performanceworks/blob/master/APPS/PROXY-MCD/100B/http_module_proxy/proxy.xml    If you change the method to GET instead of POST, you will not get the error.    You should be able reproduce it easily.    Wai    ERROR 2015-02-11 00:29:48,112 [[PabloTestAPI_NewHTTP].proxyConfig.worker.09] org.mule.exception.DefaultMessagingExceptionStrategy:     ********************************************************************************    Message               : Error sending HTTP request. Message payload is of type: BufferInputStream    Code                  : MULE_ERROR-29999    --------------------------------------------------------------------------------    Exception stack is:    1. null (java.util.concurrent.TimeoutException)      org.glassfish.grizzly.impl.SafeFutureImpl$Sync:357 (null)    2. Error sending HTTP request. Message payload is of type: BufferInputStream (org.mule.api.MessagingException)      org.mule.module.http.internal.request.DefaultHttpRequester:190 (http://www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/MessagingException.html)    --------------------------------------------------------------------------------    Root Exception stack trace:    java.util.concurrent.TimeoutException            at org.glassfish.grizzly.impl.SafeFutureImpl$Sync.innerGet(SafeFutureImpl.java:357)            at org.glassfish.grizzly.impl.SafeFutureImpl.get(SafeFutureImpl.java:264)            at com.ning.http.client.providers.grizzly.GrizzlyResponseFuture.get(GrizzlyResponseFuture.java:173)        + 3 more (set debug level logging or '-Dmule.verbose.exceptions=true' for everything)    ********************************************************************************",Bug,Major,Closed,"2015-02-11 01:11:57","2015-02-11 01:11:57",13
Mule,"DB Drivers should be removed from DriverManager when MuleApplicationClassLoader is disposed.","Our modules and other libraries could load DB drivers from the Mule App class loader, those drivers should be deregistered when that class loader is disposed because if not they remain unreachable producing memory leaks.",Bug,Major,Closed,"2015-02-09 20:13:45","2015-02-09 20:13:45",0
Mule,"It is not possible to define more than one keystore/truststore","The TLS contexts introduced in 3.6 interfere with each other. Reproduce with the following scenario, where there are two flows that consume an HTTPS service, one with the server certificate in the truststore, and the other one without it. The first flow should work but the second one should fail. Currently, they both work correctly.        <http:request-config name=validCertHttpConfig protocol=HTTPS host=localhost port=${httpsPort}>          <tls:context>              <tls:trust-store path=trustStore password=mulepassword />          </tls:context>      </http:request-config>        <flow name=validCertFlow>          <http:request config-ref=validCertHttpConfig path=requestPath method=POST />      </flow>          <http:request-config name=missingCertHttpConfig protocol=HTTPS host=localhost port=${httpsPort} >         <!-- No certificate has been configured to test certificate verification -->      </http:request-config>        <flow name=missingCertFlow>          <http:request config-ref=missingCertHttpConfig path=requestPath method=POST />      </flow>",Bug,Critical,Closed,"2015-02-09 15:02:00","2015-02-09 15:02:00",5
Mule,"Upload 3.6.0 javadocs","Upload javadocs to: https://www.mulesoft.org/docs/site/3.6.0/apidocs",Task,Critical,Done,"2015-02-06 17:55:49","2015-02-06 17:55:49",5
Mule,"Upgrade CXF to 2.7.15 version","Mule 3.7 needs to run using Java 8, but current CXF major version (2.5) does not support it, and we have to move to version 3.  We need to define how to provide (if possible) backwards compatibility and how to use the new version.",Task,Critical,Done,"2015-02-05 20:03:23","2015-02-05 20:03:23",13
Mule,"Upgrade to grizzly 2.3.19","See fixes includes multiple bug fixes plus two improvments I requested:    1) SNI Support out of the box with SSLFilter. https://java.net/jira/browse/GRIZZLY-1737  2) Mechanism to limit size of send queue and this direct memory use. https://java.net/jira/browse/GRIZZLY-1730",Bug,Critical,Closed,"2015-02-05 14:37:57","2015-02-05 14:37:57",8
Mule,"Client credentials does not fail if it could not retrieve access token","When using client credentials, start up of the application does not fail if mule was not able to retrieve an access token.    Additionally some logging information must be added for troubleshooting.","Enhancement Request",Critical,Closed,"2015-02-04 16:16:06","2015-02-04 16:16:06",5
Mule,"HTTP static resource component fails with HTTP listener","The HTTP static resource component fails with the new HTTP listener component because it doesn't extract correctly the listener path to define the resource to return.","Enhancement Request",Critical,Closed,"2015-02-03 23:18:55","2015-02-03 23:18:55",5
Mule,"Disable SSLv3 by default on FIPS 140-2 scenario","The file tls-fips140-2.conf doesn't restrict enabled protocols by default.  When enabling FIPS 140-2 on wrapper.conf, SSLv3 gets enabled by default.",Bug,Blocker,Closed,"2015-02-03 19:59:19","2015-02-03 19:59:19",1
Mule,"Allow cipher suite and protocol configuration per connector","TLS cipher suite configuration is done through conf/tls-default.conf for all the Mule Server. We need a way to allow per connector configuration.    Use cases:  - Connect to a legacy API uses a vulnerable cipher suite for which the vulnerability has been mitigated, but I don't want to allow that cipher suite for other consumed APIs.  - Because of internal security policy I need to use a particular set of cipher suites to publish an API but I need to consume an external API wich uses a different cipher suites not allowed internally.","Enhancement Request",Critical,Closed,"2015-02-03 14:04:30","2015-02-03 14:04:30",5
Mule,"Http Listener allows inexistent keystore","When I create an https listener Mule validates that the trustsore file exists but it doesn't validate that the keystore file exists. Try with the attached config.   Create the truststore like this:    keytool -genkey -alias mule -keyalg RSA -keystore keystore.jks -dname CN=Mule, OU=Engineering, O=MuleSoft, L=BA, ST=BA, C=AR",Bug,Minor,Closed,"2015-02-02 16:27:04","2015-02-02 16:27:04",5
Mule,"401 response received, but no WWW-authenticate header was present","I've been searching and and tinkering since last week to figure out what is wrong with this, but no matter how I tried it still gives me this error in the console.    I'm testing the http connector (3.6 EE) against twitter ReST API vs testing with Chrome's POSTMAN Rest client.    With the POSTMAN client, it is working fine when POSTing status update. However with Mule it fails and gives me the error mentioned. I even added WWW-Authenticate (replaced Authorization) before the call to http connector itself, and tried with adding it to header as well, still everything fails.    Note: For the get timeline it is working both on Postman rest client and http connector, but when I tried on POSTing to status/update.json, Postman is successful, while Anypoint http connector fails.  ",Bug,Critical,Closed,"2015-02-02 10:55:26","2015-02-02 10:55:26",5
Mule,"HTTP Listener does not handle Expect: 100-Continue (RFC 2616) header correctly","This can cause depending the scenario:  1) 1s latency overhead  2) Requests to hang  ",Bug,Blocker,Closed,"2015-01-29 21:49:25","2015-01-29 21:49:25",8
Mule,"OAuth2 postAuthorize() with an expired token fails even if token was refreshed","The Box connector has a postAuthorize method that invokes one of the connector's processors.  When one of the connector's processors is invoked and the postAuthorize is called with an expired access token, the BaseOAuth2Manager is able to refresh the access token but re-throws the token expired exception which makes processor invocation fail.    I believe the issue can be found in the following method:  org.mule.security.oauth.BaseOAuth2Manager.postAuth(OAuth2Adapter, String)  ",Bug,Major,Closed,"2015-01-29 21:06:53","2015-01-29 21:06:53",1
Mule,"Discuss how to: Mule Test Harness should include Mule jars in test classpath","Now when a user creates a Maven Mule project when he runs the tests gets errors because not including in the classpath Mule jars. We should have a way  to make tests include those jars.   One possible solution is to make the archetypes include Mule ESB distribution dependency with runtime scope. This way all transitive dependencies would be included when running tests.","Enhancement Request","To be reviewed",Open,"2015-01-28 14:03:30","2015-01-28 14:03:30",5
Mule,"Document new HTTP Connector","Add documentation for HTTP Connector",Task,Critical,Done,"2015-01-27 16:25:43","2015-01-27 16:25:43",5
Mule,"HttpRequester not configuring TLS cipher suites and protocols","The HTTP requester from the new module is not configuring restricted protocols and cipher suites for TLS.",Bug,Critical,Closed,"2015-01-26 18:22:01","2015-01-26 18:22:01",8
Mule,"Add support for inline named parameters inside database message processors","Add support for named parameters inside database message processors. (select, insert, etc)    Example:  ","Enhancement Request",Major,Closed,"2014-01-15 16:30:07","2014-01-15 16:30:07",3
Mule,"Mule 3.6 HTTPS Request Connector does not validate certificate presented by remote server","The server SSL certificate is not validated by requestor at all.",Bug,Blocker,Closed,"2015-01-23 16:56:40","2015-01-23 16:56:40",8
Mule,"Create functional tests for TLS SNI support","We have no tests today",Task,Critical,Done,"2015-01-23 16:52:39","2015-01-23 16:52:39",0
Mule,"Test support for TLS SNI Extension in Http Module Requester","Currently not supported.    Also review listener support.","Enhancement Request",Critical,Closed,"2015-01-23 15:33:09","2015-01-23 15:33:09",8
Mule,"Support TLS SNI Extension in Http OutboundEndpoint","Java does not send SNI because of the the socket is created.    While Java 7 supports the SNI extension with TLS it only uses it if the hostname is specified when the Socket is created rather than a InetAddress (it doesn't get hostName from InetAddress).","Enhancement Request",Major,Closed,"2015-01-23 15:27:23","2015-01-23 15:27:23",5
Mule,"Mule global log config is not found when application has plugins","If an application uses plugins, then the MULE_HOME/conf/log4j2.xml file is not found.     This is because when the application has plugins, then the parent classloader is a PluginClassLoader which is unable to locale resources at MULE_HOME/conf.    The LoggerContext selector should default to the file is for whatever reason the classloader is unable to find that resource.",Bug,Major,Closed,"2015-01-23 14:32:23","2015-01-23 14:32:23",0
Mule,"Avoid to set the same message listener on the message consumer ","Some JMS MessageConsumer doesn't allow to set the MessageListener once their are started (for example the one from Qpid). That causes the JMS connector to nor reconnect properly.",Bug,Critical,Closed,"2015-01-22 20:15:20","2015-01-22 20:15:20",0
Mule,"Deprecate org.mule.util.scan classes in Core in order to support Java 8","Our current version of ASM (3.3.1) is not fully compliant with Java 8, so we need to deprecate it use for 3.7 M1 and look for a replacement in 3.7 M2.",Task,Major,Done,"2015-01-22 18:49:48","2015-01-22 18:49:48",5
Mule,"The changes in MULE-7742 impacted in performance, a better solution should be used.","Review that changes in MULE-7742 and the previous changes proposed by <USER>",Bug,Critical,Closed,"2015-01-22 18:39:57","2015-01-22 18:39:57",13
Mule,"SFTP inbound-endpoint autoDelete=false does not work","The connector's autoDelete value is the only one taken into account, so it can't be overridden and it's default value is true. This means as a workaround you can set the connector's value to false but then that would be the case for all endpoints.",Bug,Major,Closed,"2015-01-21 14:14:53","2015-01-21 14:14:53",0
Mule,"Rename extensions -> extension in java package name","Also ExtensionManager is better than ExtensionsManager in english IMO.",Task,Major,Done,"2015-01-19 18:20:14","2015-01-19 18:20:14",1
Mule,"Allow restriction on which types of operations can be nested","Currently, the ext-api supports nested operations through the use of arguments of type NestedProcessor. However, the generated schema allows any type of message processor to be nested.    There're cases in which it's necessary to limit that to specific groups. For those cases, a new annotation is created: @RestrictedTo(type=XX.class)    The type used in that annotation has to be annotated with @Extensible. By doing that, the SchemaGEnerator will generate a specific named group for that extensible type and only items on that group will be allowed as nested for that operation","Enhancement Request",Major,Closed,"2015-01-19 16:17:12","2015-01-19 16:17:12",5
Mule,"Allow extension components to extend existing functionality","There're cases in which an operation implemented through the ext-api should be part of an specific substitution group. Because substitution groups are an XSD specific concept and because the same concept might be necessary in other DSL types, we need a mechanism to denote extensibility that goes beyond Java's extends and implements keywords but is still type related.    For that purpose, two new annotations are created:    @Extensible: means that a given type is extensible by another extension. It doesn't mean type subclassing, but extension from a functionality point of view. This annotation has an optional String alias() attribute to allow a better experience when generating XSD    @ImplementationOf(type=XX.class): This annotation can be used on a class or method implementing operations. It means that the affected operations are to be part of a substitution group defined by an extensible type. The type argument in this annotation is mandatory and has to be a type that is annotated with @Extensible","Enhancement Request",Major,Closed,"2015-01-19 16:13:49","2015-01-19 16:13:49",3
Mule,"Supported and recommended JRE version should be at least 1.7.0_60","In MULE-6866 we upgraded to Groovy 2.3.7-indy but according to [Groovy docs|http://groovy.codehaus.org/InvokeDynamic+support] there are known issues with Java versions lower than 7u60. We should increase supported and recommended versions to 1.7.0_60",Bug,Critical,Closed,"2015-01-19 14:24:35","2015-01-19 14:24:35",1
Mule,"Integrate Mule ESB Matchers","# Test matchers  ## Pass and fail scenarios  ## Test error description  # Verify that we didn't created a similar one yet  # Documentation",Task,Major,New,"2015-01-16 15:53:40","2015-01-16 15:53:40",13
Mule,"Remove functional-tests jar from distributions","Validate with community/support/developers",Task,Major,New,"2015-01-16 15:06:06","2015-01-16 15:06:06",5
Mule,"Do not publish test-jar for any module that is not test harness","We publish test source code, we don't need to distribute test binaries except for the test harness.",Task,Major,New,"2015-01-16 15:03:31","2015-01-16 15:03:31",8
Mule,"Move tests/functional tests to tests/integration","tests/functional should be only for test harness",Task,Major,Done,"2015-01-16 15:00:59","2015-01-16 15:00:59",3
Mule,"Core extension dependencies are not initialized in order","Core extensions are initialized using the discorevy order instead of the order determined after resolving the dependencies.  ",Bug,Critical,Closed,"2015-01-15 22:08:44","2015-01-15 22:08:44",1
Mule,"SftpMessageReceiver doesn't release the lock on files","SftpMessageReceiver doesn't release the lock on files.",Bug,Major,Closed,"2015-01-15 21:44:09","2015-01-15 21:44:09",0
Mule,"Fail to expand properties when using property placeholder shared in a domain","Steps:    # Deploy the below application and domain  # Put domain.properties in domain root dir  # bin/mule    * Expected: Mule starts and flow listens on 127.0.0.1:8811/in1 and 127.0.0.1:8811/in2  * Actual: Mule fails to start because $[http.port] is an invalid value for port  * Note: I put domain.properties file in domain root directory because in domain/classes it is not found  ",Bug,Blocker,Closed,"2015-01-14 20:28:15","2015-01-14 20:28:15",5
Mule,"Remove Unused Scripts","We need to see which of these scripts in buildtools/scripts are still being used, and remove the ones that are not:    CheckReintegratedWorkingCopy.groovy  DeployArtifacts.groovy  EclipseXmlCatalog.groovy  ListExcludedTests.groovy  ListIncludedTests.groovy  ListSchema.groovy  ListTestExclusions.groovy  ScanLicenseHeaders.groovy  SchemaStatistics.groovy  SvnJiraParser.groovy  SvnJiraParser.sh  SvnPropertiesSetter.sh  SwitchLicenseHeader.sh  SwitchSchemaVersion.groovy  SwitchVersion.groovy  XmlCatalogFromMuleStandaloneDistro.groovy  build.sh  compare_exclusions.sh  mkpom.sh  mule_root.sh  mule_undo.sh  tabstospaces.sh  update_poms.sh  ",Task,Major,New,"2015-01-13 13:29:37","2015-01-13 13:29:37",5
Mule,"Build number Maven plugin should be activated always","We are currently executing maven-build-number-plugin only in release profile, this should be ran for all profiles.",Bug,Critical,Closed,"2015-01-12 15:59:31","2015-01-12 15:59:31",3
Mule,"Implement a validations extensions","Implement a validations extensions following the spec defined in MULE-8216","Enhancement Request",Major,Closed,"2015-01-09 13:53:35","2015-01-09 13:53:35",0
Mule,"Write spec for validations extension","Write and validate a Spec for a new extension module for validation purposes.",Task,Major,Done,"2015-01-09 13:50:45","2015-01-09 13:50:45",8
Mule,"Moving packages on spring-config module from org.mule to org.mule.module.springconfig","Each module/bundle must use different packages names for OSGi.   Spring cnofig module uses org.mule prefix which belongs to mule-core",Task,Major,Done,"2015-01-09 13:46:11","2015-01-09 13:46:11",3
Mule,"Move packages on annotations module from org.mule to org.mule.module.annotations","Each module/bundle must use different packages names for OSGi.   Annotations module uses org.mule prefix which belongs to mule-core",Task,Major,Done,"2015-01-09 13:44:14","2015-01-09 13:44:14",3
Mule,"Cleanup the @Operation annotation parameters","The @Operation parameter takes a name argument. That should be remove since directly contradicts the consistency that the API tries to enforce    The annotation also contains an acceptedPayloadTypes which is no longer used. That should be cleaned up","Enhancement Request",Major,Closed,"2015-01-08 18:25:22","2015-01-08 18:25:22",1
Mule,"Support parameter grouping in Configurations and Operations","There are cases in which a group of parameters are frequently used together, for which it makes sense to treat them as a group.    The extensions api already supports mapping pojos directly in the XML, but in same cases which group is preferred as parameters rather than a top level object.    To enable that, the @Parameters operation will be created        The outcome of the code above is a configuration with two parameters called 'color' and 'mode', one required and the other optional.  The configuration has no attribute called options. If the Options class were to have another field also annotated with @Parameters, then such fields will be ignored.    In the same way, the annotation can be applied to a class holding operations:        In this case, both operations will have three parameters: message, color and mode.    The last use case for this annotation is to have nested parameter classes:      In this last example, the configuration/operation that is augmented with this extra parameters will have the sum of Options and MoreOptions parameters. Those parameters will be flattened, meaning that the model will contain no reference to the fact that the MoreOptions parameters were nested inside Options.    The field must be a Java bean property (ie it needs to have setters and getters matching the field name).","Enhancement Request",Major,Closed,"2015-01-07 22:10:36","2015-01-07 22:10:36",8
Mule,"Mule Integration QA build is failing because of wrong sxc dependency version","tests/integration module is failing because is trying to retrieve sxc version, which is not needed.",Bug,Blocker,Closed,"2015-01-07 16:27:31","2015-01-07 16:27:31",3
Mule,"Inconsistent implementation of streamingMode=NEVER between listener and requestor.","There are a number of cases tested in HttpListenerResponseStreamingTestCase where even when responseStreamingMode=NEVER chunking is still used.    In my mind it should be the AUTO mode that decided if it should use chunking based on i) payload type ii) presence of headers.  If there is a mode called NEVER, it should never do chunking otherwise this is confusing/misleading.    On the other hand, <request> currently throws an exception in this scenario.    Update behaviuor so that in both cases:    AUTO:    - Chunking if payload is InputStream and no Content-Length header present.     - Else delete transfer-encoding header if present and log.    ALWAYS:  - Delete content-length header and log.    NEVER:  - Delete transfer-encoding header and log.            ",Bug,Critical,Closed,"2015-01-07 02:23:08","2015-01-07 02:23:08",5
Mule,"Listener should respect keep-alive with HTTP 1.0 and disable chunking.","With HTTP 1.0 KeepAlive header, the http response from Mule returns Connection: Close when streamingMode is ALWAYS or the payload is an InputStream.    I'm not 100% sure if HTTP 1.0 officially supports chunking, but I am sure that the keepAlive header should be respected an chunking shouldn't affect this.",Bug,Critical,Closed,"2015-01-06 14:37:55","2015-01-06 14:37:55",8
Mule,"HTTP requester not adding the reason phrase in the response","The HTTP requester is adding an inbound property with the status code of the response, but no property with the reason phrase. Currently there is no way of getting the reason phrase of the response, analyze if it makes sense to add another inbound property with the reason phrase.    The status code validator should also include the reason phrase when failing due to an invalid status code in the response. This is useful when consuming REST APIs that add information in the reason phrase of an error status code response.",Bug,Critical,Closed,"2015-01-05 17:57:32","2015-01-05 17:57:32",5
Mule,"Exception in HTTP listener when path=/ and basePath=/","When using an http:listener with path=/, and referencing a listener-config where basePath=/, then an ArrayIndexOutOfBounds exception is thrown when receiving a request.",Bug,Critical,Closed,"2015-01-05 17:42:34","2015-01-05 17:42:34",3
Mule,"Remove Maven warnings","We recently had an [issue|MULE-8113] with our Maven build, it wasn't including a dependency. When doing a little research I found that it was because a duplicated declaration of maven-jar-plugin. This root problem didn't appear when building the module, but when building an ancestor (distance 2). To avoid this kind of issues we must ensure that we don't have Maven warning in our builds.",Task,Critical,Done,"2014-12-23 03:41:12","2014-12-23 03:41:12",8
Mule,"Listener response streaming only returns part of body.","If you edit this test case to use larger body sizes, then tests begin to fail:    org.mule.module.http.functional.listener.HttpListenerResponseStreamingTestCase",Bug,Blocker,Closed,"2015-01-02 16:48:23","2015-01-02 16:48:23",5
Mule,"Outbound endpoints should be correctly disposed when an app with shared resources is undeployed or redeployed.","If an app references a shared HTTP connector and uses a WS Consumer that creates an outbound endpoint, that endpoint is not correctly disposed and when the app is redeployed the connector continues using the previously created endpoint (the one that was created by the disposed app).",Bug,Major,Closed,"2014-12-30 20:20:16","2014-12-30 20:20:16",0
Mule,"Improve HTTP listener logging for usability","Mule does not log to show what host/port/path Mule listening on.  This is important for understanding what might be going on when things aren't working as expected, and existed with the existing http transport.    Also, error/logs related to listeners not being available should take into account allowedMethods otherwise errors like this which make no sense occur:      ",Bug,Critical,Closed,"2014-12-30 15:02:37","2014-12-30 15:02:37",3
Mule,"Mule starts when a request element has host/port undefined, only failing when request is used.","This should fail at startup, not in runtime.",Bug,Critical,Closed,"2014-12-30 14:58:27","2014-12-30 14:58:27",3
Mule,"Change the AsyncCompletionHandler in the HTTP requester to use a static logger","The AsyncCompletionHandler used by AHC in the HTTP requester uses a logger that is stored in an instance variable. Change it to use a class variable, to avoid loading the logger from the logger factory each time a request is sent (an AsyncCompletionHandler is created for each request).","Enhancement Request",Critical,Closed,"2014-12-29 22:37:44","2014-12-29 22:37:44",3
Mule,"HTTP Listener Server should return Method not supported","When there's at least one HTTP listener for a uri but the listeners for that uri do not support a given method an status code  405 Method Not Allowed should be return. Currently it's returning 404.",Bug,Critical,Closed,"2014-12-29 20:19:12","2014-12-29 20:19:12",5
Mule,"Problem sending outbound attachments in HTTP requester","When sending a multipart request, the requester assumes that each part is a file, and adds the corresponding headers (filename attribute at the beginning of the part, transfer-encoding: binary, etc). This makes the request to be invalid in some cases. Use case to test: upload a file to Box.    Example test (replace the dev token and the parent folder id):        <http:request-config name=requestConfig host=upload.box.com port=443 protocol=HTTPS responseTimeout=10000  />        <flow name=test>          <set-attachment attachmentName=attributes value={&quot;name&quot;:&quot;test.txt&quot;, &quot;parent&quot;:{&quot;id&quot;:&quot;12345678&quot;}} contentType=application/json />          <set-attachment attachmentName=test.txt value=Test content contentType=text/plain />            <http:request config-ref=requestConfig path=/api/2.0/files/content method=POST >              <http:request-builder>                  <http:header headerName=Authorization value=Bearer xxxxxxxxxxxxx/>              </http:request-builder>          </http:request>      </flow>    The requester sends a multipart request with the following format.    POST /api/2.0/files/content HTTP/1.1  Host: localhost:8082  Authorization: Bearer xxxxxxxxxx  MULE_ENCODING: UTF-8  Connection: keep-alive  Accept: */*  User-Agent: NING/1.0  Content-Type: multipart/form-data; boundary=Tdv259AB4D2JOrezEkOphg5Ikreks3mIO2jC  Content-Length: 463    --Tdv259AB4D2JOrezEkOphg5Ikreks3mIO2jC  Content-Disposition: form-data; name=attributes; filename=attributes  Content-Type: application/json  Content-Transfer-Encoding: binary    {name:test.txt, parent:{id:12345678}}  --Tdv259AB4D2JOrezEkOphg5Ikreks3mIO2jC  Content-Disposition: form-data; name=test.txt; filename=test.txt  Content-Type: text/plain  Content-Transfer-Encoding: binary    Test content  --Tdv259AB4D2JOrezEkOphg5Ikreks3mIO2jC--    The problem is the attributes part, which is sent as a file part. It shouldn't contain the filename attribute, and the transfer encoding shouldn't be binary. Postman just sends the following, and it works correctly:    Content-Disposition: form-data; name=attributes    {name:test.txt, parent:{id:12345678}}  ",Bug,Critical,Closed,"2014-12-29 17:21:27","2014-12-29 17:21:27",8
Mule,"HTTP Listener fails during initialization inside batch","When adding an http:listener inside the input of a batch job then the app fails during startup.    Seems that DefaultBatchEngine is asking for all the batch jobs during initialization, then the batch job manually executes initialize and injection over the input elements (http:listener) but at this point the HttpListenerConnectionManager has not bean registered (using registry bootstrap) so there's a null pointer during listener initialization. ",Bug,Blocker,Closed,"2014-12-29 16:07:14","2014-12-29 16:07:14",5
Mule,"Default HTTPS configuration in requester not working correctly","The protocol=HTTPS configuration in the request-config is ignored if there is no default TLS context factory in the registry.",Bug,Critical,Closed,"2014-12-22 18:06:59","2014-12-22 18:06:59",3
Mule,"HttpListener ParameterMap should behave as a Map","ParameterMap is a Map<String, String> and holds the values of query parameters, uri parameters and POST params.  The problem that currently have are:   - The parameter map is mutable when it should't   - It does not have an API in the interface that can be used by the user (there's an special method getAll used when a parameter returns a collection of values)   - it does not comply with the Map interface for Map<String, String> as it declares.    ",Bug,Blocker,Closed,"2014-12-22 17:28:06","2014-12-22 17:28:06",3
Mule,"Deprecate HTTP transport","Deprecate XML elements of the HTTP transport.",Task,Blocker,Done,"2014-12-22 14:04:31","2014-12-22 14:04:31",5
Mule,"Add protocol attribute to listener-config and request-config to improve usability","Currently is difficult for an user to realice how to configure HTTPS for listening HTTP requests or sending HTTP requests. The way to do that currently is by defining a TLS Context element (which can be empty for sending request, in such case it will use jvm default certificatess) inside the listener-config or de request-config element. That it's not straightforward if the user is working with XML and for users that do not know that SSL / TLS is the protocol behing HTTPS isn't either despite they use Studio.    The idea is to add a protocol attribute (with default value HTTP) in the listener-config and the request-config.  - Listener config:     - if user sets protocol=http or provides no values then we validate that the user didn't put a TlsContext.     - If user sets protocol=https we validate that the user provided a TlsContext with at least a keystore configured on it.   - Request config:     - if user sets protocol=http or provides no value then we validate that the user didn't put a TlsContext     - if user sets protocol=https and provides no TlsContext config then we create a TlsContext by default (implicitly) using the default jvm certificates  - if http is selected, port 80 is used by default  - if https is selected, port 443 is used by default    The usability improvements is:   From Studio the user has a much more easy way to find where to define the use of HTTPS since it's going to be in the main configuration section of both listener-config and request-config   From XML the user will see a hint from the XML content assistant to pick the protocol right in the listener-config element or request-config element.    With the new behaviour there's no reason to support an empty tls:context element in the config.  When we rebuild the current TCP transport ideally we can reuse the same mechanism as in HTTP (no idea what the protocol attribute would be called in that case) or add support for an empty tls:context again.  ","Enhancement Request",Blocker,Closed,"2014-12-19 13:34:09","2014-12-19 13:34:09",5
Mule,"Cannot log to application log for a failed deployment","Install latest snapshot (build c22fb549), create an application with the attached config and start using bin/mule -M-Dmule.agent.enabled=false.    Deployment fails as expected but there is a problem when trying to log to application log. See attached log.",Bug,Major,Closed,"2014-12-18 18:52:21","2014-12-18 18:52:21",8
Mule,"Redesign context builder discovery for OSGi","Current context builder discovery mechanism inspects all available jars searching for service properties files. That must be modified to work on an OSGi container.  In OSGi, transport discovery should follow white-board model so a context builder service can be used (with no OSGi knowledge) which would enable test running with not container to be able to properly create the mule context.","Enhancement Request",Major,Closed,"2014-12-18 17:34:55","2014-12-18 17:34:55",8
Mule,"Refactor transport discovery for OSGi","Current transport discovery mechanism inspects all available jars searching for service properties files. That must be modified to work on an OSGi container.  In OSGi, transport discovery should follow white-board model so a transport service can be used (with no OSGi knowledge) which would enable test running with not container to be able to properly create the mule context.","Enhancement Request",Major,Closed,"2014-12-18 17:33:06","2014-12-18 17:33:06",8
Mule,"Remove byte as a DataQualifier","Remove it",Bug,Minor,Closed,"2014-12-18 17:15:56","2014-12-18 17:15:56",1
Mule,"Make a Spike on consolidating all mule registries into a Spring one","Make a Spike on consolidating all mule registries into a Spring one",Task,Critical,Done,"2014-12-18 16:13:47","2014-12-18 16:13:47",13
Mule,"Spike on execution model of extensions api","Make it execute operations","Enhancement Request",Critical,Closed,"2014-12-18 16:06:48","2014-12-18 16:06:48",13
Mule,"Requests randomly fail (1 in 1M) with NPE, even at low conconcurrencies e.g. 50","Around 10 times in a million requests, the request fails due a null pointer exception caused by the future returning null instead of a valid response.    Class and line:  org.mule.module.http.internal.request.grizzly.GrizzlyHttpClient#send              response = future.get(responseTimeout, TimeUnit.MILLISECONDS);  ",Bug,Critical,Closed,"2014-12-17 19:05:25","2014-12-17 19:05:25",8
Mule,"HTTP listener fails with NPE when the message is filtered out","The following config is failing with NPE. It doesn't fail when the message is not filtered out.  Error:  java.lang.NullPointerException   at org.mule.module.http.internal.listener.HttpResponseBuilder.build(HttpResponseBuilder.java:77) ~[mule-module-http-3.6.0-M3-SNAPSHOT.jar:3.6.0-M3-SNAPSHOT]   at org.mule.module.http.internal.listener.HttpMessageProcessorTemplate.sendResponseToClient(HttpMessageProcessorTemplate.java:87) ~[mule-module-http-3.6.0-M3-SNAPSHOT.jar:3.6.0-M3-SNAPSHOT]   at org.mule.execution.AsyncResponseFlowProcessingPhase.runPhase(AsyncResponseFlowProcessingPhase.java:56) ~[mule-core-3.6.0-M3-SNAPSHOT.jar:3.6.0-M3-SNAPSHOT]   at org.mule.execution.AsyncResponseFlowProcessingPhase.runPhase(AsyncResponseFlowProcessingPhase.java:23) ~[mule-core-3.6.0-M3-SNAPSHOT.jar:3.6.0-M3-SNAPSHOT]",Bug,Blocker,Closed,"2014-12-17 15:22:18","2014-12-17 15:22:18",5
Mule,"100% errors with http listener under high concurrency","100% Failures at 8000 concurrency.  Http transport only has 0.32% failures, and jetty none.",Bug,Major,Closed,"2014-12-16 18:32:08","2014-12-16 18:32:08",8
Mule,"java.lang.IllegalStateException: Only owner thread can write to message still occures with http module",.,Bug,Critical,Closed,"2014-12-16 18:29:24","2014-12-16 18:29:24",5
Mule,"Create examples for HTTP module documentation","Create exmaples to include in documentation for new HTTP Module.",Task,Critical,Done,"2014-12-15 19:08:09","2014-12-15 19:08:09",13
Mule,"Malformed responses when Jersey sends a chuncked response","When a Jersey endpoint responds with a chuncked response, then the chunks are not correctly formed and the last one is not correctly finialized.    As a result, the response is garbled. ",Bug,Blocker,Closed,"2014-12-11 20:25:09","2014-12-11 20:25:09",5
Mule,"HTTP Connector OAuth Implicit Credentials","Need to support OAuth implicit credentials for new HTTP connector.","Enhancement Request",Critical,Closed,"2014-12-11 20:19:24","2014-12-11 20:19:24",8
Mule,"WS Security Signature support for WS consumer","We should support WS Security signature and verification capabilities in WS consumer.","Enhancement Request",Critical,Closed,"2014-12-11 17:08:01","2014-12-11 17:08:01",8
Mule,"WS Encryption support for WS Consumer","We should support WS Security encryption/decryption capabilities in WS consumer.","Enhancement Request",Critical,Closed,"2014-12-11 17:07:29","2014-12-11 17:07:29",8
Mule,"Support doc/literal with multiple message parts in ws consumer","WS Consumer should support doc/literal web services that have multiple message parts inside them.     Note: since WS consumer sets the payload to the body of the SOAP message, this means that it will have to have a wrapper element around the message parts.","Enhancement Request",Critical,Closed,"2014-12-11 17:04:52","2014-12-11 17:04:52",13
Mule,"Grizzly thread leaks","When running the CE test suite, you can see grizzly threads piling up to the point in which by the time the suite is almost over there's a gigantic amount of idle threads.    This leads to flakiness and in some environments it even fails the build because the host can't allocate more threads.    Additionally, it raises the concern about those threads being actually stopped when an application is undeployed on a live container.    Please trace and fix the leak and verify that those threads do not survive an application undeployment.",Bug,Blocker,Closed,"2014-12-11 13:57:09","2014-12-11 13:57:09",8
Mule,"HTTP Listener is storing only the first part of a MultiPart request as attachment","given the following request using RestAssured:        only the first part (description) is being stored as an inboundAttachment.    Using http:inbound instead of listener generates both attachments as expected.    failing test using listener:  https://github.com/mulesoft/apikit/blob/http-3.6/mule-module-apikit/src/test/java/org/mule/module/apikit/leagues/LeaguesHttpListenerTestCase.java    passing test using endpoint:  https://github.com/mulesoft/apikit/blob/http-3.6/mule-module-apikit/src/test/java/org/mule/module/apikit/leagues/LeaguesTestCase.java    in both classes the test in question is putMultiPartFormData()",Bug,Blocker,Closed,"2014-12-10 18:44:26","2014-12-10 18:44:26",8
Mule,"SERVER_ACCEPT IOEvents should not be processed using ThreadPoolExecutor","The custom IOStrategy being used in the http module (ExecutorPerServerAddressIOStrategy) is causing server_accept IO events to be processed in a worker thread.  This is not ideal, and not what the Grizzly implementatio do either.",Bug,Blocker,Closed,"2014-12-08 14:30:16","2014-12-08 14:30:16",0
Mule,"JUL loggers are not bridged to log4j2","Components like jersey and Grizzly are logging using JUL but that API is not bridged to log4j2.    JUL loggers should have the same treatment as the others do",Bug,Blocker,Closed,"2014-12-05 21:00:24","2014-12-05 21:00:24",3
Mule,"Log separation doesn't work after upgrading to log4j 2.1","Because of a change in Log4j's lifecycle, after upgrading to 2.1 the application logs never load their configuration which in practice means that log separation is disabled even though applications do have a separate logging context.",Bug,Blocker,Closed,"2014-12-05 19:02:46","2014-12-05 19:02:46",3
Mule,"HTTP listener not setting exception payload.","There's a scenario in CXF where an exception is thrown after calling an HTTP listener. An exception payload is expected but you get null.  Test is testServerClientProxyDefaultException and can be found in ExceptionStrategyTestCase.",Bug,Critical,Closed,"2014-12-05 15:25:41","2014-12-05 15:25:41",2
Mule,"HTTP Listener config throws NPE when a request is received but no listener is referencing the config","When no listener is referencing a listener-config, and a request is received in the configured port, a NPE is thrown in the server.    To reproduce, add this listener-config:      <http:listener-config name=customConfig host=localhost port=1234/>    Run the app, and then hit with a browser http://localhost:1234",Bug,Blocker,Closed,"2014-12-04 15:07:55","2014-12-04 15:07:55",3
Mule,"HTTP Listener Module is not adding the WWW-Authenticate header field in the response ","When you send bad basic credentials for authentication the response of the listener is not adding the WWW-Authenticate header field.     But in the case you don't send the authentication header credential it includes the WWW-Authenticate header field.     As I understand in the RFC (http://tools.ietf.org/html/rfc2616#section-10.4.2) the server has to add the WWW-Authenticate header field in both scenarios.    ",Bug,Major,Closed,"2014-12-04 14:25:49","2014-12-04 14:25:49",5
Mule,"Resource Not Found in HTTP should return a body with a clear message","HTTP Module returns 404 when a valid port is hit but there's no listener in it.",Bug,Major,Closed,"2014-12-03 21:30:19","2014-12-03 21:30:19",3
Mule,"Jetty http.context.path inbound property has a different value in 3.6 compared to 3.5","The jetty transport in 3.6.0-M3 is setting the http.context.path inbound property to a different value than 3.5    given the following endpoint address and request:     endpoint address:  http://localhost:8080/api   request:                 http://localhost:8080/api/console/index.html    in 3.6 we get:    http.context.path: /api/console/index.html    and in 3.5 the value was:    http.context.path: /api    the 3.5 behavior is the expected one.  ",Bug,Critical,Closed,"2014-12-03 21:24:46","2014-12-03 21:24:46",5
Mule,"Negative seek offset after queue file goes trough transaction recovery process","After an ungraceful shutdown of an application doing intensive use of durable transactional queues, the recovery process appends recovered records at the beginning of the queue and not at the end as it is expected to.    As a result, the entries index created by RandomAccessFileQueueStore is corrupted and the file can't be read.",Bug,Critical,Closed,"2014-12-03 20:41:22","2014-12-03 20:41:22",0
Mule,"StringIndexOutOfBoundsException when requester receives GET with wrong body","When sending a GET with content-type application/x-www-form-urlencoded and an incorrect form body it returns an empty response due to a java.lang.StringIndexOutOfBoundsException.    To reproduce run the following command using the configuration:        ",Bug,Major,Closed,"2014-12-03 16:58:44","2014-12-03 16:58:44",3
Mule,"Error in the XML Parser of the HTTP Module when the Header tag is used with the Error Response Builder","This exception is throw when there is an Error Response Builder:     nested exception is java.lang.IllegalStateException: No parser defined for header in the context error-response-builder",Bug,Blocker,Closed,"2014-12-03 14:15:56","2014-12-03 14:15:56",3
Mule,"Change IO strategy in HTTP requester","Use SameThreadIOStrategy in the outbound part of he new http connector. As the exchange pattern is always request-response it makes no sense to use a different thread worker to process the request.",Task,Critical,Done,"2014-12-02 20:05:27","2014-12-02 20:05:27",3
Mule,"Tests Infrastructure modules build warning","When running mvn validate on mule-tests-infrastructure module I get a warning because there is a duplicated declaration of maven-jar-plugin in mule pom.xml.    ","Enhancement Request",Major,Closed,"2014-12-02 19:43:13","2014-12-02 19:43:13",1
Mule,"ArrayIndexOutOfBoundsException when logging exceptions","Sometimes, when logging an exception with a RollingFileAppender an ArrayIndexOutOfBoundsException is thrown.  ",Bug,Blocker,Closed,"2014-12-02 18:26:02","2014-12-02 18:26:02",1
Mule,"Http Listener Module Path Issue with path with wildcard and another hardcoded in the same port and with spaces in the path","When there are two listeners in the same port but one has a wildcard the other has a hardcoded path and there is a collision between them it has to enter in the listener that has the hardcoded path.     For example:    1) Flow with path = /in and another flow with path = /in/*   It enters in the /in/* listener but it should enter in the /in without wildcard    2) path=/in/*/subpath1  path=/in/*  When you consume it with /in/foo1/subpath1 it goes to the path /in/*    3) Similar to the previous case.  path=/in/*/subpath1/* and Path=/in/*     When you consume it with /in/foo1/subpath1/subpath2 it goes with the /in/*    4) path=/encodedValues/foo 1  and you consume it with /encodedValues/foo%201 it returns a 404.    For all of these cases there are Functional Test Cases inside the System folder of the HTTP module tests:    *HttpListenerPathTestCase  ",Bug,Blocker,Closed,"2014-12-02 16:00:02","2014-12-02 16:00:02",3
Mule,"Default maxThreads is 128 when worker-threading-profile isn't present but 16 when it is.","As title..",Bug,Critical,Closed,"2014-12-02 15:30:15","2014-12-02 15:30:15",3
Mule,"TCP Transport creating MULE_REMOTE_CLIENT_ADDRESS as outbound","While working on STUDIO-5148, the team found that TCP is creating the MULE_REMOTE_CLIENT_ADDRESS as outbound property rather than inbound as per our way to adapt messages and the way we set that property everywhere else.    https://github.com/mulesoft/mule/blob/bfb3a17263d1e4b32ee10272cbf710a2bf41b16b/transports/tcp/src/main/java/org/mule/transport/tcp/TcpMessageReceiver.java#L421  ",Bug,Major,Closed,"2014-12-02 13:58:13","2014-12-02 13:58:13",3
Mule,"HTTP Requester not removing previous inbound properties","The http:request sets inbound properties to the resulting Mule message but keeps any previous inbound property that were set before the request. To reproduce, test the proxy scenario using a flow with an http:listener and an http:request. When returning from the request, the Mule message still has inbound properties from the listener.",Bug,Critical,Closed,"2014-12-01 15:17:18","2014-12-01 15:17:18",3
Mule,"Upgrade schema versions to 3.6","Upgrade schema versions to 3.6",Task,Blocker,Done,"2014-11-28 15:32:42","2014-11-28 15:32:42",1
Mule,"HTTP requester not sending query parameters when processing a redirect under HTTPS","Check the behavior of redirects in the http:request element of the new HTTP module when using HTTPS. If the Location header contains a URL with query parameters, the request to that URL doesn't contain the parameters.  To reproduce, check AuthorizationCodeFullConfigTestCase#localAuthorizationUrlRedirectsToOAuthAuthorizationUrl. MuleClient is being used twice, to manually process redirects, replace that with only one call with enabled redirects.",Bug,Major,Closed,"2014-11-28 14:56:08","2014-11-28 14:56:08",8
Mule,"Add MULE_REMOTE_CLIENT_ADDRESS property in the new HTTP connector","The HTTP transport sets a variable with the address of the client in inbound connections, but is able to detect if the request comes from a proxy (if so, the value of the X-Forwarded-For header is used instead of the IP of the proxy). This is explained in MULE-7263. We need to provide this functionality in the new HTTP connector.","Enhancement Request",Blocker,Closed,"2014-11-27 21:24:36","2014-11-27 21:24:36",5
Mule,"Domains should not allow Mule elements nested in a <spring:beans> element","For security and consistency reasons, domains should not allow Mule elements nested in a <spring:beans> element",Bug,Critical,Closed,"2014-11-27 21:15:16","2014-11-27 21:15:16",0
Mule,"Hot spot in ServerAddress of HTTP Connector","When ServerAddress executes:     this.ip = InetAddress.getByName(host).getHostAddress();    It's take a while to return. We need to improve it since it's used with every request.",Task,Critical,Done,"2014-11-27 13:42:24","2014-11-27 13:42:24",3
Mule,"Managed object store expiration incorrectly detected on cluster","Managed object store defines an entre Time to Live (TTL) in order to determine if a given entry must be removed form the stored during the expiring process.  In oder to to that, each entry contains a timestamp which is compared against the current time and the configured TTL.  That the timestamp is calculated using System.nanoTime.  The problem is that System.nanoTime can only be used to measure elapsed time and is not related to any other notion of system or wall-clock time.  This implies that the returned values are only meaningful inside a given JVM, but we can't compare timestamps generated on different machines.",Bug,Blocker,Closed,"2014-11-26 19:13:47","2014-11-26 19:13:47",0
Mule,"HTTP Listener with Basic Auth should return status code 401 when authentication fails","When using the Basic-Auth with the new Module Http Listener it returns a 500 status code but it would be better to return a 401 like the old http does.    Example:         <flow name=listenerBasicAuth>          <http:listener config-ref=listenerConfigBasicAuth path=/basic/ />          <http:basic-security-filter realm=mule-realm/>          <!--<mule-ss:http-security-filter realm=mule-realm/>-->          <set-payload value=TestBasicAuthOk/>      </flow>        <flow name=httpInboundBasicAuth>          <inbound-endpoint address=http://localhost:9016/http_basic>              <mule-ss:http-security-filter realm=mule-realm/>          </inbound-endpoint>          <set-payload value=TestHttpBasicAuthOk/>      </flow>    In the first flow (listenerBasicAuth) using the tag:    - <http:basic-security-filter realm=mule-realm/> or   - <mule-ss:http-security-filter realm=mule-realm/>     after the listener it returns a 500 in an invalid authentication.      But with the old HTTP, in the second flow (httpInboundBasicAuth) it returns a 401.  ",Bug,Critical,Closed,"2014-11-26 18:01:40","2014-11-26 18:01:40",5
Mule,"Email address dev@mule.codehaus.org bounces back in WARN org.mule.DefaultMuleMessage: setProperty(key, value) called with null value","Using a message enricher to extract a non-existent property from the current payload and assign it to a flow variable causes the following warning.  It has been reported that an email to the given address <EMAIL> just bounced back.    Please correct the email address, or remove the stack trace (which makes it look much worse than a warning), or remove the message from being logged in this situation altogether.    WARN  2014-11-14 16:07:37,292 [[<removing project name from JIRA>].httpc.receiver.04] org.mule.DefaultMuleMessage: setProperty(key, value) called with null value; removing key: <removing key name from JIRA>; please report the following stack trace to <EMAIL>  java.lang.Throwable  at org.mule.DefaultMuleMessage.setProperty(DefaultMuleMessage.java:470)  at org.mule.el.context.MessagePropertyMapContext.put(MessagePropertyMapContext.java:49)  at org.mule.el.context.MessagePropertyMapContext.put(MessagePropertyMapContext.java:17)  at org.mule.mvel2.optimizers.impl.refl.nodes.MapAccessor.setValue(MapAccessor.java:52)  at org.mule.mvel2.optimizers.impl.refl.nodes.VariableAccessor.setValue(VariableAccessor.java:46)  at org.mule.mvel2.compiler.CompiledAccExpression.setValue(CompiledAccExpression.java:59)  at org.mule.mvel2.ast.DeepAssignmentNode.getReducedValueAccelerated(DeepAssignmentNode.java:92)  at org.mule.mvel2.MVELRuntime.execute(MVELRuntime.java:86)  at org.mule.mvel2.compiler.CompiledExpression.getDirectValue(CompiledExpression.java:123)  at org.mule.mvel2.compiler.CompiledExpression.getValue(CompiledExpression.java:119)  at org.mule.mvel2.MVEL.executeExpression(MVEL.java:943)  at org.mule.el.mvel.MVELExpressionExecutor.execute(MVELExpressionExecutor.java:72)  at org.mule.el.mvel.MVELExpressionLanguage.evaluateInternal(MVELExpressionLanguage.java:198)  at org.mule.el.mvel.MVELExpressionLanguage.evaluate(MVELExpressionLanguage.java:183)  at org.mule.expression.DefaultExpressionManager.enrich(DefaultExpressionManager.java:244)  at org.mule.enricher.MessageEnricher.enrich(MessageEnricher.java:112)  at org.mule.enricher.MessageEnricher.process(MessageEnricher.java:78)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.DefaultMessageProcessorChain.doProcess(DefaultMessageProcessorChain.java:94)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.doProcess(InterceptingChainLifecycleWrapper.java:50)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.access$001(InterceptingChainLifecycleWrapper.java:22)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper$1.process(InterceptingChainLifecycleWrapper.java:66)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.process(InterceptingChainLifecycleWrapper.java:61)  at org.mule.routing.AbstractSelectiveRouter.processEventWithProcessor(AbstractSelectiveRouter.java:308)  at org.mule.routing.AbstractSelectiveRouter.routeWithProcessors(AbstractSelectiveRouter.java:298)  at org.mule.routing.AbstractSelectiveRouter.routeWithProcessor(AbstractSelectiveRouter.java:288)  at org.mule.routing.AbstractSelectiveRouter.process(AbstractSelectiveRouter.java:203)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.DefaultMessageProcessorChain.doProcess(DefaultMessageProcessorChain.java:94)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.AbstractInterceptingMessageProcessorBase.processNext(AbstractInterceptingMessageProcessorBase.java:102)  at org.mule.construct.DynamicPipelineMessageProcessor.process(DynamicPipelineMessageProcessor.java:54)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.DefaultMessageProcessorChain.doProcess(DefaultMessageProcessorChain.java:94)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.AbstractInterceptingMessageProcessorBase.processNext(AbstractInterceptingMessageProcessorBase.java:102)  at org.mule.interceptor.AbstractEnvelopeInterceptor.process(AbstractEnvelopeInterceptor.java:51)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.AbstractInterceptingMessageProcessorBase.processNext(AbstractInterceptingMessageProcessorBase.java:102)  at org.mule.processor.AbstractFilteringMessageProcessor.process(AbstractFilteringMessageProcessor.java:40)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.AbstractInterceptingMessageProcessorBase.processNext(AbstractInterceptingMessageProcessorBase.java:102)  at org.mule.construct.AbstractPipeline$1.process(AbstractPipeline.java:109)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.DefaultMessageProcessorChain.doProcess(DefaultMessageProcessorChain.java:94)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.doProcess(InterceptingChainLifecycleWrapper.java:50)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.access$001(InterceptingChainLifecycleWrapper.java:22)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper$1.process(InterceptingChainLifecycleWrapper.java:66)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.process(InterceptingChainLifecycleWrapper.java:61)  at org.mule.construct.AbstractPipeline$3.process(AbstractPipeline.java:207)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.SimpleMessageProcessorChain.doProcess(SimpleMessageProcessorChain.java:43)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.doProcess(InterceptingChainLifecycleWrapper.java:50)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.access$001(InterceptingChainLifecycleWrapper.java:22)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper$1.process(InterceptingChainLifecycleWrapper.java:66)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.process(InterceptingChainLifecycleWrapper.java:61)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.SimpleMessageProcessorChain.doProcess(SimpleMessageProcessorChain.java:43)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.doProcess(InterceptingChainLifecycleWrapper.java:50)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.access$001(InterceptingChainLifecycleWrapper.java:22)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper$1.process(InterceptingChainLifecycleWrapper.java:66)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.process(InterceptingChainLifecycleWrapper.java:61)  at org.mule.transport.AbstractMessageReceiver.routeEvent(AbstractMessageReceiver.java:511)  at org.mule.transport.AbstractMessageReceiver.routeMessage(AbstractMessageReceiver.java:226)  at org.mule.transport.AbstractMessageReceiver.routeMessage(AbstractMessageReceiver.java:208)  at org.mule.transport.AbstractMessageReceiver.routeMessage(AbstractMessageReceiver.java:200)  at org.mule.transport.AbstractMessageReceiver.routeMessage(AbstractMessageReceiver.java:187)  at org.mule.transport.http.HttpMessageReceiver$7$1.process(HttpMessageReceiver.java:483)  at org.mule.transport.http.HttpMessageReceiver$7$1.process(HttpMessageReceiver.java:480)  at org.mule.execution.ExecuteCallbackInterceptor.execute(ExecuteCallbackInterceptor.java:16)  at org.mule.execution.HandleExceptionInterceptor.execute(HandleExceptionInterceptor.java:30)  at org.mule.execution.HandleExceptionInterceptor.execute(HandleExceptionInterceptor.java:14)  at org.mule.execution.BeginAndResolveTransactionInterceptor.execute(BeginAndResolveTransactionInterceptor.java:54)  at org.mule.execution.ResolvePreviousTransactionInterceptor.execute(ResolvePreviousTransactionInterceptor.java:44)  at org.mule.execution.SuspendXaTransactionInterceptor.execute(SuspendXaTransactionInterceptor.java:50)  at org.mule.execution.ValidateTransactionalStateInterceptor.execute(ValidateTransactionalStateInterceptor.java:40)  at org.mule.execution.IsolateCurrentTransactionInterceptor.execute(IsolateCurrentTransactionInterceptor.java:41)  at org.mule.execution.ExternalTransactionInterceptor.execute(ExternalTransactionInterceptor.java:48)  at org.mule.execution.RethrowExceptionInterceptor.execute(RethrowExceptionInterceptor.java:28)  at org.mule.execution.RethrowExceptionInterceptor.execute(RethrowExceptionInterceptor.java:13)  at org.mule.execution.TransactionalErrorHandlingExecutionTemplate.execute(TransactionalErrorHandlingExecutionTemplate.java:109)  at org.mule.execution.TransactionalErrorHandlingExecutionTemplate.execute(TransactionalErrorHandlingExecutionTemplate.java:30)  at org.mule.transport.http.HttpMessageReceiver$7.process(HttpMessageReceiver.java:479)  at org.mule.transport.http.HttpMessageReceiver$7.process(HttpMessageReceiver.java:475)  at org.mule.transport.http.ThrottlingExecutionTemplate.execute(ThrottlingExecutionTemplate.java:91)  at org.mule.transport.http.HttpMessageReceiver.routeHttpRequest(HttpMessageReceiver.java:474)  at org.mule.transport.http.HttpMessageReceiver.routeRequest(HttpMessageReceiver.java:415)  at org.mule.transport.http.HttpMessageReceiverRouterWorker.run(HttpMessageReceiverRouterWorker.java:31)  at org.mule.transport.TrackingWorkManager$TrackeableWork.run(TrackingWorkManager.java:267)  at org.mule.work.WorkerContext.run(WorkerContext.java:286)  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)  at java.lang.Thread.run(Thread.java:745)","Enhancement Request",Minor,Closed,"2014-11-26 16:01:24","2014-11-26 16:01:24",1
Mule,"Wrong attributes for TLS in OAuth config","Attributes requestConfig and listenerConfig were not removed from the OAuth authorization grant types. We need to use tlsContext-ref instead.",Bug,Critical,Closed,"2014-11-26 14:19:27","2014-11-26 14:19:27",8
Mule,"File handlers are not closed after a Queue is disposed","Per the Queue contract, when a queue is disposed all its storage is to be freed and the resources released. However, it is only clearing the storage but the file handlers remain open.     I have verified that the number of files in the queuestore directory in .mule/ grows constantly.  Checked with lsof -p <pid>   Code is in github at https://github.com/mulesoft-consulting/ucso-api-manager.git  ",Bug,Critical,Closed,"2014-11-25 17:18:05","2014-11-25 17:18:05",5
Mule,"JXPath Evaluator is vulnerable to XXE","JXPathExpressionEvaluator includes:        XMLUtils.toW3cDocument does not disable external entities, so the  message payload could include an XXE attack.    We need to apply there the same fix as in MULE-7390",Bug,Critical,Closed,"2014-11-21 21:45:25","2014-11-21 21:45:25",0
Mule,"Upgrade XStream to version 1.4.7","Upgrade XStream to version 1.4.7","Enhancement Request",Major,Closed,"2014-11-21 18:08:36","2014-11-21 18:08:36",0
Mule,"CheckRequiredAttributes#preProcess performance improvement","CheckRequiredAttributes#preProcess evaluates every defined attribute group to see if the element matches each of them.  This is not required we need to know if at least one of them matches.  Avoiding this redundant check will slightly reduce the time needed to parse a mule configuration file.","Enhancement Request",Minor,Closed,"2014-11-21 17:25:55","2014-11-21 17:25:55",0
Mule,"Cast exception on the proxy http scenario.","When running the Proxy scenario of the http module, a very small percentage of the requests fails with the shown exception.",Bug,Critical,Closed,"2014-11-20 18:16:56","2014-11-20 18:16:56",3
Mule,"Backport MULE-7611 to mule 3.5.x","Mule MVEL had a bug related to caching null subexpressions, whih is fixed in MULE-7611.    Backport the fix to the mule 3.5 branch so that the next bug fix release contains it. (the fix is actually upgrading mule-mvel dependency)",Task,Critical,Done,"2014-11-20 16:15:30","2014-11-20 16:15:30",1
Mule,"Write proposal for new splitters and aggregators","New splitters and agregators have been discussed along past brown bags.     We need to write down the findings, fill the gaps and create a proposal to discuss.",Task,Minor,Done,"2014-11-20 15:19:51","2014-11-20 15:19:51",5
Mule,"Be able to use CXF with the new HTTP connector","Make sure that the CXF module can be used with the new HTTP module (both inbound and outbound). Do the changes required for this.",Task,Major,Done,"2014-11-20 13:36:43","2014-11-20 13:36:43",13
Mule,"Fix flaky test AuthorizationCodeMinimalConfigTestCase","Fix flaky test AuthorizationCodeMinimalConfigTestCase.    Failure is:  java.net.SocketTimeoutException: Read timed out   at java.net.SocketInputStream.socketRead0(Native Method)   at java.net.SocketInputStream.read(SocketInputStream.java:152)   at java.net.SocketInputStream.read(SocketInputStream.java:122)   at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:136)   at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:152)   at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:270)   at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)   at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)   at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:260)   at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:161)   at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:153)   at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:271)   at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)   at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:254)   at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:195)   at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:86)   at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)   at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)   at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)   at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:106)   at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)   at org.apache.http.client.fluent.Request.execute(Request.java:143)   at org.mule.module.oauth2.internal.authorizationcode.functional.AuthorizationCodeMinimalConfigTestCase.hitRedirectUrlAndGetToken(AuthorizationCodeMinimalConfigTestCase.java:29)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:606)   at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)   at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)   at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)   at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)   at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)   at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at com.github.tomakehurst.wiremock.junit.WireMockRule$1.evaluate(WireMockRule.java:74)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)   at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)",Task,Blocker,Done,"2014-11-20 12:05:51","2014-11-20 12:05:51",8
Mule,"Merge appkit and Mule ESB Maven Plugin in a single repository and fix naming conventions","The two projects (part of the early access beta for 3.6) shown here should be merged. Users should have one consolidated Maven extension.    http://www.mulesoft.org/documentation/display/EARLYACCESS/Maven+Tools+for+Mule+ESB    http://www.mulesoft.org/documentation/display/EARLYACCESS/Mule+ESB+Plugin+For+Maven  ",Task,Major,Done,"2014-11-20 01:03:03","2014-11-20 01:03:03",8
Mule,"Http Requester returns 200 instead of the actual request status code.","On the proxy scenario, when the proxied service is unavailable a 500 response should be received, instead it is responding with 200 Internal Server Error which doesn't respect the http protocol.    Steps to reproduce:  - Deploy application.  - Make sure there is no service being proxy.  - Hit the endpoint.  - A response containing the status 200 Internal Server Error will be shown.    Expected behaviour:  The requester and proxy escenario should reply with the same status code and message.",Bug,Blocker,Closed,"2014-11-19 19:45:31","2014-11-19 19:45:31",3
Mule,"Jersey fails to retrieve cookie when running with new http module.","Jersey fails to retrieve cookie when running with new http module. See org.mule.module.jersey.JerseyCookiePropagationTestCase",Bug,Blocker,Closed,"2014-11-19 18:35:02","2014-11-19 18:35:02",3
Mule,"Define a richer set of expression aware XSD types ","Now that the extensions api is going to make the parsing of expressions easier and enabled by default on every component, we should define new XSD types which bette reflect the expected return types. For example:    * expressionSubstitutableString  * expressionSubstitutableInt  * etc    Things to discuss and define:    * Do we always allow embedded expressions?  * is #[foo]  a valid expression?  ",Bug,Major,Closed,"2014-11-19 18:25:34","2014-11-19 18:25:34",8
Mule,"Add tests to verify that extension api parsers support place holders","In the tests that validate the parsing of configurations and operations through XML, validate that property placeholders are correclty resolved",Task,Major,Done,"2014-11-19 18:19:18","2014-11-19 18:19:18",2
Mule,"Decouple the extension-api from the concept of declaring or acting classes","Currently, the Extension, Configuration and Operation interfaces have the concept of declaring or acting classes. This ties the API to the traditional implementation model of annotated classes, which might not always be the case.    Decouple that by introducing two new interfaces: ConfigurationIntantiator and OperationImplementation","Enhancement Request",Critical,Closed,"2014-11-19 18:08:13","2014-11-19 18:08:13",13
Mule,"Change DefaultHttpRequester to receive a Configuration object instead of separated attributes for each configuration value","In HTTP connector, there is a HttpRequesterBuilder#setOperationConfig(HttpRequestOptions) method which is used to configure a DefaultHttpRequester instance.  That configuration is done invoking every property setter in DefaultHttpRequester.   DefaultHttpRequester must accept a HttpRequestOptions instead of having properties for each configurable value to reduce code duplication and make the code more simple  ",Task,Critical,Done,"2014-11-19 17:53:18","2014-11-19 17:53:18",5
Mule,"Replace configuration attribute useHttpTransportByDefault with a configuration extension","As part of the review of MULE-8028 we found that using a configuration element's attribute to disable/enable the usage of the HTTP transport is not correct.  To be able to configure this attribute a new configuration extension for HTTP should be added.",Task,Blocker,Done,"2014-11-19 17:26:40","2014-11-19 17:26:40",0
Mule,"Remove duplicate message creation from test cases.","After MULE-8028  there are several test cases duplicating code to for mule message creation. we should add a method in our test infrastructure and reuse that.",Task,Major,Done,"2014-11-19 13:20:25","2014-11-19 13:20:25",8
Mule,"Be able to use the new HTTP connector with the Jersey module","Test the Jersey module using the listener from the new HTTP module instead of an HTTP inbound endpoint. Make the required fixes to make it work.",Task,Major,Done,"2014-11-17 20:45:00","2014-11-17 20:45:00",8
Mule,"Exception trying to close a not opened IMAP folder","Since we are closing the folder without checking if it is open first, a lot of exceptions are cluttering the logs.",Bug,Minor,Closed,"2014-11-17 19:01:00","2014-11-17 19:01:00",0
Mule,"New HTTP Module Request not encode values in the path attribute","In the new HTTP Request Module when you use a path that have chars that need to be encoded it doesn't produce an URI with the values encoded.    For example:    <http:request-config name=configWithoutBasePath host=localhost port=${httpPort} />        <flow name=requestWithoutBasePathEncodedValues>          <http:request config-ref=configWithoutBasePath host=localhost port=${httpPort} path=/out 1 />      </flow>    The PATH in this case has to be encoded and arrive to the listener server as /out%201  ",Bug,Blocker,Closed,"2014-11-17 17:54:30","2014-11-17 17:54:30",5
Mule,"Scatter-Gather: Custom Aggregation Strategy - AggregationContext gives wrong events when exceptions occur","When implementing a custom aggregation strategy (as a Java class) as in the documentation: http://www.mulesoft.org/documentation/display/current/Scatter-Gather , section Complete Code Example there seems to be an issue with messages that throw exceptions.    It seems that the method collectEventsWithExceptions() from AggregationContext gives the event(s) as they were before entering the Scatter-Gather.    So it is basically impossible to get the message(s) that actually caused the exception.     collectEventsWithoutExceptions() - works as expected",Bug,Major,Closed,"2014-11-17 08:52:40","2014-11-17 08:52:40",8
Mule,"Support shared http listener and request config in domains","We need to be able to shared http:listener-config and http:request-config betweens applications using domains.","Enhancement Request",Blocker,Closed,"2014-11-17 00:44:48","2014-11-17 00:44:48",5
Mule,"Allow to enable/disable cookies in the outbound part of the HTTP connector","Provide a way to enable/disable cookies in the requests that are sent by the http requester in the new module.","Enhancement Request",Major,Closed,"2014-11-14 20:10:54","2014-11-14 20:10:54",8
Mule,"Remove method from HttpRequestBuilder","Remove HttpRequestBuilder#getHeaders. Refactor the way an HttpRequest is created based on the MuleEvent so that there is no need to have this getter in the builder.","Enhancement Request",Minor,Closed,"2014-11-14 18:04:48","2014-11-14 18:04:48",5
Mule,"Http Listener fail to send response after receiving a big payload with transfer-encoding chunk","When sending a big payload with transfer-encoding chunk to an http listener, then the listener fails to send the response.    See org.mule.module.http.functional.listener.HttpListenerRequestStreamingTestCase .",Bug,Blocker,Closed,"2014-11-14 17:23:02","2014-11-14 17:23:02",8
Mule,"Fix HttpListenerAttachmentsTestCase","There is an ignored test in HttpListenerAttachmentsTestCase, from the new http module. The test class contains two test methods, if run independently they both work fine. If run together, then sometimes one of them fails (the whan that is ignored). Apparently there may be an issue with the content lenghts of the multipart requests that are being generated, but further investigation needs to be done on this.",Task,Major,Done,"2014-11-12 18:08:50","2014-11-12 18:08:50",5
Mule,"Remove the concept of input and output types from an extension operation","Remove the concept of input and output types from an extension operation","Enhancement Request",Major,Closed,"2014-11-12 15:52:02","2014-11-12 15:52:02",1
Mule,"Add behaviour to send a flow message source response asynchronously","Currently we can process a message through MessageProcessingManager but the processing is done all synchronous.     We need, for the new http module, to add support to send the http response asynchronously. The only change required so far is a new FlowProcessingPhase with support for asynchronous dispatching of the response message.",Task,Major,Done,"2014-11-12 02:50:38","2014-11-12 02:50:38",8
Mule,"HTTP Module configured as proxy duplicate messages","Seems that new http connector configured for proxy scenario is sending more request to the client server than expected. See test case HttpProxyTemplateTestCase,proxyStreaming,",Bug,Critical,Closed,"2014-11-12 02:39:07","2014-11-12 02:39:07",8
Mule,"Change Contributors guide to include accepting the Agreement","We need to change the contributors file to include the terms to accept the license agreement.             ","Enhancement Request",Major,Closed,"2014-11-10 22:38:14","2014-11-10 22:38:14",1
Mule,"Uri Parameters should appear decoded in the inboundProperties","When a Uri paramter is sent with an encoded character it doesn't appear decoded in the inboundProperties (http.uri.params) .    Example:        <http:listener-config name=listenerConfig_9000_uri_parameters host=localhost port=9000 />        <flow name=http_listener_test_listener_config>          <http:listener path=/resource/{resource_param} config-ref=listenerConfig_9000_uri_parameters />          <set-payload value=#[message.inboundProperties['http.uri.params']] />      </flow>    http://localhost:9000/resource/value 01/  (value 01 = space between value and 01)    it will be send encoded to http://localhost:9000/resource/value%2001/ or http://localhost:9000/resource/value+01/    But it has to appear in the http.uri.params as value 01 not as value+01 when i obtain the resource_param.",Bug,Critical,Closed,"2014-11-10 20:58:29","2014-11-10 20:58:29",5
Mule,"TransactionNotification should return the name of the application that triggered it","When the Agent receives a transaction Notification there is no way to know the name of the application    ","Enhancement Request",Blocker,Closed,"2014-11-06 15:01:57","2014-11-06 15:01:57",3
Mule,"Allow to configure a proxy for outbound HTTP connections","The current HTTP transport allows to configure a proxy for outbound connections. The same feature should be available in the new HTTP module.","Enhancement Request",Minor,Closed,"2014-11-06 13:42:18","2014-11-06 13:42:18",5
Mule,"Replace current extensions discoverer with OSGish activator class","In order to be aligned with Mule's OSGified future, replace the current discovery model with something of this sort:        public class MyActivator implements ExtensionActivator {           public void init(Manager mgr) { fluentApi.stuff(); }           }      }    The activator is to be discovered through standard java SPI","Enhancement Request",Major,Closed,"2014-11-06 12:50:19","2014-11-06 12:50:19",5
Mule,"Forbid one same class to define both configurations and operations","Configurations and operations have to be defined in separate classes.","Enhancement Request",Major,Closed,"2014-11-06 12:35:39","2014-11-06 12:35:39",1
Mule,"Enable registration of top level pojos","Enable registering pojos as top level elements. The logic to do this is already done, all that's missing is the namespacehandler for it and testing","Enhancement Request",Major,Closed,"2014-11-06 12:34:00","2014-11-06 12:34:00",2
Mule,"Reduce the amount of DataTypeQualifiers","We need less DataTypeQualifiers than we're actually supporting.    The following should be removed:    * Stream  * Void    The following should be collapsed:    * short / int  * DATE / DATE_TIME","Enhancement Request",Major,Closed,"2014-11-06 12:31:19","2014-11-06 12:31:19",2
Mule,"Remove the api subpackage in the extensions API","Extensions API will be beta during the whole 3.x series, so it shouldn't have the api keyword on its packages. When we move to Mule 4, extensions API will be an OSGi bundle so the whole api classification makes no sense anymore","Enhancement Request",Major,Closed,"2014-11-06 12:27:39","2014-11-06 12:27:39",1
Mule,"Remove minMuleVersion restricition from extensions API","In the future, we'll shoot for letting the runtime should decide this based on the extensions metadata","Enhancement Request",Major,Closed,"2014-11-06 12:26:14","2014-11-06 12:26:14",1
Mule,"Remove prefixes from ext-api core classes","Remove the Extension prefix from classes such as ExtensionConfiguration, ExtensionParameter, ExtensionOperation, etc","Enhancement Request",Major,Closed,"2014-11-06 12:09:18","2014-11-06 12:09:18",1
Mule,"Replace builders with a fluent API","Replace the Builders with a fluent API at an ExtensionManager or Describer level. A mockup to take as reference (not commitment) of what we're shooting for is this:        This should improve usability and reduce the complexity of our own code since now the builder implementation is part of the API","Enhancement Request",Major,Closed,"2014-11-06 12:07:04","2014-11-06 12:07:04",13
Mule,"Merge http connector code cleanup and merge","Cleanup code from the http connector module and merge it into 3.6 branch.",Task,Blocker,Done,"2014-11-06 11:46:52","2014-11-06 11:46:52",13
Mule,"General Testing New HTTP-Module Listener-Requester","*HTTP-Listener*    * Response-Builder inside and outside the Listener   ** Headers  ** Streaming  ** disablePropertiesAsHeaders  * Content type application/x-www-form-urlencoded  * Transfer Encoding  * Error Handler   * Proxy    * Security   ** SSL-HTTPS  ** Basic auth - Digest  * Threading profile    *HTTP-Requester*  * Methods  ** PUT  ** POST   * Error Handler   * Security   ** SSL-HTTPS  ** Basic auth - Digest    * Consuming API with definition  ** RAML   ** API def    *Testing General Scenario for Both, listener and requester*  * Deployment Scenario   ** Standalone, Cluster, Webapp and CE Standalone  * Shared connector CE and Shared connector EE  * Reliability Pattern   * Synchronous and Asynchronous  * Request-Response  ** One-Way  ** Request-Reply  * CXF WS and Jersey  ",Task,Critical,Done,"2014-11-04 20:25:38","2014-11-04 20:25:38",13
Mule,"Support keepAlive for persistent connections in HTTP Connector","We need to support persistent connections, both for listener and request in the new connector.","Enhancement Request",Blocker,Closed,"2014-11-04 18:37:02","2014-11-04 18:37:02",8
Mule,"Module HTTP Listener Connector Request based on path not working fine","When you use a Wildcard to support a pattern in the PATH it's not working fine in these scenarios:     For path=/in_wildcard/* />    1) It doesn't work consuming it with path=/in_wildcard/    2) It doesn't work consuming it with path=/in_wildcard/foo1/foo2  (with /in_wildcard/foo1 works fine)    If I have another flow in the same app with a path=/in_wildcard/*/subpath1 />    1) It doesn't work consuming it with path=/in_wildcard/foo1/subpath1    Examples:      <flow name=http_listener_test_wildcard>          <http:listener host=localhost port=8083 path=/in_wildcard/* />          <set-payload value=TestOK />      </flow>        <flow name=http_listener_test_wildcard_2>          <http:listener host=localhost port=8083 path=/in_wildcard/*/subpath1 />          <set-payload value=TestOK123 />      </flow>    1) GET Method: http://localhost:8083/in_wildcard/ should return TestOk but it doesn't work in that path (STATUS 404 No listener for endpoint: /in_wildcard/)    2) GET Method: http://localhost:8083/in_wildcard/foo1/foo2 should return TestOk but it doesn't work in that path (STATUS 404 No listener for endpoint: /in_wildcard/foo1/foo2/)    3) GET Method: http://localhost:9001/in/in_wildcard/foo1/subpath1 should return TestOk123 but it doesn't work in that path (STATUS 404 No listener for endpoint: /in_wildcard/foo1/subpath1)",Bug,Critical,Closed,"2014-11-03 18:06:58","2014-11-03 18:06:58",5
Mule,"Add support for consuming wsdl files with more than 1 part","I'm using the Web Service Consumer, and selecting a wsdl url.    Anypoint Studio displays the message Warning: Operation Messages With More Than 1 Part Are Not Supported. after reloading the wsdl and selecting an operation.    An extract of the wsdl is below:    <message name=myMethod>  <part name=body element=tns:myMethod></part>  <part xmlns:ns1=http://myorg.com/app/myheader/v1 name=header element=ns1:header></part>  </message>  ...  <input>  <soap:body use=literal parts=body></soap:body>  <soap:header message=tns:myMethod part=header use=literal></soap:header>  </input>    Mule only accepts this if both the header part and the soap header is removed.     The wsdl is consumed successfully by other applications, including SoapUI.","Enhancement Request",Major,Closed,"2014-10-30 21:19:04","2014-10-30 21:19:04",13
Mule,"Fix spring-security tests.","There are many tests using static ports in this module. We need to change them for dynamic ones to avoid flakiness.",Task,Major,Done,"2014-10-29 18:25:08","2014-10-29 18:25:08",3
Mule,"Add test cases to validate Content-Type encoding and mule transformations","We need to add test cases that validate mule transformations when receiving a request in http listener and when sending a response. Same with http requester.    When Mule receives a request in http:listener, then if the user wants to transform the message to an string we need to do the transformation taking into account the Content-Type header charset (if there's one).     Same when sending a response through http:listener and when using the http:request element.",Task,Major,Done,"2014-10-29 18:14:38","2014-10-29 18:14:38",5
Mule,"Remove examples from the distribution","Because we now have examples in Studio and the Mulesoft library, it doesn't make sense to also keep maintaining the examples on the distribution. They should be removed from the distribution and our code base.    Notice that before removing them we need to make sure that:    * They don't ship with any tests worth keeping (the scripting example has a couple that I'd like to move to the scripting module)  * Some system tests use them. We need to make sure they remain available for those testes    Keep examples folder with a README file saying that we are not shipping examples anymore (check content with Steven)    Fix examples version in QA builds.",Task,Critical,Done,"2014-10-28 18:08:25","2014-10-28 18:08:25",5
Mule,"Register core extensions as domain deployment listeners if it applies","When a core extension is initialized, if it implements the DeploymentListener interface, it's added to the collection of deployment listeners but not to the collection of domain deployment listeners.     In the Gateway we are registering the core extensions as deployment listeners and setting the endpoint message notification on the context when the mule context creation notification is fired, but when the domain's mule context is deployed, the core extensions are not registered as listeners and the notification is never fired. ","Enhancement Request",Major,Closed,"2014-09-03 18:52:54","2014-09-03 17:52:54",5
Mule,"XQuery transformer does not return all matches","By default, the XQuery transformer only returns the first result, unless an array is specified in the returnClass attribute, in which case it returns all the matches in an Object[] (even if the return type was set to X[]). This means that by default, the transformer does not return all results.    If the user does specify a return value, but no results were found then it returns NullPayload. If it came back with only one, then it returns that one element, even if you asked for an Array.    Although this is clearly a bug and a usability pain, fixing this could break some applications which are taking this bug as a feature. Thus, the result will be:    * By default, the xquery transformer will return a List  * That list will contain all the results, even if only one was found  * If no results found, then the list will be empty  * If the user did specified a return class, then we will fallback to the current behaviour (array, one element, or null).       ",Bug,Major,Closed,"2014-10-28 15:36:34","2014-10-28 15:36:34",0
Mule,"Ensure to set target namespaces on xml schemas when creating CXF endpoint server.","XML validation schemas should have set the target namespace in order to avoid null pointer exceptions in the validation process.",Bug,Blocker,Closed,"2014-10-24 15:31:05","2014-10-24 14:31:05",0
Mule,"HTTP response builder is not parsed correctly within flow","response-builder as MP is not working because of the definition parsers.    The old new http transport is replacing the old transport definition parser so it's failing.",Bug,Blocker,Closed,"2014-10-24 15:07:17","2014-10-24 14:07:17",8
Mule,"Mule applications should clear their deployment class loader when they are disposed.","After a mule application is disposed it's deployment class loader should be cleared so the application is ready to be redeployed if necessary.  ",Bug,Critical,Closed,"2014-10-23 19:24:51","2014-10-23 18:24:51",0
Mule,"Add flag to avoid parsing incoming multipart in http listener","For proxy scenarios we need to avoid parsing multipart incoming request. This will also allow to the user to do streaming with multipart.","Enhancement Request",Blocker,Closed,"2014-10-23 16:46:58","2014-10-23 15:46:58",3
Mule,"Change http listener response writing to do streaming","The listener response streaming behaviour is implemented but we still need to write the grizzly response using streaming.    This requires some research in grizzly to figure out how to do it.",Task,Blocker,Done,"2014-10-23 15:27:15","2014-10-23 14:27:15",3
Mule,"Migrate HTTP request element to use grizzly","Currently http request element is using jetty. We need to change it to use grizzly.",Task,Critical,Done,"2014-10-23 15:23:07","2014-10-23 14:23:07",8
Mule,"Create Serialization API","Create a serialization API which replaces direct uses of SerializationUtils. This API will allow applications to specify custom serialization mechanisms.","Enhancement Request",Major,Closed,"2014-10-23 15:15:10","2014-10-23 14:15:10",5
Mule,"Discussion on user-managed objectstore to define what is needed","there 3 categories of needs:  1) Using ObjectStore as a user database - with queries, transactions, etc.  2) Using ObjectStore as a user key value store - e.g. for lookup tables, caching, connector oauth tokens, etc  3) Using ObjectStore for application state - e.g. idempotent router, until successful, etc.    #1 is NOT a goal and I don't think we should spend a single cycle on this. People can use databases for that. If, at some point, we have time to do this - we can look at it. If anyone feels differently about this, ping me on slack and I can explain in more depth.     For #2 and #3, we identified a few areas that need to be addressed. I am summarizing the discussion between Pablo and I, so some of this address part of the solution and not the problem :). I think it's all open for debate FWIW.     We need to clarify the semantics around persistence and clustering for ObjectStores. We identified 3 different modes that we need to support clustered + persistent, clustered + non-persistent. Right now, CloudHub implements clustered + persistent, while ESB implements clustered + non-persistent. Either we need to make this more explicit inside the ESB or remove one of the modes. Also, the two different modes have very different availability characteristics on cloudhub, so it's important to know what type of persistence a component is selecting.  Partionable object store stuff is currently very messy. it's supposed to be an internal semantic, but it gets exposed to consumers (e.g. routers). ObjectStoreManager shoudl be handling naming/partitioning underneath the covers. If not, this ends up being a layer on top of ObjectStores, and it becomes harder to build a management interface around it.  Key-value store use cases require an update method.  We need to document the consistency model - e.g. write last wins  We need an ObjectStore which can use the new database connector for on-prem customers.  We need an easy way for users to specify new object stores via XML which get created via the ObjectStoreManager. Use case here is that I want to specify an objectstore specifically for my cache which has a specified TTL and maximum # of values. I don't believe this is possible right now. (rinse and repeat for any other mule component)    <USER>- we didn't talk about #6, but I thought of it while writing this up, so just capturing it.    Please let me know your feedback on this.    Acceptance criteria:  * create jiras for tasks associated to creation of this feature  ","Enhancement Request",Critical,Closed,"2014-10-22 21:50:01","2014-10-22 20:50:01",8
Mule,"Upgrade Saxon to 9.6.0.1-HE","Upgrade Saxon in order to get fully compliant 2.0 and basic 3.0 support for XPath, XSLT and XQuery","Enhancement Request",Major,Closed,"2014-10-22 15:38:37","2014-10-22 14:38:37",8
Mule,"Make sure the new HTTP connector handles 0.0.0.0 and IP endpoints on the same port.","MULE-7985 refers to the old transport, we need to make sure the new connector handles it too.",Task,Blocker,Done,"2014-10-20 18:56:42","2014-10-20 17:56:42",8
Mule,"Change DevKit support module to use new http connector","When doing OAuth with Connectors created by DevKit it's possible to define a connector-ref attribute and reference the http:connector that will listen for the OAuth callbacks. This is the way in which current Devkit connectors allow support for https on the callback.     This should integrate with the new connector in the following way:    * If no connector is specified, we should use the new one with a default config  * If no connector is specified, but the useOldHttpTransport configuration flag is turned on, then we default to the old transport  * If a connector-ref is specified, then it should show the same behaviour with either the new connector or the old transport","Enhancement Request",Major,Closed,"2014-10-17 15:48:32","2014-10-17 14:48:32",8
Mule,"AMQP 3.6 for beta final tasks","Things TODO here are:    - create updatesite.zip final version RC1 for amqp transport  - create amqp-transport.zip final version RC1 for amqp transport  - create new update site specifically for beta - http://repository.mulesoft.org/blalblablabla or some url  - put amqp connector inside beta update site, and call it AMQP-0-9 Transport with version 3.6.xxxxxx  - test to make sure new connector install overrides/updates existing connector install  - call connector AMQP-0-9   - include the 'beta' tag in the AMQP connector gif/image  - make sure Studio team is aware/okay with all of this  - release mule-amqp-transport RC1 to Maven    Acceptance Criteria:  From the private beta portal. As a user I should be able to:  - download the updatesite.zip for installing in Studio  - download the mule-amqp-transport.zip for installing directly into a Mule ESB instance.    For Studio. As a user I should be able to:  - download Studio Oct 2014 release  - go to Help > Install New Software >  - add the beta update site  - navigate to the beta update site and see the AMQP-0-9 transport  - install the transport in Studio  - if an old version of the transport is already installed, a dialog should be shown instructing users that their existing transport will be updated  - after installing the transport in Studio, users should see AMQP-0-9 components in the palette, and be able to add those to their Studio flows    For standalone. As a user I should be able to:  - include the mule-amqp-transport reference in my pom.xml file, which for the beta period will include the RC1 version of the transport in my project",Task,Critical,Done,"2014-10-16 23:36:56","2014-10-16 22:36:56",8
Mule,"Deployment Service tracks applications before they are successfully deployed","Deployment service tracks applications as deployed before they have actually been deployed. This leads to retrieving an application from the list that has a context which has not been initialized yet or even that failed to deploy.     In gateway we are retrieving all applications with getApplications, and verifying that the muleContext is not null.",Bug,Major,Closed,"2014-09-03 18:46:26","2014-09-03 17:46:26",1
Mule,"Add a system property to force a console appender","Add a system property named mule.forceConsoleLog which forces a console appender if one is not already defined on the current log4j configuration. The purpose of this is to enable other products such as Studio to always have a predictable way to capture all the logs of the application regardless (and without tampering with) its configuration.    This is something additive to the configuration already present for the application (if any). It doesn't altere the standard configuration selection nor log separation performed in standard mode.    the mule.SimpleLog property has precedence over this property. If it is specified, then all the logic described here will not be executed.","Enhancement Request",Major,Closed,"2014-10-15 18:42:58","2014-10-15 17:42:58",1
Mule,"Migrate HTTP Connector to use grizzly","This is just to replace Netty server with Grizzly server.    There is going to be a different task for properly configure grizzly server and the execution model.",Task,Blocker,Done,"2014-10-15 17:19:29","2014-10-15 16:19:29",5
Mule,"Web Service Consumer serviceAddress with MEL causes NullPointerException","When using a ws:consumer-config with a serviceAddress containing MEL, Mule fails to start due to a NullPointerException in MuleEndpointURL.getScheme().    Example configuration:  ",Bug,Major,Closed,"2014-10-13 21:16:45","2014-10-13 20:16:45",0
Mule,"Redesign muleContext bootstrapping in OSGi","Current bootstrapping mechanism inspects all available jars searching for bootstrap properties files. That must be modified to work on an OSGi container.  In OSGi, bootstrapping should follow white-board model so a bootstrapping service can be used (with no OSGi knowledge) which would enable test running with not container to be able to bootstrap the mule context.     ","Enhancement Request",Major,Closed,"2014-10-09 15:32:15","2014-10-09 14:32:15",13
Mule,"Fix flaky test UntilSuccessfulTestCase","org.mule.routing.UntilSuccessfulTestCase.testPermanentDeliveryFailureDLQ  was ignored because it was flaky and was making build fail all the time. We need to fix flakiness and remove Ignore annotation. Also check that the rest of the test of this class are not flaky and these tests successfully pass in CI.",Task,Critical,Done,"2014-10-09 14:07:31","2014-10-09 13:07:31",8
Mule,"Add followRedirects attribute to the http:request element","The user should be able to configure in the request element if redirects should be followed or not, as defined in the spec for the new HTTP connector.","Enhancement Request",Critical,Closed,"2014-10-08 20:43:55","2014-10-08 19:43:55",5
Mule,"Add source and target attributes to the http:request element","The http:request element should have the attributes source and target. Currently the default behavior is to read the body from the payload, and then set the payload with the body of the response. This should be configurable by setting these new attributes.","Enhancement Request",Major,Closed,"2014-10-08 20:42:45","2014-10-08 19:42:45",8
Mule,"Upgrade woodstox to the latest version","Upgrade woodstox to the latest version which doesn't break backwards compatibility","Enhancement Request",Major,Closed,"2014-10-07 16:18:48","2014-10-07 15:18:48",0
Mule,"Upgrade test dependencies","The following libraries are used in our test infrastructure and can be upgraded.    * activemq  * derby  * mockito-core  * xmlunit  * ftpserver-core  * ftplet-api  * mysql-connector  * postgres  * jmockit (check if we really need this one)  ","Enhancement Request",Major,Closed,"2014-10-07 16:11:54","2014-10-07 15:11:54",8
Mule,"Upgrade apache commons libraries to latest versions","The following apache commons libraries can be upgraded.     * commons-codec  * commons-beanutils  * commons-exec  * commons-dbcp  * commons-net  ","Enhancement Request",Major,Closed,"2014-10-07 16:08:44","2014-10-07 15:08:44",5
Mule,"Upgrade Guava to the v18","Upgrade Guava to the latest version which at the moment of filing this issue is v18","Enhancement Request",Major,Closed,"2014-10-07 16:04:52","2014-10-07 15:04:52",3
Mule,"Perform spike on upgrading XPath function","Perform a spike on upgrading our XPath support following these requirements:    * Support Xpath2  * Provide a new xpath2() MEL function which behaves more consistently than its current brother and deprecates it  * Can be leveraged to other transformers or elements currently present in Mule (research which ones)  * Be backwards compatible with Mule 3.5.x  ",Task,Major,Done,"2014-10-07 15:58:35","2014-10-07 14:58:35",8
Mule,"Perform spike on upgrading XSLT support","Perform a spike on upgrading our XSLT support by using newer libraries which provide more up to date features and performance.    For this spike to be considered successful, we should not only gain in functionality and performance, but we also need to remain backwards compatible with the behaviour of Mule 3.5.x",Task,Major,Done,"2014-10-07 15:45:37","2014-10-07 14:45:37",8
Mule,"Remove dependencies no longer needed with JDK 1.7","Now that JDK 1.7 is the minimum required JDK version for running Mule, the following dependencies should not be needed anymore:    * saaj-api   * jaxb-api  * jaxb-impl  * javax.mail: (including geronimo companion)  * jaxb-xjc  * retrotranslator  * servlet-api  * geronimo-jaxrpc_1.1_spec  * geronimo-ejb_2.1_spec  * geronimo-j2ee-connector_1.5_spec    Verify that we can indeed remove these libraries and if so go ahead and take them away from the distribution",Task,Major,Done,"2014-10-07 15:30:55","2014-10-07 14:30:55",5
Mule,"Upgrade to latest asm version","Upgrade to the latest version of the asm library which has no compatibility issues with the dependencies of Mule 4 and which is also compatible with whatever JDK version we choose as minimum requirement for such version of the platform","Enhancement Request",Major,Closed,"2014-10-06 22:06:37","2014-10-06 21:06:37",8
Mule,"Upgrade Joda time to latest version","Upgrade Joda time to latest available version","Enhancement Request",Major,Closed,"2014-10-06 22:17:07","2014-10-06 21:17:07",0
Mule,"Allow to customise protocol in new HTTP Connector","Allow to the user to change the HTTP protocol to use in the new HTTP Connector","Enhancement Request",Blocker,Closed,"2014-10-06 20:11:13","2014-10-06 19:11:13",3
Mule,"HTTP Listener response streaming support","Add support for sending streaming a response in new HTTP Connector. This implies sending Transfer-Encoding: chunck.","Enhancement Request",Blocker,Closed,"2014-10-06 20:10:16","2014-10-06 19:10:16",5
Mule,"Validate HTTP Proxy scenario using new HTTP Connector","Build and validate a template created with http:request and http:listener for a proxy scenario.","Enhancement Request",Minor,Closed,"2014-10-06 20:54:24","2014-10-06 19:54:24",5
Mule,"WS Consumer support for using new HTTP Connector","Add support for the new HTTP connector in WS Consumer","Enhancement Request",Blocker,Closed,"2014-10-06 20:07:28","2014-10-06 19:07:28",13
Mule,"Add TLS support for HTTP listener","Add support for SSL in new HTTP Connector.","Enhancement Request",Blocker,Closed,"2014-10-06 20:06:12","2014-10-06 19:06:12",5
Mule,"Add helper properties for http listener element","Add http listener helper properties. This properties are created to simplify usability and provide extra information about the processed request.","Enhancement Request",Critical,Closed,"2014-10-06 20:03:44","2014-10-06 19:03:44",8
Mule,"Better support for sequential processing in scatter-gather","Scatter Gather replaces the <all> router which was deprecated in 3.5.0. However, it doesn't behave that well on sequential use cases as its predecesor.    That's because if you configure a threading pool of just one, the processing is not sequential just across the routers but across all executions of the flow.     Another misbehaving use case is the one in which the routes are extremely fast, like just a couple of ms each. In that case, the overall response gain is lower than the time penalty of managing the threads.    To accommodate for these use cases we need to better support the sequential case of scatter gather, its threading profile type should change from asynchronousThreadingProfileType to threadingProfileType. This will enable a doThreading option which when set to false will execute always on the same thread, behaving similar to the old <all> router.  ",Bug,Major,Closed,"2014-10-06 16:52:01","2014-10-06 15:52:01",1
Mule,"SimpleLog mode should have custom logic for locating configuration file","OOTB, log4j2 looks for its configuration file using this algorithm:    * Scan all classpath looking for file log4j2-test.xml  * If not found, repeat looking for log4j2.xml    When Mule is running with its default logging infrastructure, this logic is overridden so that the search is not performed on all classpath but:    * First on the application classpath  * If not found on the domain classpath  * If not found, on the configuration folder    When running in simple log mode, all of Mule's custom logic is not applied and we fallback to log4j2 default implementation, which causes issues because we cannot guarantee that any other jar in the classpath includes such a file, causing the wrong file to be picked up.    When runnning in simple mode, log separation should be disabled but our custom search algorithm should still be applied.    Additionally, in both cases we should generate a log line informing the path in which we found the file.",Bug,Major,Closed,"2014-10-03 18:19:51","2014-10-03 17:19:51",3
Mule,"Upgrade Spring to 4.1.1","Upgrade Spring framework to version 4.1.1 on the mule-4.x development branch.  ","Enhancement Request","To be reviewed",Closed,"2014-10-03 16:35:58","2014-10-03 15:35:58",8
Mule,"Scatter-gather: NPE when applying expression filter","You get a Null Pointer Exception when applying a expression filter to a path of Scatter-Gather.  The following example flow reproduces the issue, the alternative solution in the meantime is to use a choice.  ",Bug,Major,Closed,"2014-10-01 15:56:49","2014-10-01 14:56:49",0
Mule,"Two providers for mapping from JAX-RS to JSON","When exposing a REST service through Jersey, if you produce JSON, the mule runtime contains two libraries that jersey may pick for mapping from POJO to JSON.  jersey-json  jackson-jaxrs  The choice on which the framework will use is random and may vary between one environment and the other. The issue is that these libs expose different behavior and may cause unexpected side effects.  I'd suggest removing either one or the other from the mule distribution, alternatively provide means of configuration for using one or the other.","Enhancement Request",Major,Closed,"2014-09-30 15:56:52","2014-09-30 14:56:52",0
Mule,"JDBCTransaction is not closing the connection correctly","The class org.mule.transport.jdbc.JdbcTransaction is not closing the connections in a finally block, this happens in both doCommit and doRollback methods.  So, in case of an exception in the commit or rollback call the connection will remain open, and a leak could be caused.  ",Bug,Major,Closed,"2014-09-29 21:49:19","2014-09-29 20:49:19",0
Mule,"Upgrade Jython library to latest version","As part of upgrading 3rd party libraries, we should upgrade Jython. Support has helped a few customers do this:    See  https://na6.salesforce.com/5008000000U2R8d?srKp=500&srPos=0  ","Enhancement Request",Major,Closed,"2014-04-11 00:18:12","2014-04-10 23:18:12",8
Mule,"Fix UntilSuccessfulTestCase flaky test.","We need to fix testSuccessfulDeliveryAckExpression and check for other flaky tests.",Task,Major,Done,"2014-09-25 18:10:14","2014-09-25 17:10:14",8
Mule,"Move tests from core/spring-config/vm to the new testing framework as needed","Add description",Task,Major,Done,"2014-09-25 16:22:15","2014-09-25 15:22:15",13
Mule,"Test pax-exam using bundle repository","Create a Pax-exam version of FunctionalTestCase in order to run mule tests inside an OSGi container.  Detect and report issues and things to improve",Task,Critical,Done,"2014-09-25 16:21:20","2014-09-25 15:21:20",8
Mule,"Include hamcrest-library dependency.","We are now using hamcrest-core (as part of junit 4.11), we need to instead include hamcrest-library and exclude junit's dependency. This will let us use many fundamental matchers, like the ones regarding number comparisons (greaterThan, lessThan, etc) and make our tests clearer.",Task,Minor,Done,"2014-09-23 15:41:24","2014-09-23 14:41:24",0
Mule,"DEPLOYMENT_FAILED status should be applied to applications that fail to start","The status DEPLOYMENT_FAILED was added per issue MULE-7800. That status is applied to applications that failed to be installed or initialised.    The same status should be applied to applications that fail to start.",Bug,Critical,Closed,"2014-09-19 20:36:01","2014-09-19 19:36:01",2
Mule,"Add support for attachments in the HTTP connector","The new HTTP connector should be able to handle multipart requests. If the Mule message contains outbound attachments, the request should be multipart. If the response is multipart, then the parts should be mapped as inbound attachments in the response.","Enhancement Request",Major,Closed,"2014-09-17 19:12:06","2014-09-17 18:12:06",8
Mule,"Enable TLS protocol versions 1.1 and 1.2 by default","As Mule 3.6 requires Java 7, enable by default protocolo TLS versions 1.1 and 1.2 so that secure socket connections can leverage them.  They were not enabled by default due to Java 6 compatibility, which doesn't implement them, but while they are not the default in Java 7, they are always supported.    This change will mostly be around setting up the correct definition in tls-default configuration file.      ","Enhancement Request",Major,Closed,"2014-09-15 14:20:51","2014-09-15 13:20:51",3
Mule,"Fix cloudbees builds - part 2","Define how to work with repos.  Fix disk size problem.  Works issues to replace Bamboo with Cloudbees",Task,Blocker,Done,"2014-09-11 17:26:56","2014-09-11 16:26:56",21
Mule,"Fix Mule ESB Maven Tools Gaps and issues","Fix Mule ESB Maven Tools Gaps and issues.",Task,Critical,Done,"2014-09-11 17:21:35","2014-09-11 16:21:35",5
Mule,"Add support for HTTP listener config element","Add basic support for HTTP listener global configuration element.    This task only includes support for the element and not the inner element.  This task also includes HTTP listener element support for referencing a global listener config.","Enhancement Request",Critical,Closed,"2014-09-11 17:16:56","2014-09-11 16:16:56",8
Mule,"Add support for HTTP Response builder and HTTP Response Error Builder","Add support for HTTP listener child element http response builder and http error response builder.    All features from the HTTP connector spec for this elements should be supported.","Enhancement Request",Critical,Closed,"2014-09-11 17:14:29","2014-09-11 16:14:29",8
Mule,"Create HTTP connector listener","Create HTTP Listener Element.    This will be only the listener element without any inner element support.  This task includes:   - Support for listener XML element.   - Mapping from HTTP request to Mule Message   - Mapping from Mule Message To HTTP Response","Enhancement Request",Critical,Closed,"2014-09-11 16:00:27","2014-09-11 15:00:27",8
Mule,"Spike on NTLM authentication for the outbound part of the HTTP connector","Add support for NTLM authentication in the request-config element.","Enhancement Request",Major,Closed,"2014-09-11 15:58:45","2014-09-11 14:58:45",8
Mule,"Be able to provide socket configuration for the outbound part of the HTTP connector","Implement the socket-configuration element inside the request-config to be able to configure the sockets that will be used by the connector.","Enhancement Request",Critical,Closed,"2014-09-11 15:57:38","2014-09-11 14:57:38",8
Mule,"Implement composition of request builders in the HTTP connector","Allow to compose many request builders inside a request builder element as defined in the spec.","Enhancement Request",Critical,Closed,"2014-09-11 15:55:52","2014-09-11 14:55:52",5
Mule,"Create repo and CI plan for mule artifact builder project","For project created in MULE-7832:   - Create a github project   - Create a CI plan   - Publish the artifact to a repo   - Consume the artifact from mule-esb-maven-tools project",Task,Critical,Done,"2014-09-11 15:55:30","2014-09-11 14:55:30",3
Mule,"Support streaming in the outbound part of the HTTP connector","Add streaming support to the outbound part of the HTTP connector, having the same behavior as the outbound endpoint in the HTTP transport.","Enhancement Request",Critical,Closed,"2014-09-11 15:54:23","2014-09-11 14:54:23",8
Mule,"Allow to configure SSL in the outbound part of the HTTP connector","Currently the HTTP connector only supports the <http:ssl-default-config /> element to enable HTTPS requests. Provide a way to configure SSL with more detail in the outbound part, and also consider moving it to the ssl namespace as defined initially in the spec.","Enhancement Request",Major,Closed,"2014-09-11 15:52:20","2014-09-11 14:52:20",8
Mule,"Add support for OAuth in the HTTP connector (Authorization code)","Implement OAuth support for the outbound part of the HTTP connector. Support only the authentication-code grant type for now.","Enhancement Request",Critical,Closed,"2014-09-11 15:49:41","2014-09-11 14:49:41",13
Mule,"Implement success and failure status codes in the outbound part of the HTTP connector","Implement the success-status-code-validator and failure-status-code-validator elements in the <http:request> element as defined in the spec.","Enhancement Request",Critical,Closed,"2014-09-11 15:45:54","2014-09-11 14:45:54",3
Mule,"Spike on Extensions API execution model - Part 1","Do a spike on being able to execute operations through the extensions API",Task,Major,Done,"2014-09-10 18:54:30","2014-09-10 17:54:30",13
Mule,"Document different testing options for Mule Applications and domains.","We need to properly document different testing options for mule apps and domains.    This includes: FunctionalTestCase, FunctionalTestCase using domains, FunctionalTestCase using domains and several applications, MUnit, FakeMuleServer tests, Multiprocess unit test, Test against apps deployed in a real container (standalong, CH, cluster).     We need to recommend when to use each of them and how to integrate them with maven and CI.",Task,"To be reviewed",Done,"2014-09-09 17:31:09","2014-09-09 16:31:09",8
Mule,"Include muleesb-maven-plugin in mule esb maven tools project","We need to include muleesb-maven-plugin (https://github.com/mulesoft/muleesb-maven-plugin) in mule-esb-maven-tools project.    This required:   - Review if it should be a separate plugin or can be part of an existent plugin       - if it should be a different plugin then:             - Finding a good name for the plugin and renaming it.             - Review if app deployment to local server should be removed from previous plugin and added to the new one.   - Review plugin capabilities       - decide if it should be a single plugin or multiple plugins (local standalone, remote standalone, CH, local cluster, remote cluster)   - Add documentation by example for every configuration scenario.   - Review with Studio team how this plugin can impact Anypoint Studio.   - Change group Id, artifact Id, verson and package names according to mule-esb-maven-tools naming conventions.",Task,"To be reviewed",Done,"2014-09-09 17:26:43","2014-09-09 16:26:43",8
Mule,"getApplications() method in MuleDeploymentService should include more apps","The getApplications() method in MuleDeploymentService only returns applications that were successfully deployed or that failed to start.    Applications that failed to be installed or initialised are not returned but kept in a zoombies map.    This is inconsistent. The method should return all applications for which deployment has been attempted, and per MULE-7800, it should have a status marking which ones failed.    This makes for more useful and predictable behaviour while eliminating the need for the zoombies map.    Finally, notice that the javadoc for that method says that it only returns deployed applications. That comment does not reflect the actual behaviour of the method not its real intent. That javadoc should be fixed also.",Bug,Major,Closed,"2014-09-09 16:58:05","2014-09-09 15:58:05",5
Mule,"Add a way to do assertions on mule logs with or without the mule process controller.","As part of the logging tests we need a way to do assertions on the mule logs.",Task,Minor,Done,"2014-09-03 18:15:25","2014-09-03 17:15:25",0
Mule,"SecretKeyEncryptionStrategy does not use the supplied key","SecretKeyEncryptionStrategy takes a key as an argument but then it never uses it. Instead, a dynamic key is generated during initialisation time.    This does not only breaches the contract exposed to the user, it also makes it impossible to decrypt messages after an application restart since the generated key will be different.",Bug,Major,Closed,"2014-09-03 16:14:57","2014-09-03 15:14:57",0
Mule,"Upgrade JSCH to version 0.151","Verify:false exception is still encountered in Mule 3.5.1 with Jsch 0.150, according to their release note it may require version 0.151    http://www.jcraft.com/jsch/ChangeLog    Australian Post is still in 3.4.0 and has reported this issue(https://na6.salesforce.com/5008000000ZO4Qe), I have tried to use loader.override to include jsch 0.151 in the application but verify:false exception is still sporadically encountered during the load test.  If I replace the jsch.jar to 0.151 in /lib/opt, then the issue seems to be resolved. I have run the load test for an hour and I did not encounter the exception.  Please advise  1. Is there any impact to upgrade jsch jar to 0.151 in Mule's default distribution?  2. Is there any way to patch the issue without replacing the jsch.jar from <Mule_Home>/lib/opt? We would need to patch both the standalone and cloudhub deployment runtime. Some other customers in Cloudhub are also heavily using SFTP, they can't replace the jsch jar in the Cloudhub runtime themselves.  Many thanks!","Enhancement Request",Critical,Closed,"2014-08-29 21:16:51","2014-08-29 20:16:51",8
Mule,"Fix cloudbees builds - part 1","Define how to work with repos.  Fix disk size problem.  Works issues to replace Bamboo with Cloudbees",Task,Blocker,Done,"2014-08-29 18:11:07","2014-08-29 17:11:07",21
Mule,"Basic functionality for new HTTP Connector - Outbound part","We need to implement the basic functionaility for doing http request calls.  This includes:   - http request global config   - http request operation   - http request builder   - http request basic authentication and digest authenticaton   - message mapping form Mule Message to HTTP request   - message mapping from HTTP response to Mule Message","Enhancement Request",Blocker,Closed,"2014-08-29 17:59:09","2014-08-29 16:59:09",21
Mule,"Allow extensions code to be splitted in several units","As described in the execution section of the spec, a extension's developer needs to have the option to spread the configurations and operations across several classes which instances have their own lifecycle.","Enhancement Request",Major,Closed,"2014-08-29 03:35:34","2014-08-29 02:35:34",8
Mule,"Jersey version upgrade","Mule is using old jersey libraries (1.6) that would need to be upgraded to latest to develop new agent.     Dependent on this library are:    - current agent  - some example and test classes  - mule-module-jersey in CE  ","Enhancement Request",Major,Closed,"2014-02-10 13:45:23","2014-02-10 13:45:23",13
Mule,"Upgrade JUnit version to 4.11","This means getting hamcrest upgraded to 1.3. It requires using mockito-core instead of mockito-all and depends on whether anything breaks here since mockito is using hamcrest 1.1. ",Task,Minor,Done,"2014-08-28 18:33:28","2014-08-28 17:33:28",8
Mule,"Imap 'RetrieveMessageReceiver' does not read the whole folder when deleteReadMessages=false","When reading emails with IMAP and not deleting them, the poller receiver continues to infinitely loop over the same set of messages, as it can be evidenced on org.mule.transport.email.RetrieveMessageReceiver class in the poll() the following line can be found:  Message[] messages = folder.getMessages(1, batchSize);  The first argument should increase proportional to the batch size to avoid retrieving the same messages over and over and thus not meeting the loop condition.  done = batchSize >= count;",Bug,Major,Closed,"2014-08-25 20:24:29","2014-08-25 19:24:29",0
Mule,"Create Mule ESB Maven Tools Project","Move/rename appkit to Mule ESB Maven Tools  See EE-3893 for justification.","Enhancement Request",Critical,Closed,"2014-08-25 19:55:30","2014-08-25 18:55:30",2
Mule,"Release appkit project (Mule ESB Maven Tools)","Release Mule ESB Maven Tools project to the community.",Task,Critical,Done,"2014-08-25 18:10:00","2014-08-25 17:10:00",5
Mule,"Ensure that Maven plugins for Development & QA are compatible","We currently have the muleesb-maven-plugin and the appkit plugins. We should make sure these plugins fit well together in the complete SDLC.",Task,Major,Done,"2014-08-25 18:04:57","2014-08-25 17:04:57",3
Mule,"Create jar for Maven plugin","Create jar library for new Maven plugin that contains logic for creating zip files. The jar will take compiled classes and resources files, and create the deployable zip.    This jar will/should be used by Studio.","Enhancement Request",Major,Closed,"2014-08-25 18:03:11","2014-08-25 17:03:11",5
Mule,"upgrade log4j2 version to 2.0.2","log4j 2.0.2 was release and it contains some fixes, some of which we requested. We should upgrade","Enhancement Request",Major,Closed,"2014-08-22 18:51:56","2014-08-22 17:51:56",3
Mule,"Improve Transformer interface","Currently, the Transformer interface has a getter and a setter for the returnDataType property, and also methods to access the mimeType and encoding properties, but the returnDataType property already contains the mimeType and encoding info.  We need to define a consistent interface for Transformers and a concrete way to define custom ones in the configuration files.  ","Enhancement Request",Critical,Closed,"2014-08-20 17:46:09","2014-08-20 16:46:09",16
Mule,"ClassLoader leak when undeploying application","ApplicationClassLoader is not collected after application is undeployed. This is due to several issues which are linked to this container one.    This issue should only be closed after all related issues are fixed and we can see that undeploying an application collects the classloader",Bug,Critical,Closed,"2014-08-19 20:16:54","2014-08-19 19:16:54",0
Mule,"Logging infrastructure should not keep a reference to any classloaders","No logging context should keep a reference to any classloader object. Otherwise, that classloader will fail to be collected if the logger is held on a static field",Bug,Critical,Closed,"2014-08-19 19:27:14","2014-08-19 18:27:14",4
Mule,"ClassLoader leak due to wrong use of DEFAULT_THREADING_PROFILE","MuleWorkManager is created based on the DEFAULT_THREADING_PROFILE. Because that default threading profile implements MuleContextAware, it ends up holding a reference to the application's muleContext. This causes the muleContext not to be collected and ultimately the classLoader is not collected.    DEFAULT_THREADING_PROFILE should never be assigned directly. Only copies should be used.",Bug,Major,Closed,"2014-08-19 19:22:36","2014-08-19 18:22:36",4
Mule,"Clean up opensource AMQP connector","Old AMQP transport should be clean up, current issues fixed, current pull requests merged/refused.",Bug,Major,Closed,"2014-08-14 17:11:17","2014-08-14 16:11:17",13
Mule,"Functional test not ran when outside test/functional directory","When I try to run FileReceiverMoveDeleteTestCase test from root directory it fails because the test is not found, but when I run it from transports/file it runs fine. Using this command:  {{mvn test -Pfunctional -Dtest=FileReceiverMoveDeleteTestCase}}",Bug,Major,Closed,"2014-08-14 15:56:49","2014-08-14 14:56:49",3
Mule,"Remove incorrect assertion from Test createHttpServerConnectionWithHttpConnectorProperties","Test org.mule.transport.http.HttpServerConnectionTestCase.createHttpServerConnectionWithHttpConnectorProperties    asserts that socket packet size is set on a newly created socket to the value specified by configuration. But the value as specified by the JDK documentation is just a suggestion, and the test is currently failing on CI:     org.mule.transport.http.HttpServerConnectionTestCase.createHttpServerConnectionWithHttpConnectorProperties   Error Details  expected:<1024> but was:<1148>   Stack Trace  java.lang.AssertionError: expected:<1024> but was:<1148>   at org.junit.Assert.fail(Assert.java:93)   at org.junit.Assert.failNotEquals(Assert.java:647)   at org.junit.Assert.assertEquals(Assert.java:128)   at org.junit.Assert.assertEquals(Assert.java:472)   at org.junit.Assert.assertEquals(Assert.java:456)   at org.mule.transport.http.HttpServerConnectionTestCase.createHttpServerConnectionWithHttpConnectorProperties(HttpServerConnectionTestCase.java:263)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:606)   at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)   at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)   at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)   at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)   at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)   at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)   at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:46)   at org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)   Standard Output  ================================================================================  = Testing: createHttpServerConnectionWithHttpConnectorProperties               =  ================================================================================    ",Task,Major,Done,"2014-08-14 00:13:48","2014-08-13 23:13:48",3
Mule,"Upgrade Xalan to version 2.7.2","Upgrade Xalan to version 2.7.2","Enhancement Request",Blocker,Closed,"2014-08-13 23:04:28","2014-08-13 22:04:28",0
Mule,"Running unit tests on clean working directory with an empty repository fails because missing jar","    This fails because unpacking embedded distribution dependencies is binded to generate-sources phase, but jars are still not available (because we are running test phase). Apparently Maven dependency plugin when jar is not available and has to resolve the dependency, resolves the artifact file as the classes directory for the dependency, so every file in that module is available to the current module. As we are trying to unpack it fails because the classes directory is not a jar file. ",Bug,Major,Closed,"2014-08-13 18:34:56","2014-08-13 17:34:56",3
Mule,"Upgrade Spring version to 3.2.10 in Mule 3.5.x","Upgrade Spring version to 3.2.10 in Mule 3.5.x","Enhancement Request",Blocker,Closed,"2014-08-13 16:06:55","2014-08-13 15:06:55",0
Mule,"Update mule-transports-http to tomcat 6+","PR-514  mule-transports-http depends on tomcat 5.5.23 for cookie processing.  Upgraded to tomcat 6 version used by mule elsewhere using  ${tomcatVersion}. Tomcat moved this into coyote. Verified working in  tomcat 6+. Defaulted httpOnly to false in this instance since it was  not part of tomcat 5 and not part of cookie from commons-httpclient and  thus was naturally already false. In tomcat 6, httpOnly is configurable  and default in tomcat 7+. This seemed most appropriate way to get onto  tomcat 6+ as tomcat 5 is end of life and solved use case we had running  mule within tomcat 7 & 8.    See pull request on github PR #514, jira request Mule-6705, and jira request Mule-5100.  ","Enhancement Request",Major,Closed,"2014-07-31 01:12:11","2014-07-31 00:12:11",8
Mule,"Create automated tests for log separation","MULE-7769 revamped mule's logging infrastructure. This code already contains some unit tests about its behavior, but actually verifying that 2 apps deployed in mule have their logs separated, that they are properly rolled over, etc requires an external system test",Task,Major,Done,"2014-07-30 22:09:08","2014-07-30 21:09:08",8
Mule,"Do performance testing of log4j2 implementation","MULE-7769 implemented asynchronous logging through log4j2. Please do performance testing over it",Task,Major,Done,"2014-07-30 22:06:44","2014-07-30 21:06:44",5
Mule,"Configure build for skipping functional tests","Need to configure when to run functional tests or not. ",Task,Major,Done,"2014-07-30 18:00:24","2014-07-30 17:00:24",0
Mule,"AMQP transport. Receive and incorporate spec feedback.","AMQP transport. Receive and incorporate spec feedback.",Task,Major,Done,"2014-07-28 20:59:04","2014-07-28 19:59:04",8
Mule,"JUnit rules and matchers for Mule Standalone server","# Create a JUnit rule that starts Mule Standalone in the before stage and stops it in the after stage.  # Create a JUnit rule that starts installs Mule Standalone in the before stage and clean it in the after stage.  # Create a JUnit matcher to know if mule is running  # Create a JUnit matcher to know if application is deployed in Mule Standalone  ",Task,Major,Done,"2014-07-25 16:55:03","2014-07-25 15:55:03",0
Mule,"Add GPG Maven Plugin to Mule Common","Add the plugin, default skipping signature and configure release build plan to enable GPG signature.",Task,Major,Done,"2014-07-23 20:23:35","2014-07-23 19:23:35",3
Mule,"Replace all uses of wrong date format for RFC one in HTTP transport.","Some of the references to date format are using one with no AM/PM and no 24 hour format. These need to change for the format specified in the RFC.",Task,Minor,Done,"2014-07-21 16:38:19","2014-07-21 15:38:19",0
Mule,"Wrong format for date in HTTP header","HttpResponseBuilder is using a wrong format for the 'Date' header: EEE, dd MMM yyyy hh:mm:ss zzz  This comes from org.mule.transport.http.HttpConstants.DATE_FORMAT  The problem is that with this format it's impossible to know whether the date is AM or PM.  For example, it shows the following when executing it at 3:24 PM  Fri, 04 Jul 2014 03:24:27 ART  Here you can't tell whether it's 3 PM or 3 AM.  The output should include the AM/PM indicator or use a 24 h format (by changing the 'hh' to 'HH').  There's also another constant in the mentioned class that seems to have a better format:  org.mule.transport.http.HttpConstants.DATE_FORMAT_RFC822  In order to reproduce this issue, please find attached a test case that doesn't contain any meaningful assertion but it logs the 'Date' header. Also this needs to be executed after 12 PM to see the problem better.",Bug,Major,Closed,"2014-07-21 16:08:44","2014-07-21 15:08:44",0
Mule,"Dynamic reference to sub flow produces lifecycle errors","When a sub flow is referenced using a dynamic expression the sub flow initialization raises an exception and the flow is aborted.",Bug,Major,Closed,"2014-07-21 14:14:58","2014-07-21 13:14:58",0
Mule,"Create script for uploading to Maven Central","Upload the script to upload to maven central.",Task,Critical,Done,"2014-07-18 21:38:40","2014-07-18 20:38:40",1
Mule,"Fix DateTimeTimeTestCase.seconds flakyness.","This test is flaky. ",Bug,Minor,Closed,"2014-07-18 20:39:10","2014-07-18 19:39:10",5
Mule,"Implement log4j2 on Mule ","We need to upgrade to log4j2 ir oder to leverage the performance improvements of asynchronous logging.  ","Enhancement Request",Critical,Closed,"2014-07-17 18:08:34","2014-07-17 17:08:34",21
Mule,"AMQP Transport. Write documentation","AS A  user    I WANT  I want to have documentation around the features of this transport    SO THAT  I can learn how to use it and to have a reference  ",Story,Major,Done,"2014-07-17 17:48:59","2014-07-17 16:48:59",0
Mule,"AMQP Transport. Integration testing.","AS A user  I WANT I want the transport to be tested against a real broker and a real application.  SO THAT I can be sure the transport works on real world usage. ",Story,"To be reviewed",Done,"2014-07-17 17:47:17","2014-07-17 16:47:17",8
Mule,"AMQP transport. Create inbound requestor (request)","AS A  user    I WANT  I want to be able consume instantly amqp messages    SO THAT  I can consume messages at any point of the flow  ",Story,"To be reviewed",Done,"2014-07-17 17:43:27","2014-07-17 16:43:27",5
Mule,"AMQP transport. Create inbound receiver (consume)","AS A  user    I WANT  I want to be able consume continuously amqp messages    SO THAT  a MuleEvent is created and delivered to a flow when a messages arrives to a queue and is comsumed  ",Story,"To be reviewed",Done,"2014-07-17 17:41:27","2014-07-17 16:41:27",8
Mule,"AMQP transport. Create configuration element (connector).","AS A  user    I WANT  I want to be able to configure the transport in a single point    SO THAT  I can configure the common transport attributes in a single reusable place  ",Story,Major,Done,"2014-07-17 17:39:15","2014-07-17 16:39:15",8
Mule,"AMQP transport. Create connector skeleton.","AS A  developer    I WANT  I want to have a base project skeleton    SO THAT  there is a basement to build on with agreed placeholders for endpoints, connectors, transactions that should be stable.  ",Story,Major,Done,"2014-07-17 17:36:38","2014-07-17 16:36:38",8
Mule,"AMQP transport. Define connector schema","AS A  user    I WANT  I want to be able to rely on a defined schema to write my AMQP integrations     SO THAT  I have exact knowledge of how I’m syntactically supposed to use the transport and to have help from my IDE to autocomplete and detect errors.  ",Story,Major,Done,"2014-07-17 17:34:34","2014-07-17 16:34:34",8
Mule,"AMQP transport. Define specs document. ","AS A  product owner or community member    I WANT  to be able to review the specs     SO THAT  I can and contribute with my feedback  ",Story,Major,Done,"2014-07-17 17:32:46","2014-07-17 16:32:46",8
Mule,"Remove SXC module","Deprecate the module in 3.6 and remove it in Mule 4.0  Document functionality removed.    - Check parent pom, all-modules, all-transports  - Check impact in XML (if the module added XML syntax, document that those elements will not be supported anymore)  - Check assemblies (CE and EE)  - Check dependencies from integration and functional tests  - Make sure to create the PR to be merged in mule-4.x branch  - Log in NamespaceHandler a deprecation message telling how to replace it.  - Log in module classes a deprecation message telling how to replace it.  - Create a DOCS JIRA  - Create a Studio JIRA",Task,Major,Done,"2014-07-17 16:55:25","2014-07-17 15:55:25",5
Mule,"Remove OGNL module","The module has not been maintained and it's functionality overlaps with MEL.  We should deprecate it in 3.6 and remove it in Mule 4    - Check parent pom, all-modules, all-transports  - Check impact in XML (if the module added XML syntax, document that those elements will not be supported anymore)  - Check assemblies (CE and EE)  - Check dependencies from integration and functional tests  - Make sure to create the PR to be merged in mule-4.x branch",Task,Major,Done,"2014-07-17 16:50:17","2014-07-17 15:50:17",5
Mule,"Remove guice module","The guice module has not gained much traction, and as we redesign the Inversion of Control across mule-core, we wil revise IoC containers again.  ",Task,Major,Done,"2014-07-17 16:39:34","2014-07-17 15:39:34",5
Mule,"Remove patterns","Remove patterns and pattern support for Mule 4.    They are too complex to create an maintain, and we strive to replace them with a simpler scheme.    - Check parent pom, all-modules, all-transports  - Check impact in XML (if the module added XML syntax, document that those elements will not be supported anymore)  - Check assemblies (CE and EE)  - Check dependencies from integration and functional tests  - Make sure to create the PR to be merged in mule-4.x branch",Task,Major,Done,"2014-07-17 16:36:30","2014-07-17 15:36:30",8
Mule,"Remove maven archtetypes and ant tools","Remove Maven archetypes, archetype tests and bobberplus (archetype builder).    Transport, Module, Catalog, Patterna rchetypes are outdated and unmaintained. Application archetype has evolved into it's own project in AppKit.  ",Task,Major,Done,"2014-07-17 16:27:46","2014-07-17 15:27:46",3
Mule,"Update maven-deploy plugin to 2.8","Artifact deployment repo is defined in the distributionManagement section of the mule main pom.xml file.    Sometimes we need to stage changes in other repositories in order to make tests that do not affect the rest of the community. The maven deploy plugin provides a way to override the deployment repo, but only in version 2.8 it allows specifying separate snapashot and release repos.  ","Enhancement Request",Major,Closed,"2014-07-16 16:46:56","2014-07-16 15:46:56",3
Mule,"Seda queues with persistent profile fail in Windows","When using a queue asynchronous with a persistent queue store, and when using windows it fails because the name of the file to store the queue data is invalid.    See: http://forum.mulesoft.org/mulesoft/topics/anypoint_studio_default_persistent_queue_store_java_io_ioexception_the_filename_is_incorrect",Bug,Major,Closed,"2014-07-14 22:22:17","2014-07-14 21:22:17",5
Mule,"Update all-modules, all-transports and all-examples dependencies","all-modules, all-transports and all-examples are Maven modules aggregating several Mule ESB submodules. But are not up to date. We need to update their dependency list to solve this problems:    h3. Modules not in all-modules  * guice  * launcher  * logging  * reboot    h3. Transports not in all-transports  * axis    h3. Examples not in all examples  * errorhandler  * geomail  * loanbroker-bpm  * loanbroker-legacy  * notifications",Task,Major,Done,"2014-07-11 20:20:59","2014-07-11 19:20:59",2
Mule,"Delete test replaced by system one and added again by mistake.","Test UntilSuccessfulWithQueuePersistenceObjectStoreTestCase was marked as flaky, replaced by a system test and removed. However, it somehow made it back to the 3.4.x branch and it's causing the build to fail since the config file is missing.",Task,Minor,Done,"2014-07-11 17:46:06","2014-07-11 16:46:06",0
Mule,"Bundle scripting pack with Mule CE by default","Mule CE currently doesn't bundle the scripting libraries (i.e. Jython) by default. Instead, users have to download a separate scripting pack:  https://repository.mulesoft.org/nexus/content/repositories/releases/org/mule/distributions/mule-scripting-pack/3.5.0/mule-scripting-pack-3.5.0.zip    We should evaluate whether or not it is feasible/practical to bundle this scripting pack together with the base Mule CE build, and do so if seen fit.    The Mule EE distribution currently comes with these scripting libraries bundled with the deistribution afiak.","Enhancement Request",Major,Closed,"2014-07-09 23:09:37","2014-07-09 22:09:37",5
Mule,"Ensure internal SEDA queues are bound by default to avoid OutOfMemoryException's","A default size for maxQueueSize must be defined, at least for the case where the queue is in-memory.  We need to determine if:    i) this default is best defined on the processing strategy or object store.   ii) if it’s best to use a static default, or if it is best to determine the default based on heap size or some other parameter.    In ii), a related concern to keep in mind here is whether or not we can have a mechanism for Mule self-tuning that we can include as EE-only.","Enhancement Request",Critical,Closed,"2014-07-08 22:39:17","2014-07-08 21:39:17",3
Mule,"JMS transport should reuse javax.jms.Session, javax.jms.MessageProducer instances by default","All Mule JMS transport must reuse javax.jms.Session, javax.jms.MessageProducer by default without relying on a specific connection factory implementation. ","Enhancement Request",Critical,Closed,"2014-07-08 22:11:35","2014-07-08 21:11:35",3
Mule,"Create javadoc jars on the release profile","Currently, we don't create javadoc jars as part of the release profile, requiring us to manually create and deploy them.    Modify the build descriptors to create the javadoc files for each module. Note that besides this, there must still be a way to create the aggregated javadocs to be published online.  ","Enhancement Request",Major,Closed,"2014-07-08 19:38:37","2014-07-08 18:38:37",3
Mule,"Collection aggregator fails with high amount of messages. Default in memory object store is inefficient.","When a high amount of messages are aggregated the collection aggregator performs several inefficient operations that make the operation fail.  Also, the default implementation for the in memory object store is very inefficient when there are a big object store partition.",Bug,Major,Closed,"2014-07-07 21:13:04","2014-07-07 20:13:04",0
Mule,"Update Maven pom information","For uploading to Maven Central repo we need to have our pom developer section completed.",Task,Major,Done,"2014-07-07 15:08:55","2014-07-07 14:08:55",0
Mule,"release profile doesn't build javadoc jar","Running {{mvn -P release install}} doesn't build javadoc jars at least for mule-core. It only builds:   * mule-core-3.5.1-sources.jar  * mule-core-3.5.1-tests.jar  * mule-core-3.5.1.jar  ",Bug,Critical,Closed,"2014-07-04 20:54:33","2014-07-04 19:54:33",5
Mule,"Remove unsued configuration builders","We have code to support creating a mule flow / service using a jruby script, groovy or Guice.    The actual creating of the script requires advance knowledge of mule internals and it's not useful.     Nobody is using it and also we don't support it in our IDE. We should only keep the spring configuration builders",Task,Major,Done,"2014-07-04 20:54:31","2014-07-04 19:54:31",5
Mule,"Create a maven property for groovy-all version","This dependency in pom.xml has a harcoded version, we should use a property.    <groupId>org.codehaus.groovy</groupId>  <artifactId>groovy-all</artifactId>  <version>1.8.6</version>    And also verify that there is no other places where we use the hardcoded version  ",Task,Major,Done,"2014-07-04 15:22:09","2014-07-04 14:22:09",2
Mule,"Define Extensions execution API","Just like we defined an introspection API for mule extensions, we now need an API to execute operations on those extensions.    This task is about defining, designing and documenting that API. Not implementing it.","Enhancement Request",Critical,Closed,"2014-07-03 16:50:53","2014-07-03 15:50:53",13
Mule,"Create parent module for extensions","Create a parent artifact for extensions to agglutinate all the created extensions.    The purpose of this parent artifact is not only about organising modules, it's also to define a parent pom which will hook up from the compiling phase to automatically generate the schema definition and spring handlers","Enhancement Request",Major,Closed,"2014-07-03 16:47:25","2014-07-03 15:47:25",5
Mule,"Add test support for extensions","Need test infrastructure for extensions, so that we can guarantee that    * the extensions manager will be available every time it's needed an  * The xsd is regenerated on each run so that a developer doesn't need to do so automatically every time","Enhancement Request",Critical,Closed,"2014-07-03 16:41:08","2014-07-03 15:41:08",5
Mule,"Generated XSD for Mule extensions should include map class javadocs to schema documentation","When Extension XSD is generated in the compile phase, it should be possible to use an annotation scanner to extract the extension's javadocs to use them as schema documentation.    It is acceptable for this to not happen when building the schema for test case purposes","Enhancement Request",Critical,Closed,"2014-07-03 15:41:36","2014-07-03 14:41:36",8
Mule,"Support XML definition of Beans in extensions configurations","Some extensions make use of beans on their configuration. It should be possible to create those beans directly on the config definition without the need of defining a spring bean.    At the same time, the same extension mike take lists or sets of beans. Those should be supported also.    For example, assuming that the heisenberg extension has a configuration Bean of type Door, and a list/set of type Ricin. As a user, I should be able to define this:    <heisenberg:config>          <heisenberg:ricin-packs>          <heisenberg:ricin-pack microgramsPerKilo=22>          <heisenberg:destination victim=Lidia address=Stevia coffe shop />          </heisenberg:ricin-pack>          </heisenberg:ricin-packs>          <heisenberg:next-door address=pollos hermanos victim=gustavo fring>              <heisenberg:previous victim=Krazy-8 address=Jesse's/>          </heisenberg:next-door>      </heisenberg:config>","Enhancement Request",Major,Closed,"2014-07-03 15:31:33","2014-07-03 14:31:33",8
Mule,"Instead of logging throughout the wrapper, mule should only send to stdout important information.","Currently, all mule logs are sent to the console (stdout) where the tanuki wrapper encapsule them and duplicate it on console (adding its own information) and also to the mule.log file.    This may be causing performance problems. We know that loggin directly to a file or limiting logging to level error can increase performance. So a possible solution to this could be:    - Add a fileAppender to the log4j configuration with the actual INFO level  - Increase the consoleAppender level to WARNING or ERROR    - We still want to log wrapper information, we should find a way to do not duplicate this information.","Enhancement Request",Major,Closed,"2014-07-02 19:49:04","2014-07-02 18:49:04",0
Mule,"Optimize default wrapper.conf","For every perf run I made, I turn on verbose GC, set it to 2GB, and occasionally switch it to CMS GC.  Let's consider putting these in.  We could add them in and comment them out by default.    e.g.  wrapper.java.additional.4=-XX:+PrintGCApplicationStoppedTime  wrapper.java.additional.5=-XX:+PrintGCDetails  wrapper.java.additional.6=-XX:+PrintGCDateStamps  wrapper.java.additional.7=-XX:+PrintTenuringDistribution  wrapper.java.additional.8=-XX:ErrorFile=%MULE_HOME%/logs/err.log  wrapper.java.additional.9=-Xloggc:%MULE_HOME%/logs/gc.log  wrapper.java.additional.10=-XX:+HeapDumpOnOutOfMemoryError  wrapper.java.additional.11=-XX:+AlwaysPreTouch  wrapper.java.additional.12=-Xms2048m  wrapper.java.additional.13=-Xmx2048m  #wrapper.java.additional.14=-XX:+UseConcMarkSweepGC  #wrapper.java.additional.15=-XX:SurvivorRatio=16  #wrapper.java.additional.16=-XX:CMSInitiatingOccupancyFraction=65  #wrapper.java.additional.17=-XX:NewSize=1024m  #wrapper.java.additional.18=-XX:MaxNewSize=1024m  #wrapper.java.additional.19=-XX:PermSize=128m  ",Task,Critical,Done,"2014-07-02 00:22:52","2014-07-01 23:22:52",2
Mule,"Provide support for RedHat KIE technologies (jBPM and Drools version 6) ","Create a new module to provide support for Drools and JBPM version 6.","Enhancement Request",Major,Closed,"2014-06-30 20:15:55","2014-06-30 19:15:55",13
Mule,"Add a way to configure default threading profile","Default threading profile configuration is hardcoded in org.mule.api.config.ThreadingProfile.  Having a way to configure this value per server will be useful to set a different default threading profile per distribution.","Enhancement Request",Minor,Closed,"2014-06-30 13:43:10","2014-06-30 12:43:10",3
Mule,"Fix flacky test UntilSuccessfulTestCase.testPermanentDeliveryFailureDLQ","Fails on CI with message:    Error Message     Wanted but not invoked: outboundEndpoint.process(<any>); -> at org.mule.routing.UntilSuccessfulTestCase.testPermanentDeliveryFailureDLQ(UntilSuccessfulTestCase.java:193) Actually, there were zero interactions with this mock.   Stacktrace    Wanted but not invoked:  outboundEndpoint.process(<any>);  -> at org.mule.routing.UntilSuccessfulTestCase.testPermanentDeliveryFailureDLQ(UntilSuccessfulTestCase.java:193)  Actually, there were zero interactions with this mock.     at org.mule.routing.UntilSuccessfulTestCase.testPermanentDeliveryFailureDLQ(UntilSuccessfulTestCase.java:193)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:606)   at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)   at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)   at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)   at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)   at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)   at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)   at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:46)   at org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)  Standard Output    ================================================================================  = Testing: testPermanentDeliveryFailureDLQ                                     =  ================================================================================",Bug,Critical,Closed,"2014-06-26 20:38:22","2014-06-26 19:38:22",5
Mule,"App specific log file not created on windows","App specific log file not created on windows.",Bug,Blocker,Closed,"2014-06-24 21:29:05","2014-06-24 20:29:05",0
Mule,"Create way to process JMS messages in a guaranteed order without needing to override a Java class","Several customers want to know how they can enable message sequencing in MuleESB (making sure that inbound messages are delivered in the same order to the various endpoints in a flow).    Using the resequencer is not a pattern as the number of messages could be infinite.    There is currently no way to do this in a cluster. You can however extend the message receiver in the JMS transport.    Albin did this for Boeing and they seemed satisfied with the solution.  https://github.com/albinkjellin/jms-single-consumer    We should implement this, or a more elegant version of it, in the product itself.","Enhancement Request",Major,Closed,"2014-06-20 01:23:36","2014-06-20 00:23:36",8
Mule,"Revise xml libraries bundled in mule in a jdk7 environemnt","As we bumped the required jdk version to java 7, it may be necessary to revise if these libraries are needed at all (as they are included in the jdk):  jaxb-api-2.1.jar  jaxb-impl-2.1.9.jar  jaxb-xjc-2.1.9.jar  ","Enhancement Request","To be reviewed",Closed,"2014-06-19 18:05:21","2014-06-19 17:05:21",3
Mule,"Give Extensions API the ability to automatically provide XML config support","We need a new component in the Extensions API which uses the introspection API already developed and:    Hooks from the compile phase and automatically generates the XSD  Provides a generic BeanDefinitionParser capable of parsing any extension","Enhancement Request",Critical,Closed,"2014-06-19 15:50:39","2014-06-19 14:50:39",21
Mule,"mule does not propagate system properties when started with restart command","bin/mule restart -M-Ddefault.port=1337    expected: app deployed    what happens: deployment error because system properties are not propagated.    ",Bug,Major,Closed,"2014-06-19 15:04:36","2014-06-19 14:04:36",5
Mule,"Enable dependency injection on registry elements","Enable dependency injection (leveraging JSR 330 annotation as much as possible) in order to replace lifecycle calls and xxxAware interfaces    Design a way for objects that contain other objects that must undergo though DI that doesn't depend on the parent object calling or delegating on each lfecycle hook to the child elements.    This will bring either Spring, Guice or Dagger as a core dependency. Keep that dependency as small as possible (i.e. bringing as little modules as needed).  Objects should not use container specific annotations (i.e. spring annotations) - when a non JSR330 annotation is needed, create one specific for mule and use it.   ","Enhancement Request",Major,Closed,"2014-06-19 05:11:16","2014-06-19 04:11:16",21
Mule,"DeploymentService API modification for domains","As a Mule user I would like to:    * Deploy a domain with mule API  * Undeploy a domain and all its apps  * Redeploy a domain and update all the apps  ",Story,Critical,Done,"2014-06-16 18:09:02","2014-06-16 17:09:02",2
Mule,"mule frezes with 100% CPU utilization if accessing property of non-existing property","If flowVars contains no element `user` then expression `#[flowVars['user']['name']]` will freeze mule (thread) eating your CPU @ 100%.  ",Bug,Critical,Closed,"2014-06-16 15:53:39","2014-06-16 14:53:39",8
Mule,"DatabaseMuleArtifactTestCase broken after maven changes","DatabaseMuleArtifactTestCase was broken by the manven changes related to not forking the JVM anymore when running test.",Bug,Minor,Closed,"2014-06-16 14:48:09","2014-06-16 13:48:09",5
Mule,"tls-default.conf entries are ignored sometimes","When creating a SocketFactory for a https transport, the protocols declared in tls-default.conf are intersected with the default ones from the JDK.     Because of this, protocols like SSLv2Hello cannot be enabled when running Mule 3.5.0 in JDK7.    What should actually happen is that those protocols should be intercepted against the supported ones.  ",Bug,Critical,Closed,"2014-06-10 22:16:51","2014-06-10 21:16:51",5
Mule,"org.mule.api.security.tls.TlsConfiguration#getSslContext() no longer visible","org.mule.api.security.tls.TlsConfiguration#getSslContext used to have public visibility in mule 3.4.x and was being used from mule extensions.    In 3.5.0, it's visibility was reduced to private breaking backwards compatibility with those extensions.    The method must be restored as public",Bug,Major,Closed,"2014-06-10 15:12:19","2014-06-10 14:12:19",1
Mule,"Implement plan to improve surfacing of schema reference in documentation","Implementation of Schema Documentation Modernisation Plan articulated here: https://docs.google.com/a/mulesoft.com/document/d/1pLy1BBRQRrzltz-o8PKU9WN1IFEMdGvwkOdabSkRf6s/edit","Enhancement Request",Major,Closed,"2014-06-05 01:36:24","2014-06-05 00:36:24",13
Mule,"DynamicClassLoader leaking classloaders","Apparently DynamicClassLoader is holding a strong reference to MuleApplicationClassLoader when it should not.    This is the GC root path for the leaked MuleApplicationClassLoader instance.      To reproduce deploy any mule app, then undeploy it and check that there is a leaked MuleApplicationClassLoader instance.",Bug,Critical,Closed,"2014-06-04 16:51:14","2014-06-04 15:51:14",8
Mule,"Spike on new HTTP transport underlying technology","We need to do a spike, and validate which underlying technology should be used for the new HTTP transport. ",Task,Critical,Done,"2014-06-04 14:56:41","2014-06-04 13:56:41",8
Mule,"Create Java 8 test build","We need to create builds to run the test suite of Mule on Java 8. This should be Oracle and Open JDK. Review if we should use IBM JDK 8 Beta or wait till it's final.     - Create build for Mule Common with Oracle JDK 8 (We need to run Mule Common tests with JDK 8)  - Create builds for CE and EE with Oracle JDK 8  - Create builds for CE and EE with Open JDK 8  - Optionally create builds for CE and EE with IBM JDK 8 (currently in beta AFAIK)    Consider the possibility of having Mule builds parametrized and configure Java  7 as the default JDK and override with Java 8.",Task,Critical,Done,"2014-06-04 14:47:59","2014-06-04 13:47:59",13
Mule,"Upgrade build plans to Java 7 for compilation and test Mule","We are dropping java 6 support in Mule 3.6, so we need to migrate our build plans to compile and test Mule to run on Java 7.  We also need to remove the Java 6 builds.  ",Task,Critical,Done,"2014-06-04 14:42:28","2014-06-04 13:42:28",8
Mule,"Close method for ReceiverFileInputStream should not raise errors if called twice.","Close method for ReceiverFileInputStream should not raise errors if called twice.",Bug,Minor,Closed,"2014-06-03 22:26:06","2014-06-03 21:26:06",0
Mule,"Add introspection capabilities in the extensions API","Introspection is the capability of an extension to be automatically discovered and described by mule","Enhancement Request",Major,Closed,"2014-06-03 20:14:33","2014-06-03 19:14:33",8
Mule,"Run OWASP dependency check in our dependencies","Run this tool (https://www.owasp.org/index.php/OWASP_Dependency_Check) to assess possible vulnerabilities in our dependencies. ",Task,Minor,Done,"2014-06-03 15:02:16","2014-06-03 14:02:16",0
Mule,"OOM when recovering VM transactions","When a transactional persistent queue is recovered and the size of the queue doesn't fit into memory then there's an OOM exception trying to recovery the pending transactions.",Bug,Critical,Closed,"2014-06-02 19:27:58","2014-06-02 18:27:58",8
Mule,"Implement HTTP Outbound performance improvements","We need to implement the changes needed to improve http outbound performance based on the performance outcome for the proxy scenarios.  ","Enhancement Request",Major,Closed,"2014-06-02 18:00:41","2014-06-02 17:00:41",8
Mule,"MuleProcessController default timeout is wrongfully configured","by default it's 0, and it should be something like 60000.",Bug,Major,Closed,"2014-05-29 15:26:21","2014-05-29 14:26:21",1
Mule,"Add capabilities concept into extension API","Add the concept of capabilities and Capable objects into the extensions api.    An object is capable if it provides optional support for additional capabilities.     A capability is identified by a class type. Implementations are not required to implement any capability at all, even if they support this interface.    Capabilities are used to provide a future-proof path to incorporate changes that may otherwise break backwards compatibility.  ","Enhancement Request",Major,Closed,"2014-05-28 18:19:20","2014-05-28 17:19:20",1
Mule,"CopyOnWriteCaseInsensitiveMap KeyIterator class implementation issue","Due to the way the KeyIterator class is implemented, calling next() followed by remove() removes not the element the iterator is on, but the following one.     In line #181 of the class CopyOnWriteCaseInsensitiveMap, the array is evaluated to the original index, but any subsequent call to remove is performed on the incremented index.",Bug,Critical,Closed,"2014-05-26 16:52:45","2014-05-26 15:52:45",2
Mule,"Provide a way to preserve the original directory when using moveToDirectory","Wen using the moveToDirectory the original directory is not available in any property or scope.",Bug,Critical,Closed,"2014-05-23 20:51:20","2014-05-23 19:51:20",0
Mule,"CloserService generates debug log message without checking logger state","If no closer is found for a stream, the StreamCloserService logs a message with debug level, even if the logger is not in debug mode.    Additionally, that message contains the stream which in some cases can result in the stream being consumed and/or the thread blocking, as shown in the attached log",Bug,Major,Closed,"2014-05-22 20:56:24","2014-05-22 19:56:24",1
Mule,"Fix JMX agent tests in management module","As we changed the management module to run all the tests in the same JVM, a couple of tests failed becuase they create an RMI registry on a fixed port and interfere with each other.    Change those tests so that they use a dynamically allocated port and run fine on the same jvm instance",Bug,Major,Closed,"2014-05-22 02:01:30","2014-05-22 01:01:30",3
Mule,"Review mule logging consistency and analyse the effort to make it consistent and improve underlying technology","We need to review our logs implementation ","Enhancement Request",Critical,Closed,"2014-05-21 18:14:22","2014-05-21 17:14:22",13
Mule,"Define unified way to define the exception handler in execution scopes in mule","Currently exception handler is defined by:   - Flow   - Transactional scope   - Exception strategies   - Outbound endpoint (when using LaxAsync) due bug fix.    In some places the exception handler is retrieve by doing: event.getFlowConstruct().getExceptionListener() (AsyncInterceptingMessageProcessor). This is bad design because the MuleEvent should not have a reference to the FlowConstruct and the exception handler should not be retrieved from the MuleEvent.     The MuleEvent contains dynamic information related to the current message while the exception handler must be defined statically by the flow configuration.    The recommendation is that each scope or execution block (new Threads running part of the flow) should have statically defined the exception handler to use.","Enhancement Request",Major,Closed,"2014-05-21 17:15:15","2014-05-21 16:15:15",13
Mule,"Design a stable API so that extensions can be added to the ESB","This involves designing a stable API that can be used to create ESB extensions.   The initial scope of extensions will be operation blocks that represent an arbitrary operation on the payload.    The goal of this API is to isolate any such extension as much as possible from the ESB classes, allowing to specify operations at an abstract level, that can be automatically mapped to XML constructs in an automated fashion, and provides enough metadata so that both the runtime and tooling can leverage the new operations without further work.    This task is exploratory. The scope is to define a small subset of the API, and determine the registration and consumption mechanism as a proof of concept.    Note that this API has two different parts, one consumed by extension modules, and one consumed by the ESB/Tools, and we look to provide API stability on both surfaces.          ","Enhancement Request",Critical,Closed,"2014-05-07 04:58:10","2014-05-07 03:58:10",8
Mule,"RandomAccessFileQueueStore.getLength() is slow. ","The problem is the use of RandomAccessFile.getLength() inside RandomAcccesFileQueueStore.    ","Enhancement Request",Major,Closed,"2014-05-16 19:26:31","2014-05-16 18:26:31",3
Mule,"MEL expression using dot notation .'variable-name' always returns null if first value at first access is null, even after value changes","The following three logs:    <logger message=X-USER-ID (MEL []) = #[message.inboundProperties['x-user-id']]/>  <logger message=X-USER-ID (MEL .)  = #[message.inboundProperties.'x-user-id']/>  <logger message=X-USER-ID (OLD)    = #[header:INBOUND:x-user-id]/>    consistently work for 1st and 3rd.    The second one using the dot notation consistently fails forever if first invocation fails after server restart   and consistently succeeds forever if first invocation succeeds after server restart.      ",Bug,Critical,Closed,"2014-05-16 15:29:52","2014-05-16 14:29:52",8
Mule,"When using a Throttling policy with throttling statics enabled, limit headers are swapped.","When the policy is applied, returned headers look like:  Connection →close  Content-Length →18  Content-Type →text/plain  X-RateLimit-Limit →0  X-RateLimit-Remaining →10  X-RateLimit-Reset →60000  Wich shows that Limit and Remaining statics are swapped. (Remaining should normally be less or equal than Limit).",Bug,Major,Closed,"2014-05-13 14:15:50","2014-05-13 13:15:50",0
Mule,"Add GPG signature to artifacts","Need to add GPG signature to deploy to Maven Central ",Task,Critical,Done,"2014-05-12 21:46:59","2014-05-12 20:46:59",1
Mule,"scatter gather should require at least two routes","Scatter gather should fail at start time it it doens't have at least two routes configured. Having only one route doesn't make sense for a parallel multicast.",Bug,Major,Closed,"2014-05-12 17:17:58","2014-05-12 16:17:58",1
Mule,"Scatter-gather throws exception when using a one-way outbound endpoint.","Using a one-way outbound endpoint in a scatter-gather with no message processors after it causes an exception. Tried VM and HTTP. I'm attaching the configuration to reproduce the issue.  Using a request reply one or adding a message processor after the endpoint fixes it.",Bug,Major,Closed,"2014-05-09 17:51:44","2014-05-09 16:51:44",1
Mule,"VM transactions should support multithreading","VM transactions have as a known limitation around concurrency. Only the thread that started the transaction should be able to use it and/or close it.    For highly concurrent use cases, it'd be great if scenarios like the following would be supported:    Thread 1: Opens transaction A and polls one element from it  Thread 2: Opens transaction B over the same queue and polls one element from it  Thread 2: writes to the queue in the context of transaction A  Thread 1: writes to the queue in the context of transaction B  Thread 2: commits/rollbacks the transaction A  Thread 1: commits/rollbacks the transaction B    ","Enhancement Request",Critical,Closed,"2014-05-07 18:44:41","2014-05-07 17:44:41",8
Mule,"LifeCycle is inconsistent across registries","Because the LifeCycle manager handles individual objects instead of the mule context as a whole, there're differences in how the life cycle is applied to objects in the TransientRegistry in opposition to the ones in the SpringRegistry:    * Objects in the TransientRegistry have a correct life cycle  * Objects in the Spring registry that were registered by Mule's bootstrap, receive the Start and Stop phases correctly. They don't receive the dispose phase and the init one is invoked by Spring directly as an init-method, not through the life cycle execution.  * Because default Spring registry objects don't receive the init through standard life cycle phase, they cannot be started before the TransientRegistry  * Objects manually added to the spring registry by an app, don't receive the initialise nor dispose phases  * LifeCycle is applied on Spring registry objects once they're all available in the application context. However, objects in the TransientRegistry get their lifecycle as they're registered, making it impossible for component A to reference component B if A is not registered first.    This issue greatly depends on MULE-7587  ",Bug,Critical,Closed,"2014-05-07 18:21:33","2014-05-07 17:21:33",13
Mule,"Improve HttpUtilTestCase","HttpUtilTestCase passes regardless HttpUtilImpl flushes the output stream or not, which caused a bug. That test/functionality should be improved ",Task,Minor,Done,"2014-05-01 00:46:11","2014-04-30 23:46:11",2
Mule,"OAuth regression - RC1 OAuth connectors not working at all","I found the issue in the org.mule.security.oauth.util.HttpUtilImpl#post(String, String) method.    The refactor made to improve the exception error (MULE-7521) modified the way of working with the OutputStreamWriter (look for out variable). After doing the #write(String) there is no flush(), hence the stream is not filled with the API response, and the response is always an error.    The code is:      when it should be      This should solve all the issues with OAuth support for DevKit connectors.",Bug,Blocker,Closed,"2014-05-01 00:27:37","2014-04-30 23:27:37",1
Mule,"Aggregator result has invalid session variables values","When using a persistent store in an aggregator the session variables values do not have the latests value after the message aggregation.    We should prioritise latest stored event session variables values over the ones provided by previous events. If not when execution inside a collection splitter and aggregator is synchronous the merge of the mule events results in a session with not the latests values.",Bug,Critical,Closed,"2014-04-30 20:53:22","2014-04-30 19:53:22",3
Mule,"Possible contention on DefaultStreamCloserService.","When running a batch job(ee feature), it was seen that periodically the threads gets locked as shown into the given stack-trace.    We should add a way to improve this with a cache or another work-arround.",Bug,Critical,Closed,"2014-04-30 20:10:31","2014-04-30 19:10:31",1
Mule,"Persistent queue logs and data remove after shutdown","After mule shutdown mule queues logs and data are being removed.    The problem is that dispose of the queue manager is removing everything.    There's a another issue to solve which is that during undeploy of an app, the app data store in .mule/app-name folder is not being cleared. There seems to be two kind of dispose needed. One for undeploy of an app. And another just for shutting down the server.",Bug,Blocker,Closed,"2014-04-29 20:36:01","2014-04-29 19:36:01",3
Mule,"org.mule.util.Base64 upgrade","org.mule.util.Base64 is a import of the version 2.1 of http://iharder.net/base64    This library is now available as maven dep, and therefor there is no need to copy&paste it.    This library has several new versions 2.3.7, some of them with relevant bugfixes.    However, 2.3.7 has some API changes. This might need to wait till Mule 4.",Bug,Major,Closed,"2014-04-28 11:01:16","2014-04-28 10:01:16",8
Mule,"Mule build reactor is building embedded distribution before other modules","Mule Embedded distribution is being build before modules and transports that are in it, so, build is failing.",Bug,Blocker,Closed,"2014-04-26 16:56:16","2014-04-26 15:56:16",3
Mule,"Upgrade Http transport to use HttpClient v4 for improved outbound performance","Profile+Tune HTTP Proxy based on findings from PERF-65","Enhancement Request",Major,Closed,"2014-04-07 19:53:26","2014-04-07 18:53:26",5
Mule,"Lifecycle does not start a QueueManager in the right order","QueueManager must be started before any Flow. That's not happening for all QueueMAnager, it's only happening for TransactionalQueueManager",Bug,Critical,Closed,"2014-04-24 19:03:33","2014-04-24 18:03:33",3
Mule,"Deprecate jdbc transport","Due the creation of the new DB module, we should deprecate the old jdbc transport as studio has already done.",Task,Critical,Done,"2014-04-23 15:00:15","2014-04-23 14:00:15",1
Mule,"Migrate snapshot repositories to mulesoft.org","Migrate snapshot repositories from codehaus to mulesoft.org repositories",Task,Major,Done,"2014-04-22 21:55:52","2014-04-22 20:55:52",5
Mule,"Application fails to start when having 16 or more connectors with asynch reconnection that fail to connect","The problem is that the work manager used for reconnection is the one defined inside the DefaultMuleContext. This work manager is not configurable so it can handle 16 threads at most. The problem is that when a reconnection fails all the time uses 1 of the threads. So if you have more than 16 reconnections going on the number 17 will never get the chance to execute.",Bug,Major,Closed,"2014-04-22 18:59:49","2014-04-22 17:59:49",1
Mule,"Mule is still creating old default domain classloader instead of using new one","Mule still has the lib/shared/default folder. This causes to use the old domain class loader infrastructure instead of the new one.    This folder must be removed and a default folder must be created in domains.",Bug,Blocker,Closed,"2014-04-22 16:36:51","2014-04-22 15:36:51",3
Mule,"Create OOTB database connector for IBM DB2","Create OOTB database connector for IBM DB2","Enhancement Request",Major,Closed,"2014-04-21 23:11:15","2014-04-21 22:11:15",8
Mule,"Encoded characters not working when using expressions for dynamic endpoints","When using encoded characters (e.g. %40 for @) in conjunction with expressions it fails.  For example this works:  <sftp:outbound-endpoint user=testuser password=mule%40123 path=/Users/testuser/tmp/ host=localhost port=22 outputPattern=file.txt />  But this doesn't:  <sftp:outbound-endpoint user=testuser password=mule%40123 path=/Users/testuser/tmp/#[header:targetSubDir] host=localhost port=22 outputPattern=file.txt />  Attached there's a project with a test case to reproduce this problem.",Bug,Critical,Closed,"2014-04-21 14:32:33","2014-04-21 13:32:33",3
Mule,"Avoid writing app log entries in container log file when not using an specific log4j config file for the app.","When a log4j config file is not attached to an app, a default file appender is created but the app is still sending its output to the container log file.  App default logging should only send app logs to default app log file.",Bug,Major,Closed,"2014-04-16 18:55:57","2014-04-16 17:55:57",3
Mule,"deprecate until-successful's secondsBetweenRetries in favor of millisBetweenRetries","Seconds between retries is fine for the asynchronous case, but when doing a synchronous wait, there're cases in which just a millisecond wait is required.    This enhancement consists on:    * deprecate secondsBetweenRetries attribute. Using it results in a warning message in the logs. It is to be mark as deprecated in the java code and the xsd  * add a millisBetweenRetries property which is the new correct way of using the component  * For backwards compatibility, setting secondsBetweenRetries will implicitly set millisBetweenRetries with an equivalent value  * Setting both attributes at the same time will result in exception","Enhancement Request",Major,Closed,"2014-04-14 19:27:53","2014-04-14 18:27:53",2
Mule,"Synchronous until-successfull waits in milliseconds instead of seconds","When in synchronous mode, the until successful is waiting for the exact value of the seconds-between-retries attribute.    Expected: a value of 10 on a synchronous until-successful waits ten seconds between each retry  Obtained: it only waits 10 milliseconds    ",Bug,Critical,Closed,"2014-04-14 16:21:37","2014-04-14 15:21:37",1
Mule,"MEL behavior is not consistent betsween maps and pojos for proeprty access","With changes made for 3.5, MEL was changed so that property access for maps didn't fail (to be consistent with value access though map[key] syntax).  This caused an inconsistency, as the same expression a.b will fail or return null depending on the actual type of a.    In order to be consistent, we have decided to make property access return null in all cases.   We will also revert back the changes that implied null safe property access by default, and keep asking users to use the .? explicitely).    ",Bug,Blocker,Closed,"2014-04-14 14:04:26","2014-04-14 13:04:26",3
Mule,"Transactional Queue Recovery fails when recovery queue has transient queue config.","When executing local tx recovery and there's a transient config for a recovery queue mule fails with a NotImplementedException",Bug,Critical,Closed,"2014-04-13 15:06:35","2014-04-13 14:06:35",5
Mule,"Set wrapper.ignore_sequence_gaps=TRUE in wrapper.conf","We should set wrapper.ignore_sequence_gaps=TRUE by default in wrapper.conf    The default is FALSE, which was done by Tanuki for backward compatibility.    http://wrapper.tanukisoftware.com/doc/english/prop-ignore-sequence-gaps.html","Enhancement Request",Critical,Closed,"2014-04-11 16:25:44","2014-04-11 15:25:44",0
Mule,"Applications sharing connectors mix endpoint MBeans","When connectors are shared inside a domain all the MBeans for the endpoints for those connectors are shown in all the applications contained in the domain.",Bug,Critical,Closed,"2014-04-09 22:31:46","2014-04-09 21:31:46",0
Mule,"Exception thrown by one-way outbound endpont in a Catch ES causes infinite loop","If a System Exception is thrown inside a Catch Exception Strategy, and the flow that references it is asynchronous, and infinite loop is created, the application will retry to execute the exception strategy infinite times.  I've attached to the jira a test case that reproduces the issue",Bug,Blocker,Closed,"2014-04-09 19:24:02","2014-04-09 18:24:02",8
Mule,"Provide a way to log the SOAP envelope that is being sent in WS Consumer","Currently it is hard to debug WS consumer because there is no way to log the SOAP envelope that is being sent. Provide a way to do this and consider how to integrate it with Studio debugger.","Enhancement Request",Major,Closed,"2014-04-09 15:49:55","2014-04-09 14:49:55",5
Mule,"WS Consumer fails when there is an invocation property operation defined","When a message contains an invocation property called operation and a WS consumer is present, the execution of the WS consumer fails because CXF uses the value of the operation variable.",Bug,Major,Closed,"2014-04-09 15:45:35","2014-04-09 14:45:35",3
Mule,"Add Oracle configuration for database connector","Add Oracle configuration for database connector","Enhancement Request",Critical,Closed,"2014-01-07 01:59:56","2014-01-07 01:59:56",8
Mule,"Test cases override DefaultObjectStoreFactoryBean static delegate causing other tests to fail when split and aggregate operations are used.","Test cases override DefaultObjectStoreFactoryBean static delegate causing other tests to fail when split and aggregate operations are used.",Bug,Minor,Closed,"2014-04-07 19:11:18","2014-04-07 18:11:18",5
Mule,"Add a tool for matching exceptions by its stack trace","Sometimes it's needed to know if two exceptions have the same stack trace. To do this, we need to be able to compare the full stack traces but discarding the exception (and its causes) messages since they may contain invocation specific data.    We need a tool that can generate an exception's full stack trace without any messages","Enhancement Request",Major,Closed,"2014-04-04 21:05:57","2014-04-04 20:05:57",1
Mule,"Improve mule test cases to use a temporary folder for each test case","Improve mule test cases so each of them use a temporary folder for the application working directory.    This will probably reduce flakiness of test cases storing information in disk and also will allow to run test in parallel in the future.",Task,Major,Done,"2014-04-04 18:41:34","2014-04-04 17:41:34",5
Mule,"Handles .NET ?singleWsdl wrong","If http://demo.<USER>eu/DemoService.svc?singleWsdl is used, the flow gets a 400 response code.    http://demo.<USER>eu/DemoService.svc?Wsdl is used, the flow works",Bug,Major,Closed,"2014-04-04 12:27:58","2014-04-04 11:27:58",3
Mule,"Registered transformers in bootstrap.properties won't be found when the key is different than transformer.{x}","Registered transformers in bootstrap.properties won't be found when the key is different than transformer.{x}    If you define your transformer in the bootstrap.properties file as     FooTransformer=org.mule.bar.FooTransformer    This transformer won't be found by using the lookupTransformer/s methods. And therefore a failure will happen if the transformation is needed.",Bug,Blocker,Closed,"2014-04-01 21:38:41","2014-04-01 20:38:41",13
Mule,"Create Connector aware PagingDelegate concept","Create the concept of connection aware and process aware PagingDelegate for cases in which a connection manager PagingDelegate is needed","Enhancement Request",Major,Closed,"2014-03-31 21:17:34","2014-03-31 20:17:34",1
Mule,"Add extension point in MuleLockFactory","MuleLockFactory delegates into a LockProvider to actually build the lock. Upon initialisation, it grabs such provider from the registry.    An extension point is needed so that a provider can be passed into it before initialisation. If such provider is not given, then it fallbacks to the current behavior of taking it from the registry","Enhancement Request",Major,Closed,"2014-03-28 13:52:39","2014-03-28 13:52:39",1
Mule,"Add profile for system tests","We need a profile for system tests (aka Standalone tests), execute only when profile system is active.",Task,Critical,Done,"2014-03-27 21:12:33","2014-03-27 21:12:33",1
Mule,"All test log4j.properties should have the rootLogger at WARN level","Many modules define their own log4j.properties, but some set the rootLogger to INFO which becomes too verbose. They should always be set to WARN",Task,Major,Done,"2014-03-27 19:51:44","2014-03-27 19:51:44",1
Mule,"Remove deprecated methods on Transformer interface","Remove deprecated methods and replace uses",Task,Minor,Done,"2014-03-27 15:17:26","2014-03-27 15:17:26",8
Mule,"Monitored ObjectStores should behave consistently","Monitored object stores do not behave consistently:    * PartitionableExpirableObjectStore instances trim to max size by applying a Least recently used algorithm. However, MonitoredObjectStoreWrapper does it by applying a Last recently used algorithm.  * Additionally, it is allowed to create objects stores that are: completely unbounded, TTL bounded only, TTL and size bounded, but you can't create one that's size bounded only.    Expected behavior should be:    * Managed object stores always trim to size in a consistent way using LRU.  * I can have an ObjectStore that's bounded size wise but unbounded TTL wise  ",Bug,Major,Closed,"2014-03-26 13:56:43","2014-03-26 13:56:43",3
Mule,"Echo example mvn build fails because of test error.","# Download mule-ee-distribution-standalone-3.5.0-M5-20140325.085332-72.tar.gz  # Extract   # cd examples/echo  # mvn test",Bug,Critical,Closed,"2014-03-25 13:56:23","2014-03-25 13:56:23",3
Mule,"Make the pgp module work on a FIPS environment","As part of making Mule FIPS 140-2 compliant, users should be able to allow the PGP module to be FIPS-compliant.    We should investigate the possibility of using platform's cryptography provider instead of Bouncy Castle for PGP module. If it is easy to do, we should execute the task of removing Bouncy Castle dependencies (create another Jira first).     Setting FIPS mode on in Mule should allow the PGP module to use only FIPS-compliant modules.","Enhancement Request",Major,Closed,"2014-02-12 08:10:00","2014-02-12 08:10:00",5
Mule,"MuleProcessController should be able to work in Windows","MuleProcessController should be able to work in Windows","Enhancement Request",Major,Closed,"2014-03-21 15:51:35","2014-03-21 15:51:35",8
Mule,"New Database: Rename bulk-update to bulk-execute","Rename bulk-update to bulk-execute","Enhancement Request",Major,Closed,"2014-03-17 22:56:37","2014-03-17 22:56:37",1
Mule,"Move SimpleLoggingTable to core","Move SimpleLoggingTable to core so that it can be reused by other modules without the need to depend on the launcher","Enhancement Request",Major,Closed,"2014-03-17 21:20:36","2014-03-17 21:20:36",1
Mule,"Replace StringBuffer with StringBuilder whenever possible","Because Mule started on the JDK 1.4 era, there're a lot of uses of StringBuffer. In most cases, there's no need for the contention that it generates and it should be replaced with StringBuilder","Enhancement Request",Major,Closed,"2014-03-17 18:49:27","2014-03-17 18:49:27",1
Mule,"New Database: code cleanup","Clean up xsd schema for database connector.    After the schema is published, docs will take the schema and include it in their db reference docs page:  http://www.mulesoft.org/documentation/display/EARLYACCESS/Database+Connector+Reference    Included in this Jira is also completing support for Derby and doing any necessary cleanup there.",Task,Critical,Done,"2014-03-14 18:14:39","2014-03-14 18:14:39",3
Mule,"Fix ListSchema.groovy script","This script prints lots of errors.   ",Task,Major,Done,"2014-03-14 17:31:13","2014-03-14 17:31:13",3
Mule,"AbstractMessagingExceptionStrategy accessing an incorrect Even when using RequestContext","When a collection message is sent to a subflow and an exception is raised inside it, the exception is not properly raised because is replaced by a java.lang.IllegalStateException: Payload was invalidated calling setPayload and the message is not collection anymore. instead of keep the original one.",Bug,Major,Closed,"2014-03-12 19:53:19","2014-03-12 19:53:19",3
Mule,"Fix UntilSuccessfulWithQueuePersistenceObjectStoreTestCase recoversFromPersistedQueue test","This test is testing on some build runs, and it relies on writing a file directly into an object store folder as part of it's execution.  ",Bug,Minor,Closed,"2014-03-12 17:46:48","2014-03-12 17:46:48",2
Mule,"Fix VM underlaying implementation","Current queues implementation stores the queue content in the transient object store or in the persistent object store if the queue is persistent. We end up with a queue implementation based on a Map which doesn't make any sense. This also causes performance issues.    Transactions are not reliable. We don't have a transaction log for local tx or for XA txs.","Enhancement Request",Critical,Closed,"2014-03-12 16:34:25","2014-03-12 16:34:25",13
Mule,"WS consumer not generating payload for a SOAP 1.2 web service with no parameters","Currently the WS consumer detects if a web service doesn't require any input parameters, and in that case ignores the payload and generates automatically the SOAP body with the request. This is working correctly for SOAP 1.1 web services but not with 1.2 web services (in that case the payload is still used as SOAP body).",Bug,Major,Closed,"2014-03-11 19:12:51","2014-03-11 19:12:51",3
Mule,"xpath function should not have any side effects on the message","when the xpath() function is not given a source parameter, the result of the evaluation is put on the message payload, which is fine.    However, when the source parameter is provided, the payload should not be modified because that causes undesired side effects when using the function in filters or choice routers. When a source is provided, the evaluation result should be set on the source itself",Bug,Major,Closed,"2014-03-11 14:49:37","2014-03-11 14:49:37",3
Mule,"DB Connector throws NPE when advanced-udate fails because connection error","# Copy derbyclient-10.9.1.0.jar to lib/user  # Deploy the attached config  # curl http://localhost:8080/in    * Expected: curl returns 0  * Actual: curl returns {{null (java.lang.NullPointerException). Message payload is of type: String}}",Bug,Major,Closed,"2014-03-07 18:32:07","2014-03-07 18:32:07",8
Mule,"DB: Insert with bulk mode set to true does not return the correct metadata","The new db component is not returning the correct datasense metadata when using the insert operation with the bulk mode set to true.    Example: INSERT INTO TABLE TB1 VALUES(PAYLOAD.ID, PAYLOAD.NAME) with BULK = TRUE    the expected metadata should be List<{id, name}>. Today it is returning {id, name}",Bug,Major,Closed,"2014-03-06 22:15:47","2014-03-06 22:15:47",2
Mule,"Use MVEL Dynamic Optimizer to evaluate MEL Expressions","We need to fix a concurrency Bug and Fix a bug with ASM optimizer when assigning new map entries.     Blocked by:  https://jira.codehaus.org/browse/MVEL-302  https://jira.codehaus.org/browse/MVEL-303  https://jira.codehaus.org/browse/MVEL-305","Enhancement Request",Major,Closed,"2014-03-06 16:53:01","2014-03-06 16:53:01",5
Mule,"Bulk mode in insert/update/delete message processors should accept collection payloads only","When bulkMode=true and payload is not a collection, insert/update/delete message processors are resolving queries using the default values in the query definition.  That causes the execution of the query just once, but with null parameter values.    Those message processors should accept only collections as payload/source. ",Bug,Major,Closed,"2014-03-05 21:47:04","2014-03-05 21:47:04",2
Mule,"Echo example fails to start because does not find mule-app.properties","To reproduce    # copy echo example zip app from distribution to app directory  # Run bin/mule  # See error in log",Bug,Blocker,Closed,"2014-03-05 18:55:04","2014-03-05 18:55:04",3
Mule,"SXC filter router fails due to uninitialised transformer ","Due to the fix of MULE-7390, XmlToXMLStreamReader is now initialisable. SxcFilteringOutboundRouter is using an instance of that Transformer without invoking its initialise() method which causes it to fail.    SxcFilteringOutboundRouter should properly initialise the transformer",Bug,Critical,Closed,"2014-03-05 16:39:23","2014-03-05 16:39:23",1
Mule,"StageName generation should be decoupled from Flow","Right now, the Flow is responsible for generating stage names for resources that leave on its pipeline. That makes it imposible for components relying on such names (such as async) to exists in a FlowConstruct that is not an instance of Flow.  This should be refactored so that other types of FlowConstruct can contain an async block",Bug,Major,Closed,"2014-03-03 20:30:12","2014-03-03 20:30:12",3
Mule,"Modify README file for Maven generated Mule app using appkit","When creating a new Mule application using appkit, the README generated is outdated.    Please modify the README according to this document:  https://docs.google.com/a/mulesoft.com/document/d/1Mlr1IxjLZ_q_Qx9CkMmI9pLNT4FNChIAWRCEjtJBB-Y/edit?usp=sharing",Task,Major,Done,"2014-03-03 17:53:09","2014-03-03 17:53:09",1
Mule,"New database: streaming is useless if statement fetch size is not configured","Streaming mode is intended to avoid OutOfMemory exceptions when processing big resultSets and the idea is to return an iterator as the result of a query so the user can request records on demand.  Statements have a fetchSize attribute that indicates the size of the chunk of records that will be returned on each database round trip. For example, fetchSize=5 and a resultset of 20 records will imply 4 chunks of 5 records each.  The problem is that when fetchSize is not configured properly, the resultset won't be paged and it will be completely loaded into memory, ie: making streaming useless.",Bug,Blocker,Closed,"2014-03-01 00:42:50","2014-03-01 00:42:50",2
Mule,"Reduce the number of distributions","Mule builds the following distributions:  deb-package  embedded  profiler  scripting  standalone  standalone-light  studio    - Remove the distributions deb-package, profiler and scripting  - Verify if embedded can be removed and replaced by requiring people to use maven  - Verify is standalone-light can be removed (it's standalone without source code), or we can change standalone distribution to skip source code - we do publish source code for each artifact so the information is there for IDEs.  - Verify if the Studio distribution can be removed.  ","Enhancement Request","To be reviewed",Closed,"2014-02-28 19:43:54","2014-02-28 19:43:54",5
Mule,"Fixed unused and undeclared dependencies in maven","Running mvn dependency:analyze shows a lot of warnings due to unused dependencies and transitive dependencies used directly but undeclared    Fix the project descriptors of the modules to include needed dependencies and remove unused ones.  ",Task,Major,Done,"2014-02-28 19:21:14","2014-02-28 19:21:14",8
Mule,"Include the security model used at mule container startup console","Part of the changes made for 3.5 included creating a way of definning the security model to be used.  The problem is that there's no feedback to the use on the security model except than the side effects derived from it.    Make Mule container display the security model used when starting up.","Enhancement Request",Major,Closed,"2014-02-28 19:10:51","2014-02-28 19:10:51",2
Mule,"WebService Consumer does not distinguish between 1.1 and 1.2 services","According to wsdl spec version 1.1 mandates the use of the SOAPAction header. Version 1.2 removes its use. Our consumer effectively assumes that the service is of type 1.1 and so attempts to set the SOAPAction header. This can upset a service of type 1.2 which may return an error like   Server did not recognize the value of HTTP Header SOAPAction: .  Try to consume the service at http://webservicex.net/ws/WSDetails.aspx?CATID=2&WSID=74 for example using both the 1.1 and 1.2 request versions. 1.2 will fail. The way to address this in the cxf Proxy client was to make sure no SOAPAction was present in the outgoing request.",Bug,Critical,Closed,"2014-02-28 01:35:18","2014-02-28 01:35:18",5
Mule,"Cache and provide the StreamCloser through the MuleContext","MuleContext should have a method getStreamCloser():StreamCloser so that it's easy to get it and we have an easy way to cache it","Enhancement Request",Major,Closed,"2014-02-27 22:19:16","2014-02-27 22:19:16",1
Mule,"Add migration guide on CE distribution","Add migration guide to the CE distribution",Task,Minor,Done,"2014-02-27 21:57:30","2014-02-27 21:57:30",1
Mule,"Mule common's sources and javadoc aren't deployed to maven repo","Mule common's sources and javadoc aren't deployed to maven repo. Maven command should add sources:jar and javadoc:jar.     This is important since connector developer may use classes inside those jars and javadoc + sources are a must for usability.",Bug,Critical,Closed,"2014-02-27 21:03:35","2014-02-27 21:03:35",1
Mule,"Simplify stored procedure results processing","Current stored procedure message processor returns an iterator of statements results (resultset, output params, etc).  The reason of that is that we don't know in advance how many results we are going to obtain from a statement and that many DB cannot maintain multiple open resultsets. That makes us unable to process resultSets in streaming mode.  The problem is that this makes complex to process result both in streaming on/off modes.    The proposed improvement is to return different results depending on whether streaming is enabled or not.     * Streaming false  Maps of results     ResultSet (resultset1, resultset2..) List of maps     UpdateCount (updateCount1,.....) integer     Output parameter (the name of the parameter) value will result value of the param    Map  resultSet1 -> resultSet  updateCount1 -> updateCount    * Streaming true  Iterator of results     ResultSet (resultset1, resultset2..) iterator of maps     UpdateCount (updateCount1,.....) integer     Output parameter (the name of the parameter) value will result value of the param    iterator.next -> resultset  iterator.next -> updateCount    With this change we loose some consistency because the result changes depending on the value of an attribute, but we gain on simplicity of use for the normal case.","Enhancement Request",Critical,Closed,"2014-02-27 14:45:08","2014-02-27 14:45:08",5
Mule,"XSLT transformer is vulnerable to XXE","The current implementation of the XSLT transformer is vulnerable to the following threat: https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing    Currently, there is no way to prevent this since it would require to:  * Set the property 'javax.xml.stream.isSupportingExternalEntities' to false for the xmlInputFactory. Currently no property can be set XML factory at all.  * Set the attribute of the transformer 'useStaxSource'. When this parameter is false (default) the XML factory is ignored. This attribute can't be set right now.    We need to disable XXE by default and add an attribute which allows it when needed to keep backwards compatibility.     Steps to reproduce:  1. Run the attached configuration.  2. Post the following XML to the endpoint http://localhost:9000/test:  <!DOCTYPE spi_doc_type[ <!ENTITY spi_entity_ref SYSTEM 'file:////etc/passwd'>]>   <root>  <elem>&spi_entity_ref;</elem>   <something/>  </root>  3. Inspect the content of the output and log. It will show the content of the /etc/passwd file. If you don't have it, you can change it to a file that you have in your filesystem.",Bug,Critical,Closed,"2014-02-27 14:25:58","2014-02-27 14:25:58",5
Mule,"Add methods to handle schedulers and sub-flows in FunctionalTestCase","Need to add methods to manually:    * Stop all schedules  * Run a scheduler on demand  * get a sub flow  * get all schedulers  ","Enhancement Request",Blocker,Closed,"2014-02-26 18:49:08","2014-02-26 18:49:08",1
Mule,"Shared connector MBean appears under application MBean and should be under the domain one","There is currently no MBean for Domains, we should have one and shared resources should not be in each individual domain application.",Bug,Critical,Closed,"2014-02-26 16:37:27","2014-02-26 16:37:27",5
Mule,"Stopping an application that shares an http connector makes the other application endpoint to stop ","# Deploy the two applications and domain  # Start mule  # curl http://127.0.0.1:8080/in1 and curl http://127.0.0.1:8080/in2 returns the expected  # rm $MULE_HOME/apps/app2-anchor.txt  # wait for app to get undeployed     * Error: curl http://127.0.0.1:8080/in1 fails to connect",Bug,Blocker,Closed,"2014-02-26 16:00:20","2014-02-26 16:00:20",3
Mule,"Logging of message reception is written to domain log instead of app log when sharing http connector","When an http endpoint receives a request it should be logged in application log, but it is logged in domain log.",Bug,Major,Closed,"2014-02-26 15:44:16","2014-02-26 15:44:16",3
Mule,"RefreshTokenManager's ObjectStore is not expiring entries","RefreshTokenManager has an expirable object store to make sure that an access token is not refreshed more than one time in the lapse of one minute.    That store should expire its entries after one minute but it's not doing so.",Bug,Blocker,Closed,"2014-02-26 14:43:06","2014-02-26 14:43:06",3
Mule,"Expiration doesn't work on object store","This simple test reproduce that expiration policies don't work on the object store.          Expected behavior is that last line return false but returns true.",Bug,Blocker,Closed,"2014-02-25 21:51:37","2014-02-25 21:51:37",1
Mule,"Domain initialization should fail when domain dir structure is invalid","Domain shouldn't get deployed when filesystem structure is not valid. It should check that mule-domain-config.xml is present and allowed directories should be lib, resources and classes or something similar. To reproduce create a directory MULE_HOME/domains/domain/ with a single empty file called test.",Bug,Minor,Closed,"2014-02-25 21:44:08","2014-02-25 21:44:08",0
Mule,"WS Consumer ignores imports in WSDL","I'm trying to consume the login operation from https://www.mulesoft.org/jira/rpc/soap/jirasoapservice-v2.    That operation relies on an Array type defined in an import. WS Consumer fails to detect if that operation has parameters or not because it ignores the import and thus it cannot resolve the type",Bug,Blocker,Closed,"2014-02-25 20:45:29","2014-02-25 20:45:29",5
Mule,"NullPointerException while initialising body","When trying to consume the login operation from https://www.mulesoft.org/jira/rpc/soap/jirasoapservice-v2 , the attached NPE is found when WS Consumer MP is initialised",Bug,Blocker,Closed,"2014-02-25 20:42:37","2014-02-25 20:42:37",5
Mule,"The serviceAddress attribute should be required in WS consumer","The serviceAddress attribute should be required. Currently if it is not set, an exception with an error message that is not clear is thrown.",Bug,Major,Closed,"2014-02-25 13:20:33","2014-02-25 13:20:33",1
Mule,"Devkit intercepting message processors fail if they are the last element of a chain","Then an intercepting message processor is the last in a chain, it's listener is null.    AbstractListeningMessageProcessor, which is the base class for all intercepting message processors created by the devkit, assumes that it will always receive a non-null listener, and fails with a NPE on the process(...) methods that will attempt to call method process of the listener.    This is reproduced by putting any devkit intercepting component as the last element of a flow or scope, or at unit testing level, if you don't set the listener but try to use any of the SourceCallback methods.    ",Bug,Blocker,Closed,"2014-02-24 20:07:12","2014-02-24 20:07:12",1
Mule,"New Database: Create OOTB connectors to popular databases","As a user, I want to connect to popular relational databases using JDBC with little extra configuration.    In order of priority, the databases are:  1. Oracle  2. PostgreSQL  3. Sybase  4. MS SQL Server  5. DB2  6. MySQL (done)    [~<USER> FYI  ",Story,Critical,Done,"2014-02-24 19:14:07","2014-02-24 19:14:07",0
Mule,"New Database: Include generateSimpleParameterMetadata as a MySQL connection attribute by default ","Note: This is a temporary solution until MULE-7364 is fixed.    For 3.5.0-M4, we should include generateSimpleParameterMetadata=true by default for MySQL connections for Datasense purposes.","Enhancement Request",Major,Closed,"2014-02-21 22:19:05","2014-02-21 22:19:05",2
Mule,"SoapAction header is not being set in WS Consumer for Soap 1.2 web services","The Web Service Consumer component is not adding the Soap Action header when consuming a Soap 1.2 web service.    Example: http://wsf.cdyne.com/WeatherWS/Weather.asmx?WSDL  If you consume the GetWeatherInformation operation through the WeatherSoap port, the Soap Action header is sent and everything works OK. If you consume the same operation through the WeatherSoap12 port, the server returns an error indicating that the SOAP Action header is invalid.  ",Bug,Major,Closed,"2014-02-21 20:11:55","2014-02-21 20:11:55",3
Mule,"Clean pom files to support faster build cycles","We follow a build cycle of running tests of increasingly time in steps.  In order to improve build times, refactor poms so that features can be disabled when needed.    We will settle to standarize on the following switches:  -DskipVerifications --> will disable running style checkers, licence checkers, and enforcer plugin  -DskipIntegrationTests --> Will disable integration tests  -DskipArchetypeTests --> Will skip archetype tests (which require archetypes to be already installed)    Running unit vs functional tests will not be modified yet and will use our custom surefire plugin",Task,Major,Done,"2014-02-21 19:40:08","2014-02-21 19:40:08",8
Mule,"Mule logs switch to DEBUG level when application uses the Salesforce Connector","When deploying an application using the salesforce connector, logging level is downgraded to DEBUG. Also, all logging goes to the console and no file is generated for the app on the logs folder.    The same app running from Studio doesn't show this behavior. This issue greatly affects performance and readability of the logs",Bug,Critical,Closed,"2014-02-21 19:39:05","2014-02-21 19:39:05",8
Mule,"Fix MtomClientTestCase.","This is a flaky test.",Task,Minor,Done,"2014-02-21 17:05:16","2014-02-21 17:05:16",3
Mule,"New Database: defaultValue of named parameter in SQL template should default to null","The defaultValue of a named parameter in SQL template should default to null.    The user should not need to specify it in xml or Studio.","Enhancement Request",Blocker,Closed,"2014-02-20 22:03:53","2014-02-20 22:03:53",2
Mule,"Allow MEL expressions to safely access nested null properties","Consider an object a with property b    The expresion a.b.c will fail if a.b is null.  MVEL was enhanced to include a null safe get flag that would make that expression return null.    Change Mule to set that mode of operation.  ","Enhancement Request",Major,Closed,"2014-02-20 21:48:53","2014-02-20 21:48:53",2
Mule,"RequestContext.getEvent() returns null inside poll","When a flow has a poll as a message source, the RequestContext is only set with the event after the poll listener has been executed. So, if inside the poll there's a MP depending on the RequestContext, it fails with NPE",Bug,Critical,Closed,"2014-02-20 21:08:11","2014-02-20 21:08:11",1
Mule,"Selector watermark is not thread safe","When using watermark with a selector, the same selector instance is reused across invocations which means that if two polls are executed concurrently values would be overwritten.    Right now this is a non issue because watermark only runs on synchronous flows. However, it makes affects code reusability and this will potentially break if we decide to support async watermark or if CloudHub centralised scheduler decides to fire concurrently for different tenants","Enhancement Request",Major,Closed,"2014-02-19 19:49:32","2014-02-19 19:49:32",2
Mule,"Cannot share caching-connection-factory","So far you cannot share caching-connection-factory.",Bug,Blocker,Closed,"2014-02-19 17:48:57","2014-02-19 17:48:57",5
Mule,"Watermark should fail to start if update expression is not an expression","It doesn't make sense for the watermakr use case to have constants as update expressions, thus, the user should be warn and the application should not start if such an error occurs.    Right now, Watermark just evaluates that expression as a constant resulting in useless watermark values.",Bug,Major,Closed,"2014-02-19 13:11:56","2014-02-19 13:11:56",1
Mule,"Fix EchoTestCase.","This is a flaky test. It's from an example and the problem seems to be that it needs to use a dynamic port.",Task,Minor,Done,"2014-02-18 19:11:58","2014-02-18 19:11:58",3
Mule,"New Database Message Processor: NPE when parsing queries in Templates","Steps to reproduce:   1.- Create and run the followed Mule config:          Issue: when running the application you get the followed NPE      ",Bug,Minor,Closed,"2014-02-18 15:57:28","2014-02-18 15:57:28",1
Mule,"Fail to expand properties when using property placeholder shared in a domain","Steps:    # Deploy the below application and domain  # Put domain.properties in domain root dir  # bin/mule    * Expected: Mule starts and flow listens on 127.0.0.1:8811/in1 and 127.0.0.1:8811/in2  * Actual: Mule fails to start because $[http.port] is an invalid value for port  * Note: I put domain.properties file in domain root directory because in domain/classes it is not found  ",Bug,Blocker,Closed,"2014-02-18 15:13:36","2014-02-18 15:13:36",5
Mule,"New Database Messsage Processor: rename <db:output-param /> to <db:out-param />","To be consistent with the db:in-param, the output parameter should be named   db:out-param.     Studio is already generating the XML as  <db:out-param /> ",Bug,Minor,Closed,"2014-02-18 14:40:30","2014-02-18 14:40:30",1
Mule,"New Database Message Processor: Template tag is not accepting dynamic-query as a child element","Steps to reproduce:   1.- Execute the followed Mule config:          Issue: You get the followed SAXParserException     ",Bug,Major,Closed,"2014-02-18 14:11:13","2014-02-18 14:11:13",1
Mule,"Avoid transformer lookup inside registry to improve performance","Transformer resolution inside MuleRegistryHelper implies two different lookup operations: one for TransformerResolver and another for Transformers.  Both lookup operations have a high cost as they imply that prototype beans will be created during the search process.  Performance can be improved, in particular avoiding high contention on the application classLoader, if the mentioned lookup are not executed.  ","Enhancement Request",Major,Closed,"2014-02-18 01:15:09","2014-02-18 01:15:09",8
Mule,"Transformer resolution in TypeBasedTransformerResolver fails depending on which order transformers are found","TypeBasedTransformerResolver uses registry to lookup all the transformers that are compatible with a given transformation.  Then it searches on the obtained list of transformers looking for the best match to execute the transformation.  Problem its that the transformers are not ordered, so the best match calculation fails to obtain a transformer when the two first transformers have the same weight but different implementation classes. In this case, if the best transformer is a third one, then it won't be found because the resolution will fail on the previous ones.",Bug,Major,Closed,"2014-02-17 23:58:27","2014-02-17 23:58:27",5
Mule,"JMS inbound do not reconnect to queue after broker restart","When restarting ActiveMQ a JMS inbound endpoint do not reconnect.    To reproduce:  # Install the attached mule-config.xml  # Start an ActiveMQ broker  # Copy activemq-all-5.9.0.jar to lib/user  # bin/mule -M-Dhttp.port=8811  # Wait for deployment  # Verify that application works running: curl http://127.0.0.1:8811/jms1 and seeing that one message is queued in queue out  # Restart activemq broker  # curl http://127.0.0.1:8811/jms1  ## Expected: one message is queued on queue out  ## Actual: out queue has no message besides the one before restarting  ",Bug,Critical,Closed,"2014-02-17 18:58:16","2014-02-17 18:58:16",1
Mule,"Number of JMS consumers decreases to 1 after reconnection","After reconnection the number of JMS consumers goes from 4 to 1 (In fact to 0, but goes to 1 after queueing a message).    Steps:    # Install the attached mule-config.xml  # Start an ActiveMQ broker  # Copy activemq-all-5.9.0.jar to lib/user  # bin/mule -M-Dhttp.port=8811  # Wait for deployment  # Go to activemq console and verify that there are 4 consumers on queue *in*  # Verify that application works running: curl http://127.0.0.1:8811/jms1 and seeing that one message is queued in queue *out*  # Restart activemq broker  # Wait for console to be up  ## Expected: 4 consumers on queue in  ## Actual: 0 consumers  # bin/mule -M-Dhttp.port=8811  ## Expected: 4 consumers on queue in  ## Actual: 1 consumers    I've tried setting {{numberOfConsumers=4}} in the connector but works in the same way    It's a regression since in 3.4.1 and before works as expected    Tried to load the application with 1000 requests and the consumer's number remains the same    mule-config:      ",Bug,Critical,Closed,"2014-02-17 14:45:21","2014-02-17 14:45:21",5
Mule,"Can't use WS consumer with message properties","Consider the attached configuration in which I'm trying to receive a ZIP as an http query param and then use that zip to invoke a weather web service.    It is impossible to do so unless I use that message property to create a map in the payload and then use datamapper to create the invocation body.    I should have to be forced to create completely artificial set-payload and datamapper message processors for doing something as simple as asking for the weather of a ZIP number. I should't have to write the SOAP body myself either. Any of these two options defeat the purpose of the component.    I should be able to just pass the ws:consumer whatever attributes the invocation takes and it should be able to construct the body. ",Bug,Critical,Closed,"2014-02-17 14:05:29","2014-02-17 14:05:29",8
Mule,"Can't use WebService consumer with operation without parameters","Consider the documentation attached:    The endpoint localhost:8081/ consumes a web services that takes a ZIP as an input parameter. That operation works perfectly.    However, in localhost:8081/test I'm trying to consume an operation which doesn't take any parameters. There's no way to make this work because:    1) WS consumer is expecting me to generate the soap envelope using datamapper, however, I don't have a payload to transform so I'm forced to create a dummy map  2) Because the operation is expecting no parameters, the XML that DataMapper generates looks like this: <?xml version=1.0 encoding=UTF-8?>  3) The above results in WS consumer returning this error, basically because there's no envelope to consume:    org.mule.api.transport.DispatchException: COULD_NOT_READ_XML_STREAM. Failed to route event via endpoint: org.mule.module.cxf.CxfOutboundMessageProcessor. Message payload is of type: PostMethod    Error put aside, it doesn't make sense to me that:    * It seems like the only easy way to generate the SOAP envelopes is through DataMapper, which is not a CE feature like WS Consumer is  * How do I create a valid envelope when the operation takes no parameters?  * Because envelope generation depends on datamapper, I have to drop the WS Consumer box in the canvas before the DataMapper one. It's not natural for the developer to think the flow from right to left.  * Shouldn't WS consumer be capable of auto generating the envelope, at least when it requires no parameters?  ",Bug,Blocker,Closed,"2014-02-14 22:30:08","2014-02-14 22:30:08",5
Mule,"CxfBasicTestCase has wrong assertions","CxfBasicTestCase has tests which are broken but, as the assertions are not ok, they seem to pass.    Line:   XMLUnit.compareXML(echoWsdl, result.getPayloadAsString());  Should be:  assertTrue(XMLUnit.compareXML(echoWsdl, result.getPayloadAsString()).identical());",Bug,Minor,Closed,"2014-02-13 22:42:14","2014-02-13 22:42:14",1
Mule,"ExpressionSplitterXPathTestCase has wrong assertions","ExpressionSplitterXPathTestCase has tests which are broken but, as the assertions are not ok, they seem to pass.    Lines:          XMLUnit.compareXML(EXPECTED_MESSAGE_1, results.get(0).toString());         XMLUnit.compareXML(EXPECTED_MESSAGE_2, results.get(1).toString());    Should be:          assertTrue(XMLUnit.compareXML(EXPECTED_MESSAGE_1, results.get(0).toString()).identical());          assertTrue(XMLUnit.compareXML(EXPECTED_MESSAGE_2, results.get(1).toString()).identical());  ",Bug,Minor,Closed,"2014-02-13 22:35:45","2014-02-13 22:35:45",1
Mule,"MuleApplicationContext renamed to MuleArtifactContext breaks backwards compatibility","On Mule 3.5-M4, MuleApplicationContext was renamed to MuleArtifactContext.  This class is used in other projects, and will break them.    Provide a deprecated MuleApplicationContext to avoid breaking these apps.  ",Bug,Critical,Closed,"2014-02-13 20:34:17","2014-02-13 20:34:17",3
Mule,"Deprecate <all> in favor of <scatther-gather>","Now that we have an implementation of the scatter gather pattern, deprecate the <all> element in favor of it.    There is a slight variation in functionality, but for most cases scatter-gather will be prefered, and the advanced cases were you need to evaluate the same payload sequentially, yet fail at the first failure, can be accomplished using wire-taps.    This task requires:  - Issuing a warning when parsing <all> in an xml definition.  - Changing mule schema's documentation to flag the deprecation in doc  - Deprecate class implementing the all router.","Enhancement Request",Major,Closed,"2014-02-13 20:09:05","2014-02-13 20:09:05",5
Mule,"New database module Streaming feature is not working with large queries","When the Streaming option of the new database module is activated, there is an error with large queries. Additionally, no error message is shown and no results are returned.    Config:    <poll doc:name=Poll>   <fixed-frequency-scheduler frequency=1000 timeUnit=MINUTES />   <watermark variable=timestampdb default-expression=#['2010-02-11 14:25:12'] selector=MAX selector-expression=#[payload.last_modified]/>   <db:select config-ref=MySQL_Config doc:name=Query Database >    <db:parameterized-query><![CDATA[SELECT first_name,last_name,email,last_modified FROM contact WHERE last_modified > #[flowVars['timestampdb']]]]></db:parameterized-query>   </db:select>  </poll>    Same configuration without watermark was also tested and same behavior resulted.",Bug,Blocker,Closed,"2014-02-13 15:31:47","2014-02-13 15:31:47",8
Mule,"Fix flaky FlowSyncAsyncProcessingStrategyTestCase.","This is a flaky that was ignored.",Task,Minor,Done,"2014-02-12 18:46:38","2014-02-12 18:46:38",5
Mule,"Poll: watermark gives a wrong warning message when no results are returned from the query inside the poll","When polling Salesforce to retrieve data using the watermark feature, a warning message saying that the watermark is null appears if the query does not bring back any data.    For example, the following Salesforce query:  SELECT Email,FirstName,LastName,LastModifiedDate FROM Contact WHERE LastModifiedDate > #[flowVars['timestamp']]    Then the following warning appears even though the watermark value is not null:    WARN  Watermark [pool-13-thread-1]: Watermark value is null and will be ignored",Bug,Minor,Closed,"2014-02-11 20:01:48","2014-02-11 20:01:48",1
Mule,"OAuth2 authorize MessageProcessor enters a loop if it's the last processor in the flow","Consider the following flow:    <flow name=authorizeFlow>     <http:inbound-endpoint path=authorize port=8081 exchange-pattern=request-response>     <google-calendars:authorize />  </flow>    That results in google's OAuth login screen showing up. After authorization, the browser is continuously redirected to the same page over and over again.    However, if the flow is changed to this:    <flow name=authorizeFlow>     <http:inbound-endpoint path=authorize port=8081 exchange-pattern=request-response>     <google-calendars:authorize />     <logger message=authorized! />  </flow>    It starts to work perfectly after any message processor is placed after the authorization one. This is probably and issue due to the fact that authorize MP's are intercepting but in the first example there's nothing to intercept.",Bug,Major,Closed,"2014-02-10 21:14:18","2014-02-10 21:14:18",5
Mule,"Lack of synchronization causes multiple expiration requests on Aggregator groups","The test EventCorrelatorTestCase.processesExpiredGroupInPrimaryNode fails intermitently due to a lack of synchronization in the access to an object store between different threads, that sporadically leads to a group expiry being triggered several times.    This may be a problem if the correlation is setup to process the group at expiration instead of giving an error.    The problem is mitigated when using persistent object stores as I/O synchronisation is creating an adhoc happens-after causality.",Bug,Major,Closed,"2014-02-10 13:43:50","2014-02-10 13:43:50",8
Mule,"Disallow multiple transaction manager to be used within an application","Currently if multiple transaction manager are configured in mule, as mule only supports one, it will just peek the first one.    To avoid confusion to users we must not allow users to configure multiple transaction managers.",Bug,Blocker,Closed,"2014-02-07 21:32:36","2014-02-07 21:32:36",3
Mule,"WS-Consumer wsdl doesn't allow resource paths","The web service consumer requires the location of a wsdl file as part of it's configuration.    The location is parsed as a URL and if not valid, it is parsed as a file path. The convention in mule is to treat these fields as resource paths, which would allow URLs, absolute files, but will also look for resource files (relative to the current classpath, and possibly inside a jar).    Change the behavior so that the wsdl location is treated as a reouce location.  ",Bug,Major,Closed,"2014-02-07 18:10:12","2014-02-07 18:10:12",1
Mule,"HTTP inbound endpoints listen for requests in a different path ","When http inbound endpoint listens to *in* path, if you send a request to path *inxxx* it receives it.     To reproduce deploy this configuration using bin/mule -M-Dhttp.port=YYYY and run curl http://127.0.0.1:YYYY/inxxx    ",Bug,Major,Closed,"2014-02-07 17:59:58","2014-02-07 17:59:58",5
Mule,"Initial preparations for the Mule 4 development branch","This task will track changes made in the mule-4.x branch in order to accomodate code cleanup tasks.    The scope includes:   - Upgrading minimum JDK to 7   - Removing any JDK 6 specific code or modules   - Get a full maven build to run    Out of scope (to be tracked in other tasks)   - Removing classes and methods deprecated in mule-3.x  ",Task,Major,Done,"2014-02-07 15:16:55","2014-02-07 15:16:55",8
Mule,"Domain initialization result (failure or success) should be shown in a box at the end of the log when starting","Currently, domain initialization status is shown in the logs when performed. But, in the same way that applications, it should be shown in a summary box at the end of server start.",Bug,Minor,Closed,"2014-02-06 16:25:54","2014-02-06 16:25:54",5
Mule,"TransientRegistry does not dispose all registered objects on dispose.","When the dispose method is called on a TransientRegistry instance, the current registered objects are not disposed.  Also, if different objects are registered using the same key, just the last object is kept and previous ones are lost. They should also be disposed at dispose phase.",Bug,Minor,Closed,"2014-02-06 14:41:11","2014-02-06 14:41:11",2
Mule,"Disposing a domain do not undeploy application","# Deploy an application to a domain  # Delete domain anchor file    Expected: application gets undeployed  Actual: application remains deployed",Bug,Critical,Closed,"2014-02-06 14:07:08","2014-02-06 14:07:08",5
Mule,"It shouldn't be allowed to deploy an application to more than one domain","Try to deploy an application to more than one domain by putting this lines into mule-deploy.properties:    ",Bug,Minor,Closed,"2014-02-06 13:50:17","2014-02-06 13:50:17",5
Mule,"Allow new DB module config to be share between applications","Allow the new DB config elements to be shared between applications using them as a domain resource.  This will allow to share DataSource connections between applications.  ","Enhancement Request",Critical,Closed,"2014-02-06 02:07:18","2014-02-06 02:07:18",3
Mule,"The class EventCorrelator.ExpiringGroupMonitoringThread has an expiryMonitor member that is not disposed at dispose phase.","The dispose method of the EventCorrelator class is not taking into account the expiry monitor inside its inner class ExpiringGroupMonitoringThread.",Bug,Minor,Closed,"2014-02-05 21:33:48","2014-02-05 21:33:48",2
Mule,"If an error occurs while configuring a just created mule context, inside DefaultMuleContextFactory, this context is not disposed","Several methods inside DefaultMuleContextFactory class create MuleContext objects and then configure them. If the configuration phase raises an exception, the created mule context is not returned and the could not be disposed.",Bug,Minor,Closed,"2014-02-05 21:19:32","2014-02-05 21:19:32",2
Mule,"Allow to use a different timeout on TestProcess.waitUntilStarted().","When Starting a TestProcess instance, if the application is larger than normal or depends on many services, it may take longer to start than the hardcoded 30 seconds, we should provide a way to set this property.",Task,Trivial,Done,"2014-02-05 20:49:30","2014-02-05 20:49:30",0
Mule,"Avoid hung threads on tests cases","Currently there are several tests that left running threads once they ends. These threads consume resources and could interfere with other tests. This task aims to add checks at top level tests hierarchy in order to detect those tests leaving running threads, and then correct the them.",Task,Minor,Done,"2014-02-05 20:24:32","2014-02-05 20:24:32",13
Mule,"Upgrade schema versions to 3.5","Upgrade the schema version to 3.5",Task,Critical,Done,"2014-02-05 19:11:15","2014-02-05 19:11:15",2
Mule,"Anchor file is created before application gets deployed","Anchor file is created after application unzip but application is still not initialized. Problem is in ArtifactArchiveInstaller#installArtifact  To reproduce:  # Create a zipped app with the below configuration. # Copy zipped file to ${MULE_HOME}/apps # Start mule using this command {{bin/mule start; if [ -f ${MULE_HOME}/apps/application-name-anchor.txt ] ; then curl http://127.0.0.1:8811/in ; fi }}  You should receive and {{in}} message in the console but you get {{curl: (7) couldn't connect to host}}  ",Bug,Critical,Closed,"2014-02-05 13:10:13","2014-02-05 13:10:13",5
Mule,"WS consumer returns an invalid xml document when the payload contains multiple namespaces","If a soap envelope contains a body which uses at least two different namespaces, and one of those is not used in the top element, the resulting xml document doesn't declare all the namespaces, and thus is not valid.    Example response that is not processed correctly:  <soapenv:Envelope xmlns:soapenv=http://schemas.xmlsoap.org/soap/envelope/ xmlns=urn:enterprise.soap.xxxx xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance>     <soapenv:Body>        <loginResponse>           <result>              ...              <passwordExpired>false</passwordExpired>              <sandbox>false</sandbox>              ...              <roleId xsi:nil=true/>              ...           </result>        </loginResponse>     </soapenv:Body>  </soapenv:Envelope>    fails because it's returned as:    <?xml version=1.0 encoding=UTF-8?>  <loginResponse xmlns=urn:enterprise.soap.sforce.com>      <result>          ...          <passwordExpired>false</passwordExpired>          <sandbox>false</sandbox>          ...          <roleId xsi:nil=true/>          ...      </result>  </loginResponse>    Note that the xsi namespace is not imported.  ",Bug,Major,Closed,"2014-01-31 18:33:45","2014-01-31 18:33:45",8
Mule,"Review flaky tests in 3.x builds.","Most of the slow test builds are failing because of flaky tests. We need to review them, test them locally and ignore them if necessary, saving the logs from the failures to later fix them.",Task,Minor,Done,"2014-01-31 18:11:00","2014-01-31 18:11:00",8
Mule,"DevkitSupport module should use apache commons StringUtils instead of Spring","Replace usage of org.springframework.util.StringUtils for org.apache.commons.lang.StringUtils to prevent class loading issues when older projects are using prior versions of Spring",Bug,Minor,Closed,"2014-01-29 20:22:51","2014-01-29 20:22:51",1
Mule,"MULE_REMOTE_CLIENT_ADDRESS variable gets the wrong value when http requests are proxied","If an http request is proxied, the MULE_REMOTE_CLIENT_ADDRESS will have the address of the proxy instead of the client address.    The X-Forwarded-For header contains a comma separated list of addresses, the first of which is the original client.    Mule should look if the http headers contain an X-Forwarded-For header, and in such case populate the MULE_REMOTE_CLIENT_ADDRESS from it's first element if such element is a valid IP address.    Additionally, when this situation is detected, add a new INBOUND property called MULE_PROXY_ADDRESS that contains the proxy address    ",Bug,Major,Closed,"2014-01-29 19:42:32","2014-01-29 19:42:32",5
Mule,"Add support for domain bundle zip file deployment","Add support for deploying a mule domain bundle file.     Domain bundle includes not only the domain but the apps to deploy in that domain.  ","Enhancement Request",Critical,Closed,"2014-01-29 17:20:44","2014-01-29 17:20:44",8
Mule,"move scatter-gather config elements to the top","scatter-gather component has two config elements: threading-profile and custom-aggregation-strategy.    Right now, those share a sequence with the inner message processors in which its defined that these elements go on the bottom.    For consistency with other components, they should be moved to the top, so that what used to be:    <scatter-gather timeout=5000>      <flow-ref name=A />      <vm:outbound-endpoint path=foo />      <sfdc:upsert ..... />        <custom-aggregation-strategy [class=org.my.CustomAggregationStrategy | ref=beanReference] />      <threading-profile maxThreadsActive=5 />  </scatter-gather>    Should now be:    <scatter-gather timeout=5000>      <custom-aggregation-strategy [class=org.my.CustomAggregationStrategy | ref=beanReference] />      <threading-profile maxThreadsActive=5 />        <flow-ref name=A />      <vm:outbound-endpoint path=foo />      <sfdc:upsert ..... />  </scatter-gather>",Bug,Major,Closed,"2014-01-28 20:07:32","2014-01-28 20:07:32",1
Mule,"Request reply does not work when using specific connector","When the inbound endpoint of a request-reply router uses an specific connector, different to the default one for that transport, then it does not work since it cannot find the endpoint.            <request-reply>              <vm:outbound-endpoint path=persistentQueue connector-ref=sharedPersistentVmConnector/>              <vm:inbound-endpoint path=persistentQueueResponse connector-ref=sharedPersistentVmConnector/>          </request-reply>      Adding the connector as attribute of the path makes it work:          <request-reply>              <vm:outbound-endpoint path=persistentQueue connector-ref=sharedPersistentVmConnector/>              <vm:inbound-endpoint path=persistentQueueResponse?connector=sharedPersistentVmConnector connector-ref=sharedPersistentVmConnector/>          </request-reply>    To solve this problem the replyTo property must be generated with the specific connector if available.",Bug,Critical,Closed,"2014-01-28 17:27:50","2014-01-28 17:27:50",8
Mule,"WS consumer throws NullPointerException when defining an empty security element","When defining a global configuration element for WS consumer that has an empty security element (defined but empty), a null pointer is thrown upon initialisation.    <ws:consumer-config ...>      <ws:security> </ws:security>  </ws:consumer-config>",Bug,Major,Closed,"2014-01-28 14:29:49","2014-01-28 14:29:49",1
Mule,"Allow BTM to configure username and password for JMS","The Bitronix Connection Factory should be able to receive a username and password to be used for JMS connections.","Enhancement Request",Critical,Closed,"2014-01-23 18:11:01","2014-01-23 18:11:01",5
Mule,"Restart applications automatically even after failure","When using Studio, it saves my changes to disk and Mule restarts my application automatically - which is wonderful, because I can rapidly prototype my application. However, if I make a syntax error, Mule will cease to redeploy my application after that, forcing me to restart Mule completely. Mule should auto-redeploy applications, even if the last deployment failed. (If we can't make that the default for 3.5, we should add a flag to support this in Studio)","Enhancement Request",Major,Closed,"2014-01-20 18:15:59","2014-01-20 18:15:59",8
Mule,"Define the type of the payload of the web service consumer","Currently the web service consumer adds an AutoTransformer so that the payload in the response is set as a String. Ideally the payload should be an XMLStreamReader but this doesn't work with DataMapper. Using the transformer and converting to a String may cause performance issues. If the payload is XMLStreamReader, a transformer can be added after the WSConsumer but this breaks data sense.  Define the correct approach.",Task,Major,Done,"2014-01-15 18:46:01","2014-01-15 18:46:01",3
Mule,"loader.override being ignored in 3.5.0-cascade - Cloudhub(Dec 2013) runtime","The Connector is using CXF 2.6.0 dependencies, and it has defined a plugin.properties with the follow line  loader.override=org.apache.cxf,org.apache.ws,org.apache.xml    In 3.5 with Cloudhub (Dec 2013) runtime environment the same application fails because is invoking one operation that is not defined in cxf 2.5.9.     The same application is working correctly on Mule Studio 3.4.  The Demo Application can be found in here (https://docs.google.com/a/mulesoft.com/file/d/0B9Ow2Z2e_0YmOTlLSURNdmwxZXFDcFM4MU4wODB0VllYcjFz/edit).  The connector version that is working can be located in here (https://github.com/mulesoft/ms-dynamics-crm-connector/tree/mule-module-ms-dynamics-crm-1.7.1)  ",Bug,Blocker,Closed,"2014-01-15 15:33:56","2014-01-15 15:33:56",8
Mule,"Implement security username token profile in web service consumer","Add support for ws-security username token profile in the web service consumer component.",Task,Critical,Done,"2014-01-15 15:10:59","2014-01-15 15:10:59",5
Mule,"Implement security timestamp in web service consumer","Add support for ws-security timestamp in the web service consumer component.",Task,Critical,Done,"2014-01-15 15:09:47","2014-01-15 15:09:47",5
Mule,"Add support for attachments in web service consumer","It should be possible to add MTOM attachments to a SOAP request, and also to extract attachments from the response and add them to the Mule message.",Task,Major,Done,"2014-01-15 15:06:24","2014-01-15 15:06:24",8
Mule,"Define a global configuration element for the web service consumer","Currently the web service consumer receives all its properties as attributes in the message processor. We need to define a global configuration element with some of these attributes, that may can be referenced by the message processor, to avoid repeating XML code in mule applications where more than one WS or operation within the same WS is consumed.",Task,Critical,Done,"2014-01-15 14:59:47","2014-01-15 14:59:47",8
Mule,"Changes in HttpMuleMessageFactory and AbstractMuleMessageFactory breaks 3.4.x devkit's generated code","Changes introduced in HttpMuleMessageFactory and AbstractMuleMessageFactory are affecting 3.4.x devkit's generated code, where the constructor of HttpMuleMessageFactory was using the MuleContext as a parameter.    The old behaviour should remain as a connector built in 3.4.x wouldn't work in a new (3.5) Mule version.    As a side note: from now on (3.5.0-dolomite) devkit will use the new way of creating the factory.",Bug,Blocker,Closed,"2014-01-13 15:15:41","2014-01-13 15:15:41",3
Mule,"Confusing log message in EventProcessingThread","EventProcessingThread has confusing log messages like:    logger.debug(Stopping expiring group monitoring);  logger.debug(Expiring group monitoring fully stopped);    Since this is an abstract class with different types of uses, those messages are confusing and should be changed to something that gives information about the actual thread that's executing",Bug,Minor,Closed,"2014-01-09 17:57:48","2014-01-09 17:57:48",1
Mule,"An exception to be thrown when a SOAPFault is returned","An exception to be thrown when a SOAPFault is returned so that I can handle it using exception strategies","Enhancement Request",Critical,Closed,"2014-01-07 22:10:10","2014-01-07 22:10:10",3
Mule,"Should be able to add custom soap headers","Should be able to add custom soap headers","Enhancement Request",Critical,Closed,"2014-01-07 22:03:29","2014-01-07 22:03:29",3
Mule,"Use an expression for the service address","Use an expression for the service address so that dynamically invoke different services - e.g. in different locations. (different env's).","Enhancement Request",Critical,Closed,"2014-01-07 21:54:39","2014-01-07 21:54:39",2
Mule,"Configure Exchange Pattern based on WSDL Operation MEP","Configure Exchange Pattern based on WSDL Operation MEP","Enhancement Request",Major,Closed,"2014-01-07 21:52:04","2014-01-07 21:52:04",13
Mule,"Get SOAP action working correctly","Today the SOAP Action works for .NET WS. This has to work across all technologies.","Enhancement Request",Critical,Closed,"2014-01-07 21:43:29","2014-01-07 21:43:29",5
Mule,"Migrated Tests to new Web Services Consumer module","Migrated Tests to new Web Services Consumer module","Enhancement Request",Critical,Closed,"2014-01-07 21:39:13","2014-01-07 21:39:13",2
Mule,"MVEL Version upgrade","As a user of Mule 3.5.0, I would like Mule to depend on the latest version of MVEL (used for DataMapper and MVEL) to stay up-to-date with the latest MVEL bug fixes/enhancements.    The latest version seems to be 2.1.8",Story,Major,Done,"2014-01-06 02:23:13","2014-01-06 02:23:13",5
Mule,"Create Scatter-Gather component for parallel multicasting","The <all> router currently in Mule makes a good job at doing message multicasting. However, since its processing is sequential, it's not a good fit for some use cases.    Implement a scatter-gather component as described in https://github.com/mulesoft/mule/wiki/%5BMULE-3.5-February-2014%5D-Scatter-Gather for parallel multicasting","Enhancement Request",Major,Closed,"2014-01-02 21:23:04","2014-01-02 21:23:04",8
Mule,"Analyse the changes to have MULE_HOME and MULE_BASE","We need to review the cost and the impact of making the change for MULE-7182 to have Studio starting their apps in the same way Mule Starts them",Task,Major,Done,"2014-01-02 17:15:30","2014-01-02 17:15:30",8
Mule,"Review maven configuration to avoid executing test that depend on external services","Doing a clone of the mule projects and then a mvn clean install should ALWAYS work. No matter the environment were I'm running it.",Task,Critical,Done,"2014-01-02 16:57:19","2014-01-02 16:57:19",8
Mule,"Move ws-proxy from patterns/core into a new web services module","The new web services component will use the ws namespace. This namespace is already used by the patterns-core module (it is deprecated, replaced by the patterns namespace, they both support defining a web service proxy).    Before adding the code of the web services consumer, we need to:  - Create the ws module, and move the web service proxy implementation into it.  - Make patterns-core depend on ws so that we still support defining a web service proxy through the pattern namespace.  - Deprecate the web service proxy from the pattern namespace, suggesting to use the one from the ws namespace.  - Use the ws namespace in the new ws module (move the xsd and namespace handler from patterns-core).",Task,Critical,Done,"2013-12-30 21:41:34","2013-12-30 21:41:34",1
Mule,"Remove installer specific behaviour from SwitchVersion script","Remove installer code from this file: https://github.com/mulesoft/mule/blob/mule-3.x/buildtools/scripts/SwitchVersion.groovy",Task,Minor,Done,"2013-12-30 18:19:10","2013-12-30 18:19:10",1
Mule,"Producer interface should not be tied to List<T>","the Producer interface has a return type of List<T> for the produce() method. This was fine for its original intent but as its uses keep growing we need something more generic.    The method signature should change to simple T produce() and replace T with a List when necessary","Enhancement Request",Major,Closed,"2013-12-20 20:41:36","2013-12-20 20:41:36",2
Mule,"Integrate the current Web Services Component to Mule","In order to run user testing we need to integrate the current component to Mule.  ",Story,Critical,Done,"2013-12-18 16:31:28","2013-12-18 16:31:28",3
Mule,"Improper handling of UnknownHostException in Outbound TCP","The problem is that when a hostname cannot be resolved (bad hostname is provided, or DNS is down, etc), Mule's connection pooling system will interpret it as localhost. In the case where the local host happens to be listening on the same port, it can result in messages being routed to the wrong place, whereas they should have failed to connect due to the bad hostname.  This is caused by:   1. In the constructor of org.mule.transport.tcp.TcpSocketKey, an InetSocketAddress is constructed. If host resolution fails, the object is created anyway.   2. In org.mule.transport.tcp.TcpSocketFactory, 'getAddress()' is called on the socket key and passed directly into socket.connect(...).   3. In the case that step (1) failed, 'getAddress()' will return null. socket.connect(...) interprets null to be localhost.",Bug,Blocker,Closed,"2013-12-19 17:48:28","2013-12-19 17:48:28",1
Mule,"CollectionSplitter uses wrong type of List","CollectionSplitter uses a LinkedList to split payloads of type Collection. An ArrayList would be way more efficient since the size of the collection is known.","Enhancement Request",Minor,Closed,"2013-12-18 23:57:59","2013-12-18 23:57:59",1
Mule,"DefaultMuleMessage should instantiate transient fields when deserealized","We're working in a new serialization mechanism for Mule that will not require objects to implement Serializable or to provide a default constructor.    This relies on ASM, Objenesis and other non standard instantiaton methods that have as a side effects that transient fields initialized in line not being initialized.    For example:    private transient Map<String, DataHandler> inboundAttachments = new ConcurrentHashMap<String, DataHandler>();    When the MuleMessage is initialized through Objenesis, inboundAttachments will be null since a new constructor is added via ASM which ignores the transient fields.    Since this constructor will only be used when serializing and DefaultMuleMessage implements the DeserializationPostInitialisable interface, the initAfterDeserialisation method should instantiate these fields if they are null","Enhancement Request",Major,Closed,"2013-12-18 22:51:36","2013-12-18 22:51:36",1
Mule,"Analyze proper solution to MULE-6432 (true asynchronous <all>","We should decide the proper approach for implementing a truly asynchronous <all> message processor.",Task,Critical,Done,"2013-12-16 19:12:15","2013-12-16 19:12:15",8
Mule,"Request Body is not closed in the HttpMessageReceiver","With the changes made in HTTP in 3.4 there's an issue were from time to time a request is accepted but the sockets gets unexpectedly closed. This doesn't happen with the OldHttpMessageReceiver class.    We found that the difference on how the response is handled between both implementation is that in the OldHttpMessageReceiver the request's body if closed after successfully sending the response (something that the new receiver is not doing).   After we added this code to the new receiver the issue was solved.  Unfortunately we weren't able to reproduce this issue in our side, so we cannot create a test case to confirm the fix.  The code we need to add is found in the line 210 of the org.mule.transport.http.OldHttpMessageReceiver class:  if (request.getBody() != null)  {      request.getBody().close();  }",Bug,Critical,Closed,"2013-12-04 19:03:06","2013-12-04 19:03:06",3
Mule,"Add support for HTTP connector sharing","Allow an http connector to be shared using it as a shared resources in a domain configuration.",Task,Blocker,Done,"2013-12-02 21:12:31","2013-12-02 21:12:31",5
Mule,"Allow creating ConsumerIterator instances without selecting a Consumer","In 3.5.0-M3, ConsumerIterator has only one constructor which receives a Consumer. It can be confusing for a dev to choose the right Consumer implementations besides of generating unnecessary coupling between the streaming framework and whichever component using it.    It'd be great for a developer to be able to only provide the Producer and let the system choose which Consumer implementation is a best fit","Enhancement Request",Minor,Closed,"2013-11-29 20:11:56","2013-11-29 20:11:56",1
Mule,"QueueProducer should have a variable generic type","QueueProducer class is tied to Serializable as a generic type. it should allow any T",Bug,Major,Closed,"2013-11-29 20:01:40","2013-11-29 20:01:40",1
Mule,"Redeploy domain when domain config resource is updated","When the domain configuration file gets updated, then the domain must be redeploy.    Domain redeploy must also include redeployment of the applications of the domain.    The sequence should be:   - Acknowledge domain resources has changed.   - Undeploy domain applications   - Undeploy domain   - Redeploy using the updated configuration   - Redeploy domain applications","Enhancement Request",Major,Closed,"2013-11-22 19:33:24","2013-11-22 19:33:24",5
Mule,"Create mule domain + domain applications project creation using maven artifact.","This should be kind of an extension of MULE-7138 but should also allow to have a multi module project where one of the project is defined as the domain and the other projects are mule applications that belong to that domain.    This artifact should create a package containing the domain + the apps that during deployment it will first create the domain and then deploy the applications.",Task,Critical,Done,"2013-11-21 18:38:19","2013-11-21 18:38:19",8
Mule,"Create domain concept in mule, basic resource sharing, and domain deployment feature","This task includes:   - Add domain concept within mule code base.   - Behaviour of domain deployment / undeployment / redeployment including notifications   - Class loading changes for domain class loader   - Create resource based on a domain configuration file   - Add logging functionality so domain resources log in their own file",Task,Major,Done,"2013-11-21 18:29:39","2013-11-21 18:29:39",13
Mule,"DefaultMessageProcessor chain needs to decouple from Pipeline","DefaultMessageProcessorChain decides how to handle VoidMuleEvent on whether the flowConstruct is a Service or a Flow. This is done by testing the flowConstruct to be an instance of Pipeline.    Now that the batch module has been introduced, we have a new type of FlowConstruct which is not a Service but not a Pipeline either, which causes errors when one-way outbound endpoints are used in batch.    DefaultMessageProcessorChain should be changed so that it takes decisions based on the flowConstruct being an instance of Service only",Bug,Blocker,Closed,"2013-11-20 18:43:39","2013-11-20 18:43:39",3
Mule,"Need to support short lived queues","So far, all queues in Mule start and stop with the mule context, meaning that once a queue is created it remains active until the owning application stops.    This model does not fit the Batch module, which creates queues when a job instance is started and then needs to discard it when the job instance finishes.    The clear() method that was added in 3.5.0-ME allows reclaiming the storage but the QueueManager still keeps in-memory resources that are never freed.    Therefore the QueueManager interface needs to add the following method:    void disposeQueue(Queue);    This method frees all resources currently held by the queue including the storage (meaning that queue.clear() will be invoked automatically)    Additionally, another common need when dealing with short lived queues is the ability to easily create/retrieve queues with custom configurations.    To do that, the QueueSession interface will gain the following method:    Queue getQueue(String name, QueueConfiguration queueConfiguration);","Enhancement Request",Major,Closed,"2013-11-19 17:04:25","2013-11-19 17:04:25",2
Mule,"MuleExceptions are not all Serializable","The Exception interface is Serializable, however some implementations of MuleException contain non-serializabe fields which violates the Exception contract and causes errors when trying to persist the Exception in an ObjectStore.    All non-serializable fields in any implementation of MuleException should be marked as transient",Bug,Major,Closed,"2013-11-15 13:15:04","2013-11-15 13:15:04",1
Mule,"OAuth support throws raw exception when authorization code not found","When receiving the Oauth callback an exception of type java.lang.Exception is thrown if no authorization code is found on the response (which is often the case when the user denys authorization).    Because the exception is a raw type, there's no way to catch it and take a specific action.     A new exception type should be created to that purpose and that exception should be thrown",Bug,Major,Closed,"2013-11-13 15:21:01","2013-11-13 15:21:01",1
Mule,"MEL DateTime is not serializable","DateTimes should be serializable so that they can work with watermark.",Bug,Major,Closed,"2013-11-12 21:29:55","2013-11-12 21:29:55",1
Mule,"Add selectors functionality on Watermark","Implement selectors functionality on watermark as described in https://github.com/mulesoft/mule/wiki/%5B3.5-M1%5D-Watermark","Enhancement Request",Critical,Closed,"2013-11-08 12:16:31","2013-11-08 12:16:31",3
Mule,"Allow each until-successful processor to have its own threading profile","It is using the mule common work manager. So the behaviour of it is affected by other threads in mule that are not related to until successful. It also makes hard to customise the threading profile for the until successful. Each until successful should have it own threading profile.    This is a subset related to MULE-7035","Enhancement Request",Critical,Closed,"2013-11-06 01:45:15","2013-11-06 01:45:15",8
Mule,"Need to decouple Pipeline interface from MessageProcessorPath generation","In order to be able to implement EE-3510 need to fix this issue.","Enhancement Request",Critical,Closed,"2013-11-05 20:03:51","2013-11-05 20:03:51",2
Mule,"Add support for specifying as a system property, FIPS compliant security model","Add a system property mule.security.model that when used may alter the security setup of mule and it's modules.    The default value should be 'default', and should result in the actual behaviour. Using a value that is not recognised should result in a fatal error preventing mule to be successfully initialised.    The second supported value should be 'fips140-2', and should result in:  * The pgp module being disabled - that is, using php module constructs should raise an error  * Any TLS cipher suite NOT defined in the following list should be disabled:   (note that the provider may not support all the suites described below - if it doesn't support any of these, an error should be raised).    List of approved suites for FIPS:  SSL_RSA_WITH_3DES_EDE_CBC_SHA  SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA  TLS_RSA_WITH_AES_128_CBC_SHA  TLS_DHE_DSS_WITH_AES_128_CBC_SHA  TLS_DHE_RSA_WITH_AES_128_CBC_SHA  TLS_RSA_WITH_AES_256_CBC_SHA  TLS_DHE_DSS_WITH_AES_256_CBC_SHA  TLS_DHE_RSA_WITH_AES_256_CBC_SHA  TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA  TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA  TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA  TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA  TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA  TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA  TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA  TLS_ECDH_RSA_WITH_AES_128_CBC_SHA  TLS_ECDH_RSA_WITH_AES_256_CBC_SHA  TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA  TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA  TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA      ","Enhancement Request",Critical,Closed,"2013-11-04 20:34:42","2013-11-04 20:34:42",5
Mule,"Add pool configuration elements for JMS and JDBC in bitronix ","It must be possible to configure a JMS ConnectionFactory pool and JDBC DataSource pool explicitly through XML configuration.","Enhancement Request",Major,Closed,"2013-11-04 19:54:41","2013-11-04 19:54:41",8
Mule,"Create automated test cases for xa transaction recovery","Create automated test cases for xa transaction recovery.",Task,Major,Done,"2013-11-04 18:26:14","2013-11-04 18:26:14",13
Mule,"Provide a way to specify valid cipher specs for SSL on transports that support the protocol","SSL/TLS negotiate the actual cryptographic functions used on a session by session basis.  In strict environments, it's necessary to remove older and weaker variants of many algorithms.  It should be possible to setup the list of cipher specs allowed on secure connections. This setup should happen at server or at least application level, and the default should be to use whatever the cipher specs defined by default by the current provider.    Note that this should affect not only https, but any other transport using tis, like pops, imaps, etc.  ","Enhancement Request",Critical,Closed,"2013-11-04 18:22:29","2013-11-04 18:22:29",8
Mule,"IllegalStateException when doing OAuth dance with InMemoryObjectStore","OAuth dance works fine with PersistentObjectStores but when using in-memory ones this error is obtained:    ********************************************************************************  Message               : Failed to invoke fetch-access-token. Message payload is of type: String  Code                  : MULE_ERROR--2  --------------------------------------------------------------------------------  Exception stack is:  1. Only owner thread can write to message: Thread[[splunkfulfillmentqa].connector.http.mule.default.receiver.02,5,main]/Thread[[splunkfulfillmentqa].httpscon.receiver.02,5,main] (java.lang.IllegalStateException)    org.mule.DefaultMuleMessage:1626 (null)  2. Failed to invoke fetch-access-token. Message payload is of type: String (org.mule.api.MessagingException)    org.mule.devkit.processor.DevkitBasedMessageProcessor:134 (http://www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/MessagingException.html)  --------------------------------------------------------------------------------  Root Exception stack trace:  java.lang.IllegalStateException: Only owner thread can write to message: Thread[[splunkfulfillmentqa].connector.http.mule.default.receiver.02,5,main]/Thread[[splunkfulfillmentqa].httpscon.receiver.02,5,main]          at org.mule.DefaultMuleMessage.newException(DefaultMuleMessage.java:1626)          at org.mule.DefaultMuleMessage.checkMutable(DefaultMuleMessage.java:1612)          at org.mule.DefaultMuleMessage.assertAccess(DefaultMuleMessage.java:1541)      + 3 more (set debug level logging or '-Dmule.verbose.exceptions=true' for everything)  ********************************************************************************",Bug,Critical,Closed,"2013-10-30 21:18:28","2013-10-30 21:18:28",1
Mule,"Make Mule rely on platform configured JCE provider instead of fixing on a predefined version","TlsConfiguration gets defaults for several properties using an AutoDiscoverySecurityProviderFactory, which in turn provides defaults based on the JVM flavour in use.    In particular, it sets the default JCE Provider to use, the JCE Provider implementation class, the default Keystore type, and the default SSL protocol type being use.  This has several problems:   * It doesn't allow to properly setup JCE providers as part of the platform configuration, something required to use a FIPS 140-2 compliant JCE provider  * It fixes on old versions of the providers and doesn't leverage improvements made in the platforms, like IBM's improved JCE driver (currently we use a JCE provider that is 6+ years old on IBM JVMs)  * It fixes the SSL/TLS versions supported, which causes SSL endpoints to support SSL3 (considered deprecated) but no TLS    The java platform provides sensible defaults for all these, which get updated as the security landscape evolves, and which can be defined as part of the JVM configuration.   Remove the discovery of defaults, and use platform defaults for operations in and depending on TlsConfiguration.    Acceptance criteria:  It should be possible to use any JCE provider defined in the JVM environment in order to support FIPS compliant providers.  Endpoints should rely on the registered JCE provider for SSL and use the default ssl type instead of hardcoding one (As FIPS providers will disable several modes and only allow TLS 1.0+).  ","Enhancement Request",Major,Closed,"2013-10-30 18:54:14","2013-10-30 18:54:14",5
Mule,"Write spec for new summarizer feature","Write a spec for a new feature that is compliant with the following story:    Add a new message processor that would allow to totalise element attributes over a collection or stream.  The element should be able to extract a value based on an expression, and then calculate on these summarizer functions: add, average, count, max, min over the value.   The result should be saved into a flow variable also defined in the element.  This processor should work with streams like auto paging collections. For these cases, the options are to lazily calculate the elements as the stream is consumed or to consume the whole stream. The former should be he default, and there should be an attribute allowing to change the behaviour.",Task,Critical,Done,"2013-10-30 18:37:15","2013-10-30 18:37:15",3
Mule,"Improve the way Mime types are registered for outbound http attachments","The HTTP transport uses javax.activation to handle outbound attachments. Mime types are registered by the email transport (through a static initialization block in the class DefaultDataContentHandlerFactory). Therefore, if this class is not loaded, there are no mime types available and there is an error when sending outbound attachments through HTTP (for example: javax.activation.UnsupportedDataTypeException: no object DCH for MIME type text/plain).    In the normal use of Mule this problem doesn't happen because all transports are in the classpath, but there should not be a dependency between the HTTP transport and the email transport.    See HttpOutboundAttachmentFunctionalTestCase. If the mule-transport-email dependency is removed from the http transport pom, this test fails.  ",Task,Major,Done,"2013-10-30 13:26:48","2013-10-30 13:26:48",8
Mule,"Deprecate dev.ee repository in favour of repository.mulesoft.org","Change distribution management repositories to: https://repository-aster.mulesoft.org/nexus/content/repositories/    And build repositories to: https://repository.mulesoft.org/nexus/content/repositories/  ",Task,Blocker,Done,"2013-10-29 13:46:04","2013-10-29 13:46:04",5
Mule,"Implement new summary module for calculating aggregation functions over streams","Implement new module according to spec at https://github.com/mulesoft/mule/wiki/%5B3.5.-M3%5D-Summarizers","Enhancement Request","To be reviewed",Closed,"2013-10-28 17:55:33","2013-10-28 17:55:33",5
Mule,"Create API for record level partial error handling","Both Batch module, connectors, devkit and advanced applications will need some common ground to make partial error handling work:  Devkit and connectors will need classes that return bulk operation status on a record per record basis  Batch module will need to read partial error classes and treat them accordingly for marking record level errors.  Advanced applications may define their own components that may return partial error information.  Munit, debugger, batch module and advanced applications will also need to work on a uniform definition of record:  Munit to provide means to set record level variables or assert record state  Debugger to provide information about record state  Batch module to register MEL extensions accessing the record, and in general to provide record level scopes.  Advanced applications may eventually define custom steps (this extension is not planned on the initial release), needing to tap into the record scope objects.  A small API maven module has to be introduced, so that it may be used as a dependency on the other projects as needed. This module should have the -api suffix, and have a version scheme independent from mule.","Enhancement Request",Major,Closed,"2013-10-24 18:32:15","2013-10-24 17:32:15",1
Mule,"Need a way to add message properties other thread","DM needs to be able to add flowVars in a asynch way to the message. See https://www.mulesoft.org/jira/browse/EE-3479","Enhancement Request","To be reviewed",Closed,"2013-10-23 17:30:30","2013-10-23 16:30:30",8
Mule,"Evaluate Mule's gaps to work on a FIPS 140-2 compatible environment","As part of the FIPS 140 analysis, it was found that mule hardcodes the security providers used for SSL configuration.    Create the set of tasks and acceptance criteria needed to address this.  ",Task,Major,Done,"2013-10-23 17:22:37","2013-10-23 16:22:37",5
Mule,"Update mule-jetty.xsd that contains references to old Jetty classes in its comments","The mule-jetty.xsd file still contains references to old Jetty clases (org.mortbay) in the comments. Update this file.",Task,Major,Done,"2013-10-21 15:43:15","2013-10-21 14:43:15",2
Mule,"Test Servlet API 3.0 support in Jetty Transport","Jetty 8 supports servlet API 3.0. Test that webapps developed with this api can be correctly deployed in Mule using the jetty transport.",Task,Major,Done,"2013-10-21 15:40:57","2013-10-21 14:40:57",8
Mule,"Update Cometd version in Ajax transport","The current Cometd version used in the Ajax transport uses Jetty 6. Update Cometd in order to remove all references to Jetty 6 and use Jetty 8. Update ajax tests that use old jetty version.",Task,Major,Done,"2013-10-21 15:39:12","2013-10-21 14:39:12",3
Mule,"Improve the way webapps are deployed in the Jetty transport","Remove the WebAppDeployer class, use WebAppProvider from newer Jetty versions instead.",Task,Critical,Done,"2013-10-21 13:59:17","2013-10-21 12:59:17",8
Mule,"Add Spring Security LDAP to Mule Distribution","Add Spring Security LDAP dependency to the standalone distribution.","Enhancement Request",Major,Closed,"2013-10-17 20:49:25","2013-10-17 19:49:25",2
Mule,"Finalize shared resources spec + create tasks to implement feature","The initial draft of the shared resources spec is here: https://docs.google.com/a/mulesoft.com/document/d/15Pt1N4ylouxk-nFiAFAtfnOiqYyn5fnJn4X3iJtF9tI/edit?usp=drive_web    Now that sufficient time has passed, we should finalize the specification, and scope out the amount of work it takes to implement the feature in Mule.    Acceptance criteria for this Jira is that more Jiras are created with story points allocated to implement the feature.",Task,Critical,Done,"2013-10-14 17:55:05","2013-10-14 16:55:05",13
Mule,"Create bitronix transaction manager module and integrate with existent transports","Create a module to use bitronix transaction manager in mule.    Integrate the module with existent mule transports","Enhancement Request",Blocker,Closed,"2013-10-05 22:50:10","2013-10-05 21:50:10",13
Mule,"Make poll schedulers part of the same namespace","When poll was enhanced to support different schedulers in Andes, the simple scheduler ended up being defined in the mule schema, and the cron scheduler ended up being part of the schedulers schema.    In order to improve consistency, we want to have all the schedulers distributed by the ESB in the same schema.    Move the default scheduler bean definition to the scheduler namespace.  ","Enhancement Request",Major,Closed,"2013-10-02 17:00:09","2013-10-02 16:00:09",3
Mule,"Cannot put a Foreach after an OAuth authorize","Creating a simple flow that do the authorization and calls get-contacts and iterate through the payload.  INFO 2013-09-23 18:12:12,291 [[google-contacts-paged-test].connector.http.mule.default.receiver.02] org.mule.api.processor.LoggerMessageProcessor: Authorized...  ERROR 2013-09-23 18:16:09,797 [[google-contacts-paged-test].connector.http.mule.default.receiver.02] org.mule.exception.DefaultMessagingExceptionStrategy:   ********************************************************************************  Message : Object org.mule.modules.google.contact.wrappers.GoogleContactEntry not of correct type. It must be of type {interface java.lang.Iterable,interface java.util.Iterator,interface org.mule.routing.MessageSequence,interface java.util.Collection} (java.lang.IllegalArgumentException). Message payload is of type: GoogleContactEntry  Code : MULE_ERROR--2  --------------------------------------------------------------------------------  Exception stack is:  1. Object org.mule.modules.google.contact.wrappers.GoogleContactEntry not of correct type. It must be of type {interface java.lang.Iterable,interface java.util.Iterator,interface org.mule.routing.MessageSequence,interface java.util.Collection} (java.lang.IllegalArgumentException)  org.mule.util.collection.EventToMessageSequenceSplittingStrategy:61 (null)  2. Object org.mule.modules.google.contact.wrappers.GoogleContactEntry not of correct type. It must be of type {interface java.lang.Iterable,interface java.util.Iterator,interface org.mule.routing.MessageSequence,interface java.util.Collection} (java.lang.IllegalArgumentException). Message payload is of type: GoogleContactEntry (org.mule.api.MessagingException)  org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor:35 (http://www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/MessagingException.html)  --------------------------------------------------------------------------------  Root Exception stack trace:  java.lang.IllegalArgumentException: Object org.mule.modules.google.contact.wrappers.GoogleContactEntry not of correct type. It must be of type {interface java.lang.Iterable,interface java.util.Iterator,interface org.mule.routing.MessageSequence,interface java.util.Collection}  at org.mule.util.collection.EventToMessageSequenceSplittingStrategy.split(EventToMessageSequenceSplittingStrategy.java:61)  at org.mule.util.collection.EventToMessageSequenceSplittingStrategy.split(EventToMessageSequenceSplittingStrategy.java:26)  at org.mule.routing.CollectionSplitter.splitMessageIntoSequence(CollectionSplitter.java:33)  + 3 more (set debug level logging or '-Dmule.verbose.exceptions=true' for everything)  ********************************************************************************",Bug,Critical,Closed,"2013-10-02 15:00:49","2013-10-02 14:00:49",3
Mule,"Add getObjectStoreManager() in MuleContext","Add a method in the MuleContext for easy access to the ObjectStoreManager","Enhancement Request",Minor,Closed,"2013-09-23 22:05:42","2013-09-23 21:05:42",1
Mule,"Need to support XPATH 3.0 in the xpath filter","Xpath 2.0 is supported in the XSLT transformers but not in filters right now.    This will only apply for xpath expressions not jxpath    According to [~<USER>    AFAIK we only support xpath version 1.0 in flows using MEL, it seems we may support version 2.0 in xslt transformation, in DM I think we support version 3.0.  All of these really should be aligned to the same version.  Since xpath 2.0 came out in 2007 I think we should be using that as a minimum, if not we should be using 3.0 to take advantage of the newer functions.  As we move onto the bigger customers and SOAP WS, they may well want to use XML.","Enhancement Request",Major,Closed,"2013-09-23 20:47:51","2013-09-23 19:47:51",13
Mule,"ExpiringGroupMonitoringThread must process event groups only when the node is primary","ExpiringGroupMonitoringThread is used on the EventCorrelator to detect EventGroup that expired and must be deleted.  This thread is always started as part of the EventCorrelator and that means that in a cluster environment, every node will have a thread running.  This causes problems when different nodes try to process the same event group simultaneously. ",Bug,Critical,Closed,"2013-09-19 15:00:56","2013-09-19 14:00:56",5
Mule,"Add nexus profile to distributions pom.","Add nexus profile to distributions pom.",Task,Major,Done,"2013-09-13 22:03:43","2013-09-13 21:03:43",1
Mule,"Deprecate keepSendSocketOpen attribute in HTTP connector","The HTTP Connector has an attribute 'keepSendSocketOpen' that is inherited from the TCP connector. This attribute is a TCP setting that should not exist in the HTTP connector (to keep outbound connections open the keep-alive attribute in the outbound endpoint should be used).   Add documentation for this change.","Enhancement Request",Major,Closed,"2013-09-10 15:01:56","2013-09-10 14:01:56",8
Mule,"HTTP/HTTPS outbound endpoints ignore the keep-alive attribute","The HTTP outbound endpoint has an attribute keep-alive that controls the use of persistent HTTP outbound connections. This attribute is currently ignored.     An endpoint configured with exchange-pattern=one-way always keeps outbound connections alive. If the request-response exchange pattern is used, a new connection is created in each request.    This behavior should depend on the keep-alive attribute of the endpoint.    In the following example the keep-alive attribute is set to false but the endpoint keeps alive the connection:    ",Bug,Major,Closed,"2013-09-10 14:58:37","2013-09-10 13:58:37",13
Mule,"Add support for EE's Batch Module","Implement a new module that allows processing of large data sets at a record level. Specification available in issue DI-4 (http://corp.wiki.mulesource.com/display/WP/Batch+Module)","Enhancement Request",Critical,Closed,"2013-09-03 17:07:21","2013-09-03 16:07:21",21
Mule,"Write initial draft of shared ports spec","We are having a number of critical users requests for being able to deploy multiple apps on the same Mule instance using the same IP/Port endpoint.     This story is to do some analysis to identify the possible solutions for addressing this problem space. ",Task,Critical,Done,"2013-04-18 06:10:38","2013-04-18 05:10:38",8
Mule,"Incorrect maven dependency for drools","Drools (mule-module-drools) needs the jasper-jdt jar, but does not declare a dependency for it. For a drools project to work, you also need to declare a dependency for mule-transport-ajax.    mule-transport-ajax declares a dependency for  org.apache.tomcat:jasper:jar which will also bring in jorg.apache.tomcat:jasper-jdt:jar    But mule-transport-ajax shouldn't be required for using drools with Mule.",Bug,Major,Closed,"2013-09-01 21:23:32","2013-09-01 20:23:32",3
Mule,"The jetty transport does not have an option to configure the number of acceptor threads","The jetty transport does not have an option to configure the number of acceptor threads    It should be configurable at connector level in an xml app.","Enhancement Request",Critical,Closed,"2013-08-23 19:30:06","2013-08-23 18:30:06",2
Mule,"http:static-resource-handler fails when request path is '/'","Given a http:inbound-endpoint with no context path, and a http:static-resource-handler with a resourceBase set, expect that visiting http://server:port should redirect or service http://server:port/index.html.    Noted the following issues:    1) Server actually sends a 302 redirect to '//', which is not handled well by modern browsers (Chrome)  2) Visiting http://server:port// actually returns the contents of index.html  3) As a side-issue, visiting http://server:port/index.html if resourceBase does not have a trailing slash results in a file not found error (does not add the necessary slash)    Looking at the source here: https://github.com/mulesoft/mule/blob/8de5e6b1de40e8d5f792e8e0f0b9d1de7506c2d8/transports/http/src/main/java/org/mule/transport/http/components/StaticResourceMessageProcessor.java    The issue is that the request path is stripped back from '/' to '' here:        And so the following code fails to match on 'path.endsWith':        And the subsequent code block to redirect is used. The functional test cases don't catch this because the context path is not the same as the request path.",Bug,Minor,Closed,"2013-08-23 06:12:26","2013-08-23 05:12:26",5
Mule,"Http endpoint with path= or path=/ do not attend requests at root level","enpoints #2 and #3 behave differently than #1 that shows the correct behavior.    1) <http:inbound-endpoint port=8000 host=localhost>  2) <http:inbound-endpoint port=8000 host=localhost path=>  3) <http:inbound-endpoint port=8000 host=localhost path=/>    only #1 answers requests to http://localhost:8000/    #2 and #3 throw the following error:    Cannot bind to address http://localhost:8000/ No component registered on that endpoint    ","Enhancement Request",Major,Closed,"2013-07-24 21:28:22","2013-07-24 20:28:22",8
Mule,"Erro during mule message serialization when using byte array as payload","Attached configuration works well on standalone mode, but when switch to cluster mode I got this exception:    INFO  2013-06-18 16:04:26,722 [[pepe].connector.file.mule.default.receiver.01] org.mule.transport.file.FileMessageReceiver: Lock obtained on file: /private/tmp/test/file.txt  ERROR 2013-06-18 16:04:26,904 [[pepe].inputFlow.stage1.01] org.mule.exception.DefaultSystemExceptionStrategy: Caught exception in Exception Strategy: java.lang.String cannot be cast to org.mule.api.MuleEvent  java.lang.ClassCastException: java.lang.String cannot be cast to org.mule.api.MuleEvent   at org.mule.processor.SedaStageInterceptingMessageProcessor.dequeue(SedaStageInterceptingMessageProcessor.java:134)   at org.mule.processor.SedaStageInterceptingMessageProcessor.run(SedaStageInterceptingMessageProcessor.java:209)   at org.mule.work.WorkerContext.run(WorkerContext.java:311)   at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)",Bug,Blocker,Closed,"2013-07-23 15:47:19","2013-07-23 14:47:19",8
Mule,"Allow poll execution with properties","Mule should provide an API to execute polls with inbound properties.","Enhancement Request",Critical,Closed,"2013-07-22 14:48:53","2013-07-22 13:48:53",5
Mule,"Race condition creating MVELExpressionLanguage instances","Constructor of MVELExpressionLanguage is updating the expression language configured in the DefaultExpressionManager.  This creates a reace condition when there are more than one instance created and multiple threads using the expression manager. In those cases, some threads can get a NPE.    This is a problem using Data Mapper as they extend the MVELExpressionLanguage.    There is a second problem having MVELExpressionLanguage constructor setting the expression language: after a DM component, the expression language use in the app will continue to be the expression language from DM, not the original mvel",Bug,Critical,Closed,"2013-07-18 22:27:51","2013-07-18 21:27:51",5
Mule,"Watermark - unable to access default user Object Store instance","*Steps*    with this flow         watermark does not access the default user Object Store ","Enhancement Request",Major,Closed,"2013-07-16 20:29:04","2013-07-16 19:29:04",1
Mule,"Merge 3.4.1 changes from ASR from Dynamic Round Robin","Merge the Pull request from Eva needed for ASR. ",Task,Major,Done,"2013-07-16 19:59:18","2013-07-16 18:59:18",1
Mule,"Add dynamic round robin routing support","Related to MULE-6653 where support for dynamic router was implemented for 'first successful' and 'all' strategies. A new strategy should be added for round robin.     The new dynamic-round-robin will round robin through the routes to dispatch the message, maintaining a state to keep track of the next message processor that needs to be processed.     The state should be maintained based on a route resolver identifier, the goal behind it is to keep track of the iteration for each configuration of the router. By default it should assume the route resolver has no state if it does not implement an IdentifiableDynamicRouteResolver (which is an interface that extends DynamicRouteResolver)","Enhancement Request",Critical,Closed,"2013-07-02 15:21:53","2013-07-02 14:21:53",5
Mule,"Add utility methods to execute flows in FunctionalTestCase","Right now FunctionalTestCase only provides one testFlow() method which does't really fit all use cases. FunctionalTestCase could be improve adding the runFlow() family of methods that Devkit generates when archetyping a CloudConnector.     This would be better for a user testing their applications and would also help the effort of moving code from Devkit to mule","Enhancement Request",Minor,Closed,"2013-06-27 19:04:04","2013-06-27 18:04:04",1
Mule,"NotificationManager actions should not be ints","When firing a notification, the actions are represented as ints. This is bad because there's no way to be sure that two different notifications are using the same number.    Objects should be use to represent that.","Enhancement Request",Critical,Closed,"2013-06-27 18:23:42","2013-06-27 17:23:42",32
Mule,"UntilSuccessful doesn't correctly validate payload is Serializable","When ensuring that the message payload is Serializable, the validation is not property done when the message is a DefaultMuleMessage and the payload isn't consumable",Bug,Minor,Closed,"2013-06-27 18:05:38","2013-06-27 17:05:38",1
Mule,"Change Poll schema to accept a scheduler strategy","New poll schema will accept scheduler strategies:    <poll>     <schedulers:simple frequency=1000/>  </poll>","Enhancement Request",Major,Closed,"2013-06-25 16:59:35","2013-06-25 15:59:35",5
Mule,"Provide an  API to stop/start and execute schedulers","We need external systems to be able to stop/start and execute schedulers at any given time.","Enhancement Request",Major,Closed,"2013-06-25 16:58:12","2013-06-25 15:58:12",2
Mule,"Create Mule API to inject Poll a different scheduler","Poll elements have a single scheduler strategy (it uses sheduledWithFixDelay) we want users to be able to determine a different scheduler strategy as part of the story MULE-6872","Enhancement Request",Major,Closed,"2013-06-25 16:57:10","2013-06-25 15:57:10",5
Mule,"Ability to handle record level errors in for-each","As an user, I want to catch exceptions at a record level in a for-each/batch element so I can continue processing and put my individual records on a DLQ.","Enhancement Request",Major,Closed,"2013-06-06 14:58:02","2013-06-06 13:58:02",8
Mule,"Split collection processor","Spec TBD  ","Enhancement Request",Trivial,Closed,"2013-06-24 04:24:46","2013-06-24 03:24:46",8
Mule,"Aggregator Improvements","Should be possible to not use MuleMessage collection  Should be possible to use multiple aggregators    TBD in more detail by Pablo","Enhancement Request","To be reviewed",Closed,"2013-06-06 18:51:23","2013-06-06 17:51:23",8
Mule,"Poll 2.0","For studio, we want to be able to start, stop and execute polls via an API.",Epic,Critical,Done,"2013-06-06 15:03:32","2013-06-06 14:03:32",8
Mule,"Upgrade to Groovy 2.3.6","Upgrade Mule's Groovy dependency to Groovy 2.3.6.","Enhancement Request",Major,Closed,"2013-06-03 22:38:55","2013-06-03 21:38:55",8
Mule,"SFTP: Jsch issue in java 1.7 and Kerberos","There is a known issue with JSch running in java 1.7 and connecting to a server with Kerberos enabled.  When trying to connect to that server, it will request the password to be manually entered.  The issue is described in the following page:  https://issues.apache.org/bugzilla/show_bug.cgi?id=53437    Setting PreferredAuthentications property to publickey,password,keyboard-interactive in the SftpClient solves the problem.",Bug,Critical,Closed,"2013-05-31 17:19:39","2013-05-31 16:19:39",3
Mule,"Watermark / Binding object store items to flow variables","h1. Watermarking       Right now, when a poll needs to deal with updated objects, we use watermarks as an approach to filter out elements that were already processed.  Watermarks require a value to be persisted across flow invocations. Typically, this value will have a default the first time used, and will be used as part of a query or outbound request. Based on how the flow processes the results, the value may be updated.      This can be done using several steps:       - Fetch a value form a persistent object store and save it as a flow variable       - Refer to the flow variable when doing a query / outbound request       - Update the variable based (either once - i.e. the watermark is the date of the query, or per record - i.e. the watermark is the highest id from an object)       - At the end of the processing, persist the value to the persistent object store         This pattern is very common in synchronisation flows. Enough common to deserve better support. To make this easier out of the box we will add a new optional parameter to <poll> that will provide the watermarking variable persistence out of the box.    Watermark Example:        h2. Watermark properties      * variable (required): This attribute signals both the object store key that will be used to store this watermark as also the name of the flowVar in which its value will be exposed to the user.   * default-expression (required): In case that the key above can't be found on the object store, the default expression is used to generate a value. This is useful for the first run of the flow   * update-expression (optional): The result of this expression will be used to update the watermark once the execution is finished. It defaults to the value of the variable parameter.  * objectStore-ref (optional): A reference to the object store you wish to use to store the watermarks. If not provided, the default user object store will be used     h2. Watermark behaviour     * It is bound to the poll   * It is bound to synchronous flows only. If not then it execution must fail  * When executed, it goes to the configured object store looking for a value of the given key. If found, that value is exposed through a flowVar using the same key.   * If no value is found for that key in the object store, then the default-expression is executed and that value is exposed through the flowVar.  * Watermark will also fire a notification interceptable by the event tracking module. The underlaying tracking event will be enriched with the watermark value.  * The message processors will be executed.  * If the flow was correctly executed, then the watermark will be updated.   * After updating the object store, another notification is fired to the event tracking system so that the new value can also be recorded there   * If the intercepted processors throw any exceptions, then the watermark will not be updated. Since the watermark is stored in the object store, the user can always use a exception strategy to put a custom value in case of failure.  * In case the watermark value is not serializable then fail the store of the watermark in the object store  ","Enhancement Request",Major,Closed,"2013-05-30 16:28:55","2013-05-30 15:28:55",5
Mule,"Filename-wildcard filter to fails with SFTP","MULE-6743 modified the scope of originalFilename property: originally it was stored in the outbound scope, but it was changed to inbound.  Filename wildcard filter was also changed to read that property from the inbound scope.    However the SFTP transport is still storing the property in the outbound scope, making the filter to work incorrectly (not processing file that should be processed).  After the mentioned changes, file transport is storing the property in INBOUND and OUTBOUND, FTP is storing it in INBOUND, and SFTP is doing it only in OUTBOUND.  ",Bug,Major,Closed,"2013-05-29 16:48:35","2013-05-29 15:48:35",2
Mule,"Default object store for until-successful","until-successful needs to be configured with an objectstore by default so it works out of the box very easily.","Enhancement Request","To be reviewed",Closed,"2013-05-24 17:24:04","2013-05-24 16:24:04",3
Mule,"ReplyToDestination is not properly configured in some scenarios","ReplyToParameterProcessor which is used to move the replyToDestination info from the message to the event is not always invoked before other processing occurs.  This causes that the message processed inside the flow is not sent back to the client.",Bug,Critical,Closed,"2013-05-23 14:55:51","2013-05-23 13:55:51",8
Mule,"Improve JdbcTransactionFactory to support multi transactions","JdbcTransactionFactory needs to implement UniversalTransactionFactory in order to work with mule-module-multi-tx-ee","Enhancement Request",Major,Closed,"2013-05-23 14:21:49","2013-05-23 13:21:49",0
Mule,"Define filter, split, aggregate and route record level data strategy","Basic requirements:     http://corp.wiki.mulesource.com/pages/viewpage.action?pageId=27132117  ",Story,Critical,Done,"2013-05-22 07:46:52","2013-05-22 06:46:52",5
Mule,"Define Polling Watermarks","Right now, when a poll needs to deal with updated objects, we use watermarks as an approach to filter out elements that were already processed. The only way to do that right now is to implement the logic manually which forces the user to deal with object stores, default values, repeated logic, dev time dependencies, etc.    This story is a container of all the features required for watermark  ",Story,Major,Done,"2013-05-22 07:45:12","2013-05-22 06:45:12",3
Mule,"Connector Auto-Paging","See here: http://corp.wiki.mulesource.com/pages/viewpage.action?pageId=27132117    This will require some in-iteration investigation.",Story,Major,Done,"2013-05-22 07:14:43","2013-05-22 06:14:43",5
Mule,"Move OAuth from DevKit to ESB","* Move generated DevKit code to ESB and expose an interface that DevKit can use  * Improve user experience when trying to configure an OAuth connector    http://corp.wiki.mulesource.com/display/WP/Making+OAuth+user+experience+smoother",Story,Major,Done,"2013-05-22 07:06:56","2013-05-22 06:06:56",13
Mule,"cxf_operation is wrong when using proxy-client of a soap 1.1 request","When processing a soap 1.1 request, the org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor looks for the soap action in soapMessage.get(Message.PROTOCOL_HEADERS).get(SoapBindingConstants.SOAP_ACTION). If Mule doesn't set this beforehand, cxf doesn't find it. This is a problem because the SoapActionInInterceptor will then fail to set the BindingOperationInfo for the request and thus the StaxDataBindingInterceptor will not know which BindingOperationInfo to use so it just picks the first one of its list (which is probably wrong!) and bam! we're executing the wrong operation.    Processing soap 1.2 requests (which is much more prevalent) doesn't have this problem.",Bug,Major,Closed,"2013-05-08 20:39:44","2013-05-08 19:39:44",5
Mule,"Fix flaky unit test: DateTimeTestCase","DateTimeTestCase has many test that are flaky because they depend on the current system time.  For example:        Problem is that there are two different calls to obtain the current second, so they could obtain different values from time to time.  Same problem exist in many tests, but as they are checking for minutes, hours, days, weeks, etc they less probable to fail, but they are still flaky in theory.  ",Task,Major,Done,"2013-05-08 15:05:56","2013-05-08 14:05:56",1
Mule,"APIkit Tech Debt","APIkit Tech Debt",Task,Major,Done,"2013-03-05 19:04:03","2013-03-05 19:04:03",3
Mule,"APIkit REST Controller Resource","REST Controller Resource","Enhancement Request",Major,Closed,"2013-03-05 18:54:03","2013-03-05 18:54:03",8
Mule,"Thread leak on Mule redeployments for embedded","When Mule is running embedded in a container, after redeploying an application, there is a thread which still lives from the previous deployment and gets created again with the new one: Mule.log.slf4j.ref.handler.    Steps to reproduce:  1. Deploy a Mule embedded app in Tomcat (bookstore-admin.war from the examples, for instance).  2. Check the thread count and look for the mentioned thread  3. Re-deploy the app  4. Check the thread count, it should have gone up by 1 and there should be 2 threads called Mule.log.slf4j.ref.handler",Bug,Critical,Closed,"2013-04-22 20:23:25","2013-04-22 19:23:25",5
Mule,"Allow MEL expressions in cxf:property of cxf:ws-config","It would be nice to be able to use MEL expressions for the values of properties in the ws-config so we can set properties based upon the message being processed.","Enhancement Request",Major,Closed,"2013-04-17 20:24:03","2013-04-17 19:24:03",3
Mule,"Throw Invalidated calling setPayload exception when data flow past from <All> router to java component","Flow config is following:        <flow name=testFlow1 doc:name=testFlow1>          <http:inbound-endpoint exchange-pattern=request-response host=localhost port=8080 doc:name=HTTP/>          <custom-transformer class=test.ReqToContent doc:name=Java/>          <all doc:name=All>              <component class=test.B doc:name=B/>              <component class=test.C doc:name=C/>          </all>          <component class=test.CollctToString/>     </flow>      There are two components in the one <All> router:    public class B implements Callable {     @Override   public Object onCall(MuleEventContext eventContext) throws Exception {    System.out.println(B);    return B;   }    public class C implements Callable {     @Override   public Object onCall(MuleEventContext eventContext) throws Exception {    System.out.println(C);    return C;   }  }      There is a component after the <All> router:    public class CollctToString implements Callable {     @Override   public Object onCall(MuleEventContext eventContext) throws Exception {    return CollctToString;   }  }      Run the app, it will throw following exception after executing components B and C:    java.lang.IllegalStateException: Payload was invalidated calling setPayload and the message is not collection anymore.   at org.mule.DefaultMessageCollection.checkValidPayload(DefaultMessageCollection.java:107)   at org.mule.DefaultMessageCollection.newThreadCopy(DefaultMessageCollection.java:312)   at org.mule.DefaultMuleEvent.newThreadCopy(DefaultMuleEvent.java:779)   at org.mule.RequestContext.newEvent(RequestContext.java:140)      I debugged it and found the cause:    DefaultMessageCollection.setPayload() has been called by DefaultMessageCollection.transformMessage(MuleEvent, Transformer).    And DefaultMessageCollection.invalidatedPayload field value is true.     The 2sec passing parameter of DefaultMessageCollection.transformMessage(MuleEvent, Transformer) method is a transformer which I do not custom, and it will transform message to a String result.    I cannot understand what does the code  if (this.getPayload() == payload)  of DefaultMessageCollection.setPayload() mean, this.getPayload() is a collection and payload is a string by previous transformMessage() method. I think it should call addMessage(MuleMessage message) to add all objects returned from components in the <All> router.    It's success when I insert a custom transformer for converting Collection between <All> router output data flow and component class CollctToString.",Bug,Critical,Closed,"2013-04-15 07:48:45","2013-04-15 06:48:45",0
Mule,"NullPointerException during JMS Reconnect Attempt","If you configure an xa enabled connector to a JMS broker and the jms broker goes down, the following exception get thrown:        Step to reproduce:    * run the attached config  * tear down the activemq broker and start it again",Bug,Critical,Closed,"2013-04-10 22:13:26","2013-04-10 21:13:26",8
Mule,"Upgrade CXF to 2.5.9","We should upgrade cxf to get the latest security patches.","Enhancement Request",Critical,Closed,"2013-04-10 21:27:58","2013-04-10 20:27:58",5
Mule,"Chaining more than one HTTP outbound endpoint will use the HTTP method of the first one","If I have a config file as follows:        The second outbound-endpoint will always do a GET because if the input payload is of type HTTPMethod, then it takes the value from there.",Bug,Critical,Closed,"2013-03-27 19:58:17","2013-03-27 19:58:17",13
Mule,"ProcessorChain and SubFlows are intercepting when they shouldn't","Currently ProcessorChain and SublFlows are Intercepting this affects debugger because notifications are generated wrong. ",Bug,Blocker,Closed,"2013-03-27 12:26:13","2013-03-27 12:26:13",5
Mule,"ReplyToHandlers do not work with Dynamic Outbound Endpoints","ReplyToHandler in the case of Ajax (AjaxReplyToHandler) depends on the MessageSourceURI to actually send the message back to the caller.   If a dynamic outbound endpoint is introduced in the middle which replaces the event's MessageSourceURI it breaks the replyTo.  See the following flow (modified version of the Order Processing example shipped with Studio):    produces the following error:  ",Bug,Blocker,Closed,"2013-03-20 00:07:20","2013-03-20 00:07:20",8
Mule,"Fix the 3.x site build","javadoc generation is failing.  check log here:    http://bamboo.mulesoft.org/browse/MULE3X-MULE3XSITE-SITE",Task,Blocker,Done,"2013-03-19 20:06:07","2013-03-19 20:06:07",5
Mule,"HTTP(S) transport generates everlasting temporary files","When doing a multipart upload it may create a temporary file. It will remain on the disk drive because the file is not being deleted once the outputstream is closed. A deleteOnExit flag would not be effective for never-closing applications.    This eventually leads to java.io.IOException: No space left on device.    The location where this file is being created may be seen at https://github.com/mulesoft/mule/blob/mule-3.x/transports/http/src/main/java/org/mule/transport/http/multipart/MultiPartInputStream.java#L135",Bug,Blocker,Closed,"2013-03-13 14:32:52","2013-03-13 14:32:52",5
Mule,"Deprecate Services (and anything else we can)","Deprecate Services (and anything else we can)",Story,Critical,Done,"2013-03-05 19:07:40","2013-03-05 19:07:40",5
Mule,"GitHub migration","- svn repo migration to github  - bamboo plans update",Task,Major,Done,"2013-03-05 15:38:04","2013-03-05 15:38:04",8
Mule,"APIkit example application","Create an example application to showcase apikit functionality",Story,Critical,Done,"2013-03-05 13:25:15","2013-03-05 13:25:15",8
Mule,"REST Representations definition","Multiple representation support for apikit",Story,Critical,Done,"2013-03-05 13:22:43","2013-03-05 13:22:43",8
Mule,"mule-common dependency should be on a fixed version","We should be on a fixed version rather than a SNAPSHOT. mule-common is at 0.11.0-SNAPSHOT so we'll go with 0.11.0.","Enhancement Request",Blocker,Closed,"2013-02-27 18:23:50","2013-02-27 18:23:50",1
Mule,"Intercepting Are not generating message processor path ","This is currently breaking debugger, since all MP that executes after an intercepting MP are not being executed. ",Bug,Blocker,Closed,"2013-02-27 14:34:55","2013-02-27 14:34:55",5
Mule,"Update Spring version used in Mule to 3.2","Update the version of Spring we are using to 3.2",Story,Critical,Done,"2013-02-20 15:20:02","2013-02-20 15:20:02",5
Mule,"Testing - Mule 3.4 Thorttling with GA Registry","As a Registry user, I would like to be able to apply throttling policies to my Mule ESB flow end-points. ",Story,Critical,Done,"2013-02-19 06:55:39","2013-02-19 06:55:39",0
Mule,"Testing - Mule 3.4 Dynamic Lookup with GA Registry","As a Mule user, I would like to use the dynamic lookup component within my flows.  Detailed specs defined here:   http://corp.wiki.mulesource.com/display/WP/Dynamic+Router+%28supports+Registry+Dynamic+Endpoint+Resolution%29",Story,Critical,Done,"2013-02-19 06:08:06","2013-02-19 06:08:06",1
Mule,"Testing Mule 3.4 Pairing with GA Registry","As a Mule user, I would like to configure my Mule instance to be paired with my Registry account through my registry key so that I may be able to manage my ESB instance's endpoints with the registry.   User should be configure the registry key for their registry account for an ESB instance. From there on: The HTTP endpoints of all apps deployed to the ESB instance should be manageable with the paired registry instance.  Detailed specs described here:   http://corp.wiki.mulesource.com/display/PRODMGMT/Registry+Interaction+and+License+Management+Support ",Story,Critical,Done,"2013-02-19 06:06:49","2013-02-19 06:06:49",3
Mule,"NIO and WebSocket Completion","As a Mule ESB user, I would like to be able to turn on the use of the NIO stack through a deploy.properties toggle.   As a Mule ESB user, I would like to be able to use the new WebSocket components within my flows. ",Story,Critical,Done,"2013-02-19 05:54:19","2013-02-19 05:54:19",8
Mule,"Addition of DB2 and MS SQL Server to the list of databases on Studio JDBC connector configuration window - ESB Work","Today we show MySQL, Derby, and Oracle. However, MS SQL and DB2 are RDBMS's with very large footprints. As such, we should add these two databases to the set that shows up on the JDBC connector's configuration screen. ",Story,Critical,Done,"2013-02-14 20:11:50","2013-02-14 20:11:50",3
Mule,"Remove all examples, except the new hello world and existing loan broker, from ESB stand-alone distribution","* Packaged examples should be modified as per the following plan: https://docs.google.com/a/mulesoft.com/spreadsheet/ccc?key=0ArwrJmCfHowWdDNCdnJYeldHcDI5M0dYaTRsWUwxd2c#gid=2    * This requires the following additional work:      - Creation of the two new identified examples.      - Modification of target examples to use latest 3.4 features. Beyond specifics identified on spreadsheet this includes adding in-studio documentation for all examples.     - Modification of documentation for target examples.     - Removal of examples tagged as Archive from Studio.     - Modification of docs to reflect an Archived examples section.      - Placement of all examples in GIT and tagging as active versus archived.     - From the ESB stand-alone distribution point of view: Remove all examples except the new hello world and existing loan broker.",Story,Critical,Done,"2013-02-14 00:10:14","2013-02-14 00:10:14",5
Mule,"REST Browsable Web UI Generation",http://corp.wiki.mulesource.com/display/WP/Simplified+REST+Service+Creation,Story,Critical,Done,"2013-02-13 23:58:06","2013-02-13 23:58:06",5
Mule,"REST Swagger Definition Generation",http://corp.wiki.mulesource.com/display/WP/Simplified+REST+Service+Creation,Story,Critical,Done,"2013-02-13 23:58:02","2013-02-13 23:58:02",8
Mule,"REST Document Resource Definition",http://corp.wiki.mulesource.com/display/WP/Simplified+REST+Service+Creation,Story,Critical,Done,"2013-02-13 23:57:47","2013-02-13 23:57:47",8
Mule,"REST Service/Interface Definition",http://corp.wiki.mulesource.com/display/WP/Simplified+REST+Service+Creation,Story,Critical,Done,"2013-02-13 23:57:43","2013-02-13 23:57:43",0
Mule,"Should be able to replace Log4j for another logging implementation","http://www.mulesoft.org/documentation/display/MULE3USER/Configuring+Logging says in the section titled I don't want to use Log4j that the log4j jar can be removed so long as SLF4J is wired to another logging implementation. Removing the Log4j jar results in     WrapperManager Error: Error in WrapperListener.start callback.  java.lang.NoClassDefFoundError: org/apache/log4j/spi/RepositorySelector  WrapperManager Error: java.lang.NoClassDefFoundError: org/apache/log4j/spi/RepositorySelector  WrapperManager Error:   at java.lang.Class.getDeclaredConstructors0(Native Method)  WrapperManager Error:   at java.lang.Class.privateGetDeclaredConstructors(Class.java:2389)  WrapperManager Error:   at java.lang.Class.getConstructor0(Class.java:2699)  WrapperManager Error:   at java.lang.Class.getConstructor(Class.java:1657)  WrapperManager Error:   at org.mule.module.reboot.MuleContainerWrapper.start(MuleContainerWrapper.java:53)  WrapperManager Error:   at org.tanukisoftware.wrapper.WrapperManager$12.run(WrapperManager.java:3925)  WrapperManager Error: Caused by: java.lang.ClassNotFoundException: org.apache.log4j.spi.RepositorySelector  WrapperManager Error:   at java.net.URLClassLoader$1.run(URLClassLoader.java:202)  WrapperManager Error:   at java.security.AccessController.doPrivileged(Native Method)  WrapperManager Error:   at java.net.URLClassLoader.findClass(URLClassLoader.java:190)  WrapperManager Error:   at java.lang.ClassLoader.loadClass(ClassLoader.java:306)  WrapperManager Error:   at java.lang.ClassLoader.loadClass(ClassLoader.java:247)  WrapperManager Error:   ... 6 more    This is due to the patch done to fix MULE-5264 which causes MuleContainer to have a direct reference to Log4j's RepositorySelector. Simply moving the reference and the call to setRepositorySelector to some other class which is not accessed via a static reference should solve the problem.","Enhancement Request",Critical,Closed,"2013-02-02 00:31:23","2013-02-02 00:31:23",5
Mule,"Upgrade Jackson to 1.9.11","This version works with 1.8.0 and there are some deprecated methods in 1.9.11, so there is a need for an upgrade.",Story,Critical,Done,"2013-01-21 19:48:09","2013-01-21 19:48:09",1
Mule,"Performance regression when caching JMS Sessions","When enabling cacheJmsSessions attribute on the JMS Connector performance drops to a factor of 10.    Attached test case contains an example of this, if runned on mule 3.2.2, it lasts 3 to 5 seconds to process 10k messages, if runned on mule 3.3.0 or 3.3.1, it lasts 30 to 32 seconds to process 10k messages.    This has been tested on ActiveMQ and Websphere Message Broker.",Bug,Blocker,Closed,"2012-12-05 21:05:22","2012-12-05 21:05:22",0
Mule,"MuleMessageToHttpResponse.createResponse shouldn't use SimpleDateFormat","We should use JodaTime's DateTimeFormatter since it is thread-safe (we can use one static instance) and faster than creating a new one each time.","Enhancement Request",Critical,Closed,"2012-11-02 18:49:18","2012-11-02 18:49:18",2
Mule,"XsltTransformer forcefully evaluate expressions in context-property into Strings","This arbitrary limitation prevents passing DOM nodes as XSL parameters :(    It comes from the fact the XSL transformer uses the deprecated {{parse}} method in:  ",Bug,Critical,Closed,"2012-10-26 22:45:41","2012-10-26 21:45:41",8
Mule,"Default exception strategy is not being called","I have the following flow:        When I post with an invalid JSON, the return is Could not store the User      However when I do:        The exception is not handled",Bug,Blocker,Closed,"2012-10-04 14:39:45","2012-10-04 13:39:45",1
Mule,"Messages generated from http-messages.properties should be escaped when returned to the client as http response","Currently if you send the the following http request:        you will receive the following response:        containing potential malicious javascript code that the browser will run.    Anytime a message is returned to the client the inputs should be parsed to prevent this kind of problems",Bug,Critical,Closed,"2012-10-03 22:12:19","2012-10-03 21:12:19",8
Mule,"Inconsistent behaviour of foreach with inside flowvar","The index of the foreach inside the flow of the flowref is not consistent.  It seems that there is a lack of atomicity with the invocation variables causing as a result jump of indexes of the iteration and overwrite of invocation variables.    In the example below my payload is the result of a sql query so an ArrayList<CaseInsensitiveHashMap>. I save the value of each row in a flow variable to make it always available in next operations (the original project has more flowRef).  The problem comes out because in the contained flow accessed by the flowRef, the invocation variable carrying the index of the iteration and also the name of the element that I saved is not consistent during each iteration. Sometimes some idexes are jumped and also the element of my array tooks more time the same value.",Bug,Critical,Closed,"2012-09-17 07:09:34","2012-09-17 06:09:34",5
Mule,"/ by zero in ComponentStatistics","Recently I have been querying JMX statistics periodically via the MXBean interface (domain=Mule.*, type=org.mule.Statistics). After collecting statistics for each MBean, I reset the bean by invoking clearStatistics with no arguments, so that I can come back and collect fresh statistics later.    Howeven, when I do this while mule is under load, I see that the ComponentStatistics class starts to throw an exception on a divide-by-zero error. It tends to happen on multiple processor threads, and it seems to be a persistent issue - i.e. it throws the error every few seconds until I restart mule. I am uncertain if a message is trapped in limbo due to the repeated exception, but I think it may be as the message seems to repeat over and over again.    ERROR org.mule.exception.DefaultMessagingExceptionStrategy - Caught exception in Exception Strategy: / by zero  java.lang.ArithmeticException: / by zero          at org.mule.management.stats.ComponentStatistics.addExecutionBranchTime(ComponentStatistics.java:163)          at org.mule.management.stats.FlowConstructStatistics.addFlowExecutionBranchTime(FlowConstructStatistics.java:110)          at org.mule.management.stats.ProcessingTime.addFlowExecutionBranchTime(ProcessingTime.java:95)          at org.mule.interceptor.ProcessingTimeInterceptor.last(ProcessingTimeInterceptor.java:53)          at org.mule.interceptor.AbstractEnvelopeInterceptor.process(AbstractEnvelopeInterceptor.java:61)          at org.mule.processor.AsyncInterceptingMessageProcessor.processNextTimed(AsyncInterceptingMessageProcessor.java:111)          at org.mule.processor.AsyncInterceptingMessageProcessor$AsyncMessageProcessorWorker.doRun(AsyncInterceptingMessageProcessor.java:158)          at org.mule.work.AbstractMuleEventWork.run(AbstractMuleEventWork.java:43)          at org.mule.work.WorkerContext.run(WorkerContext.java:310)          at java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy.rejectedExecution(ThreadPoolExecutor.java:1746)          at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:767)          at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:658)          at org.mule.work.ScheduleWorkExecutor.doExecute(ScheduleWorkExecutor.java:41)          at org.mule.work.MuleWorkManager.executeWork(MuleWorkManager.java:250)          at org.mule.work.MuleWorkManager.scheduleWork(MuleWorkManager.java:218)          at org.mule.processor.SedaStageInterceptingMessageProcessor.run(SedaStageInterceptingMessageProcessor.java:233)          at org.mule.work.WorkerContext.run(WorkerContext.java:310)          at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)          at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)          at java.lang.Thread.run(Thread.java:662)  ",Bug,Major,Closed,"2012-08-24 23:56:26","2012-08-24 22:56:26",0
Mule,"Outbound endpoint with scheduled dispatch job delivers messages again and again","If you send test messages to vm://test.in (say every second with a different payload for ex 1 2 3 ...) you'll notice that what's delivered to vm://accumulatedMessageHandler is:    {{1 2 3 4 5}}    then    {{1 2 3 4 5 6 7 8 9 10}}    then    {{1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16}}    (in a random order but the idea is here)",Bug,Critical,Closed,"2012-08-08 20:08:13","2012-08-08 19:08:13",5
Mule,"FTP Inbound endpoint fails when reading empty file","Put an empty file into FTP inbound path",Bug,Critical,Closed,"2012-07-27 21:54:48","2012-07-27 20:54:48",5
Mule,"soapVersion ignored on CXF proxy","Invoking this proxy with a Soap 1.2 message fails with a WARNing in the logs and a SOAP fault for the caller:        NB. Removing the soapVersion attribute and invoking the same proxy with a SOAP 1.1 message works with intense happiness.",Bug,Critical,Closed,"2012-07-24 23:50:11","2012-07-24 22:50:11",8
Mule,"Add a default object store for non internal usages","Current version provides object stores default (persistent/in memory) to use while processing events internally but there is no object store which could be used by users as default.","Enhancement Request",Critical,Closed,"2012-05-28 20:35:57","2012-05-28 19:35:57",3
Mule,"Upgrade apache-commons-pool","Since error handling in current version of Apache commons-pool is buggy (borrowConnection method throws a NoSuchElementException losing the original cause) we may need to update the library. Version 1.6 DOES NOT fix the issue. However, current code in trunk tackles the issue (we'll have to wait for a new release).     ","Enhancement Request",Critical,Closed,"2012-04-18 20:23:21","2012-04-18 19:23:21",3
Mule,"until-successful should support synchronous use cases","Imagine a simple synchronous HTTP proxy use case, e.g.:    <flow>      <http:inbound-endpoint.../>      <http:outbound-endpoint.../>  </flow>    If outbound endpoint is wrapped in until-successful, the flow won't work anymore. until-successful must support synchronous scenarios as well.","Enhancement Request",Critical,Closed,"2012-03-27 18:38:24","2012-03-27 17:38:24",8
Mule,"Change default behavior for Choice when no otherwise Processor is set","In a mule flow, when using a <choice> message router without setting a Processor in the <otherwise> section, and the MuleMessage does not match any of the <when> clauses, an exception is thrown. To achieve a conditional behavior currently mule requires to set a dummy processor on the otherwise clause. One usability improvement would be letting the message be processed by the remaining part of the flow if no <when> clause was matched and no <otherwise> processor provided.","Enhancement Request",Major,Closed,"2012-03-15 19:20:29","2012-03-15 19:20:29",2
Mule,"Include validation module in Mule core distribution","Emiliano created a validation module, something that's missing inside mule.    Validation module support built-in validators. Also it supports different types of exceptions for each validation allowing to generate a different response for each kind of exception.    Module: http://mulesoft.github.com/mule-module-validation/    ","Enhancement Request",Major,Closed,"2012-02-23 18:20:31","2012-02-23 18:20:31",8
Mule,"XSL Transformation fails with xsl:result-document on repeated transformations","xsl:result-document outputs a file to the configured href.      The first time the transformation of a particular file is carried out it succeeds, after that it fails with the following error.    Cannot write more than one result document to the same URI, or write to a URI    that has been read:    In my particular set-up, Mule is listening on a particular directory. When a file is dropped in that directory the transformation is applied.  When I drop the same file a second (or third etc.) time I see this error.    It seems probably that the issue is because the transformer is not getting reset after each transformation.  In the XsltTransformer file (v2.2.1), I added the line transformer.reset(); (after transformer.clearParameters();) and that seemed to resolve the issue.",Bug,Minor,Closed,"2011-01-31 22:18:30","2011-01-31 22:18:30",0
Mule,"Use of tr [:upper:] [:lower:] | tr -d [:blank:] in bin/mule fails on Solaris 10 ","When trying to run bin/mule on a Solaris 10 system following error occurs  Bad string Bad string Bad string Bad string Your machine's hardware type (uname -m) was not recognized by the Service Wrapper as a supported platform. Please report this message along with your machine's processor/architecture. Error occurs on line 389  DIST_OS=`uname -s | tr [:upper:] [:lower:] | tr -d [:blank:]`  and again on 419 PROC_ARCH=`uname $UNAME_PROC_OPTION | tr [:upper:] [:lower:] | tr -d [:blank:]` of bin/mule in the 2.1.2 release  This syntax is not supported on Solaris 10 to fix use on line 389 DIST_OS=`uname -s | tr [A-Z] [a-z] | tr -d ' '`  and line 419  PROC_ARCH=`uname $UNAME_PROC_OPTION |  tr [A-Z] [a-z] | tr -d ' '`  ",Bug,Minor,Closed,"2009-02-28 00:59:32","2009-02-28 00:59:32",0
