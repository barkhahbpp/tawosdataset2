Name,Title,Description,Type,Priority,Status,Creation_Date,Estimation_Date,Story_Point
"Atlassian Crowd","Standalone tar.gz downloads are gzipped twice and fail to uncompress with tar on linux","h3. Summary    The standalone downloads from [the Crowd website|https://www.atlassian.com/software/crowd/download] for versions 3.0.1 are gzipped twice.    The Mac version of tar will handle this without issue and a {{tar -zxf}} will work as expected. However, on linux tar will fail to unzip and untar the download.  h3. Environment   * CentOS 7 (all linux versions most likely)    h3. Steps to Reproduce   # Download standalone atlassian-crowd-3.0.1.tar.gz with using Firefox   # Attempt to extract using {{tar -zxf}}    h3. Expected Results    File is extracted to directory.    h3. Actual Results      h3. Note    See [Artur Pawelczyk's comment|https://jira.atlassian.com/browse/JSWSERVER-15845?focusedCommentId=1566193&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-1566193] on JSWSERVER-15845.    h3. Workaround  # Use gunzip and then rename to get tar working:    # Use other browser to download the tar file",Bug,Low,"Short Term Backlog","2017-09-13 04:48:25","2017-09-13 04:48:25",8
"Atlassian Crowd","Clarify the interaction of events and database transactions","Currently event handlers that interact with transactions and Hibernate entities might run into some issues:  * the transaction might not be committed until all handling for the event is done  * in some cases, the entire transaction might be rolled back, even after the event handler completed successfully  * some events contain references to Hibernate entities, which is troublesome as events might be shared between threads, and these entities might be attached to a closed session",Suggestion,,Closed,"2016-06-21 10:23:24","2016-06-21 10:23:24",5
"Atlassian Crowd","Crowd doesn't acknowledge non-incremental sync when triggering sync","Creating a new (remote) directory, one can choose to check the _ Enable incremental sync_ option.    However when sync are triggered, whether it's manually (through the UI) or automatically (via the scheduler) incremental sync is always attempted.",Bug,Low,Closed,"2015-04-15 13:58:50","2015-04-15 13:58:50",3
"Atlassian Crowd","Add tenant setting filter to Horde","It needs to take the hostname of the request, remove .internal (and handle any other cases there may be) to get the tenant identifier and set that on a {{ThreadLocal}}.    Implementing this will involve exploration of the libraries https://bitbucket.org/atlassian/mt and https://bitbucket.org/atlassian/atlassian-tenancy/, and translation of the implementation from the mt library into horde.     See: https://sdog.jira.com/browse/LEM-678",Suggestion,,Closed,"2015-03-17 04:38:47","2015-03-17 04:38:47",3
"Atlassian Crowd","Update Crowd to use the latest version of atlassian-healthcheck","Updating to the latest version will allow us to provide the documentation and severity fields that health checks are supposed to have.",Suggestion,,Closed,"2015-02-26 23:44:53","2015-02-26 23:44:53",2
"Atlassian Crowd","Allow remote groups as children of local groups when managing groups locally and using Delegated Authentication","As per CWD-3593, it's not possible to use local groups with remote groups when working with a Delegated Authentication Directory.    In CWD-3389, this was added to Connector directories to allow this functionality, but it still doesn't exist for Delegated Auth directories.    As with CWD-3593, we should relax this restriction if it's simple enough to do so.",Suggestion,,"Gathering Interest","2015-01-14 06:13:39","2015-01-14 06:13:39",3
"Atlassian Crowd","Do not allow adding Crowd application permissions for the same groups multiple times","Currently, when trying to add groups, the user will be offered all groups which can legally be added to the crowd application. This includes groups which have already been added. We should remove all groups already in the crowd groups when offering options for addition.    *Environment:*  Inside the Crowd Administration's crowd application, on a default installation,    *Steps:*  * Go to the Groups tab  * Click the Add Groups checkbox    *Result:*  The same group that is already added is offered for (re-)addition    *Expected Result:*  No groups are shown, because all available groups have already been added",Bug,Low,"Long Term Backlog","2014-12-01 00:29:34","2014-12-01 00:29:34",3
"Atlassian Crowd","Request for Users is super slow","On JDOG this request takes ~30 seconds to come back:    bq. curl https://jdog.jira-dev.com/admin/rest/um/1/user/search?max-results=31&userFilters=users    Whereas this takes ~1 second:    bq. curl https://jdog.jira-dev.com/admin/rest/um/1/user/search?max-results=31    To reproduce this go to https://jdog.jira-dev.com/admin/users and click the Users filter.    !filter users.png!",Bug,Medium,Closed,"2014-08-04 08:32:58","2014-08-04 08:32:58",2
"Atlassian Crowd","Upgrade Atlassian REST to 2.8","For adding new REST resources, we should take advantage of [REST-225|https://ecosystem.atlassian.net/browse/REST-225]. Upgrade to Atlassian REST 2.8.",Suggestion,,Closed,"2013-10-11 08:54:24","2013-10-11 08:54:24",2
"Atlassian Crowd","After upgrading from Crowd 2.3.6 to 2.6.5, User Nested Groups and Synchronize User Details are disabled for Delegating Authentication Directory","Steps to reproduce:    1) You need to have a Crowd 2.3.6 installed with a Delegated Authentication directory pointing to a LDAP server.  2) Set as true the User Nested Groups and Synchronize User Details options.  3) Upgrade to Crowd 2.6.5.  4) The upgrade works, but the options above are set as false.",Bug,Low,Closed,"2013-09-20 14:55:17","2013-09-20 14:55:17",2
"Atlassian Crowd","Increase the size of PasswordHelperImpl's random passwords","PasswordHelperImpl generates a random password for Crowd to authenticate to itself. This is currently eight characters. Although this is already enough entropy to prevent most brute force attacks, lengthening it is simple and easy.",Suggestion,,Closed,"2013-09-20 10:27:23","2013-09-20 10:27:23",0.5
"Atlassian Crowd","Importing users from CSV into some LDAP directories with password already 'encrypted' is allowed but will never work","After CWD-3294, it's no longer possible to import users from CSV files where the user passwords are already encrypted (hashed) because the directory implementations will throw an InvalidCredentialException when the encrypted password is encountered.    Further up the track, all these users will just be marked as failed to import with no indication to the user why (except for log messages, but there's no indication they should check the logs).    We should check for the directories which require non-encrypted passwords and disallow users from importing with passwords already encrypted into these directories in the CSV importer.    Directories affected: SunOne, Novelle & MS Active Directory (these directories require the passwords to be in plain text when they encode them in their encodePassword() implementation).    This might involve changing the encodePassword() method into a separate set of methods for encoding, encrypting, and checking if the directory supports credential encryption. That which would be nicer than hardcoding a list of directories which don't support credential encryption in the ImportCsv action.",Bug,Low,Closed,"2013-09-20 02:00:51","2013-09-20 02:00:51",2
"Atlassian Crowd","PasswordCredential.NONE doesn't prevent login with PLAINTEXT directories","When creating new users, Crowd provides a value of {{PasswordCredential.NONE}} to indicate that a user has no valid password. It's an encrypted password of X; none of the password hashing schemes will produce an 'X', so it can't be used to log in.    However, Crowd also supports 'plaintext'; in a directory using this scheme, setting {{PasswordCredential.NONE}} results in a user with exactly a password of 'X'.    For this fix, treat that value as a special case and consider the password invalid.    This would only be an issue for admins who have imported users, rather than created them through the Crowd UI, into a directory using the PLAINTEXT password encoding.",Bug,Low,Closed,"2013-09-18 05:02:51","2013-09-18 05:02:51",1
"Atlassian Crowd","Remove DirectoryManager.resetPassword and ApplicationService.resetUserCredential","{{DirectoryManager.resetPassword}} and {{ApplicationService.resetUserCredential}} have been deprecated since Crowd 2.1. They reset the specified user's password to a randomly-generated one. Since there's no way for a user to retrieve a password, these methods don't have any value: you would achieve the same effect by setting the password to {{PasswordCredential.NONE}}.    Delete these methods.",Suggestion,,Closed,"2013-09-17 09:06:25","2013-09-17 09:06:25",1
"Atlassian Crowd","Paged searches with CrowdService.search give inconsistent results across pages","h6. Problem    When performing a paged search from _n_ to _p_ using {{CrowdService.search(Query)}}, Crowd internally:    * fetches all the results from 0 to _p_,  * reorders the results in memory,  * and skips the first _n_ results to return a page seemingly from _n_ to _p_.    The issue is that, when the API is used to fetch successive pages (ex: from 0 to _p_, then from _p+1_ to _2p_ and so on), the in-memory sort is performed on a larger set on the successive pages, from 0 to the actual limit (ex: _2p_ for the second paged search).    As a result, the same result(s) can have different position(s) in each successive page request. And, since Crowd silently discards the sorted results up to the start index of the requested page, those results can be silently dropped depending on their position.    h6. Example    On a customer dataset, Stash performed a group membership query using paged searches, where it asked for all the users in a group _groupA_ (direct and nested membership). Because  the _groupA_ has several nested groups with large numbers of direct users, the user _foo_ would not be found within the first request, from 0 to 100. In the subsequent search (from 100 to 200), the user will be found in the position 115 (before the in-memory sort) and 81 (after the sort). As a result, when Crowd discarded the first 100 results, that user (and other ones) would be silently discarded. Hence, in the aggregated result, the user would not be present and the list of members of _groupA_ returned to the caller would not include the user _foo_. For the same reason, other users would be duplicated in the aggregated result, which caused STASH-3843.",Bug,Medium,Closed,"2013-09-17 06:21:14","2013-09-17 06:21:14",2
"Atlassian Crowd","Remove seraph from the transitive dependencies of sal-core","{{sal-core}} brings in a transitive dependency on {{atlassian-seraph}} to provide for integration with applications that use Seraph. Crowd doesn't use Seraph, so exclude the transitive dependency.",Suggestion,,Closed,"2013-09-13 05:37:47","2013-09-13 05:37:47",0.5
"Atlassian Crowd","Crowd fails to switch to in-memory token storage on startup and always uses database token storage","h2. Steps to reproduce    # Setup Crowd and switch to in-memory token storage.  # Shutdown Crowd and restart the server again    h2. Expected behaviour    After restart, Crowd should be using in-memory token storage.    h2. Observed behaviour    On restart, Crowd produces an exception in the logs:        Moreover, although the configuration screen shows that Crowd is using in-memory token storage, that's not true. It is actually using database storage. This can be demonstrated by deleting the contents of the cwd_token table in the database, which causes all sessions to be lost.",Bug,Highest,Closed,"2013-09-13 00:20:50","2013-09-13 00:20:50",3
"Atlassian Crowd","Fix Crowd's front-page link to forums.atlassian.com","Crowd's front page still links to http://forums.atlassian.com/, which is no longer current. The link should be changed to https://answers.atlassian.com/.",Bug,Low,Closed,"2013-09-12 04:47:25","2013-09-12 04:47:25",0.5
"Atlassian Crowd","CSV Importer fails with NullPointerException when a group membership file contains a group that is not to be mapped","h4. Steps to Reproduce  # Go to *Crowd > Users > Import Users > CSV Importer*  # Use these files to import: [^users.csv] and [^members.csv]  # Map the CSV fields with the Crowd fields. For the group membership, do not map group2 (the last group mapping field). Choose 'None' instead.  # Click Continue to import the users    h4. Expected Results  All users, groups, and memberships are imported    h4. Actual Results  A system error is shown and this is the error:        h4. Findings  The [^members.csv] contains additional groups/fields (group2):      h4. Workaround  Deleting the group2 fields from the csv file fixed the issue",Bug,Low,Closed,"2013-09-11 17:08:16","2013-09-11 17:08:16",1
"Atlassian Crowd","GroupNotFoundException when deleting a membership is reported as success, but actually does nothing","h2. Steps to reproduce    # In LDAP, create a user 'mofli' and add him to group 'koalas'.  # Create a LDAP connector directory in Crowd, synchronise the directory.  # In Crowd, navigate to view the groups user 'mofli' is in. Crowd should report 'mofli' is a member of 'koalas'.  # In the LDAP server, remove group 'koalas'.  # Back in Crowd, *before sync happens*, remove membership of 'mofli' to 'koalas'.    h2. Expected behaviour    Crowd reacts gracefully, and either informs about the problem, or eventually reports that the operation has been 'done'. In any case, 'mofli' should not be a member of 'koalas' anymore.    h2. Observed behaviour    Crowd reports 'Update successful', but still shows that 'mofli' is a member of 'koalas'. A stacktrace appears in the logs:        h2. Notes    * The problem can also be reproduced by renaming the group in LDAP.  * The membership eventually disappears when the directory is synchronised again (FULL sync).",Bug,Low,Closed,"2013-09-11 00:43:18","2013-09-11 00:43:18",1
"Atlassian Crowd","Incremental sync does not correctly pick LDAP group rename","h2. Steps to reproduce    # In an AD server, create a user {{deke}} and a group (e.g. {{astronauts}}). Add {{deke}} to the group.  # In Crowd, create a LDAP connector and point it to AD, hen Sync  # Verify that triggered a sync and {{deke}}'s group memberships show {{astronauts}}  # Rename {{astronauts}} to {{retired-astronauts}}  # Trigger a sync (should be an incremental sync)  # Check {{deke}}'s group memberships in Crowd    h2. Observed    {{deke}} is a member of {{astronauts}} and {{retired-astronauts}}.    h2. Expected    {{deke}} is only a member of {{retired-astronauts}}    h2. Notes    * A full sync restores the consistency.  * This can be reproduced with a primary group membership, not just with a regular membership.",Bug,Medium,"Long Term Backlog","2013-09-10 04:43:43","2013-09-10 04:43:43",2
"Atlassian Crowd","Webhooks can be created with invalid URIs","If a webhook is created with an invalid URI, it will spam exceptions from {{WebhookPinger.ping()}} to the log plus never record a pingback failure for that webhook, meaning the webhook will live forever with the current health strategy. Minimal demo case:    We should either prevent such invalid webhooks from being created in the first place, or allow them but catch such pingback failures.",Bug,Medium,Closed,"2013-09-10 02:31:02","2013-09-10 02:31:02",1
"Atlassian Crowd","Webhook application id is compared by reference rather than by value","Application service generic does    in {{findWebhookById()}} and {{unregisterWebhook()}}, and both sides of the comparison are Long, so we're comparing references instead of comparing values.    This works accidentally as long as we haven't created 127 or more applications (due to the JVM caching instances of Long which are between -128 and 127), but after that it falls over.",Bug,Low,Closed,"2013-09-10 02:25:49","2013-09-10 02:25:49",0.5
"Atlassian Crowd","Existing tokens are inconsistent after user rename","If a user is renamed in Crowd, his sessions are not terminated, but remain associated to the previous username. This causes a broken link in the 'User sessions' table in Crowd (because the link points to the old username), and it is likely to cause problems to any application that has a valid token and tries to retrieve the user details from the token. More precisely, after a user is renamed:    * The token still exists in cwd_token, but with the old username.  * An application that requests to validate the token (POST /session/xxx) gets a successful validation (HTTP 200), but the response contains a link to the oldusername.  * An application that requests the user details from a token (GET /session/xxx) gets an error (HTTP 400) and the following response: <error><reason>INVALID_SSO_TOKEN</reason><message>User &lt;alice3&gt; does not exist</message></error>",Bug,Low,Closed,"2013-09-09 05:05:19","2013-09-09 05:05:19",2
"Atlassian Crowd","Renaming LDAP users via Crowd web app should give a clearer error message","Renaming users is not supported (the current error message) implies that renaming users is never supported in Crowd.    Renaming users is not supported for <long name of type of directory> directories would be ideal, but Renaming users is only supported for  internal and remote Crowd directories is also acceptable.",Suggestion,,Closed,"2013-09-09 01:53:37","2013-09-09 01:53:37",1
"Atlassian Crowd","Unable to add LDAP group into a local group when using Delegated Authentication Directory","h4. Steps to Reproduce  # Create UserA in LDAP  # Create 1 group in LDAP called {{ldapgroup}}  # Assign UserA into {{ldapgroup}}  # Set up a Delegated Authentication Directory in Crowd, with the *Use Nested Groups* and *Sync Group Memberships* options checked  # Login to Crowd as UserA, so that the LDAP membership details are copied to Crowd  # Create a new local group in this delegated directory called {{localgroup}}  # Click Direct Members tab for {{localgroup}} and add {{ldapgroup}} into this group  # Login to Crowd again as UserA    h4. Expected Results  {{ldapgroup}} is still a member of {{localgroup}}    h4. Actual Results  {{ldapgroup}} is removed from {{localgroup}} and there is an error in the log:    ",Bug,Low,Closed,"2013-09-06 09:40:44","2013-09-06 09:40:44",2
"Atlassian Crowd","Report of existing scheduled backup files disappears after form submission","== Steps to reproduce ==    # Setup scheduled backups. Wait until at least a scheduled backup has been made.  # Go to Administration > Backup  # Crowd correctly reports that there are some backup files, between date X and date Y  # Submit the first form (the Scheduled Backup form).    == Expected outcome ==    The report is visible after submitting the form.    == Actual outcome ==    The report disappears from the screen after submitting the form.",Bug,Low,Closed,"2013-09-06 09:36:08","2013-09-06 09:36:08",1
"Atlassian Crowd","Error message in Administration > Mail Template if mail server configuration is skipped during setup","= Steps to reproduce =    # Setup Crowd, make sure you skip the mail server configuration  # Login into the Crowd console, go to Administration > Mail Templates    The screen shows the following error (see screenshot):    ",Bug,Medium,Closed,"2013-09-06 07:12:50","2013-09-06 07:12:50",0.5
"Atlassian Crowd","'Notification Email Address' and 'From Email Address' in Administration > Mail Configuration should be marked as required fields","This issue existed before, but it is now more noticeable because these fields can be initially empty if the mail server configuration has been skipped during the setup process.",Bug,Low,Closed,"2013-09-06 06:47:57","2013-09-06 06:47:57",0.5
"Atlassian Crowd","Default password encoder should be ATLASSIAN-SECURITY","Password encoders are now shown in an essentially random order (due to CWD-3543?). They should be in alphabetical order and {{ATLASSIAN-SECURITY}} should be the default without relying on ordering.",Bug,Medium,Closed,"2013-09-06 05:25:49","2013-09-06 05:25:49",1
"Atlassian Crowd","Sidebar vanishes after form submission","Go to 'Administration' and click 'Update' for general options. The left list of sections vanishes. (This is likely to be due to CWD-3469.)",Bug,Medium,Closed,"2013-09-06 03:39:14","2013-09-06 03:39:14",2
"Atlassian Crowd","PersistenceTestHelper uses HsqldbDataTypeFactory for non-hsqldb db tests","PersistenceTestHelper uses HsqldbDataTypeFactory for non-hsqldb db tests, which results in massive log spam by DbUnit when we run e.g. Oracle DAO tests (or any other database DAO tests).    Since there are proper implementations of org.dbunit.dataset.datatype.IDataTypeFactory for each of these databases, we should use those instead.    Perhaps we can set up a configuration property in the crowd-test-runner/crowd-dao-database-test/src/test/resources/*-jdbc.test.properties which specifies the fully qualified class name of the correct IDataTypeFactory for each database?",Bug,Low,Closed,"2013-09-05 09:05:30","2013-09-05 09:05:30",0.5
"Atlassian Crowd","Remove DEFAULT_CACHE from CacheManagerEhcache","CacheManagerEhcache behaves like a manager of caches and also like a singleton cache. Remove this latter behaviour to improve identification of what's being cached and to simplify the API to prepare for caching changes.",Suggestion,,Closed,"2013-09-04 08:48:15","2013-09-04 08:48:15",1
"Atlassian Crowd","Authentication with delegated LDAP does not work in common case","Authentication with delegated LDAP does not work in case:    0. JIRA has Directory with setting: Delegated LDAP Authentication with Copy user on login enabled.   1. User is created in LDAP  2. The same user is created in JIRA (for Delegated LDAP directory)  3. Created user tries to log in    Login is unsuccessful with the following error:     It seems that while creating user in Jira it gets an externalID parameter from InternalDirectory. Later on when we log in user is found in LDAP with different ExternalID. ExternalID cannot be overwritten so login fails.",Bug,Highest,Closed,"2013-09-02 10:21:35","2013-09-02 10:21:35",1
"Atlassian Crowd","Add UI to rename a user in Crowd","Build UI to allow users to be renamed in Crowd. Allow for the fact that renaming is only supported by some directories.",Suggestion,,Closed,"2013-09-02 05:43:51","2013-09-02 05:43:51",2
"Atlassian Crowd","OpenID server shows login page if user is logged in","# Log in to openidserver at /openidserver/  # Browse to /openidserver/    Observed: decorated login page with menu options such as My OpenID, Profiles, etc on the left and the login page in the center    Expected: the My OpenID page    Found during https://shipit.atlassian.net/browse/SHPXXIV-32",Bug,Low,Closed,"2013-08-30 02:49:42","2013-08-30 02:49:42",0.5
"Atlassian Crowd","Can't change default profile for a user in crowdid server","# Navigate to the edit profiles page of the crowd id server  # Add a new profile  # View the profile  # Click the Make Default link    Observed: CSRF token missing message    Expected: currently viewed profile becomes the default profile & the current default profile is no longer marked as default    Found during https://shipit.atlassian.net/browse/SHPXXIV-32",Bug,Low,Closed,"2013-08-30 01:52:05","2013-08-30 01:52:05",0.5
"Atlassian Crowd","Multiple REST calls at the same time has cwd_token race condition.","If you look at these logs you can see that Crowd has a race condition if multiple REST calls attempt to create multiple tokens at the same time:        It would be good if this could be resolved soon.",Bug,Low,Closed,"2013-08-28 04:29:17","2013-08-28 04:29:17",2
"Atlassian Crowd","Upgrade postgresql driver to 9.2-1003-jdbc4","We're currently using postgresql:postgresql:9.0-801.jdbc4 but org.postgresql:postgresql:9.2-1003-jdbc4 is the latest available, and the postgres site recommends using the latest.    Note the different groupid in the new version, and that the suffix on the version is now -jdbc4 rather than .jdbc4.",Suggestion,,Closed,"2013-08-27 03:10:07","2013-08-27 03:10:07",3
"Atlassian Crowd","Generating UUID overwrites external id for delegated LDAP","Generating UUID overwrites external id for delegated LDAP with option copy users on login. This means that rename for delegated ldap is impossible - external id in internal directory do not match the one in LDAP.",Bug,High,Closed,"2013-08-26 14:33:56","2013-08-26 14:33:56",1
"Atlassian Crowd","Pass through UserRenameEvents to applications that can handle them for event-based sync","Crowd server should make UserRenameEvents available to applications that know how to handle them. For applications that don't know how to handle them (old Crowd clients), then UserRenameEvents should invalidate the event-based sync to cause a fallback to a full sync.",Suggestion,,"Under Consideration","2013-08-19 02:45:31","2013-08-19 02:45:31",3
"Atlassian Crowd","Create a unique, immutable identifier for users exported by a Crowd server","Detection of user renames from LDAP relies on LDAP servers making available a unique, immutable identifier (external ID). In order to detect user renames from remote Crowd servers, an identifier of similar characteristics must be available.",Suggestion,,Closed,"2013-08-19 02:43:53","2013-08-19 02:43:53",2
"Atlassian Crowd","Provide a simpler SPI for session token storage","The {{TokenDAO}} abstraction requires a {{search}} method which isn't ideal for some possible implementations. Pull the other methods up into a new interface and, where possible, use it.",Suggestion,,Closed,"2013-08-16 09:30:42","2013-08-16 09:30:42",2
"Atlassian Crowd","Deprecate shaded crowd-integration-client jar","{{crowd-integration-client}} is a shaded jar that bundles together a number of Crowd artifacts. It defeats the Maven dependency mechanism, as it includes classes that may also be present in other artifacts: using the individual non-shaded Crowd artifacts instead is recommended.    It should be deprecated and direct use of the other {{crowd-integration-*}} artifacts encouraged.",Suggestion,,Closed,"2013-08-06 01:35:28","2013-08-06 01:35:28",0.5
"Atlassian Crowd","PostgreSQL directory import from internal -> internal causes hang if overwrite is enabled","Repro steps (using Crowd 2.6.4 set up on PostgreSQL 8.4.17):  # Create an internal directory dirA  # Add 2 groups to dirA:  - users-group  - admins-group  # Add two users to dirA  - user1 (member of users-group and admins-group)  - user2 (member of users-group)  # Create an internal directory dirB  # Import users from dirA to dirB, without overwriting existing  - (/) 2 users, 2 groups, 3 group-memberships imported  # Import users from dirA to dirB, this time overwriting existing  - (x) Import hangs on org.postgresql.core.v3.QueryExecutorImpl.processResults() (in PostgreSQL JDBC driver)    Found while investigating CWD-1739.",Bug,Low,Closed,"2013-08-06 01:29:15","2013-08-06 01:29:15",2
"Atlassian Crowd","Don't re-set 'directory' for RemoveDirectory","Crowd's xwork.xml specifies:        which seems redundant. Remove it to simplify the configuration.",Suggestion,,Closed,"2013-08-02 11:17:26","2013-08-02 11:17:26",0.5
"Atlassian Crowd","Remove requirement for JDK 1.5 from crowd-integration-saml",,Suggestion,,Closed,"2013-08-02 10:50:54","2013-08-02 10:50:54",0.5
"Atlassian Crowd","Unregister a Webhook if it fails consistently",,Suggestion,,Closed,"2013-08-02 01:50:33","2013-08-02 01:50:33",2
"Atlassian Crowd","Password reset messages are misleading and not conditional (UX issues)","The message shown to users who request a new password is both non-conditional (it does not validate and report whether-or-not the username entered actually exists) and can be inaccurate (it can report that a password reset email will be sent when that is not true). The message that is shown is ALWAYS the following:    An email is on it's way! It contains a unique random URL. Click the link in the email message or copy it to your browser address bar. The link leads to a page where you can choose your new password.    Steps to reproduce:    1) Access Crowd console  2) Click the Can't access your account button  3) Choose either option  4) Enter a non-existing username/e-mail, or even leave the username field totally blank.    Note that the first issue (message is non-conditional) has been raised in another issue report - https://jira.atlassian.com/browse/CWD-2457 and has been closed with the following explanation from Atlassian:    This is by design, in order to prevent using this page for checking whether the user exists in the database.    We don't want this issue to duplicate that (closed) one, but are curious why this is the case when other Atlassian products do not follow this same design rule. For example, the Confluence forgot password interface (which may even be using Crowd as a directory) does explicitly inform the user if the submitted username was not found. Can someone clarify why this is?    Even if that message will remain non-conditional, there still seems to be a notable UX issue remaining here. The message that is displayed can be very misleading as it always informs users that an email was sent even though this is not always true. If there are no plans to make the message conditional, it would certainly make sense to at least change the wording of the generic message. Perhaps something like the following would be more appropriate:    Thank you. If we find an account matching the username you have entered you will receive an email with further instructions and a reset password link. The link will lead to a page where you can choose your new password.",Bug,Low,Closed,"2013-08-01 17:30:22","2013-08-01 17:30:22",0.5
"Atlassian Crowd","Only default local user status to 'On' for writeable LDAP directories","Existing read-only LDAP directories should be altered by the upgrade task to pick up user status from the remote directory.    Consider changing the UI label for Local User Status to 'Manage Active Flag Locally'.",Suggestion,,Closed,"2013-07-29 05:35:23","2013-07-29 05:35:23",1
"Atlassian Crowd","Crowd OpenID server does not enforce profile ownership for edits","Crowd's OpenID server allows creation of different profiles. On modification, the security check for ownership of the profile is insufficient and may allow a malicious user to intentionally modify another user's profile.",Bug,Medium,Closed,"2013-07-19 03:37:24","2013-07-19 03:37:24",2
"Atlassian Crowd","CrowdHttpAuthenticatorImpl doesn't always use the remotely configured cookie name","{{CrowdHttpAuthenticatorImpl.isAuthenticated}} should only check the session after {{sessionValidationInterval}}. However, it makes an unconditional check that the request has a Crowd token cookie present. The check ignores the fix in CWD-2326 to use the remotely-configured cookie name, which means it doesn't cause a performance problem. However, in the case of a token name mismatch, it could cause a user to wrongly be reported as unauthenticated.    Move the check after the validation time check and use {{getCookieTokenKey()}}.",Bug,Low,Closed,"2013-07-18 03:47:13","2013-07-18 03:47:13",1
"Atlassian Crowd","NotSerializableException when shutting down Crowd","h1. Steps to reproduce    # Deploy the Crowd WAR to a Tomcat server.  # Start Crowd, generate some activity and shutdown the container    h1. Stacktrace    This stacktrace is produced in the container logs, e.g., output-crowd.log when shutting down the container:    ",Bug,Medium,Closed,"2013-07-17 06:36:13","2013-07-17 06:36:13",1
"Atlassian Crowd","Add ADG header/footer to Crowd console",,Suggestion,,Closed,"2013-07-16 09:02:14","2013-07-16 09:02:14",2
"Atlassian Crowd","Reflected XSS in generic_form_row.jsp","There are multiple reflected XSS issues in the {{generic_form_row.jsp}} JSP file included in both the {{crowd-demo-app}} and {{crowd-openid-server}} projects. The vulnerabilities are a result of outputting user controlled data without first HTML encoding in the {{request.getParameter()}} calls.    {code:title=generic_form_row.jsp|borderStyle=solid}  <%@ page contentType=text/html;charset=UTF-8 language=java %>    <div class=fieldArea required>        <%          if (request.getParameter(warning) != null) {      %>      <div class=errorBox>                  <%=request.getParameter(warning) %>      </div>      <%          }      %>        <label class=fieldLabelArea>          <%              if (request.getParameter(label) != null) {          %>              <%=request.getParameter(label) %>:          <%              }          %>      </label>        <div class=fieldValueArea>          <%              if (request.getParameter(value) != null) {          %>              <%=request.getParameter(value) %>          <%              }          %>              <div class=fieldDescription>              <%                  if (request.getParameter(description) != null) {              %>                  <%=request.getParameter(description) %>              <%                  }              %>          </div>      </div>  </div>  {code}    The vulnerability can be triggered with a specially crafted URL like the following:    * [http://localhost:8095/openidserver/include/generic_form_row.jsp?warning=<script>alert('xss');</script>]",Bug,High,Closed,"2013-07-10 08:06:10","2013-07-10 08:06:10",2
"Atlassian Crowd","Allow adding or updating user attributes via JSON","h3.Problem  Currently the allowed JSON methods are these:    * [JSON Requests and Responses|https://developer.atlassian.com/display/CROWDDEV/JSON+Requests+and+Responses]    It would be great if all methods that XML can do, would be implemented on JSON as well.",Suggestion,,Closed,"2013-07-03 14:44:48","2013-07-03 14:44:48",1
"Atlassian Crowd","Include CSRF protection for login pages","The Crowd webapp and OpenID Server should protect their login page against CSRF attacks. This prevents attacks where a user is logged in under another set of credentials without their permission, or cases where a client is tricked into helping with brute force attacks.",Bug,Low,Closed,"2013-07-03 06:20:14","2013-07-03 06:20:14",1
"Atlassian Crowd","Crowd REST client unable to get users with spaces in username","Crowd rest client throws an com.atlassian.crowd.exception.OperationFailedException when we try to get an user with spaces in the username.    See comment for the stacktraces from client and crowd.",Bug,Medium,Closed,"2013-06-28 06:21:16","2013-06-28 06:21:16",3
"Atlassian Crowd","Add a REST API to do case-sensitive user renames","Due to the fix for CWD-3307, it is not possible to use the REST API to do a case-sensitive user rename, e.g., from Alice to alice. An alternative that does not involve doing a two-step rename should be available through the REST API.",Suggestion,,Closed,"2013-06-27 06:18:37","2013-06-27 06:18:37",2
"Atlassian Crowd","Remove the last screen of the setup process","The last screen of the setup process is just informative and can be merged with the login screen.",Suggestion,,Closed,"2013-06-26 07:06:25","2013-06-26 07:06:25",0.5
"Atlassian Crowd","Detect user rename in Crowd-to-Crowd synchronisation","This issue is to get rename working with full synchronisation; CWD-3531 will include renames in incremental Crowd-to-Crowd sync.",Suggestion,,Closed,"2013-06-25 08:21:31","2013-06-25 08:21:31",8
"Atlassian Crowd","Provide Support for IE9 and IE10 formally","According to https://confluence.atlassian.com/display/CROWD/Supported+Platforms , we only support IE 7 and IE 8 for Crowd. Please extend support for IE 9  and IE 10 as well, as that is currently the industry standard.",Suggestion,,Closed,"2013-06-21 16:42:34","2013-06-21 16:42:34",1
"Atlassian Crowd","Update support statements for Crowd","Crowd's [Supported Platforms|https://confluence.atlassian.com/display/CROWD/Supported+Platforms] document doesn't declare support for a number of platforms customers are using. We should declare support for current databases, JDKs and browsers.    In some cases we're already testing with these later versions and it's just a documentation change. In other cases we need to confirm support.",Suggestion,,Closed,"2013-06-19 18:25:04","2013-06-19 18:25:04",1
"Atlassian Crowd","Make mail settings an optional step in the setup process",,Suggestion,,Closed,"2013-06-19 06:46:28","2013-06-19 06:46:28",1
"Atlassian Crowd","Synchronise user enable/disable status for Remote Crowd directories","CWD-995 is about synchronisation of active/inactive users for AD connectors. This issue is about Crowd-to-Crowd synchronisation. We need to have a consistent behaviour, so customers can get the benefits of CWD-995 when they connect the suite of Atlassian products to a Crowd server that is hooked to AD.",Suggestion,,Closed,"2013-06-18 00:39:47","2013-06-18 00:39:47",1
"Atlassian Crowd","Make active/inactive AD user sync an opt-in feature for existing directories","CWD-995 introduces synchronisation of AD active/inactive users. This feature may surprise sysadmins because it changes the behaviour of existing directories. Make it optional using a switch in the UI. It should be enabled by default for new directories, and disabled for existing directories. Therefore, customers can opt-in for this feature _only if_ they have read the documentation and understand the consequences.",Suggestion,,Closed,"2013-06-17 06:28:05","2013-06-17 06:28:05",2
"Atlassian Crowd","Support SQL Server 2008 R2","Currently, Crowd only supports SQL Server 2008, but not 2008 R2. Please include support for SQL Server 2008 R2 in future releases.",Suggestion,,Closed,"2013-06-14 09:08:07","2013-06-14 09:08:07",2
"Atlassian Crowd","Email address with '+' character breaks OpenID flow","I attempted to purchase an item from the [Atlassian store|https://swag.atlassian.com]. After clicking 'checkout', I was pushed to the [OpenID host|https://openid.atlassian.com] for authentication. I successfully logged in and was redirected back to the store host, which redirected me back to the OpenID host and the redirect loop continued until I stopped it after 5 minutes.    h5. Steps to reproduce    # (Optional) Create an OpenID profile on [https://openid.atlassian.com] using a {{+}} character in the email address.  # Visit the [Atlassian store|https://swag.atlassian.com]  ## Add an item to your cart.  ## Click 'checkout'.  # (Optional, if you did not create an OpenID profile above) Create an OpenID profile on [https://openid.atlassian.com] using a {{+}} character in the email address.  # Enter the redirect loop.",Bug,Low,Closed,"2013-06-11 03:27:10","2013-06-11 03:27:10",2
"Atlassian Crowd","Make server-side Webhooks fault-tolerant",,Suggestion,,Closed,"2013-06-07 02:59:38","2013-06-07 02:59:38",5
"Atlassian Crowd","SAML exception: Error decoding SAML Authentication Request","I haven't been able to reproduce this one yet. Customers report that some SAML requests fail occasionally, but re-attempting the request succeeds. They get stacktraces in the logs, e.g.,        Or more commonly:    ",Bug,Low,Closed,"2013-05-22 08:01:47","2013-05-22 08:01:47",3
"Atlassian Crowd","Upgrade to openid4java 0.9.8",,Suggestion,,Closed,"2013-05-15 06:27:07","2013-05-15 06:27:07",0.5
"Atlassian Crowd","Remove connector for EOL'd Jive Forums from Crowd","The Jive Forums connector [only supports Jive Forums|https://confluence.atlassian.com/display/CROWD025/Integrating+Crowd+with+Jive+Forums], and not its current replacement of [Jive Social Business Software (SBS)|http://www.jivesoftware.com/beyond/forums].    Jive Forums [went EOL in 2009|https://community.jivesoftware.com/docs/DOC-35149], so we should remove the obsolete connector.",Suggestion,,Closed,"2013-05-14 05:06:08","2013-05-14 05:06:08",0.5
"Atlassian Crowd","Remove obsolete integrations from Crowd","Some of the old Crowd integration libraries are no longer relevant; they should be supported through older stable releases of Crowd rather than in current releases.    Remove:    * crowd-integration-atlassian-user  * crowd-integration-osuser  * crowd-integration-seraph  * crowd-integration-seraph22",Suggestion,,Closed,"2013-05-14 03:22:07","2013-05-14 03:22:07",0.5
"Atlassian Crowd","Usernames in updates posted to /user should be checked case-insensitively","If an application has lowerCaseOutput set then it will never receive mixed-case names.    When user details posted to the '/user' resource are checked to make sure the payload entity matches the username in the database this is  currently a case-sensitive check, which fails because the returned lowercase output doesn't match the mixed case stored in Crowd.    For consistency with Crowd's case-insensitive, case-preserving behaviour this check should also be case-insensitive. The update shouldn't affect the existing case in the database.  ",Bug,Low,Closed,"2013-05-14 01:38:28","2013-05-14 01:38:28",1
"Atlassian Crowd","Upgrade to Ehcache 2.7","Ehcache 2.7 changes the artifactId from {{ehcache-core}} to {{ehcache}}; there are [a few fixes declared|http://www.terracotta.org/confluence/display/release/Ehcache+2.7.0+Release+Notes].",Suggestion,,Closed,"2013-05-09 10:13:28","2013-05-09 10:13:28",0.5
"Atlassian Crowd","Make AUI 5 available in Crowd","AUI 5 is a prerequisite for ADG-ifying Crowd (CWD-3195). However, as Crowd doesn't currently use much of the existing AUI it should be possible to upgrade and make AUI available for plugins before refreshing Crowd's UI.",Suggestion,,Closed,"2013-05-07 03:38:07","2013-05-07 03:38:07",2
"Atlassian Crowd","CSV Import re-encrypting the encrypted password","When using the User Import (CSV importer), if we set [Are your passwords encrypted = 'yes'] and import users with MD5 encrypted password, the password will be encrypted again when it gets imported to the external directory.     I have tried this feature with Crowd v 2.5.2 and 2.6.2. The external directory in use is ApacheDS and I have set the directory configuration of Apache DS to use MD5.    h1. Repro steps  # Create an ldap connector (e.g. ApacheDS with MD5 password encoding for ease of testing)  # Import users from CSV, ticking the passwords are already encrypted radio box    h1. Observed  In LDAP directory, the saved value is MD5 hashed again    h1. Expected  It should be stored the same as it was in the CSV file",Bug,Low,Closed,"2013-05-06 17:47:08","2013-05-06 17:47:08",2
"Atlassian Crowd","Remove use of sun.misc.BASE64Decoder","Use Commons Codec instead of sun.misc.BASE64Decoder.",Suggestion,,Closed,"2013-05-02 02:46:48","2013-05-02 02:46:48",0.5
"Atlassian Crowd","Race condition in cache creation shows an error in the logs","Crowd's caches are created by request, but there's a race condition: we check that they exist and then created them. Simultaneous attempts to create would see one of those attempts fail. We should use {{addCacheIfAbsent}} instead so EhCache takes care of the possible race.  The exception is caught and logged, so this shouldn't be causing problems, but fixing it will clear up noise in the logs.",Bug,Low,Closed,"2013-05-02 01:42:48","2013-05-02 01:42:48",0.5
"Atlassian Crowd","Groups cannot be searched by their descriptions","For the fields of a group, each dutifully has a static {{Property}} listed in {{GroupTermKeys}} that we can use to plug a {{TermRestriction}} when searching. Each field except 'description'.    Looking at the source it appears that those static Properties are simply {{PropertyImpl}} s with a hard-coded string. Extrapolating, it would be nice if something like {{new PropertyImpl<String>(description, String.class)}} worked, but it doesn't.    My complaining is documented here:  https://answers.atlassian.com/questions/163548/is-there-any-way-to-search-a-group-s-description  ",Bug,High,Closed,"2013-04-29 09:34:21","2013-04-29 09:34:21",1
"Atlassian Crowd","Update documentation to say JIRA 4.1.x not supported with Crowd 2.5.3 client libraries","The [documentation|https://confluence.atlassian.com/display/CROWD025/Integrating+Crowd+with+Atlassian+JIRA+4.2+or+earlier] talks about {{com.atlassian.crowd.integration.seraph.v22.CrowdAuthenticator}} and {{com.atlassian.crowd.integration.seraph.JIRAAuthenticator}}, but these classes don't even exist in {{crowd-integration-client-2.5.3.jar}}.    Due to this reason it is not possible to integrate JIRA 4.1.x with Crowd 2.5.3's client libraries; instead, use the client libraries from Crowd 2.2.7, which remain compatible with later releases of the Crowd server.",Suggestion,,Closed,"2013-04-28 22:21:50","2013-04-28 22:21:50",0.5
"Atlassian Crowd","Support SQL Server 2012","Include support for SQL Server 2012 in future releases.",Suggestion,,Closed,"2013-04-23 14:18:54","2013-04-23 14:18:54",2
"Atlassian Crowd","Crowd Error Page returns 200 not 500 HTTP status code","The crowd error page when startup fails, should return a 500 class HTTP error code (most likely 503) rather than a 200 class error.    See attached screenshot for more info. This was from a fireball-214 installed version of OD.",Bug,High,Closed,"2013-04-22 06:35:27","2013-04-22 06:35:27",1
"Atlassian Crowd","Invariable HTML field reference in label elements","This is a fragment of the HTML code of /crowd/console/secure/admin/licensing.action:        Note the value of the for attribute in the label elements is invariably Description. Other HTML forms in Crowd UI are similarly affected.",Bug,Low,Closed,"2013-04-19 07:10:55","2013-04-19 07:10:55",1
"Atlassian Crowd","Accept sreg 1.1 in OpenID requests","Crowd's OpenID server only pays attention to sreg 1.0 requests. Now OpenID 2 is supported, request namespaces are being processed and sreg 1.1 requests are being ignored.    sreg 1.1 requests should be accepted.",Bug,Low,Closed,"2013-04-19 03:40:35","2013-04-19 03:40:35",2
"Atlassian Crowd","Inconsistencies in Crowd incremental synchronisation don't cause failure","Since CWD-3188, incremental synchronisation with a remote Crowd will fall back to full synchronisation when inconsistencies cause failure. However, some cases don't cause failure. Specifically:    * Synchronisation changes for a locally-deleted user recreates that user.  * Membership changes to a nonexistent group are ignored.    These cases will only happen when the current local state is out of synch with the remote Crowd instance; they imply that there may be other problems. They should be detected so that Crowd falls back to full synchronisation.  ",Bug,Low,"Short Term Backlog","2013-04-17 06:06:26","2013-04-17 06:06:26",5
"Atlassian Crowd","Improve logging and be defensive about posible locking failures when synchronising directories","CrowdDirectorySynchroniserImpl relies on locks to have mutual exclusion on the actual directory synchronisation. The locking mechanism can be very complex in clustered environments (e.g., clustered Confluence), Crowd should be defensive around it. In particular, logging should be improved to help diagnosing problems, and if possible, invariants should be asserted to fail early and minimise the risk of database corruption.",Suggestion,,"Gathering Interest","2013-04-17 02:54:32","2013-04-17 02:54:32",2
"Atlassian Crowd","Upgrade to commons-lang3","{{commons-lang}} has changed packaging and artifact coordinates for release 3, as well as adapting to changes in core Java.    Upgrade to the current release, commons-lang3 3.1.",Suggestion,,Closed,"2013-04-12 09:26:15","2013-04-12 09:26:15",1
"Atlassian Crowd","Crowd logs a warning about Incremental Synchronization even when it is not enabled","JIRA is connected with Crowd, that syncs with an LDAP that does not support incremental synchronization and even after disabling the incremental sync in JIRA's directory settings, you keep receiving:      Crowd version is 2.3.6 using a Delegated Auth Directory",Bug,Low,Closed,"2013-04-12 06:17:44","2013-04-12 06:17:44",1
"Atlassian Crowd","Keep atlassian-bundled-plugins.zip out of the heap","Crowd's plugin loader ends up loading {{atlassian-bundled-plugins.zip}} as a resource, which is cached by Tomcat. Either use a different classloader or mechanism to load it or disable Tomcat's resource caching.",Suggestion,,Closed,"2013-04-10 02:07:16","2013-04-10 02:07:16",2
"Atlassian Crowd","Improve authentication performance","h2. The problem    Say you've got a number of directories defined in the following order:    * Remote Crowd directory  * Internal directory    If a user from the internal directory tries to authenticate, Crowd will currently:    * attempt to authenticate against the first directory, resulting in a remote call to Crowd. Crowd won't find the user and return a 400.  * attempt to authenticate against the second directory, where the user is found and authentication succeeds.    This means that every authentication pays the cost of a call to the remote Crowd server. In many cases we can already tell from looking at the synchronised users  that the user does not exist in the first directory, but does exist in the second directory.    This scenario is not unrealistic. In many cases the Crowd/LDAP directory should be the primary directory and a second internal directory may exist for non-standard users, typically for automated systems such as Bamboo, FishEye, etc.    h2. An optimisation    An optimisation along the following lines would cut out the cost of the remote call for local users:    * loop over the active directories and for each directory:  * if the directory is local or synced locally, look up the user in the local db. If not found, skip the directory. Otherwise, authenticate against the directory.  * if the directory is remote and not synced, simply authenticate against the remote directory.  * if the user is not found in any of the local or remote directories, loop over the skipped directories and attempt to authenticate against them any way.    h3. Caveat    Consider a user {{usr}} that exists in the internal directory and has just been added to the remote Crowd directory, but has not been synced yet. If that user tries to authenticate, this optimisation will try to authenticate the user against the internal directory and fail.",Suggestion,,Closed,"2013-04-09 05:02:50","2013-04-09 05:02:50",3
"Atlassian Crowd","Multiple boolean search restrictions involving the same property crash Crowd","So I'm just trying to make a normal search on groups in Crowd containing a collection of SearchRestrictions.    (The following code is in Groovy—the Textile code renderer doesn't support it)      Individually, both of these queries take a fraction of a second to return results, but if I try to combine them in a BooleanRestriction, the resulting query pins MySQL and the Crowd Client eventually times out.",Bug,Medium,Closed,"2013-04-06 01:00:25","2013-04-06 01:00:25",2
"Atlassian Crowd","crowd distribution contains no information regarding the version",,Bug,Low,Closed,"2013-04-05 16:04:21","2013-04-05 16:04:21",1
"Atlassian Crowd","Active Directory Connector field is incorrectly labeled User DN should be Username","On the Connector tab for managing an Active Directory connector, the field labeled User DN should be labeled Username. The User DN field is on the Configuration tab. ",Bug,Low,Closed,"2013-04-02 18:39:44","2013-04-02 18:39:44",1
"Atlassian Crowd","Upgrade to an ATR with reduced memory usage for plugins","Upgrade to an ATR with ATR-51 fixed and enabled.",Suggestion,,Closed,"2013-04-02 06:15:43","2013-04-02 06:15:43",1
"Atlassian Crowd","Allow Google Apps connector to authenticate to secondary domains","The current google apps authenticator only works with primary domains.      Extend the functionality of the connector to also work secondary domains.    ",Suggestion,,"Under Consideration","2013-03-27 18:21:54","2013-03-27 18:21:54",3
"Atlassian Crowd","Show a clearer error for ApplicationPermissionException","If calls to a remote Crowd instance fail with to a permission exception then Crowd wraps the response up as a String in an {{ApplicationPermissionException}}. If that response is HTML then the resulting stack trace is likely to be unreadable due to the markup.    {{RestExecutor.throwError}} should try to turn the response into something readable. {{text/plain}} can be shown directly; {{text/html}} should be filtered so only the body text is included in the exception.",Suggestion,,Closed,"2013-03-27 02:57:51","2013-03-27 02:57:51",1
"Atlassian Crowd","Constrain LDAP search results when directories don't support paged results","Performing a directory search for a limited number of users (for example, during paginated browsing) still passes through a request for all users when the directory doesn't define {{ldap.pagedresults}}.    The results in a single directory query aren't sorted, so anything past {{offset + maxResults}} will be thrown away; adjust the query to request the minimum number.",Suggestion,,Closed,"2013-03-26 04:36:10","2013-03-26 04:36:10",1
"Atlassian Crowd","Upgrade to Tomcat 7","Tomcat 7 is the current stable release with a number of stability improvements and support for more recent standards. Crowd should first ensure that it works with Tomcat 7 and then upgrade the standalone distribution.",Suggestion,,Closed,"2013-03-26 02:45:04","2013-03-26 02:45:04",1
"Atlassian Crowd","Crowd leaves open until garbage collection the LDAP connections used for authenticating","Over time, Crowd establishes a large number of connections to our LDAP server (389 Directory Server), eventually causing a denial of service that breaks everything else that is LDAP connected until we restart either the LDAP server or Crowd. I have seen it at times using in the neighborhood of 800 connections before.     I don't know if crowd is leaking the connections (no longer actively using them) or if for some reason they're actively being used (I don't know why so many would be necessary).     Sometimes the problem appears to resolve itself before we restart something, perhaps once the LDAP server stops responding the connections eventually time out?    We have had to restart one or the other (now that we have realized Crowd is at fault, we restart crowd, and even have a cron script to watch for this problem and do so automatically now) once or twice a week.    At the moment we have crowd providing LDAP-based authentication services to JIRA and Stash, but many other services depend directly on LDAP. Kerberos is stored in and replicated through LDAP, SSSD uses Kerberos and LDAP, sudo retrieves rules from LDAP, and many web applications such as our knowledge base system are tied to LDAP. When LDAP becomes unusable, it seriously impacts us. Some of our systems can fail over to other LDAP replicas but most don't have that functionality unfortunately. ",Bug,Medium,Closed,"2013-03-22 18:54:27","2013-03-22 18:54:27",2
"Atlassian Crowd","Improve performance for paginated queries across multiple directories","Crowd's support for paginated queries doesn't take advantage of the underlying directories ability to provide paginated results. This means that a small query for the first ten users can end up querying the database for *all* users and then sorting in Crowd.    Directory implementations that support pagination (anything backed by a database or remote Crowd) should have their results limited. In the simplest case of a single directory this will allow the database results to be returned directly, sorted by the database.    Keeping correct behaviour for user shadowing may prevent some cases like uncached LDAP directories from being optimised, but covering the database-only and single-directory-only cases address specific customer issues.  ",Suggestion,,Closed,"2013-03-21 00:41:38","2013-03-21 00:41:38",3
"Atlassian Crowd","Ability to expand on attributes of users for search in the REST endpoint","We would like to search users and retrieve their attributes.  Currently we have to search to get the usernames first and then for each user, we need to make a new request to get the user with expanded attributes.",Suggestion,,Closed,"2013-03-20 07:29:42","2013-03-20 07:29:42",1
"Atlassian Crowd","Unable to create XML backup from a fresh vanilla Crowd installation hooked with Oracle DB (NullPointerException)","See: https://confluence.atlassian.com/display/CROWDKB/Can%27t+Create+XML+backup+due+to+NULL+directory+description    If Crowd is setup with an empty description field for the Crowd Internal Directory during installation, you will notice that you will not be able to generate a Crowd XML backup. The issue will also occur if any directories configured in Crowd has an empty description field.     Here is the error in the log:      h3.Cause  https://jira.atlassian.com/browse/CWD-3216    This affects only Crowd 2.6 (Crowd 2.5.2 is able to generate the backup despite the NULL description value).    ",Bug,Low,Closed,"2013-03-19 10:06:26","2013-03-19 10:06:26",2
"Atlassian Crowd","Incremental synchronisation does not propagate alias updates","h1. Symptoms    Applications are unaware of the new or updated aliases after an incremental sync, and only catch up after a full sync.    h1. Steps to reproduce    # Setup a directory with aliasing enabled, an create a user (user) in it.  # Connect a client application to the directory.  # Synchronise the directory from the client application. The user account is propagated to the client application.  # In Crowd, create a new alias, e.g., alias, for user.  # Do an incremental synchronisation from the client application.    h1. Expected outcome    The application does not have a user account anymore, and instead, it has an alias account.    h1. Actual result    The application still sees user, and does not have alias.",Suggestion,,Closed,"2013-03-19 00:27:51","2013-03-19 00:27:51",2
"Atlassian Crowd","In-memory tokens no longer persisted to disk after Ehcache upgrade","SSO sessions with the in-memory token store have been reported as being lost between restarts since the Ehcache upgrade. Investigate and see what configuration changes are necessary to persist them.",Bug,Medium,Closed,"2013-03-18 23:36:33","2013-03-18 23:36:33",2
"Atlassian Crowd","Active SSO sessions are lost when upgrading to Crowd 2.6","h1. Symptoms    After upgrading to Crowd 2.6 from a previous version, all active SSO sessions are expired. Users are forced to login again.    h1. Steps to reproduce    # With Crowd 2.5.3, create a new user account (user).  # Using a different browser (to keep sessions separated), login as user into the demo application. Verify that the session is created with Crowd's user session browser, and by inspecting the contents of the CWD_TOKEN table.  # Upgrade to Crowd 2.6 (verified with Crowd 2.6.1).  # Using Crowd session browser, verify that the session is still there, but the Last accessed column is empty (CWD-3202). The row is still in the database, as evidenced by the attached screenshot, but the new field last_accessed_time has been created with a default value of 0. Note that this row will be automatically removed the next time Crowd runs its scheduled expired session deletion task (unconfirmed).  # Reload the page in the demo application.    h1. Expected outcome    Session initiated before the upgrade should still be valid. The user should be able to continue using the demo application without log in again.    h1. Actual result    Session is destroyed by the upgrade. The user is request to log in again to continue using the demo app.",Bug,Low,Closed,"2013-03-18 22:49:57","2013-03-18 22:49:57",1
"Atlassian Crowd","Add warning message when the cookie secure option is on and a wrong domain name","When the option secure.cookies is enable or the domain name is wrongly set, the user will have a behavior like Logging in to Crowd Keeps Failing and Gets Redirected Back to The Login Page, also with the application linked. There is not error message or warning message in either log file or UI for user to fix the problem.      We should have a warning message for these two options in the log file. ",Suggestion,,"Under Consideration","2013-03-14 12:33:35","2013-03-14 12:33:35",0.5
"Atlassian Crowd","Last Accessed field in Session Browser is always empty","See attached screenshot:  !session.jpg!    Looks like the Last Accessed field is always empty in Crowd 2.6, regardless of memory or database token storage. ",Bug,Low,Closed,"2013-03-14 05:06:55","2013-03-14 05:06:55",1
"Atlassian Crowd","Return correct HTTP status for failure to create an application through /rest/appmanagement/1/application","When creating a new application through {{rest/appmanagement/1/application}} fails the internal error is reported as a 500. This should be a 409 Conflict so clients can distinguish it from a server failure and deal with this case.    When picking up this issue, make sure you have a look at the [following comment|https://jira.atlassian.com/browse/FE-3988?focusedCommentId=455430&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-455430] since we need to make sure what flavour of 40x we need to return.",Bug,Medium,Closed,"2013-03-14 02:02:02","2013-03-14 02:02:02",1
"Atlassian Crowd","Crowd can log Ognl exceptions when showing the failed results of updating a directory","When updating a directory fails, some paths end up trying to fetch synchronisation information even though it hasn't been retrieved. This results in a (harmless but noisy) NPE in the logs.",Bug,Low,Closed,"2013-03-13 07:22:19","2013-03-13 07:22:19",0.5
"Atlassian Crowd","DAOs should throw checked exceptions as declared in interfaces","Extend integration test coverage to ensure that DAOs implementations throw checked exceptions for inconsistent states as described in the DAO interfaces",Suggestion,,Closed,"2013-03-13 05:47:43","2013-03-13 05:47:43",1
"Atlassian Crowd","Don't allow local group management for uncached connectors","Uncached connectors can't use local group management (CWD-1284). Either the option should be hidden or setting should cause creating new groups to fail.",Bug,Low,Closed,"2013-03-12 01:14:35","2013-03-12 01:14:35",1
"Atlassian Crowd","SearchPicker should not assume search results are mutable","The {{SearchPicker}} assumes that the search results are mutable. This fails when certain directories return immutable results.",Bug,Medium,Closed,"2013-03-11 07:04:10","2013-03-11 07:04:10",1
"Atlassian Crowd","CrowdID footer bar displayed out-of-margin in Chrome and Safari","Chrome and Safari are rendering the footer bar out of margin, i.e., users must scroll down to see it. The bug does not affect Firefox.",Bug,Low,Closed,"2013-03-11 02:11:52","2013-03-11 02:11:52",0.5
"Atlassian Crowd","Incremental Crowd/Crowd synchronisation produces inconsistent events when a membership is deleted and recreated","When Crowd processes synchronisation events to send to clients it omits membership deletion events if that membership still exists (on the assumption that it's a shadowed membership change). However, if that membership is now present because it was recreated since the deletion then Crowd will still send the recreation event, which will now fail as that membership was never deleted.    Either the initial deletion should still be sent or the recreation should also be omitted.",Bug,Medium,"Short Term Backlog","2013-03-11 00:49:11","2013-03-11 00:49:11",5
"Atlassian Crowd","Failing incremental Crowd/Crowd synchronisation should fall back to full synchronisation","If the stream of events received during incremental synchronisation with a remote Crowd directory is inconsistent, Crowd may attempt to re-add members to groups they're already in. If this fails, Crowd should fall back to full synchronisation for that directory.",Bug,Medium,Closed,"2013-03-10 23:45:57","2013-03-10 23:45:57",2
"Atlassian Crowd","atlas-create-crowd-plugin builds a broken project","If I go to a clean directory and run atlas-create-crowd-plugin, fill in the required options, and without making any changes run atlas-run, I see the following stack trace:    [INFO] [talledLocalContainer] 2013-03-05 13:51:59,200 main ERROR [osgi.container.felix.FelixOsgiContainerManager] EventDispatcher: Error during dispatch.  [INFO] [talledLocalContainer] java.lang.NoClassDefFoundError: org/apache/commons/io/IOUtils  [INFO] [talledLocalContainer]   at com.atlassian.plugins.osgi.test.asm.BundleTestScanner.processUrl(BundleTestScanner.java:53)  [INFO] [talledLocalContainer]   at com.atlassian.plugins.osgi.test.asm.BundleTestScanner.scan(BundleTestScanner.java:32)  [INFO] [talledLocalContainer]   at com.atlassian.plugins.osgi.test.BundleTestClassesManager.registerBundle(BundleTestClassesManager.java:49)  [INFO] [talledLocalContainer]   at com.atlassian.plugins.osgi.test.BundleTestClassesActivator.addBundle(BundleTestClassesActivator.java:94)  [INFO] [talledLocalContainer]   at com.atlassian.plugins.osgi.test.BundleTestClassesActivator.access$000(BundleTestClassesActivator.java:8)  [INFO] [talledLocalContainer]   at com.atlassian.plugins.osgi.test.BundleTestClassesActivator$1.bundleChanged(BundleTestClassesActivator.java:28)  [INFO] [talledLocalContainer]   at org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:800)  [INFO] [talledLocalContainer]   at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:728)  [INFO] [talledLocalContainer]   at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:610)  [INFO] [talledLocalContainer]   at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:3715)  [INFO] [talledLocalContainer]   at org.apache.felix.framework.Felix.access$600(Felix.java:80)  [INFO] [talledLocalContainer]   at org.apache.felix.framework.Felix$FelixResolver.markBundleResolved(Felix.java:4239)  [INFO] [talledLocalContainer]   at org.apache.felix.framework.Felix$FelixResolver.markResolvedModules(Felix.java:4189)  [INFO] [talledLocalContainer]   at org.apache.felix.framework.Felix$FelixResolver.resolve(Felix.java:3990)  [INFO] [talledLocalContainer]   at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3402)  [INFO] [talledLocalContainer]   at org.apache.felix.framework.Felix.startBundle(Felix.java:1709)  [INFO] [talledLocalContainer]   at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:905)  [INFO] [talledLocalContainer]   at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:892)  [INFO] [talledLocalContainer]   at com.atlassian.plugin.osgi.factory.OsgiPlugin.enableInternal(OsgiPlugin.java:402)  [INFO] [talledLocalContainer]   at com.atlassian.plugin.impl.AbstractPlugin.enable(AbstractPlugin.java:237)  [INFO] [talledLocalContainer]   at com.atlassian.plugin.manager.PluginEnabler.actualEnable(PluginEnabler.java:114)  [INFO] [talledLocalContainer]   at com.atlassian.plugin.manager.PluginEnabler.enable(PluginEnabler.java:99)  [INFO] [talledLocalContainer]   at com.atlassian.plugin.manager.DefaultPluginManager.addPlugins(DefaultPluginManager.java:713)  [INFO] [talledLocalContainer]   at com.atlassian.plugin.manager.DefaultPluginManager.init(DefaultPluginManager.java:166)  [INFO] [talledLocalContainer]   at com.atlassian.crowd.plugin.CrowdPluginManager.init(CrowdPluginManager.java:69)  [INFO] [talledLocalContainer]   at com.atlassian.crowd.plugin.CrowdPluginManager.onApplicationStartedEvent(CrowdPluginManager.java:82)  [INFO] [talledLocalContainer]   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  [INFO] [talledLocalContainer]   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)  [INFO] [talledLocalContainer]   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)  [INFO] [talledLocalContainer]   at java.lang.reflect.Method.invoke(Method.java:597)  [INFO] [talledLocalContainer]   at com.atlassian.event.internal.SingleParameterMethodListenerInvoker.invoke(SingleParameterMethodListenerInvoker.java:36)  [INFO] [talledLocalContainer]   at com.atlassian.event.internal.AsynchronousAbleEventDispatcher$2.run(AsynchronousAbleEventDispatcher.java:60)  [INFO] [talledLocalContainer]   at com.atlassian.event.internal.AsynchronousAbleEventDispatcher$1.execute(AsynchronousAbleEventDispatcher.java:28)  [INFO] [talledLocalContainer]   at com.atlassian.event.internal.AsynchronousAbleEventDispatcher.dispatch(AsynchronousAbleEventDispatcher.java:56)  [INFO] [talledLocalContainer]   at com.atlassian.event.internal.EventPublisherImpl.invokeListeners(EventPublisherImpl.java:151)  [INFO] [talledLocalContainer]   at com.atlassian.event.internal.EventPublisherImpl.publish(EventPublisherImpl.java:70)  [INFO] [talledLocalContainer]   at com.atlassian.crowd.console.listener.StartupListener.contextInitialized(StartupListener.java:106)  [INFO] [talledLocalContainer]   at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3934)  [INFO] [talledLocalContainer]   at org.apache.catalina.core.StandardContext.start(StandardContext.java:4429)  [INFO] [talledLocalContainer]   at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:791)  [INFO] [talledLocalContainer]   at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:771)  [INFO] [talledLocalContainer]   at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:526)  [INFO] [talledLocalContainer]   at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:850)  [INFO] [talledLocalContainer]   at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:724)  [INFO] [talledLocalContainer]   at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:493)  [INFO] [talledLocalContainer]   at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1206)  [INFO] [talledLocalContainer]   at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:314)  [INFO] [talledLocalContainer]   at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)  [INFO] [talledLocalContainer]   at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)  [INFO] [talledLocalContainer]   at org.apache.catalina.core.StandardHost.start(StandardHost.java:722)  [INFO] [talledLocalContainer]   at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)  [INFO] [talledLocalContainer]   at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)  [INFO] [talledLocalContainer]   at org.apache.catalina.core.StandardService.start(StandardService.java:516)  [INFO] [talledLocalContainer]   at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)  [INFO] [talledLocalContainer]   at org.apache.catalina.startup.Catalina.start(Catalina.java:583)  [INFO] [talledLocalContainer]   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  [INFO] [talledLocalContainer]   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)  [INFO] [talledLocalContainer]   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)  [INFO] [talledLocalContainer]   at java.lang.reflect.Method.invoke(Method.java:597)  [INFO] [talledLocalContainer]   at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)  [INFO] [talledLocalContainer]   at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)  [INFO] [talledLocalContainer] Caused by: java.lang.ClassNotFoundException: org.apache.commons.io.IOUtils  [INFO] [talledLocalContainer]   at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:772)  [INFO] [talledLocalContainer]   at org.apache.felix.framework.ModuleImpl.access$200(ModuleImpl.java:73)  [INFO] [talledLocalContainer]   at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1690)  [INFO] [talledLocalContainer]   at java.lang.ClassLoader.loadClass(ClassLoader.java:247)  [INFO] [talledLocalContainer]   ... 61 more    I tried running atlas-mvn eclipse:eclipse, importing the project into eclipse, and updating the POM to include the Apache commons-io package, but that did not make any difference.     I am not sure whether the plugin is being installed into the Crowd dev instance despite the error - Crowd does launch and I can log into the application in a browser, but I am not sure where to look to see if a plugin is installed or not. Either way, the atlas-create method should not produce a malformed project.",Bug,Medium,Closed,"2013-03-06 14:41:33","2013-03-06 14:41:33",1
"Atlassian Crowd","i18n for client.forbidden.exception uses wrong ID for parameter","client.forbidden.exception should use \{1} rather than \{2} for its second parameter.",Bug,Low,Closed,"2013-03-05 02:48:04","2013-03-05 02:48:04",0.5
"Atlassian Crowd","Upgrade CrowdID to Hibernate 4","CWD-3059 deals with Crowd webapp. This issue deals with CrowdID server.",Suggestion,,Closed,"2013-03-04 22:36:26","2013-03-04 22:36:26",2
"Atlassian Crowd","Present password complexity requirements as a policy message, not as a warning","The password complexity requirements message is displayed upfront when the user tries to change his password. It currently appears as a warning. It should be presented in a way that doesn't look like there is a problem.",Suggestion,,Closed,"2013-03-04 06:20:14","2013-03-04 06:20:14",0.5
"Atlassian Crowd","No longer support building with Maven 2","Products that use the current {{maven-atlassian-source-distribution-plugin}} support building Maven 3 artifacts. Take advantage of that and drop all support for building Crowd with Maven 2.",Suggestion,,Closed,"2013-03-04 03:01:36","2013-03-04 03:01:36",0.5
"Atlassian Crowd","Re-attempt failed WebHook pings","Failed WebHook ping deliveries should be re-attempted for some time, until they are successfully delivered, or until the server gives up. Non-functional WebHooks should be automatically un-registered.",Suggestion,,"Gathering Interest","2013-03-03 21:55:00","2013-03-03 21:55:00",2
"Atlassian Crowd","Password complexity requirement message is not displayed","Crowd offers a feature to restrict the password complexity. As part of this there is the Password Complexity Requirement Message, which is meant to prompt the user when a password is entered which fails the requirements.    This message is never being shown when the password fails requirements. I've reproduced this in the following ways:    # Creating a new user using the administration interface, where the password fails requirements. The error message given is:  {quote}The supplied password is not valid for the directory server.{quote}  # Modifying a user using the administration interface, setting a password that fails the requirements. The error message given is:  {quote}Your new password does not meet the directory complexity requirements{quote}    h4. Steps to Reproduce    # Add a password complexity regular expression, and message for a directory  # Try to create a user with a deliberately failing password  # Try to modify an existing user with a deliberately failing password",Bug,Low,Closed,"2013-03-03 01:43:55","2013-03-03 01:43:55",0.5
"Atlassian Crowd","Register a WebHook with Remote Crowd directories",,Suggestion,,"Gathering Interest","2013-03-03 00:17:44","2013-03-03 00:17:44",1
"Atlassian Crowd","Provide a WebHook endpoint to synchronise a directory",,Suggestion,,"Gathering Interest","2013-03-03 00:17:24","2013-03-03 00:17:24",0.5
"Atlassian Crowd","Ping WebHooks asynchronously","WebHooks are pinged when an Event occurs. The Event framework is synchronous, therefore the operation is waiting for the pings to complete.    Pings should be sent asynchronously.",Suggestion,,Closed,"2013-02-28 06:57:14","2013-02-28 06:57:14",2
"Atlassian Crowd","Persist WebHooks",,Suggestion,,Closed,"2013-02-28 05:14:50","2013-02-28 05:14:50",2
"Atlassian Crowd","Needs to be a way to disable automatic directory searches when clicking on the Users tab","If you have the crowd.directory.selected cookie and you click the Users tab in the web console Crowd will automatically search the whole directory. For large directories the page will hang for a very long period of time (I waited 5 minutes and it still didn't return). There needs to be a way to disable this functionality so Crowd doesn't automatically query directories.",Bug,Medium,Closed,"2013-02-27 01:22:48","2013-02-27 01:22:48",0.5
"Atlassian Crowd","Crowd-to-Crowd WebHook-based synchronisation","CWD-3142 adds a WebHook API to Crowd. When a Remote Crowd (Crowd-to-Crowd) directory is configured, Crowd should register a WebHook in the remote Crowd server to be immediately notified of new events.",Suggestion,,"Gathering Interest","2013-02-27 00:47:27","2013-02-27 00:47:27",4
"Atlassian Crowd","SpringLDAPConnector returns ImmutableList which can't be sorted by ViewGroupMembers class","I already raised a support issue but they said that this is more of a developer question. So i try to explain it here since i really think this is a bug:    We are trying to update to Crowd Version 2.6.0 from Crowd Version 2.5.0. We are running our own implementation of a LDAP directory based on the OpenDS.java class.  So far our implementation ran fine. Except we are getting a exception when viewing Direct Members of a Group:        None of the code we added was involved, so i tried to nail the problem down.  I got myself the source of the 2.6.0 Crowd. After some searching i found the following lines inside the ViewGroupMembers class:    The sorting is where the exception happens.  The used line in your basic SpringLDAPConnector.java implementation shows that the used method returns a ImmutableList:    This is different from the Version 2.5.0 of the SpringLDAPConnector.java, there on line 1396 only the result without converting it to a ImmutableList is returned.    I dont know if this is a problem with other people too or am i missing something here ?",Bug,Low,Closed,"2013-02-25 13:25:32","2013-02-25 13:25:32",0.5
"Atlassian Crowd","As an application, I want to have exclusive management of my WebHooks","Do not allow an application to manage (delete) the WebHooks registered by another application.",Suggestion,,Closed,"2013-02-20 06:03:22","2013-02-20 06:03:22",0.5
"Atlassian Crowd","If a user exists in two directories in an application, and is added to a group in one directory that it was already in the other, clients get duplicate key errors","h4. Symptoms    In a client application, directory synchronisation fails with a duplicate key error, when adding a group membership. This will appear in the client log.    Sample Confluence log:    {code:none}2013-02-20 15:49:36,071 ERROR [scheduler_Worker-4] [atlassian.crowd.directory.DbCachingDirectoryPoller] pollChanges Error occurred while refreshing the cache for directory [ 98307 ].  org.springframework.dao.DataIntegrityViolationException: Hibernate operation: could not insert: [com.atlassian.crowd.embedded.hibernate2.HibernateMembership#295109]; SQL []; ERROR: duplicate key value violates unique constraint cwd_unique_user_membership    Detail: Key (parent_id, child_user_id)=(163847, 229382) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint cwd_unique_user_membership    Detail: Key (parent_id, child_user_id)=(163847, 229382) already exists.   at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:100)   at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)   at org.springframework.orm.hibernate.HibernateTransactionManager.convertJdbcAccessException(HibernateTransactionManager.java:619)   at org.springframework.orm.hibernate.HibernateTransactionManager.convertHibernateAccessException(HibernateTransactionManager.java:605)   at org.springframework.orm.hibernate.HibernateTransactionManager.doCommit(HibernateTransactionManager.java:518)   at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:732)   at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:701)   at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:321)   at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:116)   at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)   at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)   at com.atlassian.crowd.directory.$Proxy1476.addUserToGroup(Unknown Source)   at com.atlassian.crowd.directory.DirectoryCacheImplUsingChangeOperations.addUserToGroup(DirectoryCacheImplUsingChangeOperations.java:187)   at com.atlassian.crowd.directory.ldap.cache.EventTokenChangedCacheRefresher.synchroniseChanges(EventTokenChangedCacheRefresher.java:115)   at com.atlassian.crowd.directory.DbCachingRemoteDirectory.synchroniseCache(DbCachingRemoteDirectory.java:610)   at com.atlassian.crowd.manager.directory.DirectorySynchroniserImpl.synchronise(DirectorySynchroniserImpl.java:63)   at com.atlassian.crowd.directory.DbCachingDirectoryPoller.pollChanges(DbCachingDirectoryPoller.java:50)   at com.atlassian.crowd.manager.directory.monitor.poller.DirectoryPollerJobBean.executeInternal(DirectoryPollerJobBean.java:29)   at org.springframework.scheduling.quartz.QuartzJobBean.execute(QuartzJobBean.java:86)   at org.quartz.core.JobRunShell.run(JobRunShell.java:199)   at com.atlassian.confluence.schedule.quartz.ConfluenceQuartzThreadPool$1.run(ConfluenceQuartzThreadPool.java:20)   at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:549)  Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint cwd_unique_user_membership    Detail: Key (parent_id, child_user_id)=(163847, 229382) already exists.   at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2102)   at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1835)   at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)   at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:500)   at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:388)   at org.postgresql.jdbc2.AbstractJdbc2Statement.executeUpdate(AbstractJdbc2Statement.java:334)   at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeUpdate(NewProxyPreparedStatement.java:105)   at net.sf.hibernate.impl.NonBatchingBatcher.addToBatch(NonBatchingBatcher.java:22)   at net.sf.hibernate.persister.EntityPersister.insert(EntityPersister.java:462)   at net.sf.hibernate.persister.EntityPersister.insert(EntityPersister.java:436)   at net.sf.hibernate.impl.ScheduledInsertion.execute(ScheduledInsertion.java:37)   at net.sf.hibernate.impl.SessionImpl.execute(SessionImpl.java:2464)   at net.sf.hibernate.impl.SessionImpl.executeAll(SessionImpl.java:2450)   at net.sf.hibernate.impl.SessionImpl.execute(SessionImpl.java:2407)   at net.sf.hibernate.impl.SessionImpl.flush(SessionImpl.java:2276)   at net.sf.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:61)   at org.springframework.orm.hibernate.HibernateTransactionManager.doCommit(HibernateTransactionManager.java:510)   ... 17 more      This also happens when using JIRA as a user directory server for other applications.    h4. Cause    The application in Crowd has multiple directories, and a user name exists in both directories. When a user is a member of a group in one directory, then added to the same named group in the other directory, then when clients synchronise again, they try to add the user to that group. Since that user is already a member of the group, it's a duplicate key error.    h4. Steps to Reproduce    # Create two internal directories in crowd  # Create a user in each of them, with the same name  # Create a group in both directories  # Add the user to a group in *one* of the directories  # Add an application that includes both directories  # Connect a client to that application in the Crowd server  # Ensure it synchronises at least once  # Add the user to the same group in the directory where it didn't already have that membership  # Synchronise the client again    h4. Workaround    Two ways to prevent it from occurring:    # Ensure that there are no overlaps in usernames between directories, or ensure that groups are not added when the membership already exists in one directory (process change). This may be hard to manage if one of the directories is an LDAP synchronised directory, or synchronised from another Crowd server out of the control of the administrator.  # Create two applications, each with only one of the directories in them. Then set up two user directories in the client instead. This does not work, if JIRA is the Crowd server, as JIRA simply uses all directories whenever a client connects in.    If it does occur in the client, you can clear the remote directory cache to stop it from happening until the next time a user is added to a group this way:    # Disable the directory  # Enable the directory  # Force a full synchronisation",Bug,Medium,Closed,"2013-02-20 05:01:35","2013-02-20 05:01:35",2
"Atlassian Crowd","As an application, I want my WebHooks to be pinged when there are new events",,Suggestion,,Closed,"2013-02-19 04:01:06","2013-02-19 04:01:06",2
"Atlassian Crowd","As an application, I want to register and unregister WebHooks",,Suggestion,,Closed,"2013-02-19 03:59:24","2013-02-19 03:59:24",3
"Atlassian Crowd","Add a WebHooks API to Crowd","Add WebHooks so applications can subscribe and be web-pinged when new events are available.",Suggestion,,Closed,"2013-02-18 00:34:52","2013-02-18 00:34:52",7
"Atlassian Crowd","Removing a User from an LDAP Read/Write Directory does not remove the group memberships for that user","Currently, the implementation of {{SpringLDAPConnector.removeUser(String name)}} simply removes the LDAP entry for the user but it doesn't clean up the membership references to the user stored in the group entries.",Bug,Medium,"Long Term Backlog","2013-02-15 06:30:26","2013-02-15 06:30:26",2
"Atlassian Crowd","Delegated connectors use two attributes in the database to indicate nested groups support","h1. Steps to reproduce  # Create a delegated directory in Crowd. Check the nested groups option.  # Save the directory  # The information is persisted as two complementary attributes in the database:      Note that Internal Directories use just useNestedGroups (but not ldap.nestedgroups.disabled) and LDAP connectors use just ldap.nestedgroups.disabled (but not useNestedGroups). In Crowd, Delegated Directories are using both.    Note as well that creating a Delegating Directory in Embedded Crowd uses just ldap.nestedgroups.disabled, but not useNestedGroups.",Bug,Low,Closed,"2013-02-15 04:34:35","2013-02-15 04:34:35",1
"Atlassian Crowd","'Nested groups' setting is ignored by delegated authentication directories ","h1. Symptoms  Users can enable and disable nested groups support for Delegated Directories in applications that embed Crowd 2.6.0 (plugin version 1.6.0). The setting is persisted, because subsequent updates retain the value. However, when a user authenticates successfully, the group-to-group memberships are not copied to the database, and therefore not taken into account.    h1. Steps to reproduce  # Set up an LDAP directory (e.g., OpenLDAP) with two groups (group1 and group2). Make group1 a parent of group2. Create a user who is a member of group2 but not of group1.  # Create a Delegated Directory in Confluence 5.0-beta4 (which embeds Crowd 2.6.0). Enable nested groups, copy user details and copy group details.  # Log out from Confluence. Log in again using the credentials of the LDAP user created in step 1. Authentication should succeed.  # Go to group browser to see a list of all groups.    h1. Expected result  The list should contain group1, since the user is an indirect member, and therefore, the group details should have been copied when he authenticated. Moreover, by clicking in group1 it should be possible to see that it has group2 as its member.    h1. Actual result  group1 does not appear on the list.    h1. Notes  The issue cannot be reproduced in standalone Crowd because of a side-effect of CWD-3137. However, it has been verified in a feature branch of standalone Crowd with the fix for CWD-3137 in it.",Bug,Low,Closed,"2013-02-15 03:36:26","2013-02-15 03:36:26",1
"Atlassian Crowd","Add a Application/Directory Configuration Summary inside the Crowd UI","It would be nice to have a text summary for Applications and Directories that Crowd admins can easily copy/paste or downloaded as a file to send to Support.    Ideally it would capture:  * Application configurations (the stuff in cwd_application* tables)  * Directory configurations (the stuff in cwd_directory* tables)  * How applications are linked to directories (the stuff in cwd_app_dir* tables)",Suggestion,,Closed,"2013-02-14 19:55:52","2013-02-14 19:55:52",2
"Atlassian Crowd","Log when synchronisation appears to be running against an empty local directory","The first synchronisation will take longer than other times. For an upgrade to Embedded Crowd from a pre-Embedded application it may be the longest part of the upgrade. Log something at the start of synchronising users to indicate what's happening.",Suggestion,,"Gathering Interest","2013-02-13 05:36:28","2013-02-13 05:36:28",0.5
"Atlassian Crowd","It is possible to save a space ( ) character in place of a required configuration item","h3. Steps to Reproduce  # Add a directory to Crowd  # Replace one of the required attributes on the Configuration page with a   character  # Save the page  #- Expected result - this would fail  #- Actual result - the page saves successfully  # Attempt to sync however, and you will see errors like this:  ",Bug,Low,"Long Term Backlog","2013-02-07 03:04:54","2013-02-07 03:04:54",3
"Atlassian Crowd","Improve group synchronisation for RFC 2307 directories","Carry CWD-2943's improvements across to RFC 2307 directories.",Suggestion,,"Gathering Interest","2013-02-07 01:09:24","2013-02-07 01:09:24",2
"Atlassian Crowd","Getting names of group memberships for a user in an RFC 2307 directories fails with ClassCastException","Fetching the parent groups for a user in an RFC 2307 directory fails:        RFC2307Directory has been refactored to use {{Iterable}} for group relationship queries but one case still tries to cast to {{List}}.  ",Bug,High,Closed,"2013-02-06 04:30:16","2013-02-06 04:30:16",0.5
"Atlassian Crowd","Make the OpenID endpoint URL more prominent","With CWD-2470, users can provide the endpoint URL when logging in to sites with CrowdID. We should make it more visible, in the documentation or on the public identity page.",Suggestion,,Closed,"2013-02-06 02:07:52","2013-02-06 02:07:52",0.5
"Atlassian Crowd","OpenID Trust Relationships should check for valid IP addresses","CrowdID's 'Trust Relationships' expects hostnames or IP addresses but allows entry of arbitrary strings. Entering URLs of RPs seems to work but will have no effect.",Suggestion,,Closed,"2013-02-06 01:26:28","2013-02-06 01:26:28",1
"Atlassian Crowd","Run the Platform CTK in Crowd's tests","The platform CTK validates an application's implementation of SAL on behalf of plugins. Get this running as part of Crowd's build to identify any bugs.",Suggestion,,Closed,"2013-02-05 22:53:18","2013-02-05 22:53:18",2
"Atlassian Crowd","PluginSettingsFactory does not create transactions","Using a PluginSettingsFactory in a Crowd plugin fails on modification attempts:        The PluginPropertyManager needs an interceptor configured to set the appropriate transaction behaviour for that session.",Bug,Medium,Closed,"2013-02-05 01:35:58","2013-02-05 01:35:58",0.5
"Atlassian Crowd","Better recovery when running out of memory ","Running into out of memory errors when trying to sync to a large directory, logs aren't very useful in informing you about why you're running into an error.",Suggestion,,Closed,"2013-02-04 05:50:53","2013-02-04 05:50:53",3
"Atlassian Crowd","Show details of synchronisation failure in the user interface","When synchronisation fails, Crowd currently shows a generic message:        It would be better to include some details of the failure, such as the top-level exception. Some failure reasons are common enough that we could refer directly to support documentation.",Suggestion,,Closed,"2013-02-04 05:34:58","2013-02-04 05:34:58",2
"Atlassian Crowd","Upgrade dependencies","Upgrade third-party dependencies to pick up bug fixes.",Suggestion,,Closed,"2013-02-04 01:11:25","2013-02-04 01:11:25",1
"Atlassian Crowd","Remove TokenSeed now it's no longer used","CWD-3104 removes the last use of TokenSeed. Remove it from the UI.",Suggestion,,Closed,"2013-02-01 04:29:24","2013-02-01 04:29:24",1
"Atlassian Crowd","Support for HTML emails sent by Crowd to users/admins","Crowd still only sends out plain-text emails. User experience and look/feel can be improved and made consistent with rest of Atlassian apps' email notifications by supporting HTML emails.",Suggestion,,"Gathering Interest","2013-01-31 07:02:46","2013-01-31 07:02:46",3
"Atlassian Crowd","Replace atlassian-core with Guava where a straightforward replacement exists","Atlassian Core brings in a lot of dependencies but we only use a small number of its classes. Some of the classes from atlassian-core, such as EasyList, EasyMap or StringUtils, can be replaced by their Guava equivalents.",Suggestion,,Closed,"2013-01-31 04:39:09","2013-01-31 04:39:09",0.5
"Atlassian Crowd","Screen without data after failing to add a local group to a remote group","h1. Symptoms  After a (failed) attempt to add a local group as a child of a remote group, the UI is left in an unusable state.  h1. Steps to reproduce  Same as CWD-3090.  h1. Expected behaviour  Crowd recovers gracefully from the failure and the UI remains functional.  h1. Actual behaviour  See attached screenshots, and also the stacktrace in the comments to CWD-3090.",Bug,Low,Closed,"2013-01-31 04:19:36","2013-01-31 04:19:36",0.5
"Atlassian Crowd","Can't create a new LDAP connector directory with anonymous bind user dn","h4. Symptoms    When creating a new LDAP connector directory, it's impossible to save the directory without specifying the bind user User DN and Password. Testing the connection with the anonymous credentials works fine.    This will show up as the following error messages in the interface:    # The User DN cannot be blank for this directory. under User DN  # Password cannot be blank. under Password    Neither of these fields are marked with an asterisk to indicate that they are mandatory.    h4. Steps to Reproduce    # Directories > Add Directory  # Connector  # Fill in all details, and leave User DN and Password empty in the Connector tab  # Try to save the directory    h4. Workaround    There are two possible workarounds:    # Use a username and password instead of anonymous access  # Use the latest version of Crowd that doesn't have this bug - 2.5.1",Bug,Low,Closed,"2013-01-31 01:40:27","2013-01-31 01:40:27",0.5
"Atlassian Crowd","Update copy in exceeding user limit warning email to administrators","Updating the copy due to negative feedback about the harsh warning of being locked out once Crowd exceeds the user limit.    Revised copy can be found: https://extranet.atlassian.com/display/CROWD/Update+Email+about+Exceeding+User+Limit",Suggestion,,Closed,"2013-01-31 00:10:49","2013-01-31 00:10:49",0.5
"Atlassian Crowd","Incremental AD synchronisation silently ignores remote deletions if the user does not have admin privileges","h1. Symptoms  Users deletions in an AD are not propagated to Crowd by (apparently successful) incremental synchronisation if the connector binds to AD using unprivileged credentials.  h1. Steps to reproduce  # Create an unprivileged user in AD, e.g., CN=UnprivUser,OU=People,DC=sydney,DC=atlassian,DC=com  # Set up an AD LDAP connector in Crowd, use the unprivileged user credentials to connect to AD.  # Do a full synchronisation  # Create a new ephemeral user in AD using the AD console or any other tool different from Crowd itself.  # Synchronise again. An incremental synchronisation successfully propagates the new user to Crowd. Verify the new user actually exists in Crowd with the user browser.  # Delete the ephemeral user from AD using the AD console or any other tool different from Crowd itself.  # Synchronise again.    h1. Expected behaviour  Either the deletion is propagated from AD to Crowd if possible (fallback to full sync?), or the user is notified about the failure to complete an incremental synchronisation (see CWD-2714).  h1. Actual behaviour  The deletion is not propagated from AD to Crowd. The synchronisation completes without any error message, logs contain deleting [ 0 ] users, and the ephemeral user still appears in the user browser.",Bug,Low,Closed,"2013-01-30 23:35:25","2013-01-30 23:35:25",3
"Atlassian Crowd","UpdateGroupMembers fails with no UI feedback","With CWD-1284, adding a remote group as a child of a local group fails without any feedback in the UI.    If this doesn't work then there should be a clear error message.",Bug,Medium,Closed,"2013-01-30 06:54:38","2013-01-30 06:54:38",1
"Atlassian Crowd","Allow remote groups as children of local groups when managing groups locally in a syncing directory (Connector)","CWD-1284 allows groups to be managed locally. Local groups can contain remote users, but they can't contain remote groups.    We should relax this restriction if it's simple enough to do so.",Suggestion,,Closed,"2013-01-30 06:52:07","2013-01-30 06:52:07",3
"Atlassian Crowd","DirectoryDAOFile should log when it is no longer using a local file","DirectoryDAOFile logs when it loads a local {{directories.properties}} file but, when the file is deleted, doesn't log that it's going back to fetching definitions from the database.",Suggestion,,Closed,"2013-01-30 06:21:53","2013-01-30 06:21:53",0.5
"Atlassian Crowd","Uncaught exception when testing a connector","h1. Symptoms   An org.springframework.ldap.UncategorizedLdapException exception is thrown when testing searching users/groups while setting up a new ActiveDirectory connector. The exception is uncaught, therefore the user is shown a blank screen, and an stacktrace appears in the logs.  h1. Steps to reproduce  # Click on 'Add directory'  # Select 'Connector'  # Enter a name  # Switch to the 2nd tab ('Connector')  # Pick 'Microsoft Active Directory'  # Enter a correct URL (e.g. ldap://crowd-ad1:389/), a correct base DN and correct credentials  # Optionally, click on 'Test connection'. The test should pass.  # Change to the 3rd tab ('Configuration').  # Click on 'Test search'.    Expected result: an error message is displayed on the screen to inform the user.    Actual result: blank screen, and stacktrace in the logs.  h1. Stacktrace    ",Bug,Low,Closed,"2013-01-29 06:27:49","2013-01-29 06:27:49",1
"Atlassian Crowd","TokenReaper task does not delete expired tokens in the background","{{TokenReaper}} runs a background sweep to delete any expired session tokens. However, it's wired up incorrectly and throws a {{NullPointerException}} rather than hitting the database. This is then wrapped as a {{JobExecutionException}} and logged at INFO by Quartz, which is below the default threshhold.",Suggestion,,Closed,"2013-01-29 04:53:10","2013-01-29 04:53:10",1
"Atlassian Crowd","As a Crowd user, I want a troubleshoot page to diagnose directory connection problems","Copy the existing feature in Embedded Crowd.",Suggestion,,Closed,"2013-01-23 23:37:45","2013-01-23 23:37:45",2
"Atlassian Crowd","Local groups in connector directories are not imported/exported in XML backups","h1. Steps to reproduce  # Create a LDAP connector directory with 'Local groups' enabled  # Create a local group  # Export an XML backup    There is no trace of the newly created group in the XML backup.",Bug,Low,Closed,"2013-01-21 04:21:09","2013-01-21 04:21:09",1
"Atlassian Crowd","UnsupportedCrowdApiException is not actually thrown by RestCrowdClient when the REST API is missing","Some methods in RestCrowdClient declare UnsupportedCrowdApiException, which is documented to be thrown if the server does not support the appropriate version of the API. However, the exception is not actually thrown in this event, instead, an InvalidCrowdServiceException is thrown.",Bug,Low,Closed,"2013-01-17 03:22:53","2013-01-17 03:22:53",1
"Atlassian Crowd","Text-less pages in the Crowd console","Occasionally Crowd's UI appears with all messages and labels blank. It looks like all i18n resources are being returned as empty strings.    Reproduced with Chrome and Safari.",Bug,Low,Closed,"2013-01-15 22:47:00","2013-01-15 22:47:00",1
"Atlassian Crowd","Add an operation in the REST client to invalidate all tokens of a given user","Since CWD-2876, there is a REST operation to invalidate all sessions of a given user (possibly saving one session). New methods should be added to RestCrowdClient to make use of this new operation.",Suggestion,,Closed,"2013-01-09 21:47:18","2013-01-09 21:47:18",1
"Atlassian Crowd","The SQL query to expire old tokens truncates the date","When Crowd issues a SQL query to expire old tokens (older than a certain reference timestamp), it is truncating the timestamp to a date, i.e., it ignores hours, minutes, seconds.    This is the query as seen in the PostgreSQL logs:        Consequently, tokens that should be expired are not being expired if the default session duration is in the range of hours or less.",Bug,Low,Closed,"2013-01-07 23:20:42","2013-01-07 23:20:42",1
"Atlassian Crowd","Crowd's alias creates multiple accounts","h3. Steps to replicate  # Configure JIRA to use CROWD user directory and then synchronize  # Enable the [alias feature|https://confluence.atlassian.com/display/CROWD/Specifying+a+User%27s+Aliases] in Crowd and add an alias to a user  # In JIRA, synchronise Crowd directory again  # Login to JIRA with the username (not the alias user)    When viewing the list of users in JIRA, it will display both the username and the alias, thus create two accounts for a single user    h3. Workaround:  Re-create the Crowd Directory again.  For example, remove the Crowd directory in JIRA and then re-configure the Crowd User Directory.  Lastly, synchronise JIRA with the Crowd directory.",Bug,Low,Closed,"2013-01-07 14:10:24","2013-01-07 14:10:24",2
"Atlassian Crowd","Reduce logging during directory synchronization","Its looks like it is crowd embedded that actually does this. It looks like the logging is proportional to the number of groups. We don't need this much detail in the logs it will blow their size out of large LDAP directories. Admins of JIRA really don't care about these details. If they need to DEBUG performance problems then they should enable debugging rather than having it on by default. We should    # Get Crowd Embedded to drop these messages to DEBUG.    We can (should?) keep around the synchronisation started and synchronisation finished logs when we fix this.    For example, here is a sync with a small directory of ~ 10 users and ~ 5 groups.    ",Bug,Medium,Closed,"2013-01-03 22:23:21","2013-01-03 22:23:21",1
"Atlassian Crowd","Add a new validation factor to distinguish between tokens with different privileges","Applications may need more than one token per user, for instance, to temporarily grant elevated privileges to a user. In order to verify that the token presented by a user actually corresponds to the privilege level that the application requires for an operation, a new validation factor is required.",Suggestion,,Closed,"2012-12-17 06:45:54","2012-12-17 06:45:54",0.5
"Atlassian Crowd","As an application, I want to create short-lived tokens","As an application, I want to create a token for user that is valid for a short period of time. For instance, to temporarily grant the user access to a restricted part of the application.",Suggestion,,Closed,"2012-12-17 05:18:18","2012-12-17 05:18:18",5
"Atlassian Crowd","Upgrade to dom4j 1.6","Crowd currently depends on dom4j 1.4, which is known to have some bugs (see CWD-3022) and it's more than 8 years old. We should upgrade to a more recent version to avoid being bitten by these bugs again.",Suggestion,,Closed,"2012-12-13 05:23:53","2012-12-13 05:23:53",0.5
"Atlassian Crowd","When adding a user to an LDAP connector directory, active flag is ignored","h3. Symptoms    When adding a new user to a directory with an LDAP connector, if you specify the user's active flag to false, it will still be created with active flag true. After adding the user, the flag can be turned off without issue.    This affects the Crowd Admin Console user interface, and also the REST API.    h3. Steps to Reproduce    In the admin console, add a user and set the active flag to false. After the user is added, the active flag is set to true.    To replicate in REST:    {code:none}  curl -i -u test:test --data '{ name : my_username, first-name : My, last-name : Username, display-name : My Username, email : <EMAIL>, password : { value : my_password }, active : false }' http://localhost:8095/crowd/rest/usermanagement/1/user --header 'Content-Type: application/json' --header 'Accept: application/json'  {code}    When this command is run, the user is created with the active flag set to true despite false being the value in the request payload.    This issue does *not* affect Crowd internal directories.    h3. Workaround    Manually set the flag after the create command, or send a REST command to update the flag.",Bug,Low,"Long Term Backlog","2012-12-12 01:00:21","2012-12-12 01:00:21",2
"Atlassian Crowd","Move the Crowd Integration libraries to be Open Source","We have had multiple requersts and issues around the usage of the Crowd Client libraries in other OpenSource products and also in other commercial products.    Since the Crowd Client libraries are useless without a Crowd Server (something which a customer would pay for), there is really no issue in allowing the distribution of the client libraries in third party products. It is a selling point for that third party product and a revenue stream for Atlassian, if that third party customer:  # Buys Crowd because they want SSO  # They are already an Atlassian customer    I would suggest that not only should the Crowd REST client be made open source but also the Spring Security integration.    ",Suggestion,,Closed,"2012-12-05 03:18:59","2012-12-05 03:18:59",1
"Atlassian Crowd","Externalise directory configuration from the database","We would like the ability to configure Crowd to deal with a cluster of LDAP instances. Current thinking was to have one write LDAP server and multiple read only servers.  Currently Crowd stores directory config in the database which makes it difficult to specify different LDAP instances.     The option currently considered is to provide one read only LDAP per instance of Crowd. This would require the ability to externalise the directory config.  ",Suggestion,,Closed,"2012-11-29 04:07:02","2012-11-29 04:07:02",2
"Atlassian Crowd","Support for WebSudo","We currently have a requirement to supply WebSudo capability to applications that we are protecting with Crowd i.e the ability to re-authenticate for admin functions.     I was thinking that we may be able to leverage Crowd to provide this capability. ",Suggestion,,Closed,"2012-11-29 04:00:38","2012-11-29 04:00:38",2
"Atlassian Crowd","Broken markup for creating delegated authentication directories","The page footer does not stay attached to the bottom of the window when creating delegated authentication directories.    Also, the 'permissions' tab appears empty.",Bug,Medium,Closed,"2012-11-23 04:30:51","2012-11-23 04:30:51",1
"Atlassian Crowd","Upgrading from Java 1.6 to 1.7 fails due to dependencies recorded in the OSGi cache","h5. Symptoms    If Crowd has been running with JDK 1.6 in the past, and then is changed to JDK 1.7, some plugins will fail to load, due to cached dependencies.    The following message appears in the log file:    {code:none}2012-10-31 09:13:09,641 main ERROR [atlassian.plugin.manager.PluginEnabler] Unable to enable plugin crowd-rest-plugin  com.atlassian.plugin.osgi.container.OsgiContainerException: Cannot start plugin: crowd-rest-plugin   at com.atlassian.plugin.osgi.factory.OsgiPlugin.enableInternal(OsgiPlugin.java:430)   at com.atlassian.plugin.impl.AbstractPlugin.enable(AbstractPlugin.java:237)   at com.atlassian.plugin.impl.AbstractDelegatingPlugin.enable(AbstractDelegatingPlugin.java:213)   at com.atlassian.plugin.manager.PluginEnabler.actualEnable(PluginEnabler.java:114)   at com.atlassian.plugin.manager.PluginEnabler.enable(PluginEnabler.java:99)   at com.atlassian.plugin.manager.DefaultPluginManager.addPlugins(DefaultPluginManager.java:713)   at com.atlassian.plugin.manager.DefaultPluginManager.init(DefaultPluginManager.java:166)   at com.atlassian.crowd.plugin.CrowdPluginManager.init(CrowdPluginManager.java:69)   at com.atlassian.crowd.plugin.CrowdPluginManager.onApplicationStartedEvent(CrowdPluginManager.java:82)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:601)   at com.atlassian.event.internal.SingleParameterMethodListenerInvoker.invoke(SingleParameterMethodListenerInvoker.java:36)   at com.atlassian.event.internal.AsynchronousAbleEventDispatcher$2.run(AsynchronousAbleEventDispatcher.java:60)   at com.atlassian.event.internal.AsynchronousAbleEventDispatcher$1.execute(AsynchronousAbleEventDispatcher.java:28)   at com.atlassian.event.internal.AsynchronousAbleEventDispatcher.dispatch(AsynchronousAbleEventDispatcher.java:56)   at com.atlassian.event.internal.EventPublisherImpl.invokeListeners(EventPublisherImpl.java:151)   at com.atlassian.event.internal.EventPublisherImpl.publish(EventPublisherImpl.java:70)   at com.atlassian.crowd.console.listener.StartupListener.contextInitialized(StartupListener.java:106)   at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4205)   at org.apache.catalina.core.StandardContext.start(StandardContext.java:4704)   at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:799)   at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:779)   at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:601)   at org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.java:675)   at org.apache.catalina.startup.HostConfig.deployDescriptors(HostConfig.java:601)   at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:502)   at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1315)   at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:324)   at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:142)   at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1061)   at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)   at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)   at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)   at org.apache.catalina.core.StandardService.start(StandardService.java:525)   at org.apache.catalina.core.StandardServer.start(StandardServer.java:754)   at org.apache.catalina.startup.Catalina.start(Catalina.java:595)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:601)   at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289)   at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414)  Caused by: org.osgi.framework.BundleException: Unresolved constraint in bundle com.atlassian.crowd.rest-plugin [18]: Unable to resolve 18.0: missing requirement [18.0] package; (&(package=com.atlassian.plugins.rest.common)(version>=2.5.1.1)) [caused by: Unable to resolve 13.0: missing requirement [13.0] package; (&(package=javax.activation)(version>=0.0.0.1_006_JavaSE)(version<=0.0.0.1_006_JavaSE))]   at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3409)   at org.apache.felix.framework.Felix.startBundle(Felix.java:1709)   at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:905)   at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:892)   at com.atlassian.plugin.osgi.factory.OsgiPlugin.enableInternal(OsgiPlugin.java:402)   ... 43 more  {code}    h5. Workaround    Please see the KB here: https://confluence.atlassian.com/display/CROWDKB/Crowd+2.5+unable+to+be+used+after+upgrading+to+JDK+1.7",Bug,Low,Closed,"2012-11-01 03:49:41","2012-11-01 03:49:41",0.5
"Atlassian Crowd","IPV6 address resolved with scoped interface identifier needs to be stripped.","Steps to Reproduce.  1. Go to applications tab and add a new application.  2. In the next step try resolving a local address with ipv6 enabled. Try proceeding and you should get a invalid remote address error.    Expected behaviour:  Resolved IP address should not included the scoped interface identifier.",Bug,Low,Closed,"2012-10-25 00:26:08","2012-10-25 00:26:08",1
"Atlassian Crowd","Improve error message when 'Test search' fails","When the combination of User DN prefix and Base DN fails to parse as a valid LDAP name, the following message is displayed on screen (see attachment): No results were found from your search. org.springframework.ldap.NameNotFoundException: [LDAP: error code 32 - No Such Object]; nested exception is javax.naming.NameNotFoundException: [LDAP: error code 32 - No Such Object]; remaining name '/'.    A better error message should inform about the invalid name, e.g., User Search DN could not be parsed: Invalid name: obviouslywrong,dc=example,dc=org.    Steps to reproduce:  # Create or update a LDAP connector.  # In field User DN, enter some text that does not parse as a valid component of a DN (see picture).  # Push Test search.",Suggestion,,"Under Consideration","2012-10-24 22:58:29","2012-10-24 22:58:29",1
"Atlassian Crowd","Email addresses with trailing/leading white space should return error","Crowd should return error on creating users with trailing/leading characters on usernames and emails.",Suggestion,,Closed,"2012-10-18 11:35:18","2012-10-18 11:35:18",0.5
"Atlassian Crowd","Crowd leaks the value of the HTTP only 'crowd.token_key' cookie on the crowd/console/500.jsp page","<EMAIL> reported the following vulnerability:  == Type ==  Information Disclosure    == Product ==  Atlassian Crowd    == Severity ==  Medium    == Description ==  The crowd.token_key cookie, used as a token to authenticate on all Atlassian applications, is marked as HttpOnly.  However, the Crowd 500 error page (/crowd/console/500.jsp) displays this cookie?s value, breaking the HttpOnly behavior.",Bug,Low,Closed,"2012-10-17 06:04:24","2012-10-17 06:04:24",3
"Atlassian Crowd","Show a clearer error when an UnknownHostException is due to a node referral","Crowd shows an {{UnknownHostException}} when the hostname given for a connection can't be resolved, but also when a node referral points to a host that can't be resolved. It would be better to make a clear distinction, so users know that turning off Use Node Referrals may help them to use that directory.    Detection would need to be a heuristic.",Suggestion,,Closed,"2012-10-16 03:12:04","2012-10-16 03:12:04",1
"Atlassian Crowd","Creating new users using Crowd REST ignores <attributes> element","When a new user is created by posting to http://localhost:8095/crowd/rest/usermanagement/latest/user the new user is created without any of the attributes specified in the XML. For example:        It would be nice to be able to create a new user with attributes with a single REST call, without having to call /user/attributes separately.",Suggestion,,Closed,"2012-09-13 08:23:56","2012-09-13 08:23:56",0
"Atlassian Crowd","CrowdHttpTokenHelperImpl.java doesn't search cookies correctly","CrowdHttpTokenHelperImpl.java:67 searches for the Crowd SSO token in cookies presented with the request. It does this by iterating over the cookies and exiting on the first cookie of the right name. This means that if two cookies with the same name - but different domains - are present, the one that Crowd tests is arbitrary.     Crowd should either:  1. search cookies in order from longest domain to shortest (so more specific tokens override less specific ones)  OR  2. return a set of SSO tokens to test rather than just one (so that override behaviour is controlled higher up).    This is a pretty esoteric bug, requiring different crowd servers servicing different overlapping domain namespaces (in my case, a test Crowd instance handling requests from tank.sydney.atlassian.com, and the global Crowd instance handling .atlassian.com)        ",Bug,Low,Closed,"2012-07-23 07:15:02","2012-07-23 07:15:02",1
"Atlassian Crowd","Supported platforms - Postgres 9.2 ","Request from support ticket https://support.atlassian.com/browse/CWDSUP-6532 to certify for compatibility with Crowd 2.4x",Suggestion,,Closed,"2012-05-16 21:50:44","2012-05-16 21:50:44",1
"Atlassian Crowd","Unable to login to JIRA/Confluence with a Crowd login which is aliased ","This might better belong in JIRA but as it affects both JIRA and Confluence I suspect it may be related to Crowd implementation in these products.      If you create the following user setup:  * Crowd - <EMAIL>  * JIRA - bhaire2    Then you enable SSO and hook up Crowd and JIRA and alias brendan.haire@atlassian to be bhaire2 in JIRA you are able to login to Crowd and then have SSO across to JIRA.     However, if you attempt to login to JIRA with <EMAIL> (rather than the actual user name bhaire2) you are presented with the following error (see attached Screen Shot 2012-04-13 at 4.06.14 PM.png):    2012-04-13 14:14:29,408 http-8080-5 ERROR      [500ErrorPage.jsp] Exception caught in 500 page user should not be null!  com.atlassian.jira.util.dbc.Assertions$NullArgumentException: user should not be null!   at com.atlassian.jira.util.dbc.Assertions.notNull(Assertions.java:28)   at com.atlassian.jira.security.login.LoginManagerImpl.authorise(LoginManagerImpl.java:140)   at com.atlassian.jira.security.JiraRoleMapper.canLogin(JiraRoleMapper.java:46)   at com.atlassian.seraph.auth.DefaultAuthenticator.isAuthorised(DefaultAuthenticator.java:229)   at com.atlassian.seraph.auth.DefaultAuthenticator.authoriseUserAndEstablishSession(DefaultAuthenticator.java:197)   at com.atlassian.seraph.auth.DefaultAuthenticator.login(DefaultAuthenticator.java:102)   at com.atlassian.crowd.integration.seraph.v25.CrowdAuthenticator.login(CrowdAuthenticator.java:135)   at com.atlassian.seraph.filter.PasswordBasedLoginFilter.runAuthentication(PasswordBasedLoginFilter.java:127)   at com.atlassian.seraph.filter.PasswordBasedLoginFilter.login(PasswordBasedLoginFilter.java:72)   at com.atlassian.seraph.filter.BaseLoginFilter.doFilter(BaseLoginFilter.java:130)   at com.atlassian.jira.web.filters.JiraLoginFilter.doFilter(JiraLoginFilter.java:70)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:46)   at com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:66)   at com.atlassian.oauth.serviceprovider.internal.servlet.OAuthFilter.doFilter(OAuthFilter.java:71)   at com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:74)   at com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:42)   at com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:66)   at com.atlassian.plugins.rest.module.servlet.RestSeraphFilter.doFilter(RestSeraphFilter.java:40)   at com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:74)   at com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:42)   at com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:77)   at com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:63)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.johnson.filters.AbstractJohnsonFilter.doFilter(AbstractJohnsonFilter.java:71)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at org.tuckey.web.filters.urlrewrite.UrlRewriteFilter.doFilter(UrlRewriteFilter.java:350)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.gzipfilter.GzipFilter.doFilterInternal(GzipFilter.java:81)   at com.atlassian.gzipfilter.GzipFilter.doFilter(GzipFilter.java:51)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:46)   at com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:66)   at com.sysbliss.jira.plugins.workflow.servlet.JWDSendRedirectFilter.doFilter(JWDSendRedirectFilter.java:25)   at com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:74)   at com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:42)   at com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:77)   at com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:63)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.jira.web.filters.steps.ChainedFilterStepRunner.doFilter(ChainedFilterStepRunner.java:78)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.core.filters.cache.AbstractCachingFilter.doFilter(AbstractCachingFilter.java:33)   at com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:31)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.core.filters.encoding.AbstractEncodingFilter.doFilter(AbstractEncodingFilter.java:41)   at com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:31)   at com.atlassian.jira.web.filters.PathMatchingEncodingFilter.doFilter(PathMatchingEncodingFilter.java:45)   at com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:31)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.jira.web.monitor.ActiveRequestsFilter$PassToChainFilterFunc.doFilter(ActiveRequestsFilter.java:346)   at com.atlassian.jira.web.monitor.ActiveRequestsFilter$DebugLogFilterFunc.doFilter(ActiveRequestsFilter.java:463)   at com.atlassian.jira.web.monitor.ActiveRequestsFilter.doFilter(ActiveRequestsFilter.java:173)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.jira.startup.JiraStartupChecklistFilter.doFilter(JiraStartupChecklistFilter.java:75)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.multitenant.servlet.MultiTenantServletFilter.doFilter(MultiTenantServletFilter.java:91)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.jira.web.filters.steps.ChainedFilterStepRunner.doFilter(ChainedFilterStepRunner.java:78)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)   at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)   at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)   at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)   at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)   at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:554)   at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)   at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)   at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)   at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)   at java.lang.Thread.run(Thread.java:680)            ",Bug,Medium,Closed,"2012-04-13 07:07:25","2012-04-13 07:07:25",2
"Atlassian Crowd","Nested Groups do not work with Delegated Authentication Directory","h3.How to Reproduce:  # Create 2 groups in LDAP:  #* Group1  #* Group2   # Assign membership attributes to each Group as per below:  #* Group1  #** member: Group2  #** member: UserA  #* Group2   #** member: UserB  # Set up a Delegated Authentication Directory in Crowd, with the *Use Nested Groups* and *Sync Group Memberships* options checked  # Login to Crowd using UserB (Notice that only Group2 is synced, Group1 is not synced even though Group2 is child of Group1).   # Login with UserA this time (Notice that Group1 is also synced now, but if you try to check on the Nested Members of Group1, you'll find that only UserA is a Nested/Direct Member of Group1. What happened to UserB? UserB is only a member of Group2.     This indicates that the Nested Groups functionality of Delegated Authentication Directory does not really work at all.",Bug,Medium,Closed,"2011-12-14 12:57:05","2011-12-14 12:57:05",3
"Atlassian Crowd","Better error handling when a user attribute cannot be added","Adding a user attribute may fail: for example, an empty attribute name will fail under Oracle. The underlying exception is not currently caught and results in a System Error page with the stack trace.    Either  * fail early when the attribute name is empty  * catch and show a specific error for a NonTransientDataAccessException",Suggestion,,Closed,"2011-10-07 06:30:11","2011-10-07 06:30:11",1
"Atlassian Crowd","Applications that use the REST API are not shown in application sessions","See attached screenshots.",Bug,Low,Closed,"2011-10-05 18:21:45","2011-10-05 18:21:45",1
"Atlassian Crowd","Improve logging of remote exceptions in RestCrowdClient","The logging of error messages that are received in the REST response from Crowd by the RestCrowdClient doesn't make it clear that the error message is coming from the remote system. This is confusing and is leading to issues in support where it's hard to figure out what exactly is going on in which system.    An example from a recent FishEye support case. The customer opened a support issue with FishEye logs in which it appears that FishEye has run out of heap space:        While it is actually Crowd that has run out of heap space and is letting FishEye know what is wrong. A lot of confusion could have been avoided if the log had simply said: *Error message from Crowd: Java heap space*",Suggestion,,Closed,"2011-09-29 08:02:31","2011-09-29 08:02:31",0.5
"Atlassian Crowd","Wrong MIME types lead to uninterpreted css stylesheets","When deploying the current crowd WAR to jetty, crowd serves all contents as text/html. All current browser releases ignore css files with a mime type of text/html which leads to an destroyed layout of the User Console.    However, this error does not occur with the standalone release of crowd as Tomcat seems to correct this bug by overriding the mime types.    Looks like a Filter is setting wrong mime types for all served files...",Bug,Medium,Closed,"2011-09-05 15:22:23","2011-09-05 15:22:23",1
"Atlassian Crowd","Error while trying to import users and groups","When I tried to import users and groups I received the following error -      System Error    A system error has occurred please contact your administrator.   If this problem continues to occur please contact Atlassian by opening a support request with the following information:   - A description of your problem and what you were doing at the time it occurred   - Cut & paste the error and system information found below   - Attach the application server log file (if possible).   Cause :   java.lang.NullPointerException  Stack Trace :  java.lang.NullPointerException   at com.atlassian.crowd.importer.importers.BaseImporter.mapContainersToChildren(BaseImporter.java:128)   at com.atlassian.crowd.importer.importers.BaseImporter.importUserMemberships(BaseImporter.java:147)   at com.atlassian.crowd.importer.importers.BaseImporter.importUserToGroupMemberships(BaseImporter.java:266)   at com.atlassian.crowd.importer.importers.BaseImporter.importUsersGroupsAndMemberships(BaseImporter.java:248)   at com.atlassian.crowd.importer.importers.CsvImporter.importUsersGroupsAndMemberships(CsvImporter.java:27)   at com.atlassian.crowd.importer.manager.ImporterManagerImpl.performImport(ImporterManagerImpl.java:36)   at com.atlassian.crowd.console.action.dataimport.CsvConfirmation.doExecute(CsvConfirmation.java:38)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)   at java.lang.reflect.Method.invoke(Method.java:597)   at com.opensymphony.xwork.DefaultActionInvocation.invokeAction(DefaultActionInvocation.java:358)   at com.opensymphony.xwork.DefaultActionInvocation.invokeActionOnly(DefaultActionInvocation.java:218)   at com.opensymphony.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java:192)   at com.opensymphony.xwork.interceptor.AroundInterceptor.intercept(AroundInterceptor.java:31)   at com.opensymphony.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java:190)   at com.opensymphony.xwork.interceptor.AroundInterceptor.intercept(AroundInterceptor.java:31)   at com.opensymphony.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java:190)   at com.opensymphony.xwork.interceptor.AroundInterceptor.intercept(AroundInterceptor.java:31)   at com.opensymphony.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java:190)   at com.opensymphony.xwork.interceptor.AroundInterceptor.intercept(AroundInterceptor.java:31)   at com.opensymphony.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java:190)   at com.opensymphony.xwork.interceptor.AroundInterceptor.intercept(AroundInterceptor.java:31)   at com.opensymphony.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java:190)   at com.atlassian.xwork.interceptors.TransactionalInvocation.invokeAndHandleExceptions(TransactionalInvocation.java:72)   at com.atlassian.xwork.interceptors.TransactionalInvocation.invokeInTransaction(TransactionalInvocation.java:59)   at com.atlassian.xwork.interceptors.XWorkTransactionInterceptor.intercept(XWorkTransactionInterceptor.java:56)   at com.opensymphony.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java:190)   at com.opensymphony.xwork.DefaultActionProxy.execute(DefaultActionProxy.java:116)   at com.opensymphony.webwork.dispatcher.DispatcherUtils.serviceAction(DispatcherUtils.java:273)   at com.opensymphony.webwork.dispatcher.FilterDispatcher.doFilter(FilterDispatcher.java:202)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)   at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:46)   at com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:77)   at com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:63)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.opensymphony.webwork.dispatcher.ActionContextCleanUp.doFilter(ActionContextCleanUp.java:88)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:378)   at org.springframework.security.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)   at org.springframework.security.intercept.web.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)   at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)   at org.springframework.security.ui.ExceptionTranslationFilter.doFilterHttp(ExceptionTranslationFilter.java:101)   at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)   at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)   at org.springframework.security.providers.anonymous.AnonymousProcessingFilter.doFilterHttp(AnonymousProcessingFilter.java:105)   at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)   at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)   at org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter.doFilterHttp(SecurityContextHolderAwareRequestFilter.java:91)   at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)   at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)   at org.springframework.security.ui.AbstractProcessingFilter.doFilterHttp(AbstractProcessingFilter.java:277)   at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)   at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)   at org.springframework.security.ui.logout.LogoutFilter.doFilterHttp(LogoutFilter.java:89)   at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)   at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)   at org.springframework.security.context.HttpSessionContextIntegrationFilter.doFilterHttp(HttpSessionContextIntegrationFilter.java:235)   at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)   at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)   at org.springframework.security.util.FilterChainProxy.doFilter(FilterChainProxy.java:175)   at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:236)   at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)   at com.atlassian.crowd.console.filter.CrowdDelegatingFilterProxy.doFilter(CrowdDelegatingFilterProxy.java:38)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:46)   at com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:77)   at com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:63)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.crowd.console.filter.LicenceFilter.doFilterInternal(LicenceFilter.java:54)   at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)   at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:236)   at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)   at com.atlassian.crowd.console.filter.CrowdDelegatingFilterProxy.doFilter(CrowdDelegatingFilterProxy.java:38)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.johnson.filters.AbstractJohnsonFilter.doFilter(AbstractJohnsonFilter.java:71)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:70)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:198)   at com.atlassian.crowd.console.filter.CrowdOpenSessionInViewFilter.doFilterInternal(CrowdOpenSessionInViewFilter.java:26)   at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.crowd.plugin.web.filter.RequestCacheThreadLocalFilter.doFilter(RequestCacheThreadLocalFilter.java:31)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.gzipfilter.GzipFilter.doFilterInternal(GzipFilter.java:75)   at com.atlassian.gzipfilter.GzipFilter.doFilter(GzipFilter.java:51)   at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:236)   at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)   at com.atlassian.crowd.console.filter.CrowdDelegatingFilterProxy.doFilter(CrowdDelegatingFilterProxy.java:38)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:46)   at com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:77)   at com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:63)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.core.filters.cache.AbstractCachingFilter.doFilter(AbstractCachingFilter.java:33)   at com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:31)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.core.filters.encoding.AbstractEncodingFilter.doFilter(AbstractEncodingFilter.java:41)   at com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:31)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at com.atlassian.core.filters.encoding.AbstractEncodingFilter.doFilter(AbstractEncodingFilter.java:41)   at com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:31)   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)   at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)   at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)   at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)   at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)   at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)   at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)   at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:190)   at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:291)   at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:776)   at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:705)   at org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:898)   at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:690)   at java.lang.Thread.run(Thread.java:662)  Referer : https://icustomer.dsthealthsolutions.com/crowd/console/secure/dataimport/csvconfirm!default.action  Build Information :   Version : 2.2.4 (Build:#490 - 29-03-2011)  Memory Information :   Total Memory : 164 MB  Free Memory : 27 MB  Used Memory : 137 MB  Request Information :  - Request URL : https://icustomer.dsthealthsolutions.com/crowd/console/500.jsp  - Scheme : https  - Server : icustomer.dsthealthsolutions.com  - Port : 443  - URI : /crowd/console/500.jsp  - Context Path : /crowd  - - Servlet Path : /console/500.jsp  - - Path Info : null  - - Query String :     Request Attributes :  - javax.servlet.forward.request_uri : /crowd/console/secure/dataimport/csvconfirm!doExecute.action  - javax.servlet.forward.context_path : /crowd  - javax.servlet.forward.servlet_path : /console/secure/dataimport/csvconfirm!doExecute.action  - javax.servlet.forward.path_info : /console/500.jsp  - javax.servlet.error.status_code : 500  - javax.servlet.error.servlet_name : default  - javax.servlet.request.key_size : 256  - com.atlassian.gzipfilter.GzipFilter_already_filtered : true  - __cleanup_counter : 0  - com.atlassian.johnson.filters.JohnsonFilter_already_filtered : true  - gzipMimeTypes : text/.*,application/x-javascript,application/javascript,application/xml,application/xhtml\+xml  - com.atlassian.crowd.integration.http.HttpAuthenticator.REQUEST_SSO_COOKIE_COMMITTED : true  - javax.servlet.request.ssl_session : E801D6AB5F6CB79E5BA998EA51BE1359676C14DEC0F7A935E537EB67C79539F2  - javax.servlet.error.message :   - com.atlassian.gzipfilter.org.tuckey.web.filters.urlrewrite.RuleMatched : true  - webwork.valueStack : com.opensymphony.xwork.util.OgnlValueStack@23e6c353  - __sitemesh__filterapplied : true  - javax.servlet.request.cipher_suite : DHE-RSA-AES256-SHA  - javax.servlet.error.exception : javax.servlet.ServletException: java.lang.NullPointerException  - __spring_security_filterSecurityInterceptor_filterApplied : true  - javax.servlet.error.request_uri : /crowd/console/secure/dataimport/csvconfirm!doExecute.action  - crowd.token_key : 9BNvO1xg9dsxgO8pWnfH2A00    Request Parameters:   ",Bug,Medium,Closed,"2011-07-25 21:29:14","2011-07-25 21:29:14",2
"Atlassian Crowd","Accessing rest service from localhost results in HTTP Status 403","1. Bring up crowd using amps  2. Make use of the rest api from browser http://localhost:4990/crowd/rest/usermanagement/1/user?username=admin  3. Got the error message      The application that I use to access has these in remote addresses: <USER>managed.contegix.com, localhost, 127.0.0.1    Here is my /etc/hosts  ",Bug,Medium,Closed,"2011-05-11 05:27:15","2011-05-11 05:27:15",2
"Atlassian Crowd","Fix tests which are no longer Transactional","Some tests extend AbstractTransactionalDataSourceSpringContextTests, but no longer run in a single transaction. They should be modified to reflect this.",Suggestion,,Closed,"2011-05-06 05:33:37","2011-05-06 05:33:37",2
"Atlassian Crowd","Atlassian Importer should log error on Could not load database connection","When the database configuration for the importer is wrong, the UI shows an error: Could not load database connection. There's no more detail about whether the driver or the URL is wrong and the underlying error isn't recorded in the logs.    The underlying exception should be logged.",Suggestion,,Closed,"2011-04-13 02:43:58","2011-04-13 02:43:58",2
"Atlassian Crowd","Crowd doesn't have a README.txt file","So I just downloaded Crowd 2.2.2 and unpacked it and went into the extracted directory and there is no README.txt with instructions on how to install? A bit weird? Has Crowd ever had a readme?",Suggestion,,Closed,"2011-04-04 06:17:54","2011-04-04 06:17:54",0.5
"Atlassian Crowd","Empty password encryption selection","There is empty selection for password encryption field at http://localhost:8095/crowd/console/setup/directoryinternalsetup!update.action    So only one way to proceed setup was manually hack source HTML using FireBug",Bug,High,Closed,"2010-12-25 10:33:03","2010-12-25 10:33:03",3
"Atlassian Crowd","REST User.getDirectoryId() always returns 0","I`m using the RestClientCrowd for retrieving User details but the directoryId is never fetched, please add this to the user details. The User objects has the getDirectoryId() method this suggests that this should work.",Bug,Medium,Closed,"2010-12-10 10:32:01","2010-12-10 10:32:01",1
"Atlassian Crowd","Crowd fails to add sequential LIST_INDEX numbers to table CWD_USER_CREDENTIAL_RECORD","Crowd fails to add sequential LIST_INDEX numbers to table CWD_USER_CREDENTIAL_RECORD, setting the index to zero even if the user already has an entry, causing user deletion to fail.          ",Bug,Low,Closed,"2010-07-13 16:49:44","2010-07-13 16:49:44",2
"Atlassian Crowd","Make sure that the Admin will not enable *Secure SSO Cookie* if the web console is not being accessed via HTTPS",,Suggestion,,Closed,"2010-05-26 04:17:46","2010-05-26 04:17:46",1
"Atlassian Crowd","Cannot un-set ldap.password to return to anonymous bind","For various reasons, I have Crowd set up to do anonymous bind. That's fine, until Firefox does an autofill (Firefox's auto-fill seems to have become more aggressive since the field-rename in CWD-599). I can remove the ldap.userdn but not the ldap.password — a blank password apparently means don't modify. To fix this, I have to poke the database (good thing I'm not using HSQLDB).    Moreover, in addition to losing the password (CWD-1763), the test connection button also uses the password in the field instead of the one in the database. This means the Test Connection button will fail where it would otherwise succeed.    A simple (if slightly horrible) solution would be to treat {{\*\*\*\*\*\*\*\*}} as a string meaning whatever is in the database. This means it's impossible to set the password to eight asterisks, but that's something we can live with. It also means the test connection button can know when it has to pull the password out of the database.    Not quite sure which component this goes in; it's largely a UI problem.",Bug,Medium,Closed,"2010-04-22 18:19:53","2010-04-22 18:19:53",2
"Atlassian Crowd","CrowdID Client does not trim spaces before and after the URL","CrowdID Client does not trim spaces before and after the *OpenID Identified URL*, casuing the following error to be reproted (in the UI):      ",Bug,Low,Closed,"2010-02-28 23:12:26","2010-02-28 23:12:26",1
"Atlassian Crowd","Decouple Crowd's API from Spring","{{crowd-api}} has a direct dependency on {{atlassian-spring}} that brings in a lot of dependencies (including much of Spring). Breaking the dependency clarifies the separation between API and implementation.",Suggestion,,Closed,"2009-11-02 05:42:37","2009-11-02 05:42:37",2
"Atlassian Crowd","import users does not respect group memberships on first attempt","After creating a directory, importing users from a provider does not include group memberships on the first attempt.  If the import is attempted again, group memberships are added.    Import from JIRA:  {quote}2009-10-20 14:41:12,646 http-8095-3 INFO [crowd.importer.importers.BaseImporter] Importing 10 groups.  2009-10-20 14:41:13,215 http-8095-3 INFO [crowd.importer.importers.BaseImporter] Importing 2653 users.  2009-10-20 14:41:23,399 http-8095-3 INFO [crowd.importer.importers.BaseImporter] Importing 2766 group memberships.    2009-10-20 14:41:23,407 http-8095-3 ERROR [crowd.importer.importers.BaseImporter] Could not add memberships for group 'jira-administrators' as it does not exist in directory with ID: 557057  com.atlassian.crowd.integration.exception.ObjectNotFoundException: Failed to find entity of type [com.atlassian.crowd.integration.model.group.InternalGroup] with identifier [name <jira-administrators>, directoryId <557057>]          at com.atlassian.crowd.model.group.GroupDAOHibernate.findByName(GroupDAOHibernate.java:52)          at com.atlassian.crowd.integration.directory.internal.InternalDirectory.findGroupByName(InternalDirectory.java:561)          at com.atlassian.crowd.manager.directory.DirectoryManagerGeneric.findGroupByName(DirectoryManagerGeneric.java:379)          at com.atlassian.crowd.manager.directory.DirectoryManagerGeneric.addAllUsersToGroup(DirectoryManagerGeneric.java:1185)  .... repeat for all 10 groups    Now try the import again to the same directory -     2009-10-20 14:45:37,454 http-8095-3 INFO [crowd.importer.importers.BaseImporter] Importing 10 groups.  2009-10-20 14:45:37,457 http-8095-3 INFO [crowd.manager.directory.DirectoryManagerGeneric] Group <com.atlassian.crowd.integration.model.group.GroupTemplate@7bceb29e[name=Accounting,directoryId=557057,active=true,type=GROUP,description=Accounting]> already exists in directory. Skipping over this entity.  .... repeat for all 10 groups  2009-10-20 14:45:37,698 http-8095-3 INFO [crowd.importer.importers.BaseImporter] Importing 2653 users.  2009-10-20 14:46:11,037 http-8095-3 INFO [crowd.manager.directory.DirectoryManagerGeneric] User <com.atlassian.crowd.integration.model.user.UserTemplateWithCredentialAndAttributes@32f12531[name=john citizen,directoryId=557057,active=true,emailAddress=<EMAIL>,firstName=John,lastName=Citizen,displayName=John Citizen,iconLocation=<null>]> already exists in directory. Skipping over this entity.  .... repeat for all 2653 users  2009-10-20 14:46:11,050 http-8095-3 INFO [crowd.importer.importers.BaseImporter] Importing 2766 group memberships.  {quote}  ",Bug,Medium,"Long Term Backlog","2009-10-20 23:05:22","2009-10-20 23:05:22",3
"Atlassian Crowd","REST API could offer list of services for requests sent to the root URL","The REST API could offer list of services for requests sent to the root URL.    For example, if the request URL is the root:  {code:html}  http://localhost:8095/crowd/rest/admin/latest/  {code}  or   {code:html}  http://localhost:8095/crowd/rest/admin/1/  {code}    Then the response could contain the list of available services, something like:  {code:xml}  <resources>    <resource name=directory>      <link rel=self href=http://localhost:8095/crowd/rest/admin/latest/directory />    </resource>  <resource name=login>      <link rel=self href=http://localhost:8095/crowd/rest/admin/latest/login />    </resource>  </resources>  {code}    Bamboo is planning something similar. See the [docs|http://confluence.atlassian.com/display/BAMBOO/REV230+-+Bamboo+REST+Resources].",Suggestion,,Closed,"2009-07-12 23:35:40","2009-07-12 23:35:40",4
"Atlassian Crowd","Provide support for Active Directory Primary group memberships (eg. Domain Users, Domain Admins)","Since users are automatically added to Domain Users, it would be nice if this group could be used by Crowdified applications like JIRA or Confluence.    (For clarity, the issue is not specific to Domain Users. The issue is that a user's membership of their primary group is not recognised by Crowd. In most cases, this will be Domain Users, as this is the default primary group.)    Articles of Interest:      http://blogs.msdn.com/alextch/archive/2007/06/18/sample-java-application-that-retrieves-group-membership-of-an-active-directory-user-account.aspx      http://forums.sun.com/thread.jspa?threadID=581444&tstart=150    ",Suggestion,,Closed,"2008-10-22 04:30:15","2008-10-22 04:30:15",5
"Atlassian Crowd","Allow local Crowd groups to be associated with LDAP users.","For those that can't modify their LDAP server, this would provide an easier option than the [current delegated directory configuration|http://confluence.atlassian.com/display/CROWD/Configuring+a+Delegated+Authentication+Directory] which requires re-importing of users/groups to reflect updates.      ",Suggestion,,Closed,"2008-10-20 03:15:16","2008-10-20 03:15:16",2
"Atlassian Crowd","When the maximum number of Principals is reached, Crowd Console should allow admin user to log in","We've reached the maximum number of Principals in Crowd for our license and now we can't even log in to the Administration Console as the Admin user to delete some of them.",Bug,Medium,"Long Term Backlog","2008-07-10 11:42:37","2008-07-10 11:42:37",6
"Atlassian Crowd","LDAP directory: error code 21 when attempting to update group with empty or whitespace description for the second time","When attempting to de-activate a group in OpenLDAP the following exception is thrown:        Also, when de-activating a user, the update succeeds but the box remains checked.  ",Bug,Medium,Closed,"2008-06-27 06:38:23","2008-06-27 06:38:23",3
"Atlassian Crowd","Misleading catch-all Invalid login message when Crowd is misconfigured","I have an apparently-misconfigured Crowd, where a login attempt generates this in the logs:        Bug #1: This apparently critical error message should be logged at ERROR or FATAL, not INFO.  Bug #2:  When I try to log in, Crowd returns a generic Invalid login message:    !invalidlogin.png!    If the problem is due to a misconfiguration, say so! Don't leave the end user thinking they mistyped their password when the server is broken.    ",Bug,Medium,Closed,"2008-05-08 03:43:53","2008-05-08 03:43:53",1
"Atlassian Crowd","Provide Crowd support for Active Directory's Account Disabled flag","It should be tied to Crowd's concept of an Active flag.",Suggestion,,Closed,"2008-04-14 05:56:40","2008-04-14 05:56:40",5
"Atlassian Crowd","Provide scheduled backup of Crowd database to XML","{panel:title=Atlassian Status as of 3 May 2013|borderStyle=solid|borderColor=#3C78B5| titleBGColor=#3C78B5| bgColor=#E7F4FA}    Hi everyone,    Again, thanks for your feedback and continued support and apologies for the delayed update for this ticket.    The good news is that we're picking up this piece of work for an upcoming release of Crowd, so please be patient as exciting development is planned to start! We'll let you know of any further updates on this ticket, so I encourage you to keep an eye out.     Regards,  <USER> Crowd Product Manager    {panel}    Same sort of functionality that Jira/Confluence provides",Suggestion,,Closed,"2006-12-21 10:57:56","2006-12-21 10:57:56",5
